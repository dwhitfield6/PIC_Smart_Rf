

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Mar 13 14:57:27 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4685
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	idataBANK3,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   162                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   163                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   164                           	psect	param1,global,class=BANK1,space=1,delta=1
   165  0000                     
   166                           	psect	idataBANK1
   167  001160                     __pidataBANK1:
   168                           	opt stack 0
   169                           
   170                           ;initializer for _LCDclearCount
   171  001160  61A8               	dw	25000
   172  001162  0000               	dw	0
   173                           
   174                           ;initializer for _BlueLEDcount
   175  001164  0019               	dw	25
   176                           
   177                           	psect	idataBANK3
   178  001094                     __pidataBANK3:
   179                           	opt stack 0
   180                           
   181                           ;initializer for _Version
   182  001094  31                 	db	49
   183  001095  2E                 	db	46
   184  001096  30                 	db	48
   185  001097  5F                 	db	95
   186  001098  44                 	db	68
   187  001099  57                 	db	87
   188  00109A  30                 	db	48
   189  00109B  61                 	db	97
   190  00109C  00                 	db	0
   191  00109D  00                 	db	0
   192  00109E  00                 	db	0
   193  00109F  00                 	db	0
   194  0010A0  00                 	db	0
   195  0010A1  00                 	db	0
   196  0010A2  00                 	db	0
   197  0010A3  00                 	db	0
   198  0010A4  00                 	db	0
   199  0010A5  00                 	db	0
   200  0010A6  00                 	db	0
   201  0010A7  00                 	db	0
   202                           
   203                           	psect	mediumconst
   204  00ECC0                     __pmediumconst:
   205                           	opt stack 0
   206  00ECC0  00                 	db	0
   207  00ECC1                     _octpowers:
   208                           	opt stack 0
   209  00ECC1  0001               	dw	1
   210  00ECC3  0000               	dw	0
   211  00ECC5  0008               	dw	8
   212  00ECC7  0000               	dw	0
   213  00ECC9  0040               	dw	64
   214  00ECCB  0000               	dw	0
   215  00ECCD  0200               	dw	512
   216  00ECCF  0000               	dw	0
   217  00ECD1  1000               	dw	4096
   218  00ECD3  0000               	dw	0
   219  00ECD5  8000               	dw	32768
   220  00ECD7  0000               	dw	0
   221  00ECD9  0000               	dw	0
   222  00ECDB  0004               	dw	4
   223  00ECDD  0000               	dw	0
   224  00ECDF  0020               	dw	32
   225  00ECE1  0000               	dw	0
   226  00ECE3  0100               	dw	256
   227  00ECE5  0000               	dw	0
   228  00ECE7  0800               	dw	2048
   229  00ECE9  0000               	dw	0
   230  00ECEB  4000               	dw	16384
   231  00ECED  0000               	dw	0
   232  00ECEF  0000               	dw	0
   233  00ECF1                     __end_of_octpowers:
   234                           	opt stack 0
   235  00ECF1                     _dpowers:
   236                           	opt stack 0
   237  00ECF1  0001               	dw	1
   238  00ECF3  0000               	dw	0
   239  00ECF5  000A               	dw	10
   240  00ECF7  0000               	dw	0
   241  00ECF9  0064               	dw	100
   242  00ECFB  0000               	dw	0
   243  00ECFD  03E8               	dw	1000
   244  00ECFF  0000               	dw	0
   245  00ED01  2710               	dw	10000
   246  00ED03  0000               	dw	0
   247  00ED05  86A0               	dw	34464
   248  00ED07  0001               	dw	1
   249  00ED09  4240               	dw	16960
   250  00ED0B  000F               	dw	15
   251  00ED0D  9680               	dw	38528
   252  00ED0F  0098               	dw	152
   253  00ED11  E100               	dw	57600
   254  00ED13  05F5               	dw	1525
   255  00ED15  CA00               	dw	51712
   256  00ED17  3B9A               	dw	15258
   257  00ED19                     __end_of_dpowers:
   258                           	opt stack 0
   259  00ED19                     _hexpowers:
   260                           	opt stack 0
   261  00ED19  0001               	dw	1
   262  00ED1B  0000               	dw	0
   263  00ED1D  0010               	dw	16
   264  00ED1F  0000               	dw	0
   265  00ED21  0100               	dw	256
   266  00ED23  0000               	dw	0
   267  00ED25  1000               	dw	4096
   268  00ED27  0000               	dw	0
   269  00ED29  0000               	dw	0
   270  00ED2B  0001               	dw	1
   271  00ED2D  0000               	dw	0
   272  00ED2F  0010               	dw	16
   273  00ED31  0000               	dw	0
   274  00ED33  0100               	dw	256
   275  00ED35  0000               	dw	0
   276  00ED37  1000               	dw	4096
   277  00ED39                     __end_of_hexpowers:
   278                           	opt stack 0
   279  00ED39                     _TXToiletAlexBathroom:
   280                           	opt stack 0
   281  00ED39  00                 	db	0
   282  00ED3A  00                 	db	0
   283  00ED3B  00                 	db	0
   284  00ED3C  00                 	db	0
   285  00ED3D  00                 	db	0
   286  00ED3E  00                 	db	0
   287  00ED3F  00                 	db	0
   288  00ED40  00                 	db	0
   289  00ED41  00                 	db	0
   290  00ED42  00                 	db	0
   291  00ED43  00                 	db	0
   292  00ED44  02                 	db	2
   293  00ED45                     __end_of_TXToiletAlexBathroom:
   294                           	opt stack 0
   295  00ED45                     _TXToiletMyBathroom:
   296                           	opt stack 0
   297  00ED45  00                 	db	0
   298  00ED46  00                 	db	0
   299  00ED47  00                 	db	0
   300  00ED48  00                 	db	0
   301  00ED49  00                 	db	0
   302  00ED4A  00                 	db	0
   303  00ED4B  00                 	db	0
   304  00ED4C  00                 	db	0
   305  00ED4D  00                 	db	0
   306  00ED4E  00                 	db	0
   307  00ED4F  00                 	db	0
   308  00ED50  01                 	db	1
   309  00ED51                     __end_of_TXToiletMyBathroom:
   310                           	opt stack 0
   311  00ED51                     _TXdataBedroomCLOSED:
   312                           	opt stack 0
   313  00ED51  00                 	db	0
   314  00ED52  00                 	db	0
   315  00ED53  00                 	db	0
   316  00ED54  00                 	db	0
   317  00ED55  00                 	db	0
   318  00ED56  00                 	db	0
   319  00ED57  00                 	db	0
   320  00ED58  00                 	db	0
   321  00ED59  00                 	db	0
   322  00ED5A  01                 	db	1
   323  00ED5B  00                 	db	0
   324  00ED5C  00                 	db	0
   325  00ED5D                     __end_of_TXdataBedroomCLOSED:
   326                           	opt stack 0
   327  00ED5D                     _TXdataBedroomOPENED:
   328                           	opt stack 0
   329  00ED5D  00                 	db	0
   330  00ED5E  00                 	db	0
   331  00ED5F  00                 	db	0
   332  00ED60  00                 	db	0
   333  00ED61  00                 	db	0
   334  00ED62  00                 	db	0
   335  00ED63  00                 	db	0
   336  00ED64  00                 	db	0
   337  00ED65  00                 	db	0
   338  00ED66  02                 	db	2
   339  00ED67  00                 	db	0
   340  00ED68  00                 	db	0
   341  00ED69                     __end_of_TXdataBedroomOPENED:
   342                           	opt stack 0
   343  00ED69                     _TXdataFrontCLOSED:
   344                           	opt stack 0
   345  00ED69  00                 	db	0
   346  00ED6A  00                 	db	0
   347  00ED6B  00                 	db	0
   348  00ED6C  00                 	db	0
   349  00ED6D  00                 	db	0
   350  00ED6E  00                 	db	0
   351  00ED6F  00                 	db	0
   352  00ED70  00                 	db	0
   353  00ED71  00                 	db	0
   354  00ED72  00                 	db	0
   355  00ED73  02                 	db	2
   356  00ED74  00                 	db	0
   357  00ED75                     __end_of_TXdataFrontCLOSED:
   358                           	opt stack 0
   359  00ED75                     _TXdataFrontOPENED:
   360                           	opt stack 0
   361  00ED75  00                 	db	0
   362  00ED76  00                 	db	0
   363  00ED77  00                 	db	0
   364  00ED78  00                 	db	0
   365  00ED79  00                 	db	0
   366  00ED7A  00                 	db	0
   367  00ED7B  00                 	db	0
   368  00ED7C  00                 	db	0
   369  00ED7D  00                 	db	0
   370  00ED7E  00                 	db	0
   371  00ED7F  01                 	db	1
   372  00ED80  00                 	db	0
   373  00ED81                     __end_of_TXdataFrontOPENED:
   374                           	opt stack 0
   375  00ED81                     _TXdataLabCLOSED:
   376                           	opt stack 0
   377  00ED81  00                 	db	0
   378  00ED82  00                 	db	0
   379  00ED83  00                 	db	0
   380  00ED84  00                 	db	0
   381  00ED85  00                 	db	0
   382  00ED86  00                 	db	0
   383  00ED87  00                 	db	0
   384  00ED88  00                 	db	0
   385  00ED89  02                 	db	2
   386  00ED8A  00                 	db	0
   387  00ED8B  00                 	db	0
   388  00ED8C  00                 	db	0
   389  00ED8D                     __end_of_TXdataLabCLOSED:
   390                           	opt stack 0
   391  00ED8D                     _TXdataLabOPENED:
   392                           	opt stack 0
   393  00ED8D  00                 	db	0
   394  00ED8E  00                 	db	0
   395  00ED8F  00                 	db	0
   396  00ED90  00                 	db	0
   397  00ED91  00                 	db	0
   398  00ED92  00                 	db	0
   399  00ED93  00                 	db	0
   400  00ED94  00                 	db	0
   401  00ED95  01                 	db	1
   402  00ED96  00                 	db	0
   403  00ED97  00                 	db	0
   404  00ED98  00                 	db	0
   405  00ED99                     __end_of_TXdataLabOPENED:
   406                           	opt stack 0
   407  00ED99                     _Aux2OFF:
   408                           	opt stack 0
   409  00ED99  00                 	db	0
   410  00ED9A  01                 	db	1
   411  00ED9B  01                 	db	1
   412  00ED9C  00                 	db	0
   413  00ED9D  01                 	db	1
   414  00ED9E  00                 	db	0
   415  00ED9F  00                 	db	0
   416  00EDA0  00                 	db	0
   417  00EDA1  00                 	db	0
   418  00EDA2  00                 	db	0
   419  00EDA3  00                 	db	0
   420  00EDA4  01                 	db	1
   421  00EDA5  00                 	db	0
   422  00EDA6  00                 	db	0
   423  00EDA7  00                 	db	0
   424  00EDA8  01                 	db	1
   425  00EDA9                     __end_of_Aux2OFF:
   426                           	opt stack 0
   427  00EDA9                     _Aux2ON:
   428                           	opt stack 0
   429  00EDA9  00                 	db	0
   430  00EDAA  01                 	db	1
   431  00EDAB  01                 	db	1
   432  00EDAC  00                 	db	0
   433  00EDAD  01                 	db	1
   434  00EDAE  00                 	db	0
   435  00EDAF  00                 	db	0
   436  00EDB0  00                 	db	0
   437  00EDB1  00                 	db	0
   438  00EDB2  00                 	db	0
   439  00EDB3  01                 	db	1
   440  00EDB4  00                 	db	0
   441  00EDB5  00                 	db	0
   442  00EDB6  00                 	db	0
   443  00EDB7  00                 	db	0
   444  00EDB8  01                 	db	1
   445  00EDB9                     __end_of_Aux2ON:
   446                           	opt stack 0
   447  00EDB9                     _AuxOFF:
   448                           	opt stack 0
   449  00EDB9  00                 	db	0
   450  00EDBA  01                 	db	1
   451  00EDBB  01                 	db	1
   452  00EDBC  00                 	db	0
   453  00EDBD  01                 	db	1
   454  00EDBE  00                 	db	0
   455  00EDBF  01                 	db	1
   456  00EDC0  00                 	db	0
   457  00EDC1  00                 	db	0
   458  00EDC2  00                 	db	0
   459  00EDC3  00                 	db	0
   460  00EDC4  00                 	db	0
   461  00EDC5  00                 	db	0
   462  00EDC6  00                 	db	0
   463  00EDC7  00                 	db	0
   464  00EDC8  00                 	db	0
   465  00EDC9                     __end_of_AuxOFF:
   466                           	opt stack 0
   467  00EDC9                     _AuxON:
   468                           	opt stack 0
   469  00EDC9  00                 	db	0
   470  00EDCA  01                 	db	1
   471  00EDCB  01                 	db	1
   472  00EDCC  00                 	db	0
   473  00EDCD  01                 	db	1
   474  00EDCE  00                 	db	0
   475  00EDCF  00                 	db	0
   476  00EDD0  01                 	db	1
   477  00EDD1  00                 	db	0
   478  00EDD2  00                 	db	0
   479  00EDD3  00                 	db	0
   480  00EDD4  00                 	db	0
   481  00EDD5  00                 	db	0
   482  00EDD6  00                 	db	0
   483  00EDD7  00                 	db	0
   484  00EDD8  00                 	db	0
   485  00EDD9                     __end_of_AuxON:
   486                           	opt stack 0
   487  00EDD9                     _BedOFF:
   488                           	opt stack 0
   489  00EDD9  00                 	db	0
   490  00EDDA  01                 	db	1
   491  00EDDB  01                 	db	1
   492  00EDDC  00                 	db	0
   493  00EDDD  01                 	db	1
   494  00EDDE  00                 	db	0
   495  00EDDF  00                 	db	0
   496  00EDE0  00                 	db	0
   497  00EDE1  00                 	db	0
   498  00EDE2  01                 	db	1
   499  00EDE3  00                 	db	0
   500  00EDE4  00                 	db	0
   501  00EDE5  00                 	db	0
   502  00EDE6  00                 	db	0
   503  00EDE7  00                 	db	0
   504  00EDE8  00                 	db	0
   505  00EDE9                     __end_of_BedOFF:
   506                           	opt stack 0
   507  00EDE9                     _BedON:
   508                           	opt stack 0
   509  00EDE9  00                 	db	0
   510  00EDEA  01                 	db	1
   511  00EDEB  01                 	db	1
   512  00EDEC  00                 	db	0
   513  00EDED  01                 	db	1
   514  00EDEE  00                 	db	0
   515  00EDEF  00                 	db	0
   516  00EDF0  00                 	db	0
   517  00EDF1  01                 	db	1
   518  00EDF2  00                 	db	0
   519  00EDF3  00                 	db	0
   520  00EDF4  00                 	db	0
   521  00EDF5  00                 	db	0
   522  00EDF6  00                 	db	0
   523  00EDF7  00                 	db	0
   524  00EDF8  00                 	db	0
   525  00EDF9                     __end_of_BedON:
   526                           	opt stack 0
   527  00EDF9                     _SubLightOFF:
   528                           	opt stack 0
   529  00EDF9  00                 	db	0
   530  00EDFA  01                 	db	1
   531  00EDFB  01                 	db	1
   532  00EDFC  00                 	db	0
   533  00EDFD  01                 	db	1
   534  00EDFE  00                 	db	0
   535  00EDFF  00                 	db	0
   536  00EE00  00                 	db	0
   537  00EE01  00                 	db	0
   538  00EE02  00                 	db	0
   539  00EE03  00                 	db	0
   540  00EE04  01                 	db	1
   541  00EE05  00                 	db	0
   542  00EE06  01                 	db	1
   543  00EE07  00                 	db	0
   544  00EE08  00                 	db	0
   545  00EE09                     __end_of_SubLightOFF:
   546                           	opt stack 0
   547  00EE09                     _SubLightON:
   548                           	opt stack 0
   549  00EE09  00                 	db	0
   550  00EE0A  01                 	db	1
   551  00EE0B  01                 	db	1
   552  00EE0C  00                 	db	0
   553  00EE0D  01                 	db	1
   554  00EE0E  00                 	db	0
   555  00EE0F  00                 	db	0
   556  00EE10  00                 	db	0
   557  00EE11  00                 	db	0
   558  00EE12  00                 	db	0
   559  00EE13  01                 	db	1
   560  00EE14  00                 	db	0
   561  00EE15  00                 	db	0
   562  00EE16  01                 	db	1
   563  00EE17  00                 	db	0
   564  00EE18  00                 	db	0
   565  00EE19                     __end_of_SubLightON:
   566                           	opt stack 0
   567  00EE19                     _fanOFF:
   568                           	opt stack 0
   569  00EE19  00                 	db	0
   570  00EE1A  01                 	db	1
   571  00EE1B  01                 	db	1
   572  00EE1C  00                 	db	0
   573  00EE1D  01                 	db	1
   574  00EE1E  00                 	db	0
   575  00EE1F  00                 	db	0
   576  00EE20  00                 	db	0
   577  00EE21  00                 	db	0
   578  00EE22  00                 	db	0
   579  00EE23  00                 	db	0
   580  00EE24  01                 	db	1
   581  00EE25  00                 	db	0
   582  00EE26  00                 	db	0
   583  00EE27  00                 	db	0
   584  00EE28  00                 	db	0
   585  00EE29                     __end_of_fanOFF:
   586                           	opt stack 0
   587  00EE29                     _fanON:
   588                           	opt stack 0
   589  00EE29  00                 	db	0
   590  00EE2A  01                 	db	1
   591  00EE2B  01                 	db	1
   592  00EE2C  00                 	db	0
   593  00EE2D  01                 	db	1
   594  00EE2E  00                 	db	0
   595  00EE2F  00                 	db	0
   596  00EE30  00                 	db	0
   597  00EE31  00                 	db	0
   598  00EE32  00                 	db	0
   599  00EE33  01                 	db	1
   600  00EE34  00                 	db	0
   601  00EE35  00                 	db	0
   602  00EE36  00                 	db	0
   603  00EE37  00                 	db	0
   604  00EE38  00                 	db	0
   605  00EE39                     __end_of_fanON:
   606                           	opt stack 0
   607  00EE39                     _TXdataD:
   608                           	opt stack 0
   609  00EE39  02                 	db	2
   610  00EE3A  02                 	db	2
   611  00EE3B  02                 	db	2
   612  00EE3C  02                 	db	2
   613  00EE3D  02                 	db	2
   614  00EE3E  02                 	db	2
   615  00EE3F  00                 	db	0
   616  00EE40  00                 	db	0
   617  00EE41  01                 	db	1
   618  00EE42  00                 	db	0
   619  00EE43  00                 	db	0
   620  00EE44  00                 	db	0
   621  00EE45                     __end_of_TXdataD:
   622                           	opt stack 0
   623  00EE45                     _TXdataE:
   624                           	opt stack 0
   625  00EE45  00                 	db	0
   626  00EE46  02                 	db	2
   627  00EE47  02                 	db	2
   628  00EE48  02                 	db	2
   629  00EE49  02                 	db	2
   630  00EE4A  02                 	db	2
   631  00EE4B  00                 	db	0
   632  00EE4C  00                 	db	0
   633  00EE4D  01                 	db	1
   634  00EE4E  00                 	db	0
   635  00EE4F  00                 	db	0
   636  00EE50  00                 	db	0
   637  00EE51                     __end_of_TXdataE:
   638                           	opt stack 0
   639  00EE51                     _TXdataF:
   640                           	opt stack 0
   641  00EE51  02                 	db	2
   642  00EE52  00                 	db	0
   643  00EE53  02                 	db	2
   644  00EE54  02                 	db	2
   645  00EE55  02                 	db	2
   646  00EE56  02                 	db	2
   647  00EE57  00                 	db	0
   648  00EE58  00                 	db	0
   649  00EE59  01                 	db	1
   650  00EE5A  00                 	db	0
   651  00EE5B  00                 	db	0
   652  00EE5C  00                 	db	0
   653  00EE5D                     __end_of_TXdataF:
   654                           	opt stack 0
   655  0000                     _ADCON0	set	4034
   656  0000                     _ADCON1	set	4033
   657  0000                     _ADCON2	set	4032
   658  0000                     _ADRESH	set	4036
   659  0000                     _ADRESL	set	4035
   660  0000                     _BAUDCON	set	4024
   661  0000                     _CCP1CON	set	4029
   662  0000                     _CCPR1L	set	4030
   663  0000                     _ECCP1CON	set	4026
   664  0000                     _ECCPR1L	set	4027
   665  0000                     _EEADR	set	4009
   666  0000                     _EEADRH	set	4010
   667  0000                     _EECON1bits	set	4006
   668  0000                     _EECON2	set	4007
   669  0000                     _EEDATA	set	4008
   670  0000                     _INTCON2bits	set	4081
   671  0000                     _INTCONbits	set	4082
   672  0000                     _IPR1bits	set	3999
   673  0000                     _LATA	set	3977
   674  0000                     _LATC	set	3979
   675  0000                     _LATD	set	3980
   676  0000                     _LATE	set	3981
   677  0000                     _OSCCON	set	4051
   678  0000                     _PIE1	set	3997
   679  0000                     _PIE1bits	set	3997
   680  0000                     _PIR1bits	set	3998
   681  0000                     _PIR2bits	set	4001
   682  0000                     _PORTB	set	3969
   683  0000                     _PR2	set	4043
   684  0000                     _RCONbits	set	4048
   685  0000                     _RCREG	set	4014
   686  0000                     _RCSTA	set	4011
   687  0000                     _RCSTAbits	set	4011
   688  0000                     _SPBRG	set	4015
   689  0000                     _SPBRGH	set	4016
   690  0000                     _SSPADD	set	4040
   691  0000                     _SSPBUF	set	4041
   692  0000                     _SSPCON1	set	4038
   693  0000                     _SSPCON1bits	set	4038
   694  0000                     _SSPCON2	set	4037
   695  0000                     _SSPCON2bits	set	4037
   696  0000                     _SSPSTAT	set	4039
   697  0000                     _SSPSTATbits	set	4039
   698  0000                     _T0CONbits	set	4053
   699  0000                     _T1CONbits	set	4045
   700  0000                     _T2CON	set	4042
   701  0000                     _TMR0H	set	4055
   702  0000                     _TMR0L	set	4054
   703  0000                     _TMR1H	set	4047
   704  0000                     _TMR1L	set	4046
   705  0000                     _TRISAbits	set	3986
   706  0000                     _TRISBbits	set	3987
   707  0000                     _TRISCbits	set	3988
   708  0000                     _TRISDbits	set	3989
   709  0000                     _TRISEbits	set	3990
   710  0000                     _TXREG	set	4013
   711  0000                     _TXSTA	set	4012
   712  0000                     _TXSTAbits	set	4012
   713  00EE5D                     STR_213:
   714  00EE5D  54                 	db	84	;'T'
   715  00EE5E  6F                 	db	111	;'o'
   716  00EE5F  20                 	db	32
   717  00EE60  72                 	db	114	;'r'
   718  00EE61  65                 	db	101	;'e'
   719  00EE62  61                 	db	97	;'a'
   720  00EE63  64                 	db	100	;'d'
   721  00EE64  20                 	db	32
   722  00EE65  61                 	db	97	;'a'
   723  00EE66  6E                 	db	110	;'n'
   724  00EE67  64                 	db	100	;'d'
   725  00EE68  20                 	db	32
   726  00EE69  61                 	db	97	;'a'
   727  00EE6A  64                 	db	100	;'d'
   728  00EE6B  63                 	db	99	;'c'
   729  00EE6C  20                 	db	32
   730  00EE6D  63                 	db	99	;'c'
   731  00EE6E  68                 	db	104	;'h'
   732  00EE6F  61                 	db	97	;'a'
   733  00EE70  6E                 	db	110	;'n'
   734  00EE71  6E                 	db	110	;'n'
   735  00EE72  65                 	db	101	;'e'
   736  00EE73  6C                 	db	108	;'l'
   737  00EE74  2C                 	db	44
   738  00EE75  20                 	db	32
   739  00EE76  74                 	db	116	;'t'
   740  00EE77  79                 	db	121	;'y'
   741  00EE78  70                 	db	112	;'p'
   742  00EE79  65                 	db	101	;'e'
   743  00EE7A  20                 	db	32
   744  00EE7B  74                 	db	116	;'t'
   745  00EE7C  68                 	db	104	;'h'
   746  00EE7D  65                 	db	101	;'e'
   747  00EE7E  20                 	db	32
   748  00EE7F  63                 	db	99	;'c'
   749  00EE80  6F                 	db	111	;'o'
   750  00EE81  6D                 	db	109	;'m'
   751  00EE82  6D                 	db	109	;'m'
   752  00EE83  61                 	db	97	;'a'
   753  00EE84  6E                 	db	110	;'n'
   754  00EE85  64                 	db	100	;'d'
   755  00EE86  0D                 	db	13
   756  00EE87  0A                 	db	10
   757  00EE88  20                 	db	32
   758  00EE89  41                 	db	65	;'A'
   759  00EE8A  44                 	db	68	;'D'
   760  00EE8B  43                 	db	67	;'C'
   761  00EE8C  20                 	db	32
   762  00EE8D  66                 	db	102	;'f'
   763  00EE8E  6F                 	db	111	;'o'
   764  00EE8F  6C                 	db	108	;'l'
   765  00EE90  6C                 	db	108	;'l'
   766  00EE91  6F                 	db	111	;'o'
   767  00EE92  77                 	db	119	;'w'
   768  00EE93  65                 	db	101	;'e'
   769  00EE94  64                 	db	100	;'d'
   770  00EE95  20                 	db	32
   771  00EE96  62                 	db	98	;'b'
   772  00EE97  79                 	db	121	;'y'
   773  00EE98  20                 	db	32
   774  00EE99  27                 	db	39
   775  00EE9A  43                 	db	67	;'C'
   776  00EE9B  68                 	db	104	;'h'
   777  00EE9C  61                 	db	97	;'a'
   778  00EE9D  6E                 	db	110	;'n'
   779  00EE9E  6E                 	db	110	;'n'
   780  00EE9F  65                 	db	101	;'e'
   781  00EEA0  6C                 	db	108	;'l'
   782  00EEA1  27                 	db	39
   783  00EEA2  20                 	db	32
   784  00EEA3  0D                 	db	13
   785  00EEA4  0A                 	db	10
   786  00EEA5  00                 	db	0
   787  00EEA6                     STR_245:
   788  00EEA6  54                 	db	84	;'T'
   789  00EEA7  6F                 	db	111	;'o'
   790  00EEA8  20                 	db	32
   791  00EEA9  63                 	db	99	;'c'
   792  00EEAA  6F                 	db	111	;'o'
   793  00EEAB  6D                 	db	109	;'m'
   794  00EEAC  6D                 	db	109	;'m'
   795  00EEAD  61                 	db	97	;'a'
   796  00EEAE  6E                 	db	110	;'n'
   797  00EEAF  64                 	db	100	;'d'
   798  00EEB0  20                 	db	32
   799  00EEB1  74                 	db	116	;'t'
   800  00EEB2  68                 	db	104	;'h'
   801  00EEB3  65                 	db	101	;'e'
   802  00EEB4  20                 	db	32
   803  00EEB5  52                 	db	82	;'R'
   804  00EEB6  54                 	db	84	;'T'
   805  00EEB7  43                 	db	67	;'C'
   806  00EEB8  2C                 	db	44
   807  00EEB9  20                 	db	32
   808  00EEBA  74                 	db	116	;'t'
   809  00EEBB  79                 	db	121	;'y'
   810  00EEBC  70                 	db	112	;'p'
   811  00EEBD  65                 	db	101	;'e'
   812  00EEBE  20                 	db	32
   813  00EEBF  74                 	db	116	;'t'
   814  00EEC0  68                 	db	104	;'h'
   815  00EEC1  65                 	db	101	;'e'
   816  00EEC2  20                 	db	32
   817  00EEC3  61                 	db	97	;'a'
   818  00EEC4  63                 	db	99	;'c'
   819  00EEC5  74                 	db	116	;'t'
   820  00EEC6  69                 	db	105	;'i'
   821  00EEC7  6F                 	db	111	;'o'
   822  00EEC8  6E                 	db	110	;'n'
   823  00EEC9  0D                 	db	13
   824  00EECA  0A                 	db	10
   825  00EECB  20                 	db	32
   826  00EECC  66                 	db	102	;'f'
   827  00EECD  6F                 	db	111	;'o'
   828  00EECE  6C                 	db	108	;'l'
   829  00EECF  6C                 	db	108	;'l'
   830  00EED0  6F                 	db	111	;'o'
   831  00EED1  77                 	db	119	;'w'
   832  00EED2  65                 	db	101	;'e'
   833  00EED3  64                 	db	100	;'d'
   834  00EED4  20                 	db	32
   835  00EED5  62                 	db	98	;'b'
   836  00EED6  79                 	db	121	;'y'
   837  00EED7  20                 	db	32
   838  00EED8  74                 	db	116	;'t'
   839  00EED9  68                 	db	104	;'h'
   840  00EEDA  65                 	db	101	;'e'
   841  00EEDB  20                 	db	32
   842  00EEDC  70                 	db	112	;'p'
   843  00EEDD  61                 	db	97	;'a'
   844  00EEDE  72                 	db	114	;'r'
   845  00EEDF  61                 	db	97	;'a'
   846  00EEE0  6D                 	db	109	;'m'
   847  00EEE1  65                 	db	101	;'e'
   848  00EEE2  74                 	db	116	;'t'
   849  00EEE3  65                 	db	101	;'e'
   850  00EEE4  72                 	db	114	;'r'
   851  00EEE5  73                 	db	115	;'s'
   852  00EEE6  20                 	db	32
   853  00EEE7  0D                 	db	13
   854  00EEE8  0A                 	db	10
   855  00EEE9  0A                 	db	10
   856  00EEEA  00                 	db	0
   857  00EEEB                     STR_64:
   858  00EEEB  54                 	db	84	;'T'
   859  00EEEC  6F                 	db	111	;'o'
   860  00EEED  20                 	db	32
   861  00EEEE  63                 	db	99	;'c'
   862  00EEEF  6F                 	db	111	;'o'
   863  00EEF0  6E                 	db	110	;'n'
   864  00EEF1  74                 	db	116	;'t'
   865  00EEF2  72                 	db	114	;'r'
   866  00EEF3  6F                 	db	111	;'o'
   867  00EEF4  6C                 	db	108	;'l'
   868  00EEF5  20                 	db	32
   869  00EEF6  61                 	db	97	;'a'
   870  00EEF7  20                 	db	32
   871  00EEF8  64                 	db	100	;'d'
   872  00EEF9  65                 	db	101	;'e'
   873  00EEFA  76                 	db	118	;'v'
   874  00EEFB  69                 	db	105	;'i'
   875  00EEFC  63                 	db	99	;'c'
   876  00EEFD  65                 	db	101	;'e'
   877  00EEFE  20                 	db	32
   878  00EEFF  65                 	db	101	;'e'
   879  00EF00  6E                 	db	110	;'n'
   880  00EF01  74                 	db	116	;'t'
   881  00EF02  65                 	db	101	;'e'
   882  00EF03  72                 	db	114	;'r'
   883  00EF04  20                 	db	32
   884  00EF05  74                 	db	116	;'t'
   885  00EF06  68                 	db	104	;'h'
   886  00EF07  65                 	db	101	;'e'
   887  00EF08  20                 	db	32
   888  00EF09  64                 	db	100	;'d'
   889  00EF0A  65                 	db	101	;'e'
   890  00EF0B  76                 	db	118	;'v'
   891  00EF0C  69                 	db	105	;'i'
   892  00EF0D  63                 	db	99	;'c'
   893  00EF0E  65                 	db	101	;'e'
   894  00EF0F  20                 	db	32
   895  00EF10  66                 	db	102	;'f'
   896  00EF11  6F                 	db	111	;'o'
   897  00EF12  6C                 	db	108	;'l'
   898  00EF13  6C                 	db	108	;'l'
   899  00EF14  6F                 	db	111	;'o'
   900  00EF15  77                 	db	119	;'w'
   901  00EF16  65                 	db	101	;'e'
   902  00EF17  64                 	db	100	;'d'
   903  00EF18  20                 	db	32
   904  00EF19  62                 	db	98	;'b'
   905  00EF1A  79                 	db	121	;'y'
   906  00EF1B  20                 	db	32
   907  00EF1C  27                 	db	39
   908  00EF1D  3D                 	db	61	;'='
   909  00EF1E  27                 	db	39
   910  00EF1F  20                 	db	32
   911  00EF20  61                 	db	97	;'a'
   912  00EF21  6E                 	db	110	;'n'
   913  00EF22  64                 	db	100	;'d'
   914  00EF23  20                 	db	32
   915  00EF24  27                 	db	39
   916  00EF25  4F                 	db	79	;'O'
   917  00EF26  6E                 	db	110	;'n'
   918  00EF27  2F                 	db	47
   919  00EF28  4F                 	db	79	;'O'
   920  00EF29  66                 	db	102	;'f'
   921  00EF2A  66                 	db	102	;'f'
   922  00EF2B  27                 	db	39
   923  00EF2C  0D                 	db	13
   924  00EF2D  0A                 	db	10
   925  00EF2E  00                 	db	0
   926  00EF2F                     STR_175:
   927  00EF2F  54                 	db	84	;'T'
   928  00EF30  6F                 	db	111	;'o'
   929  00EF31  20                 	db	32
   930  00EF32  73                 	db	115	;'s'
   931  00EF33  65                 	db	101	;'e'
   932  00EF34  74                 	db	116	;'t'
   933  00EF35  20                 	db	32
   934  00EF36  74                 	db	116	;'t'
   935  00EF37  65                 	db	101	;'e'
   936  00EF38  20                 	db	32
   937  00EF39  50                 	db	80	;'P'
   938  00EF3A  57                 	db	87	;'W'
   939  00EF3B  4D                 	db	77	;'M'
   940  00EF3C  20                 	db	32
   941  00EF3D  62                 	db	98	;'b'
   942  00EF3E  72                 	db	114	;'r'
   943  00EF3F  69                 	db	105	;'i'
   944  00EF40  67                 	db	103	;'g'
   945  00EF41  68                 	db	104	;'h'
   946  00EF42  74                 	db	116	;'t'
   947  00EF43  6E                 	db	110	;'n'
   948  00EF44  65                 	db	101	;'e'
   949  00EF45  73                 	db	115	;'s'
   950  00EF46  73                 	db	115	;'s'
   951  00EF47  20                 	db	32
   952  00EF48  65                 	db	101	;'e'
   953  00EF49  6E                 	db	110	;'n'
   954  00EF4A  74                 	db	116	;'t'
   955  00EF4B  65                 	db	101	;'e'
   956  00EF4C  72                 	db	114	;'r'
   957  00EF4D  20                 	db	32
   958  00EF4E  27                 	db	39
   959  00EF4F  52                 	db	82	;'R'
   960  00EF50  65                 	db	101	;'e'
   961  00EF51  64                 	db	100	;'d'
   962  00EF52  20                 	db	32
   963  00EF53  4C                 	db	76	;'L'
   964  00EF54  45                 	db	69	;'E'
   965  00EF55  44                 	db	68	;'D'
   966  00EF56  20                 	db	32
   967  00EF57  62                 	db	98	;'b'
   968  00EF58  72                 	db	114	;'r'
   969  00EF59  69                 	db	105	;'i'
   970  00EF5A  67                 	db	103	;'g'
   971  00EF5B  68                 	db	104	;'h'
   972  00EF5C  74                 	db	116	;'t'
   973  00EF5D  6E                 	db	110	;'n'
   974  00EF5E  65                 	db	101	;'e'
   975  00EF5F  73                 	db	115	;'s'
   976  00EF60  73                 	db	115	;'s'
   977  00EF61  20                 	db	32
   978  00EF62  3D                 	db	61	;'='
   979  00EF63  20                 	db	32
   980  00EF64  64                 	db	100	;'d'
   981  00EF65  75                 	db	117	;'u'
   982  00EF66  74                 	db	116	;'t'
   983  00EF67  79                 	db	121	;'y'
   984  00EF68  63                 	db	99	;'c'
   985  00EF69  79                 	db	121	;'y'
   986  00EF6A  63                 	db	99	;'c'
   987  00EF6B  6C                 	db	108	;'l'
   988  00EF6C  65                 	db	101	;'e'
   989  00EF6D  27                 	db	39
   990  00EF6E  0D                 	db	13
   991  00EF6F  0A                 	db	10
   992  00EF70  00                 	db	0
   993  00EF71                     STR_192:
   994  00EF71  54                 	db	84	;'T'
   995  00EF72  6F                 	db	111	;'o'
   996  00EF73  20                 	db	32
   997  00EF74  73                 	db	115	;'s'
   998  00EF75  65                 	db	101	;'e'
   999  00EF76  74                 	db	116	;'t'
  1000  00EF77  20                 	db	32
  1001  00EF78  43                 	db	67	;'C'
  1002  00EF79  6F                 	db	111	;'o'
  1003  00EF7A  6E                 	db	110	;'n'
  1004  00EF7B  74                 	db	116	;'t'
  1005  00EF7C  72                 	db	114	;'r'
  1006  00EF7D  61                 	db	97	;'a'
  1007  00EF7E  73                 	db	115	;'s'
  1008  00EF7F  74                 	db	116	;'t'
  1009  00EF80  20                 	db	32
  1010  00EF81  50                 	db	80	;'P'
  1011  00EF82  57                 	db	87	;'W'
  1012  00EF83  4D                 	db	77	;'M'
  1013  00EF84  20                 	db	32
  1014  00EF85  62                 	db	98	;'b'
  1015  00EF86  72                 	db	114	;'r'
  1016  00EF87  69                 	db	105	;'i'
  1017  00EF88  67                 	db	103	;'g'
  1018  00EF89  68                 	db	104	;'h'
  1019  00EF8A  74                 	db	116	;'t'
  1020  00EF8B  6E                 	db	110	;'n'
  1021  00EF8C  65                 	db	101	;'e'
  1022  00EF8D  73                 	db	115	;'s'
  1023  00EF8E  73                 	db	115	;'s'
  1024  00EF8F  20                 	db	32
  1025  00EF90  65                 	db	101	;'e'
  1026  00EF91  6E                 	db	110	;'n'
  1027  00EF92  74                 	db	116	;'t'
  1028  00EF93  65                 	db	101	;'e'
  1029  00EF94  72                 	db	114	;'r'
  1030  00EF95  20                 	db	32
  1031  00EF96  27                 	db	39
  1032  00EF97  43                 	db	67	;'C'
  1033  00EF98  6F                 	db	111	;'o'
  1034  00EF99  6E                 	db	110	;'n'
  1035  00EF9A  74                 	db	116	;'t'
  1036  00EF9B  72                 	db	114	;'r'
  1037  00EF9C  61                 	db	97	;'a'
  1038  00EF9D  73                 	db	115	;'s'
  1039  00EF9E  74                 	db	116	;'t'
  1040  00EF9F  20                 	db	32
  1041  00EFA0  3D                 	db	61	;'='
  1042  00EFA1  20                 	db	32
  1043  00EFA2  64                 	db	100	;'d'
  1044  00EFA3  75                 	db	117	;'u'
  1045  00EFA4  74                 	db	116	;'t'
  1046  00EFA5  79                 	db	121	;'y'
  1047  00EFA6  63                 	db	99	;'c'
  1048  00EFA7  79                 	db	121	;'y'
  1049  00EFA8  63                 	db	99	;'c'
  1050  00EFA9  6C                 	db	108	;'l'
  1051  00EFAA  65                 	db	101	;'e'
  1052  00EFAB  27                 	db	39
  1053  00EFAC  0D                 	db	13
  1054  00EFAD  0A                 	db	10
  1055  00EFAE  00                 	db	0
  1056  00EFAF                     STR_246:
  1057  00EFAF  66                 	db	102	;'f'
  1058  00EFB0  75                 	db	117	;'u'
  1059  00EFB1  72                 	db	114	;'r'
  1060  00EFB2  74                 	db	116	;'t'
  1061  00EFB3  68                 	db	104	;'h'
  1062  00EFB4  65                 	db	101	;'e'
  1063  00EFB5  72                 	db	114	;'r'
  1064  00EFB6  20                 	db	32
  1065  00EFB7  73                 	db	115	;'s'
  1066  00EFB8  75                 	db	117	;'u'
  1067  00EFB9  62                 	db	98	;'b'
  1068  00EFBA  20                 	db	32
  1069  00EFBB  6D                 	db	109	;'m'
  1070  00EFBC  65                 	db	101	;'e'
  1071  00EFBD  6E                 	db	110	;'n'
  1072  00EFBE  75                 	db	117	;'u'
  1073  00EFBF  73                 	db	115	;'s'
  1074  00EFC0  20                 	db	32
  1075  00EFC1  61                 	db	97	;'a'
  1076  00EFC2  76                 	db	118	;'v'
  1077  00EFC3  61                 	db	97	;'a'
  1078  00EFC4  69                 	db	105	;'i'
  1079  00EFC5  6C                 	db	108	;'l'
  1080  00EFC6  61                 	db	97	;'a'
  1081  00EFC7  62                 	db	98	;'b'
  1082  00EFC8  6C                 	db	108	;'l'
  1083  00EFC9  65                 	db	101	;'e'
  1084  00EFCA  20                 	db	32
  1085  00EFCB  62                 	db	98	;'b'
  1086  00EFCC  79                 	db	121	;'y'
  1087  00EFCD  20                 	db	32
  1088  00EFCE  65                 	db	101	;'e'
  1089  00EFCF  6E                 	db	110	;'n'
  1090  00EFD0  74                 	db	116	;'t'
  1091  00EFD1  65                 	db	101	;'e'
  1092  00EFD2  72                 	db	114	;'r'
  1093  00EFD3  69                 	db	105	;'i'
  1094  00EFD4  6E                 	db	110	;'n'
  1095  00EFD5  67                 	db	103	;'g'
  1096  00EFD6  20                 	db	32
  1097  00EFD7  74                 	db	116	;'t'
  1098  00EFD8  68                 	db	104	;'h'
  1099  00EFD9  65                 	db	101	;'e'
  1100  00EFDA  20                 	db	32
  1101  00EFDB  61                 	db	97	;'a'
  1102  00EFDC  63                 	db	99	;'c'
  1103  00EFDD  74                 	db	116	;'t'
  1104  00EFDE  69                 	db	105	;'i'
  1105  00EFDF  6F                 	db	111	;'o'
  1106  00EFE0  6E                 	db	110	;'n'
  1107  00EFE1  20                 	db	32
  1108  00EFE2  61                 	db	97	;'a'
  1109  00EFE3  6E                 	db	110	;'n'
  1110  00EFE4  64                 	db	100	;'d'
  1111  00EFE5  20                 	db	32
  1112  00EFE6  61                 	db	97	;'a'
  1113  00EFE7  20                 	db	32
  1114  00EFE8  27                 	db	39
  1115  00EFE9  3F                 	db	63	;'?'
  1116  00EFEA  27                 	db	39
  1117  00EFEB  00                 	db	0
  1118  00EFEC                     STR_24:
  1119  00EFEC  53                 	db	83	;'S'
  1120  00EFED  79                 	db	121	;'y'
  1121  00EFEE  73                 	db	115	;'s'
  1122  00EFEF  74                 	db	116	;'t'
  1123  00EFF0  65                 	db	101	;'e'
  1124  00EFF1  6D                 	db	109	;'m'
  1125  00EFF2  20                 	db	32
  1126  00EFF3  42                 	db	66	;'B'
  1127  00EFF4  61                 	db	97	;'a'
  1128  00EFF5  75                 	db	117	;'u'
  1129  00EFF6  64                 	db	100	;'d'
  1130  00EFF7  20                 	db	32
  1131  00EFF8  77                 	db	119	;'w'
  1132  00EFF9  69                 	db	105	;'i'
  1133  00EFFA  6C                 	db	108	;'l'
  1134  00EFFB  6C                 	db	108	;'l'
  1135  00EFFC  20                 	db	32
  1136  00EFFD  62                 	db	98	;'b'
  1137  00EFFE  65                 	db	101	;'e'
  1138  00EFFF  20                 	db	32
  1139  00F000  73                 	db	115	;'s'
  1140  00F001  65                 	db	101	;'e'
  1141  00F002  74                 	db	116	;'t'
  1142  00F003  20                 	db	32
  1143  00F004  74                 	db	116	;'t'
  1144  00F005  6F                 	db	111	;'o'
  1145  00F006  20                 	db	32
  1146  00F007  25                 	db	37
  1147  00F008  6C                 	db	108	;'l'
  1148  00F009  75                 	db	117	;'u'
  1149  00F00A  20                 	db	32
  1150  00F00B  77                 	db	119	;'w'
  1151  00F00C  69                 	db	105	;'i'
  1152  00F00D  74                 	db	116	;'t'
  1153  00F00E  68                 	db	104	;'h'
  1154  00F00F  20                 	db	32
  1155  00F010  45                 	db	69	;'E'
  1156  00F011  76                 	db	118	;'v'
  1157  00F012  65                 	db	101	;'e'
  1158  00F013  6E                 	db	110	;'n'
  1159  00F014  20                 	db	32
  1160  00F015  70                 	db	112	;'p'
  1161  00F016  61                 	db	97	;'a'
  1162  00F017  72                 	db	114	;'r'
  1163  00F018  69                 	db	105	;'i'
  1164  00F019  74                 	db	116	;'t'
  1165  00F01A  79                 	db	121	;'y'
  1166  00F01B  20                 	db	32
  1167  00F01C  62                 	db	98	;'b'
  1168  00F01D  69                 	db	105	;'i'
  1169  00F01E  74                 	db	116	;'t'
  1170  00F01F  0D                 	db	13
  1171  00F020  0A                 	db	10
  1172  00F021  00                 	db	0
  1173  00F022                     STR_8:
  1174  00F022  45                 	db	69	;'E'
  1175  00F023  72                 	db	114	;'r'
  1176  00F024  72                 	db	114	;'r'
  1177  00F025  6F                 	db	111	;'o'
  1178  00F026  72                 	db	114	;'r'
  1179  00F027  3A                 	db	58	;':'
  1180  00F028  20                 	db	32
  1181  00F029  43                 	db	67	;'C'
  1182  00F02A  6F                 	db	111	;'o'
  1183  00F02B  75                 	db	117	;'u'
  1184  00F02C  6C                 	db	108	;'l'
  1185  00F02D  64                 	db	100	;'d'
  1186  00F02E  20                 	db	32
  1187  00F02F  6E                 	db	110	;'n'
  1188  00F030  6F                 	db	111	;'o'
  1189  00F031  74                 	db	116	;'t'
  1190  00F032  20                 	db	32
  1191  00F033  62                 	db	98	;'b'
  1192  00F034  75                 	db	117	;'u'
  1193  00F035  72                 	db	114	;'r'
  1194  00F036  6E                 	db	110	;'n'
  1195  00F037  20                 	db	32
  1196  00F038  64                 	db	100	;'d'
  1197  00F039  65                 	db	101	;'e'
  1198  00F03A  66                 	db	102	;'f'
  1199  00F03B  61                 	db	97	;'a'
  1200  00F03C  75                 	db	117	;'u'
  1201  00F03D  6C                 	db	108	;'l'
  1202  00F03E  74                 	db	116	;'t'
  1203  00F03F  20                 	db	32
  1204  00F040  42                 	db	66	;'B'
  1205  00F041  61                 	db	97	;'a'
  1206  00F042  75                 	db	117	;'u'
  1207  00F043  64                 	db	100	;'d'
  1208  00F044  20                 	db	32
  1209  00F045  72                 	db	114	;'r'
  1210  00F046  61                 	db	97	;'a'
  1211  00F047  74                 	db	116	;'t'
  1212  00F048  65                 	db	101	;'e'
  1213  00F049  20                 	db	32
  1214  00F04A  69                 	db	105	;'i'
  1215  00F04B  6E                 	db	110	;'n'
  1216  00F04C  74                 	db	116	;'t'
  1217  00F04D  6F                 	db	111	;'o'
  1218  00F04E  20                 	db	32
  1219  00F04F  4D                 	db	77	;'M'
  1220  00F050  65                 	db	101	;'e'
  1221  00F051  6D                 	db	109	;'m'
  1222  00F052  6F                 	db	111	;'o'
  1223  00F053  72                 	db	114	;'r'
  1224  00F054  79                 	db	121	;'y'
  1225  00F055  0D                 	db	13
  1226  00F056  0A                 	db	10
  1227  00F057  00                 	db	0
  1228  00F058                     STR_23:
  1229  00F058  53                 	db	83	;'S'
  1230  00F059  79                 	db	121	;'y'
  1231  00F05A  73                 	db	115	;'s'
  1232  00F05B  74                 	db	116	;'t'
  1233  00F05C  65                 	db	101	;'e'
  1234  00F05D  6D                 	db	109	;'m'
  1235  00F05E  20                 	db	32
  1236  00F05F  42                 	db	66	;'B'
  1237  00F060  61                 	db	97	;'a'
  1238  00F061  75                 	db	117	;'u'
  1239  00F062  64                 	db	100	;'d'
  1240  00F063  20                 	db	32
  1241  00F064  77                 	db	119	;'w'
  1242  00F065  69                 	db	105	;'i'
  1243  00F066  6C                 	db	108	;'l'
  1244  00F067  6C                 	db	108	;'l'
  1245  00F068  20                 	db	32
  1246  00F069  62                 	db	98	;'b'
  1247  00F06A  65                 	db	101	;'e'
  1248  00F06B  20                 	db	32
  1249  00F06C  73                 	db	115	;'s'
  1250  00F06D  65                 	db	101	;'e'
  1251  00F06E  74                 	db	116	;'t'
  1252  00F06F  20                 	db	32
  1253  00F070  74                 	db	116	;'t'
  1254  00F071  6F                 	db	111	;'o'
  1255  00F072  20                 	db	32
  1256  00F073  25                 	db	37
  1257  00F074  6C                 	db	108	;'l'
  1258  00F075  75                 	db	117	;'u'
  1259  00F076  20                 	db	32
  1260  00F077  77                 	db	119	;'w'
  1261  00F078  69                 	db	105	;'i'
  1262  00F079  74                 	db	116	;'t'
  1263  00F07A  68                 	db	104	;'h'
  1264  00F07B  20                 	db	32
  1265  00F07C  4F                 	db	79	;'O'
  1266  00F07D  64                 	db	100	;'d'
  1267  00F07E  64                 	db	100	;'d'
  1268  00F07F  20                 	db	32
  1269  00F080  70                 	db	112	;'p'
  1270  00F081  61                 	db	97	;'a'
  1271  00F082  72                 	db	114	;'r'
  1272  00F083  69                 	db	105	;'i'
  1273  00F084  74                 	db	116	;'t'
  1274  00F085  79                 	db	121	;'y'
  1275  00F086  20                 	db	32
  1276  00F087  62                 	db	98	;'b'
  1277  00F088  69                 	db	105	;'i'
  1278  00F089  74                 	db	116	;'t'
  1279  00F08A  0D                 	db	13
  1280  00F08B  0A                 	db	10
  1281  00F08C  00                 	db	0
  1282  00F08D                     STR_27:
  1283  00F08D  53                 	db	83	;'S'
  1284  00F08E  79                 	db	121	;'y'
  1285  00F08F  73                 	db	115	;'s'
  1286  00F090  74                 	db	116	;'t'
  1287  00F091  65                 	db	101	;'e'
  1288  00F092  6D                 	db	109	;'m'
  1289  00F093  20                 	db	32
  1290  00F094  42                 	db	66	;'B'
  1291  00F095  61                 	db	97	;'a'
  1292  00F096  75                 	db	117	;'u'
  1293  00F097  64                 	db	100	;'d'
  1294  00F098  20                 	db	32
  1295  00F099  77                 	db	119	;'w'
  1296  00F09A  69                 	db	105	;'i'
  1297  00F09B  6C                 	db	108	;'l'
  1298  00F09C  6C                 	db	108	;'l'
  1299  00F09D  20                 	db	32
  1300  00F09E  62                 	db	98	;'b'
  1301  00F09F  65                 	db	101	;'e'
  1302  00F0A0  20                 	db	32
  1303  00F0A1  73                 	db	115	;'s'
  1304  00F0A2  65                 	db	101	;'e'
  1305  00F0A3  74                 	db	116	;'t'
  1306  00F0A4  20                 	db	32
  1307  00F0A5  74                 	db	116	;'t'
  1308  00F0A6  6F                 	db	111	;'o'
  1309  00F0A7  20                 	db	32
  1310  00F0A8  25                 	db	37
  1311  00F0A9  6C                 	db	108	;'l'
  1312  00F0AA  75                 	db	117	;'u'
  1313  00F0AB  20                 	db	32
  1314  00F0AC  77                 	db	119	;'w'
  1315  00F0AD  69                 	db	105	;'i'
  1316  00F0AE  74                 	db	116	;'t'
  1317  00F0AF  68                 	db	104	;'h'
  1318  00F0B0  20                 	db	32
  1319  00F0B1  6E                 	db	110	;'n'
  1320  00F0B2  6F                 	db	111	;'o'
  1321  00F0B3  20                 	db	32
  1322  00F0B4  70                 	db	112	;'p'
  1323  00F0B5  61                 	db	97	;'a'
  1324  00F0B6  72                 	db	114	;'r'
  1325  00F0B7  69                 	db	105	;'i'
  1326  00F0B8  74                 	db	116	;'t'
  1327  00F0B9  79                 	db	121	;'y'
  1328  00F0BA  20                 	db	32
  1329  00F0BB  62                 	db	98	;'b'
  1330  00F0BC  69                 	db	105	;'i'
  1331  00F0BD  74                 	db	116	;'t'
  1332  00F0BE  0D                 	db	13
  1333  00F0BF  0A                 	db	10
  1334  00F0C0  00                 	db	0
  1335  00F0C1                     STR_281:
  1336  00F0C1  46                 	db	70	;'F'
  1337  00F0C2  6F                 	db	111	;'o'
  1338  00F0C3  72                 	db	114	;'r'
  1339  00F0C4  20                 	db	32
  1340  00F0C5  44                 	db	68	;'D'
  1341  00F0C6  65                 	db	101	;'e'
  1342  00F0C7  76                 	db	118	;'v'
  1343  00F0C8  69                 	db	105	;'i'
  1344  00F0C9  63                 	db	99	;'c'
  1345  00F0CA  65                 	db	101	;'e'
  1346  00F0CB  20                 	db	32
  1347  00F0CC  68                 	db	104	;'h'
  1348  00F0CD  65                 	db	101	;'e'
  1349  00F0CE  6C                 	db	108	;'l'
  1350  00F0CF  70                 	db	112	;'p'
  1351  00F0D0  20                 	db	32
  1352  00F0D1  65                 	db	101	;'e'
  1353  00F0D2  6E                 	db	110	;'n'
  1354  00F0D3  74                 	db	116	;'t'
  1355  00F0D4  65                 	db	101	;'e'
  1356  00F0D5  72                 	db	114	;'r'
  1357  00F0D6  20                 	db	32
  1358  00F0D7  64                 	db	100	;'d'
  1359  00F0D8  65                 	db	101	;'e'
  1360  00F0D9  76                 	db	118	;'v'
  1361  00F0DA  69                 	db	105	;'i'
  1362  00F0DB  63                 	db	99	;'c'
  1363  00F0DC  65                 	db	101	;'e'
  1364  00F0DD  20                 	db	32
  1365  00F0DE  66                 	db	102	;'f'
  1366  00F0DF  6F                 	db	111	;'o'
  1367  00F0E0  6C                 	db	108	;'l'
  1368  00F0E1  6C                 	db	108	;'l'
  1369  00F0E2  6F                 	db	111	;'o'
  1370  00F0E3  77                 	db	119	;'w'
  1371  00F0E4  65                 	db	101	;'e'
  1372  00F0E5  64                 	db	100	;'d'
  1373  00F0E6  20                 	db	32
  1374  00F0E7  62                 	db	98	;'b'
  1375  00F0E8  79                 	db	121	;'y'
  1376  00F0E9  20                 	db	32
  1377  00F0EA  61                 	db	97	;'a'
  1378  00F0EB  20                 	db	32
  1379  00F0EC  27                 	db	39
  1380  00F0ED  3F                 	db	63	;'?'
  1381  00F0EE  27                 	db	39
  1382  00F0EF  20                 	db	32
  1383  00F0F0  0D                 	db	13
  1384  00F0F1  0A                 	db	10
  1385  00F0F2  00                 	db	0
  1386  00F0F3                     STR_172:
  1387  00F0F3  72                 	db	114	;'r'
  1388  00F0F4  65                 	db	101	;'e'
  1389  00F0F5  64                 	db	100	;'d'
  1390  00F0F6  6C                 	db	108	;'l'
  1391  00F0F7  65                 	db	101	;'e'
  1392  00F0F8  64                 	db	100	;'d'
  1393  00F0F9  20                 	db	32
  1394  00F0FA  77                 	db	119	;'w'
  1395  00F0FB  68                 	db	104	;'h'
  1396  00F0FC  61                 	db	97	;'a'
  1397  00F0FD  74                 	db	116	;'t'
  1398  00F0FE  3F                 	db	63	;'?'
  1399  00F0FF  3F                 	db	63	;'?'
  1400  00F100  3F                 	db	63	;'?'
  1401  00F101  20                 	db	32
  1402  00F102  44                 	db	68	;'D'
  1403  00F103  6F                 	db	111	;'o'
  1404  00F104  20                 	db	32
  1405  00F105  79                 	db	121	;'y'
  1406  00F106  6F                 	db	111	;'o'
  1407  00F107  75                 	db	117	;'u'
  1408  00F108  20                 	db	32
  1409  00F109  6D                 	db	109	;'m'
  1410  00F10A  65                 	db	101	;'e'
  1411  00F10B  61                 	db	97	;'a'
  1412  00F10C  6E                 	db	110	;'n'
  1413  00F10D  20                 	db	32
  1414  00F10E  52                 	db	82	;'R'
  1415  00F10F  65                 	db	101	;'e'
  1416  00F110  64                 	db	100	;'d'
  1417  00F111  20                 	db	32
  1418  00F112  4C                 	db	76	;'L'
  1419  00F113  65                 	db	101	;'e'
  1420  00F114  64                 	db	100	;'d'
  1421  00F115  20                 	db	32
  1422  00F116  42                 	db	66	;'B'
  1423  00F117  72                 	db	114	;'r'
  1424  00F118  69                 	db	105	;'i'
  1425  00F119  67                 	db	103	;'g'
  1426  00F11A  68                 	db	104	;'h'
  1427  00F11B  74                 	db	116	;'t'
  1428  00F11C  6E                 	db	110	;'n'
  1429  00F11D  65                 	db	101	;'e'
  1430  00F11E  73                 	db	115	;'s'
  1431  00F11F  73                 	db	115	;'s'
  1432  00F120  3F                 	db	63	;'?'
  1433  00F121  3F                 	db	63	;'?'
  1434  00F122  3F                 	db	63	;'?'
  1435  00F123  00                 	db	0
  1436  00F124                     STR_185:
  1437  00F124  49                 	db	73	;'I'
  1438  00F125  6E                 	db	110	;'n'
  1439  00F126  76                 	db	118	;'v'
  1440  00F127  61                 	db	97	;'a'
  1441  00F128  6C                 	db	108	;'l'
  1442  00F129  69                 	db	105	;'i'
  1443  00F12A  64                 	db	100	;'d'
  1444  00F12B  20                 	db	32
  1445  00F12C  43                 	db	67	;'C'
  1446  00F12D  6F                 	db	111	;'o'
  1447  00F12E  6E                 	db	110	;'n'
  1448  00F12F  74                 	db	116	;'t'
  1449  00F130  72                 	db	114	;'r'
  1450  00F131  61                 	db	97	;'a'
  1451  00F132  73                 	db	115	;'s'
  1452  00F133  74                 	db	116	;'t'
  1453  00F134  20                 	db	32
  1454  00F135  44                 	db	68	;'D'
  1455  00F136  75                 	db	117	;'u'
  1456  00F137  74                 	db	116	;'t'
  1457  00F138  79                 	db	121	;'y'
  1458  00F139  20                 	db	32
  1459  00F13A  63                 	db	99	;'c'
  1460  00F13B  79                 	db	121	;'y'
  1461  00F13C  63                 	db	99	;'c'
  1462  00F13D  6C                 	db	108	;'l'
  1463  00F13E  65                 	db	101	;'e'
  1464  00F13F  3A                 	db	58	;':'
  1465  00F140  20                 	db	32
  1466  00F141  47                 	db	71	;'G'
  1467  00F142  72                 	db	114	;'r'
  1468  00F143  65                 	db	101	;'e'
  1469  00F144  61                 	db	97	;'a'
  1470  00F145  74                 	db	116	;'t'
  1471  00F146  65                 	db	101	;'e'
  1472  00F147  72                 	db	114	;'r'
  1473  00F148  20                 	db	32
  1474  00F149  74                 	db	116	;'t'
  1475  00F14A  68                 	db	104	;'h'
  1476  00F14B  61                 	db	97	;'a'
  1477  00F14C  6E                 	db	110	;'n'
  1478  00F14D  20                 	db	32
  1479  00F14E  31                 	db	49	;'1'
  1480  00F14F  30                 	db	48	;'0'
  1481  00F150  30                 	db	48	;'0'
  1482  00F151  0D                 	db	13
  1483  00F152  0A                 	db	10
  1484  00F153  00                 	db	0
  1485  00F154                     STR_26:
  1486  00F154  53                 	db	83	;'S'
  1487  00F155  79                 	db	121	;'y'
  1488  00F156  73                 	db	115	;'s'
  1489  00F157  74                 	db	116	;'t'
  1490  00F158  65                 	db	101	;'e'
  1491  00F159  6D                 	db	109	;'m'
  1492  00F15A  20                 	db	32
  1493  00F15B  42                 	db	66	;'B'
  1494  00F15C  61                 	db	97	;'a'
  1495  00F15D  75                 	db	117	;'u'
  1496  00F15E  64                 	db	100	;'d'
  1497  00F15F  20                 	db	32
  1498  00F160  77                 	db	119	;'w'
  1499  00F161  69                 	db	105	;'i'
  1500  00F162  6C                 	db	108	;'l'
  1501  00F163  6C                 	db	108	;'l'
  1502  00F164  20                 	db	32
  1503  00F165  62                 	db	98	;'b'
  1504  00F166  65                 	db	101	;'e'
  1505  00F167  20                 	db	32
  1506  00F168  73                 	db	115	;'s'
  1507  00F169  65                 	db	101	;'e'
  1508  00F16A  74                 	db	116	;'t'
  1509  00F16B  20                 	db	32
  1510  00F16C  74                 	db	116	;'t'
  1511  00F16D  6F                 	db	111	;'o'
  1512  00F16E  20                 	db	32
  1513  00F16F  25                 	db	37
  1514  00F170  6C                 	db	108	;'l'
  1515  00F171  75                 	db	117	;'u'
  1516  00F172  20                 	db	32
  1517  00F173  77                 	db	119	;'w'
  1518  00F174  69                 	db	105	;'i'
  1519  00F175  74                 	db	116	;'t'
  1520  00F176  68                 	db	104	;'h'
  1521  00F177  20                 	db	32
  1522  00F178  53                 	db	83	;'S'
  1523  00F179  70                 	db	112	;'p'
  1524  00F17A  61                 	db	97	;'a'
  1525  00F17B  63                 	db	99	;'c'
  1526  00F17C  65                 	db	101	;'e'
  1527  00F17D  20                 	db	32
  1528  00F17E  62                 	db	98	;'b'
  1529  00F17F  69                 	db	105	;'i'
  1530  00F180  74                 	db	116	;'t'
  1531  00F181  0D                 	db	13
  1532  00F182  0A                 	db	10
  1533  00F183  00                 	db	0
  1534  00F184                     STR_25:
  1535  00F184  53                 	db	83	;'S'
  1536  00F185  79                 	db	121	;'y'
  1537  00F186  73                 	db	115	;'s'
  1538  00F187  74                 	db	116	;'t'
  1539  00F188  65                 	db	101	;'e'
  1540  00F189  6D                 	db	109	;'m'
  1541  00F18A  20                 	db	32
  1542  00F18B  42                 	db	66	;'B'
  1543  00F18C  61                 	db	97	;'a'
  1544  00F18D  75                 	db	117	;'u'
  1545  00F18E  64                 	db	100	;'d'
  1546  00F18F  20                 	db	32
  1547  00F190  77                 	db	119	;'w'
  1548  00F191  69                 	db	105	;'i'
  1549  00F192  6C                 	db	108	;'l'
  1550  00F193  6C                 	db	108	;'l'
  1551  00F194  20                 	db	32
  1552  00F195  62                 	db	98	;'b'
  1553  00F196  65                 	db	101	;'e'
  1554  00F197  20                 	db	32
  1555  00F198  73                 	db	115	;'s'
  1556  00F199  65                 	db	101	;'e'
  1557  00F19A  74                 	db	116	;'t'
  1558  00F19B  20                 	db	32
  1559  00F19C  74                 	db	116	;'t'
  1560  00F19D  6F                 	db	111	;'o'
  1561  00F19E  20                 	db	32
  1562  00F19F  25                 	db	37
  1563  00F1A0  6C                 	db	108	;'l'
  1564  00F1A1  75                 	db	117	;'u'
  1565  00F1A2  20                 	db	32
  1566  00F1A3  77                 	db	119	;'w'
  1567  00F1A4  69                 	db	105	;'i'
  1568  00F1A5  74                 	db	116	;'t'
  1569  00F1A6  68                 	db	104	;'h'
  1570  00F1A7  20                 	db	32
  1571  00F1A8  4D                 	db	77	;'M'
  1572  00F1A9  61                 	db	97	;'a'
  1573  00F1AA  72                 	db	114	;'r'
  1574  00F1AB  6B                 	db	107	;'k'
  1575  00F1AC  20                 	db	32
  1576  00F1AD  62                 	db	98	;'b'
  1577  00F1AE  69                 	db	105	;'i'
  1578  00F1AF  74                 	db	116	;'t'
  1579  00F1B0  0D                 	db	13
  1580  00F1B1  0A                 	db	10
  1581  00F1B2  00                 	db	0
  1582  00F1B3                     STR_324:
  1583  00F1B3  45                 	db	69	;'E'
  1584  00F1B4  72                 	db	114	;'r'
  1585  00F1B5  72                 	db	114	;'r'
  1586  00F1B6  6F                 	db	111	;'o'
  1587  00F1B7  72                 	db	114	;'r'
  1588  00F1B8  3A                 	db	58	;':'
  1589  00F1B9  20                 	db	32
  1590  00F1BA  43                 	db	67	;'C'
  1591  00F1BB  6F                 	db	111	;'o'
  1592  00F1BC  75                 	db	117	;'u'
  1593  00F1BD  6C                 	db	108	;'l'
  1594  00F1BE  64                 	db	100	;'d'
  1595  00F1BF  20                 	db	32
  1596  00F1C0  6E                 	db	110	;'n'
  1597  00F1C1  6F                 	db	111	;'o'
  1598  00F1C2  74                 	db	116	;'t'
  1599  00F1C3  20                 	db	32
  1600  00F1C4  62                 	db	98	;'b'
  1601  00F1C5  75                 	db	117	;'u'
  1602  00F1C6  72                 	db	114	;'r'
  1603  00F1C7  6E                 	db	110	;'n'
  1604  00F1C8  20                 	db	32
  1605  00F1C9  49                 	db	73	;'I'
  1606  00F1CA  52                 	db	82	;'R'
  1607  00F1CB  20                 	db	32
  1608  00F1CC  43                 	db	67	;'C'
  1609  00F1CD  6F                 	db	111	;'o'
  1610  00F1CE  64                 	db	100	;'d'
  1611  00F1CF  65                 	db	101	;'e'
  1612  00F1D0  20                 	db	32
  1613  00F1D1  69                 	db	105	;'i'
  1614  00F1D2  6E                 	db	110	;'n'
  1615  00F1D3  74                 	db	116	;'t'
  1616  00F1D4  6F                 	db	111	;'o'
  1617  00F1D5  20                 	db	32
  1618  00F1D6  4D                 	db	77	;'M'
  1619  00F1D7  65                 	db	101	;'e'
  1620  00F1D8  6D                 	db	109	;'m'
  1621  00F1D9  6F                 	db	111	;'o'
  1622  00F1DA  72                 	db	114	;'r'
  1623  00F1DB  79                 	db	121	;'y'
  1624  00F1DC  0D                 	db	13
  1625  00F1DD  0A                 	db	10
  1626  00F1DE  00                 	db	0
  1627  00F1DF                     STR_187:
  1628  00F1DF  49                 	db	73	;'I'
  1629  00F1E0  6E                 	db	110	;'n'
  1630  00F1E1  76                 	db	118	;'v'
  1631  00F1E2  61                 	db	97	;'a'
  1632  00F1E3  6C                 	db	108	;'l'
  1633  00F1E4  69                 	db	105	;'i'
  1634  00F1E5  64                 	db	100	;'d'
  1635  00F1E6  20                 	db	32
  1636  00F1E7  43                 	db	67	;'C'
  1637  00F1E8  6F                 	db	111	;'o'
  1638  00F1E9  6E                 	db	110	;'n'
  1639  00F1EA  74                 	db	116	;'t'
  1640  00F1EB  72                 	db	114	;'r'
  1641  00F1EC  61                 	db	97	;'a'
  1642  00F1ED  73                 	db	115	;'s'
  1643  00F1EE  74                 	db	116	;'t'
  1644  00F1EF  20                 	db	32
  1645  00F1F0  44                 	db	68	;'D'
  1646  00F1F1  75                 	db	117	;'u'
  1647  00F1F2  74                 	db	116	;'t'
  1648  00F1F3  79                 	db	121	;'y'
  1649  00F1F4  20                 	db	32
  1650  00F1F5  43                 	db	67	;'C'
  1651  00F1F6  79                 	db	121	;'y'
  1652  00F1F7  63                 	db	99	;'c'
  1653  00F1F8  6C                 	db	108	;'l'
  1654  00F1F9  65                 	db	101	;'e'
  1655  00F1FA  3A                 	db	58	;':'
  1656  00F1FB  20                 	db	32
  1657  00F1FC  4C                 	db	76	;'L'
  1658  00F1FD  65                 	db	101	;'e'
  1659  00F1FE  73                 	db	115	;'s'
  1660  00F1FF  73                 	db	115	;'s'
  1661  00F200  20                 	db	32
  1662  00F201  74                 	db	116	;'t'
  1663  00F202  68                 	db	104	;'h'
  1664  00F203  61                 	db	97	;'a'
  1665  00F204  6E                 	db	110	;'n'
  1666  00F205  20                 	db	32
  1667  00F206  30                 	db	48	;'0'
  1668  00F207  0D                 	db	13
  1669  00F208  0A                 	db	10
  1670  00F209  00                 	db	0
  1671  00F20A                     STR_176:
  1672  00F20A  77                 	db	119	;'w'
  1673  00F20B  68                 	db	104	;'h'
  1674  00F20C  65                 	db	101	;'e'
  1675  00F20D  72                 	db	114	;'r'
  1676  00F20E  65                 	db	101	;'e'
  1677  00F20F  20                 	db	32
  1678  00F210  74                 	db	116	;'t'
  1679  00F211  68                 	db	104	;'h'
  1680  00F212  65                 	db	101	;'e'
  1681  00F213  20                 	db	32
  1682  00F214  64                 	db	100	;'d'
  1683  00F215  75                 	db	117	;'u'
  1684  00F216  74                 	db	116	;'t'
  1685  00F217  79                 	db	121	;'y'
  1686  00F218  63                 	db	99	;'c'
  1687  00F219  79                 	db	121	;'y'
  1688  00F21A  63                 	db	99	;'c'
  1689  00F21B  6C                 	db	108	;'l'
  1690  00F21C  65                 	db	101	;'e'
  1691  00F21D  20                 	db	32
  1692  00F21E  69                 	db	105	;'i'
  1693  00F21F  73                 	db	115	;'s'
  1694  00F220  20                 	db	32
  1695  00F221  61                 	db	97	;'a'
  1696  00F222  20                 	db	32
  1697  00F223  6E                 	db	110	;'n'
  1698  00F224  75                 	db	117	;'u'
  1699  00F225  6D                 	db	109	;'m'
  1700  00F226  62                 	db	98	;'b'
  1701  00F227  65                 	db	101	;'e'
  1702  00F228  72                 	db	114	;'r'
  1703  00F229  20                 	db	32
  1704  00F22A  30                 	db	48	;'0'
  1705  00F22B  20                 	db	32
  1706  00F22C  2D                 	db	45
  1707  00F22D  20                 	db	32
  1708  00F22E  31                 	db	49	;'1'
  1709  00F22F  30                 	db	48	;'0'
  1710  00F230  30                 	db	48	;'0'
  1711  00F231  0D                 	db	13
  1712  00F232  0A                 	db	10
  1713  00F233  00                 	db	0
  1714  00F234                     STR_166:
  1715  00F234  49                 	db	73	;'I'
  1716  00F235  6E                 	db	110	;'n'
  1717  00F236  76                 	db	118	;'v'
  1718  00F237  61                 	db	97	;'a'
  1719  00F238  6C                 	db	108	;'l'
  1720  00F239  69                 	db	105	;'i'
  1721  00F23A  64                 	db	100	;'d'
  1722  00F23B  20                 	db	32
  1723  00F23C  44                 	db	68	;'D'
  1724  00F23D  75                 	db	117	;'u'
  1725  00F23E  74                 	db	116	;'t'
  1726  00F23F  79                 	db	121	;'y'
  1727  00F240  63                 	db	99	;'c'
  1728  00F241  79                 	db	121	;'y'
  1729  00F242  63                 	db	99	;'c'
  1730  00F243  6C                 	db	108	;'l'
  1731  00F244  65                 	db	101	;'e'
  1732  00F245  3A                 	db	58	;':'
  1733  00F246  20                 	db	32
  1734  00F247  47                 	db	71	;'G'
  1735  00F248  72                 	db	114	;'r'
  1736  00F249  65                 	db	101	;'e'
  1737  00F24A  61                 	db	97	;'a'
  1738  00F24B  74                 	db	116	;'t'
  1739  00F24C  65                 	db	101	;'e'
  1740  00F24D  72                 	db	114	;'r'
  1741  00F24E  20                 	db	32
  1742  00F24F  74                 	db	116	;'t'
  1743  00F250  68                 	db	104	;'h'
  1744  00F251  61                 	db	97	;'a'
  1745  00F252  6E                 	db	110	;'n'
  1746  00F253  20                 	db	32
  1747  00F254  31                 	db	49	;'1'
  1748  00F255  30                 	db	48	;'0'
  1749  00F256  30                 	db	48	;'0'
  1750  00F257  0D                 	db	13
  1751  00F258  0A                 	db	10
  1752  00F259  00                 	db	0
  1753  00F25A                     STR_136:
  1754  00F25A  43                 	db	67	;'C'
  1755  00F25B  68                 	db	104	;'h'
  1756  00F25C  72                 	db	114	;'r'
  1757  00F25D  69                 	db	105	;'i'
  1758  00F25E  73                 	db	115	;'s'
  1759  00F25F  74                 	db	116	;'t'
  1760  00F260  6D                 	db	109	;'m'
  1761  00F261  61                 	db	97	;'a'
  1762  00F262  73                 	db	115	;'s'
  1763  00F263  20                 	db	32
  1764  00F264  54                 	db	84	;'T'
  1765  00F265  72                 	db	114	;'r'
  1766  00F266  65                 	db	101	;'e'
  1767  00F267  65                 	db	101	;'e'
  1768  00F268  20                 	db	32
  1769  00F269  43                 	db	67	;'C'
  1770  00F26A  6F                 	db	111	;'o'
  1771  00F26B  6C                 	db	108	;'l'
  1772  00F26C  6F                 	db	111	;'o'
  1773  00F26D  72                 	db	114	;'r'
  1774  00F26E  65                 	db	101	;'e'
  1775  00F26F  64                 	db	100	;'d'
  1776  00F270  20                 	db	32
  1777  00F271  4C                 	db	76	;'L'
  1778  00F272  69                 	db	105	;'i'
  1779  00F273  67                 	db	103	;'g'
  1780  00F274  68                 	db	104	;'h'
  1781  00F275  74                 	db	116	;'t'
  1782  00F276  73                 	db	115	;'s'
  1783  00F277  20                 	db	32
  1784  00F278  54                 	db	84	;'T'
  1785  00F279  6F                 	db	111	;'o'
  1786  00F27A  67                 	db	103	;'g'
  1787  00F27B  67                 	db	103	;'g'
  1788  00F27C  6C                 	db	108	;'l'
  1789  00F27D  65                 	db	101	;'e'
  1790  00F27E  64                 	db	100	;'d'
  1791  00F27F  00                 	db	0
  1792  00F280                     STR_5:
  1793  00F280  0D                 	db	13
  1794  00F281  0A                 	db	10
  1795  00F282  42                 	db	66	;'B'
  1796  00F283  75                 	db	117	;'u'
  1797  00F284  66                 	db	102	;'f'
  1798  00F285  66                 	db	102	;'f'
  1799  00F286  65                 	db	101	;'e'
  1800  00F287  72                 	db	114	;'r'
  1801  00F288  20                 	db	32
  1802  00F289  6F                 	db	111	;'o'
  1803  00F28A  76                 	db	118	;'v'
  1804  00F28B  65                 	db	101	;'e'
  1805  00F28C  72                 	db	114	;'r'
  1806  00F28D  66                 	db	102	;'f'
  1807  00F28E  6C                 	db	108	;'l'
  1808  00F28F  6F                 	db	111	;'o'
  1809  00F290  77                 	db	119	;'w'
  1810  00F291  21                 	db	33
  1811  00F292  20                 	db	32
  1812  00F293  44                 	db	68	;'D'
  1813  00F294  65                 	db	101	;'e'
  1814  00F295  6C                 	db	108	;'l'
  1815  00F296  65                 	db	101	;'e'
  1816  00F297  74                 	db	116	;'t'
  1817  00F298  69                 	db	105	;'i'
  1818  00F299  6E                 	db	110	;'n'
  1819  00F29A  67                 	db	103	;'g'
  1820  00F29B  20                 	db	32
  1821  00F29C  42                 	db	66	;'B'
  1822  00F29D  75                 	db	117	;'u'
  1823  00F29E  66                 	db	102	;'f'
  1824  00F29F  66                 	db	102	;'f'
  1825  00F2A0  65                 	db	101	;'e'
  1826  00F2A1  72                 	db	114	;'r'
  1827  00F2A2  20                 	db	32
  1828  00F2A3  0D                 	db	13
  1829  00F2A4  0A                 	db	10
  1830  00F2A5  00                 	db	0
  1831  00F2A6                     STR_153:
  1832  00F2A6  69                 	db	105	;'i'
  1833  00F2A7  2E                 	db	46
  1834  00F2A8  65                 	db	101	;'e'
  1835  00F2A9  2E                 	db	46
  1836  00F2AA  20                 	db	32
  1837  00F2AB  43                 	db	67	;'C'
  1838  00F2AC  68                 	db	104	;'h'
  1839  00F2AD  72                 	db	114	;'r'
  1840  00F2AE  69                 	db	105	;'i'
  1841  00F2AF  73                 	db	115	;'s'
  1842  00F2B0  74                 	db	116	;'t'
  1843  00F2B1  6D                 	db	109	;'m'
  1844  00F2B2  61                 	db	97	;'a'
  1845  00F2B3  73                 	db	115	;'s'
  1846  00F2B4  20                 	db	32
  1847  00F2B5  43                 	db	67	;'C'
  1848  00F2B6  6F                 	db	111	;'o'
  1849  00F2B7  6C                 	db	108	;'l'
  1850  00F2B8  6F                 	db	111	;'o'
  1851  00F2B9  72                 	db	114	;'r'
  1852  00F2BA  65                 	db	101	;'e'
  1853  00F2BB  64                 	db	100	;'d'
  1854  00F2BC  20                 	db	32
  1855  00F2BD  6C                 	db	108	;'l'
  1856  00F2BE  69                 	db	105	;'i'
  1857  00F2BF  67                 	db	103	;'g'
  1858  00F2C0  68                 	db	104	;'h'
  1859  00F2C1  74                 	db	116	;'t'
  1860  00F2C2  73                 	db	115	;'s'
  1861  00F2C3  20                 	db	32
  1862  00F2C4  3D                 	db	61	;'='
  1863  00F2C5  20                 	db	32
  1864  00F2C6  4F                 	db	79	;'O'
  1865  00F2C7  6E                 	db	110	;'n'
  1866  00F2C8  0D                 	db	13
  1867  00F2C9  0A                 	db	10
  1868  00F2CA  00                 	db	0
  1869  00F2CB                     STR_231:
  1870  00F2CB  45                 	db	69	;'E'
  1871  00F2CC  6E                 	db	110	;'n'
  1872  00F2CD  74                 	db	116	;'t'
  1873  00F2CE  65                 	db	101	;'e'
  1874  00F2CF  72                 	db	114	;'r'
  1875  00F2D0  20                 	db	32
  1876  00F2D1  54                 	db	84	;'T'
  1877  00F2D2  69                 	db	105	;'i'
  1878  00F2D3  6D                 	db	109	;'m'
  1879  00F2D4  65                 	db	101	;'e'
  1880  00F2D5  20                 	db	32
  1881  00F2D6  4D                 	db	77	;'M'
  1882  00F2D7  4D                 	db	77	;'M'
  1883  00F2D8  2F                 	db	47
  1884  00F2D9  44                 	db	68	;'D'
  1885  00F2DA  44                 	db	68	;'D'
  1886  00F2DB  2F                 	db	47
  1887  00F2DC  59                 	db	89	;'Y'
  1888  00F2DD  59                 	db	89	;'Y'
  1889  00F2DE  20                 	db	32
  1890  00F2DF  48                 	db	72	;'H'
  1891  00F2E0  48                 	db	72	;'H'
  1892  00F2E1  3A                 	db	58	;':'
  1893  00F2E2  4D                 	db	77	;'M'
  1894  00F2E3  4D                 	db	77	;'M'
  1895  00F2E4  3A                 	db	58	;':'
  1896  00F2E5  53                 	db	83	;'S'
  1897  00F2E6  53                 	db	83	;'S'
  1898  00F2E7  20                 	db	32
  1899  00F2E8  41                 	db	65	;'A'
  1900  00F2E9  4D                 	db	77	;'M'
  1901  00F2EA  20                 	db	32
  1902  00F2EB  6F                 	db	111	;'o'
  1903  00F2EC  72                 	db	114	;'r'
  1904  00F2ED  0D                 	db	13
  1905  00F2EE  0A                 	db	10
  1906  00F2EF  00                 	db	0
  1907  00F2F0                     STR_221:
  1908  00F2F0  20                 	db	32
  1909  00F2F1  33                 	db	51	;'3'
  1910  00F2F2  20                 	db	32
  1911  00F2F3  56                 	db	86	;'V'
  1912  00F2F4  6F                 	db	111	;'o'
  1913  00F2F5  6C                 	db	108	;'l'
  1914  00F2F6  74                 	db	116	;'t'
  1915  00F2F7  20                 	db	32
  1916  00F2F8  52                 	db	82	;'R'
  1917  00F2F9  54                 	db	84	;'T'
  1918  00F2FA  43                 	db	67	;'C'
  1919  00F2FB  20                 	db	32
  1920  00F2FC  42                 	db	66	;'B'
  1921  00F2FD  61                 	db	97	;'a'
  1922  00F2FE  74                 	db	116	;'t'
  1923  00F2FF  74                 	db	116	;'t'
  1924  00F300  65                 	db	101	;'e'
  1925  00F301  72                 	db	114	;'r'
  1926  00F302  79                 	db	121	;'y'
  1927  00F303  20                 	db	32
  1928  00F304  56                 	db	86	;'V'
  1929  00F305  6F                 	db	111	;'o'
  1930  00F306  6C                 	db	108	;'l'
  1931  00F307  74                 	db	116	;'t'
  1932  00F308  61                 	db	97	;'a'
  1933  00F309  67                 	db	103	;'g'
  1934  00F30A  65                 	db	101	;'e'
  1935  00F30B  20                 	db	32
  1936  00F30C  3D                 	db	61	;'='
  1937  00F30D  20                 	db	32
  1938  00F30E  25                 	db	37
  1939  00F30F  64                 	db	100	;'d'
  1940  00F310  2E                 	db	46
  1941  00F311  25                 	db	37
  1942  00F312  64                 	db	100	;'d'
  1943  00F313  00                 	db	0
  1944  00F314                     STR_321:
  1945  00F314  25                 	db	37
  1946  00F315  30                 	db	48	;'0'
  1947  00F316  32                 	db	50	;'2'
  1948  00F317  64                 	db	100	;'d'
  1949  00F318  2F                 	db	47
  1950  00F319  25                 	db	37
  1951  00F31A  30                 	db	48	;'0'
  1952  00F31B  32                 	db	50	;'2'
  1953  00F31C  64                 	db	100	;'d'
  1954  00F31D  2F                 	db	47
  1955  00F31E  32                 	db	50	;'2'
  1956  00F31F  30                 	db	48	;'0'
  1957  00F320  25                 	db	37
  1958  00F321  30                 	db	48	;'0'
  1959  00F322  32                 	db	50	;'2'
  1960  00F323  64                 	db	100	;'d'
  1961  00F324  20                 	db	32
  1962  00F325  25                 	db	37
  1963  00F326  30                 	db	48	;'0'
  1964  00F327  32                 	db	50	;'2'
  1965  00F328  64                 	db	100	;'d'
  1966  00F329  3A                 	db	58	;':'
  1967  00F32A  25                 	db	37
  1968  00F32B  30                 	db	48	;'0'
  1969  00F32C  32                 	db	50	;'2'
  1970  00F32D  64                 	db	100	;'d'
  1971  00F32E  3A                 	db	58	;':'
  1972  00F32F  25                 	db	37
  1973  00F330  30                 	db	48	;'0'
  1974  00F331  32                 	db	50	;'2'
  1975  00F332  64                 	db	100	;'d'
  1976  00F333  20                 	db	32
  1977  00F334  41                 	db	65	;'A'
  1978  00F335  4D                 	db	77	;'M'
  1979  00F336  00                 	db	0
  1980  00F337                     STR_322:
  1981  00F337  25                 	db	37
  1982  00F338  30                 	db	48	;'0'
  1983  00F339  32                 	db	50	;'2'
  1984  00F33A  64                 	db	100	;'d'
  1985  00F33B  2F                 	db	47
  1986  00F33C  25                 	db	37
  1987  00F33D  30                 	db	48	;'0'
  1988  00F33E  32                 	db	50	;'2'
  1989  00F33F  64                 	db	100	;'d'
  1990  00F340  2F                 	db	47
  1991  00F341  32                 	db	50	;'2'
  1992  00F342  30                 	db	48	;'0'
  1993  00F343  25                 	db	37
  1994  00F344  30                 	db	48	;'0'
  1995  00F345  32                 	db	50	;'2'
  1996  00F346  64                 	db	100	;'d'
  1997  00F347  20                 	db	32
  1998  00F348  25                 	db	37
  1999  00F349  30                 	db	48	;'0'
  2000  00F34A  32                 	db	50	;'2'
  2001  00F34B  64                 	db	100	;'d'
  2002  00F34C  3A                 	db	58	;':'
  2003  00F34D  25                 	db	37
  2004  00F34E  30                 	db	48	;'0'
  2005  00F34F  32                 	db	50	;'2'
  2006  00F350  64                 	db	100	;'d'
  2007  00F351  3A                 	db	58	;':'
  2008  00F352  25                 	db	37
  2009  00F353  30                 	db	48	;'0'
  2010  00F354  32                 	db	50	;'2'
  2011  00F355  64                 	db	100	;'d'
  2012  00F356  20                 	db	32
  2013  00F357  50                 	db	80	;'P'
  2014  00F358  4D                 	db	77	;'M'
  2015  00F359  00                 	db	0
  2016  00F35A                     STR_232:
  2017  00F35A  45                 	db	69	;'E'
  2018  00F35B  6E                 	db	110	;'n'
  2019  00F35C  74                 	db	116	;'t'
  2020  00F35D  65                 	db	101	;'e'
  2021  00F35E  72                 	db	114	;'r'
  2022  00F35F  20                 	db	32
  2023  00F360  54                 	db	84	;'T'
  2024  00F361  69                 	db	105	;'i'
  2025  00F362  6D                 	db	109	;'m'
  2026  00F363  65                 	db	101	;'e'
  2027  00F364  20                 	db	32
  2028  00F365  4D                 	db	77	;'M'
  2029  00F366  4D                 	db	77	;'M'
  2030  00F367  2F                 	db	47
  2031  00F368  44                 	db	68	;'D'
  2032  00F369  44                 	db	68	;'D'
  2033  00F36A  2F                 	db	47
  2034  00F36B  59                 	db	89	;'Y'
  2035  00F36C  59                 	db	89	;'Y'
  2036  00F36D  20                 	db	32
  2037  00F36E  48                 	db	72	;'H'
  2038  00F36F  48                 	db	72	;'H'
  2039  00F370  3A                 	db	58	;':'
  2040  00F371  4D                 	db	77	;'M'
  2041  00F372  4D                 	db	77	;'M'
  2042  00F373  3A                 	db	58	;':'
  2043  00F374  53                 	db	83	;'S'
  2044  00F375  53                 	db	83	;'S'
  2045  00F376  20                 	db	32
  2046  00F377  50                 	db	80	;'P'
  2047  00F378  4D                 	db	77	;'M'
  2048  00F379  0D                 	db	13
  2049  00F37A  0A                 	db	10
  2050  00F37B  00                 	db	0
  2051  00F37C                     STR_168:
  2052  00F37C  49                 	db	73	;'I'
  2053  00F37D  6E                 	db	110	;'n'
  2054  00F37E  76                 	db	118	;'v'
  2055  00F37F  61                 	db	97	;'a'
  2056  00F380  6C                 	db	108	;'l'
  2057  00F381  69                 	db	105	;'i'
  2058  00F382  64                 	db	100	;'d'
  2059  00F383  20                 	db	32
  2060  00F384  44                 	db	68	;'D'
  2061  00F385  75                 	db	117	;'u'
  2062  00F386  74                 	db	116	;'t'
  2063  00F387  79                 	db	121	;'y'
  2064  00F388  63                 	db	99	;'c'
  2065  00F389  79                 	db	121	;'y'
  2066  00F38A  63                 	db	99	;'c'
  2067  00F38B  6C                 	db	108	;'l'
  2068  00F38C  65                 	db	101	;'e'
  2069  00F38D  3A                 	db	58	;':'
  2070  00F38E  20                 	db	32
  2071  00F38F  4C                 	db	76	;'L'
  2072  00F390  65                 	db	101	;'e'
  2073  00F391  73                 	db	115	;'s'
  2074  00F392  73                 	db	115	;'s'
  2075  00F393  20                 	db	32
  2076  00F394  74                 	db	116	;'t'
  2077  00F395  68                 	db	104	;'h'
  2078  00F396  61                 	db	97	;'a'
  2079  00F397  6E                 	db	110	;'n'
  2080  00F398  20                 	db	32
  2081  00F399  30                 	db	48	;'0'
  2082  00F39A  0D                 	db	13
  2083  00F39B  0A                 	db	10
  2084  00F39C  00                 	db	0
  2085  00F39D                     STR_238:
  2086  00F39D  46                 	db	70	;'F'
  2087  00F39E  6F                 	db	111	;'o'
  2088  00F39F  72                 	db	114	;'r'
  2089  00F3A0  6D                 	db	109	;'m'
  2090  00F3A1  61                 	db	97	;'a'
  2091  00F3A2  74                 	db	116	;'t'
  2092  00F3A3  20                 	db	32
  2093  00F3A4  69                 	db	105	;'i'
  2094  00F3A5  73                 	db	115	;'s'
  2095  00F3A6  20                 	db	32
  2096  00F3A7  4D                 	db	77	;'M'
  2097  00F3A8  4D                 	db	77	;'M'
  2098  00F3A9  2F                 	db	47
  2099  00F3AA  44                 	db	68	;'D'
  2100  00F3AB  44                 	db	68	;'D'
  2101  00F3AC  2F                 	db	47
  2102  00F3AD  59                 	db	89	;'Y'
  2103  00F3AE  59                 	db	89	;'Y'
  2104  00F3AF  20                 	db	32
  2105  00F3B0  48                 	db	72	;'H'
  2106  00F3B1  48                 	db	72	;'H'
  2107  00F3B2  3A                 	db	58	;':'
  2108  00F3B3  4D                 	db	77	;'M'
  2109  00F3B4  4D                 	db	77	;'M'
  2110  00F3B5  3A                 	db	58	;':'
  2111  00F3B6  53                 	db	83	;'S'
  2112  00F3B7  53                 	db	83	;'S'
  2113  00F3B8  20                 	db	32
  2114  00F3B9  41                 	db	65	;'A'
  2115  00F3BA  4D                 	db	77	;'M'
  2116  00F3BB  0D                 	db	13
  2117  00F3BC  0A                 	db	10
  2118  00F3BD  00                 	db	0
  2119  00F3BE                     STR_200:
  2120  00F3BE  45                 	db	69	;'E'
  2121  00F3BF  72                 	db	114	;'r'
  2122  00F3C0  72                 	db	114	;'r'
  2123  00F3C1  6F                 	db	111	;'o'
  2124  00F3C2  72                 	db	114	;'r'
  2125  00F3C3  3A                 	db	58	;':'
  2126  00F3C4  20                 	db	32
  2127  00F3C5  6F                 	db	111	;'o'
  2128  00F3C6  6E                 	db	110	;'n'
  2129  00F3C7  6C                 	db	108	;'l'
  2130  00F3C8  79                 	db	121	;'y'
  2131  00F3C9  20                 	db	32
  2132  00F3CA  75                 	db	117	;'u'
  2133  00F3CB  73                 	db	115	;'s'
  2134  00F3CC  65                 	db	101	;'e'
  2135  00F3CD  20                 	db	32
  2136  00F3CE  6F                 	db	111	;'o'
  2137  00F3CF  6E                 	db	110	;'n'
  2138  00F3D0  65                 	db	101	;'e'
  2139  00F3D1  20                 	db	32
  2140  00F3D2  65                 	db	101	;'e'
  2141  00F3D3  71                 	db	113	;'q'
  2142  00F3D4  75                 	db	117	;'u'
  2143  00F3D5  61                 	db	97	;'a'
  2144  00F3D6  6C                 	db	108	;'l'
  2145  00F3D7  20                 	db	32
  2146  00F3D8  73                 	db	115	;'s'
  2147  00F3D9  69                 	db	105	;'i'
  2148  00F3DA  67                 	db	103	;'g'
  2149  00F3DB  6E                 	db	110	;'n'
  2150  00F3DC  0D                 	db	13
  2151  00F3DD  0A                 	db	10
  2152  00F3DE  00                 	db	0
  2153  00F3DF                     STR_323:
  2154  00F3DF  25                 	db	37
  2155  00F3E0  30                 	db	48	;'0'
  2156  00F3E1  32                 	db	50	;'2'
  2157  00F3E2  64                 	db	100	;'d'
  2158  00F3E3  2F                 	db	47
  2159  00F3E4  25                 	db	37
  2160  00F3E5  30                 	db	48	;'0'
  2161  00F3E6  32                 	db	50	;'2'
  2162  00F3E7  64                 	db	100	;'d'
  2163  00F3E8  2F                 	db	47
  2164  00F3E9  32                 	db	50	;'2'
  2165  00F3EA  30                 	db	48	;'0'
  2166  00F3EB  25                 	db	37
  2167  00F3EC  30                 	db	48	;'0'
  2168  00F3ED  32                 	db	50	;'2'
  2169  00F3EE  64                 	db	100	;'d'
  2170  00F3EF  20                 	db	32
  2171  00F3F0  25                 	db	37
  2172  00F3F1  30                 	db	48	;'0'
  2173  00F3F2  32                 	db	50	;'2'
  2174  00F3F3  64                 	db	100	;'d'
  2175  00F3F4  3A                 	db	58	;':'
  2176  00F3F5  25                 	db	37
  2177  00F3F6  30                 	db	48	;'0'
  2178  00F3F7  32                 	db	50	;'2'
  2179  00F3F8  64                 	db	100	;'d'
  2180  00F3F9  3A                 	db	58	;':'
  2181  00F3FA  25                 	db	37
  2182  00F3FB  30                 	db	48	;'0'
  2183  00F3FC  32                 	db	50	;'2'
  2184  00F3FD  64                 	db	100	;'d'
  2185  00F3FE  00                 	db	0
  2186  00F3FF                     STR_189:
  2187  00F3FF  43                 	db	67	;'C'
  2188  00F400  6F                 	db	111	;'o'
  2189  00F401  6E                 	db	110	;'n'
  2190  00F402  74                 	db	116	;'t'
  2191  00F403  72                 	db	114	;'r'
  2192  00F404  61                 	db	97	;'a'
  2193  00F405  73                 	db	115	;'s'
  2194  00F406  74                 	db	116	;'t'
  2195  00F407  20                 	db	32
  2196  00F408  44                 	db	68	;'D'
  2197  00F409  75                 	db	117	;'u'
  2198  00F40A  74                 	db	116	;'t'
  2199  00F40B  79                 	db	121	;'y'
  2200  00F40C  20                 	db	32
  2201  00F40D  43                 	db	67	;'C'
  2202  00F40E  79                 	db	121	;'y'
  2203  00F40F  63                 	db	99	;'c'
  2204  00F410  6C                 	db	108	;'l'
  2205  00F411  65                 	db	101	;'e'
  2206  00F412  20                 	db	32
  2207  00F413  73                 	db	115	;'s'
  2208  00F414  65                 	db	101	;'e'
  2209  00F415  74                 	db	116	;'t'
  2210  00F416  20                 	db	32
  2211  00F417  74                 	db	116	;'t'
  2212  00F418  6F                 	db	111	;'o'
  2213  00F419  20                 	db	32
  2214  00F41A  25                 	db	37
  2215  00F41B  64                 	db	100	;'d'
  2216  00F41C  0D                 	db	13
  2217  00F41D  0A                 	db	10
  2218  00F41E  00                 	db	0
  2219  00F41F                     STR_144:
  2220  00F41F  43                 	db	67	;'C'
  2221  00F420  68                 	db	104	;'h'
  2222  00F421  72                 	db	114	;'r'
  2223  00F422  69                 	db	105	;'i'
  2224  00F423  73                 	db	115	;'s'
  2225  00F424  74                 	db	116	;'t'
  2226  00F425  6D                 	db	109	;'m'
  2227  00F426  61                 	db	97	;'a'
  2228  00F427  73                 	db	115	;'s'
  2229  00F428  20                 	db	32
  2230  00F429  54                 	db	84	;'T'
  2231  00F42A  72                 	db	114	;'r'
  2232  00F42B  65                 	db	101	;'e'
  2233  00F42C  65                 	db	101	;'e'
  2234  00F42D  20                 	db	32
  2235  00F42E  57                 	db	87	;'W'
  2236  00F42F  68                 	db	104	;'h'
  2237  00F430  69                 	db	105	;'i'
  2238  00F431  74                 	db	116	;'t'
  2239  00F432  65                 	db	101	;'e'
  2240  00F433  20                 	db	32
  2241  00F434  4C                 	db	76	;'L'
  2242  00F435  69                 	db	105	;'i'
  2243  00F436  67                 	db	103	;'g'
  2244  00F437  68                 	db	104	;'h'
  2245  00F438  74                 	db	116	;'t'
  2246  00F439  73                 	db	115	;'s'
  2247  00F43A  20                 	db	32
  2248  00F43B  4F                 	db	79	;'O'
  2249  00F43C  66                 	db	102	;'f'
  2250  00F43D  66                 	db	102	;'f'
  2251  00F43E  00                 	db	0
  2252  00F43F                     STR_140:
  2253  00F43F  43                 	db	67	;'C'
  2254  00F440  68                 	db	104	;'h'
  2255  00F441  72                 	db	114	;'r'
  2256  00F442  69                 	db	105	;'i'
  2257  00F443  73                 	db	115	;'s'
  2258  00F444  74                 	db	116	;'t'
  2259  00F445  6D                 	db	109	;'m'
  2260  00F446  61                 	db	97	;'a'
  2261  00F447  73                 	db	115	;'s'
  2262  00F448  20                 	db	32
  2263  00F449  54                 	db	84	;'T'
  2264  00F44A  72                 	db	114	;'r'
  2265  00F44B  65                 	db	101	;'e'
  2266  00F44C  65                 	db	101	;'e'
  2267  00F44D  20                 	db	32
  2268  00F44E  57                 	db	87	;'W'
  2269  00F44F  68                 	db	104	;'h'
  2270  00F450  69                 	db	105	;'i'
  2271  00F451  74                 	db	116	;'t'
  2272  00F452  65                 	db	101	;'e'
  2273  00F453  20                 	db	32
  2274  00F454  4C                 	db	76	;'L'
  2275  00F455  69                 	db	105	;'i'
  2276  00F456  67                 	db	103	;'g'
  2277  00F457  68                 	db	104	;'h'
  2278  00F458  74                 	db	116	;'t'
  2279  00F459  73                 	db	115	;'s'
  2280  00F45A  20                 	db	32
  2281  00F45B  4F                 	db	79	;'O'
  2282  00F45C  6E                 	db	110	;'n'
  2283  00F45D  00                 	db	0
  2284  00F45E                     STR_202:
  2285  00F45E  45                 	db	69	;'E'
  2286  00F45F  72                 	db	114	;'r'
  2287  00F460  72                 	db	114	;'r'
  2288  00F461  6F                 	db	111	;'o'
  2289  00F462  72                 	db	114	;'r'
  2290  00F463  3A                 	db	58	;':'
  2291  00F464  20                 	db	32
  2292  00F465  4E                 	db	78	;'N'
  2293  00F466  6F                 	db	111	;'o'
  2294  00F467  20                 	db	32
  2295  00F468  6E                 	db	110	;'n'
  2296  00F469  65                 	db	101	;'e'
  2297  00F46A  67                 	db	103	;'g'
  2298  00F46B  61                 	db	97	;'a'
  2299  00F46C  74                 	db	116	;'t'
  2300  00F46D  69                 	db	105	;'i'
  2301  00F46E  76                 	db	118	;'v'
  2302  00F46F  65                 	db	101	;'e'
  2303  00F470  20                 	db	32
  2304  00F471  63                 	db	99	;'c'
  2305  00F472  68                 	db	104	;'h'
  2306  00F473  61                 	db	97	;'a'
  2307  00F474  6E                 	db	110	;'n'
  2308  00F475  6E                 	db	110	;'n'
  2309  00F476  65                 	db	101	;'e'
  2310  00F477  6C                 	db	108	;'l'
  2311  00F478  73                 	db	115	;'s'
  2312  00F479  0D                 	db	13
  2313  00F47A  0A                 	db	10
  2314  00F47B  00                 	db	0
  2315  00F47C                     STR_240:
  2316  00F47C  52                 	db	82	;'R'
  2317  00F47D  65                 	db	101	;'e'
  2318  00F47E  61                 	db	97	;'a'
  2319  00F47F  6C                 	db	108	;'l'
  2320  00F480  20                 	db	32
  2321  00F481  54                 	db	84	;'T'
  2322  00F482  69                 	db	105	;'i'
  2323  00F483  6D                 	db	109	;'m'
  2324  00F484  65                 	db	101	;'e'
  2325  00F485  20                 	db	32
  2326  00F486  43                 	db	67	;'C'
  2327  00F487  6C                 	db	108	;'l'
  2328  00F488  6F                 	db	111	;'o'
  2329  00F489  63                 	db	99	;'c'
  2330  00F48A  6B                 	db	107	;'k'
  2331  00F48B  20                 	db	32
  2332  00F48C  48                 	db	72	;'H'
  2333  00F48D  65                 	db	101	;'e'
  2334  00F48E  6C                 	db	108	;'l'
  2335  00F48F  70                 	db	112	;'p'
  2336  00F490  20                 	db	32
  2337  00F491  4D                 	db	77	;'M'
  2338  00F492  65                 	db	101	;'e'
  2339  00F493  6E                 	db	110	;'n'
  2340  00F494  75                 	db	117	;'u'
  2341  00F495  0D                 	db	13
  2342  00F496  0A                 	db	10
  2343  00F497  0A                 	db	10
  2344  00F498  00                 	db	0
  2345  00F499                     STR_206:
  2346  00F499  43                 	db	67	;'C'
  2347  00F49A  68                 	db	104	;'h'
  2348  00F49B  61                 	db	97	;'a'
  2349  00F49C  6E                 	db	110	;'n'
  2350  00F49D  6E                 	db	110	;'n'
  2351  00F49E  65                 	db	101	;'e'
  2352  00F49F  6C                 	db	108	;'l'
  2353  00F4A0  20                 	db	32
  2354  00F4A1  25                 	db	37
  2355  00F4A2  64                 	db	100	;'d'
  2356  00F4A3  20                 	db	32
  2357  00F4A4  69                 	db	105	;'i'
  2358  00F4A5  73                 	db	115	;'s'
  2359  00F4A6  20                 	db	32
  2360  00F4A7  6E                 	db	110	;'n'
  2361  00F4A8  6F                 	db	111	;'o'
  2362  00F4A9  74                 	db	116	;'t'
  2363  00F4AA  20                 	db	32
  2364  00F4AB  63                 	db	99	;'c'
  2365  00F4AC  6F                 	db	111	;'o'
  2366  00F4AD  6E                 	db	110	;'n'
  2367  00F4AE  66                 	db	102	;'f'
  2368  00F4AF  69                 	db	105	;'i'
  2369  00F4B0  67                 	db	103	;'g'
  2370  00F4B1  75                 	db	117	;'u'
  2371  00F4B2  72                 	db	114	;'r'
  2372  00F4B3  65                 	db	101	;'e'
  2373  00F4B4  64                 	db	100	;'d'
  2374  00F4B5  00                 	db	0
  2375  00F4B6                     STR_21:
  2376  00F4B6  0D                 	db	13
  2377  00F4B7  0A                 	db	10
  2378  00F4B8  45                 	db	69	;'E'
  2379  00F4B9  6E                 	db	110	;'n'
  2380  00F4BA  74                 	db	116	;'t'
  2381  00F4BB  65                 	db	101	;'e'
  2382  00F4BC  72                 	db	114	;'r'
  2383  00F4BD  20                 	db	32
  2384  00F4BE  27                 	db	39
  2385  00F4BF  3F                 	db	63	;'?'
  2386  00F4C0  27                 	db	39
  2387  00F4C1  20                 	db	32
  2388  00F4C2  66                 	db	102	;'f'
  2389  00F4C3  6F                 	db	111	;'o'
  2390  00F4C4  72                 	db	114	;'r'
  2391  00F4C5  20                 	db	32
  2392  00F4C6  48                 	db	72	;'H'
  2393  00F4C7  65                 	db	101	;'e'
  2394  00F4C8  6C                 	db	108	;'l'
  2395  00F4C9  70                 	db	112	;'p'
  2396  00F4CA  20                 	db	32
  2397  00F4CB  4D                 	db	77	;'M'
  2398  00F4CC  65                 	db	101	;'e'
  2399  00F4CD  6E                 	db	110	;'n'
  2400  00F4CE  75                 	db	117	;'u'
  2401  00F4CF  0D                 	db	13
  2402  00F4D0  0A                 	db	10
  2403  00F4D1  3E                 	db	62	;'>'
  2404  00F4D2  00                 	db	0
  2405  00F4D3                     STR_148:
  2406  00F4D3  43                 	db	67	;'C'
  2407  00F4D4  68                 	db	104	;'h'
  2408  00F4D5  72                 	db	114	;'r'
  2409  00F4D6  69                 	db	105	;'i'
  2410  00F4D7  73                 	db	115	;'s'
  2411  00F4D8  74                 	db	116	;'t'
  2412  00F4D9  6D                 	db	109	;'m'
  2413  00F4DA  61                 	db	97	;'a'
  2414  00F4DB  73                 	db	115	;'s'
  2415  00F4DC  20                 	db	32
  2416  00F4DD  74                 	db	116	;'t'
  2417  00F4DE  72                 	db	114	;'r'
  2418  00F4DF  65                 	db	101	;'e'
  2419  00F4E0  65                 	db	101	;'e'
  2420  00F4E1  20                 	db	32
  2421  00F4E2  48                 	db	72	;'H'
  2422  00F4E3  65                 	db	101	;'e'
  2423  00F4E4  6C                 	db	108	;'l'
  2424  00F4E5  70                 	db	112	;'p'
  2425  00F4E6  20                 	db	32
  2426  00F4E7  4D                 	db	77	;'M'
  2427  00F4E8  65                 	db	101	;'e'
  2428  00F4E9  6E                 	db	110	;'n'
  2429  00F4EA  75                 	db	117	;'u'
  2430  00F4EB  0D                 	db	13
  2431  00F4EC  0A                 	db	10
  2432  00F4ED  0A                 	db	10
  2433  00F4EE  00                 	db	0
  2434  00F4EF                     STR_204:
  2435  00F4EF  45                 	db	69	;'E'
  2436  00F4F0  72                 	db	114	;'r'
  2437  00F4F1  72                 	db	114	;'r'
  2438  00F4F2  6F                 	db	111	;'o'
  2439  00F4F3  72                 	db	114	;'r'
  2440  00F4F4  3A                 	db	58	;':'
  2441  00F4F5  20                 	db	32
  2442  00F4F6  69                 	db	105	;'i'
  2443  00F4F7  6E                 	db	110	;'n'
  2444  00F4F8  20                 	db	32
  2445  00F4F9  70                 	db	112	;'p'
  2446  00F4FA  61                 	db	97	;'a'
  2447  00F4FB  72                 	db	114	;'r'
  2448  00F4FC  73                 	db	115	;'s'
  2449  00F4FD  69                 	db	105	;'i'
  2450  00F4FE  6E                 	db	110	;'n'
  2451  00F4FF  67                 	db	103	;'g'
  2452  00F500  20                 	db	32
  2453  00F501  63                 	db	99	;'c'
  2454  00F502  6F                 	db	111	;'o'
  2455  00F503  6D                 	db	109	;'m'
  2456  00F504  6D                 	db	109	;'m'
  2457  00F505  61                 	db	97	;'a'
  2458  00F506  6E                 	db	110	;'n'
  2459  00F507  64                 	db	100	;'d'
  2460  00F508  0D                 	db	13
  2461  00F509  0A                 	db	10
  2462  00F50A  00                 	db	0
  2463  00F50B                     STR_163:
  2464  00F50B  74                 	db	116	;'t'
  2465  00F50C  68                 	db	104	;'h'
  2466  00F50D  65                 	db	101	;'e'
  2467  00F50E  72                 	db	114	;'r'
  2468  00F50F  65                 	db	101	;'e'
  2469  00F510  20                 	db	32
  2470  00F511  69                 	db	105	;'i'
  2471  00F512  73                 	db	115	;'s'
  2472  00F513  20                 	db	32
  2473  00F514  6E                 	db	110	;'n'
  2474  00F515  6F                 	db	111	;'o'
  2475  00F516  20                 	db	32
  2476  00F517  71                 	db	113	;'q'
  2477  00F518  75                 	db	117	;'u'
  2478  00F519  65                 	db	101	;'e'
  2479  00F51A  73                 	db	115	;'s'
  2480  00F51B  74                 	db	116	;'t'
  2481  00F51C  69                 	db	105	;'i'
  2482  00F51D  6F                 	db	111	;'o'
  2483  00F51E  6E                 	db	110	;'n'
  2484  00F51F  20                 	db	32
  2485  00F520  6D                 	db	109	;'m'
  2486  00F521  61                 	db	97	;'a'
  2487  00F522  72                 	db	114	;'r'
  2488  00F523  6B                 	db	107	;'k'
  2489  00F524  0D                 	db	13
  2490  00F525  0A                 	db	10
  2491  00F526  00                 	db	0
  2492  00F527                     STR_267:
  2493  00F527  69                 	db	105	;'i'
  2494  00F528  2E                 	db	46
  2495  00F529  65                 	db	101	;'e'
  2496  00F52A  2E                 	db	46
  2497  00F52B  20                 	db	32
  2498  00F52C  4A                 	db	74	;'J'
  2499  00F52D  6F                 	db	111	;'o'
  2500  00F52E  65                 	db	101	;'e'
  2501  00F52F  73                 	db	115	;'s'
  2502  00F530  20                 	db	32
  2503  00F531  72                 	db	114	;'r'
  2504  00F532  6F                 	db	111	;'o'
  2505  00F533  6F                 	db	111	;'o'
  2506  00F534  6D                 	db	109	;'m'
  2507  00F535  20                 	db	32
  2508  00F536  6C                 	db	108	;'l'
  2509  00F537  69                 	db	105	;'i'
  2510  00F538  67                 	db	103	;'g'
  2511  00F539  68                 	db	104	;'h'
  2512  00F53A  74                 	db	116	;'t'
  2513  00F53B  20                 	db	32
  2514  00F53C  3D                 	db	61	;'='
  2515  00F53D  20                 	db	32
  2516  00F53E  4F                 	db	79	;'O'
  2517  00F53F  6E                 	db	110	;'n'
  2518  00F540  0D                 	db	13
  2519  00F541  0A                 	db	10
  2520  00F542  00                 	db	0
  2521  00F543                     STR_236:
  2522  00F543  0D                 	db	13
  2523  00F544  0A                 	db	10
  2524  00F545  54                 	db	84	;'T'
  2525  00F546  69                 	db	105	;'i'
  2526  00F547  6D                 	db	109	;'m'
  2527  00F548  65                 	db	101	;'e'
  2528  00F549  20                 	db	32
  2529  00F54A  4E                 	db	78	;'N'
  2530  00F54B  6F                 	db	111	;'o'
  2531  00F54C  74                 	db	116	;'t'
  2532  00F54D  20                 	db	32
  2533  00F54E  53                 	db	83	;'S'
  2534  00F54F  65                 	db	101	;'e'
  2535  00F550  74                 	db	116	;'t'
  2536  00F551  20                 	db	32
  2537  00F552  53                 	db	83	;'S'
  2538  00F553  75                 	db	117	;'u'
  2539  00F554  63                 	db	99	;'c'
  2540  00F555  63                 	db	99	;'c'
  2541  00F556  65                 	db	101	;'e'
  2542  00F557  73                 	db	115	;'s'
  2543  00F558  73                 	db	115	;'s'
  2544  00F559  66                 	db	102	;'f'
  2545  00F55A  75                 	db	117	;'u'
  2546  00F55B  6C                 	db	108	;'l'
  2547  00F55C  6C                 	db	108	;'l'
  2548  00F55D  79                 	db	121	;'y'
  2549  00F55E  00                 	db	0
  2550  00F55F                     STR_164:
  2551  00F55F  45                 	db	69	;'E'
  2552  00F560  72                 	db	114	;'r'
  2553  00F561  72                 	db	114	;'r'
  2554  00F562  6F                 	db	111	;'o'
  2555  00F563  72                 	db	114	;'r'
  2556  00F564  3A                 	db	58	;':'
  2557  00F565  20                 	db	32
  2558  00F566  4E                 	db	78	;'N'
  2559  00F567  6F                 	db	111	;'o'
  2560  00F568  20                 	db	32
  2561  00F569  6E                 	db	110	;'n'
  2562  00F56A  75                 	db	117	;'u'
  2563  00F56B  6D                 	db	109	;'m'
  2564  00F56C  62                 	db	98	;'b'
  2565  00F56D  65                 	db	101	;'e'
  2566  00F56E  72                 	db	114	;'r'
  2567  00F56F  20                 	db	32
  2568  00F570  65                 	db	101	;'e'
  2569  00F571  6E                 	db	110	;'n'
  2570  00F572  74                 	db	116	;'t'
  2571  00F573  65                 	db	101	;'e'
  2572  00F574  72                 	db	114	;'r'
  2573  00F575  65                 	db	101	;'e'
  2574  00F576  64                 	db	100	;'d'
  2575  00F577  0D                 	db	13
  2576  00F578  0A                 	db	10
  2577  00F579  00                 	db	0
  2578  00F57A                     STR_89:
  2579  00F57A  69                 	db	105	;'i'
  2580  00F57B  2E                 	db	46
  2581  00F57C  65                 	db	101	;'e'
  2582  00F57D  2E                 	db	46
  2583  00F57E  20                 	db	32
  2584  00F57F  4C                 	db	76	;'L'
  2585  00F580  69                 	db	105	;'i'
  2586  00F581  76                 	db	118	;'v'
  2587  00F582  69                 	db	105	;'i'
  2588  00F583  6E                 	db	110	;'n'
  2589  00F584  67                 	db	103	;'g'
  2590  00F585  72                 	db	114	;'r'
  2591  00F586  6F                 	db	111	;'o'
  2592  00F587  6F                 	db	111	;'o'
  2593  00F588  6D                 	db	109	;'m'
  2594  00F589  20                 	db	32
  2595  00F58A  66                 	db	102	;'f'
  2596  00F58B  61                 	db	97	;'a'
  2597  00F58C  6E                 	db	110	;'n'
  2598  00F58D  20                 	db	32
  2599  00F58E  3D                 	db	61	;'='
  2600  00F58F  20                 	db	32
  2601  00F590  4F                 	db	79	;'O'
  2602  00F591  6E                 	db	110	;'n'
  2603  00F592  0D                 	db	13
  2604  00F593  0A                 	db	10
  2605  00F594  00                 	db	0
  2606  00F595                     STR_320:
  2607  00F595  41                 	db	65	;'A'
  2608  00F596  44                 	db	68	;'D'
  2609  00F597  43                 	db	67	;'C'
  2610  00F598  20                 	db	32
  2611  00F599  43                 	db	67	;'C'
  2612  00F59A  68                 	db	104	;'h'
  2613  00F59B  61                 	db	97	;'a'
  2614  00F59C  6E                 	db	110	;'n'
  2615  00F59D  6E                 	db	110	;'n'
  2616  00F59E  65                 	db	101	;'e'
  2617  00F59F  6C                 	db	108	;'l'
  2618  00F5A0  20                 	db	32
  2619  00F5A1  4F                 	db	79	;'O'
  2620  00F5A2  75                 	db	117	;'u'
  2621  00F5A3  74                 	db	116	;'t'
  2622  00F5A4  20                 	db	32
  2623  00F5A5  6F                 	db	111	;'o'
  2624  00F5A6  66                 	db	102	;'f'
  2625  00F5A7  20                 	db	32
  2626  00F5A8  42                 	db	66	;'B'
  2627  00F5A9  6F                 	db	111	;'o'
  2628  00F5AA  75                 	db	117	;'u'
  2629  00F5AB  6E                 	db	110	;'n'
  2630  00F5AC  64                 	db	100	;'d'
  2631  00F5AD  73                 	db	115	;'s'
  2632  00F5AE  00                 	db	0
  2633  00F5AF                     STR_191:
  2634  00F5AF  43                 	db	67	;'C'
  2635  00F5B0  6F                 	db	111	;'o'
  2636  00F5B1  6E                 	db	110	;'n'
  2637  00F5B2  74                 	db	116	;'t'
  2638  00F5B3  72                 	db	114	;'r'
  2639  00F5B4  61                 	db	97	;'a'
  2640  00F5B5  73                 	db	115	;'s'
  2641  00F5B6  74                 	db	116	;'t'
  2642  00F5B7  20                 	db	32
  2643  00F5B8  50                 	db	80	;'P'
  2644  00F5B9  57                 	db	87	;'W'
  2645  00F5BA  4D                 	db	77	;'M'
  2646  00F5BB  20                 	db	32
  2647  00F5BC  48                 	db	72	;'H'
  2648  00F5BD  65                 	db	101	;'e'
  2649  00F5BE  6C                 	db	108	;'l'
  2650  00F5BF  70                 	db	112	;'p'
  2651  00F5C0  20                 	db	32
  2652  00F5C1  4D                 	db	77	;'M'
  2653  00F5C2  65                 	db	101	;'e'
  2654  00F5C3  6E                 	db	110	;'n'
  2655  00F5C4  75                 	db	117	;'u'
  2656  00F5C5  0D                 	db	13
  2657  00F5C6  0A                 	db	10
  2658  00F5C7  0A                 	db	10
  2659  00F5C8  00                 	db	0
  2660  00F5C9                     STR_234:
  2661  00F5C9  0D                 	db	13
  2662  00F5CA  0A                 	db	10
  2663  00F5CB  54                 	db	84	;'T'
  2664  00F5CC  69                 	db	105	;'i'
  2665  00F5CD  6D                 	db	109	;'m'
  2666  00F5CE  65                 	db	101	;'e'
  2667  00F5CF  20                 	db	32
  2668  00F5D0  53                 	db	83	;'S'
  2669  00F5D1  65                 	db	101	;'e'
  2670  00F5D2  74                 	db	116	;'t'
  2671  00F5D3  20                 	db	32
  2672  00F5D4  53                 	db	83	;'S'
  2673  00F5D5  75                 	db	117	;'u'
  2674  00F5D6  63                 	db	99	;'c'
  2675  00F5D7  63                 	db	99	;'c'
  2676  00F5D8  65                 	db	101	;'e'
  2677  00F5D9  73                 	db	115	;'s'
  2678  00F5DA  73                 	db	115	;'s'
  2679  00F5DB  66                 	db	102	;'f'
  2680  00F5DC  75                 	db	117	;'u'
  2681  00F5DD  6C                 	db	108	;'l'
  2682  00F5DE  6C                 	db	108	;'l'
  2683  00F5DF  79                 	db	121	;'y'
  2684  00F5E0  0D                 	db	13
  2685  00F5E1  0A                 	db	10
  2686  00F5E2  00                 	db	0
  2687  00F5E3                     STR_174:
  2688  00F5E3  52                 	db	82	;'R'
  2689  00F5E4  65                 	db	101	;'e'
  2690  00F5E5  64                 	db	100	;'d'
  2691  00F5E6  20                 	db	32
  2692  00F5E7  4C                 	db	76	;'L'
  2693  00F5E8  45                 	db	69	;'E'
  2694  00F5E9  44                 	db	68	;'D'
  2695  00F5EA  20                 	db	32
  2696  00F5EB  50                 	db	80	;'P'
  2697  00F5EC  57                 	db	87	;'W'
  2698  00F5ED  4D                 	db	77	;'M'
  2699  00F5EE  20                 	db	32
  2700  00F5EF  48                 	db	72	;'H'
  2701  00F5F0  65                 	db	101	;'e'
  2702  00F5F1  6C                 	db	108	;'l'
  2703  00F5F2  70                 	db	112	;'p'
  2704  00F5F3  20                 	db	32
  2705  00F5F4  4D                 	db	77	;'M'
  2706  00F5F5  65                 	db	101	;'e'
  2707  00F5F6  6E                 	db	110	;'n'
  2708  00F5F7  75                 	db	117	;'u'
  2709  00F5F8  0D                 	db	13
  2710  00F5F9  0A                 	db	10
  2711  00F5FA  0A                 	db	10
  2712  00F5FB  00                 	db	0
  2713  00F5FC                     STR_237:
  2714  00F5FC  0D                 	db	13
  2715  00F5FD  0A                 	db	10
  2716  00F5FE  49                 	db	73	;'I'
  2717  00F5FF  6E                 	db	110	;'n'
  2718  00F600  76                 	db	118	;'v'
  2719  00F601  61                 	db	97	;'a'
  2720  00F602  6C                 	db	108	;'l'
  2721  00F603  69                 	db	105	;'i'
  2722  00F604  64                 	db	100	;'d'
  2723  00F605  20                 	db	32
  2724  00F606  54                 	db	84	;'T'
  2725  00F607  69                 	db	105	;'i'
  2726  00F608  6D                 	db	109	;'m'
  2727  00F609  65                 	db	101	;'e'
  2728  00F60A  20                 	db	32
  2729  00F60B  45                 	db	69	;'E'
  2730  00F60C  6E                 	db	110	;'n'
  2731  00F60D  74                 	db	116	;'t'
  2732  00F60E  65                 	db	101	;'e'
  2733  00F60F  72                 	db	114	;'r'
  2734  00F610  65                 	db	101	;'e'
  2735  00F611  64                 	db	100	;'d'
  2736  00F612  0D                 	db	13
  2737  00F613  0A                 	db	10
  2738  00F614  00                 	db	0
  2739  00F615                     STR_74:
  2740  00F615  4C                 	db	76	;'L'
  2741  00F616  69                 	db	105	;'i'
  2742  00F617  76                 	db	118	;'v'
  2743  00F618  69                 	db	105	;'i'
  2744  00F619  6E                 	db	110	;'n'
  2745  00F61A  67                 	db	103	;'g'
  2746  00F61B  72                 	db	114	;'r'
  2747  00F61C  6F                 	db	111	;'o'
  2748  00F61D  6F                 	db	111	;'o'
  2749  00F61E  6D                 	db	109	;'m'
  2750  00F61F  20                 	db	32
  2751  00F620  4C                 	db	76	;'L'
  2752  00F621  69                 	db	105	;'i'
  2753  00F622  67                 	db	103	;'g'
  2754  00F623  68                 	db	104	;'h'
  2755  00F624  74                 	db	116	;'t'
  2756  00F625  20                 	db	32
  2757  00F626  54                 	db	84	;'T'
  2758  00F627  6F                 	db	111	;'o'
  2759  00F628  67                 	db	103	;'g'
  2760  00F629  67                 	db	103	;'g'
  2761  00F62A  6C                 	db	108	;'l'
  2762  00F62B  65                 	db	101	;'e'
  2763  00F62C  64                 	db	100	;'d'
  2764  00F62D  00                 	db	0
  2765  00F62E                     STR_84:
  2766  00F62E  4C                 	db	76	;'L'
  2767  00F62F  69                 	db	105	;'i'
  2768  00F630  76                 	db	118	;'v'
  2769  00F631  69                 	db	105	;'i'
  2770  00F632  6E                 	db	110	;'n'
  2771  00F633  67                 	db	103	;'g'
  2772  00F634  72                 	db	114	;'r'
  2773  00F635  6F                 	db	111	;'o'
  2774  00F636  6F                 	db	111	;'o'
  2775  00F637  6D                 	db	109	;'m'
  2776  00F638  20                 	db	32
  2777  00F639  48                 	db	72	;'H'
  2778  00F63A  65                 	db	101	;'e'
  2779  00F63B  6C                 	db	108	;'l'
  2780  00F63C  70                 	db	112	;'p'
  2781  00F63D  20                 	db	32
  2782  00F63E  4D                 	db	77	;'M'
  2783  00F63F  65                 	db	101	;'e'
  2784  00F640  6E                 	db	110	;'n'
  2785  00F641  75                 	db	117	;'u'
  2786  00F642  0D                 	db	13
  2787  00F643  0A                 	db	10
  2788  00F644  0A                 	db	10
  2789  00F645  00                 	db	0
  2790  00F646                     STR_228:
  2791  00F646  45                 	db	69	;'E'
  2792  00F647  52                 	db	82	;'R'
  2793  00F648  52                 	db	82	;'R'
  2794  00F649  4F                 	db	79	;'O'
  2795  00F64A  52                 	db	82	;'R'
  2796  00F64B  3A                 	db	58	;':'
  2797  00F64C  20                 	db	32
  2798  00F64D  43                 	db	67	;'C'
  2799  00F64E  61                 	db	97	;'a'
  2800  00F64F  6E                 	db	110	;'n'
  2801  00F650  27                 	db	39
  2802  00F651  74                 	db	116	;'t'
  2803  00F652  20                 	db	32
  2804  00F653  52                 	db	82	;'R'
  2805  00F654  65                 	db	101	;'e'
  2806  00F655  61                 	db	97	;'a'
  2807  00F656  64                 	db	100	;'d'
  2808  00F657  20                 	db	32
  2809  00F658  52                 	db	82	;'R'
  2810  00F659  54                 	db	84	;'T'
  2811  00F65A  43                 	db	67	;'C'
  2812  00F65B  0D                 	db	13
  2813  00F65C  0A                 	db	10
  2814  00F65D  00                 	db	0
  2815  00F65E                     STR_123:
  2816  00F65E  69                 	db	105	;'i'
  2817  00F65F  2E                 	db	46
  2818  00F660  65                 	db	101	;'e'
  2819  00F661  2E                 	db	46
  2820  00F662  20                 	db	32
  2821  00F663  42                 	db	66	;'B'
  2822  00F664  65                 	db	101	;'e'
  2823  00F665  64                 	db	100	;'d'
  2824  00F666  72                 	db	114	;'r'
  2825  00F667  6F                 	db	111	;'o'
  2826  00F668  6F                 	db	111	;'o'
  2827  00F669  6D                 	db	109	;'m'
  2828  00F66A  20                 	db	32
  2829  00F66B  66                 	db	102	;'f'
  2830  00F66C  61                 	db	97	;'a'
  2831  00F66D  6E                 	db	110	;'n'
  2832  00F66E  20                 	db	32
  2833  00F66F  3D                 	db	61	;'='
  2834  00F670  20                 	db	32
  2835  00F671  4F                 	db	79	;'O'
  2836  00F672  6E                 	db	110	;'n'
  2837  00F673  0D                 	db	13
  2838  00F674  0A                 	db	10
  2839  00F675  00                 	db	0
  2840  00F676                     STR_263:
  2841  00F676  4A                 	db	74	;'J'
  2842  00F677  6F                 	db	111	;'o'
  2843  00F678  65                 	db	101	;'e'
  2844  00F679  73                 	db	115	;'s'
  2845  00F67A  20                 	db	32
  2846  00F67B  52                 	db	82	;'R'
  2847  00F67C  6F                 	db	111	;'o'
  2848  00F67D  6F                 	db	111	;'o'
  2849  00F67E  6D                 	db	109	;'m'
  2850  00F67F  20                 	db	32
  2851  00F680  48                 	db	72	;'H'
  2852  00F681  65                 	db	101	;'e'
  2853  00F682  6C                 	db	108	;'l'
  2854  00F683  70                 	db	112	;'p'
  2855  00F684  20                 	db	32
  2856  00F685  4D                 	db	77	;'M'
  2857  00F686  65                 	db	101	;'e'
  2858  00F687  6E                 	db	110	;'n'
  2859  00F688  75                 	db	117	;'u'
  2860  00F689  0D                 	db	13
  2861  00F68A  0A                 	db	10
  2862  00F68B  0A                 	db	10
  2863  00F68C  00                 	db	0
  2864  00F68D                     STR_227:
  2865  00F68D  25                 	db	37
  2866  00F68E  30                 	db	48	;'0'
  2867  00F68F  32                 	db	50	;'2'
  2868  00F690  64                 	db	100	;'d'
  2869  00F691  2F                 	db	47
  2870  00F692  25                 	db	37
  2871  00F693  30                 	db	48	;'0'
  2872  00F694  32                 	db	50	;'2'
  2873  00F695  64                 	db	100	;'d'
  2874  00F696  20                 	db	32
  2875  00F697  25                 	db	37
  2876  00F698  30                 	db	48	;'0'
  2877  00F699  32                 	db	50	;'2'
  2878  00F69A  64                 	db	100	;'d'
  2879  00F69B  3A                 	db	58	;':'
  2880  00F69C  25                 	db	37
  2881  00F69D  30                 	db	48	;'0'
  2882  00F69E  32                 	db	50	;'2'
  2883  00F69F  64                 	db	100	;'d'
  2884  00F6A0  20                 	db	32
  2885  00F6A1  41                 	db	65	;'A'
  2886  00F6A2  4D                 	db	77	;'M'
  2887  00F6A3  00                 	db	0
  2888  00F6A4                     STR_226:
  2889  00F6A4  25                 	db	37
  2890  00F6A5  30                 	db	48	;'0'
  2891  00F6A6  32                 	db	50	;'2'
  2892  00F6A7  64                 	db	100	;'d'
  2893  00F6A8  2F                 	db	47
  2894  00F6A9  25                 	db	37
  2895  00F6AA  30                 	db	48	;'0'
  2896  00F6AB  32                 	db	50	;'2'
  2897  00F6AC  64                 	db	100	;'d'
  2898  00F6AD  20                 	db	32
  2899  00F6AE  25                 	db	37
  2900  00F6AF  30                 	db	48	;'0'
  2901  00F6B0  32                 	db	50	;'2'
  2902  00F6B1  64                 	db	100	;'d'
  2903  00F6B2  3A                 	db	58	;':'
  2904  00F6B3  25                 	db	37
  2905  00F6B4  30                 	db	48	;'0'
  2906  00F6B5  32                 	db	50	;'2'
  2907  00F6B6  64                 	db	100	;'d'
  2908  00F6B7  20                 	db	32
  2909  00F6B8  50                 	db	80	;'P'
  2910  00F6B9  4D                 	db	77	;'M'
  2911  00F6BA  00                 	db	0
  2912  00F6BB                     STR_282:
  2913  00F6BB  69                 	db	105	;'i'
  2914  00F6BC  2E                 	db	46
  2915  00F6BD  65                 	db	101	;'e'
  2916  00F6BE  2E                 	db	46
  2917  00F6BF  20                 	db	32
  2918  00F6C0  20                 	db	32
  2919  00F6C1  4C                 	db	76	;'L'
  2920  00F6C2  69                 	db	105	;'i'
  2921  00F6C3  76                 	db	118	;'v'
  2922  00F6C4  69                 	db	105	;'i'
  2923  00F6C5  6E                 	db	110	;'n'
  2924  00F6C6  67                 	db	103	;'g'
  2925  00F6C7  72                 	db	114	;'r'
  2926  00F6C8  6F                 	db	111	;'o'
  2927  00F6C9  6F                 	db	111	;'o'
  2928  00F6CA  6D                 	db	109	;'m'
  2929  00F6CB  3F                 	db	63	;'?'
  2930  00F6CC  0D                 	db	13
  2931  00F6CD  0A                 	db	10
  2932  00F6CE  0D                 	db	13
  2933  00F6CF  0A                 	db	10
  2934  00F6D0  00                 	db	0
  2935  00F6D1                     STR_170:
  2936  00F6D1  44                 	db	68	;'D'
  2937  00F6D2  75                 	db	117	;'u'
  2938  00F6D3  74                 	db	116	;'t'
  2939  00F6D4  79                 	db	121	;'y'
  2940  00F6D5  63                 	db	99	;'c'
  2941  00F6D6  79                 	db	121	;'y'
  2942  00F6D7  63                 	db	99	;'c'
  2943  00F6D8  6C                 	db	108	;'l'
  2944  00F6D9  65                 	db	101	;'e'
  2945  00F6DA  20                 	db	32
  2946  00F6DB  73                 	db	115	;'s'
  2947  00F6DC  65                 	db	101	;'e'
  2948  00F6DD  74                 	db	116	;'t'
  2949  00F6DE  20                 	db	32
  2950  00F6DF  74                 	db	116	;'t'
  2951  00F6E0  6F                 	db	111	;'o'
  2952  00F6E1  20                 	db	32
  2953  00F6E2  25                 	db	37
  2954  00F6E3  64                 	db	100	;'d'
  2955  00F6E4  0D                 	db	13
  2956  00F6E5  0A                 	db	10
  2957  00F6E6  00                 	db	0
  2958  00F6E7                     STR_101:
  2959  00F6E7  42                 	db	66	;'B'
  2960  00F6E8  65                 	db	101	;'e'
  2961  00F6E9  64                 	db	100	;'d'
  2962  00F6EA  72                 	db	114	;'r'
  2963  00F6EB  6F                 	db	111	;'o'
  2964  00F6EC  6F                 	db	111	;'o'
  2965  00F6ED  6D                 	db	109	;'m'
  2966  00F6EE  20                 	db	32
  2967  00F6EF  4C                 	db	76	;'L'
  2968  00F6F0  69                 	db	105	;'i'
  2969  00F6F1  67                 	db	103	;'g'
  2970  00F6F2  68                 	db	104	;'h'
  2971  00F6F3  74                 	db	116	;'t'
  2972  00F6F4  20                 	db	32
  2973  00F6F5  54                 	db	84	;'T'
  2974  00F6F6  6F                 	db	111	;'o'
  2975  00F6F7  67                 	db	103	;'g'
  2976  00F6F8  67                 	db	103	;'g'
  2977  00F6F9  6C                 	db	108	;'l'
  2978  00F6FA  65                 	db	101	;'e'
  2979  00F6FB  64                 	db	100	;'d'
  2980  00F6FC  00                 	db	0
  2981  00F6FD                     STR_29:
  2982  00F6FD  53                 	db	83	;'S'
  2983  00F6FE  79                 	db	121	;'y'
  2984  00F6FF  73                 	db	115	;'s'
  2985  00F700  74                 	db	116	;'t'
  2986  00F701  65                 	db	101	;'e'
  2987  00F702  6D                 	db	109	;'m'
  2988  00F703  20                 	db	32
  2989  00F704  50                 	db	80	;'P'
  2990  00F705  72                 	db	114	;'r'
  2991  00F706  6F                 	db	111	;'o'
  2992  00F707  67                 	db	103	;'g'
  2993  00F708  72                 	db	114	;'r'
  2994  00F709  61                 	db	97	;'a'
  2995  00F70A  6D                 	db	109	;'m'
  2996  00F70B  20                 	db	32
  2997  00F70C  46                 	db	70	;'F'
  2998  00F70D  61                 	db	97	;'a'
  2999  00F70E  69                 	db	105	;'i'
  3000  00F70F  6C                 	db	108	;'l'
  3001  00F710  0D                 	db	13
  3002  00F711  0A                 	db	10
  3003  00F712  00                 	db	0
  3004  00F713                     STR_117:
  3005  00F713  42                 	db	66	;'B'
  3006  00F714  65                 	db	101	;'e'
  3007  00F715  64                 	db	100	;'d'
  3008  00F716  72                 	db	114	;'r'
  3009  00F717  6F                 	db	111	;'o'
  3010  00F718  6F                 	db	111	;'o'
  3011  00F719  6D                 	db	109	;'m'
  3012  00F71A  20                 	db	32
  3013  00F71B  48                 	db	72	;'H'
  3014  00F71C  65                 	db	101	;'e'
  3015  00F71D  6C                 	db	108	;'l'
  3016  00F71E  70                 	db	112	;'p'
  3017  00F71F  20                 	db	32
  3018  00F720  4D                 	db	77	;'M'
  3019  00F721  65                 	db	101	;'e'
  3020  00F722  6E                 	db	110	;'n'
  3021  00F723  75                 	db	117	;'u'
  3022  00F724  0D                 	db	13
  3023  00F725  0A                 	db	10
  3024  00F726  0A                 	db	10
  3025  00F727  00                 	db	0
  3026  00F728                     STR_247:
  3027  00F728  69                 	db	105	;'i'
  3028  00F729  2E                 	db	46
  3029  00F72A  65                 	db	101	;'e'
  3030  00F72B  2E                 	db	46
  3031  00F72C  20                 	db	32
  3032  00F72D  52                 	db	82	;'R'
  3033  00F72E  54                 	db	84	;'T'
  3034  00F72F  43                 	db	67	;'C'
  3035  00F730  20                 	db	32
  3036  00F731  53                 	db	83	;'S'
  3037  00F732  65                 	db	101	;'e'
  3038  00F733  74                 	db	116	;'t'
  3039  00F734  20                 	db	32
  3040  00F735  54                 	db	84	;'T'
  3041  00F736  69                 	db	105	;'i'
  3042  00F737  6D                 	db	109	;'m'
  3043  00F738  65                 	db	101	;'e'
  3044  00F739  3F                 	db	63	;'?'
  3045  00F73A  0D                 	db	13
  3046  00F73B  0A                 	db	10
  3047  00F73C  00                 	db	0
  3048  00F73D                     STR_311:
  3049  00F73D  42                 	db	66	;'B'
  3050  00F73E  61                 	db	97	;'a'
  3051  00F73F  75                 	db	117	;'u'
  3052  00F740  64                 	db	100	;'d'
  3053  00F741  20                 	db	32
  3054  00F742  4F                 	db	79	;'O'
  3055  00F743  75                 	db	117	;'u'
  3056  00F744  74                 	db	116	;'t'
  3057  00F745  20                 	db	32
  3058  00F746  6F                 	db	111	;'o'
  3059  00F747  66                 	db	102	;'f'
  3060  00F748  20                 	db	32
  3061  00F749  72                 	db	114	;'r'
  3062  00F74A  61                 	db	97	;'a'
  3063  00F74B  6E                 	db	110	;'n'
  3064  00F74C  67                 	db	103	;'g'
  3065  00F74D  65                 	db	101	;'e'
  3066  00F74E  0D                 	db	13
  3067  00F74F  0A                 	db	10
  3068  00F750  00                 	db	0
  3069  00F751                     STR_208:
  3070  00F751  41                 	db	65	;'A'
  3071  00F752  44                 	db	68	;'D'
  3072  00F753  43                 	db	67	;'C'
  3073  00F754  20                 	db	32
  3074  00F755  63                 	db	99	;'c'
  3075  00F756  68                 	db	104	;'h'
  3076  00F757  61                 	db	97	;'a'
  3077  00F758  6E                 	db	110	;'n'
  3078  00F759  6E                 	db	110	;'n'
  3079  00F75A  65                 	db	101	;'e'
  3080  00F75B  6C                 	db	108	;'l'
  3081  00F75C  20                 	db	32
  3082  00F75D  25                 	db	37
  3083  00F75E  64                 	db	100	;'d'
  3084  00F75F  20                 	db	32
  3085  00F760  3D                 	db	61	;'='
  3086  00F761  20                 	db	32
  3087  00F762  25                 	db	37
  3088  00F763  64                 	db	100	;'d'
  3089  00F764  00                 	db	0
  3090  00F765                     STR_259:
  3091  00F765  4A                 	db	74	;'J'
  3092  00F766  6F                 	db	111	;'o'
  3093  00F767  65                 	db	101	;'e'
  3094  00F768  73                 	db	115	;'s'
  3095  00F769  20                 	db	32
  3096  00F76A  72                 	db	114	;'r'
  3097  00F76B  6F                 	db	111	;'o'
  3098  00F76C  6F                 	db	111	;'o'
  3099  00F76D  6D                 	db	109	;'m'
  3100  00F76E  20                 	db	32
  3101  00F76F  6C                 	db	108	;'l'
  3102  00F770  69                 	db	105	;'i'
  3103  00F771  67                 	db	103	;'g'
  3104  00F772  68                 	db	104	;'h'
  3105  00F773  74                 	db	116	;'t'
  3106  00F774  20                 	db	32
  3107  00F775  4F                 	db	79	;'O'
  3108  00F776  66                 	db	102	;'f'
  3109  00F777  66                 	db	102	;'f'
  3110  00F778  00                 	db	0
  3111  00F779                     STR_73:
  3112  00F779  6C                 	db	108	;'l'
  3113  00F77A  69                 	db	105	;'i'
  3114  00F77B  76                 	db	118	;'v'
  3115  00F77C  69                 	db	105	;'i'
  3116  00F77D  6E                 	db	110	;'n'
  3117  00F77E  67                 	db	103	;'g'
  3118  00F77F  72                 	db	114	;'r'
  3119  00F780  6F                 	db	111	;'o'
  3120  00F781  6F                 	db	111	;'o'
  3121  00F782  6D                 	db	109	;'m'
  3122  00F783  6C                 	db	108	;'l'
  3123  00F784  69                 	db	105	;'i'
  3124  00F785  67                 	db	103	;'g'
  3125  00F786  68                 	db	104	;'h'
  3126  00F787  74                 	db	116	;'t'
  3127  00F788  3D                 	db	61	;'='
  3128  00F789  6F                 	db	111	;'o'
  3129  00F78A  66                 	db	102	;'f'
  3130  00F78B  66                 	db	102	;'f'
  3131  00F78C  00                 	db	0
  3132  00F78D                     STR_256:
  3133  00F78D  4A                 	db	74	;'J'
  3134  00F78E  6F                 	db	111	;'o'
  3135  00F78F  65                 	db	101	;'e'
  3136  00F790  27                 	db	39
  3137  00F791  73                 	db	115	;'s'
  3138  00F792  20                 	db	32
  3139  00F793  72                 	db	114	;'r'
  3140  00F794  6F                 	db	111	;'o'
  3141  00F795  6F                 	db	111	;'o'
  3142  00F796  6D                 	db	109	;'m'
  3143  00F797  20                 	db	32
  3144  00F798  6C                 	db	108	;'l'
  3145  00F799  69                 	db	105	;'i'
  3146  00F79A  67                 	db	103	;'g'
  3147  00F79B  68                 	db	104	;'h'
  3148  00F79C  74                 	db	116	;'t'
  3149  00F79D  20                 	db	32
  3150  00F79E  4F                 	db	79	;'O'
  3151  00F79F  6E                 	db	110	;'n'
  3152  00F7A0  00                 	db	0
  3153  00F7A1                     STR_82:
  3154  00F7A1  4C                 	db	76	;'L'
  3155  00F7A2  69                 	db	105	;'i'
  3156  00F7A3  76                 	db	118	;'v'
  3157  00F7A4  69                 	db	105	;'i'
  3158  00F7A5  6E                 	db	110	;'n'
  3159  00F7A6  67                 	db	103	;'g'
  3160  00F7A7  72                 	db	114	;'r'
  3161  00F7A8  6F                 	db	111	;'o'
  3162  00F7A9  6F                 	db	111	;'o'
  3163  00F7AA  6D                 	db	109	;'m'
  3164  00F7AB  20                 	db	32
  3165  00F7AC  54                 	db	84	;'T'
  3166  00F7AD  61                 	db	97	;'a'
  3167  00F7AE  73                 	db	115	;'s'
  3168  00F7AF  6B                 	db	107	;'k'
  3169  00F7B0  3F                 	db	63	;'?'
  3170  00F7B1  3F                 	db	63	;'?'
  3171  00F7B2  3F                 	db	63	;'?'
  3172  00F7B3  00                 	db	0
  3173  00F7B4                     STR_261:
  3174  00F7B4  4A                 	db	74	;'J'
  3175  00F7B5  6F                 	db	111	;'o'
  3176  00F7B6  65                 	db	101	;'e'
  3177  00F7B7  27                 	db	39
  3178  00F7B8  73                 	db	115	;'s'
  3179  00F7B9  20                 	db	32
  3180  00F7BA  72                 	db	114	;'r'
  3181  00F7BB  6F                 	db	111	;'o'
  3182  00F7BC  6F                 	db	111	;'o'
  3183  00F7BD  6D                 	db	109	;'m'
  3184  00F7BE  20                 	db	32
  3185  00F7BF  77                 	db	119	;'w'
  3186  00F7C0  68                 	db	104	;'h'
  3187  00F7C1  61                 	db	97	;'a'
  3188  00F7C2  74                 	db	116	;'t'
  3189  00F7C3  3F                 	db	63	;'?'
  3190  00F7C4  3F                 	db	63	;'?'
  3191  00F7C5  3F                 	db	63	;'?'
  3192  00F7C6  00                 	db	0
  3193  00F7C7                     STR_80:
  3194  00F7C7  4C                 	db	76	;'L'
  3195  00F7C8  69                 	db	105	;'i'
  3196  00F7C9  76                 	db	118	;'v'
  3197  00F7CA  69                 	db	105	;'i'
  3198  00F7CB  6E                 	db	110	;'n'
  3199  00F7CC  67                 	db	103	;'g'
  3200  00F7CD  72                 	db	114	;'r'
  3201  00F7CE  6F                 	db	111	;'o'
  3202  00F7CF  6F                 	db	111	;'o'
  3203  00F7D0  6D                 	db	109	;'m'
  3204  00F7D1  20                 	db	32
  3205  00F7D2  46                 	db	70	;'F'
  3206  00F7D3  61                 	db	97	;'a'
  3207  00F7D4  6E                 	db	110	;'n'
  3208  00F7D5  20                 	db	32
  3209  00F7D6  4F                 	db	79	;'O'
  3210  00F7D7  66                 	db	102	;'f'
  3211  00F7D8  66                 	db	102	;'f'
  3212  00F7D9  00                 	db	0
  3213  00F7DA                     STR_113:
  3214  00F7DA  42                 	db	66	;'B'
  3215  00F7DB  65                 	db	101	;'e'
  3216  00F7DC  64                 	db	100	;'d'
  3217  00F7DD  72                 	db	114	;'r'
  3218  00F7DE  6F                 	db	111	;'o'
  3219  00F7DF  6F                 	db	111	;'o'
  3220  00F7E0  6D                 	db	109	;'m'
  3221  00F7E1  20                 	db	32
  3222  00F7E2  53                 	db	83	;'S'
  3223  00F7E3  68                 	db	104	;'h'
  3224  00F7E4  61                 	db	97	;'a'
  3225  00F7E5  6B                 	db	107	;'k'
  3226  00F7E6  65                 	db	101	;'e'
  3227  00F7E7  72                 	db	114	;'r'
  3228  00F7E8  20                 	db	32
  3229  00F7E9  4F                 	db	79	;'O'
  3230  00F7EA  66                 	db	102	;'f'
  3231  00F7EB  66                 	db	102	;'f'
  3232  00F7EC  00                 	db	0
  3233  00F7ED                     STR_72:
  3234  00F7ED  6C                 	db	108	;'l'
  3235  00F7EE  69                 	db	105	;'i'
  3236  00F7EF  76                 	db	118	;'v'
  3237  00F7F0  69                 	db	105	;'i'
  3238  00F7F1  6E                 	db	110	;'n'
  3239  00F7F2  67                 	db	103	;'g'
  3240  00F7F3  72                 	db	114	;'r'
  3241  00F7F4  6F                 	db	111	;'o'
  3242  00F7F5  6F                 	db	111	;'o'
  3243  00F7F6  6D                 	db	109	;'m'
  3244  00F7F7  6C                 	db	108	;'l'
  3245  00F7F8  69                 	db	105	;'i'
  3246  00F7F9  67                 	db	103	;'g'
  3247  00F7FA  68                 	db	104	;'h'
  3248  00F7FB  74                 	db	116	;'t'
  3249  00F7FC  3D                 	db	61	;'='
  3250  00F7FD  6F                 	db	111	;'o'
  3251  00F7FE  6E                 	db	110	;'n'
  3252  00F7FF  00                 	db	0
  3253  00F800                     STR_30:
  3254  00F800  53                 	db	83	;'S'
  3255  00F801  79                 	db	121	;'y'
  3256  00F802  73                 	db	115	;'s'
  3257  00F803  74                 	db	116	;'t'
  3258  00F804  65                 	db	101	;'e'
  3259  00F805  6D                 	db	109	;'m'
  3260  00F806  20                 	db	32
  3261  00F807  42                 	db	66	;'B'
  3262  00F808  61                 	db	97	;'a'
  3263  00F809  75                 	db	117	;'u'
  3264  00F80A  64                 	db	100	;'d'
  3265  00F80B  20                 	db	32
  3266  00F80C  69                 	db	105	;'i'
  3267  00F80D  73                 	db	115	;'s'
  3268  00F80E  20                 	db	32
  3269  00F80F  25                 	db	37
  3270  00F810  6C                 	db	108	;'l'
  3271  00F811  75                 	db	117	;'u'
  3272  00F812  00                 	db	0
  3273  00F813                     STR_6:
  3274  00F813  46                 	db	70	;'F'
  3275  00F814  69                 	db	105	;'i'
  3276  00F815  72                 	db	114	;'r'
  3277  00F816  6D                 	db	109	;'m'
  3278  00F817  77                 	db	119	;'w'
  3279  00F818  61                 	db	97	;'a'
  3280  00F819  72                 	db	114	;'r'
  3281  00F81A  65                 	db	101	;'e'
  3282  00F81B  20                 	db	32
  3283  00F81C  56                 	db	86	;'V'
  3284  00F81D  65                 	db	101	;'e'
  3285  00F81E  72                 	db	114	;'r'
  3286  00F81F  73                 	db	115	;'s'
  3287  00F820  69                 	db	105	;'i'
  3288  00F821  6F                 	db	111	;'o'
  3289  00F822  6E                 	db	110	;'n'
  3290  00F823  3A                 	db	58	;':'
  3291  00F824  20                 	db	32
  3292  00F825  00                 	db	0
  3293  00F826                     STR_151:
  3294  00F826  63                 	db	99	;'c'
  3295  00F827  6F                 	db	111	;'o'
  3296  00F828  6C                 	db	108	;'l'
  3297  00F829  6F                 	db	111	;'o'
  3298  00F82A  72                 	db	114	;'r'
  3299  00F82B  65                 	db	101	;'e'
  3300  00F82C  64                 	db	100	;'d'
  3301  00F82D  20                 	db	32
  3302  00F82E  6C                 	db	108	;'l'
  3303  00F82F  69                 	db	105	;'i'
  3304  00F830  67                 	db	103	;'g'
  3305  00F831  68                 	db	104	;'h'
  3306  00F832  74                 	db	116	;'t'
  3307  00F833  73                 	db	115	;'s'
  3308  00F834  0D                 	db	13
  3309  00F835  0A                 	db	10
  3310  00F836  0A                 	db	10
  3311  00F837  00                 	db	0
  3312  00F838                     STR_315:
  3313  00F838  49                 	db	73	;'I'
  3314  00F839  6E                 	db	110	;'n'
  3315  00F83A  76                 	db	118	;'v'
  3316  00F83B  61                 	db	97	;'a'
  3317  00F83C  6C                 	db	108	;'l'
  3318  00F83D  69                 	db	105	;'i'
  3319  00F83E  64                 	db	100	;'d'
  3320  00F83F  20                 	db	32
  3321  00F840  43                 	db	67	;'C'
  3322  00F841  6F                 	db	111	;'o'
  3323  00F842  6D                 	db	109	;'m'
  3324  00F843  6D                 	db	109	;'m'
  3325  00F844  61                 	db	97	;'a'
  3326  00F845  6E                 	db	110	;'n'
  3327  00F846  64                 	db	100	;'d'
  3328  00F847  0D                 	db	13
  3329  00F848  0A                 	db	10
  3330  00F849  00                 	db	0
  3331  00F84A                     STR_146:
  3332  00F84A  43                 	db	67	;'C'
  3333  00F84B  68                 	db	104	;'h'
  3334  00F84C  72                 	db	114	;'r'
  3335  00F84D  69                 	db	105	;'i'
  3336  00F84E  73                 	db	115	;'s'
  3337  00F84F  74                 	db	116	;'t'
  3338  00F850  6D                 	db	109	;'m'
  3339  00F851  61                 	db	97	;'a'
  3340  00F852  73                 	db	115	;'s'
  3341  00F853  20                 	db	32
  3342  00F854  57                 	db	87	;'W'
  3343  00F855  68                 	db	104	;'h'
  3344  00F856  61                 	db	97	;'a'
  3345  00F857  74                 	db	116	;'t'
  3346  00F858  3F                 	db	63	;'?'
  3347  00F859  3F                 	db	63	;'?'
  3348  00F85A  3F                 	db	63	;'?'
  3349  00F85B  00                 	db	0
  3350  00F85C                     STR_79:
  3351  00F85C  6C                 	db	108	;'l'
  3352  00F85D  69                 	db	105	;'i'
  3353  00F85E  76                 	db	118	;'v'
  3354  00F85F  69                 	db	105	;'i'
  3355  00F860  6E                 	db	110	;'n'
  3356  00F861  67                 	db	103	;'g'
  3357  00F862  72                 	db	114	;'r'
  3358  00F863  6F                 	db	111	;'o'
  3359  00F864  6F                 	db	111	;'o'
  3360  00F865  6D                 	db	109	;'m'
  3361  00F866  66                 	db	102	;'f'
  3362  00F867  61                 	db	97	;'a'
  3363  00F868  6E                 	db	110	;'n'
  3364  00F869  3D                 	db	61	;'='
  3365  00F86A  6F                 	db	111	;'o'
  3366  00F86B  66                 	db	102	;'f'
  3367  00F86C  66                 	db	102	;'f'
  3368  00F86D  00                 	db	0
  3369  00F86E                     STR_112:
  3370  00F86E  62                 	db	98	;'b'
  3371  00F86F  65                 	db	101	;'e'
  3372  00F870  64                 	db	100	;'d'
  3373  00F871  72                 	db	114	;'r'
  3374  00F872  6F                 	db	111	;'o'
  3375  00F873  6F                 	db	111	;'o'
  3376  00F874  6D                 	db	109	;'m'
  3377  00F875  73                 	db	115	;'s'
  3378  00F876  68                 	db	104	;'h'
  3379  00F877  61                 	db	97	;'a'
  3380  00F878  6B                 	db	107	;'k'
  3381  00F879  65                 	db	101	;'e'
  3382  00F87A  72                 	db	114	;'r'
  3383  00F87B  3D                 	db	61	;'='
  3384  00F87C  6F                 	db	111	;'o'
  3385  00F87D  66                 	db	102	;'f'
  3386  00F87E  66                 	db	102	;'f'
  3387  00F87F  00                 	db	0
  3388  00F880                     STR_258:
  3389  00F880  6A                 	db	106	;'j'
  3390  00F881  6F                 	db	111	;'o'
  3391  00F882  65                 	db	101	;'e'
  3392  00F883  73                 	db	115	;'s'
  3393  00F884  72                 	db	114	;'r'
  3394  00F885  6F                 	db	111	;'o'
  3395  00F886  6F                 	db	111	;'o'
  3396  00F887  6D                 	db	109	;'m'
  3397  00F888  6C                 	db	108	;'l'
  3398  00F889  69                 	db	105	;'i'
  3399  00F88A  67                 	db	103	;'g'
  3400  00F88B  68                 	db	104	;'h'
  3401  00F88C  74                 	db	116	;'t'
  3402  00F88D  3D                 	db	61	;'='
  3403  00F88E  6F                 	db	111	;'o'
  3404  00F88F  66                 	db	102	;'f'
  3405  00F890  66                 	db	102	;'f'
  3406  00F891  00                 	db	0
  3407  00F892                     STR_77:
  3408  00F892  4C                 	db	76	;'L'
  3409  00F893  69                 	db	105	;'i'
  3410  00F894  76                 	db	118	;'v'
  3411  00F895  69                 	db	105	;'i'
  3412  00F896  6E                 	db	110	;'n'
  3413  00F897  67                 	db	103	;'g'
  3414  00F898  72                 	db	114	;'r'
  3415  00F899  6F                 	db	111	;'o'
  3416  00F89A  6F                 	db	111	;'o'
  3417  00F89B  6D                 	db	109	;'m'
  3418  00F89C  20                 	db	32
  3419  00F89D  46                 	db	70	;'F'
  3420  00F89E  61                 	db	97	;'a'
  3421  00F89F  6E                 	db	110	;'n'
  3422  00F8A0  20                 	db	32
  3423  00F8A1  4F                 	db	79	;'O'
  3424  00F8A2  6E                 	db	110	;'n'
  3425  00F8A3  00                 	db	0
  3426  00F8A4                     STR_110:
  3427  00F8A4  42                 	db	66	;'B'
  3428  00F8A5  65                 	db	101	;'e'
  3429  00F8A6  64                 	db	100	;'d'
  3430  00F8A7  72                 	db	114	;'r'
  3431  00F8A8  6F                 	db	111	;'o'
  3432  00F8A9  6F                 	db	111	;'o'
  3433  00F8AA  6D                 	db	109	;'m'
  3434  00F8AB  20                 	db	32
  3435  00F8AC  53                 	db	83	;'S'
  3436  00F8AD  68                 	db	104	;'h'
  3437  00F8AE  61                 	db	97	;'a'
  3438  00F8AF  6B                 	db	107	;'k'
  3439  00F8B0  65                 	db	101	;'e'
  3440  00F8B1  72                 	db	114	;'r'
  3441  00F8B2  20                 	db	32
  3442  00F8B3  4F                 	db	79	;'O'
  3443  00F8B4  6E                 	db	110	;'n'
  3444  00F8B5  00                 	db	0
  3445  00F8B6                     STR_308:
  3446  00F8B6  77                 	db	119	;'w'
  3447  00F8B7  69                 	db	105	;'i'
  3448  00F8B8  74                 	db	116	;'t'
  3449  00F8B9  68                 	db	104	;'h'
  3450  00F8BA  65                 	db	101	;'e'
  3451  00F8BB  76                 	db	118	;'v'
  3452  00F8BC  65                 	db	101	;'e'
  3453  00F8BD  6E                 	db	110	;'n'
  3454  00F8BE  70                 	db	112	;'p'
  3455  00F8BF  61                 	db	97	;'a'
  3456  00F8C0  72                 	db	114	;'r'
  3457  00F8C1  69                 	db	105	;'i'
  3458  00F8C2  74                 	db	116	;'t'
  3459  00F8C3  79                 	db	121	;'y'
  3460  00F8C4  62                 	db	98	;'b'
  3461  00F8C5  69                 	db	105	;'i'
  3462  00F8C6  74                 	db	116	;'t'
  3463  00F8C7  00                 	db	0
  3464  00F8C8                     STR_325:
  3465  00F8C8  30                 	db	48	;'0'
  3466  00F8C9  31                 	db	49	;'1'
  3467  00F8CA  32                 	db	50	;'2'
  3468  00F8CB  33                 	db	51	;'3'
  3469  00F8CC  34                 	db	52	;'4'
  3470  00F8CD  35                 	db	53	;'5'
  3471  00F8CE  36                 	db	54	;'6'
  3472  00F8CF  37                 	db	55	;'7'
  3473  00F8D0  38                 	db	56	;'8'
  3474  00F8D1  39                 	db	57	;'9'
  3475  00F8D2  41                 	db	65	;'A'
  3476  00F8D3  42                 	db	66	;'B'
  3477  00F8D4  43                 	db	67	;'C'
  3478  00F8D5  44                 	db	68	;'D'
  3479  00F8D6  45                 	db	69	;'E'
  3480  00F8D7  46                 	db	70	;'F'
  3481  00F8D8  00                 	db	0
  3482  00F8D9                     STR_326:
  3483  00F8D9  30                 	db	48	;'0'
  3484  00F8DA  31                 	db	49	;'1'
  3485  00F8DB  32                 	db	50	;'2'
  3486  00F8DC  33                 	db	51	;'3'
  3487  00F8DD  34                 	db	52	;'4'
  3488  00F8DE  35                 	db	53	;'5'
  3489  00F8DF  36                 	db	54	;'6'
  3490  00F8E0  37                 	db	55	;'7'
  3491  00F8E1  38                 	db	56	;'8'
  3492  00F8E2  39                 	db	57	;'9'
  3493  00F8E3  61                 	db	97	;'a'
  3494  00F8E4  62                 	db	98	;'b'
  3495  00F8E5  63                 	db	99	;'c'
  3496  00F8E6  64                 	db	100	;'d'
  3497  00F8E7  65                 	db	101	;'e'
  3498  00F8E8  66                 	db	102	;'f'
  3499  00F8E9  00                 	db	0
  3500  00F8EA                     STR_210:
  3501  00F8EA  41                 	db	65	;'A'
  3502  00F8EB  44                 	db	68	;'D'
  3503  00F8EC  43                 	db	67	;'C'
  3504  00F8ED  20                 	db	32
  3505  00F8EE  48                 	db	72	;'H'
  3506  00F8EF  65                 	db	101	;'e'
  3507  00F8F0  6C                 	db	108	;'l'
  3508  00F8F1  70                 	db	112	;'p'
  3509  00F8F2  20                 	db	32
  3510  00F8F3  4D                 	db	77	;'M'
  3511  00F8F4  65                 	db	101	;'e'
  3512  00F8F5  6E                 	db	110	;'n'
  3513  00F8F6  75                 	db	117	;'u'
  3514  00F8F7  0D                 	db	13
  3515  00F8F8  0A                 	db	10
  3516  00F8F9  0A                 	db	10
  3517  00F8FA  00                 	db	0
  3518  00F8FB                     STR_60:
  3519  00F8FB  4C                 	db	76	;'L'
  3520  00F8FC  45                 	db	69	;'E'
  3521  00F8FD  44                 	db	68	;'D'
  3522  00F8FE  20                 	db	32
  3523  00F8FF  48                 	db	72	;'H'
  3524  00F900  65                 	db	101	;'e'
  3525  00F901  6C                 	db	108	;'l'
  3526  00F902  70                 	db	112	;'p'
  3527  00F903  20                 	db	32
  3528  00F904  4D                 	db	77	;'M'
  3529  00F905  65                 	db	101	;'e'
  3530  00F906  6E                 	db	110	;'n'
  3531  00F907  75                 	db	117	;'u'
  3532  00F908  0D                 	db	13
  3533  00F909  0A                 	db	10
  3534  00F90A  0A                 	db	10
  3535  00F90B  00                 	db	0
  3536  00F90C                     STR_207:
  3537  00F90C  43                 	db	67	;'C'
  3538  00F90D  68                 	db	104	;'h'
  3539  00F90E  6E                 	db	110	;'n'
  3540  00F90F  6C                 	db	108	;'l'
  3541  00F910  20                 	db	32
  3542  00F911  73                 	db	115	;'s'
  3543  00F912  65                 	db	101	;'e'
  3544  00F913  74                 	db	116	;'t'
  3545  00F914  20                 	db	32
  3546  00F915  74                 	db	116	;'t'
  3547  00F916  6F                 	db	111	;'o'
  3548  00F917  20                 	db	32
  3549  00F918  25                 	db	37
  3550  00F919  64                 	db	100	;'d'
  3551  00F91A  0D                 	db	13
  3552  00F91B  0A                 	db	10
  3553  00F91C  00                 	db	0
  3554  00F91D                     STR_276:
  3555  00F91D  43                 	db	67	;'C'
  3556  00F91E  68                 	db	104	;'h'
  3557  00F91F  72                 	db	114	;'r'
  3558  00F920  69                 	db	105	;'i'
  3559  00F921  73                 	db	115	;'s'
  3560  00F922  74                 	db	116	;'t'
  3561  00F923  6D                 	db	109	;'m'
  3562  00F924  61                 	db	97	;'a'
  3563  00F925  73                 	db	115	;'s'
  3564  00F926  20                 	db	32
  3565  00F927  54                 	db	84	;'T'
  3566  00F928  72                 	db	114	;'r'
  3567  00F929  65                 	db	101	;'e'
  3568  00F92A  65                 	db	101	;'e'
  3569  00F92B  0D                 	db	13
  3570  00F92C  0A                 	db	10
  3571  00F92D  00                 	db	0
  3572  00F92E                     STR_65:
  3573  00F92E  69                 	db	105	;'i'
  3574  00F92F  2E                 	db	46
  3575  00F930  65                 	db	101	;'e'
  3576  00F931  2E                 	db	46
  3577  00F932  20                 	db	32
  3578  00F933  4C                 	db	76	;'L'
  3579  00F934  45                 	db	69	;'E'
  3580  00F935  44                 	db	68	;'D'
  3581  00F936  31                 	db	49	;'1'
  3582  00F937  20                 	db	32
  3583  00F938  3D                 	db	61	;'='
  3584  00F939  20                 	db	32
  3585  00F93A  4F                 	db	79	;'O'
  3586  00F93B  6E                 	db	110	;'n'
  3587  00F93C  0D                 	db	13
  3588  00F93D  0A                 	db	10
  3589  00F93E  00                 	db	0
  3590  00F93F                     STR_225:
  3591  00F93F  52                 	db	82	;'R'
  3592  00F940  54                 	db	84	;'T'
  3593  00F941  43                 	db	67	;'C'
  3594  00F942  20                 	db	32
  3595  00F943  54                 	db	84	;'T'
  3596  00F944  69                 	db	105	;'i'
  3597  00F945  6D                 	db	109	;'m'
  3598  00F946  65                 	db	101	;'e'
  3599  00F947  20                 	db	32
  3600  00F948  69                 	db	105	;'i'
  3601  00F949  73                 	db	115	;'s'
  3602  00F94A  3A                 	db	58	;':'
  3603  00F94B  20                 	db	32
  3604  00F94C  20                 	db	32
  3605  00F94D  20                 	db	32
  3606  00F94E  20                 	db	32
  3607  00F94F  00                 	db	0
  3608  00F950                     STR_100:
  3609  00F950  62                 	db	98	;'b'
  3610  00F951  65                 	db	101	;'e'
  3611  00F952  64                 	db	100	;'d'
  3612  00F953  72                 	db	114	;'r'
  3613  00F954  6F                 	db	111	;'o'
  3614  00F955  6F                 	db	111	;'o'
  3615  00F956  6D                 	db	109	;'m'
  3616  00F957  6C                 	db	108	;'l'
  3617  00F958  69                 	db	105	;'i'
  3618  00F959  67                 	db	103	;'g'
  3619  00F95A  68                 	db	104	;'h'
  3620  00F95B  74                 	db	116	;'t'
  3621  00F95C  3D                 	db	61	;'='
  3622  00F95D  6F                 	db	111	;'o'
  3623  00F95E  66                 	db	102	;'f'
  3624  00F95F  66                 	db	102	;'f'
  3625  00F960  00                 	db	0
  3626  00F961                     STR_229:
  3627  00F961  52                 	db	82	;'R'
  3628  00F962  54                 	db	84	;'T'
  3629  00F963  43                 	db	67	;'C'
  3630  00F964  20                 	db	32
  3631  00F965  69                 	db	105	;'i'
  3632  00F966  73                 	db	115	;'s'
  3633  00F967  6E                 	db	110	;'n'
  3634  00F968  74                 	db	116	;'t'
  3635  00F969  20                 	db	32
  3636  00F96A  77                 	db	119	;'w'
  3637  00F96B  6F                 	db	111	;'o'
  3638  00F96C  72                 	db	114	;'r'
  3639  00F96D  6B                 	db	107	;'k'
  3640  00F96E  69                 	db	105	;'i'
  3641  00F96F  6E                 	db	110	;'n'
  3642  00F970  67                 	db	103	;'g'
  3643  00F971  00                 	db	0
  3644  00F972                     STR_76:
  3645  00F972  6C                 	db	108	;'l'
  3646  00F973  69                 	db	105	;'i'
  3647  00F974  76                 	db	118	;'v'
  3648  00F975  69                 	db	105	;'i'
  3649  00F976  6E                 	db	110	;'n'
  3650  00F977  67                 	db	103	;'g'
  3651  00F978  72                 	db	114	;'r'
  3652  00F979  6F                 	db	111	;'o'
  3653  00F97A  6F                 	db	111	;'o'
  3654  00F97B  6D                 	db	109	;'m'
  3655  00F97C  66                 	db	102	;'f'
  3656  00F97D  61                 	db	97	;'a'
  3657  00F97E  6E                 	db	110	;'n'
  3658  00F97F  3D                 	db	61	;'='
  3659  00F980  6F                 	db	111	;'o'
  3660  00F981  6E                 	db	110	;'n'
  3661  00F982  00                 	db	0
  3662  00F983                     STR_109:
  3663  00F983  62                 	db	98	;'b'
  3664  00F984  65                 	db	101	;'e'
  3665  00F985  64                 	db	100	;'d'
  3666  00F986  72                 	db	114	;'r'
  3667  00F987  6F                 	db	111	;'o'
  3668  00F988  6F                 	db	111	;'o'
  3669  00F989  6D                 	db	109	;'m'
  3670  00F98A  73                 	db	115	;'s'
  3671  00F98B  68                 	db	104	;'h'
  3672  00F98C  61                 	db	97	;'a'
  3673  00F98D  6B                 	db	107	;'k'
  3674  00F98E  65                 	db	101	;'e'
  3675  00F98F  72                 	db	114	;'r'
  3676  00F990  3D                 	db	61	;'='
  3677  00F991  6F                 	db	111	;'o'
  3678  00F992  6E                 	db	110	;'n'
  3679  00F993  00                 	db	0
  3680  00F994                     STR_255:
  3681  00F994  6A                 	db	106	;'j'
  3682  00F995  6F                 	db	111	;'o'
  3683  00F996  65                 	db	101	;'e'
  3684  00F997  73                 	db	115	;'s'
  3685  00F998  72                 	db	114	;'r'
  3686  00F999  6F                 	db	111	;'o'
  3687  00F99A  6F                 	db	111	;'o'
  3688  00F99B  6D                 	db	109	;'m'
  3689  00F99C  6C                 	db	108	;'l'
  3690  00F99D  69                 	db	105	;'i'
  3691  00F99E  67                 	db	103	;'g'
  3692  00F99F  68                 	db	104	;'h'
  3693  00F9A0  74                 	db	116	;'t'
  3694  00F9A1  3D                 	db	61	;'='
  3695  00F9A2  6F                 	db	111	;'o'
  3696  00F9A3  6E                 	db	110	;'n'
  3697  00F9A4  00                 	db	0
  3698  00F9A5                     STR_161:
  3699  00F9A5  72                 	db	114	;'r'
  3700  00F9A6  65                 	db	101	;'e'
  3701  00F9A7  64                 	db	100	;'d'
  3702  00F9A8  6C                 	db	108	;'l'
  3703  00F9A9  65                 	db	101	;'e'
  3704  00F9AA  64                 	db	100	;'d'
  3705  00F9AB  62                 	db	98	;'b'
  3706  00F9AC  72                 	db	114	;'r'
  3707  00F9AD  69                 	db	105	;'i'
  3708  00F9AE  67                 	db	103	;'g'
  3709  00F9AF  68                 	db	104	;'h'
  3710  00F9B0  74                 	db	116	;'t'
  3711  00F9B1  6E                 	db	110	;'n'
  3712  00F9B2  65                 	db	101	;'e'
  3713  00F9B3  73                 	db	115	;'s'
  3714  00F9B4  73                 	db	115	;'s'
  3715  00F9B5  00                 	db	0
  3716  00F9B6                     STR_307:
  3717  00F9B6  77                 	db	119	;'w'
  3718  00F9B7  69                 	db	105	;'i'
  3719  00F9B8  74                 	db	116	;'t'
  3720  00F9B9  68                 	db	104	;'h'
  3721  00F9BA  6F                 	db	111	;'o'
  3722  00F9BB  64                 	db	100	;'d'
  3723  00F9BC  64                 	db	100	;'d'
  3724  00F9BD  70                 	db	112	;'p'
  3725  00F9BE  61                 	db	97	;'a'
  3726  00F9BF  72                 	db	114	;'r'
  3727  00F9C0  69                 	db	105	;'i'
  3728  00F9C1  74                 	db	116	;'t'
  3729  00F9C2  79                 	db	121	;'y'
  3730  00F9C3  62                 	db	98	;'b'
  3731  00F9C4  69                 	db	105	;'i'
  3732  00F9C5  74                 	db	116	;'t'
  3733  00F9C6  00                 	db	0
  3734  00F9C7                     STR_177:
  3735  00F9C7  52                 	db	82	;'R'
  3736  00F9C8  65                 	db	101	;'e'
  3737  00F9C9  64                 	db	100	;'d'
  3738  00F9CA  20                 	db	32
  3739  00F9CB  4C                 	db	76	;'L'
  3740  00F9CC  45                 	db	69	;'E'
  3741  00F9CD  44                 	db	68	;'D'
  3742  00F9CE  20                 	db	32
  3743  00F9CF  43                 	db	67	;'C'
  3744  00F9D0  6F                 	db	111	;'o'
  3745  00F9D1  6E                 	db	110	;'n'
  3746  00F9D2  74                 	db	116	;'t'
  3747  00F9D3  72                 	db	114	;'r'
  3748  00F9D4  61                 	db	97	;'a'
  3749  00F9D5  73                 	db	115	;'s'
  3750  00F9D6  74                 	db	116	;'t'
  3751  00F9D7  00                 	db	0
  3752  00F9D8                     STR_19:
  3753  00F9D8  53                 	db	83	;'S'
  3754  00F9D9  74                 	db	116	;'t'
  3755  00F9DA  61                 	db	97	;'a'
  3756  00F9DB  72                 	db	114	;'r'
  3757  00F9DC  74                 	db	116	;'t'
  3758  00F9DD  69                 	db	105	;'i'
  3759  00F9DE  6E                 	db	110	;'n'
  3760  00F9DF  67                 	db	103	;'g'
  3761  00F9E0  2E                 	db	46
  3762  00F9E1  2E                 	db	46
  3763  00F9E2  2E                 	db	46
  3764  00F9E3  2E                 	db	46
  3765  00F9E4  2E                 	db	46
  3766  00F9E5  2E                 	db	46
  3767  00F9E6  2E                 	db	46
  3768  00F9E7  2E                 	db	46
  3769  00F9E8  00                 	db	0
  3770  00F9E9                     STR_186:
  3771  00F9E9  45                 	db	69	;'E'
  3772  00F9EA  52                 	db	82	;'R'
  3773  00F9EB  52                 	db	82	;'R'
  3774  00F9EC  3A                 	db	58	;':'
  3775  00F9ED  20                 	db	32
  3776  00F9EE  43                 	db	67	;'C'
  3777  00F9EF  4E                 	db	78	;'N'
  3778  00F9F0  53                 	db	83	;'S'
  3779  00F9F1  54                 	db	84	;'T'
  3780  00F9F2  20                 	db	32
  3781  00F9F3  3E                 	db	62	;'>'
  3782  00F9F4  20                 	db	32
  3783  00F9F5  31                 	db	49	;'1'
  3784  00F9F6  30                 	db	48	;'0'
  3785  00F9F7  30                 	db	48	;'0'
  3786  00F9F8  00                 	db	0
  3787  00F9F9                     STR_167:
  3788  00F9F9  45                 	db	69	;'E'
  3789  00F9FA  52                 	db	82	;'R'
  3790  00F9FB  52                 	db	82	;'R'
  3791  00F9FC  3A                 	db	58	;':'
  3792  00F9FD  20                 	db	32
  3793  00F9FE  44                 	db	68	;'D'
  3794  00F9FF  75                 	db	117	;'u'
  3795  00FA00  74                 	db	116	;'t'
  3796  00FA01  79                 	db	121	;'y'
  3797  00FA02  20                 	db	32
  3798  00FA03  3E                 	db	62	;'>'
  3799  00FA04  20                 	db	32
  3800  00FA05  31                 	db	49	;'1'
  3801  00FA06  30                 	db	48	;'0'
  3802  00FA07  30                 	db	48	;'0'
  3803  00FA08  00                 	db	0
  3804  00FA09                     STR_83:
  3805  00FA09  4C                 	db	76	;'L'
  3806  00FA0A  56                 	db	86	;'V'
  3807  00FA0B  4E                 	db	78	;'N'
  3808  00FA0C  47                 	db	71	;'G'
  3809  00FA0D  20                 	db	32
  3810  00FA0E  52                 	db	82	;'R'
  3811  00FA0F  6D                 	db	109	;'m'
  3812  00FA10  20                 	db	32
  3813  00FA11  54                 	db	84	;'T'
  3814  00FA12  61                 	db	97	;'a'
  3815  00FA13  73                 	db	115	;'s'
  3816  00FA14  6B                 	db	107	;'k'
  3817  00FA15  3F                 	db	63	;'?'
  3818  00FA16  3F                 	db	63	;'?'
  3819  00FA17  3F                 	db	63	;'?'
  3820  00FA18  00                 	db	0
  3821  00FA19                     STR_115:
  3822  00FA19  42                 	db	66	;'B'
  3823  00FA1A  65                 	db	101	;'e'
  3824  00FA1B  64                 	db	100	;'d'
  3825  00FA1C  72                 	db	114	;'r'
  3826  00FA1D  6F                 	db	111	;'o'
  3827  00FA1E  6F                 	db	111	;'o'
  3828  00FA1F  6D                 	db	109	;'m'
  3829  00FA20  20                 	db	32
  3830  00FA21  54                 	db	84	;'T'
  3831  00FA22  61                 	db	97	;'a'
  3832  00FA23  73                 	db	115	;'s'
  3833  00FA24  6B                 	db	107	;'k'
  3834  00FA25  3F                 	db	63	;'?'
  3835  00FA26  3F                 	db	63	;'?'
  3836  00FA27  3F                 	db	63	;'?'
  3837  00FA28  00                 	db	0
  3838  00FA29                     STR_124:
  3839  00FA29  42                 	db	66	;'B'
  3840  00FA2A  65                 	db	101	;'e'
  3841  00FA2B  64                 	db	100	;'d'
  3842  00FA2C  72                 	db	114	;'r'
  3843  00FA2D  6F                 	db	111	;'o'
  3844  00FA2E  6F                 	db	111	;'o'
  3845  00FA2F  6D                 	db	109	;'m'
  3846  00FA30  20                 	db	32
  3847  00FA31  48                 	db	72	;'H'
  3848  00FA32  65                 	db	101	;'e'
  3849  00FA33  6C                 	db	108	;'l'
  3850  00FA34  70                 	db	112	;'p'
  3851  00FA35  3F                 	db	63	;'?'
  3852  00FA36  3F                 	db	63	;'?'
  3853  00FA37  3F                 	db	63	;'?'
  3854  00FA38  00                 	db	0
  3855  00FA39                     STR_173:
  3856  00FA39  52                 	db	82	;'R'
  3857  00FA3A  65                 	db	101	;'e'
  3858  00FA3B  64                 	db	100	;'d'
  3859  00FA3C  20                 	db	32
  3860  00FA3D  4C                 	db	76	;'L'
  3861  00FA3E  45                 	db	69	;'E'
  3862  00FA3F  44                 	db	68	;'D'
  3863  00FA40  20                 	db	32
  3864  00FA41  57                 	db	87	;'W'
  3865  00FA42  68                 	db	104	;'h'
  3866  00FA43  61                 	db	97	;'a'
  3867  00FA44  74                 	db	116	;'t'
  3868  00FA45  3F                 	db	63	;'?'
  3869  00FA46  3F                 	db	63	;'?'
  3870  00FA47  3F                 	db	63	;'?'
  3871  00FA48  00                 	db	0
  3872  00FA49                     STR_262:
  3873  00FA49  4A                 	db	74	;'J'
  3874  00FA4A  6F                 	db	111	;'o'
  3875  00FA4B  65                 	db	101	;'e'
  3876  00FA4C  20                 	db	32
  3877  00FA4D  72                 	db	114	;'r'
  3878  00FA4E  6F                 	db	111	;'o'
  3879  00FA4F  6F                 	db	111	;'o'
  3880  00FA50  6D                 	db	109	;'m'
  3881  00FA51  20                 	db	32
  3882  00FA52  77                 	db	119	;'w'
  3883  00FA53  68                 	db	104	;'h'
  3884  00FA54  61                 	db	97	;'a'
  3885  00FA55  74                 	db	116	;'t'
  3886  00FA56  3F                 	db	63	;'?'
  3887  00FA57  3F                 	db	63	;'?'
  3888  00FA58  00                 	db	0
  3889  00FA59                     STR_294:
  3890  00FA59  43                 	db	67	;'C'
  3891  00FA5A  68                 	db	104	;'h'
  3892  00FA5B  72                 	db	114	;'r'
  3893  00FA5C  69                 	db	105	;'i'
  3894  00FA5D  73                 	db	115	;'s'
  3895  00FA5E  74                 	db	116	;'t'
  3896  00FA5F  6D                 	db	109	;'m'
  3897  00FA60  61                 	db	97	;'a'
  3898  00FA61  73                 	db	115	;'s'
  3899  00FA62  20                 	db	32
  3900  00FA63  54                 	db	84	;'T'
  3901  00FA64  72                 	db	114	;'r'
  3902  00FA65  65                 	db	101	;'e'
  3903  00FA66  65                 	db	101	;'e'
  3904  00FA67  3F                 	db	63	;'?'
  3905  00FA68  00                 	db	0
  3906  00FA69                     STR_137:
  3907  00FA69  58                 	db	88	;'X'
  3908  00FA6A  4D                 	db	77	;'M'
  3909  00FA6B  41                 	db	65	;'A'
  3910  00FA6C  53                 	db	83	;'S'
  3911  00FA6D  20                 	db	32
  3912  00FA6E  43                 	db	67	;'C'
  3913  00FA6F  6F                 	db	111	;'o'
  3914  00FA70  6C                 	db	108	;'l'
  3915  00FA71  6F                 	db	111	;'o'
  3916  00FA72  72                 	db	114	;'r'
  3917  00FA73  20                 	db	32
  3918  00FA74  54                 	db	84	;'T'
  3919  00FA75  47                 	db	71	;'G'
  3920  00FA76  4C                 	db	76	;'L'
  3921  00FA77  44                 	db	68	;'D'
  3922  00FA78  00                 	db	0
  3923  00FA79                     STR_75:
  3924  00FA79  4C                 	db	76	;'L'
  3925  00FA7A  56                 	db	86	;'V'
  3926  00FA7B  4E                 	db	78	;'N'
  3927  00FA7C  47                 	db	71	;'G'
  3928  00FA7D  20                 	db	32
  3929  00FA7E  52                 	db	82	;'R'
  3930  00FA7F  6D                 	db	109	;'m'
  3931  00FA80  20                 	db	32
  3932  00FA81  4C                 	db	76	;'L'
  3933  00FA82  74                 	db	116	;'t'
  3934  00FA83  20                 	db	32
  3935  00FA84  54                 	db	84	;'T'
  3936  00FA85  47                 	db	71	;'G'
  3937  00FA86  4C                 	db	76	;'L'
  3938  00FA87  44                 	db	68	;'D'
  3939  00FA88  00                 	db	0
  3940  00FA89                     STR_102:
  3941  00FA89  42                 	db	66	;'B'
  3942  00FA8A  65                 	db	101	;'e'
  3943  00FA8B  64                 	db	100	;'d'
  3944  00FA8C  72                 	db	114	;'r'
  3945  00FA8D  6F                 	db	111	;'o'
  3946  00FA8E  6F                 	db	111	;'o'
  3947  00FA8F  6D                 	db	109	;'m'
  3948  00FA90  20                 	db	32
  3949  00FA91  4C                 	db	76	;'L'
  3950  00FA92  74                 	db	116	;'t'
  3951  00FA93  20                 	db	32
  3952  00FA94  54                 	db	84	;'T'
  3953  00FA95  47                 	db	71	;'G'
  3954  00FA96  4C                 	db	76	;'L'
  3955  00FA97  44                 	db	68	;'D'
  3956  00FA98  00                 	db	0
  3957  00FA99                     STR_222:
  3958  00FA99  52                 	db	82	;'R'
  3959  00FA9A  54                 	db	84	;'T'
  3960  00FA9B  43                 	db	67	;'C'
  3961  00FA9C  20                 	db	32
  3962  00FA9D  42                 	db	66	;'B'
  3963  00FA9E  74                 	db	116	;'t'
  3964  00FA9F  79                 	db	121	;'y'
  3965  00FAA0  20                 	db	32
  3966  00FAA1  3D                 	db	61	;'='
  3967  00FAA2  20                 	db	32
  3968  00FAA3  25                 	db	37
  3969  00FAA4  64                 	db	100	;'d'
  3970  00FAA5  2E                 	db	46
  3971  00FAA6  25                 	db	37
  3972  00FAA7  64                 	db	100	;'d'
  3973  00FAA8  00                 	db	0
  3974  00FAA9                     STR_316:
  3975  00FAA9  49                 	db	73	;'I'
  3976  00FAAA  6E                 	db	110	;'n'
  3977  00FAAB  76                 	db	118	;'v'
  3978  00FAAC  61                 	db	97	;'a'
  3979  00FAAD  6C                 	db	108	;'l'
  3980  00FAAE  69                 	db	105	;'i'
  3981  00FAAF  64                 	db	100	;'d'
  3982  00FAB0  20                 	db	32
  3983  00FAB1  43                 	db	67	;'C'
  3984  00FAB2  6F                 	db	111	;'o'
  3985  00FAB3  6D                 	db	109	;'m'
  3986  00FAB4  6D                 	db	109	;'m'
  3987  00FAB5  61                 	db	97	;'a'
  3988  00FAB6  6E                 	db	110	;'n'
  3989  00FAB7  64                 	db	100	;'d'
  3990  00FAB8  00                 	db	0
  3991  00FAB9                     STR_205:
  3992  00FAB9  45                 	db	69	;'E'
  3993  00FABA  52                 	db	82	;'R'
  3994  00FABB  52                 	db	82	;'R'
  3995  00FABC  3A                 	db	58	;':'
  3996  00FABD  20                 	db	32
  3997  00FABE  43                 	db	67	;'C'
  3998  00FABF  61                 	db	97	;'a'
  3999  00FAC0  6E                 	db	110	;'n'
  4000  00FAC1  74                 	db	116	;'t'
  4001  00FAC2  20                 	db	32
  4002  00FAC3  70                 	db	112	;'p'
  4003  00FAC4  61                 	db	97	;'a'
  4004  00FAC5  72                 	db	114	;'r'
  4005  00FAC6  73                 	db	115	;'s'
  4006  00FAC7  65                 	db	101	;'e'
  4007  00FAC8  00                 	db	0
  4008  00FAC9                     STR_114:
  4009  00FAC9  42                 	db	66	;'B'
  4010  00FACA  65                 	db	101	;'e'
  4011  00FACB  64                 	db	100	;'d'
  4012  00FACC  72                 	db	114	;'r'
  4013  00FACD  6F                 	db	111	;'o'
  4014  00FACE  6F                 	db	111	;'o'
  4015  00FACF  6D                 	db	109	;'m'
  4016  00FAD0  20                 	db	32
  4017  00FAD1  53                 	db	83	;'S'
  4018  00FAD2  4B                 	db	75	;'K'
  4019  00FAD3  52                 	db	82	;'R'
  4020  00FAD4  20                 	db	32
  4021  00FAD5  4F                 	db	79	;'O'
  4022  00FAD6  66                 	db	102	;'f'
  4023  00FAD7  66                 	db	102	;'f'
  4024  00FAD8  00                 	db	0
  4025  00FAD9                     STR_107:
  4026  00FAD9  42                 	db	66	;'B'
  4027  00FADA  65                 	db	101	;'e'
  4028  00FADB  64                 	db	100	;'d'
  4029  00FADC  72                 	db	114	;'r'
  4030  00FADD  6F                 	db	111	;'o'
  4031  00FADE  6F                 	db	111	;'o'
  4032  00FADF  6D                 	db	109	;'m'
  4033  00FAE0  20                 	db	32
  4034  00FAE1  46                 	db	70	;'F'
  4035  00FAE2  61                 	db	97	;'a'
  4036  00FAE3  6E                 	db	110	;'n'
  4037  00FAE4  20                 	db	32
  4038  00FAE5  4F                 	db	79	;'O'
  4039  00FAE6  66                 	db	102	;'f'
  4040  00FAE7  66                 	db	102	;'f'
  4041  00FAE8  00                 	db	0
  4042  00FAE9                     STR_260:
  4043  00FAE9  4A                 	db	74	;'J'
  4044  00FAEA  6F                 	db	111	;'o'
  4045  00FAEB  65                 	db	101	;'e'
  4046  00FAEC  20                 	db	32
  4047  00FAED  72                 	db	114	;'r'
  4048  00FAEE  6F                 	db	111	;'o'
  4049  00FAEF  6F                 	db	111	;'o'
  4050  00FAF0  6D                 	db	109	;'m'
  4051  00FAF1  20                 	db	32
  4052  00FAF2  6C                 	db	108	;'l'
  4053  00FAF3  74                 	db	116	;'t'
  4054  00FAF4  20                 	db	32
  4055  00FAF5  4F                 	db	79	;'O'
  4056  00FAF6  66                 	db	102	;'f'
  4057  00FAF7  66                 	db	102	;'f'
  4058  00FAF8  00                 	db	0
  4059  00FAF9                     STR_203:
  4060  00FAF9  45                 	db	69	;'E'
  4061  00FAFA  52                 	db	82	;'R'
  4062  00FAFB  52                 	db	82	;'R'
  4063  00FAFC  3A                 	db	58	;':'
  4064  00FAFD  20                 	db	32
  4065  00FAFE  55                 	db	85	;'U'
  4066  00FAFF  73                 	db	115	;'s'
  4067  00FB00  65                 	db	101	;'e'
  4068  00FB01  20                 	db	32
  4069  00FB02  2B                 	db	43
  4070  00FB03  20                 	db	32
  4071  00FB04  43                 	db	67	;'C'
  4072  00FB05  68                 	db	104	;'h'
  4073  00FB06  6E                 	db	110	;'n'
  4074  00FB07  6C                 	db	108	;'l'
  4075  00FB08  00                 	db	0
  4076  00FB09                     STR_99:
  4077  00FB09  62                 	db	98	;'b'
  4078  00FB0A  65                 	db	101	;'e'
  4079  00FB0B  64                 	db	100	;'d'
  4080  00FB0C  72                 	db	114	;'r'
  4081  00FB0D  6F                 	db	111	;'o'
  4082  00FB0E  6F                 	db	111	;'o'
  4083  00FB0F  6D                 	db	109	;'m'
  4084  00FB10  6C                 	db	108	;'l'
  4085  00FB11  69                 	db	105	;'i'
  4086  00FB12  67                 	db	103	;'g'
  4087  00FB13  68                 	db	104	;'h'
  4088  00FB14  74                 	db	116	;'t'
  4089  00FB15  3D                 	db	61	;'='
  4090  00FB16  6F                 	db	111	;'o'
  4091  00FB17  6E                 	db	110	;'n'
  4092  00FB18  00                 	db	0
  4093  00FB19                     STR_301:
  4094  00FB19  62                 	db	98	;'b'
  4095  00FB1A  61                 	db	97	;'a'
  4096  00FB1B  75                 	db	117	;'u'
  4097  00FB1C  64                 	db	100	;'d'
  4098  00FB1D  77                 	db	119	;'w'
  4099  00FB1E  69                 	db	105	;'i'
  4100  00FB1F  6C                 	db	108	;'l'
  4101  00FB20  6C                 	db	108	;'l'
  4102  00FB21  62                 	db	98	;'b'
  4103  00FB22  65                 	db	101	;'e'
  4104  00FB23  73                 	db	115	;'s'
  4105  00FB24  65                 	db	101	;'e'
  4106  00FB25  74                 	db	116	;'t'
  4107  00FB26  74                 	db	116	;'t'
  4108  00FB27  6F                 	db	111	;'o'
  4109  00FB28  00                 	db	0
  4110  00FB29                     STR_90:
  4111  00FB29  4C                 	db	76	;'L'
  4112  00FB2A  56                 	db	86	;'V'
  4113  00FB2B  4E                 	db	78	;'N'
  4114  00FB2C  47                 	db	71	;'G'
  4115  00FB2D  20                 	db	32
  4116  00FB2E  52                 	db	82	;'R'
  4117  00FB2F  6D                 	db	109	;'m'
  4118  00FB30  20                 	db	32
  4119  00FB31  4C                 	db	76	;'L'
  4120  00FB32  74                 	db	116	;'t'
  4121  00FB33  20                 	db	32
  4122  00FB34  68                 	db	104	;'h'
  4123  00FB35  65                 	db	101	;'e'
  4124  00FB36  6C                 	db	108	;'l'
  4125  00FB37  70                 	db	112	;'p'
  4126  00FB38  00                 	db	0
  4127  00FB39                     STR_306:
  4128  00FB39  77                 	db	119	;'w'
  4129  00FB3A  69                 	db	105	;'i'
  4130  00FB3B  74                 	db	116	;'t'
  4131  00FB3C  68                 	db	104	;'h'
  4132  00FB3D  6E                 	db	110	;'n'
  4133  00FB3E  6F                 	db	111	;'o'
  4134  00FB3F  70                 	db	112	;'p'
  4135  00FB40  61                 	db	97	;'a'
  4136  00FB41  72                 	db	114	;'r'
  4137  00FB42  69                 	db	105	;'i'
  4138  00FB43  74                 	db	116	;'t'
  4139  00FB44  79                 	db	121	;'y'
  4140  00FB45  62                 	db	98	;'b'
  4141  00FB46  69                 	db	105	;'i'
  4142  00FB47  74                 	db	116	;'t'
  4143  00FB48  00                 	db	0
  4144  00FB49                     STR_18:
  4145  00FB49  53                 	db	83	;'S'
  4146  00FB4A  74                 	db	116	;'t'
  4147  00FB4B  61                 	db	97	;'a'
  4148  00FB4C  72                 	db	114	;'r'
  4149  00FB4D  74                 	db	116	;'t'
  4150  00FB4E  69                 	db	105	;'i'
  4151  00FB4F  6E                 	db	110	;'n'
  4152  00FB50  67                 	db	103	;'g'
  4153  00FB51  2E                 	db	46
  4154  00FB52  2E                 	db	46
  4155  00FB53  2E                 	db	46
  4156  00FB54  2E                 	db	46
  4157  00FB55  2E                 	db	46
  4158  00FB56  2E                 	db	46
  4159  00FB57  2E                 	db	46
  4160  00FB58  00                 	db	0
  4161  00FB59                     STR_283:
  4162  00FB59  43                 	db	67	;'C'
  4163  00FB5A  75                 	db	117	;'u'
  4164  00FB5B  72                 	db	114	;'r'
  4165  00FB5C  72                 	db	114	;'r'
  4166  00FB5D  65                 	db	101	;'e'
  4167  00FB5E  6E                 	db	110	;'n'
  4168  00FB5F  74                 	db	116	;'t'
  4169  00FB60  20                 	db	32
  4170  00FB61  54                 	db	84	;'T'
  4171  00FB62  69                 	db	105	;'i'
  4172  00FB63  6D                 	db	109	;'m'
  4173  00FB64  65                 	db	101	;'e'
  4174  00FB65  0D                 	db	13
  4175  00FB66  0A                 	db	10
  4176  00FB67  00                 	db	0
  4177  00FB68                     STR_150:
  4178  00FB68  77                 	db	119	;'w'
  4179  00FB69  68                 	db	104	;'h'
  4180  00FB6A  69                 	db	105	;'i'
  4181  00FB6B  74                 	db	116	;'t'
  4182  00FB6C  65                 	db	101	;'e'
  4183  00FB6D  20                 	db	32
  4184  00FB6E  6C                 	db	108	;'l'
  4185  00FB6F  69                 	db	105	;'i'
  4186  00FB70  67                 	db	103	;'g'
  4187  00FB71  68                 	db	104	;'h'
  4188  00FB72  74                 	db	116	;'t'
  4189  00FB73  73                 	db	115	;'s'
  4190  00FB74  0D                 	db	13
  4191  00FB75  0A                 	db	10
  4192  00FB76  00                 	db	0
  4193  00FB77                     STR_190:
  4194  00FB77  43                 	db	67	;'C'
  4195  00FB78  4E                 	db	78	;'N'
  4196  00FB79  53                 	db	83	;'S'
  4197  00FB7A  54                 	db	84	;'T'
  4198  00FB7B  20                 	db	32
  4199  00FB7C  73                 	db	115	;'s'
  4200  00FB7D  65                 	db	101	;'e'
  4201  00FB7E  74                 	db	116	;'t'
  4202  00FB7F  20                 	db	32
  4203  00FB80  74                 	db	116	;'t'
  4204  00FB81  6F                 	db	111	;'o'
  4205  00FB82  20                 	db	32
  4206  00FB83  25                 	db	37
  4207  00FB84  64                 	db	100	;'d'
  4208  00FB85  00                 	db	0
  4209  00FB86                     STR_171:
  4210  00FB86  44                 	db	68	;'D'
  4211  00FB87  75                 	db	117	;'u'
  4212  00FB88  74                 	db	116	;'t'
  4213  00FB89  79                 	db	121	;'y'
  4214  00FB8A  20                 	db	32
  4215  00FB8B  73                 	db	115	;'s'
  4216  00FB8C  65                 	db	101	;'e'
  4217  00FB8D  74                 	db	116	;'t'
  4218  00FB8E  20                 	db	32
  4219  00FB8F  74                 	db	116	;'t'
  4220  00FB90  6F                 	db	111	;'o'
  4221  00FB91  20                 	db	32
  4222  00FB92  25                 	db	37
  4223  00FB93  64                 	db	100	;'d'
  4224  00FB94  00                 	db	0
  4225  00FB95                     STR_145:
  4226  00FB95  58                 	db	88	;'X'
  4227  00FB96  4D                 	db	77	;'M'
  4228  00FB97  41                 	db	65	;'A'
  4229  00FB98  53                 	db	83	;'S'
  4230  00FB99  20                 	db	32
  4231  00FB9A  57                 	db	87	;'W'
  4232  00FB9B  68                 	db	104	;'h'
  4233  00FB9C  69                 	db	105	;'i'
  4234  00FB9D  74                 	db	116	;'t'
  4235  00FB9E  65                 	db	101	;'e'
  4236  00FB9F  20                 	db	32
  4237  00FBA0  4F                 	db	79	;'O'
  4238  00FBA1  66                 	db	102	;'f'
  4239  00FBA2  66                 	db	102	;'f'
  4240  00FBA3  00                 	db	0
  4241  00FBA4                     STR_81:
  4242  00FBA4  4C                 	db	76	;'L'
  4243  00FBA5  56                 	db	86	;'V'
  4244  00FBA6  4E                 	db	78	;'N'
  4245  00FBA7  47                 	db	71	;'G'
  4246  00FBA8  20                 	db	32
  4247  00FBA9  52                 	db	82	;'R'
  4248  00FBAA  6D                 	db	109	;'m'
  4249  00FBAB  20                 	db	32
  4250  00FBAC  4C                 	db	76	;'L'
  4251  00FBAD  74                 	db	116	;'t'
  4252  00FBAE  20                 	db	32
  4253  00FBAF  4F                 	db	79	;'O'
  4254  00FBB0  66                 	db	102	;'f'
  4255  00FBB1  66                 	db	102	;'f'
  4256  00FBB2  00                 	db	0
  4257  00FBB3                     STR_108:
  4258  00FBB3  42                 	db	66	;'B'
  4259  00FBB4  65                 	db	101	;'e'
  4260  00FBB5  64                 	db	100	;'d'
  4261  00FBB6  72                 	db	114	;'r'
  4262  00FBB7  6F                 	db	111	;'o'
  4263  00FBB8  6F                 	db	111	;'o'
  4264  00FBB9  6D                 	db	109	;'m'
  4265  00FBBA  20                 	db	32
  4266  00FBBB  4C                 	db	76	;'L'
  4267  00FBBC  74                 	db	116	;'t'
  4268  00FBBD  20                 	db	32
  4269  00FBBE  4F                 	db	79	;'O'
  4270  00FBBF  66                 	db	102	;'f'
  4271  00FBC0  66                 	db	102	;'f'
  4272  00FBC1  00                 	db	0
  4273  00FBC2                     STR_106:
  4274  00FBC2  62                 	db	98	;'b'
  4275  00FBC3  65                 	db	101	;'e'
  4276  00FBC4  64                 	db	100	;'d'
  4277  00FBC5  72                 	db	114	;'r'
  4278  00FBC6  6F                 	db	111	;'o'
  4279  00FBC7  6F                 	db	111	;'o'
  4280  00FBC8  6D                 	db	109	;'m'
  4281  00FBC9  66                 	db	102	;'f'
  4282  00FBCA  61                 	db	97	;'a'
  4283  00FBCB  6E                 	db	110	;'n'
  4284  00FBCC  3D                 	db	61	;'='
  4285  00FBCD  6F                 	db	111	;'o'
  4286  00FBCE  66                 	db	102	;'f'
  4287  00FBCF  66                 	db	102	;'f'
  4288  00FBD0  00                 	db	0
  4289  00FBD1                     STR_111:
  4290  00FBD1  42                 	db	66	;'B'
  4291  00FBD2  65                 	db	101	;'e'
  4292  00FBD3  64                 	db	100	;'d'
  4293  00FBD4  72                 	db	114	;'r'
  4294  00FBD5  6F                 	db	111	;'o'
  4295  00FBD6  6F                 	db	111	;'o'
  4296  00FBD7  6D                 	db	109	;'m'
  4297  00FBD8  20                 	db	32
  4298  00FBD9  53                 	db	83	;'S'
  4299  00FBDA  4B                 	db	75	;'K'
  4300  00FBDB  52                 	db	82	;'R'
  4301  00FBDC  20                 	db	32
  4302  00FBDD  4F                 	db	79	;'O'
  4303  00FBDE  6E                 	db	110	;'n'
  4304  00FBDF  00                 	db	0
  4305  00FBE0                     STR_104:
  4306  00FBE0  42                 	db	66	;'B'
  4307  00FBE1  65                 	db	101	;'e'
  4308  00FBE2  64                 	db	100	;'d'
  4309  00FBE3  72                 	db	114	;'r'
  4310  00FBE4  6F                 	db	111	;'o'
  4311  00FBE5  6F                 	db	111	;'o'
  4312  00FBE6  6D                 	db	109	;'m'
  4313  00FBE7  20                 	db	32
  4314  00FBE8  46                 	db	70	;'F'
  4315  00FBE9  61                 	db	97	;'a'
  4316  00FBEA  6E                 	db	110	;'n'
  4317  00FBEB  20                 	db	32
  4318  00FBEC  4F                 	db	79	;'O'
  4319  00FBED  6E                 	db	110	;'n'
  4320  00FBEE  00                 	db	0
  4321  00FBEF                     STR_257:
  4322  00FBEF  4A                 	db	74	;'J'
  4323  00FBF0  6F                 	db	111	;'o'
  4324  00FBF1  65                 	db	101	;'e'
  4325  00FBF2  20                 	db	32
  4326  00FBF3  72                 	db	114	;'r'
  4327  00FBF4  6F                 	db	111	;'o'
  4328  00FBF5  6F                 	db	111	;'o'
  4329  00FBF6  6D                 	db	109	;'m'
  4330  00FBF7  20                 	db	32
  4331  00FBF8  6C                 	db	108	;'l'
  4332  00FBF9  74                 	db	116	;'t'
  4333  00FBFA  20                 	db	32
  4334  00FBFB  4F                 	db	79	;'O'
  4335  00FBFC  6E                 	db	110	;'n'
  4336  00FBFD  00                 	db	0
  4337  00FBFE                     STR_184:
  4338  00FBFE  45                 	db	69	;'E'
  4339  00FBFF  52                 	db	82	;'R'
  4340  00FC00  52                 	db	82	;'R'
  4341  00FC01  3A                 	db	58	;':'
  4342  00FC02  20                 	db	32
  4343  00FC03  4E                 	db	78	;'N'
  4344  00FC04  6F                 	db	111	;'o'
  4345  00FC05  20                 	db	32
  4346  00FC06  6E                 	db	110	;'n'
  4347  00FC07  75                 	db	117	;'u'
  4348  00FC08  6D                 	db	109	;'m'
  4349  00FC09  62                 	db	98	;'b'
  4350  00FC0A  65                 	db	101	;'e'
  4351  00FC0B  72                 	db	114	;'r'
  4352  00FC0C  00                 	db	0
  4353  00FC0D                     STR_165:
  4354  00FC0D  45                 	db	69	;'E'
  4355  00FC0E  52                 	db	82	;'R'
  4356  00FC0F  52                 	db	82	;'R'
  4357  00FC10  3A                 	db	58	;':'
  4358  00FC11  20                 	db	32
  4359  00FC12  6E                 	db	110	;'n'
  4360  00FC13  6F                 	db	111	;'o'
  4361  00FC14  20                 	db	32
  4362  00FC15  6E                 	db	110	;'n'
  4363  00FC16  75                 	db	117	;'u'
  4364  00FC17  6D                 	db	109	;'m'
  4365  00FC18  62                 	db	98	;'b'
  4366  00FC19  65                 	db	101	;'e'
  4367  00FC1A  72                 	db	114	;'r'
  4368  00FC1B  00                 	db	0
  4369  00FC1C                     STR_17:
  4370  00FC1C  53                 	db	83	;'S'
  4371  00FC1D  74                 	db	116	;'t'
  4372  00FC1E  61                 	db	97	;'a'
  4373  00FC1F  72                 	db	114	;'r'
  4374  00FC20  74                 	db	116	;'t'
  4375  00FC21  69                 	db	105	;'i'
  4376  00FC22  6E                 	db	110	;'n'
  4377  00FC23  67                 	db	103	;'g'
  4378  00FC24  2E                 	db	46
  4379  00FC25  2E                 	db	46
  4380  00FC26  2E                 	db	46
  4381  00FC27  2E                 	db	46
  4382  00FC28  2E                 	db	46
  4383  00FC29  2E                 	db	46
  4384  00FC2A  00                 	db	0
  4385  00FC2B                     STR_188:
  4386  00FC2B  45                 	db	69	;'E'
  4387  00FC2C  52                 	db	82	;'R'
  4388  00FC2D  52                 	db	82	;'R'
  4389  00FC2E  3A                 	db	58	;':'
  4390  00FC2F  20                 	db	32
  4391  00FC30  43                 	db	67	;'C'
  4392  00FC31  4E                 	db	78	;'N'
  4393  00FC32  53                 	db	83	;'S'
  4394  00FC33  54                 	db	84	;'T'
  4395  00FC34  20                 	db	32
  4396  00FC35  3C                 	db	60	;'<'
  4397  00FC36  20                 	db	32
  4398  00FC37  30                 	db	48	;'0'
  4399  00FC38  00                 	db	0
  4400  00FC39                     STR_169:
  4401  00FC39  45                 	db	69	;'E'
  4402  00FC3A  52                 	db	82	;'R'
  4403  00FC3B  52                 	db	82	;'R'
  4404  00FC3C  3A                 	db	58	;':'
  4405  00FC3D  20                 	db	32
  4406  00FC3E  44                 	db	68	;'D'
  4407  00FC3F  75                 	db	117	;'u'
  4408  00FC40  74                 	db	116	;'t'
  4409  00FC41  79                 	db	121	;'y'
  4410  00FC42  20                 	db	32
  4411  00FC43  3C                 	db	60	;'<'
  4412  00FC44  20                 	db	32
  4413  00FC45  30                 	db	48	;'0'
  4414  00FC46  00                 	db	0
  4415  00FC47                     STR_290:
  4416  00FC47  44                 	db	68	;'D'
  4417  00FC48  65                 	db	101	;'e'
  4418  00FC49  76                 	db	118	;'v'
  4419  00FC4A  69                 	db	105	;'i'
  4420  00FC4B  63                 	db	99	;'c'
  4421  00FC4C  65                 	db	101	;'e'
  4422  00FC4D  20                 	db	32
  4423  00FC4E  4D                 	db	77	;'M'
  4424  00FC4F  65                 	db	101	;'e'
  4425  00FC50  6E                 	db	110	;'n'
  4426  00FC51  75                 	db	117	;'u'
  4427  00FC52  73                 	db	115	;'s'
  4428  00FC53  3A                 	db	58	;':'
  4429  00FC54  00                 	db	0
  4430  00FC55                     STR_313:
  4431  00FC55  65                 	db	101	;'e'
  4432  00FC56  6E                 	db	110	;'n'
  4433  00FC57  74                 	db	116	;'t'
  4434  00FC58  65                 	db	101	;'e'
  4435  00FC59  72                 	db	114	;'r'
  4436  00FC5A  62                 	db	98	;'b'
  4437  00FC5B  61                 	db	97	;'a'
  4438  00FC5C  75                 	db	117	;'u'
  4439  00FC5D  64                 	db	100	;'d'
  4440  00FC5E  72                 	db	114	;'r'
  4441  00FC5F  61                 	db	97	;'a'
  4442  00FC60  74                 	db	116	;'t'
  4443  00FC61  65                 	db	101	;'e'
  4444  00FC62  00                 	db	0
  4445  00FC63                     STR_141:
  4446  00FC63  58                 	db	88	;'X'
  4447  00FC64  4D                 	db	77	;'M'
  4448  00FC65  41                 	db	65	;'A'
  4449  00FC66  53                 	db	83	;'S'
  4450  00FC67  20                 	db	32
  4451  00FC68  57                 	db	87	;'W'
  4452  00FC69  68                 	db	104	;'h'
  4453  00FC6A  69                 	db	105	;'i'
  4454  00FC6B  74                 	db	116	;'t'
  4455  00FC6C  65                 	db	101	;'e'
  4456  00FC6D  20                 	db	32
  4457  00FC6E  4F                 	db	79	;'O'
  4458  00FC6F  6E                 	db	110	;'n'
  4459  00FC70  00                 	db	0
  4460  00FC71                     STR_78:
  4461  00FC71  4C                 	db	76	;'L'
  4462  00FC72  56                 	db	86	;'V'
  4463  00FC73  4E                 	db	78	;'N'
  4464  00FC74  47                 	db	71	;'G'
  4465  00FC75  20                 	db	32
  4466  00FC76  52                 	db	82	;'R'
  4467  00FC77  6D                 	db	109	;'m'
  4468  00FC78  20                 	db	32
  4469  00FC79  4C                 	db	76	;'L'
  4470  00FC7A  74                 	db	116	;'t'
  4471  00FC7B  20                 	db	32
  4472  00FC7C  4F                 	db	79	;'O'
  4473  00FC7D  6E                 	db	110	;'n'
  4474  00FC7E  00                 	db	0
  4475  00FC7F                     STR_105:
  4476  00FC7F  42                 	db	66	;'B'
  4477  00FC80  65                 	db	101	;'e'
  4478  00FC81  64                 	db	100	;'d'
  4479  00FC82  72                 	db	114	;'r'
  4480  00FC83  6F                 	db	111	;'o'
  4481  00FC84  6F                 	db	111	;'o'
  4482  00FC85  6D                 	db	109	;'m'
  4483  00FC86  20                 	db	32
  4484  00FC87  4C                 	db	76	;'L'
  4485  00FC88  74                 	db	116	;'t'
  4486  00FC89  20                 	db	32
  4487  00FC8A  4F                 	db	79	;'O'
  4488  00FC8B  6E                 	db	110	;'n'
  4489  00FC8C  00                 	db	0
  4490  00FC8D                     STR_103:
  4491  00FC8D  62                 	db	98	;'b'
  4492  00FC8E  65                 	db	101	;'e'
  4493  00FC8F  64                 	db	100	;'d'
  4494  00FC90  72                 	db	114	;'r'
  4495  00FC91  6F                 	db	111	;'o'
  4496  00FC92  6F                 	db	111	;'o'
  4497  00FC93  6D                 	db	109	;'m'
  4498  00FC94  66                 	db	102	;'f'
  4499  00FC95  61                 	db	97	;'a'
  4500  00FC96  6E                 	db	110	;'n'
  4501  00FC97  3D                 	db	61	;'='
  4502  00FC98  6F                 	db	111	;'o'
  4503  00FC99  6E                 	db	110	;'n'
  4504  00FC9A  00                 	db	0
  4505  00FC9B                     STR_268:
  4506  00FC9B  4A                 	db	74	;'J'
  4507  00FC9C  6F                 	db	111	;'o'
  4508  00FC9D  65                 	db	101	;'e'
  4509  00FC9E  20                 	db	32
  4510  00FC9F  72                 	db	114	;'r'
  4511  00FCA0  6F                 	db	111	;'o'
  4512  00FCA1  6F                 	db	111	;'o'
  4513  00FCA2  6D                 	db	109	;'m'
  4514  00FCA3  20                 	db	32
  4515  00FCA4  4D                 	db	77	;'M'
  4516  00FCA5  65                 	db	101	;'e'
  4517  00FCA6  6E                 	db	110	;'n'
  4518  00FCA7  75                 	db	117	;'u'
  4519  00FCA8  00                 	db	0
  4520  00FCA9                     STR_91:
  4521  00FCA9  4C                 	db	76	;'L'
  4522  00FCAA  56                 	db	86	;'V'
  4523  00FCAB  4E                 	db	78	;'N'
  4524  00FCAC  47                 	db	71	;'G'
  4525  00FCAD  72                 	db	114	;'r'
  4526  00FCAE  6F                 	db	111	;'o'
  4527  00FCAF  6F                 	db	111	;'o'
  4528  00FCB0  6D                 	db	109	;'m'
  4529  00FCB1  20                 	db	32
  4530  00FCB2  4D                 	db	77	;'M'
  4531  00FCB3  65                 	db	101	;'e'
  4532  00FCB4  6E                 	db	110	;'n'
  4533  00FCB5  75                 	db	117	;'u'
  4534  00FCB6  00                 	db	0
  4535  00FCB7                     STR_16:
  4536  00FCB7  53                 	db	83	;'S'
  4537  00FCB8  74                 	db	116	;'t'
  4538  00FCB9  61                 	db	97	;'a'
  4539  00FCBA  72                 	db	114	;'r'
  4540  00FCBB  74                 	db	116	;'t'
  4541  00FCBC  69                 	db	105	;'i'
  4542  00FCBD  6E                 	db	110	;'n'
  4543  00FCBE  67                 	db	103	;'g'
  4544  00FCBF  2E                 	db	46
  4545  00FCC0  2E                 	db	46
  4546  00FCC1  2E                 	db	46
  4547  00FCC2  2E                 	db	46
  4548  00FCC3  2E                 	db	46
  4549  00FCC4  00                 	db	0
  4550  00FCC5                     STR_9:
  4551  00FCC5  45                 	db	69	;'E'
  4552  00FCC6  72                 	db	114	;'r'
  4553  00FCC7  72                 	db	114	;'r'
  4554  00FCC8  3A                 	db	58	;':'
  4555  00FCC9  20                 	db	32
  4556  00FCCA  42                 	db	66	;'B'
  4557  00FCCB  61                 	db	97	;'a'
  4558  00FCCC  75                 	db	117	;'u'
  4559  00FCCD  64                 	db	100	;'d'
  4560  00FCCE  20                 	db	32
  4561  00FCCF  4D                 	db	77	;'M'
  4562  00FCD0  65                 	db	101	;'e'
  4563  00FCD1  6D                 	db	109	;'m'
  4564  00FCD2  00                 	db	0
  4565  00FCD3                     STR_214:
  4566  00FCD3  69                 	db	105	;'i'
  4567  00FCD4  2E                 	db	46
  4568  00FCD5  65                 	db	101	;'e'
  4569  00FCD6  2E                 	db	46
  4570  00FCD7  20                 	db	32
  4571  00FCD8  41                 	db	65	;'A'
  4572  00FCD9  44                 	db	68	;'D'
  4573  00FCDA  43                 	db	67	;'C'
  4574  00FCDB  20                 	db	32
  4575  00FCDC  30                 	db	48	;'0'
  4576  00FCDD  0D                 	db	13
  4577  00FCDE  0A                 	db	10
  4578  00FCDF  00                 	db	0
  4579  00FCE0                     STR_274:
  4580  00FCE0  4C                 	db	76	;'L'
  4581  00FCE1  69                 	db	105	;'i'
  4582  00FCE2  76                 	db	118	;'v'
  4583  00FCE3  69                 	db	105	;'i'
  4584  00FCE4  6E                 	db	110	;'n'
  4585  00FCE5  67                 	db	103	;'g'
  4586  00FCE6  72                 	db	114	;'r'
  4587  00FCE7  6F                 	db	111	;'o'
  4588  00FCE8  6F                 	db	111	;'o'
  4589  00FCE9  6D                 	db	109	;'m'
  4590  00FCEA  0D                 	db	13
  4591  00FCEB  0A                 	db	10
  4592  00FCEC  00                 	db	0
  4593  00FCED                     STR_239:
  4594  00FCED  52                 	db	82	;'R'
  4595  00FCEE  54                 	db	84	;'T'
  4596  00FCEF  43                 	db	67	;'C'
  4597  00FCF0  20                 	db	32
  4598  00FCF1  57                 	db	87	;'W'
  4599  00FCF2  68                 	db	104	;'h'
  4600  00FCF3  61                 	db	97	;'a'
  4601  00FCF4  74                 	db	116	;'t'
  4602  00FCF5  3F                 	db	63	;'?'
  4603  00FCF6  3F                 	db	63	;'?'
  4604  00FCF7  3F                 	db	63	;'?'
  4605  00FCF8  0A                 	db	10
  4606  00FCF9  00                 	db	0
  4607  00FCFA                     STR_201:
  4608  00FCFA  45                 	db	69	;'E'
  4609  00FCFB  52                 	db	82	;'R'
  4610  00FCFC  52                 	db	82	;'R'
  4611  00FCFD  3A                 	db	58	;':'
  4612  00FCFE  20                 	db	32
  4613  00FCFF  55                 	db	85	;'U'
  4614  00FD00  73                 	db	115	;'s'
  4615  00FD01  65                 	db	101	;'e'
  4616  00FD02  20                 	db	32
  4617  00FD03  31                 	db	49	;'1'
  4618  00FD04  20                 	db	32
  4619  00FD05  3D                 	db	61	;'='
  4620  00FD06  00                 	db	0
  4621  00FD07                     STR_147:
  4622  00FD07  58                 	db	88	;'X'
  4623  00FD08  4D                 	db	77	;'M'
  4624  00FD09  41                 	db	65	;'A'
  4625  00FD0A  53                 	db	83	;'S'
  4626  00FD0B  20                 	db	32
  4627  00FD0C  57                 	db	87	;'W'
  4628  00FD0D  68                 	db	104	;'h'
  4629  00FD0E  61                 	db	97	;'a'
  4630  00FD0F  74                 	db	116	;'t'
  4631  00FD10  3F                 	db	63	;'?'
  4632  00FD11  3F                 	db	63	;'?'
  4633  00FD12  3F                 	db	63	;'?'
  4634  00FD13  00                 	db	0
  4635  00FD14                     STR_209:
  4636  00FD14  43                 	db	67	;'C'
  4637  00FD15  68                 	db	104	;'h'
  4638  00FD16  6E                 	db	110	;'n'
  4639  00FD17  6C                 	db	108	;'l'
  4640  00FD18  20                 	db	32
  4641  00FD19  25                 	db	37
  4642  00FD1A  64                 	db	100	;'d'
  4643  00FD1B  20                 	db	32
  4644  00FD1C  3D                 	db	61	;'='
  4645  00FD1D  20                 	db	32
  4646  00FD1E  25                 	db	37
  4647  00FD1F  64                 	db	100	;'d'
  4648  00FD20  00                 	db	0
  4649  00FD21                     STR_41:
  4650  00FD21  4C                 	db	76	;'L'
  4651  00FD22  45                 	db	69	;'E'
  4652  00FD23  44                 	db	68	;'D'
  4653  00FD24  30                 	db	48	;'0'
  4654  00FD25  20                 	db	32
  4655  00FD26  54                 	db	84	;'T'
  4656  00FD27  6F                 	db	111	;'o'
  4657  00FD28  67                 	db	103	;'g'
  4658  00FD29  67                 	db	103	;'g'
  4659  00FD2A  6C                 	db	108	;'l'
  4660  00FD2B  65                 	db	101	;'e'
  4661  00FD2C  64                 	db	100	;'d'
  4662  00FD2D  00                 	db	0
  4663  00FD2E                     STR_50:
  4664  00FD2E  4C                 	db	76	;'L'
  4665  00FD2F  45                 	db	69	;'E'
  4666  00FD30  44                 	db	68	;'D'
  4667  00FD31  31                 	db	49	;'1'
  4668  00FD32  20                 	db	32
  4669  00FD33  54                 	db	84	;'T'
  4670  00FD34  6F                 	db	111	;'o'
  4671  00FD35  67                 	db	103	;'g'
  4672  00FD36  67                 	db	103	;'g'
  4673  00FD37  6C                 	db	108	;'l'
  4674  00FD38  65                 	db	101	;'e'
  4675  00FD39  64                 	db	100	;'d'
  4676  00FD3A  00                 	db	0
  4677  00FD3B                     STR_310:
  4678  00FD3B  77                 	db	119	;'w'
  4679  00FD3C  69                 	db	105	;'i'
  4680  00FD3D  74                 	db	116	;'t'
  4681  00FD3E  68                 	db	104	;'h'
  4682  00FD3F  73                 	db	115	;'s'
  4683  00FD40  70                 	db	112	;'p'
  4684  00FD41  61                 	db	97	;'a'
  4685  00FD42  63                 	db	99	;'c'
  4686  00FD43  65                 	db	101	;'e'
  4687  00FD44  62                 	db	98	;'b'
  4688  00FD45  69                 	db	105	;'i'
  4689  00FD46  74                 	db	116	;'t'
  4690  00FD47  00                 	db	0
  4691  00FD48                     STR_194:
  4692  00FD48  4C                 	db	76	;'L'
  4693  00FD49  43                 	db	67	;'C'
  4694  00FD4A  44                 	db	68	;'D'
  4695  00FD4B  20                 	db	32
  4696  00FD4C  43                 	db	67	;'C'
  4697  00FD4D  6F                 	db	111	;'o'
  4698  00FD4E  6E                 	db	110	;'n'
  4699  00FD4F  74                 	db	116	;'t'
  4700  00FD50  72                 	db	114	;'r'
  4701  00FD51  61                 	db	97	;'a'
  4702  00FD52  73                 	db	115	;'s'
  4703  00FD53  74                 	db	116	;'t'
  4704  00FD54  00                 	db	0
  4705  00FD55                     STR_125:
  4706  00FD55  42                 	db	66	;'B'
  4707  00FD56  65                 	db	101	;'e'
  4708  00FD57  64                 	db	100	;'d'
  4709  00FD58  72                 	db	114	;'r'
  4710  00FD59  6F                 	db	111	;'o'
  4711  00FD5A  6F                 	db	111	;'o'
  4712  00FD5B  6D                 	db	109	;'m'
  4713  00FD5C  20                 	db	32
  4714  00FD5D  4D                 	db	77	;'M'
  4715  00FD5E  65                 	db	101	;'e'
  4716  00FD5F  6E                 	db	110	;'n'
  4717  00FD60  75                 	db	117	;'u'
  4718  00FD61  00                 	db	0
  4719  00FD62                     STR_15:
  4720  00FD62  53                 	db	83	;'S'
  4721  00FD63  74                 	db	116	;'t'
  4722  00FD64  61                 	db	97	;'a'
  4723  00FD65  72                 	db	114	;'r'
  4724  00FD66  74                 	db	116	;'t'
  4725  00FD67  69                 	db	105	;'i'
  4726  00FD68  6E                 	db	110	;'n'
  4727  00FD69  67                 	db	103	;'g'
  4728  00FD6A  2E                 	db	46
  4729  00FD6B  2E                 	db	46
  4730  00FD6C  2E                 	db	46
  4731  00FD6D  2E                 	db	46
  4732  00FD6E  00                 	db	0
  4733  00FD6F                     STR_272:
  4734  00FD6F  44                 	db	68	;'D'
  4735  00FD70  65                 	db	101	;'e'
  4736  00FD71  76                 	db	118	;'v'
  4737  00FD72  69                 	db	105	;'i'
  4738  00FD73  63                 	db	99	;'c'
  4739  00FD74  65                 	db	101	;'e'
  4740  00FD75  73                 	db	115	;'s'
  4741  00FD76  3A                 	db	58	;':'
  4742  00FD77  0D                 	db	13
  4743  00FD78  0A                 	db	10
  4744  00FD79  0A                 	db	10
  4745  00FD7A  00                 	db	0
  4746  00FD7B                     STR_211:
  4747  00FD7B  43                 	db	67	;'C'
  4748  00FD7C  68                 	db	104	;'h'
  4749  00FD7D  61                 	db	97	;'a'
  4750  00FD7E  6E                 	db	110	;'n'
  4751  00FD7F  6E                 	db	110	;'n'
  4752  00FD80  65                 	db	101	;'e'
  4753  00FD81  6C                 	db	108	;'l'
  4754  00FD82  73                 	db	115	;'s'
  4755  00FD83  3A                 	db	58	;':'
  4756  00FD84  0D                 	db	13
  4757  00FD85  0A                 	db	10
  4758  00FD86  00                 	db	0
  4759  00FD87                     STR_275:
  4760  00FD87  4A                 	db	74	;'J'
  4761  00FD88  6F                 	db	111	;'o'
  4762  00FD89  65                 	db	101	;'e'
  4763  00FD8A  73                 	db	115	;'s'
  4764  00FD8B  20                 	db	32
  4765  00FD8C  72                 	db	114	;'r'
  4766  00FD8D  6F                 	db	111	;'o'
  4767  00FD8E  6F                 	db	111	;'o'
  4768  00FD8F  6D                 	db	109	;'m'
  4769  00FD90  0D                 	db	13
  4770  00FD91  0A                 	db	10
  4771  00FD92  00                 	db	0
  4772  00FD93                     STR_292:
  4773  00FD93  4C                 	db	76	;'L'
  4774  00FD94  69                 	db	105	;'i'
  4775  00FD95  76                 	db	118	;'v'
  4776  00FD96  69                 	db	105	;'i'
  4777  00FD97  6E                 	db	110	;'n'
  4778  00FD98  67                 	db	103	;'g'
  4779  00FD99  72                 	db	114	;'r'
  4780  00FD9A  6F                 	db	111	;'o'
  4781  00FD9B  6F                 	db	111	;'o'
  4782  00FD9C  6D                 	db	109	;'m'
  4783  00FD9D  3F                 	db	63	;'?'
  4784  00FD9E  00                 	db	0
  4785  00FD9F                     STR_309:
  4786  00FD9F  77                 	db	119	;'w'
  4787  00FDA0  69                 	db	105	;'i'
  4788  00FDA1  74                 	db	116	;'t'
  4789  00FDA2  68                 	db	104	;'h'
  4790  00FDA3  6D                 	db	109	;'m'
  4791  00FDA4  61                 	db	97	;'a'
  4792  00FDA5  72                 	db	114	;'r'
  4793  00FDA6  6B                 	db	107	;'k'
  4794  00FDA7  62                 	db	98	;'b'
  4795  00FDA8  69                 	db	105	;'i'
  4796  00FDA9  74                 	db	116	;'t'
  4797  00FDAA  00                 	db	0
  4798  00FDAB                     STR_11:
  4799  00FDAB  53                 	db	83	;'S'
  4800  00FDAC  74                 	db	116	;'t'
  4801  00FDAD  61                 	db	97	;'a'
  4802  00FDAE  72                 	db	114	;'r'
  4803  00FDAF  74                 	db	116	;'t'
  4804  00FDB0  69                 	db	105	;'i'
  4805  00FDB1  6E                 	db	110	;'n'
  4806  00FDB2  67                 	db	103	;'g'
  4807  00FDB3  2E                 	db	46
  4808  00FDB4  2E                 	db	46
  4809  00FDB5  2E                 	db	46
  4810  00FDB6  00                 	db	0
  4811  00FDB7                     STR_61:
  4812  00FDB7  44                 	db	68	;'D'
  4813  00FDB8  65                 	db	101	;'e'
  4814  00FDB9  76                 	db	118	;'v'
  4815  00FDBA  69                 	db	105	;'i'
  4816  00FDBB  63                 	db	99	;'c'
  4817  00FDBC  65                 	db	101	;'e'
  4818  00FDBD  73                 	db	115	;'s'
  4819  00FDBE  3A                 	db	58	;':'
  4820  00FDBF  0D                 	db	13
  4821  00FDC0  0A                 	db	10
  4822  00FDC1  00                 	db	0
  4823  00FDC2                     STR_241:
  4824  00FDC2  41                 	db	65	;'A'
  4825  00FDC3  63                 	db	99	;'c'
  4826  00FDC4  74                 	db	116	;'t'
  4827  00FDC5  69                 	db	105	;'i'
  4828  00FDC6  6F                 	db	111	;'o'
  4829  00FDC7  6E                 	db	110	;'n'
  4830  00FDC8  73                 	db	115	;'s'
  4831  00FDC9  3A                 	db	58	;':'
  4832  00FDCA  0D                 	db	13
  4833  00FDCB  0A                 	db	10
  4834  00FDCC  00                 	db	0
  4835  00FDCD                     STR_277:
  4836  00FDCD  43                 	db	67	;'C'
  4837  00FDCE  6F                 	db	111	;'o'
  4838  00FDCF  6E                 	db	110	;'n'
  4839  00FDD0  74                 	db	116	;'t'
  4840  00FDD1  72                 	db	114	;'r'
  4841  00FDD2  61                 	db	97	;'a'
  4842  00FDD3  73                 	db	115	;'s'
  4843  00FDD4  74                 	db	116	;'t'
  4844  00FDD5  0D                 	db	13
  4845  00FDD6  0A                 	db	10
  4846  00FDD7  00                 	db	0
  4847  00FDD8                     STR_293:
  4848  00FDD8  4A                 	db	74	;'J'
  4849  00FDD9  6F                 	db	111	;'o'
  4850  00FDDA  65                 	db	101	;'e'
  4851  00FDDB  73                 	db	115	;'s'
  4852  00FDDC  20                 	db	32
  4853  00FDDD  52                 	db	82	;'R'
  4854  00FDDE  6F                 	db	111	;'o'
  4855  00FDDF  6F                 	db	111	;'o'
  4856  00FDE0  6D                 	db	109	;'m'
  4857  00FDE1  3F                 	db	63	;'?'
  4858  00FDE2  00                 	db	0
  4859  00FDE3                     STR_304:
  4860  00FDE3  63                 	db	99	;'c'
  4861  00FDE4  68                 	db	104	;'h'
  4862  00FDE5  61                 	db	97	;'a'
  4863  00FDE6  6E                 	db	110	;'n'
  4864  00FDE7  67                 	db	103	;'g'
  4865  00FDE8  65                 	db	101	;'e'
  4866  00FDE9  62                 	db	98	;'b'
  4867  00FDEA  61                 	db	97	;'a'
  4868  00FDEB  75                 	db	117	;'u'
  4869  00FDEC  64                 	db	100	;'d'
  4870  00FDED  00                 	db	0
  4871  00FDEE                     STR_70:
  4872  00FDEE  6C                 	db	108	;'l'
  4873  00FDEF  69                 	db	105	;'i'
  4874  00FDF0  76                 	db	118	;'v'
  4875  00FDF1  69                 	db	105	;'i'
  4876  00FDF2  6E                 	db	110	;'n'
  4877  00FDF3  67                 	db	103	;'g'
  4878  00FDF4  72                 	db	114	;'r'
  4879  00FDF5  6F                 	db	111	;'o'
  4880  00FDF6  6F                 	db	111	;'o'
  4881  00FDF7  6D                 	db	109	;'m'
  4882  00FDF8  00                 	db	0
  4883  00FDF9                     STR_13:
  4884  00FDF9  53                 	db	83	;'S'
  4885  00FDFA  74                 	db	116	;'t'
  4886  00FDFB  61                 	db	97	;'a'
  4887  00FDFC  72                 	db	114	;'r'
  4888  00FDFD  74                 	db	116	;'t'
  4889  00FDFE  69                 	db	105	;'i'
  4890  00FDFF  6E                 	db	110	;'n'
  4891  00FE00  67                 	db	103	;'g'
  4892  00FE01  2E                 	db	46
  4893  00FE02  2E                 	db	46
  4894  00FE03  00                 	db	0
  4895  00FE04                     STR_121:
  4896  00FE04  73                 	db	115	;'s'
  4897  00FE05  68                 	db	104	;'h'
  4898  00FE06  61                 	db	97	;'a'
  4899  00FE07  6B                 	db	107	;'k'
  4900  00FE08  65                 	db	101	;'e'
  4901  00FE09  72                 	db	114	;'r'
  4902  00FE0A  0D                 	db	13
  4903  00FE0B  0A                 	db	10
  4904  00FE0C  0A                 	db	10
  4905  00FE0D  00                 	db	0
  4906  00FE0E                     STR_273:
  4907  00FE0E  42                 	db	66	;'B'
  4908  00FE0F  65                 	db	101	;'e'
  4909  00FE10  64                 	db	100	;'d'
  4910  00FE11  72                 	db	114	;'r'
  4911  00FE12  6F                 	db	111	;'o'
  4912  00FE13  6F                 	db	111	;'o'
  4913  00FE14  6D                 	db	109	;'m'
  4914  00FE15  0D                 	db	13
  4915  00FE16  0A                 	db	10
  4916  00FE17  00                 	db	0
  4917  00FE18                     STR_242:
  4918  00FE18  42                 	db	66	;'B'
  4919  00FE19  61                 	db	97	;'a'
  4920  00FE1A  74                 	db	116	;'t'
  4921  00FE1B  74                 	db	116	;'t'
  4922  00FE1C  65                 	db	101	;'e'
  4923  00FE1D  72                 	db	114	;'r'
  4924  00FE1E  79                 	db	121	;'y'
  4925  00FE1F  0D                 	db	13
  4926  00FE20  0A                 	db	10
  4927  00FE21  00                 	db	0
  4928  00FE22                     STR_179:
  4929  00FE22  52                 	db	82	;'R'
  4930  00FE23  65                 	db	101	;'e'
  4931  00FE24  64                 	db	100	;'d'
  4932  00FE25  20                 	db	32
  4933  00FE26  4C                 	db	76	;'L'
  4934  00FE27  45                 	db	69	;'E'
  4935  00FE28  44                 	db	68	;'D'
  4936  00FE29  3D                 	db	61	;'='
  4937  00FE2A  23                 	db	35
  4938  00FE2B  00                 	db	0
  4939  00FE2C                     STR_196:
  4940  00FE2C  43                 	db	67	;'C'
  4941  00FE2D  6F                 	db	111	;'o'
  4942  00FE2E  6E                 	db	110	;'n'
  4943  00FE2F  74                 	db	116	;'t'
  4944  00FE30  72                 	db	114	;'r'
  4945  00FE31  61                 	db	97	;'a'
  4946  00FE32  73                 	db	115	;'s'
  4947  00FE33  74                 	db	116	;'t'
  4948  00FE34  23                 	db	35
  4949  00FE35  00                 	db	0
  4950  00FE36                     STR_178:
  4951  00FE36  43                 	db	67	;'C'
  4952  00FE37  6F                 	db	111	;'o'
  4953  00FE38  6D                 	db	109	;'m'
  4954  00FE39  6D                 	db	109	;'m'
  4955  00FE3A  61                 	db	97	;'a'
  4956  00FE3B  6E                 	db	110	;'n'
  4957  00FE3C  64                 	db	100	;'d'
  4958  00FE3D  73                 	db	115	;'s'
  4959  00FE3E  3A                 	db	58	;':'
  4960  00FE3F  00                 	db	0
  4961  00FE40                     STR_295:
  4962  00FE40  43                 	db	67	;'C'
  4963  00FE41  6F                 	db	111	;'o'
  4964  00FE42  6E                 	db	110	;'n'
  4965  00FE43  74                 	db	116	;'t'
  4966  00FE44  72                 	db	114	;'r'
  4967  00FE45  61                 	db	97	;'a'
  4968  00FE46  73                 	db	115	;'s'
  4969  00FE47  74                 	db	116	;'t'
  4970  00FE48  3F                 	db	63	;'?'
  4971  00FE49  00                 	db	0
  4972  00FE4A                     STR_300:
  4973  00FE4A  42                 	db	66	;'B'
  4974  00FE4B  41                 	db	65	;'A'
  4975  00FE4C  55                 	db	85	;'U'
  4976  00FE4D  44                 	db	68	;'D'
  4977  00FE4E  20                 	db	32
  4978  00FE4F  3D                 	db	61	;'='
  4979  00FE50  20                 	db	32
  4980  00FE51  25                 	db	37
  4981  00FE52  64                 	db	100	;'d'
  4982  00FE53  00                 	db	0
  4983  00FE54                     STR_132:
  4984  00FE54  63                 	db	99	;'c'
  4985  00FE55  68                 	db	104	;'h'
  4986  00FE56  72                 	db	114	;'r'
  4987  00FE57  69                 	db	105	;'i'
  4988  00FE58  73                 	db	115	;'s'
  4989  00FE59  74                 	db	116	;'t'
  4990  00FE5A  6D                 	db	109	;'m'
  4991  00FE5B  61                 	db	97	;'a'
  4992  00FE5C  73                 	db	115	;'s'
  4993  00FE5D  00                 	db	0
  4994  00FE5E                     STR_154:
  4995  00FE5E  58                 	db	88	;'X'
  4996  00FE5F  4D                 	db	77	;'M'
  4997  00FE60  41                 	db	65	;'A'
  4998  00FE61  53                 	db	83	;'S'
  4999  00FE62  20                 	db	32
  5000  00FE63  4D                 	db	77	;'M'
  5001  00FE64  65                 	db	101	;'e'
  5002  00FE65  6E                 	db	110	;'n'
  5003  00FE66  75                 	db	117	;'u'
  5004  00FE67  00                 	db	0
  5005  00FE68                     STR_284:
  5006  00FE68  48                 	db	72	;'H'
  5007  00FE69  65                 	db	101	;'e'
  5008  00FE6A  6C                 	db	108	;'l'
  5009  00FE6B  70                 	db	112	;'p'
  5010  00FE6C  20                 	db	32
  5011  00FE6D  4D                 	db	77	;'M'
  5012  00FE6E  65                 	db	101	;'e'
  5013  00FE6F  6E                 	db	110	;'n'
  5014  00FE70  75                 	db	117	;'u'
  5015  00FE71  00                 	db	0
  5016  00FE72                     STR_20:
  5017  00FE72  45                 	db	69	;'E'
  5018  00FE73  6E                 	db	110	;'n'
  5019  00FE74  74                 	db	116	;'t'
  5020  00FE75  65                 	db	101	;'e'
  5021  00FE76  72                 	db	114	;'r'
  5022  00FE77  20                 	db	32
  5023  00FE78  27                 	db	39
  5024  00FE79  3F                 	db	63	;'?'
  5025  00FE7A  27                 	db	39
  5026  00FE7B  00                 	db	0
  5027  00FE7C                     STR_12:
  5028  00FE7C  53                 	db	83	;'S'
  5029  00FE7D  74                 	db	116	;'t'
  5030  00FE7E  61                 	db	97	;'a'
  5031  00FE7F  72                 	db	114	;'r'
  5032  00FE80  74                 	db	116	;'t'
  5033  00FE81  69                 	db	105	;'i'
  5034  00FE82  6E                 	db	110	;'n'
  5035  00FE83  67                 	db	103	;'g'
  5036  00FE84  2E                 	db	46
  5037  00FE85  00                 	db	0
  5038  00FE86                     STR_265:
  5039  00FE86  4C                 	db	76	;'L'
  5040  00FE87  69                 	db	105	;'i'
  5041  00FE88  67                 	db	103	;'g'
  5042  00FE89  68                 	db	104	;'h'
  5043  00FE8A  74                 	db	116	;'t'
  5044  00FE8B  0D                 	db	13
  5045  00FE8C  0A                 	db	10
  5046  00FE8D  0A                 	db	10
  5047  00FE8E  00                 	db	0
  5048  00FE8F                     STR_67:
  5049  00FE8F  44                 	db	68	;'D'
  5050  00FE90  65                 	db	101	;'e'
  5051  00FE91  76                 	db	118	;'v'
  5052  00FE92  69                 	db	105	;'i'
  5053  00FE93  63                 	db	99	;'c'
  5054  00FE94  65                 	db	101	;'e'
  5055  00FE95  73                 	db	115	;'s'
  5056  00FE96  3A                 	db	58	;':'
  5057  00FE97  00                 	db	0
  5058  00FE98                     STR_291:
  5059  00FE98  42                 	db	66	;'B'
  5060  00FE99  65                 	db	101	;'e'
  5061  00FE9A  64                 	db	100	;'d'
  5062  00FE9B  72                 	db	114	;'r'
  5063  00FE9C  6F                 	db	111	;'o'
  5064  00FE9D  6F                 	db	111	;'o'
  5065  00FE9E  6D                 	db	109	;'m'
  5066  00FE9F  3F                 	db	63	;'?'
  5067  00FEA0  00                 	db	0
  5068  00FEA1                     STR_47:
  5069  00FEA1  4C                 	db	76	;'L'
  5070  00FEA2  45                 	db	69	;'E'
  5071  00FEA3  44                 	db	68	;'D'
  5072  00FEA4  30                 	db	48	;'0'
  5073  00FEA5  20                 	db	32
  5074  00FEA6  4F                 	db	79	;'O'
  5075  00FEA7  66                 	db	102	;'f'
  5076  00FEA8  66                 	db	102	;'f'
  5077  00FEA9  00                 	db	0
  5078  00FEAA                     STR_56:
  5079  00FEAA  4C                 	db	76	;'L'
  5080  00FEAB  45                 	db	69	;'E'
  5081  00FEAC  44                 	db	68	;'D'
  5082  00FEAD  31                 	db	49	;'1'
  5083  00FEAE  20                 	db	32
  5084  00FEAF  4F                 	db	79	;'O'
  5085  00FEB0  66                 	db	102	;'f'
  5086  00FEB1  66                 	db	102	;'f'
  5087  00FEB2  00                 	db	0
  5088  00FEB3                     STR_46:
  5089  00FEB3  6C                 	db	108	;'l'
  5090  00FEB4  65                 	db	101	;'e'
  5091  00FEB5  64                 	db	100	;'d'
  5092  00FEB6  30                 	db	48	;'0'
  5093  00FEB7  3D                 	db	61	;'='
  5094  00FEB8  6F                 	db	111	;'o'
  5095  00FEB9  66                 	db	102	;'f'
  5096  00FEBA  66                 	db	102	;'f'
  5097  00FEBB  00                 	db	0
  5098  00FEBC                     STR_55:
  5099  00FEBC  6C                 	db	108	;'l'
  5100  00FEBD  65                 	db	101	;'e'
  5101  00FEBE  64                 	db	100	;'d'
  5102  00FEBF  31                 	db	49	;'1'
  5103  00FEC0  3D                 	db	61	;'='
  5104  00FEC1  6F                 	db	111	;'o'
  5105  00FEC2  66                 	db	102	;'f'
  5106  00FEC3  66                 	db	102	;'f'
  5107  00FEC4  00                 	db	0
  5108  00FEC5                     STR_180:
  5109  00FEC5  63                 	db	99	;'c'
  5110  00FEC6  6F                 	db	111	;'o'
  5111  00FEC7  6E                 	db	110	;'n'
  5112  00FEC8  74                 	db	116	;'t'
  5113  00FEC9  72                 	db	114	;'r'
  5114  00FECA  61                 	db	97	;'a'
  5115  00FECB  73                 	db	115	;'s'
  5116  00FECC  74                 	db	116	;'t'
  5117  00FECD  00                 	db	0
  5118  00FECE                     STR_215:
  5119  00FECE  41                 	db	65	;'A'
  5120  00FECF  44                 	db	68	;'D'
  5121  00FED0  43                 	db	67	;'C'
  5122  00FED1  20                 	db	32
  5123  00FED2  4D                 	db	77	;'M'
  5124  00FED3  65                 	db	101	;'e'
  5125  00FED4  6E                 	db	110	;'n'
  5126  00FED5  75                 	db	117	;'u'
  5127  00FED6  00                 	db	0
  5128  00FED7                     STR_248:
  5129  00FED7  52                 	db	82	;'R'
  5130  00FED8  54                 	db	84	;'T'
  5131  00FED9  43                 	db	67	;'C'
  5132  00FEDA  20                 	db	32
  5133  00FEDB  4D                 	db	77	;'M'
  5134  00FEDC  65                 	db	101	;'e'
  5135  00FEDD  6E                 	db	110	;'n'
  5136  00FEDE  75                 	db	117	;'u'
  5137  00FEDF  00                 	db	0
  5138  00FEE0                     STR_66:
  5139  00FEE0  4C                 	db	76	;'L'
  5140  00FEE1  45                 	db	69	;'E'
  5141  00FEE2  44                 	db	68	;'D'
  5142  00FEE3  20                 	db	32
  5143  00FEE4  4D                 	db	77	;'M'
  5144  00FEE5  65                 	db	101	;'e'
  5145  00FEE6  6E                 	db	110	;'n'
  5146  00FEE7  75                 	db	117	;'u'
  5147  00FEE8  00                 	db	0
  5148  00FEE9                     STR_10:
  5149  00FEE9  53                 	db	83	;'S'
  5150  00FEEA  74                 	db	116	;'t'
  5151  00FEEB  61                 	db	97	;'a'
  5152  00FEEC  72                 	db	114	;'r'
  5153  00FEED  74                 	db	116	;'t'
  5154  00FEEE  69                 	db	105	;'i'
  5155  00FEEF  6E                 	db	110	;'n'
  5156  00FEF0  67                 	db	103	;'g'
  5157  00FEF1  00                 	db	0
  5158  00FEF2                     STR_63:
  5159  00FEF2  4C                 	db	76	;'L'
  5160  00FEF3  45                 	db	69	;'E'
  5161  00FEF4  44                 	db	68	;'D'
  5162  00FEF5  31                 	db	49	;'1'
  5163  00FEF6  0D                 	db	13
  5164  00FEF7  0A                 	db	10
  5165  00FEF8  0A                 	db	10
  5166  00FEF9  00                 	db	0
  5167  00FEFA                     STR_280:
  5168  00FEFA  42                 	db	66	;'B'
  5169  00FEFB  61                 	db	97	;'a'
  5170  00FEFC  75                 	db	117	;'u'
  5171  00FEFD  64                 	db	100	;'d'
  5172  00FEFE  0D                 	db	13
  5173  00FEFF  0A                 	db	10
  5174  00FF00  0A                 	db	10
  5175  00FF01  00                 	db	0
  5176  00FF02                     STR_86:
  5177  00FF02  6C                 	db	108	;'l'
  5178  00FF03  69                 	db	105	;'i'
  5179  00FF04  67                 	db	103	;'g'
  5180  00FF05  68                 	db	104	;'h'
  5181  00FF06  74                 	db	116	;'t'
  5182  00FF07  0D                 	db	13
  5183  00FF08  0A                 	db	10
  5184  00FF09  00                 	db	0
  5185  00FF0A                     STR_303:
  5186  00FF0A  73                 	db	115	;'s'
  5187  00FF0B  65                 	db	101	;'e'
  5188  00FF0C  74                 	db	116	;'t'
  5189  00FF0D  62                 	db	98	;'b'
  5190  00FF0E  61                 	db	97	;'a'
  5191  00FF0F  75                 	db	117	;'u'
  5192  00FF10  64                 	db	100	;'d'
  5193  00FF11  00                 	db	0
  5194  00FF12                     STR_95:
  5195  00FF12  62                 	db	98	;'b'
  5196  00FF13  65                 	db	101	;'e'
  5197  00FF14  64                 	db	100	;'d'
  5198  00FF15  72                 	db	114	;'r'
  5199  00FF16  6F                 	db	111	;'o'
  5200  00FF17  6F                 	db	111	;'o'
  5201  00FF18  6D                 	db	109	;'m'
  5202  00FF19  00                 	db	0
  5203  00FF1A                     STR_44:
  5204  00FF1A  4C                 	db	76	;'L'
  5205  00FF1B  45                 	db	69	;'E'
  5206  00FF1C  44                 	db	68	;'D'
  5207  00FF1D  30                 	db	48	;'0'
  5208  00FF1E  20                 	db	32
  5209  00FF1F  4F                 	db	79	;'O'
  5210  00FF20  6E                 	db	110	;'n'
  5211  00FF21  00                 	db	0
  5212  00FF22                     STR_53:
  5213  00FF22  4C                 	db	76	;'L'
  5214  00FF23  45                 	db	69	;'E'
  5215  00FF24  44                 	db	68	;'D'
  5216  00FF25  31                 	db	49	;'1'
  5217  00FF26  20                 	db	32
  5218  00FF27  4F                 	db	79	;'O'
  5219  00FF28  6E                 	db	110	;'n'
  5220  00FF29  00                 	db	0
  5221  00FF2A                     STR_43:
  5222  00FF2A  6C                 	db	108	;'l'
  5223  00FF2B  65                 	db	101	;'e'
  5224  00FF2C  64                 	db	100	;'d'
  5225  00FF2D  30                 	db	48	;'0'
  5226  00FF2E  3D                 	db	61	;'='
  5227  00FF2F  6F                 	db	111	;'o'
  5228  00FF30  6E                 	db	110	;'n'
  5229  00FF31  00                 	db	0
  5230  00FF32                     STR_52:
  5231  00FF32  6C                 	db	108	;'l'
  5232  00FF33  65                 	db	101	;'e'
  5233  00FF34  64                 	db	100	;'d'
  5234  00FF35  31                 	db	49	;'1'
  5235  00FF36  3D                 	db	61	;'='
  5236  00FF37  6F                 	db	111	;'o'
  5237  00FF38  6E                 	db	110	;'n'
  5238  00FF39  00                 	db	0
  5239  00FF3A                     STR_302:
  5240  00FF3A  72                 	db	114	;'r'
  5241  00FF3B  65                 	db	101	;'e'
  5242  00FF3C  73                 	db	115	;'s'
  5243  00FF3D  65                 	db	101	;'e'
  5244  00FF3E  74                 	db	116	;'t'
  5245  00FF3F  74                 	db	116	;'t'
  5246  00FF40  6F                 	db	111	;'o'
  5247  00FF41  00                 	db	0
  5248  00FF42                     STR_250:
  5249  00FF42  42                 	db	66	;'B'
  5250  00FF43  61                 	db	97	;'a'
  5251  00FF44  74                 	db	116	;'t'
  5252  00FF45  74                 	db	116	;'t'
  5253  00FF46  65                 	db	101	;'e'
  5254  00FF47  72                 	db	114	;'r'
  5255  00FF48  79                 	db	121	;'y'
  5256  00FF49  00                 	db	0
  5257  00FF4A                     STR_220:
  5258  00FF4A  62                 	db	98	;'b'
  5259  00FF4B  61                 	db	97	;'a'
  5260  00FF4C  74                 	db	116	;'t'
  5261  00FF4D  74                 	db	116	;'t'
  5262  00FF4E  65                 	db	101	;'e'
  5263  00FF4F  72                 	db	114	;'r'
  5264  00FF50  79                 	db	121	;'y'
  5265  00FF51  00                 	db	0
  5266  00FF52                     STR_87:
  5267  00FF52  66                 	db	102	;'f'
  5268  00FF53  61                 	db	97	;'a'
  5269  00FF54  6E                 	db	110	;'n'
  5270  00FF55  0D                 	db	13
  5271  00FF56  0A                 	db	10
  5272  00FF57  0A                 	db	10
  5273  00FF58  00                 	db	0
  5274  00FF59                     STR_244:
  5275  00FF59  53                 	db	83	;'S'
  5276  00FF5A  65                 	db	101	;'e'
  5277  00FF5B  74                 	db	116	;'t'
  5278  00FF5C  0D                 	db	13
  5279  00FF5D  0A                 	db	10
  5280  00FF5E  0A                 	db	10
  5281  00FF5F  00                 	db	0
  5282  00FF60                     STR_62:
  5283  00FF60  4C                 	db	76	;'L'
  5284  00FF61  45                 	db	69	;'E'
  5285  00FF62  44                 	db	68	;'D'
  5286  00FF63  30                 	db	48	;'0'
  5287  00FF64  0D                 	db	13
  5288  00FF65  0A                 	db	10
  5289  00FF66  00                 	db	0
  5290  00FF67                     STR_243:
  5291  00FF67  52                 	db	82	;'R'
  5292  00FF68  65                 	db	101	;'e'
  5293  00FF69  61                 	db	97	;'a'
  5294  00FF6A  64                 	db	100	;'d'
  5295  00FF6B  0D                 	db	13
  5296  00FF6C  0A                 	db	10
  5297  00FF6D  00                 	db	0
  5298  00FF6E                     STR_160:
  5299  00FF6E  72                 	db	114	;'r'
  5300  00FF6F  65                 	db	101	;'e'
  5301  00FF70  64                 	db	100	;'d'
  5302  00FF71  6C                 	db	108	;'l'
  5303  00FF72  65                 	db	101	;'e'
  5304  00FF73  64                 	db	100	;'d'
  5305  00FF74  00                 	db	0
  5306  00FF75                     STR_129:
  5307  00FF75  53                 	db	83	;'S'
  5308  00FF76  68                 	db	104	;'h'
  5309  00FF77  61                 	db	97	;'a'
  5310  00FF78  6B                 	db	107	;'k'
  5311  00FF79  65                 	db	101	;'e'
  5312  00FF7A  72                 	db	114	;'r'
  5313  00FF7B  00                 	db	0
  5314  00FF7C                     STR_312:
  5315  00FF7C  62                 	db	98	;'b'
  5316  00FF7D  61                 	db	97	;'a'
  5317  00FF7E  75                 	db	117	;'u'
  5318  00FF7F  64                 	db	100	;'d'
  5319  00FF80  69                 	db	105	;'i'
  5320  00FF81  73                 	db	115	;'s'
  5321  00FF82  00                 	db	0
  5322  00FF83                     STR_278:
  5323  00FF83  41                 	db	65	;'A'
  5324  00FF84  44                 	db	68	;'D'
  5325  00FF85  43                 	db	67	;'C'
  5326  00FF86  0D                 	db	13
  5327  00FF87  0A                 	db	10
  5328  00FF88  00                 	db	0
  5329  00FF89                     STR_120:
  5330  00FF89  66                 	db	102	;'f'
  5331  00FF8A  61                 	db	97	;'a'
  5332  00FF8B  6E                 	db	110	;'n'
  5333  00FF8C  0D                 	db	13
  5334  00FF8D  0A                 	db	10
  5335  00FF8E  00                 	db	0
  5336  00FF8F                     STR_298:
  5337  00FF8F  42                 	db	66	;'B'
  5338  00FF90  61                 	db	97	;'a'
  5339  00FF91  75                 	db	117	;'u'
  5340  00FF92  64                 	db	100	;'d'
  5341  00FF93  3F                 	db	63	;'?'
  5342  00FF94  00                 	db	0
  5343  00FF95                     STR_299:
  5344  00FF95  62                 	db	98	;'b'
  5345  00FF96  61                 	db	97	;'a'
  5346  00FF97  75                 	db	117	;'u'
  5347  00FF98  64                 	db	100	;'d'
  5348  00FF99  3F                 	db	63	;'?'
  5349  00FF9A  00                 	db	0
  5350  00FF9B                     STR_131:
  5351  00FF9B  77                 	db	119	;'w'
  5352  00FF9C  68                 	db	104	;'h'
  5353  00FF9D  69                 	db	105	;'i'
  5354  00FF9E  74                 	db	116	;'t'
  5355  00FF9F  65                 	db	101	;'e'
  5356  00FFA0  00                 	db	0
  5357  00FFA1                     STR_130:
  5358  00FFA1  63                 	db	99	;'c'
  5359  00FFA2  6F                 	db	111	;'o'
  5360  00FFA3  6C                 	db	108	;'l'
  5361  00FFA4  6F                 	db	111	;'o'
  5362  00FFA5  72                 	db	114	;'r'
  5363  00FFA6  00                 	db	0
  5364  00FFA7                     STR_93:
  5365  00FFA7  4C                 	db	76	;'L'
  5366  00FFA8  69                 	db	105	;'i'
  5367  00FFA9  67                 	db	103	;'g'
  5368  00FFAA  68                 	db	104	;'h'
  5369  00FFAB  74                 	db	116	;'t'
  5370  00FFAC  00                 	db	0
  5371  00FFAD                     STR_97:
  5372  00FFAD  6C                 	db	108	;'l'
  5373  00FFAE  69                 	db	105	;'i'
  5374  00FFAF  67                 	db	103	;'g'
  5375  00FFB0  68                 	db	104	;'h'
  5376  00FFB1  74                 	db	116	;'t'
  5377  00FFB2  00                 	db	0
  5378  00FFB3                     STR_212:
  5379  00FFB3  30                 	db	48	;'0'
  5380  00FFB4  0D                 	db	13
  5381  00FFB5  0A                 	db	10
  5382  00FFB6  0A                 	db	10
  5383  00FFB7  00                 	db	0
  5384  00FFB8                     STR_68:
  5385  00FFB8  4C                 	db	76	;'L'
  5386  00FFB9  45                 	db	69	;'E'
  5387  00FFBA  44                 	db	68	;'D'
  5388  00FFBB  30                 	db	48	;'0'
  5389  00FFBC  00                 	db	0
  5390  00FFBD                     STR_40:
  5391  00FFBD  6C                 	db	108	;'l'
  5392  00FFBE  65                 	db	101	;'e'
  5393  00FFBF  64                 	db	100	;'d'
  5394  00FFC0  30                 	db	48	;'0'
  5395  00FFC1  00                 	db	0
  5396  00FFC2                     STR_69:
  5397  00FFC2  4C                 	db	76	;'L'
  5398  00FFC3  45                 	db	69	;'E'
  5399  00FFC4  44                 	db	68	;'D'
  5400  00FFC5  31                 	db	49	;'1'
  5401  00FFC6  00                 	db	0
  5402  00FFC7                     STR_49:
  5403  00FFC7  6C                 	db	108	;'l'
  5404  00FFC8  65                 	db	101	;'e'
  5405  00FFC9  64                 	db	100	;'d'
  5406  00FFCA  31                 	db	49	;'1'
  5407  00FFCB  00                 	db	0
  5408  00FFCC                     STR_296:
  5409  00FFCC  41                 	db	65	;'A'
  5410  00FFCD  44                 	db	68	;'D'
  5411  00FFCE  43                 	db	67	;'C'
  5412  00FFCF  3F                 	db	63	;'?'
  5413  00FFD0  00                 	db	0
  5414  00FFD1                     STR_297:
  5415  00FFD1  52                 	db	82	;'R'
  5416  00FFD2  54                 	db	84	;'T'
  5417  00FFD3  43                 	db	67	;'C'
  5418  00FFD4  3F                 	db	63	;'?'
  5419  00FFD5  00                 	db	0
  5420  00FFD6                     STR_251:
  5421  00FFD6  52                 	db	82	;'R'
  5422  00FFD7  65                 	db	101	;'e'
  5423  00FFD8  61                 	db	97	;'a'
  5424  00FFD9  64                 	db	100	;'d'
  5425  00FFDA  00                 	db	0
  5426  00FFDB                     STR_223:
  5427  00FFDB  72                 	db	114	;'r'
  5428  00FFDC  65                 	db	101	;'e'
  5429  00FFDD  61                 	db	97	;'a'
  5430  00FFDE  64                 	db	100	;'d'
  5431  00FFDF  00                 	db	0
  5432  00FFE0                     STR_197:
  5433  00FFE0  61                 	db	97	;'a'
  5434  00FFE1  64                 	db	100	;'d'
  5435  00FFE2  63                 	db	99	;'c'
  5436  00FFE3  00                 	db	0
  5437  00FFE4                     STR_218:
  5438  00FFE4  72                 	db	114	;'r'
  5439  00FFE5  74                 	db	116	;'t'
  5440  00FFE6  63                 	db	99	;'c'
  5441  00FFE7  00                 	db	0
  5442  00FFE8                     STR_253:
  5443  00FFE8  6A                 	db	106	;'j'
  5444  00FFE9  6F                 	db	111	;'o'
  5445  00FFEA  65                 	db	101	;'e'
  5446  00FFEB  00                 	db	0
  5447  00FFEC                     STR_94:
  5448  00FFEC  46                 	db	70	;'F'
  5449  00FFED  61                 	db	97	;'a'
  5450  00FFEE  6E                 	db	110	;'n'
  5451  00FFEF  00                 	db	0
  5452  00FFF0                     STR_98:
  5453  00FFF0  66                 	db	102	;'f'
  5454  00FFF1  61                 	db	97	;'a'
  5455  00FFF2  6E                 	db	110	;'n'
  5456  00FFF3  00                 	db	0
  5457  00FFF4                     STR_252:
  5458  00FFF4  53                 	db	83	;'S'
  5459  00FFF5  65                 	db	101	;'e'
  5460  00FFF6  74                 	db	116	;'t'
  5461  00FFF7  00                 	db	0
  5462  00FFF8                     STR_230:
  5463  00FFF8  73                 	db	115	;'s'
  5464  00FFF9  65                 	db	101	;'e'
  5465  00FFFA  74                 	db	116	;'t'
  5466  00FFFB  00                 	db	0
  5467  00FFFC                     STR_1:
  5468  00FFFC  0D                 	db	13
  5469  00FFFD  00                 	db	0
  5470  0000                     
  5471                           ; #config settings
  5472  00FFFE  00                 	db	0	; dummy byte at the end
  5473  0000                     
  5474                           	psect	cinit
  5475  01758A                     __pcinit:
  5476                           	opt stack 0
  5477  01758A                     start_initialization:
  5478                           	opt stack 0
  5479  01758A                     __initialization:
  5480                           	opt stack 0
  5481                           
  5482                           ; Clear objects allocated to BANK5 (100 bytes)
  5483  01758A  EE05  F000         	lfsr	0,__pbssBANK5
  5484  01758E  0E64               	movlw	100
  5485  017590                     clear_0:
  5486  017590  6AEE               	clrf	postinc0,c
  5487  017592  06E8               	decf	wreg,f,c
  5488  017594  E1FD               	bnz	clear_0
  5489                           
  5490                           ; Clear objects allocated to BANK4 (244 bytes)
  5491  017596  EE04  F000         	lfsr	0,__pbssBANK4
  5492  01759A  0EF4               	movlw	244
  5493  01759C                     clear_1:
  5494  01759C  6AEE               	clrf	postinc0,c
  5495  01759E  06E8               	decf	wreg,f,c
  5496  0175A0  E1FD               	bnz	clear_1
  5497                           
  5498                           ; Clear objects allocated to BANK3 (148 bytes)
  5499  0175A2  EE03  F000         	lfsr	0,__pbssBANK3
  5500  0175A6  0E94               	movlw	148
  5501  0175A8                     clear_2:
  5502  0175A8  6AEE               	clrf	postinc0,c
  5503  0175AA  06E8               	decf	wreg,f,c
  5504  0175AC  E1FD               	bnz	clear_2
  5505                           
  5506                           ; Clear objects allocated to BANK2 (16 bytes)
  5507  0175AE  EE02  F067         	lfsr	0,__pbssBANK2
  5508  0175B2  0E10               	movlw	16
  5509  0175B4                     clear_3:
  5510  0175B4  6AEE               	clrf	postinc0,c
  5511  0175B6  06E8               	decf	wreg,f,c
  5512  0175B8  E1FD               	bnz	clear_3
  5513                           
  5514                           ; Clear objects allocated to BANK1 (102 bytes)
  5515  0175BA  EE01  F000         	lfsr	0,__pbssBANK1
  5516  0175BE  0E66               	movlw	102
  5517  0175C0                     clear_4:
  5518  0175C0  6AEE               	clrf	postinc0,c
  5519  0175C2  06E8               	decf	wreg,f,c
  5520  0175C4  E1FD               	bnz	clear_4
  5521                           
  5522                           ; Clear objects allocated to BANK0 (11 bytes)
  5523  0175C6  EE00  F0EE         	lfsr	0,__pbssBANK0
  5524  0175CA  0E0B               	movlw	11
  5525  0175CC                     clear_5:
  5526  0175CC  6AEE               	clrf	postinc0,c
  5527  0175CE  06E8               	decf	wreg,f,c
  5528  0175D0  E1FD               	bnz	clear_5
  5529                           
  5530                           ; Clear objects allocated to COMRAM (17 bytes)
  5531  0175D2  EE00  F04F         	lfsr	0,__pbssCOMRAM
  5532  0175D6  0E11               	movlw	17
  5533  0175D8                     clear_6:
  5534  0175D8  6AEE               	clrf	postinc0,c
  5535  0175DA  06E8               	decf	wreg,f,c
  5536  0175DC  E1FD               	bnz	clear_6
  5537                           
  5538                           ; Initialize objects allocated to BANK3 (20 bytes)
  5539                           ; load TBLPTR registers with __pidataBANK3
  5540  0175DE  0E94               	movlw	low __pidataBANK3
  5541  0175E0  6EF6               	movwf	tblptrl,c
  5542  0175E2  0E10               	movlw	high __pidataBANK3
  5543  0175E4  6EF7               	movwf	tblptrh,c
  5544  0175E6  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  5545  0175E8  6EF8               	movwf	tblptru,c
  5546  0175EA  EE03  F094         	lfsr	0,__pdataBANK3
  5547  0175EE  EE10 F014          	lfsr	1,20
  5548  0175F2                     copy_data0:
  5549  0175F2  0009               	tblrd		*+
  5550  0175F4  CFF5 FFEE          	movff	tablat,postinc0
  5551  0175F8  50E5               	movf	postdec1,w,c
  5552  0175FA  50E1               	movf	fsr1l,w,c
  5553  0175FC  E1FA               	bnz	copy_data0
  5554                           
  5555                           ; Initialize objects allocated to BANK1 (6 bytes)
  5556                           ; load TBLPTR registers with __pidataBANK1
  5557  0175FE  0E60               	movlw	low __pidataBANK1
  5558  017600  6EF6               	movwf	tblptrl,c
  5559  017602  0E11               	movlw	high __pidataBANK1
  5560  017604  6EF7               	movwf	tblptrh,c
  5561  017606  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  5562  017608  6EF8               	movwf	tblptru,c
  5563  01760A  EE01  F0C7         	lfsr	0,__pdataBANK1
  5564  01760E  EE10 F006          	lfsr	1,6
  5565  017612                     copy_data1:
  5566  017612  0009               	tblrd		*+
  5567  017614  CFF5 FFEE          	movff	tablat,postinc0
  5568  017618  50E5               	movf	postdec1,w,c
  5569  01761A  50E1               	movf	fsr1l,w,c
  5570  01761C  E1FA               	bnz	copy_data1
  5571  01761E                     end_of_initialization:
  5572                           	opt stack 0
  5573  01761E                     __end_of__initialization:
  5574                           	opt stack 0
  5575  01761E  0100               	movlb	0
  5576  017620  EFD6  F099         	goto	_main	;jump to C main() function
  5577                           tblptru	equ	0xFF8
  5578                           tblptrh	equ	0xFF7
  5579                           tblptrl	equ	0xFF6
  5580                           tablat	equ	0xFF5
  5581                           postinc0	equ	0xFEE
  5582                           wreg	equ	0xFE8
  5583                           postdec1	equ	0xFE5
  5584                           fsr1l	equ	0xFE1
  5585                           
  5586                           	psect	bssCOMRAM
  5587  00004F                     __pbssCOMRAM:
  5588                           	opt stack 0
  5589  00004F                     _IRfault:
  5590                           	opt stack 0
  5591  00004F                     	ds	1
  5592  000050                     _Scroll_6:
  5593                           	opt stack 0
  5594  000050                     	ds	16
  5595                           tblptru	equ	0xFF8
  5596                           tblptrh	equ	0xFF7
  5597                           tblptrl	equ	0xFF6
  5598                           tablat	equ	0xFF5
  5599                           postinc0	equ	0xFEE
  5600                           wreg	equ	0xFE8
  5601                           postdec1	equ	0xFE5
  5602                           fsr1l	equ	0xFE1
  5603                           
  5604                           	psect	bssBANK0
  5605  0000EE                     __pbssBANK0:
  5606                           	opt stack 0
  5607  0000EE                     _IRrawCount:
  5608                           	opt stack 0
  5609  0000EE                     	ds	2
  5610  0000F0                     _IRpinOLD:
  5611                           	opt stack 0
  5612  0000F0                     	ds	1
  5613  0000F1                     _IRrawCodeNum:
  5614                           	opt stack 0
  5615  0000F1                     	ds	1
  5616  0000F2                     _TX_OLD:
  5617                           	opt stack 0
  5618  0000F2                     	ds	1
  5619  0000F3                     _bufferCount:
  5620                           	opt stack 0
  5621  0000F3                     	ds	1
  5622  0000F4                     _IR_NEC:
  5623                           	opt stack 0
  5624  0000F4                     	ds	4
  5625  0000F8                     _IR_New_Code:
  5626                           	opt stack 0
  5627  0000F8                     	ds	1
  5628                           tblptru	equ	0xFF8
  5629                           tblptrh	equ	0xFF7
  5630                           tblptrl	equ	0xFF6
  5631                           tablat	equ	0xFF5
  5632                           postinc0	equ	0xFEE
  5633                           wreg	equ	0xFE8
  5634                           postdec1	equ	0xFE5
  5635                           fsr1l	equ	0xFE1
  5636                           
  5637                           	psect	bssBANK1
  5638  000100                     __pbssBANK1:
  5639                           	opt stack 0
  5640  000100                     _Global:
  5641                           	opt stack 0
  5642  000100                     	ds	9
  5643  000109                     _NowTime:
  5644                           	opt stack 0
  5645  000109                     	ds	9
  5646  000112                     _LCDwait:
  5647                           	opt stack 0
  5648  000112                     	ds	1
  5649  000113                     _ScrollDisplayPosition:
  5650                           	opt stack 0
  5651  000113                     	ds	1
  5652  000114                     _ScrollFIFOCount:
  5653                           	opt stack 0
  5654  000114                     	ds	1
  5655  000115                     _USART_Status:
  5656                           	opt stack 0
  5657  000115                     	ds	1
  5658  000116                     _Scroll_1:
  5659                           	opt stack 0
  5660  000116                     	ds	16
  5661  000126                     _Scroll_2:
  5662                           	opt stack 0
  5663  000126                     	ds	16
  5664  000136                     _Scroll_3:
  5665                           	opt stack 0
  5666  000136                     	ds	16
  5667  000146                     _Scroll_4:
  5668                           	opt stack 0
  5669  000146                     	ds	16
  5670  000156                     _Scroll_5:
  5671                           	opt stack 0
  5672  000156                     	ds	16
  5673                           tblptru	equ	0xFF8
  5674                           tblptrh	equ	0xFF7
  5675                           tblptrl	equ	0xFF6
  5676                           tablat	equ	0xFF5
  5677                           postinc0	equ	0xFEE
  5678                           wreg	equ	0xFE8
  5679                           postdec1	equ	0xFE5
  5680                           fsr1l	equ	0xFE1
  5681                           
  5682                           	psect	dataBANK1
  5683  0001C7                     __pdataBANK1:
  5684                           	opt stack 0
  5685  0001C7                     _LCDclearCount:
  5686                           	opt stack 0
  5687  0001C7                     	ds	4
  5688  0001CB                     _BlueLEDcount:
  5689                           	opt stack 0
  5690  0001CB                     	ds	2
  5691                           tblptru	equ	0xFF8
  5692                           tblptrh	equ	0xFF7
  5693                           tblptrl	equ	0xFF6
  5694                           tablat	equ	0xFF5
  5695                           postinc0	equ	0xFEE
  5696                           wreg	equ	0xFE8
  5697                           postdec1	equ	0xFE5
  5698                           fsr1l	equ	0xFE1
  5699                           
  5700                           	psect	bssBANK2
  5701  000267                     __pbssBANK2:
  5702                           	opt stack 0
  5703  000267                     _Scroll_7:
  5704                           	opt stack 0
  5705  000267                     	ds	16
  5706                           tblptru	equ	0xFF8
  5707                           tblptrh	equ	0xFF7
  5708                           tblptrl	equ	0xFF6
  5709                           tablat	equ	0xFF5
  5710                           postinc0	equ	0xFEE
  5711                           wreg	equ	0xFE8
  5712                           postdec1	equ	0xFE5
  5713                           fsr1l	equ	0xFE1
  5714                           
  5715                           	psect	bssBANK3
  5716  000300                     __pbssBANK3:
  5717                           	opt stack 0
  5718  000300                     _Rxdata:
  5719                           	opt stack 0
  5720  000300                     	ds	100
  5721  000364                     _Scroll_10:
  5722                           	opt stack 0
  5723  000364                     	ds	16
  5724  000374                     _Scroll_8:
  5725                           	opt stack 0
  5726  000374                     	ds	16
  5727  000384                     _Scroll_9:
  5728                           	opt stack 0
  5729  000384                     	ds	16
  5730                           tblptru	equ	0xFF8
  5731                           tblptrh	equ	0xFF7
  5732                           tblptrl	equ	0xFF6
  5733                           tablat	equ	0xFF5
  5734                           postinc0	equ	0xFEE
  5735                           wreg	equ	0xFE8
  5736                           postdec1	equ	0xFE5
  5737                           fsr1l	equ	0xFE1
  5738                           
  5739                           	psect	dataBANK3
  5740  000394                     __pdataBANK3:
  5741                           	opt stack 0
  5742  000394                     _Version:
  5743                           	opt stack 0
  5744  000394                     	ds	20
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           postinc0	equ	0xFEE
  5750                           wreg	equ	0xFE8
  5751                           postdec1	equ	0xFE5
  5752                           fsr1l	equ	0xFE1
  5753                           
  5754                           	psect	bssBANK4
  5755  000400                     __pbssBANK4:
  5756                           	opt stack 0
  5757  000400                     _buf:
  5758                           	opt stack 0
  5759  000400                     	ds	100
  5760  000464                     _IRRawCode:
  5761                           	opt stack 0
  5762  000464                     	ds	144
  5763                           tblptru	equ	0xFF8
  5764                           tblptrh	equ	0xFF7
  5765                           tblptrl	equ	0xFF6
  5766                           tablat	equ	0xFF5
  5767                           postinc0	equ	0xFEE
  5768                           wreg	equ	0xFE8
  5769                           postdec1	equ	0xFE5
  5770                           fsr1l	equ	0xFE1
  5771                           
  5772                           	psect	bssBANK5
  5773  000500                     __pbssBANK5:
  5774                           	opt stack 0
  5775  000500                     _Txdata:
  5776                           	opt stack 0
  5777  000500                     	ds	100
  5778                           tblptru	equ	0xFF8
  5779                           tblptrh	equ	0xFF7
  5780                           tblptrl	equ	0xFF6
  5781                           tablat	equ	0xFF5
  5782                           postinc0	equ	0xFEE
  5783                           wreg	equ	0xFE8
  5784                           postdec1	equ	0xFE5
  5785                           fsr1l	equ	0xFE1
  5786                           
  5787                           	psect	cstackBANK6
  5788  000600                     __pcstackBANK6:
  5789                           	opt stack 0
  5790  000600                     Command@buf:
  5791                           	opt stack 0
  5792                           
  5793                           ; 200 bytes @ 0x0
  5794  000600                     	ds	200
  5795  0006C8                     Command@ADC_Value:
  5796                           	opt stack 0
  5797                           
  5798                           ; 2 bytes @ 0xC8
  5799  0006C8                     	ds	2
  5800  0006CA                     Command@RTC_Battery_Value:
  5801                           	opt stack 0
  5802                           
  5803                           ; 2 bytes @ 0xCA
  5804  0006CA                     	ds	2
  5805  0006CC                     Command@RTC_Battery_Value_HIGH_decimal:
  5806                           	opt stack 0
  5807                           
  5808                           ; 2 bytes @ 0xCC
  5809  0006CC                     	ds	2
  5810  0006CE                     Command@BAUDtemp:
  5811                           	opt stack 0
  5812                           
  5813                           ; 4 bytes @ 0xCE
  5814  0006CE                     	ds	4
  5815  0006D2                     Command@RTC_Battery_Value_LOW_decimal:
  5816                           	opt stack 0
  5817                           
  5818                           ; 2 bytes @ 0xD2
  5819  0006D2                     	ds	2
  5820  0006D4                     Command@PARITYtemp:
  5821                           	opt stack 0
  5822                           
  5823                           ; 4 bytes @ 0xD4
  5824  0006D4                     	ds	4
  5825  0006D8                     Command@contrast:
  5826                           	opt stack 0
  5827                           
  5828                           ; 2 bytes @ 0xD8
  5829  0006D8                     	ds	2
  5830  0006DA                     Command@channel:
  5831                           	opt stack 0
  5832                           
  5833                           ; 2 bytes @ 0xDA
  5834  0006DA                     	ds	2
  5835  0006DC                     Command@duty:
  5836                           	opt stack 0
  5837                           
  5838                           ; 2 bytes @ 0xDC
  5839  0006DC                     	ds	2
  5840  0006DE                     Command@tempLONG:
  5841                           	opt stack 0
  5842                           
  5843                           ; 4 bytes @ 0xDE
  5844  0006DE                     	ds	4
  5845                           tblptru	equ	0xFF8
  5846                           tblptrh	equ	0xFF7
  5847                           tblptrl	equ	0xFF6
  5848                           tablat	equ	0xFF5
  5849                           postinc0	equ	0xFEE
  5850                           wreg	equ	0xFE8
  5851                           postdec1	equ	0xFE5
  5852                           fsr1l	equ	0xFE1
  5853                           
  5854                           	psect	cstackBANK2
  5855  000200                     __pcstackBANK2:
  5856                           	opt stack 0
  5857  000200                     SetBaud@buf:
  5858                           	opt stack 0
  5859  000200                     RemoveSpaces@That:
  5860                           	opt stack 0
  5861  000200                     StringAddEqual@temp:
  5862                           	opt stack 0
  5863                           
  5864                           ; 100 bytes @ 0x0
  5865  000200                     	ds	50
  5866  000232                     SetBaud@status:
  5867                           	opt stack 0
  5868                           
  5869                           ; 1 bytes @ 0x32
  5870  000232                     	ds	50
  5871  000264                     StringAddEqual@firstnumber:
  5872                           	opt stack 0
  5873  000264                     RemoveSpaces@address:
  5874                           	opt stack 0
  5875                           
  5876                           ; 2 bytes @ 0x64
  5877  000264                     	ds	1
  5878  000265                     StringAddEqual@i:
  5879                           	opt stack 0
  5880                           
  5881                           ; 1 bytes @ 0x65
  5882  000265                     	ds	1
  5883  000266                     RemoveSpaces@i:
  5884                           	opt stack 0
  5885  000266                     StringAddEqual@j:
  5886                           	opt stack 0
  5887                           
  5888                           ; 1 bytes @ 0x66
  5889  000266                     	ds	1
  5890                           tblptru	equ	0xFF8
  5891                           tblptrh	equ	0xFF7
  5892                           tblptrl	equ	0xFF6
  5893                           tablat	equ	0xFF5
  5894                           postinc0	equ	0xFEE
  5895                           wreg	equ	0xFE8
  5896                           postdec1	equ	0xFE5
  5897                           fsr1l	equ	0xFE1
  5898                           
  5899                           	psect	cstackBANK1
  5900  000166                     __pcstackBANK1:
  5901                           	opt stack 0
  5902  000166                     ??_high_isr:
  5903                           
  5904                           ; 0 bytes @ 0x0
  5905  000166                     	ds	14
  5906  000174                     ??_isdigit:
  5907  000174                     ??_IdleI2C:
  5908  000174                     ?_ReadEEPROM_1Byte:
  5909                           	opt stack 0
  5910  000174                     ?___wmul:
  5911                           	opt stack 0
  5912  000174                     ?___awdiv:
  5913                           	opt stack 0
  5914  000174                     ?___awmod:
  5915                           	opt stack 0
  5916  000174                     ?___lwmod:
  5917                           	opt stack 0
  5918  000174                     ?___ftpack:
  5919                           	opt stack 0
  5920  000174                     ?_GetBaud:
  5921                           	opt stack 0
  5922  000174                     ?___lmul:
  5923                           	opt stack 0
  5924  000174                     ?___lldiv:
  5925                           	opt stack 0
  5926  000174                     ISNUMBER@ascii:
  5927                           	opt stack 0
  5928  000174                     baudUSART@baudconfig:
  5929                           	opt stack 0
  5930  000174                     ReadUSART@data:
  5931                           	opt stack 0
  5932  000174                     EnableInternalADC@config:
  5933                           	opt stack 0
  5934  000174                     OpenI2C@slew:
  5935                           	opt stack 0
  5936  000174                     cleanBuffer@data:
  5937                           	opt stack 0
  5938  000174                     cleanBuffer16bit@data:
  5939                           	opt stack 0
  5940  000174                     StringMatch@This:
  5941                           	opt stack 0
  5942  000174                     StringContains@This:
  5943                           	opt stack 0
  5944  000174                     StartsWith@This:
  5945                           	opt stack 0
  5946  000174                     lowercase@Input:
  5947                           	opt stack 0
  5948  000174                     CheckSum_byte@This:
  5949                           	opt stack 0
  5950  000174                     OpenUSART@spbrg:
  5951                           	opt stack 0
  5952  000174                     Parse_Time@This:
  5953                           	opt stack 0
  5954  000174                     Multiple_I2C_Read@rdptr:
  5955                           	opt stack 0
  5956  000174                     ReadEEPROM_1Byte@address:
  5957                           	opt stack 0
  5958  000174                     WriteEEPROM_1Byte@address:
  5959                           	opt stack 0
  5960  000174                     ___wmul@multiplier:
  5961                           	opt stack 0
  5962  000174                     ___awdiv@dividend:
  5963                           	opt stack 0
  5964  000174                     ___awmod@dividend:
  5965                           	opt stack 0
  5966  000174                     ___lwmod@dividend:
  5967                           	opt stack 0
  5968  000174                     ___ftpack@arg:
  5969                           	opt stack 0
  5970  000174                     delayUS@US:
  5971                           	opt stack 0
  5972  000174                     ___lmul@multiplier:
  5973                           	opt stack 0
  5974  000174                     ___lldiv@dividend:
  5975                           	opt stack 0
  5976                           
  5977                           ; 4 bytes @ 0xE
  5978  000174                     	ds	1
  5979  000175                     EnableInternalADC@channels:
  5980                           	opt stack 0
  5981  000175                     OpenI2C@sync_mode:
  5982                           	opt stack 0
  5983  000175                     WriteI2C@data_out:
  5984                           	opt stack 0
  5985  000175                     _isdigit$3362:
  5986                           	opt stack 0
  5987                           
  5988                           ; 1 bytes @ 0xF
  5989  000175                     	ds	1
  5990  000176                     ?_I2C_Read_At_Address:
  5991                           	opt stack 0
  5992  000176                     CheckSum_byte@Odd_Even:
  5993                           	opt stack 0
  5994  000176                     OpenUSART@config:
  5995                           	opt stack 0
  5996  000176                     I2C_Write_At_Address@Register:
  5997                           	opt stack 0
  5998  000176                     I2C_Read_At_Address@Register:
  5999                           	opt stack 0
  6000  000176                     Multiple_I2C_Read@length:
  6001                           	opt stack 0
  6002  000176                     ReadEEPROM_1Byte@GIEstatus:
  6003                           	opt stack 0
  6004  000176                     WriteEEPROM_1Byte@data:
  6005                           	opt stack 0
  6006  000176                     isdigit@c:
  6007                           	opt stack 0
  6008  000176                     cleanBuffer@count:
  6009                           	opt stack 0
  6010  000176                     cleanBuffer16bit@count:
  6011                           	opt stack 0
  6012  000176                     StringMatch@That:
  6013                           	opt stack 0
  6014  000176                     StringContains@That:
  6015                           	opt stack 0
  6016  000176                     StartsWith@That:
  6017                           	opt stack 0
  6018  000176                     Init_I2C_Master@baud:
  6019                           	opt stack 0
  6020  000176                     ___wmul@multiplicand:
  6021                           	opt stack 0
  6022  000176                     ___awdiv@divisor:
  6023                           	opt stack 0
  6024  000176                     ___awmod@divisor:
  6025                           	opt stack 0
  6026  000176                     ___lwmod@divisor:
  6027                           	opt stack 0
  6028                           
  6029                           ; 2 bytes @ 0x10
  6030  000176                     	ds	1
  6031  000177                     ?_GetMemoryChar:
  6032                           	opt stack 0
  6033  000177                     ?_GetMemoryLong:
  6034                           	opt stack 0
  6035  000177                     ?_GetMemoryBaud:
  6036                           	opt stack 0
  6037  000177                     lowercase@i:
  6038                           	opt stack 0
  6039  000177                     Parse_Time@temp:
  6040                           	opt stack 0
  6041  000177                     I2C_Write_At_Address@data:
  6042                           	opt stack 0
  6043  000177                     I2C_Read_Sequential@Register:
  6044                           	opt stack 0
  6045  000177                     WriteEEPROM_1Byte@GIEstatus:
  6046                           	opt stack 0
  6047  000177                     GetMemoryParity@Parity:
  6048                           	opt stack 0
  6049  000177                     ___ftpack@exp:
  6050                           	opt stack 0
  6051  000177                     CheckSum_byte@ThisTemp:
  6052                           	opt stack 0
  6053                           
  6054                           ; 2 bytes @ 0x11
  6055  000177                     	ds	1
  6056  000178                     ??_cleanBuffer:
  6057  000178                     ??_cleanBuffer16bit:
  6058  000178                     ??_delayUS:
  6059  000178                     ??_I2C_Write_At_Address:
  6060  000178                     ??_StringMatch:
  6061  000178                     ??_StringContains:
  6062  000178                     ??_StartsWith:
  6063  000178                     I2C_Read_At_Address@I2Caddress:
  6064                           	opt stack 0
  6065  000178                     SetMemoryParity@Test:
  6066                           	opt stack 0
  6067  000178                     ___awdiv@counter:
  6068                           	opt stack 0
  6069  000178                     ___awmod@counter:
  6070                           	opt stack 0
  6071  000178                     ___ftpack@sign:
  6072                           	opt stack 0
  6073  000178                     ___lwmod@counter:
  6074                           	opt stack 0
  6075  000178                     I2C_Read_Sequential@rdptr:
  6076                           	opt stack 0
  6077  000178                     ___wmul@product:
  6078                           	opt stack 0
  6079  000178                     ___lmul@multiplicand:
  6080                           	opt stack 0
  6081  000178                     ___lldiv@divisor:
  6082                           	opt stack 0
  6083  000178                     Parse_Time@TempTime:
  6084                           	opt stack 0
  6085                           
  6086                           ; 9 bytes @ 0x12
  6087  000178                     	ds	1
  6088  000179                     ??___ftpack:
  6089  000179                     CheckSum_byte@Parity:
  6090                           	opt stack 0
  6091  000179                     SetMemoryParity@Parity:
  6092                           	opt stack 0
  6093  000179                     ___awdiv@sign:
  6094                           	opt stack 0
  6095  000179                     ___awmod@sign:
  6096                           	opt stack 0
  6097  000179                     delayUS@i:
  6098                           	opt stack 0
  6099                           
  6100                           ; 4 bytes @ 0x13
  6101  000179                     	ds	1
  6102  00017A                     ?___aldiv:
  6103                           	opt stack 0
  6104  00017A                     CheckSum_byte@i:
  6105                           	opt stack 0
  6106  00017A                     I2C_Write_At_Address@I2Caddress:
  6107                           	opt stack 0
  6108  00017A                     I2C_Read_Sequential@length:
  6109                           	opt stack 0
  6110  00017A                     ___awdiv@quotient:
  6111                           	opt stack 0
  6112  00017A                     ___aldiv@dividend:
  6113                           	opt stack 0
  6114                           
  6115                           ; 4 bytes @ 0x14
  6116  00017A                     	ds	1
  6117  00017B                     ??_GetMemoryLong:
  6118  00017B                     ??_GetMemoryBaud:
  6119  00017B                     cleanBuffer@i:
  6120                           	opt stack 0
  6121  00017B                     cleanBuffer16bit@i:
  6122                           	opt stack 0
  6123  00017B                     UARTchar@NinethBit_override:
  6124                           	opt stack 0
  6125  00017B                     I2C_Read_Sequential@I2Caddress:
  6126                           	opt stack 0
  6127  00017B                     GetMemoryChar@AddressFirst:
  6128                           	opt stack 0
  6129                           
  6130                           ; 1 bytes @ 0x15
  6131  00017B                     	ds	1
  6132  00017C                     ?___lbtoft:
  6133                           	opt stack 0
  6134  00017C                     ?___lwtoft:
  6135                           	opt stack 0
  6136  00017C                     UARTchar@NinethBit_override_data:
  6137                           	opt stack 0
  6138  00017C                     GetMemoryChar@H:
  6139                           	opt stack 0
  6140  00017C                     BufferCopy@from:
  6141                           	opt stack 0
  6142  00017C                     ___lwtoft@c:
  6143                           	opt stack 0
  6144  00017C                     ___lmul@product:
  6145                           	opt stack 0
  6146  00017C                     ___lldiv@quotient:
  6147                           	opt stack 0
  6148  00017C                     SET_RTC_TIME@SetTime:
  6149                           	opt stack 0
  6150                           
  6151                           ; 9 bytes @ 0x16
  6152  00017C                     	ds	1
  6153  00017D                     ??_UARTchar:
  6154  00017D                     delayUS@j:
  6155                           	opt stack 0
  6156                           
  6157                           ; 1 bytes @ 0x17
  6158  00017D                     	ds	1
  6159  00017E                     ??_RTC_TIME_NONMilitary:
  6160  00017E                     UARTchar@data:
  6161                           	opt stack 0
  6162  00017E                     Zero_Config1@pin:
  6163                           	opt stack 0
  6164  00017E                     One_Config1@pin:
  6165                           	opt stack 0
  6166  00017E                     f_Config1@pin:
  6167                           	opt stack 0
  6168  00017E                     Zero_Config2@pin:
  6169                           	opt stack 0
  6170  00017E                     One_Config2@pin:
  6171                           	opt stack 0
  6172  00017E                     SendLCDbyte@isCommand:
  6173                           	opt stack 0
  6174  00017E                     BufferCopy@to:
  6175                           	opt stack 0
  6176  00017E                     RTC_Clock_Enable@tempSeconds:
  6177                           	opt stack 0
  6178  00017E                     ___aldiv@divisor:
  6179                           	opt stack 0
  6180  00017E                     READ_RTC_TIME@temp:
  6181                           	opt stack 0
  6182                           
  6183                           ; 7 bytes @ 0x18
  6184  00017E                     	ds	1
  6185  00017F                     SendLCDbyte@data:
  6186                           	opt stack 0
  6187  00017F                     ___lbtoft@c:
  6188                           	opt stack 0
  6189  00017F                     UARTstring@data:
  6190                           	opt stack 0
  6191  00017F                     UARTstringWAIT@data:
  6192                           	opt stack 0
  6193  00017F                     Send_Config1@data:
  6194                           	opt stack 0
  6195  00017F                     Send_Config2@data:
  6196                           	opt stack 0
  6197  00017F                     RTC_TIME_NONMilitary@Error:
  6198                           	opt stack 0
  6199                           
  6200                           ; 2 bytes @ 0x19
  6201  00017F                     	ds	1
  6202  000180                     ?___ftdiv:
  6203                           	opt stack 0
  6204  000180                     ?_GetEnteredNumber:
  6205                           	opt stack 0
  6206  000180                     BufferCopy@count:
  6207                           	opt stack 0
  6208  000180                     SendLCDbyte@MSB_nibble:
  6209                           	opt stack 0
  6210  000180                     RTC_Clock_Enable@Error:
  6211                           	opt stack 0
  6212  000180                     ___lldiv@counter:
  6213                           	opt stack 0
  6214  000180                     GetEnteredNumber@This:
  6215                           	opt stack 0
  6216  000180                     ___ftdiv@f1:
  6217                           	opt stack 0
  6218                           
  6219                           ; 3 bytes @ 0x1A
  6220  000180                     	ds	1
  6221  000181                     ??_UARTstring:
  6222  000181                     ??_Send_Config1:
  6223  000181                     ??_Send_Config2:
  6224  000181                     ?___llmod:
  6225                           	opt stack 0
  6226  000181                     BufferCopy@shift:
  6227                           	opt stack 0
  6228  000181                     SendLCDbyte@LSB_nibble:
  6229                           	opt stack 0
  6230  000181                     RTC_TIME_NONMilitary@temphours:
  6231                           	opt stack 0
  6232  000181                     InitUART@Baud:
  6233                           	opt stack 0
  6234  000181                     ___llmod@dividend:
  6235                           	opt stack 0
  6236                           
  6237                           ; 4 bytes @ 0x1B
  6238  000181                     	ds	1
  6239  000182                     BufferCopy@i:
  6240                           	opt stack 0
  6241  000182                     SetLCDcursor@Col:
  6242                           	opt stack 0
  6243  000182                     LCDPrintChar@character:
  6244                           	opt stack 0
  6245  000182                     ___aldiv@counter:
  6246                           	opt stack 0
  6247  000182                     LCDPrintString@Text:
  6248                           	opt stack 0
  6249                           
  6250                           ; 2 bytes @ 0x1C
  6251  000182                     	ds	1
  6252  000183                     ?_InternalADC_Read:
  6253                           	opt stack 0
  6254  000183                     Send_Config1@i:
  6255                           	opt stack 0
  6256  000183                     Send_Config2@pin:
  6257                           	opt stack 0
  6258  000183                     SetLCDcursor@Row:
  6259                           	opt stack 0
  6260  000183                     ___aldiv@sign:
  6261                           	opt stack 0
  6262  000183                     RemoveSpaces@This:
  6263                           	opt stack 0
  6264  000183                     StringAddEqual@Input:
  6265                           	opt stack 0
  6266  000183                     LCD_Scroll@This:
  6267                           	opt stack 0
  6268  000183                     ___ftdiv@f2:
  6269                           	opt stack 0
  6270                           
  6271                           ; 3 bytes @ 0x1D
  6272  000183                     	ds	1
  6273  000184                     ??_GetEnteredNumber:
  6274  000184                     Send_Config1@pin:
  6275                           	opt stack 0
  6276  000184                     Send_Config2@i:
  6277                           	opt stack 0
  6278  000184                     SetLCDcursor@address:
  6279                           	opt stack 0
  6280  000184                     LCDPrintString@c:
  6281                           	opt stack 0
  6282  000184                     ___aldiv@quotient:
  6283                           	opt stack 0
  6284                           
  6285                           ; 4 bytes @ 0x1E
  6286  000184                     	ds	1
  6287  000185                     ??_InternalADC_Read:
  6288  000185                     ??_SET_RTC_TIME:
  6289  000185                     ??_StringAddEqual:
  6290  000185                     InitUART@parity:
  6291                           	opt stack 0
  6292  000185                     READ_RTC_TIME@Error:
  6293                           	opt stack 0
  6294  000185                     ___llmod@divisor:
  6295                           	opt stack 0
  6296                           
  6297                           ; 4 bytes @ 0x1F
  6298  000185                     	ds	1
  6299  000186                     ??_InitUART:
  6300  000186                     ??___ftdiv:
  6301  000186                     LCDdisplayFeedback@Text:
  6302                           	opt stack 0
  6303                           
  6304                           ; 2 bytes @ 0x20
  6305  000186                     	ds	1
  6306  000187                     InternalADC_Read@channel:
  6307                           	opt stack 0
  6308                           
  6309                           ; 1 bytes @ 0x21
  6310  000187                     	ds	1
  6311  000188                     SetFreq@freq:
  6312                           	opt stack 0
  6313                           
  6314                           ; 2 bytes @ 0x22
  6315  000188                     	ds	1
  6316  000189                     GetEnteredNumber@i:
  6317                           	opt stack 0
  6318  000189                     ___ftdiv@cntr:
  6319                           	opt stack 0
  6320  000189                     ___llmod@counter:
  6321                           	opt stack 0
  6322  000189                     SET_RTC_TIME@temp:
  6323                           	opt stack 0
  6324                           
  6325                           ; 7 bytes @ 0x23
  6326  000189                     	ds	1
  6327  00018A                     ?_sprintf:
  6328                           	opt stack 0
  6329  00018A                     GetEnteredNumber@negative:
  6330                           	opt stack 0
  6331  00018A                     SetFreq@temp:
  6332                           	opt stack 0
  6333  00018A                     InitUART@spbrg:
  6334                           	opt stack 0
  6335  00018A                     sprintf@sp:
  6336                           	opt stack 0
  6337  00018A                     ___ftdiv@f3:
  6338                           	opt stack 0
  6339                           
  6340                           ; 3 bytes @ 0x24
  6341  00018A                     	ds	1
  6342  00018B                     GetEnteredNumber@temp:
  6343                           	opt stack 0
  6344                           
  6345                           ; 4 bytes @ 0x25
  6346  00018B                     	ds	1
  6347  00018C                     InitUART@baudconfig:
  6348                           	opt stack 0
  6349  00018C                     sprintf@f:
  6350                           	opt stack 0
  6351                           
  6352                           ; 2 bytes @ 0x26
  6353  00018C                     	ds	1
  6354  00018D                     InitUART@config:
  6355                           	opt stack 0
  6356  00018D                     ___ftdiv@exp:
  6357                           	opt stack 0
  6358                           
  6359                           ; 1 bytes @ 0x27
  6360  00018D                     	ds	1
  6361  00018E                     ___ftdiv@sign:
  6362                           	opt stack 0
  6363  00018E                     InitUART@temp:
  6364                           	opt stack 0
  6365                           
  6366                           ; 4 bytes @ 0x28
  6367  00018E                     	ds	1
  6368  00018F                     ?___ftmul:
  6369                           	opt stack 0
  6370  00018F                     ___ftmul@f1:
  6371                           	opt stack 0
  6372  00018F                     GetMemoryBaud@baud:
  6373                           	opt stack 0
  6374  00018F                     GetMemoryLong@temp:
  6375                           	opt stack 0
  6376                           
  6377                           ; 4 bytes @ 0x29
  6378  00018F                     	ds	1
  6379  000190                     SET_RTC_TIME@Error:
  6380                           	opt stack 0
  6381                           
  6382                           ; 1 bytes @ 0x2A
  6383  000190                     	ds	2
  6384  000192                     ___ftmul@f2:
  6385                           	opt stack 0
  6386                           
  6387                           ; 3 bytes @ 0x2C
  6388  000192                     	ds	1
  6389  000193                     GetMemoryBaud@BaudTempH:
  6390                           	opt stack 0
  6391  000193                     GetMemoryLong@H:
  6392                           	opt stack 0
  6393                           
  6394                           ; 1 bytes @ 0x2D
  6395  000193                     	ds	1
  6396  000194                     GetMemoryBaud@BaudTempMH:
  6397                           	opt stack 0
  6398  000194                     GetMemoryLong@MH:
  6399                           	opt stack 0
  6400                           
  6401                           ; 1 bytes @ 0x2E
  6402  000194                     	ds	1
  6403  000195                     ??___ftmul:
  6404  000195                     GetMemoryBaud@BaudTempML:
  6405                           	opt stack 0
  6406  000195                     GetMemoryLong@ML:
  6407                           	opt stack 0
  6408                           
  6409                           ; 1 bytes @ 0x2F
  6410  000195                     	ds	1
  6411  000196                     GetMemoryBaud@BaudTempL:
  6412                           	opt stack 0
  6413  000196                     GetMemoryLong@L:
  6414                           	opt stack 0
  6415                           
  6416                           ; 1 bytes @ 0x30
  6417  000196                     	ds	1
  6418  000197                     GetMemoryLong@AddressFirst:
  6419                           	opt stack 0
  6420  000197                     SetMemoryBaud@Baud:
  6421                           	opt stack 0
  6422                           
  6423                           ; 4 bytes @ 0x31
  6424  000197                     	ds	1
  6425  000198                     ?_GetEEPROM:
  6426                           	opt stack 0
  6427  000198                     ___ftmul@exp:
  6428                           	opt stack 0
  6429  000198                     SetMemoryLong@Data:
  6430                           	opt stack 0
  6431                           
  6432                           ; 4 bytes @ 0x32
  6433  000198                     	ds	1
  6434  000199                     ___ftmul@f3_as_product:
  6435                           	opt stack 0
  6436                           
  6437                           ; 3 bytes @ 0x33
  6438  000199                     	ds	1
  6439  00019A                     ??_sprintf:
  6440                           
  6441                           ; 0 bytes @ 0x34
  6442  00019A                     	ds	1
  6443  00019B                     ??_SetMemoryBaud:
  6444                           
  6445                           ; 0 bytes @ 0x35
  6446  00019B                     	ds	1
  6447  00019C                     SetMemoryLong@AddressFirst:
  6448                           	opt stack 0
  6449  00019C                     ___ftmul@cntr:
  6450                           	opt stack 0
  6451                           
  6452                           ; 1 bytes @ 0x36
  6453  00019C                     	ds	1
  6454  00019D                     ??_SetMemoryLong:
  6455  00019D                     ___ftmul@sign:
  6456                           	opt stack 0
  6457                           
  6458                           ; 1 bytes @ 0x37
  6459  00019D                     	ds	1
  6460  00019E                     ?___fttol:
  6461                           	opt stack 0
  6462  00019E                     sprintf@idx:
  6463                           	opt stack 0
  6464  00019E                     ___fttol@f1:
  6465                           	opt stack 0
  6466                           
  6467                           ; 3 bytes @ 0x38
  6468  00019E                     	ds	1
  6469  00019F                     sprintf@cp:
  6470                           	opt stack 0
  6471  00019F                     SetMemoryBaud@Test:
  6472                           	opt stack 0
  6473                           
  6474                           ; 4 bytes @ 0x39
  6475  00019F                     	ds	2
  6476  0001A1                     _sprintf$3076:
  6477                           	opt stack 0
  6478  0001A1                     SetMemoryLong@Test:
  6479                           	opt stack 0
  6480  0001A1                     GetEEPROM@Temp:
  6481                           	opt stack 0
  6482                           
  6483                           ; 9 bytes @ 0x3B
  6484  0001A1                     	ds	1
  6485  0001A2                     ??___fttol:
  6486                           
  6487                           ; 0 bytes @ 0x3C
  6488  0001A2                     	ds	1
  6489  0001A3                     SetMemoryBaud@BaudTempH:
  6490                           	opt stack 0
  6491  0001A3                     _sprintf$3077:
  6492                           	opt stack 0
  6493                           
  6494                           ; 2 bytes @ 0x3D
  6495  0001A3                     	ds	1
  6496  0001A4                     SetMemoryBaud@BaudTempMH:
  6497                           	opt stack 0
  6498                           
  6499                           ; 1 bytes @ 0x3E
  6500  0001A4                     	ds	1
  6501  0001A5                     SetMemoryBaud@BaudTempML:
  6502                           	opt stack 0
  6503  0001A5                     SetMemoryLong@H:
  6504                           	opt stack 0
  6505  0001A5                     _sprintf$3083:
  6506                           	opt stack 0
  6507                           
  6508                           ; 2 bytes @ 0x3F
  6509  0001A5                     	ds	1
  6510  0001A6                     SetMemoryBaud@BaudTempL:
  6511                           	opt stack 0
  6512  0001A6                     SetMemoryLong@MH:
  6513                           	opt stack 0
  6514                           
  6515                           ; 1 bytes @ 0x40
  6516  0001A6                     	ds	1
  6517  0001A7                     SetMemoryLong@ML:
  6518                           	opt stack 0
  6519  0001A7                     ___fttol@sign1:
  6520                           	opt stack 0
  6521  0001A7                     sprintf@len:
  6522                           	opt stack 0
  6523                           
  6524                           ; 2 bytes @ 0x41
  6525  0001A7                     	ds	1
  6526  0001A8                     SetMemoryLong@L:
  6527                           	opt stack 0
  6528  0001A8                     ___fttol@lval:
  6529                           	opt stack 0
  6530                           
  6531                           ; 4 bytes @ 0x42
  6532  0001A8                     	ds	1
  6533  0001A9                     ?_SetEEPROM:
  6534                           	opt stack 0
  6535  0001A9                     sprintf@ap:
  6536                           	opt stack 0
  6537  0001A9                     SetEEPROM@Temp:
  6538                           	opt stack 0
  6539                           
  6540                           ; 9 bytes @ 0x43
  6541  0001A9                     	ds	1
  6542  0001AA                     SyncEEPROMandGLOBAL@Temp:
  6543                           	opt stack 0
  6544                           
  6545                           ; 9 bytes @ 0x44
  6546  0001AA                     	ds	1
  6547  0001AB                     sprintf@val:
  6548                           	opt stack 0
  6549                           
  6550                           ; 4 bytes @ 0x45
  6551  0001AB                     	ds	1
  6552  0001AC                     ___fttol@exp1:
  6553                           	opt stack 0
  6554                           
  6555                           ; 1 bytes @ 0x46
  6556  0001AC                     	ds	1
  6557  0001AD                     SetDuty@Duty:
  6558                           	opt stack 0
  6559  0001AD                     SetContrast@tempPR2:
  6560                           	opt stack 0
  6561                           
  6562                           ; 3 bytes @ 0x47
  6563  0001AD                     	ds	1
  6564  0001AE                     SetDuty@tempPR2:
  6565                           	opt stack 0
  6566                           
  6567                           ; 3 bytes @ 0x48
  6568  0001AE                     	ds	1
  6569  0001AF                     sprintf@prec:
  6570                           	opt stack 0
  6571                           
  6572                           ; 2 bytes @ 0x49
  6573  0001AF                     	ds	1
  6574  0001B0                     SetContrast@MSB:
  6575                           	opt stack 0
  6576                           
  6577                           ; 1 bytes @ 0x4A
  6578  0001B0                     	ds	1
  6579  0001B1                     SetContrast@LSB:
  6580                           	opt stack 0
  6581  0001B1                     SetDuty@MSB:
  6582                           	opt stack 0
  6583  0001B1                     sprintf@width:
  6584                           	opt stack 0
  6585                           
  6586                           ; 2 bytes @ 0x4B
  6587  0001B1                     	ds	1
  6588  0001B2                     SetDuty@LSB:
  6589                           	opt stack 0
  6590  0001B2                     SetContrast@temp:
  6591                           	opt stack 0
  6592  0001B2                     SetEEPROM@burn:
  6593                           	opt stack 0
  6594                           
  6595                           ; 4 bytes @ 0x4C
  6596  0001B2                     	ds	1
  6597  0001B3                     sprintf@c:
  6598                           	opt stack 0
  6599  0001B3                     SetDuty@temp:
  6600                           	opt stack 0
  6601                           
  6602                           ; 2 bytes @ 0x4D
  6603  0001B3                     	ds	1
  6604  0001B4                     SetContrast@Duty:
  6605                           	opt stack 0
  6606  0001B4                     sprintf@flag:
  6607                           	opt stack 0
  6608                           
  6609                           ; 2 bytes @ 0x4E
  6610  0001B4                     	ds	1
  6611  0001B5                     
  6612                           ; 0 bytes @ 0x4F
  6613  0001B5                     	ds	1
  6614  0001B6                     SprintDate@ReturnBuf:
  6615                           	opt stack 0
  6616  0001B6                     SetBaud@Baud:
  6617                           	opt stack 0
  6618  0001B6                     SetEEPROM@fail:
  6619                           	opt stack 0
  6620                           
  6621                           ; 4 bytes @ 0x50
  6622  0001B6                     	ds	2
  6623  0001B8                     SprintDate@DisplayTime:
  6624                           	opt stack 0
  6625                           
  6626                           ; 9 bytes @ 0x52
  6627  0001B8                     	ds	2
  6628  0001BA                     SetBaud@Parity:
  6629                           	opt stack 0
  6630                           
  6631                           ; 1 bytes @ 0x54
  6632  0001BA                     	ds	1
  6633  0001BB                     
  6634                           ; 0 bytes @ 0x55
  6635  0001BB                     	ds	6
  6636  0001C1                     SprintDate@Military:
  6637                           	opt stack 0
  6638                           
  6639                           ; 1 bytes @ 0x5B
  6640  0001C1                     	ds	1
  6641  0001C2                     Command@Input:
  6642                           	opt stack 0
  6643                           
  6644                           ; 2 bytes @ 0x5C
  6645  0001C2                     	ds	2
  6646  0001C4                     main@MemoryBurnflag:
  6647                           	opt stack 0
  6648                           
  6649                           ; 1 bytes @ 0x5E
  6650  0001C4                     	ds	1
  6651  0001C5                     main@ii:
  6652                           	opt stack 0
  6653                           
  6654                           ; 1 bytes @ 0x5F
  6655  0001C5                     	ds	1
  6656  0001C6                     main@count:
  6657                           	opt stack 0
  6658                           
  6659                           ; 1 bytes @ 0x60
  6660  0001C6                     	ds	1
  6661                           tblptru	equ	0xFF8
  6662                           tblptrh	equ	0xFF7
  6663                           tblptrl	equ	0xFF6
  6664                           tablat	equ	0xFF5
  6665                           postinc0	equ	0xFEE
  6666                           wreg	equ	0xFE8
  6667                           postdec1	equ	0xFE5
  6668                           fsr1l	equ	0xFE1
  6669                           
  6670                           	psect	cstackBANK0
  6671  000060                     __pcstackBANK0:
  6672                           	opt stack 0
  6673  000060                     ??_low_isr:
  6674                           
  6675                           ; 0 bytes @ 0x0
  6676  000060                     	ds	21
  6677  000075                     low_isr@TEMP_Rxdata:
  6678                           	opt stack 0
  6679                           
  6680                           ; 100 bytes @ 0x15
  6681  000075                     	ds	100
  6682  0000D9                     low_isr@LCD_TEMP:
  6683                           	opt stack 0
  6684                           
  6685                           ; 16 bytes @ 0x79
  6686  0000D9                     	ds	16
  6687  0000E9                     low_isr@i:
  6688                           	opt stack 0
  6689                           
  6690                           ; 2 bytes @ 0x89
  6691  0000E9                     	ds	2
  6692  0000EB                     low_isr@IRpin:
  6693                           	opt stack 0
  6694                           
  6695                           ; 1 bytes @ 0x8B
  6696  0000EB                     	ds	1
  6697  0000EC                     low_isr@j:
  6698                           	opt stack 0
  6699                           
  6700                           ; 1 bytes @ 0x8C
  6701  0000EC                     	ds	1
  6702  0000ED                     low_isr@rx:
  6703                           	opt stack 0
  6704                           
  6705                           ; 1 bytes @ 0x8D
  6706  0000ED                     	ds	1
  6707                           tblptru	equ	0xFF8
  6708                           tblptrh	equ	0xFF7
  6709                           tblptrl	equ	0xFF6
  6710                           tablat	equ	0xFF5
  6711                           postinc0	equ	0xFEE
  6712                           wreg	equ	0xFE8
  6713                           postdec1	equ	0xFE5
  6714                           fsr1l	equ	0xFE1
  6715                           
  6716                           	psect	cstackCOMRAM
  6717  000001                     __pcstackCOMRAM:
  6718                           	opt stack 0
  6719  000001                     ?i1_ReadEEPROM_1Byte:
  6720                           	opt stack 0
  6721  000001                     IsPrintableASCII@data:
  6722                           	opt stack 0
  6723  000001                     i1ReadUSART@data:
  6724                           	opt stack 0
  6725  000001                     IRrawToNEC@Raw:
  6726                           	opt stack 0
  6727  000001                     i1cleanBuffer@data:
  6728                           	opt stack 0
  6729  000001                     i1cleanBuffer16bit@data:
  6730                           	opt stack 0
  6731  000001                     i1CheckSum_byte@This:
  6732                           	opt stack 0
  6733  000001                     i1ReadEEPROM_1Byte@address:
  6734                           	opt stack 0
  6735  000001                     i1WriteEEPROM_1Byte@address:
  6736                           	opt stack 0
  6737  000001                     i1delayUS@US:
  6738                           	opt stack 0
  6739                           
  6740                           ; 4 bytes @ 0x0
  6741  000001                     	ds	2
  6742  000003                     i1CheckSum_byte@Odd_Even:
  6743                           	opt stack 0
  6744  000003                     i1ReadEEPROM_1Byte@GIEstatus:
  6745                           	opt stack 0
  6746  000003                     i1WriteEEPROM_1Byte@data:
  6747                           	opt stack 0
  6748  000003                     IRrawToNEC@NEC:
  6749                           	opt stack 0
  6750  000003                     i1cleanBuffer@count:
  6751                           	opt stack 0
  6752  000003                     i1cleanBuffer16bit@count:
  6753                           	opt stack 0
  6754                           
  6755                           ; 2 bytes @ 0x2
  6756  000003                     	ds	1
  6757  000004                     ?i1_GetMemoryBaud:
  6758                           	opt stack 0
  6759  000004                     ?i1_GetMemoryLong:
  6760                           	opt stack 0
  6761  000004                     i1WriteEEPROM_1Byte@GIEstatus:
  6762                           	opt stack 0
  6763  000004                     i1GetMemoryParity@Parity:
  6764                           	opt stack 0
  6765  000004                     i1CheckSum_byte@ThisTemp:
  6766                           	opt stack 0
  6767                           
  6768                           ; 2 bytes @ 0x3
  6769  000004                     	ds	1
  6770  000005                     ??i1_delayUS:
  6771  000005                     ??i1_cleanBuffer:
  6772  000005                     ??i1_cleanBuffer16bit:
  6773  000005                     IRrawToNEC@Invert:
  6774                           	opt stack 0
  6775  000005                     i1SetMemoryParity@Test:
  6776                           	opt stack 0
  6777                           
  6778                           ; 1 bytes @ 0x4
  6779  000005                     	ds	1
  6780  000006                     ??_IRrawToNEC:
  6781  000006                     i1CheckSum_byte@Parity:
  6782                           	opt stack 0
  6783  000006                     i1SetMemoryParity@Parity:
  6784                           	opt stack 0
  6785  000006                     i1delayUS@i:
  6786                           	opt stack 0
  6787                           
  6788                           ; 4 bytes @ 0x5
  6789  000006                     	ds	1
  6790  000007                     i1CheckSum_byte@i:
  6791                           	opt stack 0
  6792                           
  6793                           ; 1 bytes @ 0x6
  6794  000007                     	ds	1
  6795  000008                     ??i1_GetMemoryBaud:
  6796  000008                     ??i1_GetMemoryLong:
  6797  000008                     i1cleanBuffer@i:
  6798                           	opt stack 0
  6799  000008                     i1cleanBuffer16bit@i:
  6800                           	opt stack 0
  6801  000008                     i1UARTchar@NinethBit_override:
  6802                           	opt stack 0
  6803  000008                     IRrawToNEC@NECtemp:
  6804                           	opt stack 0
  6805                           
  6806                           ; 4 bytes @ 0x7
  6807  000008                     	ds	1
  6808  000009                     i1UARTchar@NinethBit_override_data:
  6809                           	opt stack 0
  6810  000009                     i1BufferCopy@from:
  6811                           	opt stack 0
  6812                           
  6813                           ; 2 bytes @ 0x8
  6814  000009                     	ds	1
  6815  00000A                     ??i1_UARTchar:
  6816  00000A                     i1delayUS@j:
  6817                           	opt stack 0
  6818                           
  6819                           ; 1 bytes @ 0x9
  6820  00000A                     	ds	1
  6821  00000B                     i1UARTchar@data:
  6822                           	opt stack 0
  6823  00000B                     i1SendLCDbyte@isCommand:
  6824                           	opt stack 0
  6825  00000B                     i1BufferCopy@to:
  6826                           	opt stack 0
  6827                           
  6828                           ; 2 bytes @ 0xA
  6829  00000B                     	ds	1
  6830  00000C                     IRrawToNEC@Pause:
  6831                           	opt stack 0
  6832  00000C                     i1SendLCDbyte@data:
  6833                           	opt stack 0
  6834  00000C                     i1UARTstring@data:
  6835                           	opt stack 0
  6836                           
  6837                           ; 2 bytes @ 0xB
  6838  00000C                     	ds	1
  6839  00000D                     IRrawToNEC@first:
  6840                           	opt stack 0
  6841  00000D                     i1BufferCopy@count:
  6842                           	opt stack 0
  6843  00000D                     i1SendLCDbyte@MSB_nibble:
  6844                           	opt stack 0
  6845                           
  6846                           ; 1 bytes @ 0xC
  6847  00000D                     	ds	1
  6848  00000E                     ??i1_UARTstring:
  6849  00000E                     IRrawToNEC@i:
  6850                           	opt stack 0
  6851  00000E                     i1BufferCopy@shift:
  6852                           	opt stack 0
  6853  00000E                     i1SendLCDbyte@LSB_nibble:
  6854                           	opt stack 0
  6855                           
  6856                           ; 1 bytes @ 0xD
  6857  00000E                     	ds	1
  6858  00000F                     IRrawToNEC@StartBit:
  6859                           	opt stack 0
  6860  00000F                     i1BufferCopy@i:
  6861                           	opt stack 0
  6862  00000F                     i1SetLCDcursor@Col:
  6863                           	opt stack 0
  6864  00000F                     i1LCDPrintChar@character:
  6865                           	opt stack 0
  6866  00000F                     i1LCDPrintString@Text:
  6867                           	opt stack 0
  6868                           
  6869                           ; 2 bytes @ 0xE
  6870  00000F                     	ds	1
  6871  000010                     i1SetLCDcursor@Row:
  6872                           	opt stack 0
  6873                           
  6874                           ; 1 bytes @ 0xF
  6875  000010                     	ds	1
  6876  000011                     i1SetLCDcursor@address:
  6877                           	opt stack 0
  6878  000011                     i1LCDPrintString@c:
  6879                           	opt stack 0
  6880                           
  6881                           ; 2 bytes @ 0x10
  6882  000011                     	ds	2
  6883  000013                     
  6884                           ; 0 bytes @ 0x12
  6885  000013                     	ds	9
  6886  00001C                     i1GetMemoryBaud@baud:
  6887                           	opt stack 0
  6888  00001C                     i1GetMemoryLong@temp:
  6889                           	opt stack 0
  6890                           
  6891                           ; 4 bytes @ 0x1B
  6892  00001C                     	ds	4
  6893  000020                     i1GetMemoryBaud@BaudTempH:
  6894                           	opt stack 0
  6895  000020                     i1GetMemoryLong@H:
  6896                           	opt stack 0
  6897                           
  6898                           ; 1 bytes @ 0x1F
  6899  000020                     	ds	1
  6900  000021                     i1GetMemoryBaud@BaudTempMH:
  6901                           	opt stack 0
  6902  000021                     i1GetMemoryLong@MH:
  6903                           	opt stack 0
  6904                           
  6905                           ; 1 bytes @ 0x20
  6906  000021                     	ds	1
  6907  000022                     i1GetMemoryBaud@BaudTempML:
  6908                           	opt stack 0
  6909  000022                     i1GetMemoryLong@ML:
  6910                           	opt stack 0
  6911                           
  6912                           ; 1 bytes @ 0x21
  6913  000022                     	ds	1
  6914  000023                     i1GetMemoryBaud@BaudTempL:
  6915                           	opt stack 0
  6916  000023                     i1GetMemoryLong@L:
  6917                           	opt stack 0
  6918                           
  6919                           ; 1 bytes @ 0x22
  6920  000023                     	ds	1
  6921  000024                     i1GetMemoryLong@AddressFirst:
  6922                           	opt stack 0
  6923  000024                     i1SetMemoryBaud@Baud:
  6924                           	opt stack 0
  6925                           
  6926                           ; 4 bytes @ 0x23
  6927  000024                     	ds	1
  6928  000025                     i1SetMemoryLong@Data:
  6929                           	opt stack 0
  6930                           
  6931                           ; 4 bytes @ 0x24
  6932  000025                     	ds	3
  6933  000028                     ??i1_SetMemoryBaud:
  6934                           
  6935                           ; 0 bytes @ 0x27
  6936  000028                     	ds	1
  6937  000029                     i1SetMemoryLong@AddressFirst:
  6938                           	opt stack 0
  6939                           
  6940                           ; 1 bytes @ 0x28
  6941  000029                     	ds	1
  6942  00002A                     ??i1_SetMemoryLong:
  6943                           
  6944                           ; 0 bytes @ 0x29
  6945  00002A                     	ds	2
  6946  00002C                     i1SetMemoryBaud@Test:
  6947                           	opt stack 0
  6948                           
  6949                           ; 4 bytes @ 0x2B
  6950  00002C                     	ds	2
  6951  00002E                     i1SetMemoryLong@Test:
  6952                           	opt stack 0
  6953                           
  6954                           ; 4 bytes @ 0x2D
  6955  00002E                     	ds	2
  6956  000030                     i1SetMemoryBaud@BaudTempH:
  6957                           	opt stack 0
  6958                           
  6959                           ; 1 bytes @ 0x2F
  6960  000030                     	ds	1
  6961  000031                     i1SetMemoryBaud@BaudTempMH:
  6962                           	opt stack 0
  6963                           
  6964                           ; 1 bytes @ 0x30
  6965  000031                     	ds	1
  6966  000032                     i1SetMemoryBaud@BaudTempML:
  6967                           	opt stack 0
  6968  000032                     i1SetMemoryLong@H:
  6969                           	opt stack 0
  6970                           
  6971                           ; 1 bytes @ 0x31
  6972  000032                     	ds	1
  6973  000033                     i1SetMemoryBaud@BaudTempL:
  6974                           	opt stack 0
  6975  000033                     i1SetMemoryLong@MH:
  6976                           	opt stack 0
  6977                           
  6978                           ; 1 bytes @ 0x32
  6979  000033                     	ds	1
  6980  000034                     i1SetMemoryLong@ML:
  6981                           	opt stack 0
  6982                           
  6983                           ; 1 bytes @ 0x33
  6984  000034                     	ds	1
  6985  000035                     i1SetMemoryLong@L:
  6986                           	opt stack 0
  6987                           
  6988                           ; 1 bytes @ 0x34
  6989  000035                     	ds	1
  6990  000036                     ?i1_SetEEPROM:
  6991                           	opt stack 0
  6992  000036                     i1SetEEPROM@Temp:
  6993                           	opt stack 0
  6994                           
  6995                           ; 9 bytes @ 0x35
  6996  000036                     	ds	9
  6997  00003F                     i1SetEEPROM@burn:
  6998                           	opt stack 0
  6999                           
  7000                           ; 4 bytes @ 0x3E
  7001  00003F                     	ds	4
  7002  000043                     i1SetEEPROM@fail:
  7003                           	opt stack 0
  7004                           
  7005                           ; 4 bytes @ 0x42
  7006  000043                     	ds	4
  7007  000047                     UseIRCode@Code:
  7008                           	opt stack 0
  7009                           
  7010                           ; 2 bytes @ 0x46
  7011  000047                     	ds	2
  7012  000049                     UseIRCode@NEC:
  7013                           	opt stack 0
  7014                           
  7015                           ; 4 bytes @ 0x48
  7016  000049                     	ds	4
  7017  00004D                     
  7018                           ; 0 bytes @ 0x4C
  7019  00004D                     	ds	1
  7020  00004E                     UseIRCode@i:
  7021                           	opt stack 0
  7022                           
  7023                           ; 1 bytes @ 0x4D
  7024  00004E                     	ds	1
  7025                           tblptru	equ	0xFF8
  7026                           tblptrh	equ	0xFF7
  7027                           tblptrl	equ	0xFF6
  7028                           tablat	equ	0xFF5
  7029                           postinc0	equ	0xFEE
  7030                           wreg	equ	0xFE8
  7031                           postdec1	equ	0xFE5
  7032                           fsr1l	equ	0xFE1
  7033                           
  7034 ;;
  7035 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7036 ;;
  7037 ;; *************** function _main *****************
  7038 ;; Defined at:
  7039 ;;		line 82 in file "main.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;		None
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;  count           1   96[BANK1 ] unsigned char 
  7044 ;;  ii              1   95[BANK1 ] unsigned char 
  7045 ;;  MemoryBurnfl    1   94[BANK1 ] unsigned char 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;		None               void
  7048 ;; Registers used:
  7049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7056 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7059 ;;Total ram usage:        3 bytes
  7060 ;; Hardware stack levels required when called:   13
  7061 ;; This function calls:
  7062 ;;		_ClearLCD
  7063 ;;		_Command
  7064 ;;		_ConfigureOscillator
  7065 ;;		_ContrastPWM_init
  7066 ;;		_EnableInternalADC
  7067 ;;		_InitApp
  7068 ;;		_InitUART
  7069 ;;		_Init_I2C_Master
  7070 ;;		_LCDPrintChar
  7071 ;;		_LCDPrintString
  7072 ;;		_LCDScreenUpdate
  7073 ;;		_PWM_init
  7074 ;;		_RTC_INIT
  7075 ;;		_ReadUSART
  7076 ;;		_SetContrast
  7077 ;;		_SetDuty
  7078 ;;		_SetEEPROM
  7079 ;;		_SetLCDcursor
  7080 ;;		_SyncEEPROMandGLOBAL
  7081 ;;		_UARTstring
  7082 ;;		_cleanBuffer
  7083 ;;		_delayUS
  7084 ;;		_init_IR
  7085 ;;		_init_LCD
  7086 ;; This function is called by:
  7087 ;;		Startup code after reset
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text0
  7092  0133AC                     __ptext0:
  7093                           	opt stack 0
  7094  0133AC                     _main:
  7095                           	opt stack 18
  7096                           
  7097                           ;main.c: 84: unsigned char ii = 0;
  7098                           
  7099                           ;incstack = 0
  7100  0133AC  0E00               	movlw	0
  7101  0133AE  0101               	movlb	1	; () banked
  7102  0133B0  6FC5               	movwf	main@ii& (0+255),b
  7103                           
  7104                           ;main.c: 85: unsigned char count = 0;
  7105  0133B2  0E00               	movlw	0
  7106  0133B4  0101               	movlb	1	; () banked
  7107  0133B6  6FC6               	movwf	main@count& (0+255),b
  7108                           
  7109                           ;main.c: 86: unsigned char MemoryBurnflag = 0;
  7110  0133B8  0E00               	movlw	0
  7111  0133BA  0101               	movlb	1	; () banked
  7112  0133BC  6FC4               	movwf	main@MemoryBurnflag& (0+255),b
  7113                           
  7114                           ; BSR set to: 1
  7115                           ;main.c: 88: ConfigureOscillator();
  7116  0133BE  ECA8  F008         	call	_ConfigureOscillator	;wreg free
  7117                           
  7118                           ;main.c: 89: InitApp();
  7119  0133C2  ECA5  F003         	call	_InitApp	;wreg free
  7120                           
  7121                           ;main.c: 90: EnableInternalADC(1);
  7122  0133C6  0E01               	movlw	1
  7123  0133C8  EC2C  F0B9         	call	_EnableInternalADC
  7124                           
  7125                           ;main.c: 91: PWM_init();
  7126  0133CC  ECD9  F006         	call	_PWM_init	;wreg free
  7127                           
  7128                           ;main.c: 92: ContrastPWM_init();
  7129  0133D0  EC93  F008         	call	_ContrastPWM_init	;wreg free
  7130                           
  7131                           ;main.c: 93: Init_I2C_Master();
  7132  0133D4  EC50  F004         	call	_Init_I2C_Master	;wreg free
  7133                           
  7134                           ;main.c: 94: RTC_INIT();
  7135  0133D8  EC6F  F008         	call	_RTC_INIT	;wreg free
  7136                           
  7137                           ;main.c: 95: init_LCD();
  7138  0133DC  EC3A  F0AF         	call	_init_LCD	;wreg free
  7139                           
  7140                           ;main.c: 97: SyncEEPROMandGLOBAL();
  7141  0133E0  ECEB  F005         	call	_SyncEEPROMandGLOBAL	;wreg free
  7142                           
  7143                           ;main.c: 99: if(Global.Baud < 2400 || Global.Baud > 115200)
  7144  0133E4  0101               	movlb	1	; () banked
  7145  0133E6  5103               	movf	(_Global+3)& (0+255),w,b
  7146  0133E8  0101               	movlb	1	; () banked
  7147  0133EA  1102               	iorwf	(_Global+2)& (0+255),w,b
  7148  0133EC  E108               	bnz	u20820
  7149  0133EE  0E60               	movlw	96
  7150  0133F0  0101               	movlb	1	; () banked
  7151  0133F2  5D00               	subwf	_Global& (0+255),w,b
  7152  0133F4  0E09               	movlw	9
  7153  0133F6  0101               	movlb	1	; () banked
  7154  0133F8  5901               	subwfb	(_Global+1)& (0+255),w,b
  7155  0133FA  A0D8               	btfss	status,0,c
  7156  0133FC  D00F               	goto	l16135
  7157  0133FE                     u20820:
  7158                           
  7159                           ; BSR set to: 1
  7160  0133FE  0101               	movlb	1	; () banked
  7161  013400  5103               	movf	(_Global+3)& (0+255),w,b
  7162  013402  E10C               	bnz	l16135
  7163  013404  0101               	movlb	1	; () banked
  7164  013406  0500               	decf	_Global& (0+255),w,b
  7165  013408  0EC2               	movlw	194
  7166  01340A  0101               	movlb	1	; () banked
  7167  01340C  5901               	subwfb	(_Global+1)& (0+255),w,b
  7168  01340E  0E01               	movlw	1
  7169  013410  0101               	movlb	1	; () banked
  7170  013412  5902               	subwfb	(_Global+2)& (0+255),w,b
  7171  013414  B0D8               	btfsc	status,0,c
  7172  013416  D002               	goto	l16135
  7173  013418  D02F               	goto	l16141
  7174  01341A  D000               	goto	l16135
  7175  01341C                     l16135:
  7176                           
  7177                           ; BSR set to: 1
  7178                           ;main.c: 100: {
  7179                           ;main.c: 102: Global.Baud = 9600;
  7180  01341C  0E80               	movlw	128
  7181  01341E  0101               	movlb	1	; () banked
  7182  013420  6F00               	movwf	_Global& (0+255),b
  7183  013422  0E25               	movlw	37
  7184  013424  6F01               	movwf	(_Global+1)& (0+255),b
  7185  013426  0E00               	movlw	0
  7186  013428  6F02               	movwf	(_Global+2)& (0+255),b
  7187  01342A  0E00               	movlw	0
  7188  01342C  6F03               	movwf	(_Global+3)& (0+255),b
  7189                           
  7190                           ;main.c: 103: Global.Parity = 0;
  7191  01342E  0E00               	movlw	0
  7192  013430  0101               	movlb	1	; () banked
  7193  013432  6F04               	movwf	(_Global+4)& (0+255),b
  7194                           
  7195                           ; BSR set to: 1
  7196                           ;main.c: 105: if(!SetEEPROM(Global,0x3))
  7197  013434  EE21  F000         	lfsr	2,_Global
  7198  013438  EE01  F0A9         	lfsr	0,SetEEPROM@Temp
  7199  01343C  0E08               	movlw	8
  7200  01343E                     u20841:
  7201  01343E  CFDB FFEB          	movff	plusw2,plusw0
  7202  013442  06E8               	decf	wreg,f,c
  7203  013444  E2FC               	bc	u20841
  7204  013446  0E03               	movlw	3
  7205  013448  0101               	movlb	1	; () banked
  7206  01344A  6FB2               	movwf	SetEEPROM@burn& (0+255),b
  7207  01344C  0E00               	movlw	0
  7208  01344E  6FB3               	movwf	(SetEEPROM@burn+1)& (0+255),b
  7209  013450  0E00               	movlw	0
  7210  013452  6FB4               	movwf	(SetEEPROM@burn+2)& (0+255),b
  7211  013454  0E00               	movlw	0
  7212  013456  6FB5               	movwf	(SetEEPROM@burn+3)& (0+255),b
  7213  013458  ECD4  F0B8         	call	_SetEEPROM	;wreg free
  7214  01345C  0101               	movlb	1	; () banked
  7215  01345E  51A9               	movf	?_SetEEPROM& (0+255),w,b
  7216  013460  0101               	movlb	1	; () banked
  7217  013462  11AA               	iorwf	(?_SetEEPROM+1)& (0+255),w,b
  7218  013464  0101               	movlb	1	; () banked
  7219  013466  11AB               	iorwf	(?_SetEEPROM+2)& (0+255),w,b
  7220  013468  0101               	movlb	1	; () banked
  7221  01346A  11AC               	iorwf	(?_SetEEPROM+3)& (0+255),w,b
  7222  01346C  A4D8               	btfss	status,2,c
  7223  01346E  D004               	goto	l16141
  7224                           
  7225                           ; BSR set to: 1
  7226                           ;main.c: 106: {
  7227                           ;main.c: 108: MemoryBurnflag = 1;
  7228  013470  0E01               	movlw	1
  7229  013472  0101               	movlb	1	; () banked
  7230  013474  6FC4               	movwf	main@MemoryBurnflag& (0+255),b
  7231                           
  7232                           ; BSR set to: 1
  7233  013476  D000               	goto	l16141
  7234  013478                     l16141:
  7235                           
  7236                           ; BSR set to: 1
  7237                           ;main.c: 109: }
  7238                           ;main.c: 110: }
  7239                           ;main.c: 111: SyncEEPROMandGLOBAL();
  7240  013478  ECEB  F005         	call	_SyncEEPROMandGLOBAL	;wreg free
  7241                           
  7242                           ;main.c: 112: InitUART(Global.Baud, Global.Parity);
  7243  01347C  C100  F181         	movff	_Global,InitUART@Baud
  7244  013480  C101  F182         	movff	_Global+1,InitUART@Baud+1
  7245  013484  C102  F183         	movff	_Global+2,InitUART@Baud+2
  7246  013488  C103  F184         	movff	_Global+3,InitUART@Baud+3
  7247  01348C  C104  F185         	movff	_Global+4,InitUART@parity
  7248  013490  EC5B  F0AB         	call	_InitUART	;wreg free
  7249                           
  7250                           ;main.c: 113: UARTstring("Firmware Version: ");
  7251  013494  0E13               	movlw	low STR_6
  7252  013496  0101               	movlb	1	; () banked
  7253  013498  6F7F               	movwf	UARTstring@data& (0+255),b
  7254  01349A  0EF8               	movlw	high STR_6
  7255  01349C  0101               	movlb	1	; () banked
  7256  01349E  6F80               	movwf	(UARTstring@data+1)& (0+255),b
  7257  0134A0  EC24  F0BA         	call	_UARTstring	;wreg free
  7258                           
  7259                           ;main.c: 114: UARTstring(Version);
  7260  0134A4  0E94               	movlw	low _Version
  7261  0134A6  0101               	movlb	1	; () banked
  7262  0134A8  6F7F               	movwf	UARTstring@data& (0+255),b
  7263  0134AA  0E03               	movlw	high _Version
  7264  0134AC  0101               	movlb	1	; () banked
  7265  0134AE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
  7266  0134B0  EC24  F0BA         	call	_UARTstring	;wreg free
  7267                           
  7268                           ;main.c: 115: UARTstring("\r\n");
  7269  0134B4  0ECE               	movlw	low (STR_282+19)
  7270  0134B6  0101               	movlb	1	; () banked
  7271  0134B8  6F7F               	movwf	UARTstring@data& (0+255),b
  7272  0134BA  0EF6               	movlw	high (STR_282+19)
  7273  0134BC  0101               	movlb	1	; () banked
  7274  0134BE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
  7275  0134C0  EC24  F0BA         	call	_UARTstring	;wreg free
  7276                           
  7277                           ;main.c: 117: for(ii =0; ii <10;ii++)
  7278  0134C4  0E00               	movlw	0
  7279  0134C6  0101               	movlb	1	; () banked
  7280  0134C8  6FC5               	movwf	main@ii& (0+255),b
  7281  0134CA                     l16153:
  7282                           
  7283                           ; BSR set to: 1
  7284  0134CA  0E09               	movlw	9
  7285  0134CC  0101               	movlb	1	; () banked
  7286  0134CE  65C5               	cpfsgt	main@ii& (0+255),b
  7287  0134D0  D001               	goto	l16157
  7288                           
  7289                           ; BSR set to: 1
  7290  0134D2  D01D               	goto	l16169
  7291  0134D4                     l16157:
  7292                           
  7293                           ; BSR set to: 1
  7294                           ;main.c: 118: {
  7295                           ;main.c: 119: LATD |= 0b00000010;
  7296  0134D4  828C               	bsf	3980,1,c	;volatile
  7297                           
  7298                           ;main.c: 120: LATD &= ~0b00000100;
  7299  0134D6  948C               	bcf	3980,2,c	;volatile
  7300                           
  7301                           ; BSR set to: 1
  7302                           ;main.c: 121: delayUS(50000);
  7303  0134D8  0E50               	movlw	80
  7304  0134DA  0101               	movlb	1	; () banked
  7305  0134DC  6F74               	movwf	delayUS@US& (0+255),b
  7306  0134DE  0EC3               	movlw	195
  7307  0134E0  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7308  0134E2  0E00               	movlw	0
  7309  0134E4  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7310  0134E6  0E00               	movlw	0
  7311  0134E8  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7312  0134EA  ECC6  F0BF         	call	_delayUS	;wreg free
  7313                           
  7314                           ;main.c: 122: LATD |= 0b00000100;
  7315  0134EE  848C               	bsf	3980,2,c	;volatile
  7316                           
  7317                           ;main.c: 123: LATD &= ~0b00000010;
  7318  0134F0  928C               	bcf	3980,1,c	;volatile
  7319                           
  7320                           ;main.c: 124: delayUS(50000);
  7321  0134F2  0E50               	movlw	80
  7322  0134F4  0101               	movlb	1	; () banked
  7323  0134F6  6F74               	movwf	delayUS@US& (0+255),b
  7324  0134F8  0EC3               	movlw	195
  7325  0134FA  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7326  0134FC  0E00               	movlw	0
  7327  0134FE  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7328  013500  0E00               	movlw	0
  7329  013502  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7330  013504  ECC6  F0BF         	call	_delayUS	;wreg free
  7331  013508  0101               	movlb	1	; () banked
  7332  01350A  2BC5               	incf	main@ii& (0+255),f,b
  7333  01350C  D7DE               	goto	l16153
  7334  01350E                     l16169:
  7335                           
  7336                           ; BSR set to: 1
  7337                           ;main.c: 125: }
  7338                           ;main.c: 126: LATD &= ~0b00000100;
  7339  01350E  948C               	bcf	3980,2,c	;volatile
  7340                           
  7341                           ; BSR set to: 1
  7342                           ;main.c: 127: SetContrast(65);
  7343  013510  0E41               	movlw	65
  7344  013512  ECE0  F0B5         	call	_SetContrast
  7345                           
  7346                           ;main.c: 128: delayUS(20);
  7347  013516  0E14               	movlw	20
  7348  013518  0101               	movlb	1	; () banked
  7349  01351A  6F74               	movwf	delayUS@US& (0+255),b
  7350  01351C  0E00               	movlw	0
  7351  01351E  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7352  013520  0E00               	movlw	0
  7353  013522  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7354  013524  0E00               	movlw	0
  7355  013526  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7356  013528  ECC6  F0BF         	call	_delayUS	;wreg free
  7357                           
  7358                           ;main.c: 129: SetLCDcursor(0, 0);
  7359  01352C  0E00               	movlw	0
  7360  01352E  0101               	movlb	1	; () banked
  7361  013530  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7362  013532  0E00               	movlw	0
  7363  013534  EC8F  F005         	call	_SetLCDcursor
  7364                           
  7365                           ;main.c: 130: if(MemoryBurnflag)
  7366  013538  0101               	movlb	1	; () banked
  7367  01353A  51C4               	movf	main@MemoryBurnflag& (0+255),w,b
  7368  01353C  0101               	movlb	1	; () banked
  7369  01353E  B4D8               	btfsc	status,2,c
  7370  013540  D024               	goto	l16187
  7371                           
  7372                           ; BSR set to: 1
  7373                           ;main.c: 131: {
  7374                           ;main.c: 132: UARTstring("Error: Could not burn default Baud rate into Memory\r\n");
  7375  013542  0E22               	movlw	low STR_8
  7376  013544  0101               	movlb	1	; () banked
  7377  013546  6F7F               	movwf	UARTstring@data& (0+255),b
  7378  013548  0EF0               	movlw	high STR_8
  7379  01354A  0101               	movlb	1	; () banked
  7380  01354C  6F80               	movwf	(UARTstring@data+1)& (0+255),b
  7381  01354E  EC24  F0BA         	call	_UARTstring	;wreg free
  7382                           
  7383                           ;main.c: 133: LCDPrintString("Err: Baud Mem");
  7384  013552  0EC5               	movlw	low STR_9
  7385  013554  0101               	movlb	1	; () banked
  7386  013556  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7387  013558  0EFC               	movlw	high STR_9
  7388  01355A  0101               	movlb	1	; () banked
  7389  01355C  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7390  01355E  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7391                           
  7392                           ;main.c: 134: delayUS(100000);
  7393  013562  0EA0               	movlw	160
  7394  013564  0101               	movlb	1	; () banked
  7395  013566  6F74               	movwf	delayUS@US& (0+255),b
  7396  013568  0E86               	movlw	134
  7397  01356A  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7398  01356C  0E01               	movlw	1
  7399  01356E  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7400  013570  0E00               	movlw	0
  7401  013572  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7402  013574  ECC6  F0BF         	call	_delayUS	;wreg free
  7403                           
  7404                           ;main.c: 135: ClearLCD();
  7405  013578  ECEF  F007         	call	_ClearLCD	;wreg free
  7406                           
  7407                           ;main.c: 136: SetLCDcursor(0, 0);
  7408  01357C  0E00               	movlw	0
  7409  01357E  0101               	movlb	1	; () banked
  7410  013580  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7411  013582  0E00               	movlw	0
  7412  013584  EC8F  F005         	call	_SetLCDcursor
  7413  013588  D000               	goto	l16187
  7414  01358A                     l16187:
  7415                           
  7416                           ;main.c: 137: }
  7417                           ;main.c: 138: LCDPrintString("Starting");
  7418  01358A  0EE9               	movlw	low STR_10
  7419  01358C  0101               	movlb	1	; () banked
  7420  01358E  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7421  013590  0EFE               	movlw	high STR_10
  7422  013592  0101               	movlb	1	; () banked
  7423  013594  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7424  013596  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7425                           
  7426                           ;main.c: 139: UARTstring("Starting...");
  7427  01359A  0EAB               	movlw	low STR_11
  7428  01359C  0101               	movlb	1	; () banked
  7429  01359E  6F7F               	movwf	UARTstring@data& (0+255),b
  7430  0135A0  0EFD               	movlw	high STR_11
  7431  0135A2  0101               	movlb	1	; () banked
  7432  0135A4  6F80               	movwf	(UARTstring@data+1)& (0+255),b
  7433  0135A6  EC24  F0BA         	call	_UARTstring	;wreg free
  7434                           
  7435                           ;main.c: 140: delayUS(100000);
  7436  0135AA  0EA0               	movlw	160
  7437  0135AC  0101               	movlb	1	; () banked
  7438  0135AE  6F74               	movwf	delayUS@US& (0+255),b
  7439  0135B0  0E86               	movlw	134
  7440  0135B2  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7441  0135B4  0E01               	movlw	1
  7442  0135B6  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7443  0135B8  0E00               	movlw	0
  7444  0135BA  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7445  0135BC  ECC6  F0BF         	call	_delayUS	;wreg free
  7446                           
  7447                           ;main.c: 141: SetLCDcursor(0, 0);
  7448  0135C0  0E00               	movlw	0
  7449  0135C2  0101               	movlb	1	; () banked
  7450  0135C4  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7451  0135C6  0E00               	movlw	0
  7452  0135C8  EC8F  F005         	call	_SetLCDcursor
  7453                           
  7454                           ;main.c: 142: LCDPrintString("Starting.");
  7455  0135CC  0E7C               	movlw	low STR_12
  7456  0135CE  0101               	movlb	1	; () banked
  7457  0135D0  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7458  0135D2  0EFE               	movlw	high STR_12
  7459  0135D4  0101               	movlb	1	; () banked
  7460  0135D6  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7461  0135D8  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7462                           
  7463                           ;main.c: 143: delayUS(100000);
  7464  0135DC  0EA0               	movlw	160
  7465  0135DE  0101               	movlb	1	; () banked
  7466  0135E0  6F74               	movwf	delayUS@US& (0+255),b
  7467  0135E2  0E86               	movlw	134
  7468  0135E4  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7469  0135E6  0E01               	movlw	1
  7470  0135E8  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7471  0135EA  0E00               	movlw	0
  7472  0135EC  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7473  0135EE  ECC6  F0BF         	call	_delayUS	;wreg free
  7474                           
  7475                           ;main.c: 144: SetLCDcursor(0, 0);
  7476  0135F2  0E00               	movlw	0
  7477  0135F4  0101               	movlb	1	; () banked
  7478  0135F6  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7479  0135F8  0E00               	movlw	0
  7480  0135FA  EC8F  F005         	call	_SetLCDcursor
  7481                           
  7482                           ;main.c: 145: LCDPrintString("Starting..");
  7483  0135FE  0EF9               	movlw	low STR_13
  7484  013600  0101               	movlb	1	; () banked
  7485  013602  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7486  013604  0EFD               	movlw	high STR_13
  7487  013606  0101               	movlb	1	; () banked
  7488  013608  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7489  01360A  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7490                           
  7491                           ;main.c: 146: delayUS(100000);
  7492  01360E  0EA0               	movlw	160
  7493  013610  0101               	movlb	1	; () banked
  7494  013612  6F74               	movwf	delayUS@US& (0+255),b
  7495  013614  0E86               	movlw	134
  7496  013616  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7497  013618  0E01               	movlw	1
  7498  01361A  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7499  01361C  0E00               	movlw	0
  7500  01361E  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7501  013620  ECC6  F0BF         	call	_delayUS	;wreg free
  7502                           
  7503                           ;main.c: 147: SetLCDcursor(0, 0);
  7504  013624  0E00               	movlw	0
  7505  013626  0101               	movlb	1	; () banked
  7506  013628  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7507  01362A  0E00               	movlw	0
  7508  01362C  EC8F  F005         	call	_SetLCDcursor
  7509                           
  7510                           ;main.c: 148: LCDPrintString("Starting...");
  7511  013630  0EAB               	movlw	low STR_11
  7512  013632  0101               	movlb	1	; () banked
  7513  013634  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7514  013636  0EFD               	movlw	high STR_11
  7515  013638  0101               	movlb	1	; () banked
  7516  01363A  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7517  01363C  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7518                           
  7519                           ;main.c: 149: delayUS(100000);
  7520  013640  0EA0               	movlw	160
  7521  013642  0101               	movlb	1	; () banked
  7522  013644  6F74               	movwf	delayUS@US& (0+255),b
  7523  013646  0E86               	movlw	134
  7524  013648  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7525  01364A  0E01               	movlw	1
  7526  01364C  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7527  01364E  0E00               	movlw	0
  7528  013650  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7529  013652  ECC6  F0BF         	call	_delayUS	;wreg free
  7530                           
  7531                           ;main.c: 150: SetLCDcursor(0, 0);
  7532  013656  0E00               	movlw	0
  7533  013658  0101               	movlb	1	; () banked
  7534  01365A  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7535  01365C  0E00               	movlw	0
  7536  01365E  EC8F  F005         	call	_SetLCDcursor
  7537                           
  7538                           ;main.c: 151: LCDPrintString("Starting....");
  7539  013662  0E62               	movlw	low STR_15
  7540  013664  0101               	movlb	1	; () banked
  7541  013666  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7542  013668  0EFD               	movlw	high STR_15
  7543  01366A  0101               	movlb	1	; () banked
  7544  01366C  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7545  01366E  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7546                           
  7547                           ;main.c: 152: delayUS(100000);
  7548  013672  0EA0               	movlw	160
  7549  013674  0101               	movlb	1	; () banked
  7550  013676  6F74               	movwf	delayUS@US& (0+255),b
  7551  013678  0E86               	movlw	134
  7552  01367A  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7553  01367C  0E01               	movlw	1
  7554  01367E  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7555  013680  0E00               	movlw	0
  7556  013682  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7557  013684  ECC6  F0BF         	call	_delayUS	;wreg free
  7558                           
  7559                           ;main.c: 153: SetLCDcursor(0, 0);
  7560  013688  0E00               	movlw	0
  7561  01368A  0101               	movlb	1	; () banked
  7562  01368C  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7563  01368E  0E00               	movlw	0
  7564  013690  EC8F  F005         	call	_SetLCDcursor
  7565                           
  7566                           ;main.c: 154: LCDPrintString("Starting.....");
  7567  013694  0EB7               	movlw	low STR_16
  7568  013696  0101               	movlb	1	; () banked
  7569  013698  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7570  01369A  0EFC               	movlw	high STR_16
  7571  01369C  0101               	movlb	1	; () banked
  7572  01369E  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7573  0136A0  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7574                           
  7575                           ;main.c: 155: delayUS(100000);
  7576  0136A4  0EA0               	movlw	160
  7577  0136A6  0101               	movlb	1	; () banked
  7578  0136A8  6F74               	movwf	delayUS@US& (0+255),b
  7579  0136AA  0E86               	movlw	134
  7580  0136AC  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7581  0136AE  0E01               	movlw	1
  7582  0136B0  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7583  0136B2  0E00               	movlw	0
  7584  0136B4  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7585  0136B6  ECC6  F0BF         	call	_delayUS	;wreg free
  7586                           
  7587                           ;main.c: 156: SetLCDcursor(0, 0);
  7588  0136BA  0E00               	movlw	0
  7589  0136BC  0101               	movlb	1	; () banked
  7590  0136BE  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7591  0136C0  0E00               	movlw	0
  7592  0136C2  EC8F  F005         	call	_SetLCDcursor
  7593                           
  7594                           ;main.c: 157: LCDPrintString("Starting......");
  7595  0136C6  0E1C               	movlw	low STR_17
  7596  0136C8  0101               	movlb	1	; () banked
  7597  0136CA  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7598  0136CC  0EFC               	movlw	high STR_17
  7599  0136CE  0101               	movlb	1	; () banked
  7600  0136D0  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7601  0136D2  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7602                           
  7603                           ;main.c: 158: delayUS(100000);
  7604  0136D6  0EA0               	movlw	160
  7605  0136D8  0101               	movlb	1	; () banked
  7606  0136DA  6F74               	movwf	delayUS@US& (0+255),b
  7607  0136DC  0E86               	movlw	134
  7608  0136DE  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7609  0136E0  0E01               	movlw	1
  7610  0136E2  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7611  0136E4  0E00               	movlw	0
  7612  0136E6  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7613  0136E8  ECC6  F0BF         	call	_delayUS	;wreg free
  7614                           
  7615                           ;main.c: 159: SetLCDcursor(0, 0);
  7616  0136EC  0E00               	movlw	0
  7617  0136EE  0101               	movlb	1	; () banked
  7618  0136F0  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7619  0136F2  0E00               	movlw	0
  7620  0136F4  EC8F  F005         	call	_SetLCDcursor
  7621                           
  7622                           ;main.c: 160: LCDPrintString("Starting.......");
  7623  0136F8  0E49               	movlw	low STR_18
  7624  0136FA  0101               	movlb	1	; () banked
  7625  0136FC  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7626  0136FE  0EFB               	movlw	high STR_18
  7627  013700  0101               	movlb	1	; () banked
  7628  013702  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7629  013704  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7630                           
  7631                           ;main.c: 161: delayUS(100000);
  7632  013708  0EA0               	movlw	160
  7633  01370A  0101               	movlb	1	; () banked
  7634  01370C  6F74               	movwf	delayUS@US& (0+255),b
  7635  01370E  0E86               	movlw	134
  7636  013710  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7637  013712  0E01               	movlw	1
  7638  013714  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7639  013716  0E00               	movlw	0
  7640  013718  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7641  01371A  ECC6  F0BF         	call	_delayUS	;wreg free
  7642                           
  7643                           ;main.c: 162: SetLCDcursor(0, 0);
  7644  01371E  0E00               	movlw	0
  7645  013720  0101               	movlb	1	; () banked
  7646  013722  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7647  013724  0E00               	movlw	0
  7648  013726  EC8F  F005         	call	_SetLCDcursor
  7649                           
  7650                           ;main.c: 163: LCDPrintString("Starting........");
  7651  01372A  0ED8               	movlw	low STR_19
  7652  01372C  0101               	movlb	1	; () banked
  7653  01372E  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7654  013730  0EF9               	movlw	high STR_19
  7655  013732  0101               	movlb	1	; () banked
  7656  013734  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7657  013736  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7658                           
  7659                           ;main.c: 164: delayUS(100000);
  7660  01373A  0EA0               	movlw	160
  7661  01373C  0101               	movlb	1	; () banked
  7662  01373E  6F74               	movwf	delayUS@US& (0+255),b
  7663  013740  0E86               	movlw	134
  7664  013742  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7665  013744  0E01               	movlw	1
  7666  013746  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7667  013748  0E00               	movlw	0
  7668  01374A  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7669  01374C  ECC6  F0BF         	call	_delayUS	;wreg free
  7670                           
  7671                           ;main.c: 165: SetLCDcursor(1, 0);
  7672  013750  0E00               	movlw	0
  7673  013752  0101               	movlb	1	; () banked
  7674  013754  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7675  013756  0E01               	movlw	1
  7676  013758  EC8F  F005         	call	_SetLCDcursor
  7677                           
  7678                           ;main.c: 166: LCDPrintString("Enter '?'");
  7679  01375C  0E72               	movlw	low STR_20
  7680  01375E  0101               	movlb	1	; () banked
  7681  013760  6F82               	movwf	LCDPrintString@Text& (0+255),b
  7682  013762  0EFE               	movlw	high STR_20
  7683  013764  0101               	movlb	1	; () banked
  7684  013766  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7685  013768  EC35  F0BE         	call	_LCDPrintString	;wreg free
  7686                           
  7687                           ;main.c: 167: delayUS(100000);
  7688  01376C  0EA0               	movlw	160
  7689  01376E  0101               	movlb	1	; () banked
  7690  013770  6F74               	movwf	delayUS@US& (0+255),b
  7691  013772  0E86               	movlw	134
  7692  013774  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7693  013776  0E01               	movlw	1
  7694  013778  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7695  01377A  0E00               	movlw	0
  7696  01377C  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7697  01377E  ECC6  F0BF         	call	_delayUS	;wreg free
  7698                           
  7699                           ;main.c: 168: UARTstring("\r\nEnter '?' for Help Menu\r\n>");
  7700  013782  0EB6               	movlw	low STR_21
  7701  013784  0101               	movlb	1	; () banked
  7702  013786  6F7F               	movwf	UARTstring@data& (0+255),b
  7703  013788  0EF4               	movlw	high STR_21
  7704  01378A  0101               	movlb	1	; () banked
  7705  01378C  6F80               	movwf	(UARTstring@data+1)& (0+255),b
  7706  01378E  EC24  F0BA         	call	_UARTstring	;wreg free
  7707                           
  7708                           ;main.c: 170: for(count =100; count >0; count-=5)
  7709  013792  0E64               	movlw	100
  7710  013794  0101               	movlb	1	; () banked
  7711  013796  6FC6               	movwf	main@count& (0+255),b
  7712  013798                     l16233:
  7713                           
  7714                           ; BSR set to: 1
  7715  013798  0101               	movlb	1	; () banked
  7716  01379A  51C6               	movf	main@count& (0+255),w,b
  7717  01379C  0101               	movlb	1	; () banked
  7718  01379E  B4D8               	btfsc	status,2,c
  7719  0137A0  D015               	goto	l16243
  7720  0137A2  D001               	goto	l16237
  7721                           
  7722                           ; BSR set to: 1
  7723  0137A4  D013               	goto	l16243
  7724  0137A6                     l16237:
  7725                           
  7726                           ; BSR set to: 1
  7727                           ;main.c: 171: {
  7728                           ;main.c: 172: SetDuty(count);
  7729  0137A6  0101               	movlb	1	; () banked
  7730  0137A8  51C6               	movf	main@count& (0+255),w,b
  7731  0137AA  EC22  F0B8         	call	_SetDuty
  7732                           
  7733                           ;main.c: 173: delayUS(50000);
  7734  0137AE  0E50               	movlw	80
  7735  0137B0  0101               	movlb	1	; () banked
  7736  0137B2  6F74               	movwf	delayUS@US& (0+255),b
  7737  0137B4  0EC3               	movlw	195
  7738  0137B6  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7739  0137B8  0E00               	movlw	0
  7740  0137BA  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7741  0137BC  0E00               	movlw	0
  7742  0137BE  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7743  0137C0  ECC6  F0BF         	call	_delayUS	;wreg free
  7744  0137C4  0E05               	movlw	5
  7745  0137C6  0101               	movlb	1	; () banked
  7746  0137C8  5FC6               	subwf	main@count& (0+255),f,b
  7747  0137CA  D7E6               	goto	l16233
  7748  0137CC                     l16243:
  7749                           
  7750                           ; BSR set to: 1
  7751                           ;main.c: 174: }
  7752                           ;main.c: 176: LATD &= ~(0b00000010+0b00000100);
  7753  0137CC  0EF9               	movlw	249
  7754  0137CE  168C               	andwf	3980,f,c	;volatile
  7755                           
  7756                           ; BSR set to: 1
  7757                           ;main.c: 177: ReadUSART();
  7758  0137D0  EC74  F006         	call	_ReadUSART	;wreg free
  7759                           
  7760                           ;main.c: 178: ReadUSART();
  7761  0137D4  EC74  F006         	call	_ReadUSART	;wreg free
  7762                           
  7763                           ;main.c: 179: ReadUSART();
  7764  0137D8  EC74  F006         	call	_ReadUSART	;wreg free
  7765                           
  7766                           ;main.c: 181: ClearLCD();
  7767  0137DC  ECEF  F007         	call	_ClearLCD	;wreg free
  7768                           
  7769                           ;main.c: 182: SetLCDcursor(0, 0);
  7770  0137E0  0E00               	movlw	0
  7771  0137E2  0101               	movlb	1	; () banked
  7772  0137E4  6F82               	movwf	SetLCDcursor@Col& (0+255),b
  7773  0137E6  0E00               	movlw	0
  7774  0137E8  EC8F  F005         	call	_SetLCDcursor
  7775                           
  7776                           ;main.c: 183: LCDPrintChar('>');
  7777  0137EC  0E3E               	movlw	62
  7778  0137EE  ECE1  F007         	call	_LCDPrintChar
  7779                           
  7780                           ;main.c: 185: init_IR();
  7781  0137F2  ECEA  F004         	call	_init_IR	;wreg free
  7782  0137F6  D000               	goto	l16259
  7783  0137F8                     l16259:
  7784                           
  7785                           ;main.c: 188: {
  7786                           ;main.c: 190: LCDScreenUpdate();
  7787  0137F8  ECA8  F09E         	call	_LCDScreenUpdate	;wreg free
  7788                           
  7789                           ;main.c: 191: if(BlueLEDcount < 25)
  7790  0137FC  0101               	movlb	1	; () banked
  7791  0137FE  51CC               	movf	(_BlueLEDcount+1)& (0+255),w,b
  7792  013800  E109               	bnz	l16265
  7793  013802  0E19               	movlw	25
  7794  013804  0101               	movlb	1	; () banked
  7795  013806  5DCB               	subwf	_BlueLEDcount& (0+255),w,b
  7796  013808  B0D8               	btfsc	status,0,c
  7797  01380A  D004               	goto	l16265
  7798                           
  7799                           ; BSR set to: 1
  7800                           ;main.c: 192: {
  7801                           ;main.c: 193: BlueLEDcount++;
  7802  01380C  0101               	movlb	1	; () banked
  7803  01380E  4BCB               	infsnz	_BlueLEDcount& (0+255),f,b
  7804  013810  2BCC               	incf	(_BlueLEDcount+1)& (0+255),f,b
  7805                           
  7806                           ;main.c: 194: }
  7807  013812  D003               	goto	l16267
  7808  013814                     l16265:
  7809                           
  7810                           ; BSR set to: 1
  7811                           ;main.c: 195: else
  7812                           ;main.c: 196: {
  7813                           ;main.c: 197: LATD &= ~0b00000010;
  7814  013814  928C               	bcf	3980,1,c	;volatile
  7815                           
  7816                           ;main.c: 198: LATD &= ~0b00000100;
  7817  013816  948C               	bcf	3980,2,c	;volatile
  7818  013818  D000               	goto	l16267
  7819  01381A                     l16267:
  7820                           
  7821                           ; BSR set to: 1
  7822                           ;main.c: 199: }
  7823                           ;main.c: 200: if(Rxdata[0] != 0)
  7824  01381A  0103               	movlb	3	; () banked
  7825  01381C  5100               	movf	_Rxdata& (0+255),w,b
  7826  01381E  B4D8               	btfsc	status,2,c
  7827  013820  D7EB               	goto	l16259
  7828                           
  7829                           ; BSR set to: 3
  7830                           ;main.c: 201: {
  7831                           ;main.c: 202: if (Rxdata[0] != '\r' && Rxdata[0] != '\n')
  7832  013822  0E0D               	movlw	13
  7833  013824  0103               	movlb	3	; () banked
  7834  013826  1900               	xorwf	_Rxdata& (0+255),w,b
  7835  013828  B4D8               	btfsc	status,2,c
  7836  01382A  D019               	goto	l16277
  7837                           
  7838                           ; BSR set to: 3
  7839  01382C  0E0A               	movlw	10
  7840  01382E  0103               	movlb	3	; () banked
  7841  013830  1900               	xorwf	_Rxdata& (0+255),w,b
  7842  013832  B4D8               	btfsc	status,2,c
  7843  013834  D014               	goto	l16277
  7844                           
  7845                           ; BSR set to: 3
  7846                           ;main.c: 203: {
  7847                           ;main.c: 204: if(Command(Rxdata))
  7848  013836  0E00               	movlw	low _Rxdata
  7849  013838  0101               	movlb	1	; () banked
  7850  01383A  6FC2               	movwf	Command@Input& (0+255),b
  7851  01383C  0E03               	movlw	high _Rxdata
  7852  01383E  0101               	movlb	1	; () banked
  7853  013840  6FC3               	movwf	(Command@Input+1)& (0+255),b
  7854  013842  EC00  F080         	call	_Command	;wreg free
  7855  013846  0900               	iorlw	0
  7856  013848  B4D8               	btfsc	status,2,c
  7857  01384A  D009               	goto	l16277
  7858                           
  7859                           ;main.c: 205: {
  7860                           ;main.c: 206: UARTstring("\r\n>");
  7861  01384C  0ECF               	movlw	low (STR_21+25)
  7862  01384E  0101               	movlb	1	; () banked
  7863  013850  6F7F               	movwf	UARTstring@data& (0+255),b
  7864  013852  0EF4               	movlw	high (STR_21+25)
  7865  013854  0101               	movlb	1	; () banked
  7866  013856  6F80               	movwf	(UARTstring@data+1)& (0+255),b
  7867  013858  EC24  F0BA         	call	_UARTstring	;wreg free
  7868  01385C  D000               	goto	l16277
  7869  01385E                     l16277:
  7870                           
  7871                           ;main.c: 207: }
  7872                           ;main.c: 208: }
  7873                           ;main.c: 209: cleanBuffer(Rxdata, 100);
  7874  01385E  0E00               	movlw	low _Rxdata
  7875  013860  0101               	movlb	1	; () banked
  7876  013862  6F74               	movwf	cleanBuffer@data& (0+255),b
  7877  013864  0E03               	movlw	high _Rxdata
  7878  013866  0101               	movlb	1	; () banked
  7879  013868  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
  7880  01386A  0E00               	movlw	0
  7881  01386C  0101               	movlb	1	; () banked
  7882  01386E  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
  7883  013870  0E64               	movlw	100
  7884  013872  6F76               	movwf	cleanBuffer@count& (0+255),b
  7885  013874  ECD3  F003         	call	_cleanBuffer	;wreg free
  7886  013878  D7BF               	goto	l16259
  7887  01387A  EF74  F002         	goto	start
  7888  01387E                     __end_of_main:
  7889                           	opt stack 0
  7890                           tblptru	equ	0xFF8
  7891                           tblptrh	equ	0xFF7
  7892                           tblptrl	equ	0xFF6
  7893                           tablat	equ	0xFF5
  7894                           postinc0	equ	0xFEE
  7895                           plusw0	equ	0xFEB
  7896                           wreg	equ	0xFE8
  7897                           postdec1	equ	0xFE5
  7898                           fsr1l	equ	0xFE1
  7899                           plusw2	equ	0xFDB
  7900                           status	equ	0xFD8
  7901                           
  7902 ;; *************** function _init_LCD *****************
  7903 ;; Defined at:
  7904 ;;		line 67 in file "LCD.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;		None               void
  7911 ;; Registers used:
  7912 ;;		wreg, status,2, status,0, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;Total ram usage:        0 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:   11
  7925 ;; This function calls:
  7926 ;;		_ClearLCD
  7927 ;;		_PulseEnablePin
  7928 ;;		_SendLCDbyte
  7929 ;;		_delayUS
  7930 ;;		_init_Timer1
  7931 ;; This function is called by:
  7932 ;;		_main
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text1
  7937  015E74                     __ptext1:
  7938                           	opt stack 0
  7939  015E74                     _init_LCD:
  7940                           	opt stack 19
  7941                           
  7942                           ;LCD.c: 69: LATD &= ~(0b01000000);
  7943                           
  7944                           ;incstack = 0
  7945  015E74  9C8C               	bcf	3980,6,c	;volatile
  7946                           
  7947                           ;LCD.c: 70: PulseEnablePin();
  7948  015E76  EC8E  F006         	call	_PulseEnablePin	;wreg free
  7949                           
  7950                           ;LCD.c: 71: LATD &= ~(0b10000000 + 0b00100000);
  7951  015E7A  0E5F               	movlw	95
  7952  015E7C  168C               	andwf	3980,f,c	;volatile
  7953                           
  7954                           ;LCD.c: 72: PulseEnablePin();
  7955  015E7E  EC8E  F006         	call	_PulseEnablePin	;wreg free
  7956                           
  7957                           ;LCD.c: 74: delayUS(50000);
  7958  015E82  0E50               	movlw	80
  7959  015E84  0101               	movlb	1	; () banked
  7960  015E86  6F74               	movwf	delayUS@US& (0+255),b
  7961  015E88  0EC3               	movlw	195
  7962  015E8A  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7963  015E8C  0E00               	movlw	0
  7964  015E8E  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7965  015E90  0E00               	movlw	0
  7966  015E92  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7967  015E94  ECC6  F0BF         	call	_delayUS	;wreg free
  7968                           
  7969                           ;LCD.c: 75: SendLCDbyte(0x00, 1);
  7970  015E98  0E01               	movlw	1
  7971  015E9A  0101               	movlb	1	; () banked
  7972  015E9C  6F7E               	movwf	SendLCDbyte@isCommand& (0+255),b
  7973  015E9E  0E00               	movlw	0
  7974  015EA0  ECD0  F0B2         	call	_SendLCDbyte
  7975                           
  7976                           ;LCD.c: 76: delayUS(50000);
  7977  015EA4  0E50               	movlw	80
  7978  015EA6  0101               	movlb	1	; () banked
  7979  015EA8  6F74               	movwf	delayUS@US& (0+255),b
  7980  015EAA  0EC3               	movlw	195
  7981  015EAC  6F75               	movwf	(delayUS@US+1)& (0+255),b
  7982  015EAE  0E00               	movlw	0
  7983  015EB0  6F76               	movwf	(delayUS@US+2)& (0+255),b
  7984  015EB2  0E00               	movlw	0
  7985  015EB4  6F77               	movwf	(delayUS@US+3)& (0+255),b
  7986  015EB6  ECC6  F0BF         	call	_delayUS	;wreg free
  7987                           
  7988                           ;LCD.c: 77: SendLCDbyte(0x00, 0);
  7989  015EBA  0E00               	movlw	0
  7990  015EBC  0101               	movlb	1	; () banked
  7991  015EBE  6F7E               	movwf	SendLCDbyte@isCommand& (0+255),b
  7992  015EC0  0E00               	movlw	0
  7993  015EC2  ECD0  F0B2         	call	_SendLCDbyte
  7994                           
  7995                           ;LCD.c: 78: delayUS(50000);
  7996  015EC6  0E50               	movlw	80
  7997  015EC8  0101               	movlb	1	; () banked
  7998  015ECA  6F74               	movwf	delayUS@US& (0+255),b
  7999  015ECC  0EC3               	movlw	195
  8000  015ECE  6F75               	movwf	(delayUS@US+1)& (0+255),b
  8001  015ED0  0E00               	movlw	0
  8002  015ED2  6F76               	movwf	(delayUS@US+2)& (0+255),b
  8003  015ED4  0E00               	movlw	0
  8004  015ED6  6F77               	movwf	(delayUS@US+3)& (0+255),b
  8005  015ED8  ECC6  F0BF         	call	_delayUS	;wreg free
  8006                           
  8007                           ;LCD.c: 80: LATA |= (0b00100000);
  8008  015EDC  8A89               	bsf	3977,5,c	;volatile
  8009                           
  8010                           ;LCD.c: 81: delayUS(50000);
  8011  015EDE  0E50               	movlw	80
  8012  015EE0  0101               	movlb	1	; () banked
  8013  015EE2  6F74               	movwf	delayUS@US& (0+255),b
  8014  015EE4  0EC3               	movlw	195
  8015  015EE6  6F75               	movwf	(delayUS@US+1)& (0+255),b
  8016  015EE8  0E00               	movlw	0
  8017  015EEA  6F76               	movwf	(delayUS@US+2)& (0+255),b
  8018  015EEC  0E00               	movlw	0
  8019  015EEE  6F77               	movwf	(delayUS@US+3)& (0+255),b
  8020  015EF0  ECC6  F0BF         	call	_delayUS	;wreg free
  8021                           
  8022                           ;LCD.c: 82: PulseEnablePin();
  8023  015EF4  EC8E  F006         	call	_PulseEnablePin	;wreg free
  8024                           
  8025                           ;LCD.c: 83: delayUS(50000);
  8026  015EF8  0E50               	movlw	80
  8027  015EFA  0101               	movlb	1	; () banked
  8028  015EFC  6F74               	movwf	delayUS@US& (0+255),b
  8029  015EFE  0EC3               	movlw	195
  8030  015F00  6F75               	movwf	(delayUS@US+1)& (0+255),b
  8031  015F02  0E00               	movlw	0
  8032  015F04  6F76               	movwf	(delayUS@US+2)& (0+255),b
  8033  015F06  0E00               	movlw	0
  8034  015F08  6F77               	movwf	(delayUS@US+3)& (0+255),b
  8035  015F0A  ECC6  F0BF         	call	_delayUS	;wreg free
  8036                           
  8037                           ;LCD.c: 87: SendLCDbyte(0x28, 0);
  8038  015F0E  0E00               	movlw	0
  8039  015F10  0101               	movlb	1	; () banked
  8040  015F12  6F7E               	movwf	SendLCDbyte@isCommand& (0+255),b
  8041  015F14  0E28               	movlw	40
  8042  015F16  ECD0  F0B2         	call	_SendLCDbyte
  8043                           
  8044                           ;LCD.c: 88: delayUS(50000);
  8045  015F1A  0E50               	movlw	80
  8046  015F1C  0101               	movlb	1	; () banked
  8047  015F1E  6F74               	movwf	delayUS@US& (0+255),b
  8048  015F20  0EC3               	movlw	195
  8049  015F22  6F75               	movwf	(delayUS@US+1)& (0+255),b
  8050  015F24  0E00               	movlw	0
  8051  015F26  6F76               	movwf	(delayUS@US+2)& (0+255),b
  8052  015F28  0E00               	movlw	0
  8053  015F2A  6F77               	movwf	(delayUS@US+3)& (0+255),b
  8054  015F2C  ECC6  F0BF         	call	_delayUS	;wreg free
  8055                           
  8056                           ;LCD.c: 91: SendLCDbyte(0x0C, 0);
  8057  015F30  0E00               	movlw	0
  8058  015F32  0101               	movlb	1	; () banked
  8059  015F34  6F7E               	movwf	SendLCDbyte@isCommand& (0+255),b
  8060  015F36  0E0C               	movlw	12
  8061  015F38  ECD0  F0B2         	call	_SendLCDbyte
  8062                           
  8063                           ;LCD.c: 92: delayUS(50000);
  8064  015F3C  0E50               	movlw	80
  8065  015F3E  0101               	movlb	1	; () banked
  8066  015F40  6F74               	movwf	delayUS@US& (0+255),b
  8067  015F42  0EC3               	movlw	195
  8068  015F44  6F75               	movwf	(delayUS@US+1)& (0+255),b
  8069  015F46  0E00               	movlw	0
  8070  015F48  6F76               	movwf	(delayUS@US+2)& (0+255),b
  8071  015F4A  0E00               	movlw	0
  8072  015F4C  6F77               	movwf	(delayUS@US+3)& (0+255),b
  8073  015F4E  ECC6  F0BF         	call	_delayUS	;wreg free
  8074                           
  8075                           ;LCD.c: 95: SendLCDbyte(0x06, 0);
  8076  015F52  0E00               	movlw	0
  8077  015F54  0101               	movlb	1	; () banked
  8078  015F56  6F7E               	movwf	SendLCDbyte@isCommand& (0+255),b
  8079  015F58  0E06               	movlw	6
  8080  015F5A  ECD0  F0B2         	call	_SendLCDbyte
  8081                           
  8082                           ;LCD.c: 96: delayUS(50000);
  8083  015F5E  0E50               	movlw	80
  8084  015F60  0101               	movlb	1	; () banked
  8085  015F62  6F74               	movwf	delayUS@US& (0+255),b
  8086  015F64  0EC3               	movlw	195
  8087  015F66  6F75               	movwf	(delayUS@US+1)& (0+255),b
  8088  015F68  0E00               	movlw	0
  8089  015F6A  6F76               	movwf	(delayUS@US+2)& (0+255),b
  8090  015F6C  0E00               	movlw	0
  8091  015F6E  6F77               	movwf	(delayUS@US+3)& (0+255),b
  8092  015F70  ECC6  F0BF         	call	_delayUS	;wreg free
  8093                           
  8094                           ;LCD.c: 98: ClearLCD();
  8095  015F74  ECEF  F007         	call	_ClearLCD	;wreg free
  8096                           
  8097                           ;LCD.c: 99: delayUS(50000);
  8098  015F78  0E50               	movlw	80
  8099  015F7A  0101               	movlb	1	; () banked
  8100  015F7C  6F74               	movwf	delayUS@US& (0+255),b
  8101  015F7E  0EC3               	movlw	195
  8102  015F80  6F75               	movwf	(delayUS@US+1)& (0+255),b
  8103  015F82  0E00               	movlw	0
  8104  015F84  6F76               	movwf	(delayUS@US+2)& (0+255),b
  8105  015F86  0E00               	movlw	0
  8106  015F88  6F77               	movwf	(delayUS@US+3)& (0+255),b
  8107  015F8A  ECC6  F0BF         	call	_delayUS	;wreg free
  8108                           
  8109                           ;LCD.c: 101: init_Timer1();
  8110  015F8E  EC67  F008         	call	_init_Timer1	;wreg free
  8111  015F92  0012               	return		;funcret
  8112  015F94                     __end_of_init_LCD:
  8113                           	opt stack 0
  8114                           tblptru	equ	0xFF8
  8115                           tblptrh	equ	0xFF7
  8116                           tblptrl	equ	0xFF6
  8117                           tablat	equ	0xFF5
  8118                           postinc0	equ	0xFEE
  8119                           plusw0	equ	0xFEB
  8120                           wreg	equ	0xFE8
  8121                           postdec1	equ	0xFE5
  8122                           fsr1l	equ	0xFE1
  8123                           plusw2	equ	0xFDB
  8124                           status	equ	0xFD8
  8125                           
  8126 ;; *************** function _init_Timer1 *****************
  8127 ;; Defined at:
  8128 ;;		line 119 in file "Timer.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;		None
  8131 ;; Auto vars:     Size  Location     Type
  8132 ;;		None
  8133 ;; Return value:  Size  Location     Type
  8134 ;;		None               void
  8135 ;; Registers used:
  8136 ;;		wreg, status,2, cstack
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;Total ram usage:        0 bytes
  8147 ;; Hardware stack levels used:    1
  8148 ;; Hardware stack levels required when called:    8
  8149 ;; This function calls:
  8150 ;;		_Start_Timer1
  8151 ;; This function is called by:
  8152 ;;		_init_LCD
  8153 ;;		_init_Timers
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text2
  8158  0010CE                     __ptext2:
  8159                           	opt stack 0
  8160  0010CE                     _init_Timer1:
  8161                           	opt stack 21
  8162                           
  8163                           ;Timer.c: 122: T1CONbits.RD16 = 1;
  8164                           
  8165                           ;incstack = 0
  8166  0010CE  8ECD               	bsf	4045,7,c	;volatile
  8167                           
  8168                           ;Timer.c: 124: T1CONbits.TMR1CS = 0;
  8169  0010D0  92CD               	bcf	4045,1,c	;volatile
  8170                           
  8171                           ;Timer.c: 126: T1CONbits.T1CKPS = 0x3;
  8172  0010D2  0E30               	movlw	48
  8173  0010D4  12CD               	iorwf	4045,f,c	;volatile
  8174                           
  8175                           ;Timer.c: 128: IPR1bits.TMR1IP = 0;
  8176  0010D6  909F               	bcf	3999,0,c	;volatile
  8177                           
  8178                           ;Timer.c: 129: Start_Timer1();
  8179  0010D8  ECFC  F0BF         	call	_Start_Timer1	;wreg free
  8180  0010DC  0012               	return		;funcret
  8181  0010DE                     __end_of_init_Timer1:
  8182                           	opt stack 0
  8183                           tblptru	equ	0xFF8
  8184                           tblptrh	equ	0xFF7
  8185                           tblptrl	equ	0xFF6
  8186                           tablat	equ	0xFF5
  8187                           postinc0	equ	0xFEE
  8188                           plusw0	equ	0xFEB
  8189                           wreg	equ	0xFE8
  8190                           postdec1	equ	0xFE5
  8191                           fsr1l	equ	0xFE1
  8192                           plusw2	equ	0xFDB
  8193                           status	equ	0xFD8
  8194                           
  8195 ;; *************** function _init_IR *****************
  8196 ;; Defined at:
  8197 ;;		line 68 in file "IR.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;		None
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;		None               void
  8204 ;; Registers used:
  8205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8215 ;;Total ram usage:        0 bytes
  8216 ;; Hardware stack levels used:    1
  8217 ;; Hardware stack levels required when called:    9
  8218 ;; This function calls:
  8219 ;;		_ReadIRpin
  8220 ;;		_Start_Timer0
  8221 ;;		_cleanBuffer16bit
  8222 ;;		_init_Timer0
  8223 ;; This function is called by:
  8224 ;;		_main
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           	psect	text3
  8229  0009D4                     __ptext3:
  8230                           	opt stack 0
  8231  0009D4                     _init_IR:
  8232                           	opt stack 21
  8233                           
  8234                           ;IR.c: 71: INTCON2bits.RBPU = 0;
  8235                           
  8236                           ;incstack = 0
  8237  0009D4  9EF1               	bcf	intcon2,7,c	;volatile
  8238                           
  8239                           ;IR.c: 73: INTCON2bits.RBIP = 0;
  8240  0009D6  90F1               	bcf	intcon2,0,c	;volatile
  8241                           
  8242                           ;IR.c: 75: IRpinOLD = ReadIRpin();
  8243  0009D8  EC77  F008         	call	_ReadIRpin	;wreg free
  8244  0009DC  0100               	movlb	0	; () banked
  8245  0009DE  6FF0               	movwf	_IRpinOLD& (0+255),b
  8246                           
  8247                           ;IR.c: 77: init_Timer0();
  8248  0009E0  EC08  F008         	call	_init_Timer0	;wreg free
  8249                           
  8250                           ;IR.c: 79: cleanBuffer16bit(IRRawCode, 72);
  8251  0009E4  0E64               	movlw	low _IRRawCode
  8252  0009E6  0101               	movlb	1	; () banked
  8253  0009E8  6F74               	movwf	cleanBuffer16bit@data& (0+255),b
  8254  0009EA  0E04               	movlw	high _IRRawCode
  8255  0009EC  0101               	movlb	1	; () banked
  8256  0009EE  6F75               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
  8257  0009F0  0E00               	movlw	0
  8258  0009F2  0101               	movlb	1	; () banked
  8259  0009F4  6F77               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
  8260  0009F6  0E48               	movlw	72
  8261  0009F8  6F76               	movwf	cleanBuffer16bit@count& (0+255),b
  8262  0009FA  EC76  F003         	call	_cleanBuffer16bit	;wreg free
  8263                           
  8264                           ;IR.c: 80: IR_NEC = 0;
  8265  0009FE  0E00               	movlw	0
  8266  000A00  0100               	movlb	0	; () banked
  8267  000A02  6FF4               	movwf	_IR_NEC& (0+255),b
  8268  000A04  0E00               	movlw	0
  8269  000A06  6FF5               	movwf	(_IR_NEC+1)& (0+255),b
  8270  000A08  0E00               	movlw	0
  8271  000A0A  6FF6               	movwf	(_IR_NEC+2)& (0+255),b
  8272  000A0C  0E00               	movlw	0
  8273  000A0E  6FF7               	movwf	(_IR_NEC+3)& (0+255),b
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;IR.c: 82: Start_Timer0();
  8277  000A10  ECB5  F008         	call	_Start_Timer0	;wreg free
  8278                           
  8279                           ;IR.c: 84: INTCONbits.TMR0IF = 0;
  8280  000A14  94F2               	bcf	intcon,2,c	;volatile
  8281                           
  8282                           ;IR.c: 85: INTCONbits.TMR0IE = 0;
  8283  000A16  9AF2               	bcf	intcon,5,c	;volatile
  8284                           
  8285                           ;IR.c: 87: INTCONbits.RBIE = 1;
  8286  000A18  86F2               	bsf	intcon,3,c	;volatile
  8287  000A1A  0012               	return		;funcret
  8288  000A1C                     __end_of_init_IR:
  8289                           	opt stack 0
  8290                           tblptru	equ	0xFF8
  8291                           tblptrh	equ	0xFF7
  8292                           tblptrl	equ	0xFF6
  8293                           tablat	equ	0xFF5
  8294                           intcon	equ	0xFF2
  8295                           intcon2	equ	0xFF1
  8296                           postinc0	equ	0xFEE
  8297                           plusw0	equ	0xFEB
  8298                           wreg	equ	0xFE8
  8299                           postdec1	equ	0xFE5
  8300                           fsr1l	equ	0xFE1
  8301                           plusw2	equ	0xFDB
  8302                           status	equ	0xFD8
  8303                           
  8304 ;; *************** function _init_Timer0 *****************
  8305 ;; Defined at:
  8306 ;;		line 60 in file "Timer.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;		None
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;		None
  8311 ;; Return value:  Size  Location     Type
  8312 ;;		None               void
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;Total ram usage:        0 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    8
  8327 ;; This function calls:
  8328 ;;		_Stop_Timer0
  8329 ;; This function is called by:
  8330 ;;		_init_IR
  8331 ;;		_init_Timers
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text4
  8336  001010                     __ptext4:
  8337                           	opt stack 0
  8338  001010                     _init_Timer0:
  8339                           	opt stack 21
  8340                           
  8341                           ;Timer.c: 62: Stop_Timer0();
  8342                           
  8343                           ;incstack = 0
  8344  001010  ECB3  F008         	call	_Stop_Timer0	;wreg free
  8345                           
  8346                           ;Timer.c: 64: INTCON2bits.T0IP = 0;
  8347  001014  94F1               	bcf	intcon2,2,c	;volatile
  8348                           
  8349                           ;Timer.c: 66: T0CONbits.T08BIT = 0;
  8350  001016  9CD5               	bcf	4053,6,c	;volatile
  8351                           
  8352                           ;Timer.c: 68: T0CONbits.T0CS = 0;
  8353  001018  9AD5               	bcf	4053,5,c	;volatile
  8354                           
  8355                           ;Timer.c: 70: T0CONbits.PSA = 0;
  8356  00101A  96D5               	bcf	4053,3,c	;volatile
  8357                           
  8358                           ;Timer.c: 72: T0CONbits.T0PS = 0x4;
  8359  00101C  50D5               	movf	4053,w,c	;volatile
  8360  00101E  0BF8               	andlw	-8
  8361  001020  0904               	iorlw	4
  8362  001022  6ED5               	movwf	4053,c	;volatile
  8363  001024  0012               	return		;funcret
  8364  001026                     __end_of_init_Timer0:
  8365                           	opt stack 0
  8366                           tblptru	equ	0xFF8
  8367                           tblptrh	equ	0xFF7
  8368                           tblptrl	equ	0xFF6
  8369                           tablat	equ	0xFF5
  8370                           intcon	equ	0xFF2
  8371                           intcon2	equ	0xFF1
  8372                           postinc0	equ	0xFEE
  8373                           plusw0	equ	0xFEB
  8374                           wreg	equ	0xFE8
  8375                           postdec1	equ	0xFE5
  8376                           fsr1l	equ	0xFE1
  8377                           plusw2	equ	0xFDB
  8378                           status	equ	0xFD8
  8379                           
  8380 ;; *************** function _Stop_Timer0 *****************
  8381 ;; Defined at:
  8382 ;;		line 81 in file "Timer.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;		None
  8387 ;; Return value:  Size  Location     Type
  8388 ;;		None               void
  8389 ;; Registers used:
  8390 ;;		None
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;Total ram usage:        0 bytes
  8401 ;; Hardware stack levels used:    1
  8402 ;; Hardware stack levels required when called:    7
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_init_Timer0
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text5
  8411  001166                     __ptext5:
  8412                           	opt stack 0
  8413  001166                     _Stop_Timer0:
  8414                           	opt stack 21
  8415                           
  8416                           ;Timer.c: 84: T0CONbits.TMR0ON =0;
  8417                           
  8418                           ;incstack = 0
  8419  001166  9ED5               	bcf	4053,7,c	;volatile
  8420  001168  0012               	return		;funcret
  8421  00116A                     __end_of_Stop_Timer0:
  8422                           	opt stack 0
  8423                           tblptru	equ	0xFF8
  8424                           tblptrh	equ	0xFF7
  8425                           tblptrl	equ	0xFF6
  8426                           tablat	equ	0xFF5
  8427                           intcon	equ	0xFF2
  8428                           intcon2	equ	0xFF1
  8429                           postinc0	equ	0xFEE
  8430                           plusw0	equ	0xFEB
  8431                           wreg	equ	0xFE8
  8432                           postdec1	equ	0xFE5
  8433                           fsr1l	equ	0xFE1
  8434                           plusw2	equ	0xFDB
  8435                           status	equ	0xFD8
  8436                           
  8437 ;; *************** function _cleanBuffer16bit *****************
  8438 ;; Defined at:
  8439 ;;		line 89 in file "MISC.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  data            2   14[BANK1 ] PTR unsigned int 
  8442 ;;		 -> IRRawCode(144), 
  8443 ;;  count           2   16[BANK1 ] int 
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;  i               1   21[BANK1 ] unsigned char 
  8446 ;; Return value:  Size  Location     Type
  8447 ;;		None               void
  8448 ;; Registers used:
  8449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8455 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;Total ram usage:        8 bytes
  8460 ;; Hardware stack levels used:    1
  8461 ;; Hardware stack levels required when called:    7
  8462 ;; This function calls:
  8463 ;;		Nothing
  8464 ;; This function is called by:
  8465 ;;		_init_IR
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text6
  8470  0006EC                     __ptext6:
  8471                           	opt stack 0
  8472  0006EC                     _cleanBuffer16bit:
  8473                           	opt stack 22
  8474                           
  8475                           ;MISC.c: 91: unsigned char i=0;
  8476                           
  8477                           ;incstack = 0
  8478  0006EC  0E00               	movlw	0
  8479  0006EE  0101               	movlb	1	; () banked
  8480  0006F0  6F7B               	movwf	cleanBuffer16bit@i& (0+255),b
  8481                           
  8482                           ;MISC.c: 92: for(i=0; i<count;i++)
  8483  0006F2  0E00               	movlw	0
  8484  0006F4  0101               	movlb	1	; () banked
  8485  0006F6  6F7B               	movwf	cleanBuffer16bit@i& (0+255),b
  8486  0006F8  D012               	goto	l9261
  8487  0006FA                     l9257:
  8488                           
  8489                           ; BSR set to: 1
  8490                           ;MISC.c: 93: {
  8491                           ;MISC.c: 94: data[i]= 0;
  8492  0006FA  0101               	movlb	1	; () banked
  8493  0006FC  517B               	movf	cleanBuffer16bit@i& (0+255),w,b
  8494  0006FE  0D02               	mullw	2
  8495  000700  50F3               	movf	prodl,w,c
  8496  000702  0101               	movlb	1	; () banked
  8497  000704  2574               	addwf	cleanBuffer16bit@data& (0+255),w,b
  8498  000706  6ED9               	movwf	fsr2l,c
  8499  000708  50F4               	movf	prodh,w,c
  8500  00070A  0101               	movlb	1	; () banked
  8501  00070C  2175               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
  8502  00070E  6EDA               	movwf	fsr2h,c
  8503  000710  0E00               	movlw	0
  8504  000712  6EDE               	movwf	postinc2,c
  8505  000714  0E00               	movlw	0
  8506  000716  6EDD               	movwf	postdec2,c
  8507                           
  8508                           ; BSR set to: 1
  8509  000718  0101               	movlb	1	; () banked
  8510  00071A  2B7B               	incf	cleanBuffer16bit@i& (0+255),f,b
  8511  00071C  D000               	goto	l9261
  8512  00071E                     l9261:
  8513                           
  8514                           ; BSR set to: 1
  8515  00071E  0101               	movlb	1	; () banked
  8516  000720  517B               	movf	cleanBuffer16bit@i& (0+255),w,b
  8517  000722  0101               	movlb	1	; () banked
  8518  000724  6F78               	movwf	??_cleanBuffer16bit& (0+255),b
  8519  000726  6B79               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
  8520  000728  0101               	movlb	1	; () banked
  8521  00072A  5176               	movf	cleanBuffer16bit@count& (0+255),w,b
  8522  00072C  0101               	movlb	1	; () banked
  8523  00072E  5D78               	subwf	??_cleanBuffer16bit& (0+255),w,b
  8524  000730  0101               	movlb	1	; () banked
  8525  000732  5179               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
  8526  000734  0A80               	xorlw	128
  8527  000736  0101               	movlb	1	; () banked
  8528  000738  6F7A               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
  8529  00073A  0101               	movlb	1	; () banked
  8530  00073C  5177               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
  8531  00073E  0A80               	xorlw	128
  8532  000740  0101               	movlb	1	; () banked
  8533  000742  597A               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
  8534  000744  A0D8               	btfss	status,0,c
  8535  000746  D7D9               	goto	l9257
  8536                           
  8537                           ; BSR set to: 1
  8538                           
  8539                           ; BSR set to: 1
  8540  000748  0012               	return		;funcret
  8541  00074A                     __end_of_cleanBuffer16bit:
  8542                           	opt stack 0
  8543                           tblptru	equ	0xFF8
  8544                           tblptrh	equ	0xFF7
  8545                           tblptrl	equ	0xFF6
  8546                           tablat	equ	0xFF5
  8547                           prodh	equ	0xFF4
  8548                           prodl	equ	0xFF3
  8549                           intcon	equ	0xFF2
  8550                           intcon2	equ	0xFF1
  8551                           postinc0	equ	0xFEE
  8552                           plusw0	equ	0xFEB
  8553                           wreg	equ	0xFE8
  8554                           postdec1	equ	0xFE5
  8555                           fsr1l	equ	0xFE1
  8556                           postinc2	equ	0xFDE
  8557                           postdec2	equ	0xFDD
  8558                           plusw2	equ	0xFDB
  8559                           fsr2h	equ	0xFDA
  8560                           fsr2l	equ	0xFD9
  8561                           status	equ	0xFD8
  8562                           
  8563 ;; *************** function _Start_Timer0 *****************
  8564 ;; Defined at:
  8565 ;;		line 92 in file "Timer.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;		None
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;		None
  8570 ;; Return value:  Size  Location     Type
  8571 ;;		None               void
  8572 ;; Registers used:
  8573 ;;		None
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;Total ram usage:        0 bytes
  8584 ;; Hardware stack levels used:    1
  8585 ;; Hardware stack levels required when called:    7
  8586 ;; This function calls:
  8587 ;;		Nothing
  8588 ;; This function is called by:
  8589 ;;		_init_IR
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text7
  8594  00116A                     __ptext7:
  8595                           	opt stack 0
  8596  00116A                     _Start_Timer0:
  8597                           	opt stack 22
  8598                           
  8599                           ;Timer.c: 95: T0CONbits.TMR0ON =1;
  8600                           
  8601                           ; BSR set to: 1
  8602                           ;incstack = 0
  8603  00116A  8ED5               	bsf	4053,7,c	;volatile
  8604  00116C  0012               	return		;funcret
  8605  00116E                     __end_of_Start_Timer0:
  8606                           	opt stack 0
  8607                           tblptru	equ	0xFF8
  8608                           tblptrh	equ	0xFF7
  8609                           tblptrl	equ	0xFF6
  8610                           tablat	equ	0xFF5
  8611                           prodh	equ	0xFF4
  8612                           prodl	equ	0xFF3
  8613                           intcon	equ	0xFF2
  8614                           intcon2	equ	0xFF1
  8615                           postinc0	equ	0xFEE
  8616                           plusw0	equ	0xFEB
  8617                           wreg	equ	0xFE8
  8618                           postdec1	equ	0xFE5
  8619                           fsr1l	equ	0xFE1
  8620                           postinc2	equ	0xFDE
  8621                           postdec2	equ	0xFDD
  8622                           plusw2	equ	0xFDB
  8623                           fsr2h	equ	0xFDA
  8624                           fsr2l	equ	0xFD9
  8625                           status	equ	0xFD8
  8626                           
  8627 ;; *************** function _ReadIRpin *****************
  8628 ;; Defined at:
  8629 ;;		line 95 in file "IR.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;		None
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;		None
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      unsigned char 
  8636 ;; Registers used:
  8637 ;;		wreg
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8647 ;;Total ram usage:        0 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:    7
  8650 ;; This function calls:
  8651 ;;		Nothing
  8652 ;; This function is called by:
  8653 ;;		_init_IR
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text8
  8658  0010EE                     __ptext8:
  8659                           	opt stack 0
  8660  0010EE                     _ReadIRpin:
  8661                           	opt stack 22
  8662                           
  8663                           ;IR.c: 98: if((PORTB & 0b00010000) == 0b00010000)
  8664                           
  8665                           ;incstack = 0
  8666  0010EE  A881               	btfss	3969,4,c	;volatile
  8667  0010F0  D002               	goto	l9251
  8668                           
  8669                           ;IR.c: 99: {
  8670                           ;IR.c: 100: return (1);
  8671  0010F2  0E01               	movlw	1
  8672                           
  8673                           ;IR.c: 101: }
  8674  0010F4  0012               	return	
  8675  0010F6                     l9251:
  8676                           
  8677                           ;IR.c: 102: else
  8678                           ;IR.c: 103: {
  8679                           ;IR.c: 104: return 0;
  8680  0010F6  0E00               	movlw	0
  8681  0010F8  0012               	return	
  8682  0010FA  0012               	return		;funcret
  8683  0010FC                     __end_of_ReadIRpin:
  8684                           	opt stack 0
  8685                           tblptru	equ	0xFF8
  8686                           tblptrh	equ	0xFF7
  8687                           tblptrl	equ	0xFF6
  8688                           tablat	equ	0xFF5
  8689                           prodh	equ	0xFF4
  8690                           prodl	equ	0xFF3
  8691                           intcon	equ	0xFF2
  8692                           intcon2	equ	0xFF1
  8693                           postinc0	equ	0xFEE
  8694                           plusw0	equ	0xFEB
  8695                           wreg	equ	0xFE8
  8696                           postdec1	equ	0xFE5
  8697                           fsr1l	equ	0xFE1
  8698                           postinc2	equ	0xFDE
  8699                           postdec2	equ	0xFDD
  8700                           plusw2	equ	0xFDB
  8701                           fsr2h	equ	0xFDA
  8702                           fsr2l	equ	0xFD9
  8703                           status	equ	0xFD8
  8704                           
  8705 ;; *************** function _SyncEEPROMandGLOBAL *****************
  8706 ;; Defined at:
  8707 ;;		line 260 in file "EEPROM.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;		None
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;  Temp            9   68[BANK1 ] struct EEdata
  8712 ;; Return value:  Size  Location     Type
  8713 ;;		None               void
  8714 ;; Registers used:
  8715 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8722 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;Total ram usage:        9 bytes
  8726 ;; Hardware stack levels used:    1
  8727 ;; Hardware stack levels required when called:   10
  8728 ;; This function calls:
  8729 ;;		_GetEEPROM
  8730 ;; This function is called by:
  8731 ;;		_main
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text9
  8736  000BD6                     __ptext9:
  8737                           	opt stack 0
  8738  000BD6                     _SyncEEPROMandGLOBAL:
  8739                           	opt stack 20
  8740                           
  8741                           ;EEPROM.c: 262: GBLdata Temp;
  8742                           ;EEPROM.c: 264: Temp = GetEEPROM();
  8743                           
  8744                           ;incstack = 0
  8745  000BD6  EC29  F004         	call	_GetEEPROM	;wreg free
  8746  000BDA  EE21  F0AA         	lfsr	2,SyncEEPROMandGLOBAL@Temp
  8747  000BDE  0E08               	movlw	8
  8748  000BE0                     u19181:
  8749  000BE0  CFEB FFDB          	movff	plusw0,plusw2
  8750  000BE4  06E8               	decf	wreg,f,c
  8751  000BE6  E2FC               	bc	u19181
  8752                           
  8753                           ;EEPROM.c: 266: Global.Baud = Temp.Baud;
  8754  000BE8  C1AA  F100         	movff	SyncEEPROMandGLOBAL@Temp,_Global
  8755  000BEC  C1AB  F101         	movff	SyncEEPROMandGLOBAL@Temp+1,_Global+1
  8756  000BF0  C1AC  F102         	movff	SyncEEPROMandGLOBAL@Temp+2,_Global+2
  8757  000BF4  C1AD  F103         	movff	SyncEEPROMandGLOBAL@Temp+3,_Global+3
  8758                           
  8759                           ;EEPROM.c: 267: Global.Parity = Temp.Parity;
  8760  000BF8  C1AE  F104         	movff	SyncEEPROMandGLOBAL@Temp+4,_Global+4
  8761                           
  8762                           ;EEPROM.c: 268: Global.NEC1 = Temp.NEC1;
  8763  000BFC  C1AF  F105         	movff	SyncEEPROMandGLOBAL@Temp+5,_Global+5
  8764  000C00  C1B0  F106         	movff	SyncEEPROMandGLOBAL@Temp+6,_Global+6
  8765  000C04  C1B1  F107         	movff	SyncEEPROMandGLOBAL@Temp+7,_Global+7
  8766  000C08  C1B2  F108         	movff	SyncEEPROMandGLOBAL@Temp+8,_Global+8
  8767  000C0C  0012               	return		;funcret
  8768  000C0E                     __end_of_SyncEEPROMandGLOBAL:
  8769                           	opt stack 0
  8770                           tblptru	equ	0xFF8
  8771                           tblptrh	equ	0xFF7
  8772                           tblptrl	equ	0xFF6
  8773                           tablat	equ	0xFF5
  8774                           prodh	equ	0xFF4
  8775                           prodl	equ	0xFF3
  8776                           intcon	equ	0xFF2
  8777                           intcon2	equ	0xFF1
  8778                           postinc0	equ	0xFEE
  8779                           plusw0	equ	0xFEB
  8780                           wreg	equ	0xFE8
  8781                           postdec1	equ	0xFE5
  8782                           fsr1l	equ	0xFE1
  8783                           postinc2	equ	0xFDE
  8784                           postdec2	equ	0xFDD
  8785                           plusw2	equ	0xFDB
  8786                           fsr2h	equ	0xFDA
  8787                           fsr2l	equ	0xFD9
  8788                           status	equ	0xFD8
  8789                           
  8790 ;; *************** function _GetEEPROM *****************
  8791 ;; Defined at:
  8792 ;;		line 211 in file "EEPROM.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;		None
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  Temp            9   59[BANK1 ] struct EEdata
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  9   50[BANK1 ] struct EEdata
  8799 ;; Registers used:
  8800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8806 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8809 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  8810 ;;Total ram usage:       18 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; Hardware stack levels required when called:    9
  8813 ;; This function calls:
  8814 ;;		_GetMemoryBaud
  8815 ;;		_GetMemoryChar
  8816 ;;		_GetMemoryLong
  8817 ;; This function is called by:
  8818 ;;		_SyncEEPROMandGLOBAL
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821                           
  8822                           	psect	text10
  8823  000852                     __ptext10:
  8824                           	opt stack 0
  8825  000852                     _GetEEPROM:
  8826                           	opt stack 20
  8827                           
  8828                           ;EEPROM.c: 213: GBLdata Temp;
  8829                           ;EEPROM.c: 214: Temp.Baud = GetMemoryBaud();
  8830                           
  8831                           ;incstack = 0
  8832  000852  EC10  F0AC         	call	_GetMemoryBaud	;wreg free
  8833  000856  C177  F1A1         	movff	?_GetMemoryBaud,GetEEPROM@Temp
  8834  00085A  C178  F1A2         	movff	?_GetMemoryBaud+1,GetEEPROM@Temp+1
  8835  00085E  C179  F1A3         	movff	?_GetMemoryBaud+2,GetEEPROM@Temp+2
  8836  000862  C17A  F1A4         	movff	?_GetMemoryBaud+3,GetEEPROM@Temp+3
  8837                           
  8838                           ;EEPROM.c: 215: Temp.Parity = GetMemoryChar(4);
  8839  000866  0E04               	movlw	4
  8840  000868  EC64  F007         	call	_GetMemoryChar
  8841  00086C  0101               	movlb	1	; () banked
  8842  00086E  5177               	movf	?_GetMemoryChar& (0+255),w,b
  8843  000870  0101               	movlb	1	; () banked
  8844  000872  6FA5               	movwf	(GetEEPROM@Temp+4)& (0+255),b
  8845                           
  8846                           ;EEPROM.c: 216: Temp.NEC1 = GetMemoryLong(5);
  8847  000874  0E05               	movlw	5
  8848  000876  ECED  F0A9         	call	_GetMemoryLong
  8849  00087A  C177  F1A6         	movff	?_GetMemoryLong,GetEEPROM@Temp+5
  8850  00087E  C178  F1A7         	movff	?_GetMemoryLong+1,GetEEPROM@Temp+6
  8851  000882  C179  F1A8         	movff	?_GetMemoryLong+2,GetEEPROM@Temp+7
  8852  000886  C17A  F1A9         	movff	?_GetMemoryLong+3,GetEEPROM@Temp+8
  8853                           
  8854                           ;EEPROM.c: 217: return Temp;
  8855  00088A  EE21  F0A1         	lfsr	2,GetEEPROM@Temp
  8856  00088E  EE01  F098         	lfsr	0,?_GetEEPROM
  8857  000892  0E08               	movlw	8
  8858  000894                     u18761:
  8859  000894  CFDB FFEB          	movff	plusw2,plusw0
  8860  000898  06E8               	decf	wreg,f,c
  8861  00089A  E2FC               	bc	u18761
  8862  00089C  0012               	return	
  8863  00089E  0012               	return		;funcret
  8864  0008A0                     __end_of_GetEEPROM:
  8865                           	opt stack 0
  8866                           tblptru	equ	0xFF8
  8867                           tblptrh	equ	0xFF7
  8868                           tblptrl	equ	0xFF6
  8869                           tablat	equ	0xFF5
  8870                           prodh	equ	0xFF4
  8871                           prodl	equ	0xFF3
  8872                           intcon	equ	0xFF2
  8873                           intcon2	equ	0xFF1
  8874                           postinc0	equ	0xFEE
  8875                           plusw0	equ	0xFEB
  8876                           wreg	equ	0xFE8
  8877                           postdec1	equ	0xFE5
  8878                           fsr1l	equ	0xFE1
  8879                           postinc2	equ	0xFDE
  8880                           postdec2	equ	0xFDD
  8881                           plusw2	equ	0xFDB
  8882                           fsr2h	equ	0xFDA
  8883                           fsr2l	equ	0xFD9
  8884                           status	equ	0xFD8
  8885                           
  8886 ;; *************** function _GetMemoryChar *****************
  8887 ;; Defined at:
  8888 ;;		line 380 in file "EEPROM.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  AddressFirst    1    wreg     unsigned char 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  AddressFirst    1   21[BANK1 ] unsigned char 
  8893 ;;  H               1   22[BANK1 ] unsigned char 
  8894 ;; Return value:  Size  Location     Type
  8895 ;;                  4   17[BANK1 ] unsigned long 
  8896 ;; Registers used:
  8897 ;;		wreg, status,2, status,0, cstack
  8898 ;; Tracked objects:
  8899 ;;		On entry : 0/0
  8900 ;;		On exit  : 0/0
  8901 ;;		Unchanged: 0/0
  8902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8903 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8904 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8906 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8907 ;;Total ram usage:        6 bytes
  8908 ;; Hardware stack levels used:    1
  8909 ;; Hardware stack levels required when called:    8
  8910 ;; This function calls:
  8911 ;;		_ReadEEPROM_1Byte
  8912 ;; This function is called by:
  8913 ;;		_GetEEPROM
  8914 ;;		_SetMemoryChar
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           	psect	text11
  8919  000EC8                     __ptext11:
  8920                           	opt stack 0
  8921  000EC8                     _GetMemoryChar:
  8922                           	opt stack 20
  8923                           
  8924                           ;incstack = 0
  8925                           ;GetMemoryChar@AddressFirst stored from wreg
  8926  000EC8  0101               	movlb	1	; () banked
  8927  000ECA  6F7B               	movwf	GetMemoryChar@AddressFirst& (0+255),b
  8928                           
  8929                           ; BSR set to: 1
  8930                           ;EEPROM.c: 382: unsigned char H;
  8931                           ;EEPROM.c: 384: H = ReadEEPROM_1Byte(AddressFirst);
  8932  000ECC  C17B  F174         	movff	GetMemoryChar@AddressFirst,ReadEEPROM_1Byte@address
  8933  000ED0  0101               	movlb	1	; () banked
  8934  000ED2  6B75               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  8935  000ED4  ECCD  F005         	call	_ReadEEPROM_1Byte	;wreg free
  8936  000ED8  0101               	movlb	1	; () banked
  8937  000EDA  5174               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  8938  000EDC  0101               	movlb	1	; () banked
  8939  000EDE  6F7C               	movwf	GetMemoryChar@H& (0+255),b
  8940                           
  8941                           ; BSR set to: 1
  8942                           ;EEPROM.c: 386: return H;
  8943  000EE0  0101               	movlb	1	; () banked
  8944  000EE2  517C               	movf	GetMemoryChar@H& (0+255),w,b
  8945  000EE4  0101               	movlb	1	; () banked
  8946  000EE6  6F77               	movwf	?_GetMemoryChar& (0+255),b
  8947  000EE8  6B78               	clrf	(?_GetMemoryChar+1)& (0+255),b
  8948  000EEA  6B79               	clrf	(?_GetMemoryChar+2)& (0+255),b
  8949  000EEC  6B7A               	clrf	(?_GetMemoryChar+3)& (0+255),b
  8950  000EEE  0012               	return	
  8951                           
  8952                           ; BSR set to: 1
  8953                           
  8954                           ; BSR set to: 1
  8955  000EF0  0012               	return		;funcret
  8956  000EF2                     __end_of_GetMemoryChar:
  8957                           	opt stack 0
  8958                           tblptru	equ	0xFF8
  8959                           tblptrh	equ	0xFF7
  8960                           tblptrl	equ	0xFF6
  8961                           tablat	equ	0xFF5
  8962                           prodh	equ	0xFF4
  8963                           prodl	equ	0xFF3
  8964                           intcon	equ	0xFF2
  8965                           intcon2	equ	0xFF1
  8966                           postinc0	equ	0xFEE
  8967                           plusw0	equ	0xFEB
  8968                           wreg	equ	0xFE8
  8969                           postdec1	equ	0xFE5
  8970                           fsr1l	equ	0xFE1
  8971                           postinc2	equ	0xFDE
  8972                           postdec2	equ	0xFDD
  8973                           plusw2	equ	0xFDB
  8974                           fsr2h	equ	0xFDA
  8975                           fsr2l	equ	0xFD9
  8976                           status	equ	0xFD8
  8977                           
  8978 ;; *************** function _SetEEPROM *****************
  8979 ;; Defined at:
  8980 ;;		line 225 in file "EEPROM.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  Temp            9   67[BANK1 ] struct EEdata
  8983 ;;  burn            4   76[BANK1 ] unsigned long 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  fail            4   80[BANK1 ] unsigned long 
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  4   67[BANK1 ] unsigned long 
  8988 ;; Registers used:
  8989 ;;		wreg, status,2, status,0, cstack
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8995 ;;      Params:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8998 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  8999 ;;Total ram usage:       17 bytes
  9000 ;; Hardware stack levels used:    1
  9001 ;; Hardware stack levels required when called:   10
  9002 ;; This function calls:
  9003 ;;		_SetMemoryBaud
  9004 ;;		_SetMemoryLong
  9005 ;;		_SetMemoryParity
  9006 ;; This function is called by:
  9007 ;;		_main
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           	psect	text12
  9012  0171A8                     __ptext12:
  9013                           	opt stack 0
  9014  0171A8                     _SetEEPROM:
  9015                           	opt stack 20
  9016                           
  9017                           ;EEPROM.c: 227: unsigned long fail = 0;
  9018                           
  9019                           ; BSR set to: 1
  9020                           ;incstack = 0
  9021  0171A8  0E00               	movlw	0
  9022  0171AA  0101               	movlb	1	; () banked
  9023  0171AC  6FB6               	movwf	SetEEPROM@fail& (0+255),b
  9024  0171AE  0E00               	movlw	0
  9025  0171B0  6FB7               	movwf	(SetEEPROM@fail+1)& (0+255),b
  9026  0171B2  0E00               	movlw	0
  9027  0171B4  6FB8               	movwf	(SetEEPROM@fail+2)& (0+255),b
  9028  0171B6  0E00               	movlw	0
  9029  0171B8  6FB9               	movwf	(SetEEPROM@fail+3)& (0+255),b
  9030                           
  9031                           ; BSR set to: 1
  9032                           ;EEPROM.c: 228: if(burn & 0x00000001)
  9033  0171BA  0101               	movlb	1	; () banked
  9034  0171BC  A1B2               	btfss	SetEEPROM@burn& (0+255),0,b
  9035  0171BE  D015               	goto	l15033
  9036                           
  9037                           ; BSR set to: 1
  9038                           ;EEPROM.c: 229: {
  9039                           ;EEPROM.c: 230: if(!SetMemoryBaud(Temp.Baud))
  9040  0171C0  C1A9  F197         	movff	SetEEPROM@Temp,SetMemoryBaud@Baud
  9041  0171C4  C1AA  F198         	movff	SetEEPROM@Temp+1,SetMemoryBaud@Baud+1
  9042  0171C8  C1AB  F199         	movff	SetEEPROM@Temp+2,SetMemoryBaud@Baud+2
  9043  0171CC  C1AC  F19A         	movff	SetEEPROM@Temp+3,SetMemoryBaud@Baud+3
  9044  0171D0  EC34  F0B4         	call	_SetMemoryBaud	;wreg free
  9045  0171D4  0900               	iorlw	0
  9046  0171D6  A4D8               	btfss	status,2,c
  9047  0171D8  D008               	goto	l15033
  9048                           
  9049                           ;EEPROM.c: 231: {
  9050                           ;EEPROM.c: 233: fail += 0x00000001;
  9051  0171DA  0E01               	movlw	1
  9052  0171DC  0101               	movlb	1	; () banked
  9053  0171DE  27B6               	addwf	SetEEPROM@fail& (0+255),f,b
  9054  0171E0  0E00               	movlw	0
  9055  0171E2  23B7               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
  9056  0171E4  23B8               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
  9057  0171E6  23B9               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
  9058                           
  9059                           ; BSR set to: 1
  9060  0171E8  D000               	goto	l15033
  9061  0171EA                     l15033:
  9062                           
  9063                           ;EEPROM.c: 234: }
  9064                           ;EEPROM.c: 235: }
  9065                           ;EEPROM.c: 236: if(burn & 0x00000002)
  9066  0171EA  0101               	movlb	1	; () banked
  9067  0171EC  A3B2               	btfss	SetEEPROM@burn& (0+255),1,b
  9068  0171EE  D00F               	goto	l15039
  9069                           
  9070                           ; BSR set to: 1
  9071                           ;EEPROM.c: 237: {
  9072                           ;EEPROM.c: 238: if(!SetMemoryParity(Temp.Parity))
  9073  0171F0  0101               	movlb	1	; () banked
  9074  0171F2  51AD               	movf	(SetEEPROM@Temp+4)& (0+255),w,b
  9075  0171F4  EC5A  F006         	call	_SetMemoryParity
  9076  0171F8  0900               	iorlw	0
  9077  0171FA  A4D8               	btfss	status,2,c
  9078  0171FC  D008               	goto	l15039
  9079                           
  9080                           ;EEPROM.c: 239: {
  9081                           ;EEPROM.c: 241: fail += 0x00000002;
  9082  0171FE  0E02               	movlw	2
  9083  017200  0101               	movlb	1	; () banked
  9084  017202  27B6               	addwf	SetEEPROM@fail& (0+255),f,b
  9085  017204  0E00               	movlw	0
  9086  017206  23B7               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
  9087  017208  23B8               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
  9088  01720A  23B9               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
  9089                           
  9090                           ; BSR set to: 1
  9091  01720C  D000               	goto	l15039
  9092  01720E                     l15039:
  9093                           
  9094                           ;EEPROM.c: 242: }
  9095                           ;EEPROM.c: 243: }
  9096                           ;EEPROM.c: 244: if(burn & 0x00000004)
  9097  01720E  0101               	movlb	1	; () banked
  9098  017210  A5B2               	btfss	SetEEPROM@burn& (0+255),2,b
  9099  017212  D018               	goto	l15045
  9100                           
  9101                           ; BSR set to: 1
  9102                           ;EEPROM.c: 245: {
  9103                           ;EEPROM.c: 246: if(!SetMemoryLong(Temp.NEC1,5))
  9104  017214  C1AE  F198         	movff	SetEEPROM@Temp+5,SetMemoryLong@Data
  9105  017218  C1AF  F199         	movff	SetEEPROM@Temp+6,SetMemoryLong@Data+1
  9106  01721C  C1B0  F19A         	movff	SetEEPROM@Temp+7,SetMemoryLong@Data+2
  9107  017220  C1B1  F19B         	movff	SetEEPROM@Temp+8,SetMemoryLong@Data+3
  9108  017224  0E05               	movlw	5
  9109  017226  0101               	movlb	1	; () banked
  9110  017228  6F9C               	movwf	SetMemoryLong@AddressFirst& (0+255),b
  9111  01722A  EC5D  F0B1         	call	_SetMemoryLong	;wreg free
  9112  01722E  0900               	iorlw	0
  9113  017230  A4D8               	btfss	status,2,c
  9114  017232  D008               	goto	l15045
  9115                           
  9116                           ;EEPROM.c: 247: {
  9117                           ;EEPROM.c: 249: fail += 0x00000004;
  9118  017234  0E04               	movlw	4
  9119  017236  0101               	movlb	1	; () banked
  9120  017238  27B6               	addwf	SetEEPROM@fail& (0+255),f,b
  9121  01723A  0E00               	movlw	0
  9122  01723C  23B7               	addwfc	(SetEEPROM@fail+1)& (0+255),f,b
  9123  01723E  23B8               	addwfc	(SetEEPROM@fail+2)& (0+255),f,b
  9124  017240  23B9               	addwfc	(SetEEPROM@fail+3)& (0+255),f,b
  9125                           
  9126                           ; BSR set to: 1
  9127  017242  D000               	goto	l15045
  9128  017244                     l15045:
  9129                           
  9130                           ;EEPROM.c: 250: }
  9131                           ;EEPROM.c: 251: }
  9132                           ;EEPROM.c: 252: return fail;
  9133  017244  C1B6  F1A9         	movff	SetEEPROM@fail,?_SetEEPROM
  9134  017248  C1B7  F1AA         	movff	SetEEPROM@fail+1,?_SetEEPROM+1
  9135  01724C  C1B8  F1AB         	movff	SetEEPROM@fail+2,?_SetEEPROM+2
  9136  017250  C1B9  F1AC         	movff	SetEEPROM@fail+3,?_SetEEPROM+3
  9137  017254  0012               	return	
  9138  017256  0012               	return		;funcret
  9139  017258                     __end_of_SetEEPROM:
  9140                           	opt stack 0
  9141                           tblptru	equ	0xFF8
  9142                           tblptrh	equ	0xFF7
  9143                           tblptrl	equ	0xFF6
  9144                           tablat	equ	0xFF5
  9145                           prodh	equ	0xFF4
  9146                           prodl	equ	0xFF3
  9147                           intcon	equ	0xFF2
  9148                           intcon2	equ	0xFF1
  9149                           postinc0	equ	0xFEE
  9150                           plusw0	equ	0xFEB
  9151                           wreg	equ	0xFE8
  9152                           postdec1	equ	0xFE5
  9153                           fsr1l	equ	0xFE1
  9154                           postinc2	equ	0xFDE
  9155                           postdec2	equ	0xFDD
  9156                           plusw2	equ	0xFDB
  9157                           fsr2h	equ	0xFDA
  9158                           fsr2l	equ	0xFD9
  9159                           status	equ	0xFD8
  9160                           
  9161 ;; *************** function _SetMemoryLong *****************
  9162 ;; Defined at:
  9163 ;;		line 300 in file "EEPROM.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;  Data            4   50[BANK1 ] unsigned long 
  9166 ;;  AddressFirst    1   54[BANK1 ] unsigned char 
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;  Test            4   59[BANK1 ] unsigned long 
  9169 ;;  L               1   66[BANK1 ] unsigned char 
  9170 ;;  ML              1   65[BANK1 ] unsigned char 
  9171 ;;  MH              1   64[BANK1 ] unsigned char 
  9172 ;;  H               1   63[BANK1 ] unsigned char 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  1    wreg      unsigned char 
  9175 ;; Registers used:
  9176 ;;		wreg, status,2, status,0, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9182 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;Total ram usage:       17 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; Hardware stack levels required when called:    9
  9189 ;; This function calls:
  9190 ;;		_GetMemoryLong
  9191 ;;		_WriteEEPROM_1Byte
  9192 ;; This function is called by:
  9193 ;;		_SetEEPROM
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           	psect	text13
  9198  0162BA                     __ptext13:
  9199                           	opt stack 0
  9200  0162BA                     _SetMemoryLong:
  9201                           	opt stack 20
  9202                           
  9203                           ;EEPROM.c: 302: unsigned char H;
  9204                           ;EEPROM.c: 303: unsigned char MH;
  9205                           ;EEPROM.c: 304: unsigned char ML;
  9206                           ;EEPROM.c: 305: unsigned char L;
  9207                           ;EEPROM.c: 306: unsigned long Test;
  9208                           ;EEPROM.c: 308: H = (unsigned char) ((Data & 0XFF000000) >> 24);
  9209                           
  9210                           ;incstack = 0
  9211  0162BA  0E00               	movlw	0
  9212  0162BC  0101               	movlb	1	; () banked
  9213  0162BE  1598               	andwf	SetMemoryLong@Data& (0+255),w,b
  9214  0162C0  0101               	movlb	1	; () banked
  9215  0162C2  6F9D               	movwf	??_SetMemoryLong& (0+255),b
  9216  0162C4  0E00               	movlw	0
  9217  0162C6  0101               	movlb	1	; () banked
  9218  0162C8  1599               	andwf	(SetMemoryLong@Data+1)& (0+255),w,b
  9219  0162CA  0101               	movlb	1	; () banked
  9220  0162CC  6F9E               	movwf	(??_SetMemoryLong+1)& (0+255),b
  9221  0162CE  0E00               	movlw	0
  9222  0162D0  0101               	movlb	1	; () banked
  9223  0162D2  159A               	andwf	(SetMemoryLong@Data+2)& (0+255),w,b
  9224  0162D4  0101               	movlb	1	; () banked
  9225  0162D6  6F9F               	movwf	(??_SetMemoryLong+2)& (0+255),b
  9226  0162D8  0EFF               	movlw	255
  9227  0162DA  0101               	movlb	1	; () banked
  9228  0162DC  159B               	andwf	(SetMemoryLong@Data+3)& (0+255),w,b
  9229  0162DE  0101               	movlb	1	; () banked
  9230  0162E0  6FA0               	movwf	(??_SetMemoryLong+3)& (0+255),b
  9231  0162E2  0E19               	movlw	25
  9232  0162E4  D006               	goto	u18770
  9233  0162E6                     u18775:
  9234  0162E6  0101               	movlb	1	; () banked
  9235  0162E8  90D8               	bcf	status,0,c
  9236  0162EA  33A0               	rrcf	(??_SetMemoryLong+3)& (0+255),f,b
  9237  0162EC  339F               	rrcf	(??_SetMemoryLong+2)& (0+255),f,b
  9238  0162EE  339E               	rrcf	(??_SetMemoryLong+1)& (0+255),f,b
  9239  0162F0  339D               	rrcf	??_SetMemoryLong& (0+255),f,b
  9240  0162F2                     u18770:
  9241  0162F2  2EE8               	decfsz	wreg,f,c
  9242  0162F4  D7F8               	goto	u18775
  9243  0162F6  0101               	movlb	1	; () banked
  9244  0162F8  519D               	movf	??_SetMemoryLong& (0+255),w,b
  9245  0162FA  0101               	movlb	1	; () banked
  9246  0162FC  6FA5               	movwf	SetMemoryLong@H& (0+255),b
  9247                           
  9248                           ; BSR set to: 1
  9249                           ;EEPROM.c: 309: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
  9250  0162FE  C19A  F1A6         	movff	SetMemoryLong@Data+2,SetMemoryLong@MH
  9251                           
  9252                           ; BSR set to: 1
  9253                           ;EEPROM.c: 310: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
  9254  016302  C199  F1A7         	movff	SetMemoryLong@Data+1,SetMemoryLong@ML
  9255                           
  9256                           ; BSR set to: 1
  9257                           ;EEPROM.c: 311: L = (unsigned char) (Data & 0X000000FF);
  9258  016306  C198  F1A8         	movff	SetMemoryLong@Data,SetMemoryLong@L
  9259                           
  9260                           ; BSR set to: 1
  9261                           ;EEPROM.c: 314: WriteEEPROM_1Byte(AddressFirst, H);
  9262  01630A  C19C  F174         	movff	SetMemoryLong@AddressFirst,WriteEEPROM_1Byte@address
  9263  01630E  0101               	movlb	1	; () banked
  9264  016310  6B75               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9265  016312  C1A5  F176         	movff	SetMemoryLong@H,WriteEEPROM_1Byte@data
  9266  016316  EC2F  F005         	call	_WriteEEPROM_1Byte	;wreg free
  9267                           
  9268                           ;EEPROM.c: 315: WriteEEPROM_1Byte((AddressFirst + 1), MH);
  9269  01631A  0E01               	movlw	1
  9270  01631C  0101               	movlb	1	; () banked
  9271  01631E  259C               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  9272  016320  0101               	movlb	1	; () banked
  9273  016322  6F74               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  9274  016324  0101               	movlb	1	; () banked
  9275  016326  6B75               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9276  016328  0E00               	movlw	0
  9277  01632A  2375               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  9278  01632C  C1A6  F176         	movff	SetMemoryLong@MH,WriteEEPROM_1Byte@data
  9279  016330  EC2F  F005         	call	_WriteEEPROM_1Byte	;wreg free
  9280                           
  9281                           ;EEPROM.c: 316: WriteEEPROM_1Byte((AddressFirst + 2), ML);
  9282  016334  0E02               	movlw	2
  9283  016336  0101               	movlb	1	; () banked
  9284  016338  259C               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  9285  01633A  0101               	movlb	1	; () banked
  9286  01633C  6F74               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  9287  01633E  0101               	movlb	1	; () banked
  9288  016340  6B75               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9289  016342  0E00               	movlw	0
  9290  016344  2375               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  9291  016346  C1A7  F176         	movff	SetMemoryLong@ML,WriteEEPROM_1Byte@data
  9292  01634A  EC2F  F005         	call	_WriteEEPROM_1Byte	;wreg free
  9293                           
  9294                           ;EEPROM.c: 317: WriteEEPROM_1Byte((AddressFirst + 3), L);
  9295  01634E  0E03               	movlw	3
  9296  016350  0101               	movlb	1	; () banked
  9297  016352  259C               	addwf	SetMemoryLong@AddressFirst& (0+255),w,b
  9298  016354  0101               	movlb	1	; () banked
  9299  016356  6F74               	movwf	WriteEEPROM_1Byte@address& (0+255),b
  9300  016358  0101               	movlb	1	; () banked
  9301  01635A  6B75               	clrf	(WriteEEPROM_1Byte@address+1)& (0+255),b
  9302  01635C  0E00               	movlw	0
  9303  01635E  2375               	addwfc	(WriteEEPROM_1Byte@address+1)& (0+255),f,b
  9304  016360  C1A8  F176         	movff	SetMemoryLong@L,WriteEEPROM_1Byte@data
  9305  016364  EC2F  F005         	call	_WriteEEPROM_1Byte	;wreg free
  9306                           
  9307                           ;EEPROM.c: 320: Test = GetMemoryLong(AddressFirst);
  9308  016368  0101               	movlb	1	; () banked
  9309  01636A  519C               	movf	SetMemoryLong@AddressFirst& (0+255),w,b
  9310  01636C  ECED  F0A9         	call	_GetMemoryLong
  9311  016370  C177  F1A1         	movff	?_GetMemoryLong,SetMemoryLong@Test
  9312  016374  C178  F1A2         	movff	?_GetMemoryLong+1,SetMemoryLong@Test+1
  9313  016378  C179  F1A3         	movff	?_GetMemoryLong+2,SetMemoryLong@Test+2
  9314  01637C  C17A  F1A4         	movff	?_GetMemoryLong+3,SetMemoryLong@Test+3
  9315                           
  9316                           ;EEPROM.c: 322: if(Test == Data)
  9317  016380  0101               	movlb	1	; () banked
  9318  016382  5198               	movf	SetMemoryLong@Data& (0+255),w,b
  9319  016384  0101               	movlb	1	; () banked
  9320  016386  19A1               	xorwf	SetMemoryLong@Test& (0+255),w,b
  9321  016388  E112               	bnz	l14663
  9322  01638A  0101               	movlb	1	; () banked
  9323  01638C  5199               	movf	(SetMemoryLong@Data+1)& (0+255),w,b
  9324  01638E  0101               	movlb	1	; () banked
  9325  016390  19A2               	xorwf	(SetMemoryLong@Test+1)& (0+255),w,b
  9326  016392  E10D               	bnz	l14663
  9327  016394  0101               	movlb	1	; () banked
  9328  016396  519A               	movf	(SetMemoryLong@Data+2)& (0+255),w,b
  9329  016398  0101               	movlb	1	; () banked
  9330  01639A  19A3               	xorwf	(SetMemoryLong@Test+2)& (0+255),w,b
  9331  01639C  E108               	bnz	l14663
  9332  01639E  0101               	movlb	1	; () banked
  9333  0163A0  519B               	movf	(SetMemoryLong@Data+3)& (0+255),w,b
  9334  0163A2  0101               	movlb	1	; () banked
  9335  0163A4  19A4               	xorwf	(SetMemoryLong@Test+3)& (0+255),w,b
  9336  0163A6  A4D8               	btfss	status,2,c
  9337  0163A8  D002               	goto	l14663
  9338                           
  9339                           ; BSR set to: 1
  9340                           ;EEPROM.c: 323: {
  9341                           ;EEPROM.c: 324: return 1;
  9342  0163AA  0E01               	movlw	1
  9343                           
  9344                           ; BSR set to: 1
  9345  0163AC  0012               	return	
  9346  0163AE                     l14663:
  9347                           
  9348                           ; BSR set to: 1
  9349                           ;EEPROM.c: 325: }
  9350                           ;EEPROM.c: 326: return 0;
  9351  0163AE  0E00               	movlw	0
  9352  0163B0  0012               	return	
  9353                           
  9354                           ; BSR set to: 1
  9355                           
  9356                           ; BSR set to: 1
  9357  0163B2  0012               	return		;funcret
  9358  0163B4                     __end_of_SetMemoryLong:
  9359                           	opt stack 0
  9360                           tblptru	equ	0xFF8
  9361                           tblptrh	equ	0xFF7
  9362                           tblptrl	equ	0xFF6
  9363                           tablat	equ	0xFF5
  9364                           prodh	equ	0xFF4
  9365                           prodl	equ	0xFF3
  9366                           intcon	equ	0xFF2
  9367                           intcon2	equ	0xFF1
  9368                           postinc0	equ	0xFEE
  9369                           plusw0	equ	0xFEB
  9370                           wreg	equ	0xFE8
  9371                           postdec1	equ	0xFE5
  9372                           fsr1l	equ	0xFE1
  9373                           postinc2	equ	0xFDE
  9374                           postdec2	equ	0xFDD
  9375                           plusw2	equ	0xFDB
  9376                           fsr2h	equ	0xFDA
  9377                           fsr2l	equ	0xFD9
  9378                           status	equ	0xFD8
  9379                           
  9380 ;; *************** function _GetMemoryLong *****************
  9381 ;; Defined at:
  9382 ;;		line 277 in file "EEPROM.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;  AddressFirst    1    wreg     unsigned char 
  9385 ;; Auto vars:     Size  Location     Type
  9386 ;;  AddressFirst    1   49[BANK1 ] unsigned char 
  9387 ;;  temp            4   41[BANK1 ] unsigned long 
  9388 ;;  L               1   48[BANK1 ] unsigned char 
  9389 ;;  ML              1   47[BANK1 ] unsigned char 
  9390 ;;  MH              1   46[BANK1 ] unsigned char 
  9391 ;;  H               1   45[BANK1 ] unsigned char 
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  4   17[BANK1 ] unsigned long 
  9394 ;; Registers used:
  9395 ;;		wreg, status,2, status,0, cstack
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9401 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9402 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  9403 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  9404 ;;      Totals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
  9405 ;;Total ram usage:       33 bytes
  9406 ;; Hardware stack levels used:    1
  9407 ;; Hardware stack levels required when called:    8
  9408 ;; This function calls:
  9409 ;;		_ReadEEPROM_1Byte
  9410 ;; This function is called by:
  9411 ;;		_GetEEPROM
  9412 ;;		_SetMemoryLong
  9413 ;; This function uses a non-reentrant model
  9414 ;;
  9415                           
  9416                           	psect	text14
  9417  0153DA                     __ptext14:
  9418                           	opt stack 0
  9419  0153DA                     _GetMemoryLong:
  9420                           	opt stack 20
  9421                           
  9422                           ; BSR set to: 1
  9423                           ;incstack = 0
  9424                           ;GetMemoryLong@AddressFirst stored from wreg
  9425  0153DA  0101               	movlb	1	; () banked
  9426  0153DC  6F97               	movwf	GetMemoryLong@AddressFirst& (0+255),b
  9427                           
  9428                           ; BSR set to: 1
  9429                           ;EEPROM.c: 279: unsigned char H;
  9430                           ;EEPROM.c: 280: unsigned char MH;
  9431                           ;EEPROM.c: 281: unsigned char ML;
  9432                           ;EEPROM.c: 282: unsigned char L;
  9433                           ;EEPROM.c: 283: unsigned long temp =0;
  9434  0153DE  0E00               	movlw	0
  9435  0153E0  0101               	movlb	1	; () banked
  9436  0153E2  6F8F               	movwf	GetMemoryLong@temp& (0+255),b
  9437  0153E4  0E00               	movlw	0
  9438  0153E6  6F90               	movwf	(GetMemoryLong@temp+1)& (0+255),b
  9439  0153E8  0E00               	movlw	0
  9440  0153EA  6F91               	movwf	(GetMemoryLong@temp+2)& (0+255),b
  9441  0153EC  0E00               	movlw	0
  9442  0153EE  6F92               	movwf	(GetMemoryLong@temp+3)& (0+255),b
  9443                           
  9444                           ; BSR set to: 1
  9445                           ;EEPROM.c: 285: H = ReadEEPROM_1Byte(AddressFirst);
  9446  0153F0  C197  F174         	movff	GetMemoryLong@AddressFirst,ReadEEPROM_1Byte@address
  9447  0153F4  0101               	movlb	1	; () banked
  9448  0153F6  6B75               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9449  0153F8  ECCD  F005         	call	_ReadEEPROM_1Byte	;wreg free
  9450  0153FC  0101               	movlb	1	; () banked
  9451  0153FE  5174               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9452  015400  0101               	movlb	1	; () banked
  9453  015402  6F93               	movwf	GetMemoryLong@H& (0+255),b
  9454                           
  9455                           ; BSR set to: 1
  9456                           ;EEPROM.c: 286: MH = ReadEEPROM_1Byte(AddressFirst + 1);
  9457  015404  0E01               	movlw	1
  9458  015406  0101               	movlb	1	; () banked
  9459  015408  2597               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
  9460  01540A  0101               	movlb	1	; () banked
  9461  01540C  6F74               	movwf	ReadEEPROM_1Byte@address& (0+255),b
  9462  01540E  0101               	movlb	1	; () banked
  9463  015410  6B75               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9464  015412  0E00               	movlw	0
  9465  015414  2375               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
  9466  015416  ECCD  F005         	call	_ReadEEPROM_1Byte	;wreg free
  9467  01541A  0101               	movlb	1	; () banked
  9468  01541C  5174               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9469  01541E  0101               	movlb	1	; () banked
  9470  015420  6F94               	movwf	GetMemoryLong@MH& (0+255),b
  9471                           
  9472                           ; BSR set to: 1
  9473                           ;EEPROM.c: 287: ML = ReadEEPROM_1Byte(AddressFirst + 2);
  9474  015422  0E02               	movlw	2
  9475  015424  0101               	movlb	1	; () banked
  9476  015426  2597               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
  9477  015428  0101               	movlb	1	; () banked
  9478  01542A  6F74               	movwf	ReadEEPROM_1Byte@address& (0+255),b
  9479  01542C  0101               	movlb	1	; () banked
  9480  01542E  6B75               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9481  015430  0E00               	movlw	0
  9482  015432  2375               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
  9483  015434  ECCD  F005         	call	_ReadEEPROM_1Byte	;wreg free
  9484  015438  0101               	movlb	1	; () banked
  9485  01543A  5174               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9486  01543C  0101               	movlb	1	; () banked
  9487  01543E  6F95               	movwf	GetMemoryLong@ML& (0+255),b
  9488                           
  9489                           ; BSR set to: 1
  9490                           ;EEPROM.c: 288: L = ReadEEPROM_1Byte(AddressFirst + 3);
  9491  015440  0E03               	movlw	3
  9492  015442  0101               	movlb	1	; () banked
  9493  015444  2597               	addwf	GetMemoryLong@AddressFirst& (0+255),w,b
  9494  015446  0101               	movlb	1	; () banked
  9495  015448  6F74               	movwf	ReadEEPROM_1Byte@address& (0+255),b
  9496  01544A  0101               	movlb	1	; () banked
  9497  01544C  6B75               	clrf	(ReadEEPROM_1Byte@address+1)& (0+255),b
  9498  01544E  0E00               	movlw	0
  9499  015450  2375               	addwfc	(ReadEEPROM_1Byte@address+1)& (0+255),f,b
  9500  015452  ECCD  F005         	call	_ReadEEPROM_1Byte	;wreg free
  9501  015456  0101               	movlb	1	; () banked
  9502  015458  5174               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
  9503  01545A  0101               	movlb	1	; () banked
  9504  01545C  6F96               	movwf	GetMemoryLong@L& (0+255),b
  9505                           
  9506                           ; BSR set to: 1
  9507                           ;EEPROM.c: 290: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
  9508                           ;EEPROM.c: 291: + ((unsigned long)ML << 8) + (unsigned long)L);
  9509  01545E  C195  F17B         	movff	GetMemoryLong@ML,??_GetMemoryLong
  9510  015462  0101               	movlb	1	; () banked
  9511  015464  6B7C               	clrf	(??_GetMemoryLong+1)& (0+255),b
  9512  015466  6B7D               	clrf	(??_GetMemoryLong+2)& (0+255),b
  9513  015468  6B7E               	clrf	(??_GetMemoryLong+3)& (0+255),b
  9514  01546A  C17D  F17E         	movff	??_GetMemoryLong+2,??_GetMemoryLong+3
  9515  01546E  C17C  F17D         	movff	??_GetMemoryLong+1,??_GetMemoryLong+2
  9516  015472  C17B  F17C         	movff	??_GetMemoryLong,??_GetMemoryLong+1
  9517  015476  0101               	movlb	1	; () banked
  9518  015478  6B7B               	clrf	??_GetMemoryLong& (0+255),b
  9519  01547A  C194  F17F         	movff	GetMemoryLong@MH,??_GetMemoryLong+4
  9520  01547E  0101               	movlb	1	; () banked
  9521  015480  6B80               	clrf	(??_GetMemoryLong+5)& (0+255),b
  9522  015482  6B81               	clrf	(??_GetMemoryLong+6)& (0+255),b
  9523  015484  6B82               	clrf	(??_GetMemoryLong+7)& (0+255),b
  9524  015486  C180  F182         	movff	??_GetMemoryLong+5,??_GetMemoryLong+7
  9525  01548A  C17F  F181         	movff	??_GetMemoryLong+4,??_GetMemoryLong+6
  9526  01548E  0101               	movlb	1	; () banked
  9527  015490  6B80               	clrf	(??_GetMemoryLong+5)& (0+255),b
  9528  015492  6B7F               	clrf	(??_GetMemoryLong+4)& (0+255),b
  9529  015494  C193  F183         	movff	GetMemoryLong@H,??_GetMemoryLong+8
  9530  015498  0101               	movlb	1	; () banked
  9531  01549A  6B84               	clrf	(??_GetMemoryLong+9)& (0+255),b
  9532  01549C  6B85               	clrf	(??_GetMemoryLong+10)& (0+255),b
  9533  01549E  6B86               	clrf	(??_GetMemoryLong+11)& (0+255),b
  9534  0154A0  C183  F186         	movff	??_GetMemoryLong+8,??_GetMemoryLong+11
  9535  0154A4  0101               	movlb	1	; () banked
  9536  0154A6  6B85               	clrf	(??_GetMemoryLong+10)& (0+255),b
  9537  0154A8  6B84               	clrf	(??_GetMemoryLong+9)& (0+255),b
  9538  0154AA  6B83               	clrf	(??_GetMemoryLong+8)& (0+255),b
  9539  0154AC  0101               	movlb	1	; () banked
  9540  0154AE  517F               	movf	(??_GetMemoryLong+4)& (0+255),w,b
  9541  0154B0  0101               	movlb	1	; () banked
  9542  0154B2  2583               	addwf	(??_GetMemoryLong+8)& (0+255),w,b
  9543  0154B4  0101               	movlb	1	; () banked
  9544  0154B6  6F87               	movwf	(??_GetMemoryLong+12)& (0+255),b
  9545  0154B8  0101               	movlb	1	; () banked
  9546  0154BA  5180               	movf	(??_GetMemoryLong+5)& (0+255),w,b
  9547  0154BC  0101               	movlb	1	; () banked
  9548  0154BE  2184               	addwfc	(??_GetMemoryLong+9)& (0+255),w,b
  9549  0154C0  0101               	movlb	1	; () banked
  9550  0154C2  6F88               	movwf	(??_GetMemoryLong+13)& (0+255),b
  9551  0154C4  0101               	movlb	1	; () banked
  9552  0154C6  5181               	movf	(??_GetMemoryLong+6)& (0+255),w,b
  9553  0154C8  0101               	movlb	1	; () banked
  9554  0154CA  2185               	addwfc	(??_GetMemoryLong+10)& (0+255),w,b
  9555  0154CC  0101               	movlb	1	; () banked
  9556  0154CE  6F89               	movwf	(??_GetMemoryLong+14)& (0+255),b
  9557  0154D0  0101               	movlb	1	; () banked
  9558  0154D2  5182               	movf	(??_GetMemoryLong+7)& (0+255),w,b
  9559  0154D4  0101               	movlb	1	; () banked
  9560  0154D6  2186               	addwfc	(??_GetMemoryLong+11)& (0+255),w,b
  9561  0154D8  0101               	movlb	1	; () banked
  9562  0154DA  6F8A               	movwf	(??_GetMemoryLong+15)& (0+255),b
  9563  0154DC  0101               	movlb	1	; () banked
  9564  0154DE  517B               	movf	??_GetMemoryLong& (0+255),w,b
  9565  0154E0  0101               	movlb	1	; () banked
  9566  0154E2  2587               	addwf	(??_GetMemoryLong+12)& (0+255),w,b
  9567  0154E4  0101               	movlb	1	; () banked
  9568  0154E6  6F8B               	movwf	(??_GetMemoryLong+16)& (0+255),b
  9569  0154E8  0101               	movlb	1	; () banked
  9570  0154EA  517C               	movf	(??_GetMemoryLong+1)& (0+255),w,b
  9571  0154EC  0101               	movlb	1	; () banked
  9572  0154EE  2188               	addwfc	(??_GetMemoryLong+13)& (0+255),w,b
  9573  0154F0  0101               	movlb	1	; () banked
  9574  0154F2  6F8C               	movwf	(??_GetMemoryLong+17)& (0+255),b
  9575  0154F4  0101               	movlb	1	; () banked
  9576  0154F6  517D               	movf	(??_GetMemoryLong+2)& (0+255),w,b
  9577  0154F8  0101               	movlb	1	; () banked
  9578  0154FA  2189               	addwfc	(??_GetMemoryLong+14)& (0+255),w,b
  9579  0154FC  0101               	movlb	1	; () banked
  9580  0154FE  6F8D               	movwf	(??_GetMemoryLong+18)& (0+255),b
  9581  015500  0101               	movlb	1	; () banked
  9582  015502  517E               	movf	(??_GetMemoryLong+3)& (0+255),w,b
  9583  015504  0101               	movlb	1	; () banked
  9584  015506  218A               	addwfc	(??_GetMemoryLong+15)& (0+255),w,b
  9585  015508  0101               	movlb	1	; () banked
  9586  01550A  6F8E               	movwf	(??_GetMemoryLong+19)& (0+255),b
  9587  01550C  0101               	movlb	1	; () banked
  9588  01550E  5196               	movf	GetMemoryLong@L& (0+255),w,b
  9589  015510  0101               	movlb	1	; () banked
  9590  015512  258B               	addwf	(??_GetMemoryLong+16)& (0+255),w,b
  9591  015514  0101               	movlb	1	; () banked
  9592  015516  6F8F               	movwf	GetMemoryLong@temp& (0+255),b
  9593  015518  0E00               	movlw	0
  9594  01551A  0101               	movlb	1	; () banked
  9595  01551C  218C               	addwfc	(??_GetMemoryLong+17)& (0+255),w,b
  9596  01551E  0101               	movlb	1	; () banked
  9597  015520  6F90               	movwf	(GetMemoryLong@temp+1)& (0+255),b
  9598  015522  0E00               	movlw	0
  9599  015524  0101               	movlb	1	; () banked
  9600  015526  218D               	addwfc	(??_GetMemoryLong+18)& (0+255),w,b
  9601  015528  0101               	movlb	1	; () banked
  9602  01552A  6F91               	movwf	(GetMemoryLong@temp+2)& (0+255),b
  9603  01552C  0E00               	movlw	0
  9604  01552E  0101               	movlb	1	; () banked
  9605  015530  218E               	addwfc	(??_GetMemoryLong+19)& (0+255),w,b
  9606  015532  0101               	movlb	1	; () banked
  9607  015534  6F92               	movwf	(GetMemoryLong@temp+3)& (0+255),b
  9608                           
  9609                           ; BSR set to: 1
  9610                           ;EEPROM.c: 292: return temp;
  9611  015536  C18F  F177         	movff	GetMemoryLong@temp,?_GetMemoryLong
  9612  01553A  C190  F178         	movff	GetMemoryLong@temp+1,?_GetMemoryLong+1
  9613  01553E  C191  F179         	movff	GetMemoryLong@temp+2,?_GetMemoryLong+2
  9614  015542  C192  F17A         	movff	GetMemoryLong@temp+3,?_GetMemoryLong+3
  9615  015546  0012               	return	
  9616                           
  9617                           ; BSR set to: 1
  9618                           
  9619                           ; BSR set to: 1
  9620  015548  0012               	return		;funcret
  9621  01554A                     __end_of_GetMemoryLong:
  9622                           	opt stack 0
  9623                           tblptru	equ	0xFF8
  9624                           tblptrh	equ	0xFF7
  9625                           tblptrl	equ	0xFF6
  9626                           tablat	equ	0xFF5
  9627                           prodh	equ	0xFF4
  9628                           prodl	equ	0xFF3
  9629                           intcon	equ	0xFF2
  9630                           intcon2	equ	0xFF1
  9631                           postinc0	equ	0xFEE
  9632                           plusw0	equ	0xFEB
  9633                           wreg	equ	0xFE8
  9634                           postdec1	equ	0xFE5
  9635                           fsr1l	equ	0xFE1
  9636                           postinc2	equ	0xFDE
  9637                           postdec2	equ	0xFDD
  9638                           plusw2	equ	0xFDB
  9639                           fsr2h	equ	0xFDA
  9640                           fsr2l	equ	0xFD9
  9641                           status	equ	0xFD8
  9642                           
  9643 ;; *************** function _RTC_INIT *****************
  9644 ;; Defined at:
  9645 ;;		line 57 in file "RTC.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;		None
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;		None
  9650 ;; Return value:  Size  Location     Type
  9651 ;;		None               void
  9652 ;; Registers used:
  9653 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9663 ;;Total ram usage:        0 bytes
  9664 ;; Hardware stack levels used:    1
  9665 ;; Hardware stack levels required when called:   11
  9666 ;; This function calls:
  9667 ;;		_InternalADC_Read
  9668 ;;		_RTC_Clock_Enable
  9669 ;;		_RTC_TIME_NONMilitary
  9670 ;; This function is called by:
  9671 ;;		_main
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text15
  9676  0010DE                     __ptext15:
  9677                           	opt stack 0
  9678  0010DE                     _RTC_INIT:
  9679                           	opt stack 19
  9680                           
  9681                           ;RTC.c: 59: RTC_Clock_Enable();
  9682                           
  9683                           ; BSR set to: 1
  9684                           ;incstack = 0
  9685  0010DE  EC9E  F004         	call	_RTC_Clock_Enable	;wreg free
  9686                           
  9687                           ;RTC.c: 60: RTC_TIME_NONMilitary();
  9688  0010E2  EC76  F002         	call	_RTC_TIME_NONMilitary	;wreg free
  9689                           
  9690                           ;RTC.c: 61: InternalADC_Read(2);
  9691  0010E6  0E02               	movlw	2
  9692  0010E8  ECAB  F002         	call	_InternalADC_Read
  9693  0010EC  0012               	return		;funcret
  9694  0010EE                     __end_of_RTC_INIT:
  9695                           	opt stack 0
  9696                           tblptru	equ	0xFF8
  9697                           tblptrh	equ	0xFF7
  9698                           tblptrl	equ	0xFF6
  9699                           tablat	equ	0xFF5
  9700                           prodh	equ	0xFF4
  9701                           prodl	equ	0xFF3
  9702                           intcon	equ	0xFF2
  9703                           intcon2	equ	0xFF1
  9704                           postinc0	equ	0xFEE
  9705                           plusw0	equ	0xFEB
  9706                           wreg	equ	0xFE8
  9707                           postdec1	equ	0xFE5
  9708                           fsr1l	equ	0xFE1
  9709                           postinc2	equ	0xFDE
  9710                           postdec2	equ	0xFDD
  9711                           plusw2	equ	0xFDB
  9712                           fsr2h	equ	0xFDA
  9713                           fsr2l	equ	0xFD9
  9714                           status	equ	0xFD8
  9715                           
  9716 ;; *************** function _RTC_TIME_NONMilitary *****************
  9717 ;; Defined at:
  9718 ;;		line 89 in file "RTC.c"
  9719 ;; Parameters:    Size  Location     Type
  9720 ;;		None
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  temphours       2   27[BANK1 ] int 
  9723 ;;  Error           2   25[BANK1 ] int 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;		None               void
  9726 ;; Registers used:
  9727 ;;		wreg, status,2, status,0, cstack
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;Total ram usage:        5 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; Hardware stack levels required when called:   10
  9740 ;; This function calls:
  9741 ;;		_I2C_Read_At_Address
  9742 ;;		_I2C_Write_At_Address
  9743 ;;		_ResetI2C
  9744 ;; This function is called by:
  9745 ;;		_RTC_INIT
  9746 ;; This function uses a non-reentrant model
  9747 ;;
  9748                           
  9749                           	psect	text16
  9750  0004EC                     __ptext16:
  9751                           	opt stack 0
  9752  0004EC                     _RTC_TIME_NONMilitary:
  9753                           	opt stack 19
  9754                           
  9755                           ;RTC.c: 91: int temphours = 0;
  9756                           
  9757                           ;incstack = 0
  9758  0004EC  0E00               	movlw	0
  9759  0004EE  0101               	movlb	1	; () banked
  9760  0004F0  6F82               	movwf	(RTC_TIME_NONMilitary@temphours+1)& (0+255),b
  9761  0004F2  0E00               	movlw	0
  9762  0004F4  6F81               	movwf	RTC_TIME_NONMilitary@temphours& (0+255),b
  9763                           
  9764                           ; BSR set to: 1
  9765                           ;RTC.c: 92: int Error = -1;
  9766  0004F6  0101               	movlb	1	; () banked
  9767  0004F8  697F               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  9768  0004FA  6980               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  9769                           
  9770                           ; BSR set to: 1
  9771                           ;RTC.c: 94: temphours = I2C_Read_At_Address(0b1101000, 0x02);
  9772  0004FC  0E02               	movlw	2
  9773  0004FE  0101               	movlb	1	; () banked
  9774  000500  6F76               	movwf	I2C_Read_At_Address@Register& (0+255),b
  9775  000502  0E68               	movlw	104
  9776  000504  EC0D  F0AE         	call	_I2C_Read_At_Address
  9777  000508  C176  F181         	movff	?_I2C_Read_At_Address,RTC_TIME_NONMilitary@temphours
  9778  00050C  C177  F182         	movff	?_I2C_Read_At_Address+1,RTC_TIME_NONMilitary@temphours+1
  9779                           
  9780                           ;RTC.c: 95: if(temphours >= 0)
  9781  000510  0101               	movlb	1	; () banked
  9782  000512  BF82               	btfsc	(RTC_TIME_NONMilitary@temphours+1)& (0+255),7,b
  9783  000514  D015               	goto	l1199
  9784                           
  9785                           ; BSR set to: 1
  9786                           ;RTC.c: 96: {
  9787                           ;RTC.c: 97: if((temphours & 0x40) == 0)
  9788  000516  0101               	movlb	1	; () banked
  9789  000518  BD81               	btfsc	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  9790  00051A  D016               	goto	l14629
  9791                           
  9792                           ; BSR set to: 1
  9793                           ;RTC.c: 98: {
  9794                           ;RTC.c: 99: temphours |= 0x40;
  9795  00051C  0101               	movlb	1	; () banked
  9796  00051E  8D81               	bsf	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  9797                           
  9798                           ; BSR set to: 1
  9799                           ;RTC.c: 100: Error = I2C_Write_At_Address( 0b1101000, 0x02, temphours );
  9800  000520  0E02               	movlw	2
  9801  000522  0101               	movlb	1	; () banked
  9802  000524  6F76               	movwf	I2C_Write_At_Address@Register& (0+255),b
  9803  000526  C181  F177         	movff	RTC_TIME_NONMilitary@temphours,I2C_Write_At_Address@data
  9804  00052A  0E68               	movlw	104
  9805  00052C  EC79  F0B5         	call	_I2C_Write_At_Address
  9806  000530  0101               	movlb	1	; () banked
  9807  000532  6F7E               	movwf	??_RTC_TIME_NONMilitary& (0+255),b
  9808  000534  0101               	movlb	1	; () banked
  9809  000536  517E               	movf	??_RTC_TIME_NONMilitary& (0+255),w,b
  9810  000538  0101               	movlb	1	; () banked
  9811  00053A  6F7F               	movwf	RTC_TIME_NONMilitary@Error& (0+255),b
  9812  00053C  6B80               	clrf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  9813                           
  9814                           ; BSR set to: 1
  9815                           ;RTC.c: 101: }
  9816                           ;RTC.c: 102: }
  9817  00053E  D004               	goto	l14629
  9818  000540                     l1199:
  9819                           
  9820                           ; BSR set to: 1
  9821                           ;RTC.c: 103: else
  9822                           ;RTC.c: 104: {
  9823                           ;RTC.c: 105: Error = -1;
  9824  000540  0101               	movlb	1	; () banked
  9825  000542  697F               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  9826  000544  6980               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  9827  000546  D000               	goto	l14629
  9828  000548                     l14629:
  9829                           
  9830                           ; BSR set to: 1
  9831                           ;RTC.c: 106: }
  9832                           ;RTC.c: 107: if(Error < 0 )
  9833  000548  0101               	movlb	1	; () banked
  9834  00054A  AF80               	btfss	(RTC_TIME_NONMilitary@Error+1)& (0+255),7,b
  9835  00054C  0012               	return	
  9836                           
  9837                           ; BSR set to: 1
  9838                           ;RTC.c: 108: {
  9839                           ;RTC.c: 109: ResetI2C();
  9840  00054E  EC8E  F007         	call	_ResetI2C	;wreg free
  9841  000552  0012               	return	
  9842  000554  0012               	return		;funcret
  9843  000556                     __end_of_RTC_TIME_NONMilitary:
  9844                           	opt stack 0
  9845                           tblptru	equ	0xFF8
  9846                           tblptrh	equ	0xFF7
  9847                           tblptrl	equ	0xFF6
  9848                           tablat	equ	0xFF5
  9849                           prodh	equ	0xFF4
  9850                           prodl	equ	0xFF3
  9851                           intcon	equ	0xFF2
  9852                           intcon2	equ	0xFF1
  9853                           postinc0	equ	0xFEE
  9854                           plusw0	equ	0xFEB
  9855                           wreg	equ	0xFE8
  9856                           postdec1	equ	0xFE5
  9857                           fsr1l	equ	0xFE1
  9858                           postinc2	equ	0xFDE
  9859                           postdec2	equ	0xFDD
  9860                           plusw2	equ	0xFDB
  9861                           fsr2h	equ	0xFDA
  9862                           fsr2l	equ	0xFD9
  9863                           status	equ	0xFD8
  9864                           
  9865 ;; *************** function _RTC_Clock_Enable *****************
  9866 ;; Defined at:
  9867 ;;		line 70 in file "RTC.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;		None
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;  tempSeconds     2   24[BANK1 ] int 
  9872 ;;  Error           1   26[BANK1 ] char 
  9873 ;; Return value:  Size  Location     Type
  9874 ;;		None               void
  9875 ;; Registers used:
  9876 ;;		wreg, status,2, status,0, cstack
  9877 ;; Tracked objects:
  9878 ;;		On entry : 0/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;Total ram usage:        3 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; Hardware stack levels required when called:   10
  9889 ;; This function calls:
  9890 ;;		_I2C_Read_At_Address
  9891 ;;		_I2C_Write_At_Address
  9892 ;;		_ResetI2C
  9893 ;; This function is called by:
  9894 ;;		_RTC_INIT
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           	psect	text17
  9899  00093C                     __ptext17:
  9900                           	opt stack 0
  9901  00093C                     _RTC_Clock_Enable:
  9902                           	opt stack 19
  9903                           
  9904                           ;RTC.c: 72: int tempSeconds =0;
  9905                           
  9906                           ;incstack = 0
  9907  00093C  0E00               	movlw	0
  9908  00093E  0101               	movlb	1	; () banked
  9909  000940  6F7F               	movwf	(RTC_Clock_Enable@tempSeconds+1)& (0+255),b
  9910  000942  0E00               	movlw	0
  9911  000944  6F7E               	movwf	RTC_Clock_Enable@tempSeconds& (0+255),b
  9912                           
  9913                           ;RTC.c: 73: signed char Error=0;
  9914  000946  0E00               	movlw	0
  9915  000948  0101               	movlb	1	; () banked
  9916  00094A  6F80               	movwf	RTC_Clock_Enable@Error& (0+255),b
  9917                           
  9918                           ; BSR set to: 1
  9919                           ;RTC.c: 75: tempSeconds = I2C_Read_At_Address(0b1101000, 0x00);
  9920  00094C  0E00               	movlw	0
  9921  00094E  0101               	movlb	1	; () banked
  9922  000950  6F76               	movwf	I2C_Read_At_Address@Register& (0+255),b
  9923  000952  0E68               	movlw	104
  9924  000954  EC0D  F0AE         	call	_I2C_Read_At_Address
  9925  000958  C176  F17E         	movff	?_I2C_Read_At_Address,RTC_Clock_Enable@tempSeconds
  9926  00095C  C177  F17F         	movff	?_I2C_Read_At_Address+1,RTC_Clock_Enable@tempSeconds+1
  9927                           
  9928                           ;RTC.c: 76: Error = I2C_Write_At_Address( 0b1101000, 0x00, (tempSeconds & 0x7F) );
  9929  000960  0E00               	movlw	0
  9930  000962  0101               	movlb	1	; () banked
  9931  000964  6F76               	movwf	I2C_Write_At_Address@Register& (0+255),b
  9932  000966  0101               	movlb	1	; () banked
  9933  000968  517E               	movf	RTC_Clock_Enable@tempSeconds& (0+255),w,b
  9934  00096A  0B7F               	andlw	127
  9935  00096C  0101               	movlb	1	; () banked
  9936  00096E  6F77               	movwf	I2C_Write_At_Address@data& (0+255),b
  9937  000970  0E68               	movlw	104
  9938  000972  EC79  F0B5         	call	_I2C_Write_At_Address
  9939  000976  0101               	movlb	1	; () banked
  9940  000978  6F80               	movwf	RTC_Clock_Enable@Error& (0+255),b
  9941                           
  9942                           ; BSR set to: 1
  9943                           ;RTC.c: 78: if(Error < 0 )
  9944  00097A  0101               	movlb	1	; () banked
  9945  00097C  AF80               	btfss	RTC_Clock_Enable@Error& (0+255),7,b
  9946  00097E  0012               	return	
  9947                           
  9948                           ; BSR set to: 1
  9949                           ;RTC.c: 79: {
  9950                           ;RTC.c: 80: ResetI2C();
  9951  000980  EC8E  F007         	call	_ResetI2C	;wreg free
  9952  000984  0012               	return	
  9953  000986  0012               	return		;funcret
  9954  000988                     __end_of_RTC_Clock_Enable:
  9955                           	opt stack 0
  9956                           tblptru	equ	0xFF8
  9957                           tblptrh	equ	0xFF7
  9958                           tblptrl	equ	0xFF6
  9959                           tablat	equ	0xFF5
  9960                           prodh	equ	0xFF4
  9961                           prodl	equ	0xFF3
  9962                           intcon	equ	0xFF2
  9963                           intcon2	equ	0xFF1
  9964                           postinc0	equ	0xFEE
  9965                           plusw0	equ	0xFEB
  9966                           wreg	equ	0xFE8
  9967                           postdec1	equ	0xFE5
  9968                           fsr1l	equ	0xFE1
  9969                           postinc2	equ	0xFDE
  9970                           postdec2	equ	0xFDD
  9971                           plusw2	equ	0xFDB
  9972                           fsr2h	equ	0xFDA
  9973                           fsr2l	equ	0xFD9
  9974                           status	equ	0xFD8
  9975                           
  9976 ;; *************** function _I2C_Read_At_Address *****************
  9977 ;; Defined at:
  9978 ;;		line 224 in file "I2C.c"
  9979 ;; Parameters:    Size  Location     Type
  9980 ;;  I2Caddress      1    wreg     unsigned char 
  9981 ;;  Register        1   16[BANK1 ] unsigned char 
  9982 ;; Auto vars:     Size  Location     Type
  9983 ;;  I2Caddress      1   18[BANK1 ] unsigned char 
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  2   16[BANK1 ] int 
  9986 ;; Registers used:
  9987 ;;		wreg, status,2, status,0, cstack
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9993 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9994 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9996 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;Total ram usage:        3 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; Hardware stack levels required when called:    9
 10000 ;; This function calls:
 10001 ;;		_IdleI2C
 10002 ;;		_WriteI2C
 10003 ;; This function is called by:
 10004 ;;		_RTC_Clock_Enable
 10005 ;;		_RTC_TIME_NONMilitary
 10006 ;;		_RTC_Clock_Disable
 10007 ;;		_READ_RTC_SECONDS
 10008 ;; This function uses a non-reentrant model
 10009 ;;
 10010                           
 10011                           	psect	text18
 10012  015C1A                     __ptext18:
 10013                           	opt stack 0
 10014  015C1A                     _I2C_Read_At_Address:
 10015                           	opt stack 19
 10016                           
 10017                           ;incstack = 0
 10018                           ;I2C_Read_At_Address@I2Caddress stored from wreg
 10019  015C1A  0101               	movlb	1	; () banked
 10020  015C1C  6F78               	movwf	I2C_Read_At_Address@I2Caddress& (0+255),b
 10021                           
 10022                           ; BSR set to: 1
 10023                           ;I2C.c: 226: IdleI2C();
 10024  015C1E  EC54  F008         	call	_IdleI2C	;wreg free
 10025                           
 10026                           ;I2C.c: 227: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 10027  015C22  80C5               	bsf	4037,0,c	;volatile
 10028  015C24  D000               	goto	l1406
 10029  015C26                     l1406:
 10030  015C26  A0C5               	btfss	4037,0,c	;volatile
 10031  015C28  D002               	goto	l1409
 10032  015C2A  D7FD               	goto	l1406
 10033                           
 10034                           ;I2C.c: 228: while ( SSPCON2bits.SEN );
 10035  015C2C  D000               	goto	l1409
 10036  015C2E                     l1409:
 10037  015C2E  B0C5               	btfsc	4037,0,c	;volatile
 10038  015C30  D7FE               	goto	l1409
 10039                           
 10040                           ;I2C.c: 229: if ( PIR2bits.BCLIF )
 10041  015C32  A6A1               	btfss	4001,3,c	;volatile
 10042  015C34  D005               	goto	l13247
 10043  015C36                     l13243:
 10044                           
 10045                           ;I2C.c: 230: {
 10046                           ;I2C.c: 231: return ( -1 );
 10047  015C36  0101               	movlb	1	; () banked
 10048  015C38  6976               	setf	?_I2C_Read_At_Address& (0+255),b
 10049  015C3A  6977               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
 10050  015C3C  0012               	return	
 10051                           
 10052                           ; BSR set to: 1
 10053                           ;I2C.c: 232: }
 10054  015C3E  D07F               	goto	l1414
 10055  015C40                     l13247:
 10056                           
 10057                           ;I2C.c: 233: else
 10058                           ;I2C.c: 234: {
 10059                           ;I2C.c: 235: if ( WriteI2C( (I2Caddress << 1 ) & 0xFE ) )
 10060  015C40  0101               	movlb	1	; () banked
 10061  015C42  5178               	movf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
 10062  015C44  2578               	addwf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
 10063  015C46  0BFE               	andlw	254
 10064  015C48  EC90  F0BF         	call	_WriteI2C
 10065  015C4C  0900               	iorlw	0
 10066  015C4E  B4D8               	btfsc	status,2,c
 10067  015C50  D00A               	goto	l1415
 10068                           
 10069                           ;I2C.c: 236: {
 10070                           ;I2C.c: 237: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10071  015C52  84C5               	bsf	4037,2,c	;volatile
 10072  015C54  D000               	goto	l1416
 10073  015C56                     l1416:
 10074  015C56  B4C5               	btfsc	4037,2,c	;volatile
 10075  015C58  D7FE               	goto	l1416
 10076                           
 10077                           ;I2C.c: 238: return ( -3 );
 10078  015C5A  0EFF               	movlw	255
 10079  015C5C  0101               	movlb	1	; () banked
 10080  015C5E  6F77               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
 10081  015C60  0EFD               	movlw	253
 10082  015C62  6F76               	movwf	?_I2C_Read_At_Address& (0+255),b
 10083                           
 10084                           ; BSR set to: 1
 10085  015C64  0012               	return	
 10086  015C66                     l1415:
 10087                           
 10088                           ;I2C.c: 239: }
 10089                           ;I2C.c: 242: if ( !SSPCON2bits.ACKSTAT )
 10090  015C66  BCC5               	btfsc	4037,6,c	;volatile
 10091  015C68  D060               	goto	l1419
 10092                           
 10093                           ;I2C.c: 243: {
 10094                           ;I2C.c: 244: if ( WriteI2C( Register ) )
 10095  015C6A  0101               	movlb	1	; () banked
 10096  015C6C  5176               	movf	I2C_Read_At_Address@Register& (0+255),w,b
 10097  015C6E  EC90  F0BF         	call	_WriteI2C
 10098  015C72  0900               	iorlw	0
 10099  015C74  B4D8               	btfsc	status,2,c
 10100  015C76  D00A               	goto	l1420
 10101                           
 10102                           ;I2C.c: 245: {
 10103                           ;I2C.c: 246: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10104  015C78  84C5               	bsf	4037,2,c	;volatile
 10105  015C7A  D000               	goto	l1421
 10106  015C7C                     l1421:
 10107  015C7C  B4C5               	btfsc	4037,2,c	;volatile
 10108  015C7E  D7FE               	goto	l1421
 10109                           
 10110                           ;I2C.c: 247: return ( -3 );
 10111  015C80  0EFF               	movlw	255
 10112  015C82  0101               	movlb	1	; () banked
 10113  015C84  6F77               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
 10114  015C86  0EFD               	movlw	253
 10115  015C88  6F76               	movwf	?_I2C_Read_At_Address& (0+255),b
 10116                           
 10117                           ; BSR set to: 1
 10118  015C8A  0012               	return	
 10119  015C8C                     l1420:
 10120                           
 10121                           ;I2C.c: 248: }
 10122                           ;I2C.c: 251: if ( !SSPCON2bits.ACKSTAT )
 10123  015C8C  BCC5               	btfsc	4037,6,c	;volatile
 10124  015C8E  D046               	goto	l1424
 10125                           
 10126                           ;I2C.c: 252: {
 10127                           ;I2C.c: 253: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
 10128  015C90  82C5               	bsf	4037,1,c	;volatile
 10129  015C92  D000               	goto	l1425
 10130  015C94                     l1425:
 10131  015C94  A2C5               	btfss	4037,1,c	;volatile
 10132  015C96  D002               	goto	l1428
 10133  015C98  D7FD               	goto	l1425
 10134                           
 10135                           ;I2C.c: 254: while ( SSPCON2bits.RSEN );
 10136  015C9A  D000               	goto	l1428
 10137  015C9C                     l1428:
 10138  015C9C  B2C5               	btfsc	4037,1,c	;volatile
 10139  015C9E  D7FE               	goto	l1428
 10140                           
 10141                           ;I2C.c: 255: if ( PIR2bits.BCLIF )
 10142  015CA0  A6A1               	btfss	4001,3,c	;volatile
 10143  015CA2  D004               	goto	l13267
 10144                           
 10145                           ;I2C.c: 256: {
 10146                           ;I2C.c: 257: return ( -1 );
 10147  015CA4  0101               	movlb	1	; () banked
 10148  015CA6  6976               	setf	?_I2C_Read_At_Address& (0+255),b
 10149  015CA8  6977               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
 10150  015CAA  0012               	return	
 10151  015CAC                     l13267:
 10152                           
 10153                           ;I2C.c: 258: }
 10154                           ;I2C.c: 260: if ( WriteI2C( (I2Caddress << 1) + 1 ) )
 10155  015CAC  80D8               	bsf	status,0,c
 10156  015CAE  0101               	movlb	1	; () banked
 10157  015CB0  3578               	rlcf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
 10158  015CB2  EC90  F0BF         	call	_WriteI2C
 10159  015CB6  0900               	iorlw	0
 10160  015CB8  B4D8               	btfsc	status,2,c
 10161  015CBA  D00A               	goto	l1432
 10162                           
 10163                           ;I2C.c: 261: {
 10164                           ;I2C.c: 262: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10165  015CBC  84C5               	bsf	4037,2,c	;volatile
 10166  015CBE  D000               	goto	l1433
 10167  015CC0                     l1433:
 10168  015CC0  B4C5               	btfsc	4037,2,c	;volatile
 10169  015CC2  D7FE               	goto	l1433
 10170                           
 10171                           ;I2C.c: 263: return ( -3 );
 10172  015CC4  0EFF               	movlw	255
 10173  015CC6  0101               	movlb	1	; () banked
 10174  015CC8  6F77               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
 10175  015CCA  0EFD               	movlw	253
 10176  015CCC  6F76               	movwf	?_I2C_Read_At_Address& (0+255),b
 10177                           
 10178                           ; BSR set to: 1
 10179  015CCE  0012               	return	
 10180  015CD0                     l1432:
 10181                           
 10182                           ;I2C.c: 264: }
 10183                           ;I2C.c: 267: if ( !SSPCON2bits.ACKSTAT )
 10184  015CD0  BCC5               	btfsc	4037,6,c	;volatile
 10185  015CD2  D019               	goto	l1436
 10186                           
 10187                           ;I2C.c: 268: {
 10188                           ;I2C.c: 269: SSPCON2bits.RCEN = 1;
 10189  015CD4  86C5               	bsf	4037,3,c	;volatile
 10190                           
 10191                           ;I2C.c: 270: while ( SSPCON2bits.RCEN );
 10192  015CD6  D000               	goto	l1437
 10193  015CD8                     l1437:
 10194  015CD8  B6C5               	btfsc	4037,3,c	;volatile
 10195  015CDA  D7FE               	goto	l1437
 10196                           
 10197                           ;I2C.c: 271: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
 10198  015CDC  8AC5               	bsf	4037,5,c	;volatile
 10199  015CDE  88C5               	bsf	4037,4,c	;volatile
 10200  015CE0  D000               	goto	l1440
 10201  015CE2                     l1440:
 10202  015CE2  A8C5               	btfss	4037,4,c	;volatile
 10203  015CE4  D002               	goto	l1443
 10204  015CE6  D7FD               	goto	l1440
 10205                           
 10206                           ;I2C.c: 272: while ( SSPCON2bits.ACKEN );
 10207  015CE8  D000               	goto	l1443
 10208  015CEA                     l1443:
 10209  015CEA  B8C5               	btfsc	4037,4,c	;volatile
 10210  015CEC  D7FE               	goto	l1443
 10211                           
 10212                           ;I2C.c: 273: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10213  015CEE  84C5               	bsf	4037,2,c	;volatile
 10214  015CF0  D000               	goto	l1446
 10215  015CF2                     l1446:
 10216  015CF2  A4C5               	btfss	4037,2,c	;volatile
 10217  015CF4  D002               	goto	l1449
 10218  015CF6  D7FD               	goto	l1446
 10219                           
 10220                           ;I2C.c: 274: while ( SSPCON2bits.PEN );
 10221  015CF8  D000               	goto	l1449
 10222  015CFA                     l1449:
 10223  015CFA  B4C5               	btfsc	4037,2,c	;volatile
 10224  015CFC  D7FE               	goto	l1449
 10225                           
 10226                           ;I2C.c: 275: if ( PIR2bits.BCLIF )
 10227  015CFE  A6A1               	btfss	4001,3,c	;volatile
 10228  015D00  D01E               	goto	l1414
 10229  015D02  D799               	goto	l13243
 10230                           
 10231                           ; BSR set to: 1
 10232                           ;I2C.c: 278: }
 10233                           ;I2C.c: 279: }
 10234                           
 10235                           ;I2C.c: 276: {
 10236                           ;I2C.c: 277: return ( -1 );
 10237  015D04  D01C               	goto	l1414
 10238  015D06                     l1436:
 10239                           
 10240                           ;I2C.c: 280: else
 10241                           ;I2C.c: 281: {
 10242                           ;I2C.c: 282: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10243  015D06  84C5               	bsf	4037,2,c	;volatile
 10244  015D08  D000               	goto	l1454
 10245  015D0A                     l1454:
 10246  015D0A  B4C5               	btfsc	4037,2,c	;volatile
 10247  015D0C  D7FE               	goto	l1454
 10248  015D0E                     l13279:
 10249                           
 10250                           ;I2C.c: 283: return ( -2 );
 10251  015D0E  0EFF               	movlw	255
 10252  015D10  0101               	movlb	1	; () banked
 10253  015D12  6F77               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
 10254  015D14  0EFE               	movlw	254
 10255  015D16  6F76               	movwf	?_I2C_Read_At_Address& (0+255),b
 10256                           
 10257                           ; BSR set to: 1
 10258  015D18  0012               	return	
 10259                           
 10260                           ; BSR set to: 1
 10261                           ;I2C.c: 284: }
 10262                           ;I2C.c: 286: }
 10263  015D1A  D011               	goto	l1414
 10264  015D1C                     l1424:
 10265                           
 10266                           ;I2C.c: 287: else
 10267                           ;I2C.c: 288: {
 10268                           ;I2C.c: 289: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10269  015D1C  84C5               	bsf	4037,2,c	;volatile
 10270  015D1E  D000               	goto	l1458
 10271  015D20                     l1458:
 10272  015D20  B4C5               	btfsc	4037,2,c	;volatile
 10273  015D22  D7FE               	goto	l1458
 10274  015D24  D7F4               	goto	l13279
 10275                           
 10276                           ; BSR set to: 1
 10277                           
 10278                           ;I2C.c: 290: return ( -2 );
 10279  015D26  0012               	return	
 10280                           
 10281                           ; BSR set to: 1
 10282                           ;I2C.c: 291: }
 10283                           ;I2C.c: 292: }
 10284  015D28  D00A               	goto	l1414
 10285  015D2A                     l1419:
 10286                           
 10287                           ;I2C.c: 293: else
 10288                           ;I2C.c: 294: {
 10289                           ;I2C.c: 295: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 10290  015D2A  84C5               	bsf	4037,2,c	;volatile
 10291  015D2C  D000               	goto	l1462
 10292  015D2E                     l1462:
 10293  015D2E  B4C5               	btfsc	4037,2,c	;volatile
 10294  015D30  D7FE               	goto	l1462
 10295                           
 10296                           ;I2C.c: 296: return ( -2 );
 10297  015D32  0EFF               	movlw	255
 10298  015D34  0101               	movlb	1	; () banked
 10299  015D36  6F77               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
 10300  015D38  0EFE               	movlw	254
 10301  015D3A  6F76               	movwf	?_I2C_Read_At_Address& (0+255),b
 10302                           
 10303                           ; BSR set to: 1
 10304  015D3C  0012               	return	
 10305  015D3E                     l1414:
 10306                           
 10307                           ;I2C.c: 297: }
 10308                           ;I2C.c: 298: }
 10309                           ;I2C.c: 299: return ( (unsigned int) SSPBUF );
 10310  015D3E  CFC9 F176          	movff	4041,?_I2C_Read_At_Address	;volatile
 10311  015D42  0101               	movlb	1	; () banked
 10312  015D44  6B77               	clrf	(?_I2C_Read_At_Address+1)& (0+255),b
 10313                           
 10314                           ; BSR set to: 1
 10315  015D46  0012               	return		;funcret
 10316  015D48                     __end_of_I2C_Read_At_Address:
 10317                           	opt stack 0
 10318                           tblptru	equ	0xFF8
 10319                           tblptrh	equ	0xFF7
 10320                           tblptrl	equ	0xFF6
 10321                           tablat	equ	0xFF5
 10322                           prodh	equ	0xFF4
 10323                           prodl	equ	0xFF3
 10324                           intcon	equ	0xFF2
 10325                           intcon2	equ	0xFF1
 10326                           postinc0	equ	0xFEE
 10327                           plusw0	equ	0xFEB
 10328                           wreg	equ	0xFE8
 10329                           postdec1	equ	0xFE5
 10330                           fsr1l	equ	0xFE1
 10331                           postinc2	equ	0xFDE
 10332                           postdec2	equ	0xFDD
 10333                           plusw2	equ	0xFDB
 10334                           fsr2h	equ	0xFDA
 10335                           fsr2l	equ	0xFD9
 10336                           status	equ	0xFD8
 10337                           
 10338 ;; *************** function _PWM_init *****************
 10339 ;; Defined at:
 10340 ;;		line 54 in file "PWM.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;		None
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;		None
 10345 ;; Return value:  Size  Location     Type
 10346 ;;		None               void
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;Total ram usage:        0 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; Hardware stack levels required when called:   10
 10361 ;; This function calls:
 10362 ;;		_SetDuty
 10363 ;;		_SetFreq
 10364 ;; This function is called by:
 10365 ;;		_main
 10366 ;; This function uses a non-reentrant model
 10367 ;;
 10368                           
 10369                           	psect	text19
 10370  000DB2                     __ptext19:
 10371                           	opt stack 0
 10372  000DB2                     _PWM_init:
 10373                           	opt stack 20
 10374                           
 10375                           ;PWM.c: 57: SetFreq(60);
 10376                           
 10377                           ; BSR set to: 1
 10378                           ;incstack = 0
 10379  000DB2  0E00               	movlw	0
 10380  000DB4  0101               	movlb	1	; () banked
 10381  000DB6  6F89               	movwf	(SetFreq@freq+1)& (0+255),b
 10382  000DB8  0E3C               	movlw	60
 10383  000DBA  6F88               	movwf	SetFreq@freq& (0+255),b
 10384  000DBC  EC00  F004         	call	_SetFreq	;wreg free
 10385                           
 10386                           ;PWM.c: 58: SetDuty(0);
 10387  000DC0  0E00               	movlw	0
 10388  000DC2  EC22  F0B8         	call	_SetDuty
 10389                           
 10390                           ;PWM.c: 59: T2CON &= ~0x03;
 10391  000DC6  0EFC               	movlw	252
 10392  000DC8  16CA               	andwf	4042,f,c	;volatile
 10393                           
 10394                           ;PWM.c: 60: if(16 == 1)
 10395  000DCA  D005               	goto	l14961
 10396                           
 10397                           ;PWM.c: 61: {
 10398                           ;PWM.c: 62: __nop();
 10399  000DCC  F000               	nop	
 10400                           
 10401                           ;PWM.c: 63: }
 10402  000DCE  D005               	goto	l1007
 10403                           
 10404                           ;PWM.c: 64: else if (16 == 4)
 10405  000DD0  D002               	goto	l14961
 10406                           
 10407                           ;PWM.c: 65: {
 10408                           ;PWM.c: 66: T2CON |= 0x01;
 10409  000DD2  80CA               	bsf	4042,0,c	;volatile
 10410                           
 10411                           ;PWM.c: 67: }
 10412  000DD4  D002               	goto	l1007
 10413  000DD6                     l14961:
 10414                           
 10415                           ;PWM.c: 68: else
 10416                           ;PWM.c: 69: {
 10417                           ;PWM.c: 70: T2CON |= 0x10;
 10418  000DD6  88CA               	bsf	4042,4,c	;volatile
 10419  000DD8  D000               	goto	l1007
 10420  000DDA                     l1007:
 10421                           
 10422                           ;PWM.c: 71: }
 10423                           ;PWM.c: 72: T2CON |= 0b00000100;
 10424  000DDA  84CA               	bsf	4042,2,c	;volatile
 10425                           
 10426                           ;PWM.c: 73: CCP1CON |= 0b00001100;
 10427  000DDC  0E0C               	movlw	12
 10428  000DDE  12BD               	iorwf	4029,f,c	;volatile
 10429  000DE0  0012               	return		;funcret
 10430  000DE2                     __end_of_PWM_init:
 10431                           	opt stack 0
 10432                           tblptru	equ	0xFF8
 10433                           tblptrh	equ	0xFF7
 10434                           tblptrl	equ	0xFF6
 10435                           tablat	equ	0xFF5
 10436                           prodh	equ	0xFF4
 10437                           prodl	equ	0xFF3
 10438                           intcon	equ	0xFF2
 10439                           intcon2	equ	0xFF1
 10440                           postinc0	equ	0xFEE
 10441                           plusw0	equ	0xFEB
 10442                           wreg	equ	0xFE8
 10443                           postdec1	equ	0xFE5
 10444                           fsr1l	equ	0xFE1
 10445                           postinc2	equ	0xFDE
 10446                           postdec2	equ	0xFDD
 10447                           plusw2	equ	0xFDB
 10448                           fsr2h	equ	0xFDA
 10449                           fsr2l	equ	0xFD9
 10450                           status	equ	0xFD8
 10451                           
 10452 ;; *************** function _SetFreq *****************
 10453 ;; Defined at:
 10454 ;;		line 144 in file "PWM.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;  freq            2   34[BANK1 ] unsigned int 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  temp            1   36[BANK1 ] unsigned char 
 10459 ;; Return value:  Size  Location     Type
 10460 ;;		None               void
 10461 ;; Registers used:
 10462 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10468 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10471 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10472 ;;Total ram usage:        3 bytes
 10473 ;; Hardware stack levels used:    1
 10474 ;; Hardware stack levels required when called:    8
 10475 ;; This function calls:
 10476 ;;		___aldiv
 10477 ;;		___wmul
 10478 ;; This function is called by:
 10479 ;;		_PWM_init
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483                           	psect	text20
 10484  000800                     __ptext20:
 10485                           	opt stack 0
 10486  000800                     _SetFreq:
 10487                           	opt stack 21
 10488                           
 10489                           ;PWM.c: 147: unsigned char temp =0;
 10490                           
 10491                           ;incstack = 0
 10492  000800  0E00               	movlw	0
 10493  000802  0101               	movlb	1	; () banked
 10494  000804  6F8A               	movwf	SetFreq@temp& (0+255),b
 10495                           
 10496                           ; BSR set to: 1
 10497                           ;PWM.c: 148: temp = (unsigned char)(((40960000L >> 2)/(freq*1000))-1);
 10498  000806  0E00               	movlw	0
 10499  000808  0101               	movlb	1	; () banked
 10500  00080A  6F7A               	movwf	___aldiv@dividend& (0+255),b
 10501  00080C  0E40               	movlw	64
 10502  00080E  6F7B               	movwf	(___aldiv@dividend+1)& (0+255),b
 10503  000810  0E9C               	movlw	156
 10504  000812  6F7C               	movwf	(___aldiv@dividend+2)& (0+255),b
 10505  000814  0E00               	movlw	0
 10506  000816  6F7D               	movwf	(___aldiv@dividend+3)& (0+255),b
 10507  000818  C188  F174         	movff	SetFreq@freq,___wmul@multiplier
 10508  00081C  C189  F175         	movff	SetFreq@freq+1,___wmul@multiplier+1
 10509  000820  0E03               	movlw	3
 10510  000822  0101               	movlb	1	; () banked
 10511  000824  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10512  000826  0EE8               	movlw	232
 10513  000828  6F76               	movwf	___wmul@multiplicand& (0+255),b
 10514  00082A  EC07  F006         	call	___wmul	;wreg free
 10515  00082E  0101               	movlb	1	; () banked
 10516  000830  C174  F17E         	movff	?___wmul,___aldiv@divisor
 10517  000834  0101               	movlb	1	; () banked
 10518  000836  C175  F17F         	movff	?___wmul+1,___aldiv@divisor+1
 10519  00083A  0101               	movlb	1	; () banked
 10520  00083C  6B80               	clrf	(___aldiv@divisor+2)& (0+255),b
 10521  00083E  6B81               	clrf	(___aldiv@divisor+3)& (0+255),b
 10522  000840  ECA4  F0AE         	call	___aldiv	;wreg free
 10523  000844  0101               	movlb	1	; () banked
 10524  000846  057A               	decf	?___aldiv& (0+255),w,b
 10525  000848  0101               	movlb	1	; () banked
 10526  00084A  6F8A               	movwf	SetFreq@temp& (0+255),b
 10527                           
 10528                           ; BSR set to: 1
 10529                           ;PWM.c: 149: PR2 = temp;
 10530  00084C  C18A  FFCB         	movff	SetFreq@temp,4043	;volatile
 10531                           
 10532                           ; BSR set to: 1
 10533  000850  0012               	return		;funcret
 10534  000852                     __end_of_SetFreq:
 10535                           	opt stack 0
 10536                           tblptru	equ	0xFF8
 10537                           tblptrh	equ	0xFF7
 10538                           tblptrl	equ	0xFF6
 10539                           tablat	equ	0xFF5
 10540                           prodh	equ	0xFF4
 10541                           prodl	equ	0xFF3
 10542                           intcon	equ	0xFF2
 10543                           intcon2	equ	0xFF1
 10544                           postinc0	equ	0xFEE
 10545                           plusw0	equ	0xFEB
 10546                           wreg	equ	0xFE8
 10547                           postdec1	equ	0xFE5
 10548                           fsr1l	equ	0xFE1
 10549                           postinc2	equ	0xFDE
 10550                           postdec2	equ	0xFDD
 10551                           plusw2	equ	0xFDB
 10552                           fsr2h	equ	0xFDA
 10553                           fsr2l	equ	0xFD9
 10554                           status	equ	0xFD8
 10555                           
 10556 ;; *************** function ___aldiv *****************
 10557 ;; Defined at:
 10558 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
 10559 ;; Parameters:    Size  Location     Type
 10560 ;;  dividend        4   20[BANK1 ] long 
 10561 ;;  divisor         4   24[BANK1 ] long 
 10562 ;; Auto vars:     Size  Location     Type
 10563 ;;  quotient        4   30[BANK1 ] long 
 10564 ;;  sign            1   29[BANK1 ] unsigned char 
 10565 ;;  counter         1   28[BANK1 ] unsigned char 
 10566 ;; Return value:  Size  Location     Type
 10567 ;;                  4   20[BANK1 ] long 
 10568 ;; Registers used:
 10569 ;;		wreg, status,2, status,0
 10570 ;; Tracked objects:
 10571 ;;		On entry : 0/0
 10572 ;;		On exit  : 0/0
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10575 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10576 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10578 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 10579 ;;Total ram usage:       14 bytes
 10580 ;; Hardware stack levels used:    1
 10581 ;; Hardware stack levels required when called:    7
 10582 ;; This function calls:
 10583 ;;		Nothing
 10584 ;; This function is called by:
 10585 ;;		_SetFreq
 10586 ;; This function uses a non-reentrant model
 10587 ;;
 10588                           
 10589                           	psect	text21
 10590  015D48                     __ptext21:
 10591                           	opt stack 0
 10592  015D48                     ___aldiv:
 10593                           	opt stack 21
 10594                           
 10595                           ; BSR set to: 1
 10596                           ;incstack = 0
 10597  015D48  0E00               	movlw	0
 10598  015D4A  0101               	movlb	1	; () banked
 10599  015D4C  6F83               	movwf	___aldiv@sign& (0+255),b
 10600                           
 10601                           ; BSR set to: 1
 10602  015D4E  0101               	movlb	1	; () banked
 10603  015D50  AF81               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 10604  015D52  D00D               	goto	l8819
 10605                           
 10606                           ; BSR set to: 1
 10607  015D54  0101               	movlb	1	; () banked
 10608  015D56  1F81               	comf	(___aldiv@divisor+3)& (0+255),f,b
 10609  015D58  1F80               	comf	(___aldiv@divisor+2)& (0+255),f,b
 10610  015D5A  1F7F               	comf	(___aldiv@divisor+1)& (0+255),f,b
 10611  015D5C  6D7E               	negf	___aldiv@divisor& (0+255),b
 10612  015D5E  0E00               	movlw	0
 10613  015D60  237F               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 10614  015D62  2380               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 10615  015D64  2381               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 10616                           
 10617                           ; BSR set to: 1
 10618  015D66  0E01               	movlw	1
 10619  015D68  0101               	movlb	1	; () banked
 10620  015D6A  6F83               	movwf	___aldiv@sign& (0+255),b
 10621  015D6C  D000               	goto	l8819
 10622  015D6E                     l8819:
 10623                           
 10624                           ; BSR set to: 1
 10625  015D6E  0101               	movlb	1	; () banked
 10626  015D70  AF7D               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 10627  015D72  D00D               	goto	l8825
 10628                           
 10629                           ; BSR set to: 1
 10630  015D74  0101               	movlb	1	; () banked
 10631  015D76  1F7D               	comf	(___aldiv@dividend+3)& (0+255),f,b
 10632  015D78  1F7C               	comf	(___aldiv@dividend+2)& (0+255),f,b
 10633  015D7A  1F7B               	comf	(___aldiv@dividend+1)& (0+255),f,b
 10634  015D7C  6D7A               	negf	___aldiv@dividend& (0+255),b
 10635  015D7E  0E00               	movlw	0
 10636  015D80  237B               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 10637  015D82  237C               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 10638  015D84  237D               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 10639                           
 10640                           ; BSR set to: 1
 10641  015D86  0E01               	movlw	1
 10642  015D88  0101               	movlb	1	; () banked
 10643  015D8A  1B83               	xorwf	___aldiv@sign& (0+255),f,b
 10644  015D8C  D000               	goto	l8825
 10645  015D8E                     l8825:
 10646                           
 10647                           ; BSR set to: 1
 10648  015D8E  0E00               	movlw	0
 10649  015D90  0101               	movlb	1	; () banked
 10650  015D92  6F84               	movwf	___aldiv@quotient& (0+255),b
 10651  015D94  0E00               	movlw	0
 10652  015D96  6F85               	movwf	(___aldiv@quotient+1)& (0+255),b
 10653  015D98  0E00               	movlw	0
 10654  015D9A  6F86               	movwf	(___aldiv@quotient+2)& (0+255),b
 10655  015D9C  0E00               	movlw	0
 10656  015D9E  6F87               	movwf	(___aldiv@quotient+3)& (0+255),b
 10657                           
 10658                           ; BSR set to: 1
 10659  015DA0  0101               	movlb	1	; () banked
 10660  015DA2  517E               	movf	___aldiv@divisor& (0+255),w,b
 10661  015DA4  0101               	movlb	1	; () banked
 10662  015DA6  117F               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 10663  015DA8  0101               	movlb	1	; () banked
 10664  015DAA  1180               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 10665  015DAC  0101               	movlb	1	; () banked
 10666  015DAE  1181               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 10667  015DB0  B4D8               	btfsc	status,2,c
 10668  015DB2  D047               	goto	l8847
 10669                           
 10670                           ; BSR set to: 1
 10671  015DB4  0E01               	movlw	1
 10672  015DB6  0101               	movlb	1	; () banked
 10673  015DB8  6F82               	movwf	___aldiv@counter& (0+255),b
 10674  015DBA  D009               	goto	l8833
 10675  015DBC                     l8831:
 10676                           
 10677                           ; BSR set to: 1
 10678  015DBC  0101               	movlb	1	; () banked
 10679  015DBE  90D8               	bcf	status,0,c
 10680  015DC0  377E               	rlcf	___aldiv@divisor& (0+255),f,b
 10681  015DC2  377F               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 10682  015DC4  3780               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 10683  015DC6  3781               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 10684  015DC8  0101               	movlb	1	; () banked
 10685  015DCA  2B82               	incf	___aldiv@counter& (0+255),f,b
 10686  015DCC  D000               	goto	l8833
 10687  015DCE                     l8833:
 10688                           
 10689                           ; BSR set to: 1
 10690  015DCE  0101               	movlb	1	; () banked
 10691  015DD0  BF81               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
 10692  015DD2  D002               	goto	l8835
 10693  015DD4  D7F3               	goto	l8831
 10694                           
 10695                           ; BSR set to: 1
 10696  015DD6  D000               	goto	l8835
 10697  015DD8                     l8835:
 10698                           
 10699                           ; BSR set to: 1
 10700  015DD8  0101               	movlb	1	; () banked
 10701  015DDA  90D8               	bcf	status,0,c
 10702  015DDC  3784               	rlcf	___aldiv@quotient& (0+255),f,b
 10703  015DDE  3785               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 10704  015DE0  3786               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 10705  015DE2  3787               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 10706                           
 10707                           ; BSR set to: 1
 10708  015DE4  0101               	movlb	1	; () banked
 10709  015DE6  517E               	movf	___aldiv@divisor& (0+255),w,b
 10710  015DE8  0101               	movlb	1	; () banked
 10711  015DEA  5D7A               	subwf	___aldiv@dividend& (0+255),w,b
 10712  015DEC  0101               	movlb	1	; () banked
 10713  015DEE  517F               	movf	(___aldiv@divisor+1)& (0+255),w,b
 10714  015DF0  0101               	movlb	1	; () banked
 10715  015DF2  597B               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 10716  015DF4  0101               	movlb	1	; () banked
 10717  015DF6  5180               	movf	(___aldiv@divisor+2)& (0+255),w,b
 10718  015DF8  0101               	movlb	1	; () banked
 10719  015DFA  597C               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 10720  015DFC  0101               	movlb	1	; () banked
 10721  015DFE  5181               	movf	(___aldiv@divisor+3)& (0+255),w,b
 10722  015E00  0101               	movlb	1	; () banked
 10723  015E02  597D               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 10724  015E04  A0D8               	btfss	status,0,c
 10725  015E06  D013               	goto	l8843
 10726                           
 10727                           ; BSR set to: 1
 10728  015E08  0101               	movlb	1	; () banked
 10729  015E0A  517E               	movf	___aldiv@divisor& (0+255),w,b
 10730  015E0C  0101               	movlb	1	; () banked
 10731  015E0E  5F7A               	subwf	___aldiv@dividend& (0+255),f,b
 10732  015E10  0101               	movlb	1	; () banked
 10733  015E12  517F               	movf	(___aldiv@divisor+1)& (0+255),w,b
 10734  015E14  0101               	movlb	1	; () banked
 10735  015E16  5B7B               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 10736  015E18  0101               	movlb	1	; () banked
 10737  015E1A  5180               	movf	(___aldiv@divisor+2)& (0+255),w,b
 10738  015E1C  0101               	movlb	1	; () banked
 10739  015E1E  5B7C               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 10740  015E20  0101               	movlb	1	; () banked
 10741  015E22  5181               	movf	(___aldiv@divisor+3)& (0+255),w,b
 10742  015E24  0101               	movlb	1	; () banked
 10743  015E26  5B7D               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 10744                           
 10745                           ; BSR set to: 1
 10746  015E28  0101               	movlb	1	; () banked
 10747  015E2A  8184               	bsf	___aldiv@quotient& (0+255),0,b
 10748  015E2C  D000               	goto	l8843
 10749  015E2E                     l8843:
 10750                           
 10751                           ; BSR set to: 1
 10752  015E2E  0101               	movlb	1	; () banked
 10753  015E30  90D8               	bcf	status,0,c
 10754  015E32  3381               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 10755  015E34  3380               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 10756  015E36  337F               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 10757  015E38  337E               	rrcf	___aldiv@divisor& (0+255),f,b
 10758                           
 10759                           ; BSR set to: 1
 10760  015E3A  0101               	movlb	1	; () banked
 10761  015E3C  2F82               	decfsz	___aldiv@counter& (0+255),f,b
 10762  015E3E  D7CC               	goto	l8835
 10763                           
 10764                           ; BSR set to: 1
 10765  015E40  D000               	goto	l8847
 10766  015E42                     l8847:
 10767                           
 10768                           ; BSR set to: 1
 10769  015E42  0101               	movlb	1	; () banked
 10770  015E44  5183               	movf	___aldiv@sign& (0+255),w,b
 10771  015E46  0101               	movlb	1	; () banked
 10772  015E48  B4D8               	btfsc	status,2,c
 10773  015E4A  D00A               	goto	l8851
 10774                           
 10775                           ; BSR set to: 1
 10776  015E4C  0101               	movlb	1	; () banked
 10777  015E4E  1F87               	comf	(___aldiv@quotient+3)& (0+255),f,b
 10778  015E50  1F86               	comf	(___aldiv@quotient+2)& (0+255),f,b
 10779  015E52  1F85               	comf	(___aldiv@quotient+1)& (0+255),f,b
 10780  015E54  6D84               	negf	___aldiv@quotient& (0+255),b
 10781  015E56  0E00               	movlw	0
 10782  015E58  2385               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 10783  015E5A  2386               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 10784  015E5C  2387               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 10785  015E5E  D000               	goto	l8851
 10786  015E60                     l8851:
 10787                           
 10788                           ; BSR set to: 1
 10789  015E60  C184  F17A         	movff	___aldiv@quotient,?___aldiv
 10790  015E64  C185  F17B         	movff	___aldiv@quotient+1,?___aldiv+1
 10791  015E68  C186  F17C         	movff	___aldiv@quotient+2,?___aldiv+2
 10792  015E6C  C187  F17D         	movff	___aldiv@quotient+3,?___aldiv+3
 10793  015E70  0012               	return	
 10794                           
 10795                           ; BSR set to: 1
 10796                           
 10797                           ; BSR set to: 1
 10798  015E72  0012               	return		;funcret
 10799  015E74                     __end_of___aldiv:
 10800                           	opt stack 0
 10801                           tblptru	equ	0xFF8
 10802                           tblptrh	equ	0xFF7
 10803                           tblptrl	equ	0xFF6
 10804                           tablat	equ	0xFF5
 10805                           prodh	equ	0xFF4
 10806                           prodl	equ	0xFF3
 10807                           intcon	equ	0xFF2
 10808                           intcon2	equ	0xFF1
 10809                           postinc0	equ	0xFEE
 10810                           plusw0	equ	0xFEB
 10811                           wreg	equ	0xFE8
 10812                           postdec1	equ	0xFE5
 10813                           fsr1l	equ	0xFE1
 10814                           postinc2	equ	0xFDE
 10815                           postdec2	equ	0xFDD
 10816                           plusw2	equ	0xFDB
 10817                           fsr2h	equ	0xFDA
 10818                           fsr2l	equ	0xFD9
 10819                           status	equ	0xFD8
 10820                           
 10821 ;; *************** function _LCDScreenUpdate *****************
 10822 ;; Defined at:
 10823 ;;		line 282 in file "LCD.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;		None
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;		None
 10828 ;; Return value:  Size  Location     Type
 10829 ;;		None               void
 10830 ;; Registers used:
 10831 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;Total ram usage:        0 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; Hardware stack levels required when called:   11
 10844 ;; This function calls:
 10845 ;;		_ClearLCD
 10846 ;;		_LCDPrintChar
 10847 ;;		_LCDPrintString
 10848 ;;		_SetLCDcursor
 10849 ;;		_cleanBuffer
 10850 ;; This function is called by:
 10851 ;;		_main
 10852 ;; This function uses a non-reentrant model
 10853 ;;
 10854                           
 10855                           	psect	text22
 10856  013D50                     __ptext22:
 10857                           	opt stack 0
 10858  013D50                     _LCDScreenUpdate:
 10859                           	opt stack 19
 10860                           
 10861                           ;LCD.c: 285: if(LCDclearCount<(25000-1))
 10862                           
 10863                           ; BSR set to: 1
 10864                           ;incstack = 0
 10865  013D50  0101               	movlb	1	; () banked
 10866  013D52  51CA               	movf	(_LCDclearCount+3)& (0+255),w,b
 10867  013D54  0101               	movlb	1	; () banked
 10868  013D56  11C9               	iorwf	(_LCDclearCount+2)& (0+255),w,b
 10869  013D58  E113               	bnz	l14779
 10870  013D5A  0EA7               	movlw	167
 10871  013D5C  0101               	movlb	1	; () banked
 10872  013D5E  5DC7               	subwf	_LCDclearCount& (0+255),w,b
 10873  013D60  0E61               	movlw	97
 10874  013D62  0101               	movlb	1	; () banked
 10875  013D64  59C8               	subwfb	(_LCDclearCount+1)& (0+255),w,b
 10876  013D66  B0D8               	btfsc	status,0,c
 10877  013D68  D00B               	goto	l14779
 10878                           
 10879                           ; BSR set to: 1
 10880                           ;LCD.c: 286: {
 10881                           ;LCD.c: 287: LCDclearCount++;
 10882  013D6A  0E01               	movlw	1
 10883  013D6C  0101               	movlb	1	; () banked
 10884  013D6E  27C7               	addwf	_LCDclearCount& (0+255),f,b
 10885  013D70  0E00               	movlw	0
 10886  013D72  23C8               	addwfc	(_LCDclearCount+1)& (0+255),f,b
 10887  013D74  23C9               	addwfc	(_LCDclearCount+2)& (0+255),f,b
 10888  013D76  23CA               	addwfc	(_LCDclearCount+3)& (0+255),f,b
 10889                           
 10890                           ; BSR set to: 1
 10891                           ;LCD.c: 288: LCDwait = 1;
 10892  013D78  0E01               	movlw	1
 10893  013D7A  0101               	movlb	1	; () banked
 10894  013D7C  6F12               	movwf	_LCDwait& (0+255),b
 10895                           
 10896                           ;LCD.c: 289: }
 10897  013D7E  0012               	return	
 10898  013D80                     l14779:
 10899                           
 10900                           ; BSR set to: 1
 10901                           ;LCD.c: 290: else if(LCDclearCount == (25000-1))
 10902  013D80  0EA7               	movlw	167
 10903  013D82  0101               	movlb	1	; () banked
 10904  013D84  19C7               	xorwf	_LCDclearCount& (0+255),w,b
 10905  013D86  E108               	bnz	u19041
 10906  013D88  0E61               	movlw	97
 10907  013D8A  0101               	movlb	1	; () banked
 10908  013D8C  19C8               	xorwf	(_LCDclearCount+1)& (0+255),w,b
 10909  013D8E  0101               	movlb	1	; () banked
 10910  013D90  11C9               	iorwf	(_LCDclearCount+2)& (0+255),w,b
 10911  013D92  0101               	movlb	1	; () banked
 10912  013D94  11CA               	iorwf	(_LCDclearCount+3)& (0+255),w,b
 10913  013D96  A4D8               	btfss	status,2,c
 10914  013D98                     u19041:
 10915  013D98  0012               	return	
 10916                           
 10917                           ; BSR set to: 1
 10918                           ;LCD.c: 291: {
 10919                           ;LCD.c: 292: LCDclearCount++;
 10920  013D9A  0E01               	movlw	1
 10921  013D9C  0101               	movlb	1	; () banked
 10922  013D9E  27C7               	addwf	_LCDclearCount& (0+255),f,b
 10923  013DA0  0E00               	movlw	0
 10924  013DA2  23C8               	addwfc	(_LCDclearCount+1)& (0+255),f,b
 10925  013DA4  23C9               	addwfc	(_LCDclearCount+2)& (0+255),f,b
 10926  013DA6  23CA               	addwfc	(_LCDclearCount+3)& (0+255),f,b
 10927                           
 10928                           ; BSR set to: 1
 10929                           ;LCD.c: 293: LCDwait = 0;
 10930  013DA8  0E00               	movlw	0
 10931  013DAA  0101               	movlb	1	; () banked
 10932  013DAC  6F12               	movwf	_LCDwait& (0+255),b
 10933                           
 10934                           ; BSR set to: 1
 10935                           ;LCD.c: 294: if(ScrollFIFOCount == 0)
 10936  013DAE  0101               	movlb	1	; () banked
 10937  013DB0  5114               	movf	_ScrollFIFOCount& (0+255),w,b
 10938  013DB2  A4D8               	btfss	status,2,c
 10939  013DB4  D00F               	goto	l14795
 10940                           
 10941                           ; BSR set to: 1
 10942                           ;LCD.c: 295: {
 10943                           ;LCD.c: 296: ScrollDisplayPosition = 0;
 10944  013DB6  0E00               	movlw	0
 10945  013DB8  0101               	movlb	1	; () banked
 10946  013DBA  6F13               	movwf	_ScrollDisplayPosition& (0+255),b
 10947                           
 10948                           ; BSR set to: 1
 10949                           ;LCD.c: 297: ClearLCD();
 10950  013DBC  ECEF  F007         	call	_ClearLCD	;wreg free
 10951                           
 10952                           ;LCD.c: 298: SetLCDcursor(0, 0);
 10953  013DC0  0E00               	movlw	0
 10954  013DC2  0101               	movlb	1	; () banked
 10955  013DC4  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 10956  013DC6  0E00               	movlw	0
 10957  013DC8  EC8F  F005         	call	_SetLCDcursor
 10958                           
 10959                           ;LCD.c: 299: LCDPrintChar('>');
 10960  013DCC  0E3E               	movlw	62
 10961  013DCE  ECE1  F007         	call	_LCDPrintChar
 10962                           
 10963                           ;LCD.c: 300: }
 10964  013DD2  0012               	return	
 10965  013DD4                     l14795:
 10966                           
 10967                           ;LCD.c: 301: else
 10968                           ;LCD.c: 302: {
 10969                           ;LCD.c: 303: ScrollDisplayPosition++;
 10970  013DD4  0101               	movlb	1	; () banked
 10971  013DD6  2B13               	incf	_ScrollDisplayPosition& (0+255),f,b
 10972                           
 10973                           ; BSR set to: 1
 10974                           ;LCD.c: 304: if(ScrollDisplayPosition == 1)
 10975  013DD8  0101               	movlb	1	; () banked
 10976  013DDA  0513               	decf	_ScrollDisplayPosition& (0+255),w,b
 10977  013DDC  A4D8               	btfss	status,2,c
 10978  013DDE  D011               	goto	l14803
 10979                           
 10980                           ; BSR set to: 1
 10981                           ;LCD.c: 305: {
 10982                           ;LCD.c: 306: ClearLCD();
 10983  013DE0  ECEF  F007         	call	_ClearLCD	;wreg free
 10984                           
 10985                           ;LCD.c: 307: SetLCDcursor(1, 0);
 10986  013DE4  0E00               	movlw	0
 10987  013DE6  0101               	movlb	1	; () banked
 10988  013DE8  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 10989  013DEA  0E01               	movlw	1
 10990  013DEC  EC8F  F005         	call	_SetLCDcursor
 10991                           
 10992                           ;LCD.c: 308: LCDPrintString(Scroll_1);
 10993  013DF0  0E16               	movlw	low _Scroll_1
 10994  013DF2  0101               	movlb	1	; () banked
 10995  013DF4  6F82               	movwf	LCDPrintString@Text& (0+255),b
 10996  013DF6  0E01               	movlw	high _Scroll_1
 10997  013DF8  0101               	movlb	1	; () banked
 10998  013DFA  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 10999  013DFC  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11000                           
 11001                           ;LCD.c: 309: }
 11002  013E00  D1DC               	goto	l14901
 11003  013E02                     l14803:
 11004                           
 11005                           ;LCD.c: 310: else if(ScrollDisplayPosition == 2)
 11006  013E02  0E02               	movlw	2
 11007  013E04  0101               	movlb	1	; () banked
 11008  013E06  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 11009  013E08  A4D8               	btfss	status,2,c
 11010  013E0A  D02C               	goto	l14813
 11011                           
 11012                           ; BSR set to: 1
 11013                           ;LCD.c: 311: {
 11014                           ;LCD.c: 312: ClearLCD();
 11015  013E0C  ECEF  F007         	call	_ClearLCD	;wreg free
 11016                           
 11017                           ;LCD.c: 313: SetLCDcursor(0, 0);
 11018  013E10  0E00               	movlw	0
 11019  013E12  0101               	movlb	1	; () banked
 11020  013E14  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11021  013E16  0E00               	movlw	0
 11022  013E18  EC8F  F005         	call	_SetLCDcursor
 11023                           
 11024                           ;LCD.c: 314: LCDPrintString(Scroll_1);
 11025  013E1C  0E16               	movlw	low _Scroll_1
 11026  013E1E  0101               	movlb	1	; () banked
 11027  013E20  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11028  013E22  0E01               	movlw	high _Scroll_1
 11029  013E24  0101               	movlb	1	; () banked
 11030  013E26  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11031  013E28  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11032                           
 11033                           ;LCD.c: 315: SetLCDcursor(1, 0);
 11034  013E2C  0E00               	movlw	0
 11035  013E2E  0101               	movlb	1	; () banked
 11036  013E30  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11037  013E32  0E01               	movlw	1
 11038  013E34  EC8F  F005         	call	_SetLCDcursor
 11039                           
 11040                           ;LCD.c: 316: LCDPrintString(Scroll_2);
 11041  013E38  0E26               	movlw	low _Scroll_2
 11042  013E3A  0101               	movlb	1	; () banked
 11043  013E3C  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11044  013E3E  0E01               	movlw	high _Scroll_2
 11045  013E40  0101               	movlb	1	; () banked
 11046  013E42  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11047  013E44  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11048                           
 11049                           ;LCD.c: 317: cleanBuffer(Scroll_1, 16);
 11050  013E48  0E16               	movlw	low _Scroll_1
 11051  013E4A  0101               	movlb	1	; () banked
 11052  013E4C  6F74               	movwf	cleanBuffer@data& (0+255),b
 11053  013E4E  0E01               	movlw	high _Scroll_1
 11054  013E50  0101               	movlb	1	; () banked
 11055  013E52  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 11056  013E54  0E00               	movlw	0
 11057  013E56  0101               	movlb	1	; () banked
 11058  013E58  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 11059  013E5A  0E10               	movlw	16
 11060  013E5C  6F76               	movwf	cleanBuffer@count& (0+255),b
 11061  013E5E  ECD3  F003         	call	_cleanBuffer	;wreg free
 11062                           
 11063                           ;LCD.c: 318: }
 11064  013E62  D1AB               	goto	l14901
 11065  013E64                     l14813:
 11066                           
 11067                           ;LCD.c: 319: else if(ScrollDisplayPosition == 3)
 11068  013E64  0E03               	movlw	3
 11069  013E66  0101               	movlb	1	; () banked
 11070  013E68  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 11071  013E6A  A4D8               	btfss	status,2,c
 11072  013E6C  D02C               	goto	l14823
 11073                           
 11074                           ; BSR set to: 1
 11075                           ;LCD.c: 320: {
 11076                           ;LCD.c: 321: ClearLCD();
 11077  013E6E  ECEF  F007         	call	_ClearLCD	;wreg free
 11078                           
 11079                           ;LCD.c: 322: SetLCDcursor(0, 0);
 11080  013E72  0E00               	movlw	0
 11081  013E74  0101               	movlb	1	; () banked
 11082  013E76  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11083  013E78  0E00               	movlw	0
 11084  013E7A  EC8F  F005         	call	_SetLCDcursor
 11085                           
 11086                           ;LCD.c: 323: LCDPrintString(Scroll_2);
 11087  013E7E  0E26               	movlw	low _Scroll_2
 11088  013E80  0101               	movlb	1	; () banked
 11089  013E82  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11090  013E84  0E01               	movlw	high _Scroll_2
 11091  013E86  0101               	movlb	1	; () banked
 11092  013E88  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11093  013E8A  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11094                           
 11095                           ;LCD.c: 324: SetLCDcursor(1, 0);
 11096  013E8E  0E00               	movlw	0
 11097  013E90  0101               	movlb	1	; () banked
 11098  013E92  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11099  013E94  0E01               	movlw	1
 11100  013E96  EC8F  F005         	call	_SetLCDcursor
 11101                           
 11102                           ;LCD.c: 325: LCDPrintString(Scroll_3);
 11103  013E9A  0E36               	movlw	low _Scroll_3
 11104  013E9C  0101               	movlb	1	; () banked
 11105  013E9E  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11106  013EA0  0E01               	movlw	high _Scroll_3
 11107  013EA2  0101               	movlb	1	; () banked
 11108  013EA4  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11109  013EA6  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11110                           
 11111                           ;LCD.c: 326: cleanBuffer(Scroll_2, 16);
 11112  013EAA  0E26               	movlw	low _Scroll_2
 11113  013EAC  0101               	movlb	1	; () banked
 11114  013EAE  6F74               	movwf	cleanBuffer@data& (0+255),b
 11115  013EB0  0E01               	movlw	high _Scroll_2
 11116  013EB2  0101               	movlb	1	; () banked
 11117  013EB4  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 11118  013EB6  0E00               	movlw	0
 11119  013EB8  0101               	movlb	1	; () banked
 11120  013EBA  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 11121  013EBC  0E10               	movlw	16
 11122  013EBE  6F76               	movwf	cleanBuffer@count& (0+255),b
 11123  013EC0  ECD3  F003         	call	_cleanBuffer	;wreg free
 11124                           
 11125                           ;LCD.c: 327: }
 11126  013EC4  D17A               	goto	l14901
 11127  013EC6                     l14823:
 11128                           
 11129                           ;LCD.c: 328: else if(ScrollDisplayPosition == 4)
 11130  013EC6  0E04               	movlw	4
 11131  013EC8  0101               	movlb	1	; () banked
 11132  013ECA  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 11133  013ECC  A4D8               	btfss	status,2,c
 11134  013ECE  D02C               	goto	l14833
 11135                           
 11136                           ; BSR set to: 1
 11137                           ;LCD.c: 329: {
 11138                           ;LCD.c: 330: ClearLCD();
 11139  013ED0  ECEF  F007         	call	_ClearLCD	;wreg free
 11140                           
 11141                           ;LCD.c: 331: SetLCDcursor(0, 0);
 11142  013ED4  0E00               	movlw	0
 11143  013ED6  0101               	movlb	1	; () banked
 11144  013ED8  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11145  013EDA  0E00               	movlw	0
 11146  013EDC  EC8F  F005         	call	_SetLCDcursor
 11147                           
 11148                           ;LCD.c: 332: LCDPrintString(Scroll_3);
 11149  013EE0  0E36               	movlw	low _Scroll_3
 11150  013EE2  0101               	movlb	1	; () banked
 11151  013EE4  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11152  013EE6  0E01               	movlw	high _Scroll_3
 11153  013EE8  0101               	movlb	1	; () banked
 11154  013EEA  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11155  013EEC  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11156                           
 11157                           ;LCD.c: 333: SetLCDcursor(1, 0);
 11158  013EF0  0E00               	movlw	0
 11159  013EF2  0101               	movlb	1	; () banked
 11160  013EF4  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11161  013EF6  0E01               	movlw	1
 11162  013EF8  EC8F  F005         	call	_SetLCDcursor
 11163                           
 11164                           ;LCD.c: 334: LCDPrintString(Scroll_4);
 11165  013EFC  0E46               	movlw	low _Scroll_4
 11166  013EFE  0101               	movlb	1	; () banked
 11167  013F00  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11168  013F02  0E01               	movlw	high _Scroll_4
 11169  013F04  0101               	movlb	1	; () banked
 11170  013F06  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11171  013F08  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11172                           
 11173                           ;LCD.c: 335: cleanBuffer(Scroll_3, 16);
 11174  013F0C  0E36               	movlw	low _Scroll_3
 11175  013F0E  0101               	movlb	1	; () banked
 11176  013F10  6F74               	movwf	cleanBuffer@data& (0+255),b
 11177  013F12  0E01               	movlw	high _Scroll_3
 11178  013F14  0101               	movlb	1	; () banked
 11179  013F16  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 11180  013F18  0E00               	movlw	0
 11181  013F1A  0101               	movlb	1	; () banked
 11182  013F1C  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 11183  013F1E  0E10               	movlw	16
 11184  013F20  6F76               	movwf	cleanBuffer@count& (0+255),b
 11185  013F22  ECD3  F003         	call	_cleanBuffer	;wreg free
 11186                           
 11187                           ;LCD.c: 336: }
 11188  013F26  D149               	goto	l14901
 11189  013F28                     l14833:
 11190                           
 11191                           ;LCD.c: 337: else if(ScrollDisplayPosition == 5)
 11192  013F28  0E05               	movlw	5
 11193  013F2A  0101               	movlb	1	; () banked
 11194  013F2C  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 11195  013F2E  A4D8               	btfss	status,2,c
 11196  013F30  D02C               	goto	l14843
 11197                           
 11198                           ; BSR set to: 1
 11199                           ;LCD.c: 338: {
 11200                           ;LCD.c: 339: ClearLCD();
 11201  013F32  ECEF  F007         	call	_ClearLCD	;wreg free
 11202                           
 11203                           ;LCD.c: 340: SetLCDcursor(0, 0);
 11204  013F36  0E00               	movlw	0
 11205  013F38  0101               	movlb	1	; () banked
 11206  013F3A  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11207  013F3C  0E00               	movlw	0
 11208  013F3E  EC8F  F005         	call	_SetLCDcursor
 11209                           
 11210                           ;LCD.c: 341: LCDPrintString(Scroll_4);
 11211  013F42  0E46               	movlw	low _Scroll_4
 11212  013F44  0101               	movlb	1	; () banked
 11213  013F46  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11214  013F48  0E01               	movlw	high _Scroll_4
 11215  013F4A  0101               	movlb	1	; () banked
 11216  013F4C  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11217  013F4E  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11218                           
 11219                           ;LCD.c: 342: SetLCDcursor(1, 0);
 11220  013F52  0E00               	movlw	0
 11221  013F54  0101               	movlb	1	; () banked
 11222  013F56  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11223  013F58  0E01               	movlw	1
 11224  013F5A  EC8F  F005         	call	_SetLCDcursor
 11225                           
 11226                           ;LCD.c: 343: LCDPrintString(Scroll_5);
 11227  013F5E  0E56               	movlw	low _Scroll_5
 11228  013F60  0101               	movlb	1	; () banked
 11229  013F62  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11230  013F64  0E01               	movlw	high _Scroll_5
 11231  013F66  0101               	movlb	1	; () banked
 11232  013F68  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11233  013F6A  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11234                           
 11235                           ;LCD.c: 344: cleanBuffer(Scroll_4, 16);
 11236  013F6E  0E46               	movlw	low _Scroll_4
 11237  013F70  0101               	movlb	1	; () banked
 11238  013F72  6F74               	movwf	cleanBuffer@data& (0+255),b
 11239  013F74  0E01               	movlw	high _Scroll_4
 11240  013F76  0101               	movlb	1	; () banked
 11241  013F78  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 11242  013F7A  0E00               	movlw	0
 11243  013F7C  0101               	movlb	1	; () banked
 11244  013F7E  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 11245  013F80  0E10               	movlw	16
 11246  013F82  6F76               	movwf	cleanBuffer@count& (0+255),b
 11247  013F84  ECD3  F003         	call	_cleanBuffer	;wreg free
 11248                           
 11249                           ;LCD.c: 345: }
 11250  013F88  D118               	goto	l14901
 11251  013F8A                     l14843:
 11252                           
 11253                           ;LCD.c: 346: else if(ScrollDisplayPosition == 6)
 11254  013F8A  0E06               	movlw	6
 11255  013F8C  0101               	movlb	1	; () banked
 11256  013F8E  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 11257  013F90  A4D8               	btfss	status,2,c
 11258  013F92  D02C               	goto	l14853
 11259                           
 11260                           ; BSR set to: 1
 11261                           ;LCD.c: 347: {
 11262                           ;LCD.c: 348: ClearLCD();
 11263  013F94  ECEF  F007         	call	_ClearLCD	;wreg free
 11264                           
 11265                           ;LCD.c: 349: SetLCDcursor(0, 0);
 11266  013F98  0E00               	movlw	0
 11267  013F9A  0101               	movlb	1	; () banked
 11268  013F9C  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11269  013F9E  0E00               	movlw	0
 11270  013FA0  EC8F  F005         	call	_SetLCDcursor
 11271                           
 11272                           ;LCD.c: 350: LCDPrintString(Scroll_5);
 11273  013FA4  0E56               	movlw	low _Scroll_5
 11274  013FA6  0101               	movlb	1	; () banked
 11275  013FA8  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11276  013FAA  0E01               	movlw	high _Scroll_5
 11277  013FAC  0101               	movlb	1	; () banked
 11278  013FAE  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11279  013FB0  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11280                           
 11281                           ;LCD.c: 351: SetLCDcursor(1, 0);
 11282  013FB4  0E00               	movlw	0
 11283  013FB6  0101               	movlb	1	; () banked
 11284  013FB8  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11285  013FBA  0E01               	movlw	1
 11286  013FBC  EC8F  F005         	call	_SetLCDcursor
 11287                           
 11288                           ;LCD.c: 352: LCDPrintString(Scroll_6);
 11289  013FC0  0E50               	movlw	low _Scroll_6
 11290  013FC2  0101               	movlb	1	; () banked
 11291  013FC4  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11292  013FC6  0E00               	movlw	high _Scroll_6
 11293  013FC8  0101               	movlb	1	; () banked
 11294  013FCA  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11295  013FCC  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11296                           
 11297                           ;LCD.c: 353: cleanBuffer(Scroll_5, 16);
 11298  013FD0  0E56               	movlw	low _Scroll_5
 11299  013FD2  0101               	movlb	1	; () banked
 11300  013FD4  6F74               	movwf	cleanBuffer@data& (0+255),b
 11301  013FD6  0E01               	movlw	high _Scroll_5
 11302  013FD8  0101               	movlb	1	; () banked
 11303  013FDA  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 11304  013FDC  0E00               	movlw	0
 11305  013FDE  0101               	movlb	1	; () banked
 11306  013FE0  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 11307  013FE2  0E10               	movlw	16
 11308  013FE4  6F76               	movwf	cleanBuffer@count& (0+255),b
 11309  013FE6  ECD3  F003         	call	_cleanBuffer	;wreg free
 11310                           
 11311                           ;LCD.c: 354: }
 11312  013FEA  D0E7               	goto	l14901
 11313  013FEC                     l14853:
 11314                           
 11315                           ;LCD.c: 355: else if(ScrollDisplayPosition == 7)
 11316  013FEC  0E07               	movlw	7
 11317  013FEE  0101               	movlb	1	; () banked
 11318  013FF0  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 11319  013FF2  A4D8               	btfss	status,2,c
 11320  013FF4  D02C               	goto	l14863
 11321                           
 11322                           ; BSR set to: 1
 11323                           ;LCD.c: 356: {
 11324                           ;LCD.c: 357: ClearLCD();
 11325  013FF6  ECEF  F007         	call	_ClearLCD	;wreg free
 11326                           
 11327                           ;LCD.c: 358: SetLCDcursor(0, 0);
 11328  013FFA  0E00               	movlw	0
 11329  013FFC  0101               	movlb	1	; () banked
 11330  013FFE  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11331  014000  0E00               	movlw	0
 11332  014002  EC8F  F005         	call	_SetLCDcursor
 11333                           
 11334                           ;LCD.c: 359: LCDPrintString(Scroll_6);
 11335  014006  0E50               	movlw	low _Scroll_6
 11336  014008  0101               	movlb	1	; () banked
 11337  01400A  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11338  01400C  0E00               	movlw	high _Scroll_6
 11339  01400E  0101               	movlb	1	; () banked
 11340  014010  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11341  014012  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11342                           
 11343                           ;LCD.c: 360: SetLCDcursor(1, 0);
 11344  014016  0E00               	movlw	0
 11345  014018  0101               	movlb	1	; () banked
 11346  01401A  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11347  01401C  0E01               	movlw	1
 11348  01401E  EC8F  F005         	call	_SetLCDcursor
 11349                           
 11350                           ;LCD.c: 361: LCDPrintString(Scroll_7);
 11351  014022  0E67               	movlw	low _Scroll_7
 11352  014024  0101               	movlb	1	; () banked
 11353  014026  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11354  014028  0E02               	movlw	high _Scroll_7
 11355  01402A  0101               	movlb	1	; () banked
 11356  01402C  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11357  01402E  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11358                           
 11359                           ;LCD.c: 362: cleanBuffer(Scroll_6, 16);
 11360  014032  0E50               	movlw	low _Scroll_6
 11361  014034  0101               	movlb	1	; () banked
 11362  014036  6F74               	movwf	cleanBuffer@data& (0+255),b
 11363  014038  0E00               	movlw	high _Scroll_6
 11364  01403A  0101               	movlb	1	; () banked
 11365  01403C  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 11366  01403E  0E00               	movlw	0
 11367  014040  0101               	movlb	1	; () banked
 11368  014042  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 11369  014044  0E10               	movlw	16
 11370  014046  6F76               	movwf	cleanBuffer@count& (0+255),b
 11371  014048  ECD3  F003         	call	_cleanBuffer	;wreg free
 11372                           
 11373                           ;LCD.c: 363: }
 11374  01404C  D0B6               	goto	l14901
 11375  01404E                     l14863:
 11376                           
 11377                           ;LCD.c: 364: else if(ScrollDisplayPosition == 8)
 11378  01404E  0E08               	movlw	8
 11379  014050  0101               	movlb	1	; () banked
 11380  014052  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 11381  014054  A4D8               	btfss	status,2,c
 11382  014056  D02C               	goto	l14873
 11383                           
 11384                           ; BSR set to: 1
 11385                           ;LCD.c: 365: {
 11386                           ;LCD.c: 366: ClearLCD();
 11387  014058  ECEF  F007         	call	_ClearLCD	;wreg free
 11388                           
 11389                           ;LCD.c: 367: SetLCDcursor(0, 0);
 11390  01405C  0E00               	movlw	0
 11391  01405E  0101               	movlb	1	; () banked
 11392  014060  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11393  014062  0E00               	movlw	0
 11394  014064  EC8F  F005         	call	_SetLCDcursor
 11395                           
 11396                           ;LCD.c: 368: LCDPrintString(Scroll_7);
 11397  014068  0E67               	movlw	low _Scroll_7
 11398  01406A  0101               	movlb	1	; () banked
 11399  01406C  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11400  01406E  0E02               	movlw	high _Scroll_7
 11401  014070  0101               	movlb	1	; () banked
 11402  014072  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11403  014074  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11404                           
 11405                           ;LCD.c: 369: SetLCDcursor(1, 0);
 11406  014078  0E00               	movlw	0
 11407  01407A  0101               	movlb	1	; () banked
 11408  01407C  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11409  01407E  0E01               	movlw	1
 11410  014080  EC8F  F005         	call	_SetLCDcursor
 11411                           
 11412                           ;LCD.c: 370: LCDPrintString(Scroll_8);
 11413  014084  0E74               	movlw	low _Scroll_8
 11414  014086  0101               	movlb	1	; () banked
 11415  014088  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11416  01408A  0E03               	movlw	high _Scroll_8
 11417  01408C  0101               	movlb	1	; () banked
 11418  01408E  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11419  014090  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11420                           
 11421                           ;LCD.c: 371: cleanBuffer(Scroll_7, 16);
 11422  014094  0E67               	movlw	low _Scroll_7
 11423  014096  0101               	movlb	1	; () banked
 11424  014098  6F74               	movwf	cleanBuffer@data& (0+255),b
 11425  01409A  0E02               	movlw	high _Scroll_7
 11426  01409C  0101               	movlb	1	; () banked
 11427  01409E  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 11428  0140A0  0E00               	movlw	0
 11429  0140A2  0101               	movlb	1	; () banked
 11430  0140A4  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 11431  0140A6  0E10               	movlw	16
 11432  0140A8  6F76               	movwf	cleanBuffer@count& (0+255),b
 11433  0140AA  ECD3  F003         	call	_cleanBuffer	;wreg free
 11434                           
 11435                           ;LCD.c: 372: }
 11436  0140AE  D085               	goto	l14901
 11437  0140B0                     l14873:
 11438                           
 11439                           ;LCD.c: 373: else if(ScrollDisplayPosition == 9)
 11440  0140B0  0E09               	movlw	9
 11441  0140B2  0101               	movlb	1	; () banked
 11442  0140B4  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 11443  0140B6  A4D8               	btfss	status,2,c
 11444  0140B8  D02C               	goto	l14883
 11445                           
 11446                           ; BSR set to: 1
 11447                           ;LCD.c: 374: {
 11448                           ;LCD.c: 375: ClearLCD();
 11449  0140BA  ECEF  F007         	call	_ClearLCD	;wreg free
 11450                           
 11451                           ;LCD.c: 376: SetLCDcursor(0, 0);
 11452  0140BE  0E00               	movlw	0
 11453  0140C0  0101               	movlb	1	; () banked
 11454  0140C2  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11455  0140C4  0E00               	movlw	0
 11456  0140C6  EC8F  F005         	call	_SetLCDcursor
 11457                           
 11458                           ;LCD.c: 377: LCDPrintString(Scroll_8);
 11459  0140CA  0E74               	movlw	low _Scroll_8
 11460  0140CC  0101               	movlb	1	; () banked
 11461  0140CE  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11462  0140D0  0E03               	movlw	high _Scroll_8
 11463  0140D2  0101               	movlb	1	; () banked
 11464  0140D4  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11465  0140D6  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11466                           
 11467                           ;LCD.c: 378: SetLCDcursor(1, 0);
 11468  0140DA  0E00               	movlw	0
 11469  0140DC  0101               	movlb	1	; () banked
 11470  0140DE  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11471  0140E0  0E01               	movlw	1
 11472  0140E2  EC8F  F005         	call	_SetLCDcursor
 11473                           
 11474                           ;LCD.c: 379: LCDPrintString(Scroll_9);
 11475  0140E6  0E84               	movlw	low _Scroll_9
 11476  0140E8  0101               	movlb	1	; () banked
 11477  0140EA  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11478  0140EC  0E03               	movlw	high _Scroll_9
 11479  0140EE  0101               	movlb	1	; () banked
 11480  0140F0  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11481  0140F2  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11482                           
 11483                           ;LCD.c: 380: cleanBuffer(Scroll_8, 16);
 11484  0140F6  0E74               	movlw	low _Scroll_8
 11485  0140F8  0101               	movlb	1	; () banked
 11486  0140FA  6F74               	movwf	cleanBuffer@data& (0+255),b
 11487  0140FC  0E03               	movlw	high _Scroll_8
 11488  0140FE  0101               	movlb	1	; () banked
 11489  014100  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 11490  014102  0E00               	movlw	0
 11491  014104  0101               	movlb	1	; () banked
 11492  014106  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 11493  014108  0E10               	movlw	16
 11494  01410A  6F76               	movwf	cleanBuffer@count& (0+255),b
 11495  01410C  ECD3  F003         	call	_cleanBuffer	;wreg free
 11496                           
 11497                           ;LCD.c: 381: }
 11498  014110  D054               	goto	l14901
 11499  014112                     l14883:
 11500                           
 11501                           ;LCD.c: 382: else if(ScrollDisplayPosition == 10)
 11502  014112  0E0A               	movlw	10
 11503  014114  0101               	movlb	1	; () banked
 11504  014116  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 11505  014118  A4D8               	btfss	status,2,c
 11506  01411A  D02C               	goto	l14893
 11507                           
 11508                           ; BSR set to: 1
 11509                           ;LCD.c: 383: {
 11510                           ;LCD.c: 384: ClearLCD();
 11511  01411C  ECEF  F007         	call	_ClearLCD	;wreg free
 11512                           
 11513                           ;LCD.c: 385: SetLCDcursor(0, 0);
 11514  014120  0E00               	movlw	0
 11515  014122  0101               	movlb	1	; () banked
 11516  014124  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11517  014126  0E00               	movlw	0
 11518  014128  EC8F  F005         	call	_SetLCDcursor
 11519                           
 11520                           ;LCD.c: 386: LCDPrintString(Scroll_9);
 11521  01412C  0E84               	movlw	low _Scroll_9
 11522  01412E  0101               	movlb	1	; () banked
 11523  014130  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11524  014132  0E03               	movlw	high _Scroll_9
 11525  014134  0101               	movlb	1	; () banked
 11526  014136  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11527  014138  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11528                           
 11529                           ;LCD.c: 387: SetLCDcursor(1, 0);
 11530  01413C  0E00               	movlw	0
 11531  01413E  0101               	movlb	1	; () banked
 11532  014140  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11533  014142  0E01               	movlw	1
 11534  014144  EC8F  F005         	call	_SetLCDcursor
 11535                           
 11536                           ;LCD.c: 388: LCDPrintString(Scroll_10);
 11537  014148  0E64               	movlw	low _Scroll_10
 11538  01414A  0101               	movlb	1	; () banked
 11539  01414C  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11540  01414E  0E03               	movlw	high _Scroll_10
 11541  014150  0101               	movlb	1	; () banked
 11542  014152  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11543  014154  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11544                           
 11545                           ;LCD.c: 389: cleanBuffer(Scroll_9, 16);
 11546  014158  0E84               	movlw	low _Scroll_9
 11547  01415A  0101               	movlb	1	; () banked
 11548  01415C  6F74               	movwf	cleanBuffer@data& (0+255),b
 11549  01415E  0E03               	movlw	high _Scroll_9
 11550  014160  0101               	movlb	1	; () banked
 11551  014162  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 11552  014164  0E00               	movlw	0
 11553  014166  0101               	movlb	1	; () banked
 11554  014168  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 11555  01416A  0E10               	movlw	16
 11556  01416C  6F76               	movwf	cleanBuffer@count& (0+255),b
 11557  01416E  ECD3  F003         	call	_cleanBuffer	;wreg free
 11558                           
 11559                           ;LCD.c: 390: }
 11560  014172  D023               	goto	l14901
 11561  014174                     l14893:
 11562                           
 11563                           ;LCD.c: 391: else if(ScrollDisplayPosition == 11)
 11564  014174  0E0B               	movlw	11
 11565  014176  0101               	movlb	1	; () banked
 11566  014178  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 11567  01417A  A4D8               	btfss	status,2,c
 11568  01417C  D01E               	goto	l14901
 11569                           
 11570                           ; BSR set to: 1
 11571                           ;LCD.c: 392: {
 11572                           ;LCD.c: 393: ClearLCD();
 11573  01417E  ECEF  F007         	call	_ClearLCD	;wreg free
 11574                           
 11575                           ;LCD.c: 394: SetLCDcursor(0, 0);
 11576  014182  0E00               	movlw	0
 11577  014184  0101               	movlb	1	; () banked
 11578  014186  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 11579  014188  0E00               	movlw	0
 11580  01418A  EC8F  F005         	call	_SetLCDcursor
 11581                           
 11582                           ;LCD.c: 395: LCDPrintString(Scroll_10);
 11583  01418E  0E64               	movlw	low _Scroll_10
 11584  014190  0101               	movlb	1	; () banked
 11585  014192  6F82               	movwf	LCDPrintString@Text& (0+255),b
 11586  014194  0E03               	movlw	high _Scroll_10
 11587  014196  0101               	movlb	1	; () banked
 11588  014198  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 11589  01419A  EC35  F0BE         	call	_LCDPrintString	;wreg free
 11590                           
 11591                           ;LCD.c: 396: cleanBuffer(Scroll_10, 16);
 11592  01419E  0E64               	movlw	low _Scroll_10
 11593  0141A0  0101               	movlb	1	; () banked
 11594  0141A2  6F74               	movwf	cleanBuffer@data& (0+255),b
 11595  0141A4  0E03               	movlw	high _Scroll_10
 11596  0141A6  0101               	movlb	1	; () banked
 11597  0141A8  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 11598  0141AA  0E00               	movlw	0
 11599  0141AC  0101               	movlb	1	; () banked
 11600  0141AE  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 11601  0141B0  0E10               	movlw	16
 11602  0141B2  6F76               	movwf	cleanBuffer@count& (0+255),b
 11603  0141B4  ECD3  F003         	call	_cleanBuffer	;wreg free
 11604  0141B8  D000               	goto	l14901
 11605  0141BA                     l14901:
 11606                           
 11607                           ;LCD.c: 397: }
 11608                           ;LCD.c: 398: if(ScrollDisplayPosition > ScrollFIFOCount)
 11609  0141BA  0101               	movlb	1	; () banked
 11610  0141BC  5113               	movf	_ScrollDisplayPosition& (0+255),w,b
 11611  0141BE  0101               	movlb	1	; () banked
 11612  0141C0  5D14               	subwf	_ScrollFIFOCount& (0+255),w,b
 11613  0141C2  B0D8               	btfsc	status,0,c
 11614  0141C4  D006               	goto	l1147
 11615                           
 11616                           ; BSR set to: 1
 11617                           ;LCD.c: 399: {
 11618                           ;LCD.c: 400: ScrollFIFOCount=0;
 11619  0141C6  0E00               	movlw	0
 11620  0141C8  0101               	movlb	1	; () banked
 11621  0141CA  6F14               	movwf	_ScrollFIFOCount& (0+255),b
 11622                           
 11623                           ;LCD.c: 401: ScrollDisplayPosition=0;
 11624  0141CC  0E00               	movlw	0
 11625  0141CE  0101               	movlb	1	; () banked
 11626  0141D0  6F13               	movwf	_ScrollDisplayPosition& (0+255),b
 11627  0141D2                     l1147:
 11628                           
 11629                           ; BSR set to: 1
 11630                           ;LCD.c: 402: }
 11631                           ;LCD.c: 403: LCDclearCount = 15000;
 11632  0141D2  0E98               	movlw	152
 11633  0141D4  0101               	movlb	1	; () banked
 11634  0141D6  6FC7               	movwf	_LCDclearCount& (0+255),b
 11635  0141D8  0E3A               	movlw	58
 11636  0141DA  6FC8               	movwf	(_LCDclearCount+1)& (0+255),b
 11637  0141DC  0E00               	movlw	0
 11638  0141DE  6FC9               	movwf	(_LCDclearCount+2)& (0+255),b
 11639  0141E0  0E00               	movlw	0
 11640  0141E2  6FCA               	movwf	(_LCDclearCount+3)& (0+255),b
 11641                           
 11642                           ; BSR set to: 1
 11643                           
 11644                           ; BSR set to: 1
 11645  0141E4  0012               	return	
 11646                           
 11647                           ; BSR set to: 1
 11648  0141E6  0012               	return		;funcret
 11649  0141E8                     __end_of_LCDScreenUpdate:
 11650                           	opt stack 0
 11651                           tblptru	equ	0xFF8
 11652                           tblptrh	equ	0xFF7
 11653                           tblptrl	equ	0xFF6
 11654                           tablat	equ	0xFF5
 11655                           prodh	equ	0xFF4
 11656                           prodl	equ	0xFF3
 11657                           intcon	equ	0xFF2
 11658                           intcon2	equ	0xFF1
 11659                           postinc0	equ	0xFEE
 11660                           plusw0	equ	0xFEB
 11661                           wreg	equ	0xFE8
 11662                           postdec1	equ	0xFE5
 11663                           fsr1l	equ	0xFE1
 11664                           postinc2	equ	0xFDE
 11665                           postdec2	equ	0xFDD
 11666                           plusw2	equ	0xFDB
 11667                           fsr2h	equ	0xFDA
 11668                           fsr2l	equ	0xFD9
 11669                           status	equ	0xFD8
 11670                           
 11671 ;; *************** function _LCDPrintChar *****************
 11672 ;; Defined at:
 11673 ;;		line 269 in file "LCD.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;  character       1    wreg     unsigned char 
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;  character       1   28[BANK1 ] unsigned char 
 11678 ;; Return value:  Size  Location     Type
 11679 ;;		None               void
 11680 ;; Registers used:
 11681 ;;		wreg, status,2, status,0, cstack
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;Total ram usage:        1 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; Hardware stack levels required when called:   10
 11694 ;; This function calls:
 11695 ;;		_Reset_Timer1
 11696 ;;		_SendLCDbyte
 11697 ;;		_Start_Timer1
 11698 ;; This function is called by:
 11699 ;;		_main
 11700 ;;		_LCDScreenUpdate
 11701 ;; This function uses a non-reentrant model
 11702 ;;
 11703                           
 11704                           	psect	text23
 11705  000FC2                     __ptext23:
 11706                           	opt stack 0
 11707  000FC2                     _LCDPrintChar:
 11708                           	opt stack 19
 11709                           
 11710                           ;incstack = 0
 11711                           ;LCDPrintChar@character stored from wreg
 11712  000FC2  0101               	movlb	1	; () banked
 11713  000FC4  6F82               	movwf	LCDPrintChar@character& (0+255),b
 11714                           
 11715                           ; BSR set to: 1
 11716                           ;LCD.c: 271: SendLCDbyte(character, 1);
 11717  000FC6  0E01               	movlw	1
 11718  000FC8  0101               	movlb	1	; () banked
 11719  000FCA  6F7E               	movwf	SendLCDbyte@isCommand& (0+255),b
 11720  000FCC  0101               	movlb	1	; () banked
 11721  000FCE  5182               	movf	LCDPrintChar@character& (0+255),w,b
 11722  000FD0  ECD0  F0B2         	call	_SendLCDbyte
 11723                           
 11724                           ;LCD.c: 272: Reset_Timer1();
 11725  000FD4  EC99  F008         	call	_Reset_Timer1	;wreg free
 11726                           
 11727                           ;LCD.c: 273: Start_Timer1();
 11728  000FD8  ECFC  F0BF         	call	_Start_Timer1	;wreg free
 11729  000FDC  0012               	return		;funcret
 11730  000FDE                     __end_of_LCDPrintChar:
 11731                           	opt stack 0
 11732                           tblptru	equ	0xFF8
 11733                           tblptrh	equ	0xFF7
 11734                           tblptrl	equ	0xFF6
 11735                           tablat	equ	0xFF5
 11736                           prodh	equ	0xFF4
 11737                           prodl	equ	0xFF3
 11738                           intcon	equ	0xFF2
 11739                           intcon2	equ	0xFF1
 11740                           postinc0	equ	0xFEE
 11741                           plusw0	equ	0xFEB
 11742                           wreg	equ	0xFE8
 11743                           postdec1	equ	0xFE5
 11744                           fsr1l	equ	0xFE1
 11745                           postinc2	equ	0xFDE
 11746                           postdec2	equ	0xFDD
 11747                           plusw2	equ	0xFDB
 11748                           fsr2h	equ	0xFDA
 11749                           fsr2l	equ	0xFD9
 11750                           status	equ	0xFD8
 11751                           
 11752 ;; *************** function _Start_Timer1 *****************
 11753 ;; Defined at:
 11754 ;;		line 151 in file "Timer.c"
 11755 ;; Parameters:    Size  Location     Type
 11756 ;;		None
 11757 ;; Auto vars:     Size  Location     Type
 11758 ;;		None
 11759 ;; Return value:  Size  Location     Type
 11760 ;;		None               void
 11761 ;; Registers used:
 11762 ;;		None
 11763 ;; Tracked objects:
 11764 ;;		On entry : 0/0
 11765 ;;		On exit  : 0/0
 11766 ;;		Unchanged: 0/0
 11767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11772 ;;Total ram usage:        0 bytes
 11773 ;; Hardware stack levels used:    1
 11774 ;; Hardware stack levels required when called:    7
 11775 ;; This function calls:
 11776 ;;		Nothing
 11777 ;; This function is called by:
 11778 ;;		_LCDPrintChar
 11779 ;;		_init_Timer1
 11780 ;; This function uses a non-reentrant model
 11781 ;;
 11782                           
 11783                           	psect	text24
 11784  017FF8                     __ptext24:
 11785                           	opt stack 0
 11786  017FF8                     _Start_Timer1:
 11787                           	opt stack 21
 11788                           
 11789                           ;Timer.c: 154: T1CONbits.TMR1ON =1;
 11790                           
 11791                           ;incstack = 0
 11792  017FF8  80CD               	bsf	4045,0,c	;volatile
 11793                           
 11794                           ;Timer.c: 156: PIR1bits.TMR1IF = 0;
 11795  017FFA  909E               	bcf	3998,0,c	;volatile
 11796                           
 11797                           ;Timer.c: 157: PIE1bits.TMR1IE = 1;
 11798  017FFC  809D               	bsf	3997,0,c	;volatile
 11799  017FFE  0012               	return		;funcret
 11800  018000                     __end_of_Start_Timer1:
 11801                           	opt stack 0
 11802                           tblptru	equ	0xFF8
 11803                           tblptrh	equ	0xFF7
 11804                           tblptrl	equ	0xFF6
 11805                           tablat	equ	0xFF5
 11806                           prodh	equ	0xFF4
 11807                           prodl	equ	0xFF3
 11808                           intcon	equ	0xFF2
 11809                           intcon2	equ	0xFF1
 11810                           postinc0	equ	0xFEE
 11811                           plusw0	equ	0xFEB
 11812                           wreg	equ	0xFE8
 11813                           postdec1	equ	0xFE5
 11814                           fsr1l	equ	0xFE1
 11815                           postinc2	equ	0xFDE
 11816                           postdec2	equ	0xFDD
 11817                           plusw2	equ	0xFDB
 11818                           fsr2h	equ	0xFDA
 11819                           fsr2l	equ	0xFD9
 11820                           status	equ	0xFD8
 11821                           
 11822 ;; *************** function _Reset_Timer1 *****************
 11823 ;; Defined at:
 11824 ;;		line 165 in file "Timer.c"
 11825 ;; Parameters:    Size  Location     Type
 11826 ;;		None
 11827 ;; Auto vars:     Size  Location     Type
 11828 ;;		None
 11829 ;; Return value:  Size  Location     Type
 11830 ;;		None               void
 11831 ;; Registers used:
 11832 ;;		wreg, status,2
 11833 ;; Tracked objects:
 11834 ;;		On entry : 0/0
 11835 ;;		On exit  : 0/0
 11836 ;;		Unchanged: 0/0
 11837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11842 ;;Total ram usage:        0 bytes
 11843 ;; Hardware stack levels used:    1
 11844 ;; Hardware stack levels required when called:    7
 11845 ;; This function calls:
 11846 ;;		Nothing
 11847 ;; This function is called by:
 11848 ;;		_LCDPrintChar
 11849 ;; This function uses a non-reentrant model
 11850 ;;
 11851                           
 11852                           	psect	text25
 11853  001132                     __ptext25:
 11854                           	opt stack 0
 11855  001132                     _Reset_Timer1:
 11856                           	opt stack 21
 11857                           
 11858                           ;Timer.c: 171: TMR1H = 0;
 11859                           
 11860                           ;incstack = 0
 11861  001132  0E00               	movlw	0
 11862  001134  6ECF               	movwf	4047,c	;volatile
 11863                           
 11864                           ;Timer.c: 172: TMR1L = 2;
 11865  001136  0E02               	movlw	2
 11866  001138  6ECE               	movwf	4046,c	;volatile
 11867  00113A  0012               	return		;funcret
 11868  00113C                     __end_of_Reset_Timer1:
 11869                           	opt stack 0
 11870                           tblptru	equ	0xFF8
 11871                           tblptrh	equ	0xFF7
 11872                           tblptrl	equ	0xFF6
 11873                           tablat	equ	0xFF5
 11874                           prodh	equ	0xFF4
 11875                           prodl	equ	0xFF3
 11876                           intcon	equ	0xFF2
 11877                           intcon2	equ	0xFF1
 11878                           postinc0	equ	0xFEE
 11879                           plusw0	equ	0xFEB
 11880                           wreg	equ	0xFE8
 11881                           postdec1	equ	0xFE5
 11882                           fsr1l	equ	0xFE1
 11883                           postinc2	equ	0xFDE
 11884                           postdec2	equ	0xFDD
 11885                           plusw2	equ	0xFDB
 11886                           fsr2h	equ	0xFDA
 11887                           fsr2l	equ	0xFD9
 11888                           status	equ	0xFD8
 11889                           
 11890 ;; *************** function _InitApp *****************
 11891 ;; Defined at:
 11892 ;;		line 53 in file "user.c"
 11893 ;; Parameters:    Size  Location     Type
 11894 ;;		None
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;		None
 11897 ;; Return value:  Size  Location     Type
 11898 ;;		None               void
 11899 ;; Registers used:
 11900 ;;		wreg, status,2, status,0, cstack
 11901 ;; Tracked objects:
 11902 ;;		On entry : 0/0
 11903 ;;		On exit  : 0/0
 11904 ;;		Unchanged: 0/0
 11905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11910 ;;Total ram usage:        0 bytes
 11911 ;; Hardware stack levels used:    1
 11912 ;; Hardware stack levels required when called:    8
 11913 ;; This function calls:
 11914 ;;		_delayUS
 11915 ;; This function is called by:
 11916 ;;		_main
 11917 ;; This function uses a non-reentrant model
 11918 ;;
 11919                           
 11920                           	psect	text26
 11921  00074A                     __ptext26:
 11922                           	opt stack 0
 11923  00074A                     _InitApp:
 11924                           	opt stack 22
 11925                           
 11926                           ;user.c: 55: TRISDbits.TRISD1 = 0;
 11927                           
 11928                           ;incstack = 0
 11929  00074A  9295               	bcf	3989,1,c	;volatile
 11930                           
 11931                           ;user.c: 56: TRISDbits.TRISD2 = 0;
 11932  00074C  9495               	bcf	3989,2,c	;volatile
 11933                           
 11934                           ;user.c: 57: TRISDbits.TRISD0 = 0;
 11935  00074E  9095               	bcf	3989,0,c	;volatile
 11936                           
 11937                           ;user.c: 58: TRISAbits.TRISA0 = 1;
 11938  000750  8092               	bsf	3986,0,c	;volatile
 11939                           
 11940                           ;user.c: 59: TRISCbits.TRISC2 = 0;
 11941  000752  9494               	bcf	3988,2,c	;volatile
 11942                           
 11943                           ;user.c: 60: TRISCbits.TRISC1 = 0;
 11944  000754  9294               	bcf	3988,1,c	;volatile
 11945                           
 11946                           ;user.c: 61: TRISEbits.TRISE2 = 1;
 11947  000756  8496               	bsf	3990,2,c	;volatile
 11948                           
 11949                           ;user.c: 62: TRISEbits.TRISE1 = 0;
 11950  000758  9296               	bcf	3990,1,c	;volatile
 11951                           
 11952                           ;user.c: 64: TRISCbits.TRISC3 = 0;
 11953  00075A  9694               	bcf	3988,3,c	;volatile
 11954                           
 11955                           ;user.c: 65: TRISCbits.TRISC4 = 0;
 11956  00075C  9894               	bcf	3988,4,c	;volatile
 11957                           
 11958                           ;user.c: 67: LATC &= ~0b00001000;
 11959  00075E  968B               	bcf	3979,3,c	;volatile
 11960                           
 11961                           ;user.c: 68: delayUS(200);
 11962  000760  0EC8               	movlw	200
 11963  000762  0101               	movlb	1	; () banked
 11964  000764  6F74               	movwf	delayUS@US& (0+255),b
 11965  000766  0E00               	movlw	0
 11966  000768  6F75               	movwf	(delayUS@US+1)& (0+255),b
 11967  00076A  0E00               	movlw	0
 11968  00076C  6F76               	movwf	(delayUS@US+2)& (0+255),b
 11969  00076E  0E00               	movlw	0
 11970  000770  6F77               	movwf	(delayUS@US+3)& (0+255),b
 11971  000772  ECC6  F0BF         	call	_delayUS	;wreg free
 11972                           
 11973                           ;user.c: 69: TRISCbits.TRISC3 = 1;
 11974  000776  8694               	bsf	3988,3,c	;volatile
 11975                           
 11976                           ;user.c: 71: LATD &= ~(0b00000010 + 0b00000100 + 0b00000001);
 11977  000778  0EF8               	movlw	248
 11978  00077A  168C               	andwf	3980,f,c	;volatile
 11979                           
 11980                           ;user.c: 72: LATE &= ~0b00000010;
 11981  00077C  928D               	bcf	3981,1,c	;volatile
 11982                           
 11983                           ;user.c: 73: LATC &= ~(0b00000010);
 11984  00077E  928B               	bcf	3979,1,c	;volatile
 11985                           
 11986                           ;user.c: 76: TRISAbits.TRISA3 = 0;
 11987  000780  9692               	bcf	3986,3,c	;volatile
 11988                           
 11989                           ;user.c: 77: TRISAbits.TRISA4 = 0;
 11990  000782  9892               	bcf	3986,4,c	;volatile
 11991                           
 11992                           ;user.c: 78: TRISAbits.TRISA5 = 0;
 11993  000784  9A92               	bcf	3986,5,c	;volatile
 11994                           
 11995                           ;user.c: 79: TRISEbits.TRISE0 = 0;
 11996  000786  9096               	bcf	3990,0,c	;volatile
 11997                           
 11998                           ;user.c: 80: TRISDbits.TRISD4 = 0;
 11999  000788  9895               	bcf	3989,4,c	;volatile
 12000                           
 12001                           ;user.c: 81: TRISDbits.TRISD7 = 0;
 12002  00078A  9E95               	bcf	3989,7,c	;volatile
 12003                           
 12004                           ;user.c: 82: TRISDbits.TRISD6 = 0;
 12005  00078C  9C95               	bcf	3989,6,c	;volatile
 12006                           
 12007                           ;user.c: 83: TRISDbits.TRISD5 = 0;
 12008  00078E  9A95               	bcf	3989,5,c	;volatile
 12009                           
 12010                           ;user.c: 85: LATA &= ~(0b00001000+0b00010000+0b00100000);
 12011  000790  0EC7               	movlw	199
 12012  000792  1689               	andwf	3977,f,c	;volatile
 12013                           
 12014                           ;user.c: 86: LATD &= ~(0b10000000 + 0b00100000 + 0b01000000);
 12015  000794  0E1F               	movlw	31
 12016  000796  168C               	andwf	3980,f,c	;volatile
 12017                           
 12018                           ;user.c: 87: LATE &= ~0b00000001;
 12019  000798  908D               	bcf	3981,0,c	;volatile
 12020                           
 12021                           ;user.c: 90: TRISBbits.TRISB4 = 1;
 12022  00079A  8893               	bsf	3987,4,c	;volatile
 12023                           
 12024                           ;user.c: 93: TRISBbits.TRISB0 = 1;
 12025  00079C  8093               	bsf	3987,0,c	;volatile
 12026                           
 12027                           ;user.c: 95: RCONbits.IPEN = 1;
 12028  00079E  8ED0               	bsf	4048,7,c	;volatile
 12029                           
 12030                           ;user.c: 96: INTCONbits.PEIE = 1;
 12031  0007A0  8CF2               	bsf	intcon,6,c	;volatile
 12032                           
 12033                           ;user.c: 97: INTCONbits.GIE = 1;
 12034  0007A2  8EF2               	bsf	intcon,7,c	;volatile
 12035  0007A4  0012               	return		;funcret
 12036  0007A6                     __end_of_InitApp:
 12037                           	opt stack 0
 12038                           tblptru	equ	0xFF8
 12039                           tblptrh	equ	0xFF7
 12040                           tblptrl	equ	0xFF6
 12041                           tablat	equ	0xFF5
 12042                           prodh	equ	0xFF4
 12043                           prodl	equ	0xFF3
 12044                           intcon	equ	0xFF2
 12045                           intcon2	equ	0xFF1
 12046                           postinc0	equ	0xFEE
 12047                           plusw0	equ	0xFEB
 12048                           wreg	equ	0xFE8
 12049                           postdec1	equ	0xFE5
 12050                           fsr1l	equ	0xFE1
 12051                           postinc2	equ	0xFDE
 12052                           postdec2	equ	0xFDD
 12053                           plusw2	equ	0xFDB
 12054                           fsr2h	equ	0xFDA
 12055                           fsr2l	equ	0xFD9
 12056                           status	equ	0xFD8
 12057                           
 12058 ;; *************** function _EnableInternalADC *****************
 12059 ;; Defined at:
 12060 ;;		line 53 in file "ADC.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;  channels        1    wreg     unsigned char 
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;  channels        1   15[BANK1 ] unsigned char 
 12065 ;;  config          1   14[BANK1 ] unsigned char 
 12066 ;; Return value:  Size  Location     Type
 12067 ;;		None               void
 12068 ;; Registers used:
 12069 ;;		wreg, status,2, status,0
 12070 ;; Tracked objects:
 12071 ;;		On entry : 0/0
 12072 ;;		On exit  : 0/0
 12073 ;;		Unchanged: 0/0
 12074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12076 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12078 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12079 ;;Total ram usage:        2 bytes
 12080 ;; Hardware stack levels used:    1
 12081 ;; Hardware stack levels required when called:    7
 12082 ;; This function calls:
 12083 ;;		Nothing
 12084 ;; This function is called by:
 12085 ;;		_main
 12086 ;; This function uses a non-reentrant model
 12087 ;;
 12088                           
 12089                           	psect	text27
 12090  017258                     __ptext27:
 12091                           	opt stack 0
 12092  017258                     _EnableInternalADC:
 12093                           	opt stack 23
 12094                           
 12095                           ;incstack = 0
 12096                           ;EnableInternalADC@channels stored from wreg
 12097  017258  0101               	movlb	1	; () banked
 12098  01725A  6F75               	movwf	EnableInternalADC@channels& (0+255),b
 12099                           
 12100                           ; BSR set to: 1
 12101                           ;ADC.c: 55: unsigned char config =0;
 12102  01725C  0E00               	movlw	0
 12103  01725E  0101               	movlb	1	; () banked
 12104  017260  6F74               	movwf	EnableInternalADC@config& (0+255),b
 12105                           
 12106                           ; BSR set to: 1
 12107                           ;ADC.c: 57: if(channels == 1)
 12108  017262  0101               	movlb	1	; () banked
 12109  017264  0575               	decf	EnableInternalADC@channels& (0+255),w,b
 12110  017266  A4D8               	btfss	status,2,c
 12111  017268  D002               	goto	l10683
 12112                           
 12113                           ; BSR set to: 1
 12114                           ;ADC.c: 58: {
 12115                           ;ADC.c: 59: config |= 0b00001110;
 12116  01726A  0E0E               	movlw	14
 12117  01726C  D03F               	goto	L8
 12118  01726E                     l10683:
 12119                           
 12120                           ; BSR set to: 1
 12121                           ;ADC.c: 61: else if(channels ==2)
 12122  01726E  0E02               	movlw	2
 12123  017270  0101               	movlb	1	; () banked
 12124  017272  1975               	xorwf	EnableInternalADC@channels& (0+255),w,b
 12125  017274  A4D8               	btfss	status,2,c
 12126  017276  D002               	goto	l10687
 12127                           
 12128                           ; BSR set to: 1
 12129                           ;ADC.c: 62: {
 12130                           ;ADC.c: 63: config |= 0b00001101;
 12131  017278  0E0D               	movlw	13
 12132  01727A  D038               	goto	L8
 12133  01727C                     l10687:
 12134                           
 12135                           ; BSR set to: 1
 12136                           ;ADC.c: 65: else if(channels ==3)
 12137  01727C  0E03               	movlw	3
 12138  01727E  0101               	movlb	1	; () banked
 12139  017280  1975               	xorwf	EnableInternalADC@channels& (0+255),w,b
 12140  017282  A4D8               	btfss	status,2,c
 12141  017284  D002               	goto	l10691
 12142                           
 12143                           ; BSR set to: 1
 12144                           ;ADC.c: 66: {
 12145                           ;ADC.c: 67: config |= 0b00001100;
 12146  017286  0E0C               	movlw	12
 12147  017288  D031               	goto	L8
 12148  01728A                     l10691:
 12149                           
 12150                           ; BSR set to: 1
 12151                           ;ADC.c: 69: else if(channels ==4)
 12152  01728A  0E04               	movlw	4
 12153  01728C  0101               	movlb	1	; () banked
 12154  01728E  1975               	xorwf	EnableInternalADC@channels& (0+255),w,b
 12155  017290  A4D8               	btfss	status,2,c
 12156  017292  D002               	goto	l10695
 12157                           
 12158                           ; BSR set to: 1
 12159                           ;ADC.c: 70: {
 12160                           ;ADC.c: 71: config |= 0b00001011;
 12161  017294  0E0B               	movlw	11
 12162  017296  D02A               	goto	L8
 12163  017298                     l10695:
 12164                           
 12165                           ; BSR set to: 1
 12166                           ;ADC.c: 73: else if(channels ==5)
 12167  017298  0E05               	movlw	5
 12168  01729A  0101               	movlb	1	; () banked
 12169  01729C  1975               	xorwf	EnableInternalADC@channels& (0+255),w,b
 12170  01729E  A4D8               	btfss	status,2,c
 12171  0172A0  D002               	goto	l10699
 12172                           
 12173                           ; BSR set to: 1
 12174                           ;ADC.c: 74: {
 12175                           ;ADC.c: 75: config |= 0b00001010;
 12176  0172A2  0E0A               	movlw	10
 12177  0172A4  D023               	goto	L8
 12178  0172A6                     l10699:
 12179                           
 12180                           ; BSR set to: 1
 12181                           ;ADC.c: 77: else if(channels ==6)
 12182  0172A6  0E06               	movlw	6
 12183  0172A8  0101               	movlb	1	; () banked
 12184  0172AA  1975               	xorwf	EnableInternalADC@channels& (0+255),w,b
 12185  0172AC  A4D8               	btfss	status,2,c
 12186  0172AE  D002               	goto	l10703
 12187                           
 12188                           ; BSR set to: 1
 12189                           ;ADC.c: 78: {
 12190                           ;ADC.c: 79: config |= 0b00001001;
 12191  0172B0  0E09               	movlw	9
 12192  0172B2  D01C               	goto	L8
 12193  0172B4                     l10703:
 12194                           
 12195                           ; BSR set to: 1
 12196                           ;ADC.c: 81: else if(channels ==7)
 12197  0172B4  0E07               	movlw	7
 12198  0172B6  0101               	movlb	1	; () banked
 12199  0172B8  1975               	xorwf	EnableInternalADC@channels& (0+255),w,b
 12200  0172BA  A4D8               	btfss	status,2,c
 12201  0172BC  D003               	goto	l10707
 12202                           
 12203                           ; BSR set to: 1
 12204                           ;ADC.c: 82: {
 12205                           ;ADC.c: 83: config |= 0b00001000;
 12206  0172BE  0101               	movlb	1	; () banked
 12207  0172C0  8774               	bsf	EnableInternalADC@config& (0+255),3,b
 12208                           
 12209                           ;ADC.c: 84: }
 12210  0172C2  D01A               	goto	l10721
 12211  0172C4                     l10707:
 12212                           
 12213                           ; BSR set to: 1
 12214                           ;ADC.c: 85: else if(channels ==8)
 12215  0172C4  0E08               	movlw	8
 12216  0172C6  0101               	movlb	1	; () banked
 12217  0172C8  1975               	xorwf	EnableInternalADC@channels& (0+255),w,b
 12218  0172CA  A4D8               	btfss	status,2,c
 12219  0172CC  D002               	goto	l10711
 12220                           
 12221                           ; BSR set to: 1
 12222                           ;ADC.c: 86: {
 12223                           ;ADC.c: 87: config |= 0b00000111;
 12224  0172CE  0E07               	movlw	7
 12225  0172D0  D00D               	goto	L8
 12226  0172D2                     l10711:
 12227                           
 12228                           ; BSR set to: 1
 12229                           ;ADC.c: 89: else if(channels ==9)
 12230  0172D2  0E09               	movlw	9
 12231  0172D4  0101               	movlb	1	; () banked
 12232  0172D6  1975               	xorwf	EnableInternalADC@channels& (0+255),w,b
 12233  0172D8  A4D8               	btfss	status,2,c
 12234  0172DA  D002               	goto	l10715
 12235                           
 12236                           ; BSR set to: 1
 12237                           ;ADC.c: 90: {
 12238                           ;ADC.c: 91: config |= 0b00000110;
 12239  0172DC  0E06               	movlw	6
 12240  0172DE  D006               	goto	L8
 12241  0172E0                     l10715:
 12242                           
 12243                           ; BSR set to: 1
 12244                           ;ADC.c: 93: else if(channels ==10)
 12245  0172E0  0E0A               	movlw	10
 12246  0172E2  0101               	movlb	1	; () banked
 12247  0172E4  1975               	xorwf	EnableInternalADC@channels& (0+255),w,b
 12248  0172E6  A4D8               	btfss	status,2,c
 12249  0172E8  D004               	goto	l10719
 12250                           
 12251                           ; BSR set to: 1
 12252                           ;ADC.c: 94: {
 12253                           ;ADC.c: 95: config |= 0b00000101;
 12254  0172EA  0E05               	movlw	5
 12255  0172EC                     L8:
 12256  0172EC  0101               	movlb	1	; () banked
 12257  0172EE  1374               	iorwf	EnableInternalADC@config& (0+255),f,b
 12258                           
 12259                           ;ADC.c: 96: }
 12260  0172F0  D003               	goto	l10721
 12261  0172F2                     l10719:
 12262                           
 12263                           ; BSR set to: 1
 12264                           ;ADC.c: 97: else
 12265                           ;ADC.c: 98: {
 12266                           ;ADC.c: 99: config |= 0b00000100;
 12267  0172F2  0101               	movlb	1	; () banked
 12268  0172F4  8574               	bsf	EnableInternalADC@config& (0+255),2,b
 12269                           
 12270                           ; BSR set to: 1
 12271                           
 12272                           ; BSR set to: 1
 12273                           
 12274                           ; BSR set to: 1
 12275                           
 12276                           ; BSR set to: 1
 12277                           
 12278                           ; BSR set to: 1
 12279                           
 12280                           ; BSR set to: 1
 12281                           
 12282                           ; BSR set to: 1
 12283                           
 12284                           ; BSR set to: 1
 12285                           
 12286                           ; BSR set to: 1
 12287  0172F6  D000               	goto	l10721
 12288  0172F8                     l10721:
 12289                           
 12290                           ; BSR set to: 1
 12291                           ;ADC.c: 100: }
 12292                           ;ADC.c: 102: ADCON1 = config;
 12293  0172F8  C174  FFC1         	movff	EnableInternalADC@config,4033	;volatile
 12294                           
 12295                           ; BSR set to: 1
 12296  0172FC  0012               	return		;funcret
 12297  0172FE                     __end_of_EnableInternalADC:
 12298                           	opt stack 0
 12299                           tblptru	equ	0xFF8
 12300                           tblptrh	equ	0xFF7
 12301                           tblptrl	equ	0xFF6
 12302                           tablat	equ	0xFF5
 12303                           prodh	equ	0xFF4
 12304                           prodl	equ	0xFF3
 12305                           intcon	equ	0xFF2
 12306                           intcon2	equ	0xFF1
 12307                           postinc0	equ	0xFEE
 12308                           plusw0	equ	0xFEB
 12309                           wreg	equ	0xFE8
 12310                           postdec1	equ	0xFE5
 12311                           fsr1l	equ	0xFE1
 12312                           postinc2	equ	0xFDE
 12313                           postdec2	equ	0xFDD
 12314                           plusw2	equ	0xFDB
 12315                           fsr2h	equ	0xFDA
 12316                           fsr2l	equ	0xFD9
 12317                           status	equ	0xFD8
 12318                           
 12319 ;; *************** function _ContrastPWM_init *****************
 12320 ;; Defined at:
 12321 ;;		line 81 in file "PWM.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;		None
 12324 ;; Auto vars:     Size  Location     Type
 12325 ;;		None
 12326 ;; Return value:  Size  Location     Type
 12327 ;;		None               void
 12328 ;; Registers used:
 12329 ;;		wreg, status,2, status,0, cstack
 12330 ;; Tracked objects:
 12331 ;;		On entry : 0/0
 12332 ;;		On exit  : 0/0
 12333 ;;		Unchanged: 0/0
 12334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12339 ;;Total ram usage:        0 bytes
 12340 ;; Hardware stack levels used:    1
 12341 ;; Hardware stack levels required when called:   10
 12342 ;; This function calls:
 12343 ;;		_SetDuty
 12344 ;; This function is called by:
 12345 ;;		_main
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           	psect	text28
 12350  001126                     __ptext28:
 12351                           	opt stack 0
 12352  001126                     _ContrastPWM_init:
 12353                           	opt stack 20
 12354                           
 12355                           ;PWM.c: 85: SetDuty(0);
 12356                           
 12357                           ; BSR set to: 1
 12358                           ;incstack = 0
 12359  001126  0E00               	movlw	0
 12360  001128  EC22  F0B8         	call	_SetDuty
 12361                           
 12362                           ;PWM.c: 86: ECCP1CON |= 0b00001100;
 12363  00112C  0E0C               	movlw	12
 12364  00112E  12BA               	iorwf	4026,f,c	;volatile
 12365  001130  0012               	return		;funcret
 12366  001132                     __end_of_ContrastPWM_init:
 12367                           	opt stack 0
 12368                           tblptru	equ	0xFF8
 12369                           tblptrh	equ	0xFF7
 12370                           tblptrl	equ	0xFF6
 12371                           tablat	equ	0xFF5
 12372                           prodh	equ	0xFF4
 12373                           prodl	equ	0xFF3
 12374                           intcon	equ	0xFF2
 12375                           intcon2	equ	0xFF1
 12376                           postinc0	equ	0xFEE
 12377                           plusw0	equ	0xFEB
 12378                           wreg	equ	0xFE8
 12379                           postdec1	equ	0xFE5
 12380                           fsr1l	equ	0xFE1
 12381                           postinc2	equ	0xFDE
 12382                           postdec2	equ	0xFDD
 12383                           plusw2	equ	0xFDB
 12384                           fsr2h	equ	0xFDA
 12385                           fsr2l	equ	0xFD9
 12386                           status	equ	0xFD8
 12387                           
 12388 ;; *************** function _ConfigureOscillator *****************
 12389 ;; Defined at:
 12390 ;;		line 52 in file "system.c"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;		None
 12393 ;; Auto vars:     Size  Location     Type
 12394 ;;		None
 12395 ;; Return value:  Size  Location     Type
 12396 ;;		None               void
 12397 ;; Registers used:
 12398 ;;		None
 12399 ;; Tracked objects:
 12400 ;;		On entry : 0/0
 12401 ;;		On exit  : 0/0
 12402 ;;		Unchanged: 0/0
 12403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12408 ;;Total ram usage:        0 bytes
 12409 ;; Hardware stack levels used:    1
 12410 ;; Hardware stack levels required when called:    7
 12411 ;; This function calls:
 12412 ;;		Nothing
 12413 ;; This function is called by:
 12414 ;;		_main
 12415 ;; This function uses a non-reentrant model
 12416 ;;
 12417                           
 12418                           	psect	text29
 12419  001150                     __ptext29:
 12420                           	opt stack 0
 12421  001150                     _ConfigureOscillator:
 12422                           	opt stack 23
 12423                           
 12424                           ;system.c: 56: while(!(OSCCON & 0b00001000));
 12425                           
 12426                           ;incstack = 0
 12427  001150  D000               	goto	l249
 12428  001152                     l249:
 12429  001152  A6D3               	btfss	4051,3,c	;volatile
 12430  001154  D7FE               	goto	l249
 12431  001156  0012               	return		;funcret
 12432  001158                     __end_of_ConfigureOscillator:
 12433                           	opt stack 0
 12434                           tblptru	equ	0xFF8
 12435                           tblptrh	equ	0xFF7
 12436                           tblptrl	equ	0xFF6
 12437                           tablat	equ	0xFF5
 12438                           prodh	equ	0xFF4
 12439                           prodl	equ	0xFF3
 12440                           intcon	equ	0xFF2
 12441                           intcon2	equ	0xFF1
 12442                           postinc0	equ	0xFEE
 12443                           plusw0	equ	0xFEB
 12444                           wreg	equ	0xFE8
 12445                           postdec1	equ	0xFE5
 12446                           fsr1l	equ	0xFE1
 12447                           postinc2	equ	0xFDE
 12448                           postdec2	equ	0xFDD
 12449                           plusw2	equ	0xFDB
 12450                           fsr2h	equ	0xFDA
 12451                           fsr2l	equ	0xFD9
 12452                           status	equ	0xFD8
 12453                           
 12454 ;; *************** function _Command *****************
 12455 ;; Defined at:
 12456 ;;		line 67 in file "StringCommand.c"
 12457 ;; Parameters:    Size  Location     Type
 12458 ;;  Input           2   92[BANK1 ] PTR unsigned char 
 12459 ;;		 -> Rxdata(100), 
 12460 ;; Auto vars:     Size  Location     Type
 12461 ;;  buf           200    0[BANK6 ] unsigned char [200]
 12462 ;;  tempLONG        4  222[BANK6 ] long 
 12463 ;;  PARITYtemp      4  212[BANK6 ] unsigned long 
 12464 ;;  BAUDtemp        4  206[BANK6 ] unsigned long 
 12465 ;;  duty            2  220[BANK6 ] int 
 12466 ;;  channel         2  218[BANK6 ] int 
 12467 ;;  contrast        2  216[BANK6 ] int 
 12468 ;;  RTC_Battery_    2  210[BANK6 ] unsigned int 
 12469 ;;  RTC_Battery_    2  204[BANK6 ] unsigned int 
 12470 ;;  RTC_Battery_    2  202[BANK6 ] unsigned int 
 12471 ;;  ADC_Value       2  200[BANK6 ] unsigned int 
 12472 ;; Return value:  Size  Location     Type
 12473 ;;                  1    wreg      unsigned char 
 12474 ;; Registers used:
 12475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12481 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0     226       0       0       0       0       
      +0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12484 ;;      Totals:         0       0       2       0       0       0       0     226       0       0       0       0       
      +0       0
 12485 ;;Total ram usage:      228 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:   12
 12488 ;; This function calls:
 12489 ;;		_GetBaud
 12490 ;;		_GetEnteredNumber
 12491 ;;		_ISNUMBER
 12492 ;;		_InternalADC_Read
 12493 ;;		_LCDPrintString
 12494 ;;		_LCD_Scroll
 12495 ;;		_LCDdisplayFeedback
 12496 ;;		_Parse_Time
 12497 ;;		_READ_RTC_TIME
 12498 ;;		_RemoveSpaces
 12499 ;;		_SET_RTC_TIME
 12500 ;;		_Send_Config1
 12501 ;;		_Send_Config2
 12502 ;;		_SetBaud
 12503 ;;		_SetContrast
 12504 ;;		_SetDuty
 12505 ;;		_SetLCDcursor
 12506 ;;		_SprintDate
 12507 ;;		_StartsWith
 12508 ;;		_StringAddEqual
 12509 ;;		_StringContains
 12510 ;;		_StringMatch
 12511 ;;		_UARTstring
 12512 ;;		___ftdiv
 12513 ;;		___ftmul
 12514 ;;		___fttol
 12515 ;;		___lwmod
 12516 ;;		___lwtoft
 12517 ;;		_cleanBuffer
 12518 ;;		_delayUS
 12519 ;;		_lowercase
 12520 ;;		_sprintf
 12521 ;; This function is called by:
 12522 ;;		_main
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text30
 12527  010000                     __ptext30:
 12528                           	opt stack 0
 12529  010000                     _Command:
 12530                           	opt stack 18
 12531                           
 12532                           ;StringCommand.c: 69: int channel = 20;
 12533                           
 12534                           ;incstack = 0
 12535  010000  0E00               	movlw	0
 12536  010002  0106               	movlb	6	; () banked
 12537  010004  6FDB               	movwf	(Command@channel+1)& (0+255),b
 12538  010006  0E14               	movlw	20
 12539  010008  6FDA               	movwf	Command@channel& (0+255),b
 12540                           
 12541                           ;StringCommand.c: 70: unsigned int ADC_Value = 0;
 12542  01000A  0E00               	movlw	0
 12543  01000C  0106               	movlb	6	; () banked
 12544  01000E  6FC9               	movwf	(Command@ADC_Value+1)& (0+255),b
 12545  010010  0E00               	movlw	0
 12546  010012  6FC8               	movwf	Command@ADC_Value& (0+255),b
 12547                           
 12548                           ;StringCommand.c: 71: unsigned int RTC_Battery_Value =0;
 12549  010014  0E00               	movlw	0
 12550  010016  0106               	movlb	6	; () banked
 12551  010018  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 12552  01001A  0E00               	movlw	0
 12553  01001C  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 12554                           
 12555                           ;StringCommand.c: 72: unsigned int RTC_Battery_Value_HIGH_decimal =0;
 12556  01001E  0E00               	movlw	0
 12557  010020  0106               	movlb	6	; () banked
 12558  010022  6FCD               	movwf	(Command@RTC_Battery_Value_HIGH_decimal+1)& (0+255),b
 12559  010024  0E00               	movlw	0
 12560  010026  6FCC               	movwf	Command@RTC_Battery_Value_HIGH_decimal& (0+255),b
 12561                           
 12562                           ;StringCommand.c: 73: unsigned int RTC_Battery_Value_LOW_decimal =0;
 12563  010028  0E00               	movlw	0
 12564  01002A  0106               	movlb	6	; () banked
 12565  01002C  6FD3               	movwf	(Command@RTC_Battery_Value_LOW_decimal+1)& (0+255),b
 12566  01002E  0E00               	movlw	0
 12567  010030  6FD2               	movwf	Command@RTC_Battery_Value_LOW_decimal& (0+255),b
 12568                           
 12569                           ;StringCommand.c: 74: int duty = 0;
 12570  010032  0E00               	movlw	0
 12571  010034  0106               	movlb	6	; () banked
 12572  010036  6FDD               	movwf	(Command@duty+1)& (0+255),b
 12573  010038  0E00               	movlw	0
 12574  01003A  6FDC               	movwf	Command@duty& (0+255),b
 12575                           
 12576                           ;StringCommand.c: 75: long tempLONG;
 12577                           ;StringCommand.c: 76: int contrast = 0;
 12578  01003C  0E00               	movlw	0
 12579  01003E  0106               	movlb	6	; () banked
 12580  010040  6FD9               	movwf	(Command@contrast+1)& (0+255),b
 12581  010042  0E00               	movlw	0
 12582  010044  6FD8               	movwf	Command@contrast& (0+255),b
 12583                           
 12584                           ;StringCommand.c: 77: unsigned char buf[200];
 12585                           ;StringCommand.c: 78: unsigned long BAUDtemp = 0;
 12586  010046  0E00               	movlw	0
 12587  010048  0106               	movlb	6	; () banked
 12588  01004A  6FCE               	movwf	Command@BAUDtemp& (0+255),b
 12589  01004C  0E00               	movlw	0
 12590  01004E  6FCF               	movwf	(Command@BAUDtemp+1)& (0+255),b
 12591  010050  0E00               	movlw	0
 12592  010052  6FD0               	movwf	(Command@BAUDtemp+2)& (0+255),b
 12593  010054  0E00               	movlw	0
 12594  010056  6FD1               	movwf	(Command@BAUDtemp+3)& (0+255),b
 12595                           
 12596                           ;StringCommand.c: 79: unsigned long PARITYtemp = 0;
 12597  010058  0E00               	movlw	0
 12598  01005A  0106               	movlb	6	; () banked
 12599  01005C  6FD4               	movwf	Command@PARITYtemp& (0+255),b
 12600  01005E  0E00               	movlw	0
 12601  010060  6FD5               	movwf	(Command@PARITYtemp+1)& (0+255),b
 12602  010062  0E00               	movlw	0
 12603  010064  6FD6               	movwf	(Command@PARITYtemp+2)& (0+255),b
 12604  010066  0E00               	movlw	0
 12605  010068  6FD7               	movwf	(Command@PARITYtemp+3)& (0+255),b
 12606                           
 12607                           ; BSR set to: 6
 12608                           ;StringCommand.c: 81: UARTstring("\r\n\n");
 12609  01006A  0EE7               	movlw	low (STR_245+65)
 12610  01006C  0101               	movlb	1	; () banked
 12611  01006E  6F7F               	movwf	UARTstring@data& (0+255),b
 12612  010070  0EEE               	movlw	high (STR_245+65)
 12613  010072  0101               	movlb	1	; () banked
 12614  010074  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12615  010076  EC24  F0BA         	call	_UARTstring	;wreg free
 12616                           
 12617                           ;StringCommand.c: 82: lowercase(Input);
 12618  01007A  C1C2  F174         	movff	Command@Input,lowercase@Input
 12619  01007E  C1C3  F175         	movff	Command@Input+1,lowercase@Input+1
 12620  010082  ECF4  F0BB         	call	_lowercase	;wreg free
 12621                           
 12622                           ;StringCommand.c: 83: RemoveSpaces(Input);
 12623  010086  C1C2  F183         	movff	Command@Input,RemoveSpaces@This
 12624  01008A  C1C3  F184         	movff	Command@Input+1,RemoveSpaces@This+1
 12625  01008E  EC12  F0BB         	call	_RemoveSpaces	;wreg free
 12626                           
 12627                           ;StringCommand.c: 85: if(StringMatch(Input, ">"))
 12628  010092  C1C2  F174         	movff	Command@Input,StringMatch@This
 12629  010096  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 12630  01009A  0ED1               	movlw	low (STR_21+27)
 12631  01009C  0101               	movlb	1	; () banked
 12632  01009E  6F76               	movwf	StringMatch@That& (0+255),b
 12633  0100A0  0EF4               	movlw	high (STR_21+27)
 12634  0100A2  0101               	movlb	1	; () banked
 12635  0100A4  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 12636  0100A6  EC02  F0BD         	call	_StringMatch	;wreg free
 12637  0100AA  0900               	iorlw	0
 12638  0100AC  B4D8               	btfsc	status,2,c
 12639  0100AE  D004               	goto	l15065
 12640                           
 12641                           ;StringCommand.c: 86: {
 12642                           ;StringCommand.c: 87: return 0;
 12643  0100B0  0E00               	movlw	0
 12644  0100B2  0012               	return	
 12645                           
 12646                           ;StringCommand.c: 88: }
 12647  0100B4  EF7C  F093         	goto	l685
 12648  0100B8                     l15065:
 12649                           
 12650                           ;StringCommand.c: 89: else if (StartsWith(Input, "led"))
 12651  0100B8  C1C2  F174         	movff	Command@Input,StartsWith@This
 12652  0100BC  C1C3  F175         	movff	Command@Input+1,StartsWith@This+1
 12653  0100C0  0E71               	movlw	low (STR_160+3)
 12654  0100C2  0101               	movlb	1	; () banked
 12655  0100C4  6F76               	movwf	StartsWith@That& (0+255),b
 12656  0100C6  0EFF               	movlw	high (STR_160+3)
 12657  0100C8  0101               	movlb	1	; () banked
 12658  0100CA  6F77               	movwf	(StartsWith@That+1)& (0+255),b
 12659  0100CC  ECAA  F0BB         	call	_StartsWith	;wreg free
 12660  0100D0  0900               	iorlw	0
 12661  0100D2  B4D8               	btfsc	status,2,c
 12662  0100D4  D141               	goto	l15129
 12663                           
 12664                           ;StringCommand.c: 90: {
 12665                           ;StringCommand.c: 91: if (!StringContains(Input, "?"))
 12666  0100D6  C1C2  F174         	movff	Command@Input,StringContains@This
 12667  0100DA  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 12668  0100DE  0E17               	movlw	low (STR_83+14)
 12669  0100E0  0101               	movlb	1	; () banked
 12670  0100E2  6F76               	movwf	StringContains@That& (0+255),b
 12671  0100E4  0EFA               	movlw	high (STR_83+14)
 12672  0100E6  0101               	movlb	1	; () banked
 12673  0100E8  6F77               	movwf	(StringContains@That+1)& (0+255),b
 12674  0100EA  ECC2  F0BC         	call	_StringContains	;wreg free
 12675  0100EE  0900               	iorlw	0
 12676  0100F0  A4D8               	btfss	status,2,c
 12677  0100F2  D0E0               	goto	l15119
 12678                           
 12679                           ;StringCommand.c: 92: {
 12680                           ;StringCommand.c: 93: if (StringMatch(Input, "led0"))
 12681  0100F4  C1C2  F174         	movff	Command@Input,StringMatch@This
 12682  0100F8  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 12683  0100FC  0EBD               	movlw	low STR_40
 12684  0100FE  0101               	movlb	1	; () banked
 12685  010100  6F76               	movwf	StringMatch@That& (0+255),b
 12686  010102  0EFF               	movlw	high STR_40
 12687  010104  0101               	movlb	1	; () banked
 12688  010106  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 12689  010108  EC02  F0BD         	call	_StringMatch	;wreg free
 12690  01010C  0900               	iorlw	0
 12691  01010E  B4D8               	btfsc	status,2,c
 12692  010110  D014               	goto	l15077
 12693                           
 12694                           ;StringCommand.c: 94: {
 12695                           ;StringCommand.c: 95: LATD ^= 0b00000010;
 12696  010112  0E02               	movlw	2
 12697  010114  1A8C               	xorwf	3980,f,c	;volatile
 12698                           
 12699                           ;StringCommand.c: 96: UARTstring("LED0 Toggled");
 12700  010116  0E21               	movlw	low STR_41
 12701  010118  0101               	movlb	1	; () banked
 12702  01011A  6F7F               	movwf	UARTstring@data& (0+255),b
 12703  01011C  0EFD               	movlw	high STR_41
 12704  01011E  0101               	movlb	1	; () banked
 12705  010120  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12706  010122  EC24  F0BA         	call	_UARTstring	;wreg free
 12707                           
 12708                           ;StringCommand.c: 97: LCDdisplayFeedback("LED0 Toggled");
 12709  010126  0E21               	movlw	low STR_41
 12710  010128  0101               	movlb	1	; () banked
 12711  01012A  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12712  01012C  0EFD               	movlw	high STR_41
 12713  01012E  0101               	movlb	1	; () banked
 12714  010130  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12715  010132  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 12716                           
 12717                           ;StringCommand.c: 98: }
 12718  010136  EF7C  F093         	goto	l685
 12719  01013A                     l15077:
 12720                           
 12721                           ;StringCommand.c: 99: else if (StringMatch(Input, "led0=on"))
 12722  01013A  C1C2  F174         	movff	Command@Input,StringMatch@This
 12723  01013E  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 12724  010142  0E2A               	movlw	low STR_43
 12725  010144  0101               	movlb	1	; () banked
 12726  010146  6F76               	movwf	StringMatch@That& (0+255),b
 12727  010148  0EFF               	movlw	high STR_43
 12728  01014A  0101               	movlb	1	; () banked
 12729  01014C  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 12730  01014E  EC02  F0BD         	call	_StringMatch	;wreg free
 12731  010152  0900               	iorlw	0
 12732  010154  B4D8               	btfsc	status,2,c
 12733  010156  D013               	goto	l15085
 12734                           
 12735                           ;StringCommand.c: 100: {
 12736                           ;StringCommand.c: 101: LATD |= 0b00000010;
 12737  010158  828C               	bsf	3980,1,c	;volatile
 12738                           
 12739                           ;StringCommand.c: 102: UARTstring("LED0 On");
 12740  01015A  0E1A               	movlw	low STR_44
 12741  01015C  0101               	movlb	1	; () banked
 12742  01015E  6F7F               	movwf	UARTstring@data& (0+255),b
 12743  010160  0EFF               	movlw	high STR_44
 12744  010162  0101               	movlb	1	; () banked
 12745  010164  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12746  010166  EC24  F0BA         	call	_UARTstring	;wreg free
 12747                           
 12748                           ;StringCommand.c: 103: LCDdisplayFeedback("LED0 On");
 12749  01016A  0E1A               	movlw	low STR_44
 12750  01016C  0101               	movlb	1	; () banked
 12751  01016E  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12752  010170  0EFF               	movlw	high STR_44
 12753  010172  0101               	movlb	1	; () banked
 12754  010174  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12755  010176  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 12756                           
 12757                           ;StringCommand.c: 104: }
 12758  01017A  EF7C  F093         	goto	l685
 12759  01017E                     l15085:
 12760                           
 12761                           ;StringCommand.c: 105: else if (StringMatch(Input, "led0=off"))
 12762  01017E  C1C2  F174         	movff	Command@Input,StringMatch@This
 12763  010182  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 12764  010186  0EB3               	movlw	low STR_46
 12765  010188  0101               	movlb	1	; () banked
 12766  01018A  6F76               	movwf	StringMatch@That& (0+255),b
 12767  01018C  0EFE               	movlw	high STR_46
 12768  01018E  0101               	movlb	1	; () banked
 12769  010190  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 12770  010192  EC02  F0BD         	call	_StringMatch	;wreg free
 12771  010196  0900               	iorlw	0
 12772  010198  B4D8               	btfsc	status,2,c
 12773  01019A  D013               	goto	l15093
 12774                           
 12775                           ;StringCommand.c: 106: {
 12776                           ;StringCommand.c: 107: LATD &= ~0b00000010;
 12777  01019C  928C               	bcf	3980,1,c	;volatile
 12778                           
 12779                           ;StringCommand.c: 108: UARTstring("LED0 Off");
 12780  01019E  0EA1               	movlw	low STR_47
 12781  0101A0  0101               	movlb	1	; () banked
 12782  0101A2  6F7F               	movwf	UARTstring@data& (0+255),b
 12783  0101A4  0EFE               	movlw	high STR_47
 12784  0101A6  0101               	movlb	1	; () banked
 12785  0101A8  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12786  0101AA  EC24  F0BA         	call	_UARTstring	;wreg free
 12787                           
 12788                           ;StringCommand.c: 109: LCDdisplayFeedback("LED0 Off");
 12789  0101AE  0EA1               	movlw	low STR_47
 12790  0101B0  0101               	movlb	1	; () banked
 12791  0101B2  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12792  0101B4  0EFE               	movlw	high STR_47
 12793  0101B6  0101               	movlb	1	; () banked
 12794  0101B8  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12795  0101BA  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 12796                           
 12797                           ;StringCommand.c: 110: }
 12798  0101BE  EF7C  F093         	goto	l685
 12799  0101C2                     l15093:
 12800                           
 12801                           ;StringCommand.c: 111: else if (StringMatch(Input, "led1"))
 12802  0101C2  C1C2  F174         	movff	Command@Input,StringMatch@This
 12803  0101C6  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 12804  0101CA  0EC7               	movlw	low STR_49
 12805  0101CC  0101               	movlb	1	; () banked
 12806  0101CE  6F76               	movwf	StringMatch@That& (0+255),b
 12807  0101D0  0EFF               	movlw	high STR_49
 12808  0101D2  0101               	movlb	1	; () banked
 12809  0101D4  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 12810  0101D6  EC02  F0BD         	call	_StringMatch	;wreg free
 12811  0101DA  0900               	iorlw	0
 12812  0101DC  B4D8               	btfsc	status,2,c
 12813  0101DE  D014               	goto	l15101
 12814                           
 12815                           ;StringCommand.c: 112: {
 12816                           ;StringCommand.c: 113: LATD ^= 0b00000100;
 12817  0101E0  0E04               	movlw	4
 12818  0101E2  1A8C               	xorwf	3980,f,c	;volatile
 12819                           
 12820                           ;StringCommand.c: 114: UARTstring("LED1 Toggled");
 12821  0101E4  0E2E               	movlw	low STR_50
 12822  0101E6  0101               	movlb	1	; () banked
 12823  0101E8  6F7F               	movwf	UARTstring@data& (0+255),b
 12824  0101EA  0EFD               	movlw	high STR_50
 12825  0101EC  0101               	movlb	1	; () banked
 12826  0101EE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12827  0101F0  EC24  F0BA         	call	_UARTstring	;wreg free
 12828                           
 12829                           ;StringCommand.c: 115: LCDdisplayFeedback("LED1 Toggled");
 12830  0101F4  0E2E               	movlw	low STR_50
 12831  0101F6  0101               	movlb	1	; () banked
 12832  0101F8  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12833  0101FA  0EFD               	movlw	high STR_50
 12834  0101FC  0101               	movlb	1	; () banked
 12835  0101FE  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12836  010200  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 12837                           
 12838                           ;StringCommand.c: 116: }
 12839  010204  EF7C  F093         	goto	l685
 12840  010208                     l15101:
 12841                           
 12842                           ;StringCommand.c: 117: else if (StringMatch(Input, "led1=on"))
 12843  010208  C1C2  F174         	movff	Command@Input,StringMatch@This
 12844  01020C  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 12845  010210  0E32               	movlw	low STR_52
 12846  010212  0101               	movlb	1	; () banked
 12847  010214  6F76               	movwf	StringMatch@That& (0+255),b
 12848  010216  0EFF               	movlw	high STR_52
 12849  010218  0101               	movlb	1	; () banked
 12850  01021A  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 12851  01021C  EC02  F0BD         	call	_StringMatch	;wreg free
 12852  010220  0900               	iorlw	0
 12853  010222  B4D8               	btfsc	status,2,c
 12854  010224  D013               	goto	l15109
 12855                           
 12856                           ;StringCommand.c: 118: {
 12857                           ;StringCommand.c: 119: LATD |= 0b00000100;
 12858  010226  848C               	bsf	3980,2,c	;volatile
 12859                           
 12860                           ;StringCommand.c: 120: UARTstring("LED1 On");
 12861  010228  0E22               	movlw	low STR_53
 12862  01022A  0101               	movlb	1	; () banked
 12863  01022C  6F7F               	movwf	UARTstring@data& (0+255),b
 12864  01022E  0EFF               	movlw	high STR_53
 12865  010230  0101               	movlb	1	; () banked
 12866  010232  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12867  010234  EC24  F0BA         	call	_UARTstring	;wreg free
 12868                           
 12869                           ;StringCommand.c: 121: LCDdisplayFeedback("LED1 On");
 12870  010238  0E22               	movlw	low STR_53
 12871  01023A  0101               	movlb	1	; () banked
 12872  01023C  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12873  01023E  0EFF               	movlw	high STR_53
 12874  010240  0101               	movlb	1	; () banked
 12875  010242  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12876  010244  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 12877                           
 12878                           ;StringCommand.c: 122: }
 12879  010248  EF7C  F093         	goto	l685
 12880  01024C                     l15109:
 12881                           
 12882                           ;StringCommand.c: 123: else if (StringMatch(Input, "led1=off"))
 12883  01024C  C1C2  F174         	movff	Command@Input,StringMatch@This
 12884  010250  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 12885  010254  0EBC               	movlw	low STR_55
 12886  010256  0101               	movlb	1	; () banked
 12887  010258  6F76               	movwf	StringMatch@That& (0+255),b
 12888  01025A  0EFE               	movlw	high STR_55
 12889  01025C  0101               	movlb	1	; () banked
 12890  01025E  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 12891  010260  EC02  F0BD         	call	_StringMatch	;wreg free
 12892  010264  0900               	iorlw	0
 12893  010266  B4D8               	btfsc	status,2,c
 12894  010268  D013               	goto	l15117
 12895                           
 12896                           ;StringCommand.c: 124: {
 12897                           ;StringCommand.c: 125: LATD &= ~0b00000100;
 12898  01026A  948C               	bcf	3980,2,c	;volatile
 12899                           
 12900                           ;StringCommand.c: 126: UARTstring("LED1 Off");
 12901  01026C  0EAA               	movlw	low STR_56
 12902  01026E  0101               	movlb	1	; () banked
 12903  010270  6F7F               	movwf	UARTstring@data& (0+255),b
 12904  010272  0EFE               	movlw	high STR_56
 12905  010274  0101               	movlb	1	; () banked
 12906  010276  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12907  010278  EC24  F0BA         	call	_UARTstring	;wreg free
 12908                           
 12909                           ;StringCommand.c: 127: LCDdisplayFeedback("LED1 Off");
 12910  01027C  0EAA               	movlw	low STR_56
 12911  01027E  0101               	movlb	1	; () banked
 12912  010280  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12913  010282  0EFE               	movlw	high STR_56
 12914  010284  0101               	movlb	1	; () banked
 12915  010286  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12916  010288  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 12917                           
 12918                           ;StringCommand.c: 128: }
 12919  01028C  EF7C  F093         	goto	l685
 12920  010290                     l15117:
 12921                           
 12922                           ;StringCommand.c: 129: else
 12923                           ;StringCommand.c: 130: {
 12924                           ;StringCommand.c: 131: UARTstring("LED What???");
 12925  010290  0E3D               	movlw	low (STR_173+4)
 12926  010292  0101               	movlb	1	; () banked
 12927  010294  6F7F               	movwf	UARTstring@data& (0+255),b
 12928  010296  0EFA               	movlw	high (STR_173+4)
 12929  010298  0101               	movlb	1	; () banked
 12930  01029A  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12931  01029C  EC24  F0BA         	call	_UARTstring	;wreg free
 12932                           
 12933                           ;StringCommand.c: 132: LCDdisplayFeedback("LED What???");
 12934  0102A0  0E3D               	movlw	low (STR_173+4)
 12935  0102A2  0101               	movlb	1	; () banked
 12936  0102A4  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12937  0102A6  0EFA               	movlw	high (STR_173+4)
 12938  0102A8  0101               	movlb	1	; () banked
 12939  0102AA  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12940  0102AC  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 12941                           
 12942                           ;StringCommand.c: 133: }
 12943                           ;StringCommand.c: 134: }
 12944  0102B0  EF7C  F093         	goto	l685
 12945  0102B4                     l15119:
 12946                           
 12947                           ;StringCommand.c: 135: else
 12948                           ;StringCommand.c: 136: {
 12949                           ;StringCommand.c: 137: UARTstring("LED Help Menu\r\n\n");
 12950  0102B4  0EFB               	movlw	low STR_60
 12951  0102B6  0101               	movlb	1	; () banked
 12952  0102B8  6F7F               	movwf	UARTstring@data& (0+255),b
 12953  0102BA  0EF8               	movlw	high STR_60
 12954  0102BC  0101               	movlb	1	; () banked
 12955  0102BE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12956  0102C0  EC24  F0BA         	call	_UARTstring	;wreg free
 12957                           
 12958                           ;StringCommand.c: 138: UARTstring("Devices:\r\n");
 12959  0102C4  0EB7               	movlw	low STR_61
 12960  0102C6  0101               	movlb	1	; () banked
 12961  0102C8  6F7F               	movwf	UARTstring@data& (0+255),b
 12962  0102CA  0EFD               	movlw	high STR_61
 12963  0102CC  0101               	movlb	1	; () banked
 12964  0102CE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12965  0102D0  EC24  F0BA         	call	_UARTstring	;wreg free
 12966                           
 12967                           ;StringCommand.c: 139: UARTstring("LED0\r\n");
 12968  0102D4  0E60               	movlw	low STR_62
 12969  0102D6  0101               	movlb	1	; () banked
 12970  0102D8  6F7F               	movwf	UARTstring@data& (0+255),b
 12971  0102DA  0EFF               	movlw	high STR_62
 12972  0102DC  0101               	movlb	1	; () banked
 12973  0102DE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12974  0102E0  EC24  F0BA         	call	_UARTstring	;wreg free
 12975                           
 12976                           ;StringCommand.c: 140: UARTstring("LED1\r\n\n");
 12977  0102E4  0EF2               	movlw	low STR_63
 12978  0102E6  0101               	movlb	1	; () banked
 12979  0102E8  6F7F               	movwf	UARTstring@data& (0+255),b
 12980  0102EA  0EFE               	movlw	high STR_63
 12981  0102EC  0101               	movlb	1	; () banked
 12982  0102EE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12983  0102F0  EC24  F0BA         	call	_UARTstring	;wreg free
 12984                           
 12985                           ;StringCommand.c: 141: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12986  0102F4  0EEB               	movlw	low STR_64
 12987  0102F6  0101               	movlb	1	; () banked
 12988  0102F8  6F7F               	movwf	UARTstring@data& (0+255),b
 12989  0102FA  0EEE               	movlw	high STR_64
 12990  0102FC  0101               	movlb	1	; () banked
 12991  0102FE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 12992  010300  EC24  F0BA         	call	_UARTstring	;wreg free
 12993                           
 12994                           ;StringCommand.c: 142: UARTstring("i.e. LED1 = On\r\n");
 12995  010304  0E2E               	movlw	low STR_65
 12996  010306  0101               	movlb	1	; () banked
 12997  010308  6F7F               	movwf	UARTstring@data& (0+255),b
 12998  01030A  0EF9               	movlw	high STR_65
 12999  01030C  0101               	movlb	1	; () banked
 13000  01030E  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13001  010310  EC24  F0BA         	call	_UARTstring	;wreg free
 13002                           
 13003                           ;StringCommand.c: 143: LCD_Scroll("LED Menu");
 13004  010314  0EE0               	movlw	low STR_66
 13005  010316  0101               	movlb	1	; () banked
 13006  010318  6F83               	movwf	LCD_Scroll@This& (0+255),b
 13007  01031A  0EFE               	movlw	high STR_66
 13008  01031C  0101               	movlb	1	; () banked
 13009  01031E  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13010  010320  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 13011                           
 13012                           ;StringCommand.c: 144: LCD_Scroll("Devices:");
 13013  010324  0E8F               	movlw	low STR_67
 13014  010326  0101               	movlb	1	; () banked
 13015  010328  6F83               	movwf	LCD_Scroll@This& (0+255),b
 13016  01032A  0EFE               	movlw	high STR_67
 13017  01032C  0101               	movlb	1	; () banked
 13018  01032E  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13019  010330  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 13020                           
 13021                           ;StringCommand.c: 145: LCD_Scroll("LED0");
 13022  010334  0EB8               	movlw	low STR_68
 13023  010336  0101               	movlb	1	; () banked
 13024  010338  6F83               	movwf	LCD_Scroll@This& (0+255),b
 13025  01033A  0EFF               	movlw	high STR_68
 13026  01033C  0101               	movlb	1	; () banked
 13027  01033E  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13028  010340  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 13029                           
 13030                           ;StringCommand.c: 146: LCD_Scroll("LED1");
 13031  010344  0EC2               	movlw	low STR_69
 13032  010346  0101               	movlb	1	; () banked
 13033  010348  6F83               	movwf	LCD_Scroll@This& (0+255),b
 13034  01034A  0EFF               	movlw	high STR_69
 13035  01034C  0101               	movlb	1	; () banked
 13036  01034E  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13037  010350  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 13038                           
 13039                           ;StringCommand.c: 147: }
 13040                           ;StringCommand.c: 148: }
 13041  010354  EF7C  F093         	goto	l685
 13042  010358                     l15129:
 13043                           
 13044                           ;StringCommand.c: 150: else if (StartsWith(Input, "livingroom"))
 13045  010358  C1C2  F174         	movff	Command@Input,StartsWith@This
 13046  01035C  C1C3  F175         	movff	Command@Input+1,StartsWith@This+1
 13047  010360  0EEE               	movlw	low STR_70
 13048  010362  0101               	movlb	1	; () banked
 13049  010364  6F76               	movwf	StartsWith@That& (0+255),b
 13050  010366  0EFD               	movlw	high STR_70
 13051  010368  0101               	movlb	1	; () banked
 13052  01036A  6F77               	movwf	(StartsWith@That+1)& (0+255),b
 13053  01036C  ECAA  F0BB         	call	_StartsWith	;wreg free
 13054  010370  0900               	iorlw	0
 13055  010372  B4D8               	btfsc	status,2,c
 13056  010374  D1CB               	goto	l15181
 13057                           
 13058                           ;StringCommand.c: 151: {
 13059                           ;StringCommand.c: 152: if (!StringContains(Input, "?"))
 13060  010376  C1C2  F174         	movff	Command@Input,StringContains@This
 13061  01037A  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 13062  01037E  0E17               	movlw	low (STR_83+14)
 13063  010380  0101               	movlb	1	; () banked
 13064  010382  6F76               	movwf	StringContains@That& (0+255),b
 13065  010384  0EFA               	movlw	high (STR_83+14)
 13066  010386  0101               	movlb	1	; () banked
 13067  010388  6F77               	movwf	(StringContains@That+1)& (0+255),b
 13068  01038A  ECC2  F0BC         	call	_StringContains	;wreg free
 13069  01038E  0900               	iorlw	0
 13070  010390  A4D8               	btfss	status,2,c
 13071  010392  D162               	goto	l15171
 13072                           
 13073                           ;StringCommand.c: 153: {
 13074                           ;StringCommand.c: 154: if (StringMatch(Input, "livingroomlight=on") || StringMatch(Input
      +                          , "livingroomlight=off"))
 13075  010394  C1C2  F174         	movff	Command@Input,StringMatch@This
 13076  010398  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 13077  01039C  0EED               	movlw	low STR_72
 13078  01039E  0101               	movlb	1	; () banked
 13079  0103A0  6F76               	movwf	StringMatch@That& (0+255),b
 13080  0103A2  0EF7               	movlw	high STR_72
 13081  0103A4  0101               	movlb	1	; () banked
 13082  0103A6  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 13083  0103A8  EC02  F0BD         	call	_StringMatch	;wreg free
 13084  0103AC  0900               	iorlw	0
 13085  0103AE  A4D8               	btfss	status,2,c
 13086  0103B0  D00F               	goto	l706
 13087  0103B2  C1C2  F174         	movff	Command@Input,StringMatch@This
 13088  0103B6  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 13089  0103BA  0E79               	movlw	low STR_73
 13090  0103BC  0101               	movlb	1	; () banked
 13091  0103BE  6F76               	movwf	StringMatch@That& (0+255),b
 13092  0103C0  0EF7               	movlw	high STR_73
 13093  0103C2  0101               	movlb	1	; () banked
 13094  0103C4  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 13095  0103C6  EC02  F0BD         	call	_StringMatch	;wreg free
 13096  0103CA  0900               	iorlw	0
 13097  0103CC  B4D8               	btfsc	status,2,c
 13098  0103CE  D053               	goto	l15145
 13099  0103D0                     l706:
 13100                           
 13101                           ;StringCommand.c: 155: {
 13102                           ;StringCommand.c: 156: INTCONbits.GIE = 0;
 13103  0103D0  9EF2               	bcf	intcon,7,c	;volatile
 13104                           
 13105                           ;StringCommand.c: 157: Send_Config1(0b00000001, TXdataD);
 13106  0103D2  0E39               	movlw	low _TXdataD
 13107  0103D4  0101               	movlb	1	; () banked
 13108  0103D6  6F7F               	movwf	Send_Config1@data& (0+255),b
 13109  0103D8  0EEE               	movlw	high _TXdataD
 13110  0103DA  0101               	movlb	1	; () banked
 13111  0103DC  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13112  0103DE  0E01               	movlw	1
 13113  0103E0  ECA4  F0B4         	call	_Send_Config1
 13114                           
 13115                           ;StringCommand.c: 158: Send_Config1(0b00000001, TXdataD);
 13116  0103E4  0E39               	movlw	low _TXdataD
 13117  0103E6  0101               	movlb	1	; () banked
 13118  0103E8  6F7F               	movwf	Send_Config1@data& (0+255),b
 13119  0103EA  0EEE               	movlw	high _TXdataD
 13120  0103EC  0101               	movlb	1	; () banked
 13121  0103EE  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13122  0103F0  0E01               	movlw	1
 13123  0103F2  ECA4  F0B4         	call	_Send_Config1
 13124                           
 13125                           ;StringCommand.c: 159: Send_Config1(0b00000001, TXdataD);
 13126  0103F6  0E39               	movlw	low _TXdataD
 13127  0103F8  0101               	movlb	1	; () banked
 13128  0103FA  6F7F               	movwf	Send_Config1@data& (0+255),b
 13129  0103FC  0EEE               	movlw	high _TXdataD
 13130  0103FE  0101               	movlb	1	; () banked
 13131  010400  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13132  010402  0E01               	movlw	1
 13133  010404  ECA4  F0B4         	call	_Send_Config1
 13134                           
 13135                           ;StringCommand.c: 160: Send_Config1(0b00000001, TXdataD);
 13136  010408  0E39               	movlw	low _TXdataD
 13137  01040A  0101               	movlb	1	; () banked
 13138  01040C  6F7F               	movwf	Send_Config1@data& (0+255),b
 13139  01040E  0EEE               	movlw	high _TXdataD
 13140  010410  0101               	movlb	1	; () banked
 13141  010412  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13142  010414  0E01               	movlw	1
 13143  010416  ECA4  F0B4         	call	_Send_Config1
 13144                           
 13145                           ;StringCommand.c: 161: Send_Config1(0b00000001, TXdataD);
 13146  01041A  0E39               	movlw	low _TXdataD
 13147  01041C  0101               	movlb	1	; () banked
 13148  01041E  6F7F               	movwf	Send_Config1@data& (0+255),b
 13149  010420  0EEE               	movlw	high _TXdataD
 13150  010422  0101               	movlb	1	; () banked
 13151  010424  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13152  010426  0E01               	movlw	1
 13153  010428  ECA4  F0B4         	call	_Send_Config1
 13154                           
 13155                           ;StringCommand.c: 162: Send_Config1(0b00000001, TXdataD);
 13156  01042C  0E39               	movlw	low _TXdataD
 13157  01042E  0101               	movlb	1	; () banked
 13158  010430  6F7F               	movwf	Send_Config1@data& (0+255),b
 13159  010432  0EEE               	movlw	high _TXdataD
 13160  010434  0101               	movlb	1	; () banked
 13161  010436  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13162  010438  0E01               	movlw	1
 13163  01043A  ECA4  F0B4         	call	_Send_Config1
 13164                           
 13165                           ;StringCommand.c: 163: Send_Config1(0b00000001, TXdataD);
 13166  01043E  0E39               	movlw	low _TXdataD
 13167  010440  0101               	movlb	1	; () banked
 13168  010442  6F7F               	movwf	Send_Config1@data& (0+255),b
 13169  010444  0EEE               	movlw	high _TXdataD
 13170  010446  0101               	movlb	1	; () banked
 13171  010448  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13172  01044A  0E01               	movlw	1
 13173  01044C  ECA4  F0B4         	call	_Send_Config1
 13174                           
 13175                           ;StringCommand.c: 164: INTCONbits.GIE = 1;
 13176  010450  8EF2               	bsf	intcon,7,c	;volatile
 13177                           
 13178                           ;StringCommand.c: 165: UARTstring("Livingroom Light Toggled");
 13179  010452  0E15               	movlw	low STR_74
 13180  010454  0101               	movlb	1	; () banked
 13181  010456  6F7F               	movwf	UARTstring@data& (0+255),b
 13182  010458  0EF6               	movlw	high STR_74
 13183  01045A  0101               	movlb	1	; () banked
 13184  01045C  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13185  01045E  EC24  F0BA         	call	_UARTstring	;wreg free
 13186                           
 13187                           ;StringCommand.c: 166: LCDdisplayFeedback("LVNG Rm Lt TGLD");
 13188  010462  0E79               	movlw	low STR_75
 13189  010464  0101               	movlb	1	; () banked
 13190  010466  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13191  010468  0EFA               	movlw	high STR_75
 13192  01046A  0101               	movlb	1	; () banked
 13193  01046C  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13194  01046E  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 13195                           
 13196                           ;StringCommand.c: 167: }
 13197  010472  EF7C  F093         	goto	l685
 13198  010476                     l15145:
 13199                           
 13200                           ;StringCommand.c: 168: else if (StringMatch(Input, "livingroomfan=on"))
 13201  010476  C1C2  F174         	movff	Command@Input,StringMatch@This
 13202  01047A  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 13203  01047E  0E72               	movlw	low STR_76
 13204  010480  0101               	movlb	1	; () banked
 13205  010482  6F76               	movwf	StringMatch@That& (0+255),b
 13206  010484  0EF9               	movlw	high STR_76
 13207  010486  0101               	movlb	1	; () banked
 13208  010488  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 13209  01048A  EC02  F0BD         	call	_StringMatch	;wreg free
 13210  01048E  0900               	iorlw	0
 13211  010490  B4D8               	btfsc	status,2,c
 13212  010492  D05C               	goto	l15157
 13213                           
 13214                           ;StringCommand.c: 169: {
 13215                           ;StringCommand.c: 170: INTCONbits.GIE = 0;
 13216  010494  9EF2               	bcf	intcon,7,c	;volatile
 13217                           
 13218                           ;StringCommand.c: 171: Send_Config2(0b00000001, fanON);
 13219  010496  0E29               	movlw	low _fanON
 13220  010498  0101               	movlb	1	; () banked
 13221  01049A  6F7F               	movwf	Send_Config2@data& (0+255),b
 13222  01049C  0EEE               	movlw	high _fanON
 13223  01049E  0101               	movlb	1	; () banked
 13224  0104A0  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13225  0104A2  0E01               	movlw	1
 13226  0104A4  EC80  F0BC         	call	_Send_Config2
 13227                           
 13228                           ;StringCommand.c: 172: Send_Config2(0b00000001, fanON);
 13229  0104A8  0E29               	movlw	low _fanON
 13230  0104AA  0101               	movlb	1	; () banked
 13231  0104AC  6F7F               	movwf	Send_Config2@data& (0+255),b
 13232  0104AE  0EEE               	movlw	high _fanON
 13233  0104B0  0101               	movlb	1	; () banked
 13234  0104B2  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13235  0104B4  0E01               	movlw	1
 13236  0104B6  EC80  F0BC         	call	_Send_Config2
 13237                           
 13238                           ;StringCommand.c: 173: Send_Config2(0b00000001, fanON);
 13239  0104BA  0E29               	movlw	low _fanON
 13240  0104BC  0101               	movlb	1	; () banked
 13241  0104BE  6F7F               	movwf	Send_Config2@data& (0+255),b
 13242  0104C0  0EEE               	movlw	high _fanON
 13243  0104C2  0101               	movlb	1	; () banked
 13244  0104C4  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13245  0104C6  0E01               	movlw	1
 13246  0104C8  EC80  F0BC         	call	_Send_Config2
 13247                           
 13248                           ;StringCommand.c: 174: Send_Config2(0b00000001, fanON);
 13249  0104CC  0E29               	movlw	low _fanON
 13250  0104CE  0101               	movlb	1	; () banked
 13251  0104D0  6F7F               	movwf	Send_Config2@data& (0+255),b
 13252  0104D2  0EEE               	movlw	high _fanON
 13253  0104D4  0101               	movlb	1	; () banked
 13254  0104D6  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13255  0104D8  0E01               	movlw	1
 13256  0104DA  EC80  F0BC         	call	_Send_Config2
 13257                           
 13258                           ;StringCommand.c: 175: Send_Config2(0b00000001, fanON);
 13259  0104DE  0E29               	movlw	low _fanON
 13260  0104E0  0101               	movlb	1	; () banked
 13261  0104E2  6F7F               	movwf	Send_Config2@data& (0+255),b
 13262  0104E4  0EEE               	movlw	high _fanON
 13263  0104E6  0101               	movlb	1	; () banked
 13264  0104E8  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13265  0104EA  0E01               	movlw	1
 13266  0104EC  EC80  F0BC         	call	_Send_Config2
 13267                           
 13268                           ;StringCommand.c: 176: Send_Config2(0b00000001, fanON);
 13269  0104F0  0E29               	movlw	low _fanON
 13270  0104F2  0101               	movlb	1	; () banked
 13271  0104F4  6F7F               	movwf	Send_Config2@data& (0+255),b
 13272  0104F6  0EEE               	movlw	high _fanON
 13273  0104F8  0101               	movlb	1	; () banked
 13274  0104FA  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13275  0104FC  0E01               	movlw	1
 13276  0104FE  EC80  F0BC         	call	_Send_Config2
 13277                           
 13278                           ;StringCommand.c: 177: Send_Config2(0b00000001, fanON);
 13279  010502  0E29               	movlw	low _fanON
 13280  010504  0101               	movlb	1	; () banked
 13281  010506  6F7F               	movwf	Send_Config2@data& (0+255),b
 13282  010508  0EEE               	movlw	high _fanON
 13283  01050A  0101               	movlb	1	; () banked
 13284  01050C  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13285  01050E  0E01               	movlw	1
 13286  010510  EC80  F0BC         	call	_Send_Config2
 13287                           
 13288                           ;StringCommand.c: 178: Send_Config2(0b00000001, fanON);
 13289  010514  0E29               	movlw	low _fanON
 13290  010516  0101               	movlb	1	; () banked
 13291  010518  6F7F               	movwf	Send_Config2@data& (0+255),b
 13292  01051A  0EEE               	movlw	high _fanON
 13293  01051C  0101               	movlb	1	; () banked
 13294  01051E  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13295  010520  0E01               	movlw	1
 13296  010522  EC80  F0BC         	call	_Send_Config2
 13297                           
 13298                           ;StringCommand.c: 179: INTCONbits.GIE = 1;
 13299  010526  8EF2               	bsf	intcon,7,c	;volatile
 13300                           
 13301                           ;StringCommand.c: 180: UARTstring("Livingroom Fan On");
 13302  010528  0E92               	movlw	low STR_77
 13303  01052A  0101               	movlb	1	; () banked
 13304  01052C  6F7F               	movwf	UARTstring@data& (0+255),b
 13305  01052E  0EF8               	movlw	high STR_77
 13306  010530  0101               	movlb	1	; () banked
 13307  010532  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13308  010534  EC24  F0BA         	call	_UARTstring	;wreg free
 13309                           
 13310                           ;StringCommand.c: 181: LCDdisplayFeedback("LVNG Rm Lt On");
 13311  010538  0E71               	movlw	low STR_78
 13312  01053A  0101               	movlb	1	; () banked
 13313  01053C  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13314  01053E  0EFC               	movlw	high STR_78
 13315  010540  0101               	movlb	1	; () banked
 13316  010542  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13317  010544  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 13318                           
 13319                           ;StringCommand.c: 182: }
 13320  010548  EF7C  F093         	goto	l685
 13321  01054C                     l15157:
 13322                           
 13323                           ;StringCommand.c: 183: else if (StringMatch(Input, "livingroomfan=off"))
 13324  01054C  C1C2  F174         	movff	Command@Input,StringMatch@This
 13325  010550  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 13326  010554  0E5C               	movlw	low STR_79
 13327  010556  0101               	movlb	1	; () banked
 13328  010558  6F76               	movwf	StringMatch@That& (0+255),b
 13329  01055A  0EF8               	movlw	high STR_79
 13330  01055C  0101               	movlb	1	; () banked
 13331  01055E  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 13332  010560  EC02  F0BD         	call	_StringMatch	;wreg free
 13333  010564  0900               	iorlw	0
 13334  010566  B4D8               	btfsc	status,2,c
 13335  010568  D065               	goto	l15169
 13336                           
 13337                           ;StringCommand.c: 184: {
 13338                           ;StringCommand.c: 185: INTCONbits.GIE = 0;
 13339  01056A  9EF2               	bcf	intcon,7,c	;volatile
 13340                           
 13341                           ;StringCommand.c: 186: Send_Config2(0b00000001, fanOFF);
 13342  01056C  0E19               	movlw	low _fanOFF
 13343  01056E  0101               	movlb	1	; () banked
 13344  010570  6F7F               	movwf	Send_Config2@data& (0+255),b
 13345  010572  0EEE               	movlw	high _fanOFF
 13346  010574  0101               	movlb	1	; () banked
 13347  010576  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13348  010578  0E01               	movlw	1
 13349  01057A  EC80  F0BC         	call	_Send_Config2
 13350                           
 13351                           ;StringCommand.c: 187: Send_Config2(0b00000001, fanOFF);
 13352  01057E  0E19               	movlw	low _fanOFF
 13353  010580  0101               	movlb	1	; () banked
 13354  010582  6F7F               	movwf	Send_Config2@data& (0+255),b
 13355  010584  0EEE               	movlw	high _fanOFF
 13356  010586  0101               	movlb	1	; () banked
 13357  010588  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13358  01058A  0E01               	movlw	1
 13359  01058C  EC80  F0BC         	call	_Send_Config2
 13360                           
 13361                           ;StringCommand.c: 188: Send_Config2(0b00000001, fanOFF);
 13362  010590  0E19               	movlw	low _fanOFF
 13363  010592  0101               	movlb	1	; () banked
 13364  010594  6F7F               	movwf	Send_Config2@data& (0+255),b
 13365  010596  0EEE               	movlw	high _fanOFF
 13366  010598  0101               	movlb	1	; () banked
 13367  01059A  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13368  01059C  0E01               	movlw	1
 13369  01059E  EC80  F0BC         	call	_Send_Config2
 13370                           
 13371                           ;StringCommand.c: 189: Send_Config2(0b00000001, fanOFF);
 13372  0105A2  0E19               	movlw	low _fanOFF
 13373  0105A4  0101               	movlb	1	; () banked
 13374  0105A6  6F7F               	movwf	Send_Config2@data& (0+255),b
 13375  0105A8  0EEE               	movlw	high _fanOFF
 13376  0105AA  0101               	movlb	1	; () banked
 13377  0105AC  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13378  0105AE  0E01               	movlw	1
 13379  0105B0  EC80  F0BC         	call	_Send_Config2
 13380                           
 13381                           ;StringCommand.c: 190: Send_Config2(0b00000001, fanOFF);
 13382  0105B4  0E19               	movlw	low _fanOFF
 13383  0105B6  0101               	movlb	1	; () banked
 13384  0105B8  6F7F               	movwf	Send_Config2@data& (0+255),b
 13385  0105BA  0EEE               	movlw	high _fanOFF
 13386  0105BC  0101               	movlb	1	; () banked
 13387  0105BE  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13388  0105C0  0E01               	movlw	1
 13389  0105C2  EC80  F0BC         	call	_Send_Config2
 13390                           
 13391                           ;StringCommand.c: 191: Send_Config2(0b00000001, fanOFF);
 13392  0105C6  0E19               	movlw	low _fanOFF
 13393  0105C8  0101               	movlb	1	; () banked
 13394  0105CA  6F7F               	movwf	Send_Config2@data& (0+255),b
 13395  0105CC  0EEE               	movlw	high _fanOFF
 13396  0105CE  0101               	movlb	1	; () banked
 13397  0105D0  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13398  0105D2  0E01               	movlw	1
 13399  0105D4  EC80  F0BC         	call	_Send_Config2
 13400                           
 13401                           ;StringCommand.c: 192: Send_Config2(0b00000001, fanOFF);
 13402  0105D8  0E19               	movlw	low _fanOFF
 13403  0105DA  0101               	movlb	1	; () banked
 13404  0105DC  6F7F               	movwf	Send_Config2@data& (0+255),b
 13405  0105DE  0EEE               	movlw	high _fanOFF
 13406  0105E0  0101               	movlb	1	; () banked
 13407  0105E2  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13408  0105E4  0E01               	movlw	1
 13409  0105E6  EC80  F0BC         	call	_Send_Config2
 13410                           
 13411                           ;StringCommand.c: 193: Send_Config2(0b00000001, fanOFF);
 13412  0105EA  0E19               	movlw	low _fanOFF
 13413  0105EC  0101               	movlb	1	; () banked
 13414  0105EE  6F7F               	movwf	Send_Config2@data& (0+255),b
 13415  0105F0  0EEE               	movlw	high _fanOFF
 13416  0105F2  0101               	movlb	1	; () banked
 13417  0105F4  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13418  0105F6  0E01               	movlw	1
 13419  0105F8  EC80  F0BC         	call	_Send_Config2
 13420                           
 13421                           ;StringCommand.c: 194: Send_Config2(0b00000001, fanOFF);
 13422  0105FC  0E19               	movlw	low _fanOFF
 13423  0105FE  0101               	movlb	1	; () banked
 13424  010600  6F7F               	movwf	Send_Config2@data& (0+255),b
 13425  010602  0EEE               	movlw	high _fanOFF
 13426  010604  0101               	movlb	1	; () banked
 13427  010606  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13428  010608  0E01               	movlw	1
 13429  01060A  EC80  F0BC         	call	_Send_Config2
 13430                           
 13431                           ;StringCommand.c: 195: INTCONbits.GIE = 1;
 13432  01060E  8EF2               	bsf	intcon,7,c	;volatile
 13433                           
 13434                           ;StringCommand.c: 196: UARTstring("Livingroom Fan Off");
 13435  010610  0EC7               	movlw	low STR_80
 13436  010612  0101               	movlb	1	; () banked
 13437  010614  6F7F               	movwf	UARTstring@data& (0+255),b
 13438  010616  0EF7               	movlw	high STR_80
 13439  010618  0101               	movlb	1	; () banked
 13440  01061A  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13441  01061C  EC24  F0BA         	call	_UARTstring	;wreg free
 13442                           
 13443                           ;StringCommand.c: 197: LCDdisplayFeedback("LVNG Rm Lt Off");
 13444  010620  0EA4               	movlw	low STR_81
 13445  010622  0101               	movlb	1	; () banked
 13446  010624  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13447  010626  0EFB               	movlw	high STR_81
 13448  010628  0101               	movlb	1	; () banked
 13449  01062A  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13450  01062C  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 13451                           
 13452                           ;StringCommand.c: 198: }
 13453  010630  EF7C  F093         	goto	l685
 13454  010634                     l15169:
 13455                           
 13456                           ;StringCommand.c: 199: else
 13457                           ;StringCommand.c: 200: {
 13458                           ;StringCommand.c: 201: UARTstring("Livingroom Task???");
 13459  010634  0EA1               	movlw	low STR_82
 13460  010636  0101               	movlb	1	; () banked
 13461  010638  6F7F               	movwf	UARTstring@data& (0+255),b
 13462  01063A  0EF7               	movlw	high STR_82
 13463  01063C  0101               	movlb	1	; () banked
 13464  01063E  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13465  010640  EC24  F0BA         	call	_UARTstring	;wreg free
 13466                           
 13467                           ;StringCommand.c: 202: LCDdisplayFeedback("LVNG Rm Task???");
 13468  010644  0E09               	movlw	low STR_83
 13469  010646  0101               	movlb	1	; () banked
 13470  010648  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13471  01064A  0EFA               	movlw	high STR_83
 13472  01064C  0101               	movlb	1	; () banked
 13473  01064E  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13474  010650  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 13475                           
 13476                           ;StringCommand.c: 203: }
 13477                           ;StringCommand.c: 204: }
 13478  010654  EF7C  F093         	goto	l685
 13479  010658                     l15171:
 13480                           
 13481                           ;StringCommand.c: 205: else
 13482                           ;StringCommand.c: 206: {
 13483                           ;StringCommand.c: 207: UARTstring("Livingroom Help Menu\r\n\n");
 13484  010658  0E2E               	movlw	low STR_84
 13485  01065A  0101               	movlb	1	; () banked
 13486  01065C  6F7F               	movwf	UARTstring@data& (0+255),b
 13487  01065E  0EF6               	movlw	high STR_84
 13488  010660  0101               	movlb	1	; () banked
 13489  010662  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13490  010664  EC24  F0BA         	call	_UARTstring	;wreg free
 13491                           
 13492                           ;StringCommand.c: 208: UARTstring("Devices:\r\n");
 13493  010668  0EB7               	movlw	low STR_61
 13494  01066A  0101               	movlb	1	; () banked
 13495  01066C  6F7F               	movwf	UARTstring@data& (0+255),b
 13496  01066E  0EFD               	movlw	high STR_61
 13497  010670  0101               	movlb	1	; () banked
 13498  010672  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13499  010674  EC24  F0BA         	call	_UARTstring	;wreg free
 13500                           
 13501                           ;StringCommand.c: 209: UARTstring("light\r\n");
 13502  010678  0E02               	movlw	low STR_86
 13503  01067A  0101               	movlb	1	; () banked
 13504  01067C  6F7F               	movwf	UARTstring@data& (0+255),b
 13505  01067E  0EFF               	movlw	high STR_86
 13506  010680  0101               	movlb	1	; () banked
 13507  010682  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13508  010684  EC24  F0BA         	call	_UARTstring	;wreg free
 13509                           
 13510                           ;StringCommand.c: 210: UARTstring("fan\r\n\n");
 13511  010688  0E52               	movlw	low STR_87
 13512  01068A  0101               	movlb	1	; () banked
 13513  01068C  6F7F               	movwf	UARTstring@data& (0+255),b
 13514  01068E  0EFF               	movlw	high STR_87
 13515  010690  0101               	movlb	1	; () banked
 13516  010692  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13517  010694  EC24  F0BA         	call	_UARTstring	;wreg free
 13518                           
 13519                           ;StringCommand.c: 211: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 13520  010698  0EEB               	movlw	low STR_64
 13521  01069A  0101               	movlb	1	; () banked
 13522  01069C  6F7F               	movwf	UARTstring@data& (0+255),b
 13523  01069E  0EEE               	movlw	high STR_64
 13524  0106A0  0101               	movlb	1	; () banked
 13525  0106A2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13526  0106A4  EC24  F0BA         	call	_UARTstring	;wreg free
 13527                           
 13528                           ;StringCommand.c: 212: UARTstring("i.e. Livingroom fan = On\r\n");
 13529  0106A8  0E7A               	movlw	low STR_89
 13530  0106AA  0101               	movlb	1	; () banked
 13531  0106AC  6F7F               	movwf	UARTstring@data& (0+255),b
 13532  0106AE  0EF5               	movlw	high STR_89
 13533  0106B0  0101               	movlb	1	; () banked
 13534  0106B2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13535  0106B4  EC24  F0BA         	call	_UARTstring	;wreg free
 13536                           
 13537                           ;StringCommand.c: 213: LCDdisplayFeedback("LVNG Rm Lt help");
 13538  0106B8  0E29               	movlw	low STR_90
 13539  0106BA  0101               	movlb	1	; () banked
 13540  0106BC  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13541  0106BE  0EFB               	movlw	high STR_90
 13542  0106C0  0101               	movlb	1	; () banked
 13543  0106C2  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13544  0106C4  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 13545                           
 13546                           ;StringCommand.c: 214: LCD_Scroll("LVNGroom Menu");
 13547  0106C8  0EA9               	movlw	low STR_91
 13548  0106CA  0101               	movlb	1	; () banked
 13549  0106CC  6F83               	movwf	LCD_Scroll@This& (0+255),b
 13550  0106CE  0EFC               	movlw	high STR_91
 13551  0106D0  0101               	movlb	1	; () banked
 13552  0106D2  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13553  0106D4  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 13554                           
 13555                           ;StringCommand.c: 215: LCD_Scroll("Devices:");
 13556  0106D8  0E8F               	movlw	low STR_67
 13557  0106DA  0101               	movlb	1	; () banked
 13558  0106DC  6F83               	movwf	LCD_Scroll@This& (0+255),b
 13559  0106DE  0EFE               	movlw	high STR_67
 13560  0106E0  0101               	movlb	1	; () banked
 13561  0106E2  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13562  0106E4  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 13563                           
 13564                           ;StringCommand.c: 216: LCD_Scroll("Light");
 13565  0106E8  0EA7               	movlw	low STR_93
 13566  0106EA  0101               	movlb	1	; () banked
 13567  0106EC  6F83               	movwf	LCD_Scroll@This& (0+255),b
 13568  0106EE  0EFF               	movlw	high STR_93
 13569  0106F0  0101               	movlb	1	; () banked
 13570  0106F2  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13571  0106F4  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 13572                           
 13573                           ;StringCommand.c: 217: LCD_Scroll("Fan");
 13574  0106F8  0EEC               	movlw	low STR_94
 13575  0106FA  0101               	movlb	1	; () banked
 13576  0106FC  6F83               	movwf	LCD_Scroll@This& (0+255),b
 13577  0106FE  0EFF               	movlw	high STR_94
 13578  010700  0101               	movlb	1	; () banked
 13579  010702  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13580  010704  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 13581                           
 13582                           ;StringCommand.c: 218: }
 13583                           ;StringCommand.c: 219: }
 13584  010708  EF7C  F093         	goto	l685
 13585  01070C                     l15181:
 13586                           
 13587                           ;StringCommand.c: 221: else if (StartsWith(Input, "bedroom"))
 13588  01070C  C1C2  F174         	movff	Command@Input,StartsWith@This
 13589  010710  C1C3  F175         	movff	Command@Input+1,StartsWith@This+1
 13590  010714  0E12               	movlw	low STR_95
 13591  010716  0101               	movlb	1	; () banked
 13592  010718  6F76               	movwf	StartsWith@That& (0+255),b
 13593  01071A  0EFF               	movlw	high STR_95
 13594  01071C  0101               	movlb	1	; () banked
 13595  01071E  6F77               	movwf	(StartsWith@That+1)& (0+255),b
 13596  010720  ECAA  F0BB         	call	_StartsWith	;wreg free
 13597  010724  0900               	iorlw	0
 13598  010726  B4D8               	btfsc	status,2,c
 13599  010728  D2D0               	goto	l15263
 13600                           
 13601                           ;StringCommand.c: 222: {
 13602                           ;StringCommand.c: 223: if (!StringContains(Input, "?"))
 13603  01072A  C1C2  F174         	movff	Command@Input,StringContains@This
 13604  01072E  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 13605  010732  0E17               	movlw	low (STR_83+14)
 13606  010734  0101               	movlb	1	; () banked
 13607  010736  6F76               	movwf	StringContains@That& (0+255),b
 13608  010738  0EFA               	movlw	high (STR_83+14)
 13609  01073A  0101               	movlb	1	; () banked
 13610  01073C  6F77               	movwf	(StringContains@That+1)& (0+255),b
 13611  01073E  ECC2  F0BC         	call	_StringContains	;wreg free
 13612  010742  0900               	iorlw	0
 13613  010744  A4D8               	btfss	status,2,c
 13614  010746  D257               	goto	l15251
 13615                           
 13616                           ;StringCommand.c: 224: {
 13617                           ;StringCommand.c: 225: if (StringContains(Input, "light") || StringContains(Input, "fan"
      +                          ))
 13618  010748  C1C2  F174         	movff	Command@Input,StringContains@This
 13619  01074C  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 13620  010750  0EAD               	movlw	low STR_97
 13621  010752  0101               	movlb	1	; () banked
 13622  010754  6F76               	movwf	StringContains@That& (0+255),b
 13623  010756  0EFF               	movlw	high STR_97
 13624  010758  0101               	movlb	1	; () banked
 13625  01075A  6F77               	movwf	(StringContains@That+1)& (0+255),b
 13626  01075C  ECC2  F0BC         	call	_StringContains	;wreg free
 13627  010760  0900               	iorlw	0
 13628  010762  A4D8               	btfss	status,2,c
 13629  010764  D00F               	goto	l15189
 13630  010766  C1C2  F174         	movff	Command@Input,StringContains@This
 13631  01076A  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 13632  01076E  0EF0               	movlw	low STR_98
 13633  010770  0101               	movlb	1	; () banked
 13634  010772  6F76               	movwf	StringContains@That& (0+255),b
 13635  010774  0EFF               	movlw	high STR_98
 13636  010776  0101               	movlb	1	; () banked
 13637  010778  6F77               	movwf	(StringContains@That+1)& (0+255),b
 13638  01077A  ECC2  F0BC         	call	_StringContains	;wreg free
 13639  01077E  0900               	iorlw	0
 13640  010780  B4D8               	btfsc	status,2,c
 13641  010782  D227               	goto	l15249
 13642  010784                     l15189:
 13643                           
 13644                           ;StringCommand.c: 226: {
 13645                           ;StringCommand.c: 227: if (StringMatch(Input, "bedroomlight=on") || StringMatch(Input, "
      +                          bedroomlight=off"))
 13646  010784  C1C2  F174         	movff	Command@Input,StringMatch@This
 13647  010788  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 13648  01078C  0E09               	movlw	low STR_99
 13649  01078E  0101               	movlb	1	; () banked
 13650  010790  6F76               	movwf	StringMatch@That& (0+255),b
 13651  010792  0EFB               	movlw	high STR_99
 13652  010794  0101               	movlb	1	; () banked
 13653  010796  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 13654  010798  EC02  F0BD         	call	_StringMatch	;wreg free
 13655  01079C  0900               	iorlw	0
 13656  01079E  A4D8               	btfss	status,2,c
 13657  0107A0  D00F               	goto	l721
 13658  0107A2  C1C2  F174         	movff	Command@Input,StringMatch@This
 13659  0107A6  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 13660  0107AA  0E50               	movlw	low STR_100
 13661  0107AC  0101               	movlb	1	; () banked
 13662  0107AE  6F76               	movwf	StringMatch@That& (0+255),b
 13663  0107B0  0EF9               	movlw	high STR_100
 13664  0107B2  0101               	movlb	1	; () banked
 13665  0107B4  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 13666  0107B6  EC02  F0BD         	call	_StringMatch	;wreg free
 13667  0107BA  0900               	iorlw	0
 13668  0107BC  B4D8               	btfsc	status,2,c
 13669  0107BE  D053               	goto	l15201
 13670  0107C0                     l721:
 13671                           
 13672                           ;StringCommand.c: 228: {
 13673                           ;StringCommand.c: 229: INTCONbits.GIE = 0;
 13674  0107C0  9EF2               	bcf	intcon,7,c	;volatile
 13675                           
 13676                           ;StringCommand.c: 230: Send_Config1(0b00000001, TXdataE);
 13677  0107C2  0E45               	movlw	low _TXdataE
 13678  0107C4  0101               	movlb	1	; () banked
 13679  0107C6  6F7F               	movwf	Send_Config1@data& (0+255),b
 13680  0107C8  0EEE               	movlw	high _TXdataE
 13681  0107CA  0101               	movlb	1	; () banked
 13682  0107CC  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13683  0107CE  0E01               	movlw	1
 13684  0107D0  ECA4  F0B4         	call	_Send_Config1
 13685                           
 13686                           ;StringCommand.c: 231: Send_Config1(0b00000001, TXdataE);
 13687  0107D4  0E45               	movlw	low _TXdataE
 13688  0107D6  0101               	movlb	1	; () banked
 13689  0107D8  6F7F               	movwf	Send_Config1@data& (0+255),b
 13690  0107DA  0EEE               	movlw	high _TXdataE
 13691  0107DC  0101               	movlb	1	; () banked
 13692  0107DE  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13693  0107E0  0E01               	movlw	1
 13694  0107E2  ECA4  F0B4         	call	_Send_Config1
 13695                           
 13696                           ;StringCommand.c: 232: Send_Config1(0b00000001, TXdataE);
 13697  0107E6  0E45               	movlw	low _TXdataE
 13698  0107E8  0101               	movlb	1	; () banked
 13699  0107EA  6F7F               	movwf	Send_Config1@data& (0+255),b
 13700  0107EC  0EEE               	movlw	high _TXdataE
 13701  0107EE  0101               	movlb	1	; () banked
 13702  0107F0  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13703  0107F2  0E01               	movlw	1
 13704  0107F4  ECA4  F0B4         	call	_Send_Config1
 13705                           
 13706                           ;StringCommand.c: 233: Send_Config1(0b00000001, TXdataE);
 13707  0107F8  0E45               	movlw	low _TXdataE
 13708  0107FA  0101               	movlb	1	; () banked
 13709  0107FC  6F7F               	movwf	Send_Config1@data& (0+255),b
 13710  0107FE  0EEE               	movlw	high _TXdataE
 13711  010800  0101               	movlb	1	; () banked
 13712  010802  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13713  010804  0E01               	movlw	1
 13714  010806  ECA4  F0B4         	call	_Send_Config1
 13715                           
 13716                           ;StringCommand.c: 234: Send_Config1(0b00000001, TXdataE);
 13717  01080A  0E45               	movlw	low _TXdataE
 13718  01080C  0101               	movlb	1	; () banked
 13719  01080E  6F7F               	movwf	Send_Config1@data& (0+255),b
 13720  010810  0EEE               	movlw	high _TXdataE
 13721  010812  0101               	movlb	1	; () banked
 13722  010814  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13723  010816  0E01               	movlw	1
 13724  010818  ECA4  F0B4         	call	_Send_Config1
 13725                           
 13726                           ;StringCommand.c: 235: Send_Config1(0b00000001, TXdataE);
 13727  01081C  0E45               	movlw	low _TXdataE
 13728  01081E  0101               	movlb	1	; () banked
 13729  010820  6F7F               	movwf	Send_Config1@data& (0+255),b
 13730  010822  0EEE               	movlw	high _TXdataE
 13731  010824  0101               	movlb	1	; () banked
 13732  010826  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13733  010828  0E01               	movlw	1
 13734  01082A  ECA4  F0B4         	call	_Send_Config1
 13735                           
 13736                           ;StringCommand.c: 236: Send_Config1(0b00000001, TXdataE);
 13737  01082E  0E45               	movlw	low _TXdataE
 13738  010830  0101               	movlb	1	; () banked
 13739  010832  6F7F               	movwf	Send_Config1@data& (0+255),b
 13740  010834  0EEE               	movlw	high _TXdataE
 13741  010836  0101               	movlb	1	; () banked
 13742  010838  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 13743  01083A  0E01               	movlw	1
 13744  01083C  ECA4  F0B4         	call	_Send_Config1
 13745                           
 13746                           ;StringCommand.c: 237: INTCONbits.GIE = 1;
 13747  010840  8EF2               	bsf	intcon,7,c	;volatile
 13748                           
 13749                           ;StringCommand.c: 238: UARTstring("Bedroom Light Toggled");
 13750  010842  0EE7               	movlw	low STR_101
 13751  010844  0101               	movlb	1	; () banked
 13752  010846  6F7F               	movwf	UARTstring@data& (0+255),b
 13753  010848  0EF6               	movlw	high STR_101
 13754  01084A  0101               	movlb	1	; () banked
 13755  01084C  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13756  01084E  EC24  F0BA         	call	_UARTstring	;wreg free
 13757                           
 13758                           ;StringCommand.c: 239: LCDdisplayFeedback("Bedroom Lt TGLD");
 13759  010852  0E89               	movlw	low STR_102
 13760  010854  0101               	movlb	1	; () banked
 13761  010856  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13762  010858  0EFA               	movlw	high STR_102
 13763  01085A  0101               	movlb	1	; () banked
 13764  01085C  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13765  01085E  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 13766                           
 13767                           ;StringCommand.c: 240: }
 13768  010862  EF7C  F093         	goto	l685
 13769  010866                     l15201:
 13770                           
 13771                           ;StringCommand.c: 241: else if (StringMatch(Input, "bedroomfan=on"))
 13772  010866  C1C2  F174         	movff	Command@Input,StringMatch@This
 13773  01086A  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 13774  01086E  0E8D               	movlw	low STR_103
 13775  010870  0101               	movlb	1	; () banked
 13776  010872  6F76               	movwf	StringMatch@That& (0+255),b
 13777  010874  0EFC               	movlw	high STR_103
 13778  010876  0101               	movlb	1	; () banked
 13779  010878  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 13780  01087A  EC02  F0BD         	call	_StringMatch	;wreg free
 13781  01087E  0900               	iorlw	0
 13782  010880  B4D8               	btfsc	status,2,c
 13783  010882  D05C               	goto	l15213
 13784                           
 13785                           ;StringCommand.c: 242: {
 13786                           ;StringCommand.c: 243: INTCONbits.GIE = 0;
 13787  010884  9EF2               	bcf	intcon,7,c	;volatile
 13788                           
 13789                           ;StringCommand.c: 244: Send_Config2(0b00000001, AuxON);
 13790  010886  0EC9               	movlw	low _AuxON
 13791  010888  0101               	movlb	1	; () banked
 13792  01088A  6F7F               	movwf	Send_Config2@data& (0+255),b
 13793  01088C  0EED               	movlw	high _AuxON
 13794  01088E  0101               	movlb	1	; () banked
 13795  010890  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13796  010892  0E01               	movlw	1
 13797  010894  EC80  F0BC         	call	_Send_Config2
 13798                           
 13799                           ;StringCommand.c: 245: Send_Config2(0b00000001, AuxON);
 13800  010898  0EC9               	movlw	low _AuxON
 13801  01089A  0101               	movlb	1	; () banked
 13802  01089C  6F7F               	movwf	Send_Config2@data& (0+255),b
 13803  01089E  0EED               	movlw	high _AuxON
 13804  0108A0  0101               	movlb	1	; () banked
 13805  0108A2  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13806  0108A4  0E01               	movlw	1
 13807  0108A6  EC80  F0BC         	call	_Send_Config2
 13808                           
 13809                           ;StringCommand.c: 246: Send_Config2(0b00000001, AuxON);
 13810  0108AA  0EC9               	movlw	low _AuxON
 13811  0108AC  0101               	movlb	1	; () banked
 13812  0108AE  6F7F               	movwf	Send_Config2@data& (0+255),b
 13813  0108B0  0EED               	movlw	high _AuxON
 13814  0108B2  0101               	movlb	1	; () banked
 13815  0108B4  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13816  0108B6  0E01               	movlw	1
 13817  0108B8  EC80  F0BC         	call	_Send_Config2
 13818                           
 13819                           ;StringCommand.c: 247: Send_Config2(0b00000001, AuxON);
 13820  0108BC  0EC9               	movlw	low _AuxON
 13821  0108BE  0101               	movlb	1	; () banked
 13822  0108C0  6F7F               	movwf	Send_Config2@data& (0+255),b
 13823  0108C2  0EED               	movlw	high _AuxON
 13824  0108C4  0101               	movlb	1	; () banked
 13825  0108C6  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13826  0108C8  0E01               	movlw	1
 13827  0108CA  EC80  F0BC         	call	_Send_Config2
 13828                           
 13829                           ;StringCommand.c: 248: Send_Config2(0b00000001, AuxON);
 13830  0108CE  0EC9               	movlw	low _AuxON
 13831  0108D0  0101               	movlb	1	; () banked
 13832  0108D2  6F7F               	movwf	Send_Config2@data& (0+255),b
 13833  0108D4  0EED               	movlw	high _AuxON
 13834  0108D6  0101               	movlb	1	; () banked
 13835  0108D8  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13836  0108DA  0E01               	movlw	1
 13837  0108DC  EC80  F0BC         	call	_Send_Config2
 13838                           
 13839                           ;StringCommand.c: 249: Send_Config2(0b00000001, AuxON);
 13840  0108E0  0EC9               	movlw	low _AuxON
 13841  0108E2  0101               	movlb	1	; () banked
 13842  0108E4  6F7F               	movwf	Send_Config2@data& (0+255),b
 13843  0108E6  0EED               	movlw	high _AuxON
 13844  0108E8  0101               	movlb	1	; () banked
 13845  0108EA  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13846  0108EC  0E01               	movlw	1
 13847  0108EE  EC80  F0BC         	call	_Send_Config2
 13848                           
 13849                           ;StringCommand.c: 250: Send_Config2(0b00000001, AuxON);
 13850  0108F2  0EC9               	movlw	low _AuxON
 13851  0108F4  0101               	movlb	1	; () banked
 13852  0108F6  6F7F               	movwf	Send_Config2@data& (0+255),b
 13853  0108F8  0EED               	movlw	high _AuxON
 13854  0108FA  0101               	movlb	1	; () banked
 13855  0108FC  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13856  0108FE  0E01               	movlw	1
 13857  010900  EC80  F0BC         	call	_Send_Config2
 13858                           
 13859                           ;StringCommand.c: 251: Send_Config2(0b00000001, AuxON);
 13860  010904  0EC9               	movlw	low _AuxON
 13861  010906  0101               	movlb	1	; () banked
 13862  010908  6F7F               	movwf	Send_Config2@data& (0+255),b
 13863  01090A  0EED               	movlw	high _AuxON
 13864  01090C  0101               	movlb	1	; () banked
 13865  01090E  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13866  010910  0E01               	movlw	1
 13867  010912  EC80  F0BC         	call	_Send_Config2
 13868                           
 13869                           ;StringCommand.c: 252: INTCONbits.GIE = 1;
 13870  010916  8EF2               	bsf	intcon,7,c	;volatile
 13871                           
 13872                           ;StringCommand.c: 253: UARTstring("Bedroom Fan On");
 13873  010918  0EE0               	movlw	low STR_104
 13874  01091A  0101               	movlb	1	; () banked
 13875  01091C  6F7F               	movwf	UARTstring@data& (0+255),b
 13876  01091E  0EFB               	movlw	high STR_104
 13877  010920  0101               	movlb	1	; () banked
 13878  010922  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 13879  010924  EC24  F0BA         	call	_UARTstring	;wreg free
 13880                           
 13881                           ;StringCommand.c: 254: LCDdisplayFeedback("Bedroom Lt On");
 13882  010928  0E7F               	movlw	low STR_105
 13883  01092A  0101               	movlb	1	; () banked
 13884  01092C  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13885  01092E  0EFC               	movlw	high STR_105
 13886  010930  0101               	movlb	1	; () banked
 13887  010932  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13888  010934  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 13889                           
 13890                           ;StringCommand.c: 255: }
 13891  010938  EF7C  F093         	goto	l685
 13892  01093C                     l15213:
 13893                           
 13894                           ;StringCommand.c: 256: else if (StringMatch(Input, "bedroomfan=off"))
 13895  01093C  C1C2  F174         	movff	Command@Input,StringMatch@This
 13896  010940  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 13897  010944  0EC2               	movlw	low STR_106
 13898  010946  0101               	movlb	1	; () banked
 13899  010948  6F76               	movwf	StringMatch@That& (0+255),b
 13900  01094A  0EFB               	movlw	high STR_106
 13901  01094C  0101               	movlb	1	; () banked
 13902  01094E  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 13903  010950  EC02  F0BD         	call	_StringMatch	;wreg free
 13904  010954  0900               	iorlw	0
 13905  010956  B4D8               	btfsc	status,2,c
 13906  010958  D065               	goto	l15225
 13907                           
 13908                           ;StringCommand.c: 257: {
 13909                           ;StringCommand.c: 258: INTCONbits.GIE = 0;
 13910  01095A  9EF2               	bcf	intcon,7,c	;volatile
 13911                           
 13912                           ;StringCommand.c: 259: Send_Config2(0b00000001, AuxOFF);
 13913  01095C  0EB9               	movlw	low _AuxOFF
 13914  01095E  0101               	movlb	1	; () banked
 13915  010960  6F7F               	movwf	Send_Config2@data& (0+255),b
 13916  010962  0EED               	movlw	high _AuxOFF
 13917  010964  0101               	movlb	1	; () banked
 13918  010966  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13919  010968  0E01               	movlw	1
 13920  01096A  EC80  F0BC         	call	_Send_Config2
 13921                           
 13922                           ;StringCommand.c: 260: Send_Config2(0b00000001, AuxOFF);
 13923  01096E  0EB9               	movlw	low _AuxOFF
 13924  010970  0101               	movlb	1	; () banked
 13925  010972  6F7F               	movwf	Send_Config2@data& (0+255),b
 13926  010974  0EED               	movlw	high _AuxOFF
 13927  010976  0101               	movlb	1	; () banked
 13928  010978  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13929  01097A  0E01               	movlw	1
 13930  01097C  EC80  F0BC         	call	_Send_Config2
 13931                           
 13932                           ;StringCommand.c: 261: Send_Config2(0b00000001, AuxOFF);
 13933  010980  0EB9               	movlw	low _AuxOFF
 13934  010982  0101               	movlb	1	; () banked
 13935  010984  6F7F               	movwf	Send_Config2@data& (0+255),b
 13936  010986  0EED               	movlw	high _AuxOFF
 13937  010988  0101               	movlb	1	; () banked
 13938  01098A  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13939  01098C  0E01               	movlw	1
 13940  01098E  EC80  F0BC         	call	_Send_Config2
 13941                           
 13942                           ;StringCommand.c: 262: Send_Config2(0b00000001, AuxOFF);
 13943  010992  0EB9               	movlw	low _AuxOFF
 13944  010994  0101               	movlb	1	; () banked
 13945  010996  6F7F               	movwf	Send_Config2@data& (0+255),b
 13946  010998  0EED               	movlw	high _AuxOFF
 13947  01099A  0101               	movlb	1	; () banked
 13948  01099C  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13949  01099E  0E01               	movlw	1
 13950  0109A0  EC80  F0BC         	call	_Send_Config2
 13951                           
 13952                           ;StringCommand.c: 263: Send_Config2(0b00000001, AuxOFF);
 13953  0109A4  0EB9               	movlw	low _AuxOFF
 13954  0109A6  0101               	movlb	1	; () banked
 13955  0109A8  6F7F               	movwf	Send_Config2@data& (0+255),b
 13956  0109AA  0EED               	movlw	high _AuxOFF
 13957  0109AC  0101               	movlb	1	; () banked
 13958  0109AE  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13959  0109B0  0E01               	movlw	1
 13960  0109B2  EC80  F0BC         	call	_Send_Config2
 13961                           
 13962                           ;StringCommand.c: 264: Send_Config2(0b00000001, AuxOFF);
 13963  0109B6  0EB9               	movlw	low _AuxOFF
 13964  0109B8  0101               	movlb	1	; () banked
 13965  0109BA  6F7F               	movwf	Send_Config2@data& (0+255),b
 13966  0109BC  0EED               	movlw	high _AuxOFF
 13967  0109BE  0101               	movlb	1	; () banked
 13968  0109C0  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13969  0109C2  0E01               	movlw	1
 13970  0109C4  EC80  F0BC         	call	_Send_Config2
 13971                           
 13972                           ;StringCommand.c: 265: Send_Config2(0b00000001, AuxOFF);
 13973  0109C8  0EB9               	movlw	low _AuxOFF
 13974  0109CA  0101               	movlb	1	; () banked
 13975  0109CC  6F7F               	movwf	Send_Config2@data& (0+255),b
 13976  0109CE  0EED               	movlw	high _AuxOFF
 13977  0109D0  0101               	movlb	1	; () banked
 13978  0109D2  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13979  0109D4  0E01               	movlw	1
 13980  0109D6  EC80  F0BC         	call	_Send_Config2
 13981                           
 13982                           ;StringCommand.c: 266: Send_Config2(0b00000001, AuxOFF);
 13983  0109DA  0EB9               	movlw	low _AuxOFF
 13984  0109DC  0101               	movlb	1	; () banked
 13985  0109DE  6F7F               	movwf	Send_Config2@data& (0+255),b
 13986  0109E0  0EED               	movlw	high _AuxOFF
 13987  0109E2  0101               	movlb	1	; () banked
 13988  0109E4  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13989  0109E6  0E01               	movlw	1
 13990  0109E8  EC80  F0BC         	call	_Send_Config2
 13991                           
 13992                           ;StringCommand.c: 267: Send_Config2(0b00000001, AuxOFF);
 13993  0109EC  0EB9               	movlw	low _AuxOFF
 13994  0109EE  0101               	movlb	1	; () banked
 13995  0109F0  6F7F               	movwf	Send_Config2@data& (0+255),b
 13996  0109F2  0EED               	movlw	high _AuxOFF
 13997  0109F4  0101               	movlb	1	; () banked
 13998  0109F6  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 13999  0109F8  0E01               	movlw	1
 14000  0109FA  EC80  F0BC         	call	_Send_Config2
 14001                           
 14002                           ;StringCommand.c: 268: INTCONbits.GIE = 1;
 14003  0109FE  8EF2               	bsf	intcon,7,c	;volatile
 14004                           
 14005                           ;StringCommand.c: 269: UARTstring("Bedroom Fan Off");
 14006  010A00  0ED9               	movlw	low STR_107
 14007  010A02  0101               	movlb	1	; () banked
 14008  010A04  6F7F               	movwf	UARTstring@data& (0+255),b
 14009  010A06  0EFA               	movlw	high STR_107
 14010  010A08  0101               	movlb	1	; () banked
 14011  010A0A  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14012  010A0C  EC24  F0BA         	call	_UARTstring	;wreg free
 14013                           
 14014                           ;StringCommand.c: 270: LCDdisplayFeedback("Bedroom Lt Off");
 14015  010A10  0EB3               	movlw	low STR_108
 14016  010A12  0101               	movlb	1	; () banked
 14017  010A14  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14018  010A16  0EFB               	movlw	high STR_108
 14019  010A18  0101               	movlb	1	; () banked
 14020  010A1A  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14021  010A1C  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 14022                           
 14023                           ;StringCommand.c: 271: }
 14024  010A20  EF7C  F093         	goto	l685
 14025  010A24                     l15225:
 14026                           
 14027                           ;StringCommand.c: 272: else if (StringMatch(Input, "bedroomshaker=on"))
 14028  010A24  C1C2  F174         	movff	Command@Input,StringMatch@This
 14029  010A28  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 14030  010A2C  0E83               	movlw	low STR_109
 14031  010A2E  0101               	movlb	1	; () banked
 14032  010A30  6F76               	movwf	StringMatch@That& (0+255),b
 14033  010A32  0EF9               	movlw	high STR_109
 14034  010A34  0101               	movlb	1	; () banked
 14035  010A36  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 14036  010A38  EC02  F0BD         	call	_StringMatch	;wreg free
 14037  010A3C  0900               	iorlw	0
 14038  010A3E  B4D8               	btfsc	status,2,c
 14039  010A40  D05C               	goto	l15237
 14040                           
 14041                           ;StringCommand.c: 273: {
 14042                           ;StringCommand.c: 274: INTCONbits.GIE = 0;
 14043  010A42  9EF2               	bcf	intcon,7,c	;volatile
 14044                           
 14045                           ;StringCommand.c: 275: Send_Config2(0b00000001, BedON);
 14046  010A44  0EE9               	movlw	low _BedON
 14047  010A46  0101               	movlb	1	; () banked
 14048  010A48  6F7F               	movwf	Send_Config2@data& (0+255),b
 14049  010A4A  0EED               	movlw	high _BedON
 14050  010A4C  0101               	movlb	1	; () banked
 14051  010A4E  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14052  010A50  0E01               	movlw	1
 14053  010A52  EC80  F0BC         	call	_Send_Config2
 14054                           
 14055                           ;StringCommand.c: 276: Send_Config2(0b00000001, BedON);
 14056  010A56  0EE9               	movlw	low _BedON
 14057  010A58  0101               	movlb	1	; () banked
 14058  010A5A  6F7F               	movwf	Send_Config2@data& (0+255),b
 14059  010A5C  0EED               	movlw	high _BedON
 14060  010A5E  0101               	movlb	1	; () banked
 14061  010A60  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14062  010A62  0E01               	movlw	1
 14063  010A64  EC80  F0BC         	call	_Send_Config2
 14064                           
 14065                           ;StringCommand.c: 277: Send_Config2(0b00000001, BedON);
 14066  010A68  0EE9               	movlw	low _BedON
 14067  010A6A  0101               	movlb	1	; () banked
 14068  010A6C  6F7F               	movwf	Send_Config2@data& (0+255),b
 14069  010A6E  0EED               	movlw	high _BedON
 14070  010A70  0101               	movlb	1	; () banked
 14071  010A72  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14072  010A74  0E01               	movlw	1
 14073  010A76  EC80  F0BC         	call	_Send_Config2
 14074                           
 14075                           ;StringCommand.c: 278: Send_Config2(0b00000001, BedON);
 14076  010A7A  0EE9               	movlw	low _BedON
 14077  010A7C  0101               	movlb	1	; () banked
 14078  010A7E  6F7F               	movwf	Send_Config2@data& (0+255),b
 14079  010A80  0EED               	movlw	high _BedON
 14080  010A82  0101               	movlb	1	; () banked
 14081  010A84  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14082  010A86  0E01               	movlw	1
 14083  010A88  EC80  F0BC         	call	_Send_Config2
 14084                           
 14085                           ;StringCommand.c: 279: Send_Config2(0b00000001, BedON);
 14086  010A8C  0EE9               	movlw	low _BedON
 14087  010A8E  0101               	movlb	1	; () banked
 14088  010A90  6F7F               	movwf	Send_Config2@data& (0+255),b
 14089  010A92  0EED               	movlw	high _BedON
 14090  010A94  0101               	movlb	1	; () banked
 14091  010A96  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14092  010A98  0E01               	movlw	1
 14093  010A9A  EC80  F0BC         	call	_Send_Config2
 14094                           
 14095                           ;StringCommand.c: 280: Send_Config2(0b00000001, BedON);
 14096  010A9E  0EE9               	movlw	low _BedON
 14097  010AA0  0101               	movlb	1	; () banked
 14098  010AA2  6F7F               	movwf	Send_Config2@data& (0+255),b
 14099  010AA4  0EED               	movlw	high _BedON
 14100  010AA6  0101               	movlb	1	; () banked
 14101  010AA8  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14102  010AAA  0E01               	movlw	1
 14103  010AAC  EC80  F0BC         	call	_Send_Config2
 14104                           
 14105                           ;StringCommand.c: 281: Send_Config2(0b00000001, BedON);
 14106  010AB0  0EE9               	movlw	low _BedON
 14107  010AB2  0101               	movlb	1	; () banked
 14108  010AB4  6F7F               	movwf	Send_Config2@data& (0+255),b
 14109  010AB6  0EED               	movlw	high _BedON
 14110  010AB8  0101               	movlb	1	; () banked
 14111  010ABA  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14112  010ABC  0E01               	movlw	1
 14113  010ABE  EC80  F0BC         	call	_Send_Config2
 14114                           
 14115                           ;StringCommand.c: 282: Send_Config2(0b00000001, BedON);
 14116  010AC2  0EE9               	movlw	low _BedON
 14117  010AC4  0101               	movlb	1	; () banked
 14118  010AC6  6F7F               	movwf	Send_Config2@data& (0+255),b
 14119  010AC8  0EED               	movlw	high _BedON
 14120  010ACA  0101               	movlb	1	; () banked
 14121  010ACC  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14122  010ACE  0E01               	movlw	1
 14123  010AD0  EC80  F0BC         	call	_Send_Config2
 14124                           
 14125                           ;StringCommand.c: 283: INTCONbits.GIE = 1;
 14126  010AD4  8EF2               	bsf	intcon,7,c	;volatile
 14127                           
 14128                           ;StringCommand.c: 284: UARTstring("Bedroom Shaker On");
 14129  010AD6  0EA4               	movlw	low STR_110
 14130  010AD8  0101               	movlb	1	; () banked
 14131  010ADA  6F7F               	movwf	UARTstring@data& (0+255),b
 14132  010ADC  0EF8               	movlw	high STR_110
 14133  010ADE  0101               	movlb	1	; () banked
 14134  010AE0  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14135  010AE2  EC24  F0BA         	call	_UARTstring	;wreg free
 14136                           
 14137                           ;StringCommand.c: 285: LCDdisplayFeedback("Bedroom SKR On");
 14138  010AE6  0ED1               	movlw	low STR_111
 14139  010AE8  0101               	movlb	1	; () banked
 14140  010AEA  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14141  010AEC  0EFB               	movlw	high STR_111
 14142  010AEE  0101               	movlb	1	; () banked
 14143  010AF0  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14144  010AF2  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 14145                           
 14146                           ;StringCommand.c: 286: }
 14147  010AF6  EF7C  F093         	goto	l685
 14148  010AFA                     l15237:
 14149                           
 14150                           ;StringCommand.c: 287: else if (StringMatch(Input, "bedroomshaker=off"))
 14151  010AFA  C1C2  F174         	movff	Command@Input,StringMatch@This
 14152  010AFE  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 14153  010B02  0E6E               	movlw	low STR_112
 14154  010B04  0101               	movlb	1	; () banked
 14155  010B06  6F76               	movwf	StringMatch@That& (0+255),b
 14156  010B08  0EF8               	movlw	high STR_112
 14157  010B0A  0101               	movlb	1	; () banked
 14158  010B0C  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 14159  010B0E  EC02  F0BD         	call	_StringMatch	;wreg free
 14160  010B12  0900               	iorlw	0
 14161  010B14  B4D8               	btfsc	status,2,c
 14162  010B16  EF7C  F093         	goto	l685
 14163                           
 14164                           ;StringCommand.c: 288: {
 14165                           ;StringCommand.c: 289: INTCONbits.GIE = 0;
 14166  010B1A  9EF2               	bcf	intcon,7,c	;volatile
 14167                           
 14168                           ;StringCommand.c: 290: Send_Config2(0b00000001, BedOFF);
 14169  010B1C  0ED9               	movlw	low _BedOFF
 14170  010B1E  0101               	movlb	1	; () banked
 14171  010B20  6F7F               	movwf	Send_Config2@data& (0+255),b
 14172  010B22  0EED               	movlw	high _BedOFF
 14173  010B24  0101               	movlb	1	; () banked
 14174  010B26  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14175  010B28  0E01               	movlw	1
 14176  010B2A  EC80  F0BC         	call	_Send_Config2
 14177                           
 14178                           ;StringCommand.c: 291: Send_Config2(0b00000001, BedOFF);
 14179  010B2E  0ED9               	movlw	low _BedOFF
 14180  010B30  0101               	movlb	1	; () banked
 14181  010B32  6F7F               	movwf	Send_Config2@data& (0+255),b
 14182  010B34  0EED               	movlw	high _BedOFF
 14183  010B36  0101               	movlb	1	; () banked
 14184  010B38  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14185  010B3A  0E01               	movlw	1
 14186  010B3C  EC80  F0BC         	call	_Send_Config2
 14187                           
 14188                           ;StringCommand.c: 292: Send_Config2(0b00000001, BedOFF);
 14189  010B40  0ED9               	movlw	low _BedOFF
 14190  010B42  0101               	movlb	1	; () banked
 14191  010B44  6F7F               	movwf	Send_Config2@data& (0+255),b
 14192  010B46  0EED               	movlw	high _BedOFF
 14193  010B48  0101               	movlb	1	; () banked
 14194  010B4A  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14195  010B4C  0E01               	movlw	1
 14196  010B4E  EC80  F0BC         	call	_Send_Config2
 14197                           
 14198                           ;StringCommand.c: 293: Send_Config2(0b00000001, BedOFF);
 14199  010B52  0ED9               	movlw	low _BedOFF
 14200  010B54  0101               	movlb	1	; () banked
 14201  010B56  6F7F               	movwf	Send_Config2@data& (0+255),b
 14202  010B58  0EED               	movlw	high _BedOFF
 14203  010B5A  0101               	movlb	1	; () banked
 14204  010B5C  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14205  010B5E  0E01               	movlw	1
 14206  010B60  EC80  F0BC         	call	_Send_Config2
 14207                           
 14208                           ;StringCommand.c: 294: Send_Config2(0b00000001, BedOFF);
 14209  010B64  0ED9               	movlw	low _BedOFF
 14210  010B66  0101               	movlb	1	; () banked
 14211  010B68  6F7F               	movwf	Send_Config2@data& (0+255),b
 14212  010B6A  0EED               	movlw	high _BedOFF
 14213  010B6C  0101               	movlb	1	; () banked
 14214  010B6E  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14215  010B70  0E01               	movlw	1
 14216  010B72  EC80  F0BC         	call	_Send_Config2
 14217                           
 14218                           ;StringCommand.c: 295: Send_Config2(0b00000001, BedOFF);
 14219  010B76  0ED9               	movlw	low _BedOFF
 14220  010B78  0101               	movlb	1	; () banked
 14221  010B7A  6F7F               	movwf	Send_Config2@data& (0+255),b
 14222  010B7C  0EED               	movlw	high _BedOFF
 14223  010B7E  0101               	movlb	1	; () banked
 14224  010B80  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14225  010B82  0E01               	movlw	1
 14226  010B84  EC80  F0BC         	call	_Send_Config2
 14227                           
 14228                           ;StringCommand.c: 296: Send_Config2(0b00000001, BedOFF);
 14229  010B88  0ED9               	movlw	low _BedOFF
 14230  010B8A  0101               	movlb	1	; () banked
 14231  010B8C  6F7F               	movwf	Send_Config2@data& (0+255),b
 14232  010B8E  0EED               	movlw	high _BedOFF
 14233  010B90  0101               	movlb	1	; () banked
 14234  010B92  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14235  010B94  0E01               	movlw	1
 14236  010B96  EC80  F0BC         	call	_Send_Config2
 14237                           
 14238                           ;StringCommand.c: 297: Send_Config2(0b00000001, BedOFF);
 14239  010B9A  0ED9               	movlw	low _BedOFF
 14240  010B9C  0101               	movlb	1	; () banked
 14241  010B9E  6F7F               	movwf	Send_Config2@data& (0+255),b
 14242  010BA0  0EED               	movlw	high _BedOFF
 14243  010BA2  0101               	movlb	1	; () banked
 14244  010BA4  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14245  010BA6  0E01               	movlw	1
 14246  010BA8  EC80  F0BC         	call	_Send_Config2
 14247                           
 14248                           ;StringCommand.c: 298: INTCONbits.GIE = 1;
 14249  010BAC  8EF2               	bsf	intcon,7,c	;volatile
 14250                           
 14251                           ;StringCommand.c: 299: UARTstring("Bedroom Shaker Off");
 14252  010BAE  0EDA               	movlw	low STR_113
 14253  010BB0  0101               	movlb	1	; () banked
 14254  010BB2  6F7F               	movwf	UARTstring@data& (0+255),b
 14255  010BB4  0EF7               	movlw	high STR_113
 14256  010BB6  0101               	movlb	1	; () banked
 14257  010BB8  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14258  010BBA  EC24  F0BA         	call	_UARTstring	;wreg free
 14259                           
 14260                           ;StringCommand.c: 300: LCDdisplayFeedback("Bedroom SKR Off");
 14261  010BBE  0EC9               	movlw	low STR_114
 14262  010BC0  0101               	movlb	1	; () banked
 14263  010BC2  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14264  010BC4  0EFA               	movlw	high STR_114
 14265  010BC6  0101               	movlb	1	; () banked
 14266  010BC8  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14267  010BCA  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 14268                           
 14269                           ;StringCommand.c: 301: }
 14270                           ;StringCommand.c: 302: }
 14271  010BCE  EF7C  F093         	goto	l685
 14272  010BD2                     l15249:
 14273                           
 14274                           ;StringCommand.c: 303: else
 14275                           ;StringCommand.c: 304: {
 14276                           ;StringCommand.c: 305: UARTstring("Bedroom Task???");
 14277  010BD2  0E19               	movlw	low STR_115
 14278  010BD4  0101               	movlb	1	; () banked
 14279  010BD6  6F7F               	movwf	UARTstring@data& (0+255),b
 14280  010BD8  0EFA               	movlw	high STR_115
 14281  010BDA  0101               	movlb	1	; () banked
 14282  010BDC  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14283  010BDE  EC24  F0BA         	call	_UARTstring	;wreg free
 14284                           
 14285                           ;StringCommand.c: 306: LCDdisplayFeedback("Bedroom Task???");
 14286  010BE2  0E19               	movlw	low STR_115
 14287  010BE4  0101               	movlb	1	; () banked
 14288  010BE6  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14289  010BE8  0EFA               	movlw	high STR_115
 14290  010BEA  0101               	movlb	1	; () banked
 14291  010BEC  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14292  010BEE  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 14293                           
 14294                           ;StringCommand.c: 307: }
 14295                           ;StringCommand.c: 308: }
 14296  010BF2  EF7C  F093         	goto	l685
 14297  010BF6                     l15251:
 14298                           
 14299                           ;StringCommand.c: 309: else
 14300                           ;StringCommand.c: 310: {
 14301                           ;StringCommand.c: 311: UARTstring("Bedroom Help Menu\r\n\n");
 14302  010BF6  0E13               	movlw	low STR_117
 14303  010BF8  0101               	movlb	1	; () banked
 14304  010BFA  6F7F               	movwf	UARTstring@data& (0+255),b
 14305  010BFC  0EF7               	movlw	high STR_117
 14306  010BFE  0101               	movlb	1	; () banked
 14307  010C00  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14308  010C02  EC24  F0BA         	call	_UARTstring	;wreg free
 14309                           
 14310                           ;StringCommand.c: 312: UARTstring("Devices:\r\n");
 14311  010C06  0EB7               	movlw	low STR_61
 14312  010C08  0101               	movlb	1	; () banked
 14313  010C0A  6F7F               	movwf	UARTstring@data& (0+255),b
 14314  010C0C  0EFD               	movlw	high STR_61
 14315  010C0E  0101               	movlb	1	; () banked
 14316  010C10  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14317  010C12  EC24  F0BA         	call	_UARTstring	;wreg free
 14318                           
 14319                           ;StringCommand.c: 313: UARTstring("light\r\n");
 14320  010C16  0E02               	movlw	low STR_86
 14321  010C18  0101               	movlb	1	; () banked
 14322  010C1A  6F7F               	movwf	UARTstring@data& (0+255),b
 14323  010C1C  0EFF               	movlw	high STR_86
 14324  010C1E  0101               	movlb	1	; () banked
 14325  010C20  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14326  010C22  EC24  F0BA         	call	_UARTstring	;wreg free
 14327                           
 14328                           ;StringCommand.c: 314: UARTstring("fan\r\n");
 14329  010C26  0E89               	movlw	low STR_120
 14330  010C28  0101               	movlb	1	; () banked
 14331  010C2A  6F7F               	movwf	UARTstring@data& (0+255),b
 14332  010C2C  0EFF               	movlw	high STR_120
 14333  010C2E  0101               	movlb	1	; () banked
 14334  010C30  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14335  010C32  EC24  F0BA         	call	_UARTstring	;wreg free
 14336                           
 14337                           ;StringCommand.c: 315: UARTstring("shaker\r\n\n");
 14338  010C36  0E04               	movlw	low STR_121
 14339  010C38  0101               	movlb	1	; () banked
 14340  010C3A  6F7F               	movwf	UARTstring@data& (0+255),b
 14341  010C3C  0EFE               	movlw	high STR_121
 14342  010C3E  0101               	movlb	1	; () banked
 14343  010C40  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14344  010C42  EC24  F0BA         	call	_UARTstring	;wreg free
 14345                           
 14346                           ;StringCommand.c: 316: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 14347  010C46  0EEB               	movlw	low STR_64
 14348  010C48  0101               	movlb	1	; () banked
 14349  010C4A  6F7F               	movwf	UARTstring@data& (0+255),b
 14350  010C4C  0EEE               	movlw	high STR_64
 14351  010C4E  0101               	movlb	1	; () banked
 14352  010C50  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14353  010C52  EC24  F0BA         	call	_UARTstring	;wreg free
 14354                           
 14355                           ;StringCommand.c: 317: UARTstring("i.e. Bedroom fan = On\r\n");
 14356  010C56  0E5E               	movlw	low STR_123
 14357  010C58  0101               	movlb	1	; () banked
 14358  010C5A  6F7F               	movwf	UARTstring@data& (0+255),b
 14359  010C5C  0EF6               	movlw	high STR_123
 14360  010C5E  0101               	movlb	1	; () banked
 14361  010C60  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14362  010C62  EC24  F0BA         	call	_UARTstring	;wreg free
 14363                           
 14364                           ;StringCommand.c: 318: LCDdisplayFeedback("Bedroom Help???");
 14365  010C66  0E29               	movlw	low STR_124
 14366  010C68  0101               	movlb	1	; () banked
 14367  010C6A  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14368  010C6C  0EFA               	movlw	high STR_124
 14369  010C6E  0101               	movlb	1	; () banked
 14370  010C70  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14371  010C72  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 14372                           
 14373                           ;StringCommand.c: 319: LCD_Scroll("Bedroom Menu");
 14374  010C76  0E55               	movlw	low STR_125
 14375  010C78  0101               	movlb	1	; () banked
 14376  010C7A  6F83               	movwf	LCD_Scroll@This& (0+255),b
 14377  010C7C  0EFD               	movlw	high STR_125
 14378  010C7E  0101               	movlb	1	; () banked
 14379  010C80  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14380  010C82  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 14381                           
 14382                           ;StringCommand.c: 320: LCD_Scroll("Devices:");
 14383  010C86  0E8F               	movlw	low STR_67
 14384  010C88  0101               	movlb	1	; () banked
 14385  010C8A  6F83               	movwf	LCD_Scroll@This& (0+255),b
 14386  010C8C  0EFE               	movlw	high STR_67
 14387  010C8E  0101               	movlb	1	; () banked
 14388  010C90  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14389  010C92  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 14390                           
 14391                           ;StringCommand.c: 321: LCD_Scroll("Light");
 14392  010C96  0EA7               	movlw	low STR_93
 14393  010C98  0101               	movlb	1	; () banked
 14394  010C9A  6F83               	movwf	LCD_Scroll@This& (0+255),b
 14395  010C9C  0EFF               	movlw	high STR_93
 14396  010C9E  0101               	movlb	1	; () banked
 14397  010CA0  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14398  010CA2  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 14399                           
 14400                           ;StringCommand.c: 322: LCD_Scroll("Fan");
 14401  010CA6  0EEC               	movlw	low STR_94
 14402  010CA8  0101               	movlb	1	; () banked
 14403  010CAA  6F83               	movwf	LCD_Scroll@This& (0+255),b
 14404  010CAC  0EFF               	movlw	high STR_94
 14405  010CAE  0101               	movlb	1	; () banked
 14406  010CB0  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14407  010CB2  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 14408                           
 14409                           ;StringCommand.c: 323: LCD_Scroll("Shaker");
 14410  010CB6  0E75               	movlw	low STR_129
 14411  010CB8  0101               	movlb	1	; () banked
 14412  010CBA  6F83               	movwf	LCD_Scroll@This& (0+255),b
 14413  010CBC  0EFF               	movlw	high STR_129
 14414  010CBE  0101               	movlb	1	; () banked
 14415  010CC0  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14416  010CC2  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 14417                           
 14418                           ;StringCommand.c: 324: }
 14419                           ;StringCommand.c: 325: }
 14420  010CC6  EF7C  F093         	goto	l685
 14421  010CCA                     l15263:
 14422                           
 14423                           ;StringCommand.c: 327: else if (StringContains(Input, "color") || StringContains(Input, 
      +                          "white") || StringContains(Input, "christmas"))
 14424  010CCA  C1C2  F174         	movff	Command@Input,StringContains@This
 14425  010CCE  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14426  010CD2  0EA1               	movlw	low STR_130
 14427  010CD4  0101               	movlb	1	; () banked
 14428  010CD6  6F76               	movwf	StringContains@That& (0+255),b
 14429  010CD8  0EFF               	movlw	high STR_130
 14430  010CDA  0101               	movlb	1	; () banked
 14431  010CDC  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14432  010CDE  ECC2  F0BC         	call	_StringContains	;wreg free
 14433  010CE2  0900               	iorlw	0
 14434  010CE4  A4D8               	btfss	status,2,c
 14435  010CE6  D01E               	goto	l15269
 14436  010CE8  C1C2  F174         	movff	Command@Input,StringContains@This
 14437  010CEC  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14438  010CF0  0E9B               	movlw	low STR_131
 14439  010CF2  0101               	movlb	1	; () banked
 14440  010CF4  6F76               	movwf	StringContains@That& (0+255),b
 14441  010CF6  0EFF               	movlw	high STR_131
 14442  010CF8  0101               	movlb	1	; () banked
 14443  010CFA  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14444  010CFC  ECC2  F0BC         	call	_StringContains	;wreg free
 14445  010D00  0900               	iorlw	0
 14446  010D02  A4D8               	btfss	status,2,c
 14447  010D04  D00F               	goto	l15269
 14448  010D06  C1C2  F174         	movff	Command@Input,StringContains@This
 14449  010D0A  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14450  010D0E  0E54               	movlw	low STR_132
 14451  010D10  0101               	movlb	1	; () banked
 14452  010D12  6F76               	movwf	StringContains@That& (0+255),b
 14453  010D14  0EFE               	movlw	high STR_132
 14454  010D16  0101               	movlb	1	; () banked
 14455  010D18  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14456  010D1A  ECC2  F0BC         	call	_StringContains	;wreg free
 14457  010D1E  0900               	iorlw	0
 14458  010D20  B4D8               	btfsc	status,2,c
 14459  010D22  D1C6               	goto	l15325
 14460  010D24                     l15269:
 14461                           
 14462                           ;StringCommand.c: 328: {
 14463                           ;StringCommand.c: 329: if (!StringContains(Input, "?"))
 14464  010D24  C1C2  F174         	movff	Command@Input,StringContains@This
 14465  010D28  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14466  010D2C  0E17               	movlw	low (STR_83+14)
 14467  010D2E  0101               	movlb	1	; () banked
 14468  010D30  6F76               	movwf	StringContains@That& (0+255),b
 14469  010D32  0EFA               	movlw	high (STR_83+14)
 14470  010D34  0101               	movlb	1	; () banked
 14471  010D36  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14472  010D38  ECC2  F0BC         	call	_StringContains	;wreg free
 14473  010D3C  0900               	iorlw	0
 14474  010D3E  A4D8               	btfss	status,2,c
 14475  010D40  D165               	goto	l15315
 14476                           
 14477                           ;StringCommand.c: 330: {
 14478                           ;StringCommand.c: 331: if (StringContains(Input, "color") && StringContains(Input, "="))
 14479  010D42  C1C2  F174         	movff	Command@Input,StringContains@This
 14480  010D46  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14481  010D4A  0EA1               	movlw	low STR_130
 14482  010D4C  0101               	movlb	1	; () banked
 14483  010D4E  6F76               	movwf	StringContains@That& (0+255),b
 14484  010D50  0EFF               	movlw	high STR_130
 14485  010D52  0101               	movlb	1	; () banked
 14486  010D54  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14487  010D56  ECC2  F0BC         	call	_StringContains	;wreg free
 14488  010D5A  0900               	iorlw	0
 14489  010D5C  B4D8               	btfsc	status,2,c
 14490  010D5E  D062               	goto	l15285
 14491  010D60  C1C2  F174         	movff	Command@Input,StringContains@This
 14492  010D64  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14493  010D68  0E05               	movlw	low (STR_201+11)
 14494  010D6A  0101               	movlb	1	; () banked
 14495  010D6C  6F76               	movwf	StringContains@That& (0+255),b
 14496  010D6E  0EFD               	movlw	high (STR_201+11)
 14497  010D70  0101               	movlb	1	; () banked
 14498  010D72  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14499  010D74  ECC2  F0BC         	call	_StringContains	;wreg free
 14500  010D78  0900               	iorlw	0
 14501  010D7A  B4D8               	btfsc	status,2,c
 14502  010D7C  D053               	goto	l15285
 14503                           
 14504                           ;StringCommand.c: 332: {
 14505                           ;StringCommand.c: 333: INTCONbits.GIE = 0;
 14506  010D7E  9EF2               	bcf	intcon,7,c	;volatile
 14507                           
 14508                           ;StringCommand.c: 334: Send_Config1(0b00000001, TXdataF);
 14509  010D80  0E51               	movlw	low _TXdataF
 14510  010D82  0101               	movlb	1	; () banked
 14511  010D84  6F7F               	movwf	Send_Config1@data& (0+255),b
 14512  010D86  0EEE               	movlw	high _TXdataF
 14513  010D88  0101               	movlb	1	; () banked
 14514  010D8A  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 14515  010D8C  0E01               	movlw	1
 14516  010D8E  ECA4  F0B4         	call	_Send_Config1
 14517                           
 14518                           ;StringCommand.c: 335: Send_Config1(0b00000001, TXdataF);
 14519  010D92  0E51               	movlw	low _TXdataF
 14520  010D94  0101               	movlb	1	; () banked
 14521  010D96  6F7F               	movwf	Send_Config1@data& (0+255),b
 14522  010D98  0EEE               	movlw	high _TXdataF
 14523  010D9A  0101               	movlb	1	; () banked
 14524  010D9C  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 14525  010D9E  0E01               	movlw	1
 14526  010DA0  ECA4  F0B4         	call	_Send_Config1
 14527                           
 14528                           ;StringCommand.c: 336: Send_Config1(0b00000001, TXdataF);
 14529  010DA4  0E51               	movlw	low _TXdataF
 14530  010DA6  0101               	movlb	1	; () banked
 14531  010DA8  6F7F               	movwf	Send_Config1@data& (0+255),b
 14532  010DAA  0EEE               	movlw	high _TXdataF
 14533  010DAC  0101               	movlb	1	; () banked
 14534  010DAE  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 14535  010DB0  0E01               	movlw	1
 14536  010DB2  ECA4  F0B4         	call	_Send_Config1
 14537                           
 14538                           ;StringCommand.c: 337: Send_Config1(0b00000001, TXdataF);
 14539  010DB6  0E51               	movlw	low _TXdataF
 14540  010DB8  0101               	movlb	1	; () banked
 14541  010DBA  6F7F               	movwf	Send_Config1@data& (0+255),b
 14542  010DBC  0EEE               	movlw	high _TXdataF
 14543  010DBE  0101               	movlb	1	; () banked
 14544  010DC0  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 14545  010DC2  0E01               	movlw	1
 14546  010DC4  ECA4  F0B4         	call	_Send_Config1
 14547                           
 14548                           ;StringCommand.c: 338: Send_Config1(0b00000001, TXdataF);
 14549  010DC8  0E51               	movlw	low _TXdataF
 14550  010DCA  0101               	movlb	1	; () banked
 14551  010DCC  6F7F               	movwf	Send_Config1@data& (0+255),b
 14552  010DCE  0EEE               	movlw	high _TXdataF
 14553  010DD0  0101               	movlb	1	; () banked
 14554  010DD2  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 14555  010DD4  0E01               	movlw	1
 14556  010DD6  ECA4  F0B4         	call	_Send_Config1
 14557                           
 14558                           ;StringCommand.c: 339: Send_Config1(0b00000001, TXdataF);
 14559  010DDA  0E51               	movlw	low _TXdataF
 14560  010DDC  0101               	movlb	1	; () banked
 14561  010DDE  6F7F               	movwf	Send_Config1@data& (0+255),b
 14562  010DE0  0EEE               	movlw	high _TXdataF
 14563  010DE2  0101               	movlb	1	; () banked
 14564  010DE4  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 14565  010DE6  0E01               	movlw	1
 14566  010DE8  ECA4  F0B4         	call	_Send_Config1
 14567                           
 14568                           ;StringCommand.c: 340: Send_Config1(0b00000001, TXdataF);
 14569  010DEC  0E51               	movlw	low _TXdataF
 14570  010DEE  0101               	movlb	1	; () banked
 14571  010DF0  6F7F               	movwf	Send_Config1@data& (0+255),b
 14572  010DF2  0EEE               	movlw	high _TXdataF
 14573  010DF4  0101               	movlb	1	; () banked
 14574  010DF6  6F80               	movwf	(Send_Config1@data+1)& (0+255),b
 14575  010DF8  0E01               	movlw	1
 14576  010DFA  ECA4  F0B4         	call	_Send_Config1
 14577                           
 14578                           ;StringCommand.c: 341: INTCONbits.GIE = 1;
 14579  010DFE  8EF2               	bsf	intcon,7,c	;volatile
 14580                           
 14581                           ;StringCommand.c: 342: UARTstring("Christmas Tree Colored Lights Toggled");
 14582  010E00  0E5A               	movlw	low STR_136
 14583  010E02  0101               	movlb	1	; () banked
 14584  010E04  6F7F               	movwf	UARTstring@data& (0+255),b
 14585  010E06  0EF2               	movlw	high STR_136
 14586  010E08  0101               	movlb	1	; () banked
 14587  010E0A  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14588  010E0C  EC24  F0BA         	call	_UARTstring	;wreg free
 14589                           
 14590                           ;StringCommand.c: 343: LCDdisplayFeedback("XMAS Color TGLD");
 14591  010E10  0E69               	movlw	low STR_137
 14592  010E12  0101               	movlb	1	; () banked
 14593  010E14  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14594  010E16  0EFA               	movlw	high STR_137
 14595  010E18  0101               	movlb	1	; () banked
 14596  010E1A  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14597  010E1C  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 14598                           
 14599                           ;StringCommand.c: 344: }
 14600  010E20  EF7C  F093         	goto	l685
 14601  010E24                     l15285:
 14602                           
 14603                           ;StringCommand.c: 345: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=on"))
 14604  010E24  C1C2  F174         	movff	Command@Input,StringContains@This
 14605  010E28  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14606  010E2C  0E9B               	movlw	low STR_131
 14607  010E2E  0101               	movlb	1	; () banked
 14608  010E30  6F76               	movwf	StringContains@That& (0+255),b
 14609  010E32  0EFF               	movlw	high STR_131
 14610  010E34  0101               	movlb	1	; () banked
 14611  010E36  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14612  010E38  ECC2  F0BC         	call	_StringContains	;wreg free
 14613  010E3C  0900               	iorlw	0
 14614  010E3E  B4D8               	btfsc	status,2,c
 14615  010E40  D062               	goto	l15299
 14616  010E42  C1C2  F174         	movff	Command@Input,StringContains@This
 14617  010E46  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14618  010E4A  0E2E               	movlw	low (STR_43+4)
 14619  010E4C  0101               	movlb	1	; () banked
 14620  010E4E  6F76               	movwf	StringContains@That& (0+255),b
 14621  010E50  0EFF               	movlw	high (STR_43+4)
 14622  010E52  0101               	movlb	1	; () banked
 14623  010E54  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14624  010E56  ECC2  F0BC         	call	_StringContains	;wreg free
 14625  010E5A  0900               	iorlw	0
 14626  010E5C  B4D8               	btfsc	status,2,c
 14627  010E5E  D053               	goto	l15299
 14628                           
 14629                           ;StringCommand.c: 346: {
 14630                           ;StringCommand.c: 347: INTCONbits.GIE = 0;
 14631  010E60  9EF2               	bcf	intcon,7,c	;volatile
 14632                           
 14633                           ;StringCommand.c: 348: Send_Config2(0b00000001, Aux2ON);
 14634  010E62  0EA9               	movlw	low _Aux2ON
 14635  010E64  0101               	movlb	1	; () banked
 14636  010E66  6F7F               	movwf	Send_Config2@data& (0+255),b
 14637  010E68  0EED               	movlw	high _Aux2ON
 14638  010E6A  0101               	movlb	1	; () banked
 14639  010E6C  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14640  010E6E  0E01               	movlw	1
 14641  010E70  EC80  F0BC         	call	_Send_Config2
 14642                           
 14643                           ;StringCommand.c: 349: Send_Config2(0b00000001, Aux2ON);
 14644  010E74  0EA9               	movlw	low _Aux2ON
 14645  010E76  0101               	movlb	1	; () banked
 14646  010E78  6F7F               	movwf	Send_Config2@data& (0+255),b
 14647  010E7A  0EED               	movlw	high _Aux2ON
 14648  010E7C  0101               	movlb	1	; () banked
 14649  010E7E  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14650  010E80  0E01               	movlw	1
 14651  010E82  EC80  F0BC         	call	_Send_Config2
 14652                           
 14653                           ;StringCommand.c: 350: Send_Config2(0b00000001, Aux2ON);
 14654  010E86  0EA9               	movlw	low _Aux2ON
 14655  010E88  0101               	movlb	1	; () banked
 14656  010E8A  6F7F               	movwf	Send_Config2@data& (0+255),b
 14657  010E8C  0EED               	movlw	high _Aux2ON
 14658  010E8E  0101               	movlb	1	; () banked
 14659  010E90  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14660  010E92  0E01               	movlw	1
 14661  010E94  EC80  F0BC         	call	_Send_Config2
 14662                           
 14663                           ;StringCommand.c: 351: Send_Config2(0b00000001, Aux2ON);
 14664  010E98  0EA9               	movlw	low _Aux2ON
 14665  010E9A  0101               	movlb	1	; () banked
 14666  010E9C  6F7F               	movwf	Send_Config2@data& (0+255),b
 14667  010E9E  0EED               	movlw	high _Aux2ON
 14668  010EA0  0101               	movlb	1	; () banked
 14669  010EA2  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14670  010EA4  0E01               	movlw	1
 14671  010EA6  EC80  F0BC         	call	_Send_Config2
 14672                           
 14673                           ;StringCommand.c: 352: Send_Config2(0b00000001, Aux2ON);
 14674  010EAA  0EA9               	movlw	low _Aux2ON
 14675  010EAC  0101               	movlb	1	; () banked
 14676  010EAE  6F7F               	movwf	Send_Config2@data& (0+255),b
 14677  010EB0  0EED               	movlw	high _Aux2ON
 14678  010EB2  0101               	movlb	1	; () banked
 14679  010EB4  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14680  010EB6  0E01               	movlw	1
 14681  010EB8  EC80  F0BC         	call	_Send_Config2
 14682                           
 14683                           ;StringCommand.c: 353: Send_Config2(0b00000001, Aux2ON);
 14684  010EBC  0EA9               	movlw	low _Aux2ON
 14685  010EBE  0101               	movlb	1	; () banked
 14686  010EC0  6F7F               	movwf	Send_Config2@data& (0+255),b
 14687  010EC2  0EED               	movlw	high _Aux2ON
 14688  010EC4  0101               	movlb	1	; () banked
 14689  010EC6  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14690  010EC8  0E01               	movlw	1
 14691  010ECA  EC80  F0BC         	call	_Send_Config2
 14692                           
 14693                           ;StringCommand.c: 354: Send_Config2(0b00000001, Aux2ON);
 14694  010ECE  0EA9               	movlw	low _Aux2ON
 14695  010ED0  0101               	movlb	1	; () banked
 14696  010ED2  6F7F               	movwf	Send_Config2@data& (0+255),b
 14697  010ED4  0EED               	movlw	high _Aux2ON
 14698  010ED6  0101               	movlb	1	; () banked
 14699  010ED8  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14700  010EDA  0E01               	movlw	1
 14701  010EDC  EC80  F0BC         	call	_Send_Config2
 14702                           
 14703                           ;StringCommand.c: 355: INTCONbits.GIE = 1;
 14704  010EE0  8EF2               	bsf	intcon,7,c	;volatile
 14705                           
 14706                           ;StringCommand.c: 356: UARTstring("Christmas Tree White Lights On");
 14707  010EE2  0E3F               	movlw	low STR_140
 14708  010EE4  0101               	movlb	1	; () banked
 14709  010EE6  6F7F               	movwf	UARTstring@data& (0+255),b
 14710  010EE8  0EF4               	movlw	high STR_140
 14711  010EEA  0101               	movlb	1	; () banked
 14712  010EEC  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14713  010EEE  EC24  F0BA         	call	_UARTstring	;wreg free
 14714                           
 14715                           ;StringCommand.c: 357: LCDdisplayFeedback("XMAS White On");
 14716  010EF2  0E63               	movlw	low STR_141
 14717  010EF4  0101               	movlb	1	; () banked
 14718  010EF6  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14719  010EF8  0EFC               	movlw	high STR_141
 14720  010EFA  0101               	movlb	1	; () banked
 14721  010EFC  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14722  010EFE  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 14723                           
 14724                           ;StringCommand.c: 358: }
 14725  010F02  EF7C  F093         	goto	l685
 14726  010F06                     l15299:
 14727                           
 14728                           ;StringCommand.c: 359: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=off"))
 14729  010F06  C1C2  F174         	movff	Command@Input,StringContains@This
 14730  010F0A  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14731  010F0E  0E9B               	movlw	low STR_131
 14732  010F10  0101               	movlb	1	; () banked
 14733  010F12  6F76               	movwf	StringContains@That& (0+255),b
 14734  010F14  0EFF               	movlw	high STR_131
 14735  010F16  0101               	movlb	1	; () banked
 14736  010F18  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14737  010F1A  ECC2  F0BC         	call	_StringContains	;wreg free
 14738  010F1E  0900               	iorlw	0
 14739  010F20  B4D8               	btfsc	status,2,c
 14740  010F22  D062               	goto	l15313
 14741  010F24  C1C2  F174         	movff	Command@Input,StringContains@This
 14742  010F28  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14743  010F2C  0EB7               	movlw	low (STR_46+4)
 14744  010F2E  0101               	movlb	1	; () banked
 14745  010F30  6F76               	movwf	StringContains@That& (0+255),b
 14746  010F32  0EFE               	movlw	high (STR_46+4)
 14747  010F34  0101               	movlb	1	; () banked
 14748  010F36  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14749  010F38  ECC2  F0BC         	call	_StringContains	;wreg free
 14750  010F3C  0900               	iorlw	0
 14751  010F3E  B4D8               	btfsc	status,2,c
 14752  010F40  D053               	goto	l15313
 14753                           
 14754                           ;StringCommand.c: 360: {
 14755                           ;StringCommand.c: 361: INTCONbits.GIE = 0;
 14756  010F42  9EF2               	bcf	intcon,7,c	;volatile
 14757                           
 14758                           ;StringCommand.c: 362: Send_Config2(0b00000001, Aux2OFF);
 14759  010F44  0E99               	movlw	low _Aux2OFF
 14760  010F46  0101               	movlb	1	; () banked
 14761  010F48  6F7F               	movwf	Send_Config2@data& (0+255),b
 14762  010F4A  0EED               	movlw	high _Aux2OFF
 14763  010F4C  0101               	movlb	1	; () banked
 14764  010F4E  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14765  010F50  0E01               	movlw	1
 14766  010F52  EC80  F0BC         	call	_Send_Config2
 14767                           
 14768                           ;StringCommand.c: 363: Send_Config2(0b00000001, Aux2OFF);
 14769  010F56  0E99               	movlw	low _Aux2OFF
 14770  010F58  0101               	movlb	1	; () banked
 14771  010F5A  6F7F               	movwf	Send_Config2@data& (0+255),b
 14772  010F5C  0EED               	movlw	high _Aux2OFF
 14773  010F5E  0101               	movlb	1	; () banked
 14774  010F60  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14775  010F62  0E01               	movlw	1
 14776  010F64  EC80  F0BC         	call	_Send_Config2
 14777                           
 14778                           ;StringCommand.c: 364: Send_Config2(0b00000001, Aux2OFF);
 14779  010F68  0E99               	movlw	low _Aux2OFF
 14780  010F6A  0101               	movlb	1	; () banked
 14781  010F6C  6F7F               	movwf	Send_Config2@data& (0+255),b
 14782  010F6E  0EED               	movlw	high _Aux2OFF
 14783  010F70  0101               	movlb	1	; () banked
 14784  010F72  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14785  010F74  0E01               	movlw	1
 14786  010F76  EC80  F0BC         	call	_Send_Config2
 14787                           
 14788                           ;StringCommand.c: 365: Send_Config2(0b00000001, Aux2OFF);
 14789  010F7A  0E99               	movlw	low _Aux2OFF
 14790  010F7C  0101               	movlb	1	; () banked
 14791  010F7E  6F7F               	movwf	Send_Config2@data& (0+255),b
 14792  010F80  0EED               	movlw	high _Aux2OFF
 14793  010F82  0101               	movlb	1	; () banked
 14794  010F84  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14795  010F86  0E01               	movlw	1
 14796  010F88  EC80  F0BC         	call	_Send_Config2
 14797                           
 14798                           ;StringCommand.c: 366: Send_Config2(0b00000001, Aux2OFF);
 14799  010F8C  0E99               	movlw	low _Aux2OFF
 14800  010F8E  0101               	movlb	1	; () banked
 14801  010F90  6F7F               	movwf	Send_Config2@data& (0+255),b
 14802  010F92  0EED               	movlw	high _Aux2OFF
 14803  010F94  0101               	movlb	1	; () banked
 14804  010F96  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14805  010F98  0E01               	movlw	1
 14806  010F9A  EC80  F0BC         	call	_Send_Config2
 14807                           
 14808                           ;StringCommand.c: 367: Send_Config2(0b00000001, Aux2OFF);
 14809  010F9E  0E99               	movlw	low _Aux2OFF
 14810  010FA0  0101               	movlb	1	; () banked
 14811  010FA2  6F7F               	movwf	Send_Config2@data& (0+255),b
 14812  010FA4  0EED               	movlw	high _Aux2OFF
 14813  010FA6  0101               	movlb	1	; () banked
 14814  010FA8  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14815  010FAA  0E01               	movlw	1
 14816  010FAC  EC80  F0BC         	call	_Send_Config2
 14817                           
 14818                           ;StringCommand.c: 368: Send_Config2(0b00000001, Aux2OFF);
 14819  010FB0  0E99               	movlw	low _Aux2OFF
 14820  010FB2  0101               	movlb	1	; () banked
 14821  010FB4  6F7F               	movwf	Send_Config2@data& (0+255),b
 14822  010FB6  0EED               	movlw	high _Aux2OFF
 14823  010FB8  0101               	movlb	1	; () banked
 14824  010FBA  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 14825  010FBC  0E01               	movlw	1
 14826  010FBE  EC80  F0BC         	call	_Send_Config2
 14827                           
 14828                           ;StringCommand.c: 369: INTCONbits.GIE = 1;
 14829  010FC2  8EF2               	bsf	intcon,7,c	;volatile
 14830                           
 14831                           ;StringCommand.c: 370: UARTstring("Christmas Tree White Lights Off");
 14832  010FC4  0E1F               	movlw	low STR_144
 14833  010FC6  0101               	movlb	1	; () banked
 14834  010FC8  6F7F               	movwf	UARTstring@data& (0+255),b
 14835  010FCA  0EF4               	movlw	high STR_144
 14836  010FCC  0101               	movlb	1	; () banked
 14837  010FCE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14838  010FD0  EC24  F0BA         	call	_UARTstring	;wreg free
 14839                           
 14840                           ;StringCommand.c: 371: LCDdisplayFeedback("XMAS White Off");
 14841  010FD4  0E95               	movlw	low STR_145
 14842  010FD6  0101               	movlb	1	; () banked
 14843  010FD8  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14844  010FDA  0EFB               	movlw	high STR_145
 14845  010FDC  0101               	movlb	1	; () banked
 14846  010FDE  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14847  010FE0  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 14848                           
 14849                           ;StringCommand.c: 372: }
 14850  010FE4  EF7C  F093         	goto	l685
 14851  010FE8                     l15313:
 14852                           
 14853                           ;StringCommand.c: 373: else
 14854                           ;StringCommand.c: 374: {
 14855                           ;StringCommand.c: 375: UARTstring("Christmas What???");
 14856  010FE8  0E4A               	movlw	low STR_146
 14857  010FEA  0101               	movlb	1	; () banked
 14858  010FEC  6F7F               	movwf	UARTstring@data& (0+255),b
 14859  010FEE  0EF8               	movlw	high STR_146
 14860  010FF0  0101               	movlb	1	; () banked
 14861  010FF2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14862  010FF4  EC24  F0BA         	call	_UARTstring	;wreg free
 14863                           
 14864                           ;StringCommand.c: 376: LCDdisplayFeedback("XMAS What???");
 14865  010FF8  0E07               	movlw	low STR_147
 14866  010FFA  0101               	movlb	1	; () banked
 14867  010FFC  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14868  010FFE  0EFD               	movlw	high STR_147
 14869  011000  0101               	movlb	1	; () banked
 14870  011002  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14871  011004  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 14872                           
 14873                           ;StringCommand.c: 377: }
 14874                           ;StringCommand.c: 378: }
 14875  011008  EF7C  F093         	goto	l685
 14876  01100C                     l15315:
 14877                           
 14878                           ;StringCommand.c: 379: else
 14879                           ;StringCommand.c: 380: {
 14880                           ;StringCommand.c: 381: UARTstring("Christmas tree Help Menu\r\n\n");
 14881  01100C  0ED3               	movlw	low STR_148
 14882  01100E  0101               	movlb	1	; () banked
 14883  011010  6F7F               	movwf	UARTstring@data& (0+255),b
 14884  011012  0EF4               	movlw	high STR_148
 14885  011014  0101               	movlb	1	; () banked
 14886  011016  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14887  011018  EC24  F0BA         	call	_UARTstring	;wreg free
 14888                           
 14889                           ;StringCommand.c: 382: UARTstring("Devices:\r\n");
 14890  01101C  0EB7               	movlw	low STR_61
 14891  01101E  0101               	movlb	1	; () banked
 14892  011020  6F7F               	movwf	UARTstring@data& (0+255),b
 14893  011022  0EFD               	movlw	high STR_61
 14894  011024  0101               	movlb	1	; () banked
 14895  011026  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14896  011028  EC24  F0BA         	call	_UARTstring	;wreg free
 14897                           
 14898                           ;StringCommand.c: 383: UARTstring("white lights\r\n");
 14899  01102C  0E68               	movlw	low STR_150
 14900  01102E  0101               	movlb	1	; () banked
 14901  011030  6F7F               	movwf	UARTstring@data& (0+255),b
 14902  011032  0EFB               	movlw	high STR_150
 14903  011034  0101               	movlb	1	; () banked
 14904  011036  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14905  011038  EC24  F0BA         	call	_UARTstring	;wreg free
 14906                           
 14907                           ;StringCommand.c: 384: UARTstring("colored lights\r\n\n");
 14908  01103C  0E26               	movlw	low STR_151
 14909  01103E  0101               	movlb	1	; () banked
 14910  011040  6F7F               	movwf	UARTstring@data& (0+255),b
 14911  011042  0EF8               	movlw	high STR_151
 14912  011044  0101               	movlb	1	; () banked
 14913  011046  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14914  011048  EC24  F0BA         	call	_UARTstring	;wreg free
 14915                           
 14916                           ;StringCommand.c: 385: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 14917  01104C  0EEB               	movlw	low STR_64
 14918  01104E  0101               	movlb	1	; () banked
 14919  011050  6F7F               	movwf	UARTstring@data& (0+255),b
 14920  011052  0EEE               	movlw	high STR_64
 14921  011054  0101               	movlb	1	; () banked
 14922  011056  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14923  011058  EC24  F0BA         	call	_UARTstring	;wreg free
 14924                           
 14925                           ;StringCommand.c: 386: UARTstring("i.e. Christmas Colored lights = On\r\n");
 14926  01105C  0EA6               	movlw	low STR_153
 14927  01105E  0101               	movlb	1	; () banked
 14928  011060  6F7F               	movwf	UARTstring@data& (0+255),b
 14929  011062  0EF2               	movlw	high STR_153
 14930  011064  0101               	movlb	1	; () banked
 14931  011066  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 14932  011068  EC24  F0BA         	call	_UARTstring	;wreg free
 14933                           
 14934                           ;StringCommand.c: 387: LCD_Scroll("XMAS Menu");
 14935  01106C  0E5E               	movlw	low STR_154
 14936  01106E  0101               	movlb	1	; () banked
 14937  011070  6F83               	movwf	LCD_Scroll@This& (0+255),b
 14938  011072  0EFE               	movlw	high STR_154
 14939  011074  0101               	movlb	1	; () banked
 14940  011076  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14941  011078  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 14942                           
 14943                           ;StringCommand.c: 388: LCD_Scroll("Devices:");
 14944  01107C  0E8F               	movlw	low STR_67
 14945  01107E  0101               	movlb	1	; () banked
 14946  011080  6F83               	movwf	LCD_Scroll@This& (0+255),b
 14947  011082  0EFE               	movlw	high STR_67
 14948  011084  0101               	movlb	1	; () banked
 14949  011086  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14950  011088  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 14951                           
 14952                           ;StringCommand.c: 389: LCD_Scroll("white");
 14953  01108C  0E9B               	movlw	low STR_131
 14954  01108E  0101               	movlb	1	; () banked
 14955  011090  6F83               	movwf	LCD_Scroll@This& (0+255),b
 14956  011092  0EFF               	movlw	high STR_131
 14957  011094  0101               	movlb	1	; () banked
 14958  011096  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14959  011098  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 14960                           
 14961                           ;StringCommand.c: 390: LCD_Scroll("color");
 14962  01109C  0EA1               	movlw	low STR_130
 14963  01109E  0101               	movlb	1	; () banked
 14964  0110A0  6F83               	movwf	LCD_Scroll@This& (0+255),b
 14965  0110A2  0EFF               	movlw	high STR_130
 14966  0110A4  0101               	movlb	1	; () banked
 14967  0110A6  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14968  0110A8  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 14969                           
 14970                           ;StringCommand.c: 391: }
 14971                           ;StringCommand.c: 392: }
 14972  0110AC  EF7C  F093         	goto	l685
 14973  0110B0                     l15325:
 14974                           
 14975                           ;StringCommand.c: 394: else if (StartsWith(Input, "red"))
 14976  0110B0  C1C2  F174         	movff	Command@Input,StartsWith@This
 14977  0110B4  C1C3  F175         	movff	Command@Input+1,StartsWith@This+1
 14978  0110B8  0EB2               	movlw	low (STR_206+25)
 14979  0110BA  0101               	movlb	1	; () banked
 14980  0110BC  6F76               	movwf	StartsWith@That& (0+255),b
 14981  0110BE  0EF4               	movlw	high (STR_206+25)
 14982  0110C0  0101               	movlb	1	; () banked
 14983  0110C2  6F77               	movwf	(StartsWith@That+1)& (0+255),b
 14984  0110C4  ECAA  F0BB         	call	_StartsWith	;wreg free
 14985  0110C8  0900               	iorlw	0
 14986  0110CA  B4D8               	btfsc	status,2,c
 14987  0110CC  D13C               	goto	l15377
 14988                           
 14989                           ;StringCommand.c: 395: {
 14990                           ;StringCommand.c: 396: if (!StringContains(Input, "?"))
 14991  0110CE  C1C2  F174         	movff	Command@Input,StringContains@This
 14992  0110D2  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 14993  0110D6  0E17               	movlw	low (STR_83+14)
 14994  0110D8  0101               	movlb	1	; () banked
 14995  0110DA  6F76               	movwf	StringContains@That& (0+255),b
 14996  0110DC  0EFA               	movlw	high (STR_83+14)
 14997  0110DE  0101               	movlb	1	; () banked
 14998  0110E0  6F77               	movwf	(StringContains@That+1)& (0+255),b
 14999  0110E2  ECC2  F0BC         	call	_StringContains	;wreg free
 15000  0110E6  0900               	iorlw	0
 15001  0110E8  A4D8               	btfss	status,2,c
 15002  0110EA  D0FB               	goto	l15369
 15003                           
 15004                           ;StringCommand.c: 397: {
 15005                           ;StringCommand.c: 398: if (StartsWith(Input, "redled") || StartsWith(Input, "redledbrigh
      +                          tness"))
 15006  0110EC  C1C2  F174         	movff	Command@Input,StartsWith@This
 15007  0110F0  C1C3  F175         	movff	Command@Input+1,StartsWith@This+1
 15008  0110F4  0E6E               	movlw	low STR_160
 15009  0110F6  0101               	movlb	1	; () banked
 15010  0110F8  6F76               	movwf	StartsWith@That& (0+255),b
 15011  0110FA  0EFF               	movlw	high STR_160
 15012  0110FC  0101               	movlb	1	; () banked
 15013  0110FE  6F77               	movwf	(StartsWith@That+1)& (0+255),b
 15014  011100  ECAA  F0BB         	call	_StartsWith	;wreg free
 15015  011104  0900               	iorlw	0
 15016  011106  A4D8               	btfss	status,2,c
 15017  011108  D00F               	goto	l15333
 15018  01110A  C1C2  F174         	movff	Command@Input,StartsWith@This
 15019  01110E  C1C3  F175         	movff	Command@Input+1,StartsWith@This+1
 15020  011112  0EA5               	movlw	low STR_161
 15021  011114  0101               	movlb	1	; () banked
 15022  011116  6F76               	movwf	StartsWith@That& (0+255),b
 15023  011118  0EF9               	movlw	high STR_161
 15024  01111A  0101               	movlb	1	; () banked
 15025  01111C  6F77               	movwf	(StartsWith@That+1)& (0+255),b
 15026  01111E  ECAA  F0BB         	call	_StartsWith	;wreg free
 15027  011122  0900               	iorlw	0
 15028  011124  B4D8               	btfsc	status,2,c
 15029  011126  D0CB               	goto	l15367
 15030  011128                     l15333:
 15031                           
 15032                           ;StringCommand.c: 399: {
 15033                           ;StringCommand.c: 400: if (!StringContains(Input, "="))
 15034  011128  C1C2  F174         	movff	Command@Input,StringContains@This
 15035  01112C  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 15036  011130  0E05               	movlw	low (STR_201+11)
 15037  011132  0101               	movlb	1	; () banked
 15038  011134  6F76               	movwf	StringContains@That& (0+255),b
 15039  011136  0EFD               	movlw	high (STR_201+11)
 15040  011138  0101               	movlb	1	; () banked
 15041  01113A  6F77               	movwf	(StringContains@That+1)& (0+255),b
 15042  01113C  ECC2  F0BC         	call	_StringContains	;wreg free
 15043  011140  0900               	iorlw	0
 15044  011142  A4D8               	btfss	status,2,c
 15045  011144  D009               	goto	l15337
 15046                           
 15047                           ;StringCommand.c: 401: {
 15048                           ;StringCommand.c: 402: UARTstring("there is no question mark\r\n");
 15049  011146  0E0B               	movlw	low STR_163
 15050  011148  0101               	movlb	1	; () banked
 15051  01114A  6F7F               	movwf	UARTstring@data& (0+255),b
 15052  01114C  0EF5               	movlw	high STR_163
 15053  01114E  0101               	movlb	1	; () banked
 15054  011150  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15055  011152  EC24  F0BA         	call	_UARTstring	;wreg free
 15056  011156  D000               	goto	l15337
 15057  011158                     l15337:
 15058                           
 15059                           ;StringCommand.c: 403: }
 15060                           ;StringCommand.c: 404: tempLONG = GetEnteredNumber(Input);
 15061  011158  C1C2  F180         	movff	Command@Input,GetEnteredNumber@This
 15062  01115C  C1C3  F181         	movff	Command@Input+1,GetEnteredNumber@This+1
 15063  011160  EC29  F0A8         	call	_GetEnteredNumber	;wreg free
 15064  011164  C180  F6DE         	movff	?_GetEnteredNumber,Command@tempLONG
 15065  011168  C181  F6DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 15066  01116C  C182  F6E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 15067  011170  C183  F6E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 15068                           
 15069                           ;StringCommand.c: 405: if(tempLONG < 1000 && tempLONG >= 0 )
 15070  011174  0106               	movlb	6	; () banked
 15071  011176  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 15072  011178  D00D               	goto	l15341
 15073  01117A  0106               	movlb	6	; () banked
 15074  01117C  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 15075  01117E  0106               	movlb	6	; () banked
 15076  011180  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 15077  011182  E110               	bnz	l15345
 15078  011184  0EE8               	movlw	232
 15079  011186  0106               	movlb	6	; () banked
 15080  011188  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 15081  01118A  0E03               	movlw	3
 15082  01118C  0106               	movlb	6	; () banked
 15083  01118E  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 15084  011190  B0D8               	btfsc	status,0,c
 15085  011192  D008               	goto	l15345
 15086  011194                     l15341:
 15087                           
 15088                           ; BSR set to: 6
 15089  011194  0106               	movlb	6	; () banked
 15090  011196  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 15091  011198  D005               	goto	l15345
 15092                           
 15093                           ; BSR set to: 6
 15094                           ;StringCommand.c: 406: {
 15095                           ;StringCommand.c: 407: duty = (int)tempLONG;
 15096  01119A  C6DE  F6DC         	movff	Command@tempLONG,Command@duty
 15097  01119E  C6DF  F6DD         	movff	Command@tempLONG+1,Command@duty+1
 15098  0111A2  D000               	goto	l15345
 15099  0111A4                     l15345:
 15100                           
 15101                           ; BSR set to: 6
 15102                           ;StringCommand.c: 408: }
 15103                           ;StringCommand.c: 409: if (tempLONG == 2147483645L)
 15104  0111A4  0EFD               	movlw	253
 15105  0111A6  0106               	movlb	6	; () banked
 15106  0111A8  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 15107  0111AA  E11D               	bnz	l15349
 15108  0111AC  0106               	movlb	6	; () banked
 15109  0111AE  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 15110  0111B0  E11A               	bnz	l15349
 15111  0111B2  0106               	movlb	6	; () banked
 15112  0111B4  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 15113  0111B6  E117               	bnz	l15349
 15114  0111B8  0E7F               	movlw	127
 15115  0111BA  0106               	movlb	6	; () banked
 15116  0111BC  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 15117  0111BE  A4D8               	btfss	status,2,c
 15118  0111C0  D012               	goto	l15349
 15119                           
 15120                           ; BSR set to: 6
 15121                           ;StringCommand.c: 410: {
 15122                           ;StringCommand.c: 411: UARTstring("Error: No number entered\r\n");
 15123  0111C2  0E5F               	movlw	low STR_164
 15124  0111C4  0101               	movlb	1	; () banked
 15125  0111C6  6F7F               	movwf	UARTstring@data& (0+255),b
 15126  0111C8  0EF5               	movlw	high STR_164
 15127  0111CA  0101               	movlb	1	; () banked
 15128  0111CC  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15129  0111CE  EC24  F0BA         	call	_UARTstring	;wreg free
 15130                           
 15131                           ;StringCommand.c: 412: LCDdisplayFeedback("ERR: no number");
 15132  0111D2  0E0D               	movlw	low STR_165
 15133  0111D4  0101               	movlb	1	; () banked
 15134  0111D6  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15135  0111D8  0EFC               	movlw	high STR_165
 15136  0111DA  0101               	movlb	1	; () banked
 15137  0111DC  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15138  0111DE  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15139                           
 15140                           ;StringCommand.c: 413: }
 15141  0111E2  EF7C  F093         	goto	l685
 15142  0111E6                     l15349:
 15143                           
 15144                           ;StringCommand.c: 414: else if (duty > 100)
 15145  0111E6  0106               	movlb	6	; () banked
 15146  0111E8  BFDD               	btfsc	(Command@duty+1)& (0+255),7,b
 15147  0111EA  D01A               	goto	l15353
 15148  0111EC  0106               	movlb	6	; () banked
 15149  0111EE  51DD               	movf	(Command@duty+1)& (0+255),w,b
 15150  0111F0  E105               	bnz	u19680
 15151  0111F2  0E65               	movlw	101
 15152  0111F4  0106               	movlb	6	; () banked
 15153  0111F6  5DDC               	subwf	Command@duty& (0+255),w,b
 15154  0111F8  A0D8               	btfss	status,0,c
 15155  0111FA  D012               	goto	l15353
 15156  0111FC                     u19680:
 15157                           
 15158                           ; BSR set to: 6
 15159                           ;StringCommand.c: 415: {
 15160                           ;StringCommand.c: 416: UARTstring("Invalid Dutycycle: Greater than 100\r\n");
 15161  0111FC  0E34               	movlw	low STR_166
 15162  0111FE  0101               	movlb	1	; () banked
 15163  011200  6F7F               	movwf	UARTstring@data& (0+255),b
 15164  011202  0EF2               	movlw	high STR_166
 15165  011204  0101               	movlb	1	; () banked
 15166  011206  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15167  011208  EC24  F0BA         	call	_UARTstring	;wreg free
 15168                           
 15169                           ;StringCommand.c: 417: LCDdisplayFeedback("ERR: Duty > 100");
 15170  01120C  0EF9               	movlw	low STR_167
 15171  01120E  0101               	movlb	1	; () banked
 15172  011210  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15173  011212  0EF9               	movlw	high STR_167
 15174  011214  0101               	movlb	1	; () banked
 15175  011216  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15176  011218  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15177                           
 15178                           ;StringCommand.c: 418: }
 15179  01121C  EF7C  F093         	goto	l685
 15180  011220                     l15353:
 15181                           
 15182                           ;StringCommand.c: 419: else if (duty < 0)
 15183  011220  0106               	movlb	6	; () banked
 15184  011222  AFDD               	btfss	(Command@duty+1)& (0+255),7,b
 15185  011224  D012               	goto	l15357
 15186                           
 15187                           ; BSR set to: 6
 15188                           ;StringCommand.c: 420: {
 15189                           ;StringCommand.c: 421: UARTstring("Invalid Dutycycle: Less than 0\r\n");
 15190  011226  0E7C               	movlw	low STR_168
 15191  011228  0101               	movlb	1	; () banked
 15192  01122A  6F7F               	movwf	UARTstring@data& (0+255),b
 15193  01122C  0EF3               	movlw	high STR_168
 15194  01122E  0101               	movlb	1	; () banked
 15195  011230  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15196  011232  EC24  F0BA         	call	_UARTstring	;wreg free
 15197                           
 15198                           ;StringCommand.c: 422: LCDdisplayFeedback("ERR: Duty < 0");
 15199  011236  0E39               	movlw	low STR_169
 15200  011238  0101               	movlb	1	; () banked
 15201  01123A  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15202  01123C  0EFC               	movlw	high STR_169
 15203  01123E  0101               	movlb	1	; () banked
 15204  011240  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15205  011242  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15206                           
 15207                           ;StringCommand.c: 423: }
 15208  011246  EF7C  F093         	goto	l685
 15209  01124A                     l15357:
 15210                           
 15211                           ;StringCommand.c: 424: else
 15212                           ;StringCommand.c: 425: {
 15213                           ;StringCommand.c: 426: SetDuty(duty);
 15214  01124A  0106               	movlb	6	; () banked
 15215  01124C  51DC               	movf	Command@duty& (0+255),w,b
 15216  01124E  EC22  F0B8         	call	_SetDuty
 15217                           
 15218                           ;StringCommand.c: 427: sprintf(buf, "Dutycycle set to %d\r\n", duty);
 15219  011252  0E00               	movlw	low Command@buf
 15220  011254  0101               	movlb	1	; () banked
 15221  011256  6F8A               	movwf	sprintf@sp& (0+255),b
 15222  011258  0E06               	movlw	high Command@buf
 15223  01125A  0101               	movlb	1	; () banked
 15224  01125C  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 15225  01125E  0ED1               	movlw	low STR_170
 15226  011260  0101               	movlb	1	; () banked
 15227  011262  6F8C               	movwf	sprintf@f& (0+255),b
 15228  011264  0EF6               	movlw	high STR_170
 15229  011266  0101               	movlb	1	; () banked
 15230  011268  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 15231  01126A  C6DC  F18E         	movff	Command@duty,?_sprintf+4
 15232  01126E  C6DD  F18F         	movff	Command@duty+1,?_sprintf+5
 15233  011272  EC87  F093         	call	_sprintf	;wreg free
 15234                           
 15235                           ;StringCommand.c: 428: UARTstring(buf);
 15236  011276  0E00               	movlw	low Command@buf
 15237  011278  0101               	movlb	1	; () banked
 15238  01127A  6F7F               	movwf	UARTstring@data& (0+255),b
 15239  01127C  0E06               	movlw	high Command@buf
 15240  01127E  0101               	movlb	1	; () banked
 15241  011280  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15242  011282  EC24  F0BA         	call	_UARTstring	;wreg free
 15243                           
 15244                           ;StringCommand.c: 429: sprintf(buf, "Duty set to %d", duty);
 15245  011286  0E00               	movlw	low Command@buf
 15246  011288  0101               	movlb	1	; () banked
 15247  01128A  6F8A               	movwf	sprintf@sp& (0+255),b
 15248  01128C  0E06               	movlw	high Command@buf
 15249  01128E  0101               	movlb	1	; () banked
 15250  011290  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 15251  011292  0E86               	movlw	low STR_171
 15252  011294  0101               	movlb	1	; () banked
 15253  011296  6F8C               	movwf	sprintf@f& (0+255),b
 15254  011298  0EFB               	movlw	high STR_171
 15255  01129A  0101               	movlb	1	; () banked
 15256  01129C  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 15257  01129E  C6DC  F18E         	movff	Command@duty,?_sprintf+4
 15258  0112A2  C6DD  F18F         	movff	Command@duty+1,?_sprintf+5
 15259  0112A6  EC87  F093         	call	_sprintf	;wreg free
 15260                           
 15261                           ;StringCommand.c: 430: LCDdisplayFeedback(buf);
 15262  0112AA  0E00               	movlw	low Command@buf
 15263  0112AC  0101               	movlb	1	; () banked
 15264  0112AE  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15265  0112B0  0E06               	movlw	high Command@buf
 15266  0112B2  0101               	movlb	1	; () banked
 15267  0112B4  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15268  0112B6  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15269                           
 15270                           ;StringCommand.c: 431: }
 15271                           ;StringCommand.c: 432: }
 15272  0112BA  EF7C  F093         	goto	l685
 15273  0112BE                     l15367:
 15274                           
 15275                           ;StringCommand.c: 433: else
 15276                           ;StringCommand.c: 434: {
 15277                           ;StringCommand.c: 435: UARTstring("redled what??? Do you mean Red Led Brightness???");
 15278  0112BE  0EF3               	movlw	low STR_172
 15279  0112C0  0101               	movlb	1	; () banked
 15280  0112C2  6F7F               	movwf	UARTstring@data& (0+255),b
 15281  0112C4  0EF0               	movlw	high STR_172
 15282  0112C6  0101               	movlb	1	; () banked
 15283  0112C8  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15284  0112CA  EC24  F0BA         	call	_UARTstring	;wreg free
 15285                           
 15286                           ;StringCommand.c: 436: LCDdisplayFeedback("Red LED What???");
 15287  0112CE  0E39               	movlw	low STR_173
 15288  0112D0  0101               	movlb	1	; () banked
 15289  0112D2  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15290  0112D4  0EFA               	movlw	high STR_173
 15291  0112D6  0101               	movlb	1	; () banked
 15292  0112D8  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15293  0112DA  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15294                           
 15295                           ;StringCommand.c: 437: }
 15296                           ;StringCommand.c: 438: }
 15297  0112DE  EF7C  F093         	goto	l685
 15298  0112E2                     l15369:
 15299                           
 15300                           ;StringCommand.c: 439: else
 15301                           ;StringCommand.c: 440: {
 15302                           ;StringCommand.c: 441: UARTstring("Red LED PWM Help Menu\r\n\n");
 15303  0112E2  0EE3               	movlw	low STR_174
 15304  0112E4  0101               	movlb	1	; () banked
 15305  0112E6  6F7F               	movwf	UARTstring@data& (0+255),b
 15306  0112E8  0EF5               	movlw	high STR_174
 15307  0112EA  0101               	movlb	1	; () banked
 15308  0112EC  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15309  0112EE  EC24  F0BA         	call	_UARTstring	;wreg free
 15310                           
 15311                           ;StringCommand.c: 442: UARTstring("To set te PWM brightness enter 'Red LED brightness = 
      +                          dutycycle'\r\n");
 15312  0112F2  0E2F               	movlw	low STR_175
 15313  0112F4  0101               	movlb	1	; () banked
 15314  0112F6  6F7F               	movwf	UARTstring@data& (0+255),b
 15315  0112F8  0EEF               	movlw	high STR_175
 15316  0112FA  0101               	movlb	1	; () banked
 15317  0112FC  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15318  0112FE  EC24  F0BA         	call	_UARTstring	;wreg free
 15319                           
 15320                           ;StringCommand.c: 443: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 15321  011302  0E0A               	movlw	low STR_176
 15322  011304  0101               	movlb	1	; () banked
 15323  011306  6F7F               	movwf	UARTstring@data& (0+255),b
 15324  011308  0EF2               	movlw	high STR_176
 15325  01130A  0101               	movlb	1	; () banked
 15326  01130C  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15327  01130E  EC24  F0BA         	call	_UARTstring	;wreg free
 15328                           
 15329                           ;StringCommand.c: 444: LCD_Scroll("Red LED Contrast");
 15330  011312  0EC7               	movlw	low STR_177
 15331  011314  0101               	movlb	1	; () banked
 15332  011316  6F83               	movwf	LCD_Scroll@This& (0+255),b
 15333  011318  0EF9               	movlw	high STR_177
 15334  01131A  0101               	movlb	1	; () banked
 15335  01131C  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15336  01131E  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 15337                           
 15338                           ;StringCommand.c: 445: LCD_Scroll("Commands:");
 15339  011322  0E36               	movlw	low STR_178
 15340  011324  0101               	movlb	1	; () banked
 15341  011326  6F83               	movwf	LCD_Scroll@This& (0+255),b
 15342  011328  0EFE               	movlw	high STR_178
 15343  01132A  0101               	movlb	1	; () banked
 15344  01132C  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15345  01132E  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 15346                           
 15347                           ;StringCommand.c: 446: LCD_Scroll("Red LED=#");
 15348  011332  0E22               	movlw	low STR_179
 15349  011334  0101               	movlb	1	; () banked
 15350  011336  6F83               	movwf	LCD_Scroll@This& (0+255),b
 15351  011338  0EFE               	movlw	high STR_179
 15352  01133A  0101               	movlb	1	; () banked
 15353  01133C  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15354  01133E  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 15355                           
 15356                           ;StringCommand.c: 447: }
 15357                           ;StringCommand.c: 448: }
 15358  011342  EF7C  F093         	goto	l685
 15359  011346                     l15377:
 15360                           
 15361                           ;StringCommand.c: 450: else if (StartsWith(Input, "contrast"))
 15362  011346  C1C2  F174         	movff	Command@Input,StartsWith@This
 15363  01134A  C1C3  F175         	movff	Command@Input+1,StartsWith@This+1
 15364  01134E  0EC5               	movlw	low STR_180
 15365  011350  0101               	movlb	1	; () banked
 15366  011352  6F76               	movwf	StartsWith@That& (0+255),b
 15367  011354  0EFE               	movlw	high STR_180
 15368  011356  0101               	movlb	1	; () banked
 15369  011358  6F77               	movwf	(StartsWith@That+1)& (0+255),b
 15370  01135A  ECAA  F0BB         	call	_StartsWith	;wreg free
 15371  01135E  0900               	iorlw	0
 15372  011360  B4D8               	btfsc	status,2,c
 15373  011362  D10A               	goto	l15423
 15374                           
 15375                           ;StringCommand.c: 451: {
 15376                           ;StringCommand.c: 452: if (!StringContains(Input, "?"))
 15377  011364  C1C2  F174         	movff	Command@Input,StringContains@This
 15378  011368  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 15379  01136C  0E17               	movlw	low (STR_83+14)
 15380  01136E  0101               	movlb	1	; () banked
 15381  011370  6F76               	movwf	StringContains@That& (0+255),b
 15382  011372  0EFA               	movlw	high (STR_83+14)
 15383  011374  0101               	movlb	1	; () banked
 15384  011376  6F77               	movwf	(StringContains@That+1)& (0+255),b
 15385  011378  ECC2  F0BC         	call	_StringContains	;wreg free
 15386  01137C  0900               	iorlw	0
 15387  01137E  A4D8               	btfss	status,2,c
 15388  011380  D0C9               	goto	l15415
 15389                           
 15390                           ;StringCommand.c: 453: {
 15391                           ;StringCommand.c: 454: if (!StringContains(Input, "="))
 15392  011382  C1C2  F174         	movff	Command@Input,StringContains@This
 15393  011386  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 15394  01138A  0E05               	movlw	low (STR_201+11)
 15395  01138C  0101               	movlb	1	; () banked
 15396  01138E  6F76               	movwf	StringContains@That& (0+255),b
 15397  011390  0EFD               	movlw	high (STR_201+11)
 15398  011392  0101               	movlb	1	; () banked
 15399  011394  6F77               	movwf	(StringContains@That+1)& (0+255),b
 15400  011396  ECC2  F0BC         	call	_StringContains	;wreg free
 15401  01139A  0900               	iorlw	0
 15402  01139C  A4D8               	btfss	status,2,c
 15403  01139E  D007               	goto	l15385
 15404                           
 15405                           ;StringCommand.c: 455: {
 15406                           ;StringCommand.c: 456: StringAddEqual(Input);
 15407  0113A0  C1C2  F183         	movff	Command@Input,StringAddEqual@Input
 15408  0113A4  C1C3  F184         	movff	Command@Input+1,StringAddEqual@Input+1
 15409  0113A8  EC14  F0A9         	call	_StringAddEqual	;wreg free
 15410  0113AC  D000               	goto	l15385
 15411  0113AE                     l15385:
 15412                           
 15413                           ;StringCommand.c: 457: }
 15414                           ;StringCommand.c: 458: tempLONG = GetEnteredNumber(Input);
 15415  0113AE  C1C2  F180         	movff	Command@Input,GetEnteredNumber@This
 15416  0113B2  C1C3  F181         	movff	Command@Input+1,GetEnteredNumber@This+1
 15417  0113B6  EC29  F0A8         	call	_GetEnteredNumber	;wreg free
 15418  0113BA  C180  F6DE         	movff	?_GetEnteredNumber,Command@tempLONG
 15419  0113BE  C181  F6DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 15420  0113C2  C182  F6E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 15421  0113C6  C183  F6E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 15422                           
 15423                           ;StringCommand.c: 459: if(tempLONG < 1000 && tempLONG >= 0 )
 15424  0113CA  0106               	movlb	6	; () banked
 15425  0113CC  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 15426  0113CE  D00D               	goto	l15389
 15427  0113D0  0106               	movlb	6	; () banked
 15428  0113D2  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 15429  0113D4  0106               	movlb	6	; () banked
 15430  0113D6  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 15431  0113D8  E110               	bnz	l15393
 15432  0113DA  0EE8               	movlw	232
 15433  0113DC  0106               	movlb	6	; () banked
 15434  0113DE  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 15435  0113E0  0E03               	movlw	3
 15436  0113E2  0106               	movlb	6	; () banked
 15437  0113E4  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 15438  0113E6  B0D8               	btfsc	status,0,c
 15439  0113E8  D008               	goto	l15393
 15440  0113EA                     l15389:
 15441                           
 15442                           ; BSR set to: 6
 15443  0113EA  0106               	movlb	6	; () banked
 15444  0113EC  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 15445  0113EE  D005               	goto	l15393
 15446                           
 15447                           ; BSR set to: 6
 15448                           ;StringCommand.c: 460: {
 15449                           ;StringCommand.c: 461: contrast = (int)tempLONG;
 15450  0113F0  C6DE  F6D8         	movff	Command@tempLONG,Command@contrast
 15451  0113F4  C6DF  F6D9         	movff	Command@tempLONG+1,Command@contrast+1
 15452  0113F8  D000               	goto	l15393
 15453  0113FA                     l15393:
 15454                           
 15455                           ; BSR set to: 6
 15456                           ;StringCommand.c: 462: }
 15457                           ;StringCommand.c: 463: if (tempLONG == 2147483645L)
 15458  0113FA  0EFD               	movlw	253
 15459  0113FC  0106               	movlb	6	; () banked
 15460  0113FE  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 15461  011400  E11D               	bnz	l15397
 15462  011402  0106               	movlb	6	; () banked
 15463  011404  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 15464  011406  E11A               	bnz	l15397
 15465  011408  0106               	movlb	6	; () banked
 15466  01140A  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 15467  01140C  E117               	bnz	l15397
 15468  01140E  0E7F               	movlw	127
 15469  011410  0106               	movlb	6	; () banked
 15470  011412  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 15471  011414  A4D8               	btfss	status,2,c
 15472  011416  D012               	goto	l15397
 15473                           
 15474                           ; BSR set to: 6
 15475                           ;StringCommand.c: 464: {
 15476                           ;StringCommand.c: 465: UARTstring("Error: No number entered\r\n");
 15477  011418  0E5F               	movlw	low STR_164
 15478  01141A  0101               	movlb	1	; () banked
 15479  01141C  6F7F               	movwf	UARTstring@data& (0+255),b
 15480  01141E  0EF5               	movlw	high STR_164
 15481  011420  0101               	movlb	1	; () banked
 15482  011422  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15483  011424  EC24  F0BA         	call	_UARTstring	;wreg free
 15484                           
 15485                           ;StringCommand.c: 466: LCDdisplayFeedback("ERR: No number");
 15486  011428  0EFE               	movlw	low STR_184
 15487  01142A  0101               	movlb	1	; () banked
 15488  01142C  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15489  01142E  0EFB               	movlw	high STR_184
 15490  011430  0101               	movlb	1	; () banked
 15491  011432  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15492  011434  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15493                           
 15494                           ;StringCommand.c: 467: }
 15495  011438  EF7C  F093         	goto	l685
 15496  01143C                     l15397:
 15497                           
 15498                           ;StringCommand.c: 468: else if (contrast > 100)
 15499  01143C  0106               	movlb	6	; () banked
 15500  01143E  BFD9               	btfsc	(Command@contrast+1)& (0+255),7,b
 15501  011440  D01A               	goto	l15401
 15502  011442  0106               	movlb	6	; () banked
 15503  011444  51D9               	movf	(Command@contrast+1)& (0+255),w,b
 15504  011446  E105               	bnz	u19760
 15505  011448  0E65               	movlw	101
 15506  01144A  0106               	movlb	6	; () banked
 15507  01144C  5DD8               	subwf	Command@contrast& (0+255),w,b
 15508  01144E  A0D8               	btfss	status,0,c
 15509  011450  D012               	goto	l15401
 15510  011452                     u19760:
 15511                           
 15512                           ; BSR set to: 6
 15513                           ;StringCommand.c: 469: {
 15514                           ;StringCommand.c: 470: UARTstring("Invalid Contrast Duty cycle: Greater than 100\r\n");
 15515  011452  0E24               	movlw	low STR_185
 15516  011454  0101               	movlb	1	; () banked
 15517  011456  6F7F               	movwf	UARTstring@data& (0+255),b
 15518  011458  0EF1               	movlw	high STR_185
 15519  01145A  0101               	movlb	1	; () banked
 15520  01145C  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15521  01145E  EC24  F0BA         	call	_UARTstring	;wreg free
 15522                           
 15523                           ;StringCommand.c: 471: LCDdisplayFeedback("ERR: CNST > 100");
 15524  011462  0EE9               	movlw	low STR_186
 15525  011464  0101               	movlb	1	; () banked
 15526  011466  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15527  011468  0EF9               	movlw	high STR_186
 15528  01146A  0101               	movlb	1	; () banked
 15529  01146C  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15530  01146E  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15531                           
 15532                           ;StringCommand.c: 472: }
 15533  011472  EF7C  F093         	goto	l685
 15534  011476                     l15401:
 15535                           
 15536                           ;StringCommand.c: 473: else if (contrast < 0)
 15537  011476  0106               	movlb	6	; () banked
 15538  011478  AFD9               	btfss	(Command@contrast+1)& (0+255),7,b
 15539  01147A  D012               	goto	l15405
 15540                           
 15541                           ; BSR set to: 6
 15542                           ;StringCommand.c: 474: {
 15543                           ;StringCommand.c: 475: UARTstring("Invalid Contrast Duty Cycle: Less than 0\r\n");
 15544  01147C  0EDF               	movlw	low STR_187
 15545  01147E  0101               	movlb	1	; () banked
 15546  011480  6F7F               	movwf	UARTstring@data& (0+255),b
 15547  011482  0EF1               	movlw	high STR_187
 15548  011484  0101               	movlb	1	; () banked
 15549  011486  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15550  011488  EC24  F0BA         	call	_UARTstring	;wreg free
 15551                           
 15552                           ;StringCommand.c: 476: LCDdisplayFeedback("ERR: CNST < 0");
 15553  01148C  0E2B               	movlw	low STR_188
 15554  01148E  0101               	movlb	1	; () banked
 15555  011490  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15556  011492  0EFC               	movlw	high STR_188
 15557  011494  0101               	movlb	1	; () banked
 15558  011496  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15559  011498  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15560                           
 15561                           ;StringCommand.c: 477: }
 15562  01149C  EF7C  F093         	goto	l685
 15563  0114A0                     l15405:
 15564                           
 15565                           ;StringCommand.c: 478: else
 15566                           ;StringCommand.c: 479: {
 15567                           ;StringCommand.c: 480: SetContrast(contrast);
 15568  0114A0  0106               	movlb	6	; () banked
 15569  0114A2  51D8               	movf	Command@contrast& (0+255),w,b
 15570  0114A4  ECE0  F0B5         	call	_SetContrast
 15571                           
 15572                           ;StringCommand.c: 481: sprintf(buf, "Contrast Duty Cycle set to %d\r\n", contrast);
 15573  0114A8  0E00               	movlw	low Command@buf
 15574  0114AA  0101               	movlb	1	; () banked
 15575  0114AC  6F8A               	movwf	sprintf@sp& (0+255),b
 15576  0114AE  0E06               	movlw	high Command@buf
 15577  0114B0  0101               	movlb	1	; () banked
 15578  0114B2  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 15579  0114B4  0EFF               	movlw	low STR_189
 15580  0114B6  0101               	movlb	1	; () banked
 15581  0114B8  6F8C               	movwf	sprintf@f& (0+255),b
 15582  0114BA  0EF3               	movlw	high STR_189
 15583  0114BC  0101               	movlb	1	; () banked
 15584  0114BE  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 15585  0114C0  C6D8  F18E         	movff	Command@contrast,?_sprintf+4
 15586  0114C4  C6D9  F18F         	movff	Command@contrast+1,?_sprintf+5
 15587  0114C8  EC87  F093         	call	_sprintf	;wreg free
 15588                           
 15589                           ;StringCommand.c: 482: UARTstring(buf);
 15590  0114CC  0E00               	movlw	low Command@buf
 15591  0114CE  0101               	movlb	1	; () banked
 15592  0114D0  6F7F               	movwf	UARTstring@data& (0+255),b
 15593  0114D2  0E06               	movlw	high Command@buf
 15594  0114D4  0101               	movlb	1	; () banked
 15595  0114D6  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15596  0114D8  EC24  F0BA         	call	_UARTstring	;wreg free
 15597                           
 15598                           ;StringCommand.c: 483: sprintf(buf, "CNST set to %d", duty);
 15599  0114DC  0E00               	movlw	low Command@buf
 15600  0114DE  0101               	movlb	1	; () banked
 15601  0114E0  6F8A               	movwf	sprintf@sp& (0+255),b
 15602  0114E2  0E06               	movlw	high Command@buf
 15603  0114E4  0101               	movlb	1	; () banked
 15604  0114E6  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 15605  0114E8  0E77               	movlw	low STR_190
 15606  0114EA  0101               	movlb	1	; () banked
 15607  0114EC  6F8C               	movwf	sprintf@f& (0+255),b
 15608  0114EE  0EFB               	movlw	high STR_190
 15609  0114F0  0101               	movlb	1	; () banked
 15610  0114F2  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 15611  0114F4  C6DC  F18E         	movff	Command@duty,?_sprintf+4
 15612  0114F8  C6DD  F18F         	movff	Command@duty+1,?_sprintf+5
 15613  0114FC  EC87  F093         	call	_sprintf	;wreg free
 15614                           
 15615                           ;StringCommand.c: 484: LCDdisplayFeedback(buf);
 15616  011500  0E00               	movlw	low Command@buf
 15617  011502  0101               	movlb	1	; () banked
 15618  011504  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15619  011506  0E06               	movlw	high Command@buf
 15620  011508  0101               	movlb	1	; () banked
 15621  01150A  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15622  01150C  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15623                           
 15624                           ;StringCommand.c: 485: }
 15625                           ;StringCommand.c: 486: }
 15626  011510  EF7C  F093         	goto	l685
 15627  011514                     l15415:
 15628                           
 15629                           ;StringCommand.c: 487: else
 15630                           ;StringCommand.c: 488: {
 15631                           ;StringCommand.c: 489: UARTstring("Contrast PWM Help Menu\r\n\n");
 15632  011514  0EAF               	movlw	low STR_191
 15633  011516  0101               	movlb	1	; () banked
 15634  011518  6F7F               	movwf	UARTstring@data& (0+255),b
 15635  01151A  0EF5               	movlw	high STR_191
 15636  01151C  0101               	movlb	1	; () banked
 15637  01151E  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15638  011520  EC24  F0BA         	call	_UARTstring	;wreg free
 15639                           
 15640                           ;StringCommand.c: 490: UARTstring("To set Contrast PWM brightness enter 'Contrast = duty
      +                          cycle'\r\n");
 15641  011524  0E71               	movlw	low STR_192
 15642  011526  0101               	movlb	1	; () banked
 15643  011528  6F7F               	movwf	UARTstring@data& (0+255),b
 15644  01152A  0EEF               	movlw	high STR_192
 15645  01152C  0101               	movlb	1	; () banked
 15646  01152E  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15647  011530  EC24  F0BA         	call	_UARTstring	;wreg free
 15648                           
 15649                           ;StringCommand.c: 491: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 15650  011534  0E0A               	movlw	low STR_176
 15651  011536  0101               	movlb	1	; () banked
 15652  011538  6F7F               	movwf	UARTstring@data& (0+255),b
 15653  01153A  0EF2               	movlw	high STR_176
 15654  01153C  0101               	movlb	1	; () banked
 15655  01153E  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15656  011540  EC24  F0BA         	call	_UARTstring	;wreg free
 15657                           
 15658                           ;StringCommand.c: 492: LCD_Scroll("LCD Contrast");
 15659  011544  0E48               	movlw	low STR_194
 15660  011546  0101               	movlb	1	; () banked
 15661  011548  6F83               	movwf	LCD_Scroll@This& (0+255),b
 15662  01154A  0EFD               	movlw	high STR_194
 15663  01154C  0101               	movlb	1	; () banked
 15664  01154E  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15665  011550  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 15666                           
 15667                           ;StringCommand.c: 493: LCD_Scroll("Commands:");
 15668  011554  0E36               	movlw	low STR_178
 15669  011556  0101               	movlb	1	; () banked
 15670  011558  6F83               	movwf	LCD_Scroll@This& (0+255),b
 15671  01155A  0EFE               	movlw	high STR_178
 15672  01155C  0101               	movlb	1	; () banked
 15673  01155E  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15674  011560  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 15675                           
 15676                           ;StringCommand.c: 494: LCD_Scroll("Contrast#");
 15677  011564  0E2C               	movlw	low STR_196
 15678  011566  0101               	movlb	1	; () banked
 15679  011568  6F83               	movwf	LCD_Scroll@This& (0+255),b
 15680  01156A  0EFE               	movlw	high STR_196
 15681  01156C  0101               	movlb	1	; () banked
 15682  01156E  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15683  011570  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 15684                           
 15685                           ;StringCommand.c: 495: }
 15686                           ;StringCommand.c: 496: }
 15687  011574  EF7C  F093         	goto	l685
 15688  011578                     l15423:
 15689                           
 15690                           ;StringCommand.c: 498: else if (StartsWith(Input, "adc"))
 15691  011578  C1C2  F174         	movff	Command@Input,StartsWith@This
 15692  01157C  C1C3  F175         	movff	Command@Input+1,StartsWith@This+1
 15693  011580  0EE0               	movlw	low STR_197
 15694  011582  0101               	movlb	1	; () banked
 15695  011584  6F76               	movwf	StartsWith@That& (0+255),b
 15696  011586  0EFF               	movlw	high STR_197
 15697  011588  0101               	movlb	1	; () banked
 15698  01158A  6F77               	movwf	(StartsWith@That+1)& (0+255),b
 15699  01158C  ECAA  F0BB         	call	_StartsWith	;wreg free
 15700  011590  0900               	iorlw	0
 15701  011592  B4D8               	btfsc	status,2,c
 15702  011594  D16C               	goto	l15483
 15703                           
 15704                           ;StringCommand.c: 499: {
 15705                           ;StringCommand.c: 500: if (!StringContains(Input, "?"))
 15706  011596  C1C2  F174         	movff	Command@Input,StringContains@This
 15707  01159A  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 15708  01159E  0E17               	movlw	low (STR_83+14)
 15709  0115A0  0101               	movlb	1	; () banked
 15710  0115A2  6F76               	movwf	StringContains@That& (0+255),b
 15711  0115A4  0EFA               	movlw	high (STR_83+14)
 15712  0115A6  0101               	movlb	1	; () banked
 15713  0115A8  6F77               	movwf	(StringContains@That+1)& (0+255),b
 15714  0115AA  ECC2  F0BC         	call	_StringContains	;wreg free
 15715  0115AE  0900               	iorlw	0
 15716  0115B0  A4D8               	btfss	status,2,c
 15717  0115B2  D11B               	goto	l15475
 15718                           
 15719                           ;StringCommand.c: 501: {
 15720                           ;StringCommand.c: 502: if (!StringContains(Input, "="))
 15721  0115B4  C1C2  F174         	movff	Command@Input,StringContains@This
 15722  0115B8  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 15723  0115BC  0E05               	movlw	low (STR_201+11)
 15724  0115BE  0101               	movlb	1	; () banked
 15725  0115C0  6F76               	movwf	StringContains@That& (0+255),b
 15726  0115C2  0EFD               	movlw	high (STR_201+11)
 15727  0115C4  0101               	movlb	1	; () banked
 15728  0115C6  6F77               	movwf	(StringContains@That+1)& (0+255),b
 15729  0115C8  ECC2  F0BC         	call	_StringContains	;wreg free
 15730  0115CC  0900               	iorlw	0
 15731  0115CE  A4D8               	btfss	status,2,c
 15732  0115D0  D007               	goto	l15431
 15733                           
 15734                           ;StringCommand.c: 503: {
 15735                           ;StringCommand.c: 504: StringAddEqual(Input);
 15736  0115D2  C1C2  F183         	movff	Command@Input,StringAddEqual@Input
 15737  0115D6  C1C3  F184         	movff	Command@Input+1,StringAddEqual@Input+1
 15738  0115DA  EC14  F0A9         	call	_StringAddEqual	;wreg free
 15739  0115DE  D000               	goto	l15431
 15740  0115E0                     l15431:
 15741                           
 15742                           ;StringCommand.c: 505: }
 15743                           ;StringCommand.c: 506: tempLONG = GetEnteredNumber(Input);
 15744  0115E0  C1C2  F180         	movff	Command@Input,GetEnteredNumber@This
 15745  0115E4  C1C3  F181         	movff	Command@Input+1,GetEnteredNumber@This+1
 15746  0115E8  EC29  F0A8         	call	_GetEnteredNumber	;wreg free
 15747  0115EC  C180  F6DE         	movff	?_GetEnteredNumber,Command@tempLONG
 15748  0115F0  C181  F6DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 15749  0115F4  C182  F6E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 15750  0115F8  C183  F6E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 15751                           
 15752                           ;StringCommand.c: 507: if(tempLONG < 1000 && tempLONG >= 0 )
 15753  0115FC  0106               	movlb	6	; () banked
 15754  0115FE  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 15755  011600  D00D               	goto	l15435
 15756  011602  0106               	movlb	6	; () banked
 15757  011604  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 15758  011606  0106               	movlb	6	; () banked
 15759  011608  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 15760  01160A  E110               	bnz	l15439
 15761  01160C  0EE8               	movlw	232
 15762  01160E  0106               	movlb	6	; () banked
 15763  011610  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 15764  011612  0E03               	movlw	3
 15765  011614  0106               	movlb	6	; () banked
 15766  011616  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 15767  011618  B0D8               	btfsc	status,0,c
 15768  01161A  D008               	goto	l15439
 15769  01161C                     l15435:
 15770                           
 15771                           ; BSR set to: 6
 15772  01161C  0106               	movlb	6	; () banked
 15773  01161E  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 15774  011620  D005               	goto	l15439
 15775                           
 15776                           ; BSR set to: 6
 15777                           ;StringCommand.c: 508: {
 15778                           ;StringCommand.c: 509: channel = (int)tempLONG;
 15779  011622  C6DE  F6DA         	movff	Command@tempLONG,Command@channel
 15780  011626  C6DF  F6DB         	movff	Command@tempLONG+1,Command@channel+1
 15781  01162A  D000               	goto	l15439
 15782  01162C                     l15439:
 15783                           
 15784                           ; BSR set to: 6
 15785                           ;StringCommand.c: 510: }
 15786                           ;StringCommand.c: 511: if (tempLONG == 2147483645L) {
 15787  01162C  0EFD               	movlw	253
 15788  01162E  0106               	movlb	6	; () banked
 15789  011630  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 15790  011632  E11D               	bnz	l15443
 15791  011634  0106               	movlb	6	; () banked
 15792  011636  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 15793  011638  E11A               	bnz	l15443
 15794  01163A  0106               	movlb	6	; () banked
 15795  01163C  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 15796  01163E  E117               	bnz	l15443
 15797  011640  0E7F               	movlw	127
 15798  011642  0106               	movlb	6	; () banked
 15799  011644  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 15800  011646  A4D8               	btfss	status,2,c
 15801  011648  D012               	goto	l15443
 15802                           
 15803                           ; BSR set to: 6
 15804                           ;StringCommand.c: 512: UARTstring("Error: only use one equal sign\r\n");
 15805  01164A  0EBE               	movlw	low STR_200
 15806  01164C  0101               	movlb	1	; () banked
 15807  01164E  6F7F               	movwf	UARTstring@data& (0+255),b
 15808  011650  0EF3               	movlw	high STR_200
 15809  011652  0101               	movlb	1	; () banked
 15810  011654  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15811  011656  EC24  F0BA         	call	_UARTstring	;wreg free
 15812                           
 15813                           ;StringCommand.c: 513: LCDdisplayFeedback("ERR: Use 1 =");
 15814  01165A  0EFA               	movlw	low STR_201
 15815  01165C  0101               	movlb	1	; () banked
 15816  01165E  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15817  011660  0EFC               	movlw	high STR_201
 15818  011662  0101               	movlb	1	; () banked
 15819  011664  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15820  011666  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15821                           
 15822                           ;StringCommand.c: 514: }
 15823  01166A  EF7C  F093         	goto	l685
 15824  01166E                     l15443:
 15825                           
 15826                           ;StringCommand.c: 515: else if (channel < 0)
 15827  01166E  0106               	movlb	6	; () banked
 15828  011670  AFDB               	btfss	(Command@channel+1)& (0+255),7,b
 15829  011672  D012               	goto	l15447
 15830                           
 15831                           ; BSR set to: 6
 15832                           ;StringCommand.c: 516: {
 15833                           ;StringCommand.c: 517: UARTstring("Error: No negative channels\r\n");
 15834  011674  0E5E               	movlw	low STR_202
 15835  011676  0101               	movlb	1	; () banked
 15836  011678  6F7F               	movwf	UARTstring@data& (0+255),b
 15837  01167A  0EF4               	movlw	high STR_202
 15838  01167C  0101               	movlb	1	; () banked
 15839  01167E  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15840  011680  EC24  F0BA         	call	_UARTstring	;wreg free
 15841                           
 15842                           ;StringCommand.c: 518: LCDdisplayFeedback("ERR: Use + Chnl");
 15843  011684  0EF9               	movlw	low STR_203
 15844  011686  0101               	movlb	1	; () banked
 15845  011688  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15846  01168A  0EFA               	movlw	high STR_203
 15847  01168C  0101               	movlb	1	; () banked
 15848  01168E  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15849  011690  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15850                           
 15851                           ;StringCommand.c: 519: }
 15852  011694  EF7C  F093         	goto	l685
 15853  011698                     l15447:
 15854                           
 15855                           ;StringCommand.c: 520: else if (channel >= 32000)
 15856  011698  0106               	movlb	6	; () banked
 15857  01169A  BFDB               	btfsc	(Command@channel+1)& (0+255),7,b
 15858  01169C  D017               	goto	l15451
 15859  01169E  0E7D               	movlw	125
 15860  0116A0  0106               	movlb	6	; () banked
 15861  0116A2  5DDB               	subwf	(Command@channel+1)& (0+255),w,b
 15862  0116A4  A0D8               	btfss	status,0,c
 15863  0116A6  D012               	goto	l15451
 15864                           
 15865                           ; BSR set to: 6
 15866                           ;StringCommand.c: 521: {
 15867                           ;StringCommand.c: 522: UARTstring("Error: in parsing command\r\n");
 15868  0116A8  0EEF               	movlw	low STR_204
 15869  0116AA  0101               	movlb	1	; () banked
 15870  0116AC  6F7F               	movwf	UARTstring@data& (0+255),b
 15871  0116AE  0EF4               	movlw	high STR_204
 15872  0116B0  0101               	movlb	1	; () banked
 15873  0116B2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15874  0116B4  EC24  F0BA         	call	_UARTstring	;wreg free
 15875                           
 15876                           ;StringCommand.c: 523: LCDdisplayFeedback("ERR: Cant parse");
 15877  0116B8  0EB9               	movlw	low STR_205
 15878  0116BA  0101               	movlb	1	; () banked
 15879  0116BC  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15880  0116BE  0EFA               	movlw	high STR_205
 15881  0116C0  0101               	movlb	1	; () banked
 15882  0116C2  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15883  0116C4  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15884                           
 15885                           ;StringCommand.c: 524: }
 15886  0116C8  EF7C  F093         	goto	l685
 15887  0116CC                     l15451:
 15888                           
 15889                           ;StringCommand.c: 525: else if (channel != 0)
 15890  0116CC  0106               	movlb	6	; () banked
 15891  0116CE  51DA               	movf	Command@channel& (0+255),w,b
 15892  0116D0  0106               	movlb	6	; () banked
 15893  0116D2  11DB               	iorwf	(Command@channel+1)& (0+255),w,b
 15894  0116D4  B4D8               	btfsc	status,2,c
 15895  0116D6  D036               	goto	l15459
 15896                           
 15897                           ; BSR set to: 6
 15898                           ;StringCommand.c: 526: {
 15899                           ;StringCommand.c: 527: sprintf(buf, "Channel %d is not configured", channel);
 15900  0116D8  0E00               	movlw	low Command@buf
 15901  0116DA  0101               	movlb	1	; () banked
 15902  0116DC  6F8A               	movwf	sprintf@sp& (0+255),b
 15903  0116DE  0E06               	movlw	high Command@buf
 15904  0116E0  0101               	movlb	1	; () banked
 15905  0116E2  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 15906  0116E4  0E99               	movlw	low STR_206
 15907  0116E6  0101               	movlb	1	; () banked
 15908  0116E8  6F8C               	movwf	sprintf@f& (0+255),b
 15909  0116EA  0EF4               	movlw	high STR_206
 15910  0116EC  0101               	movlb	1	; () banked
 15911  0116EE  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 15912  0116F0  C6DA  F18E         	movff	Command@channel,?_sprintf+4
 15913  0116F4  C6DB  F18F         	movff	Command@channel+1,?_sprintf+5
 15914  0116F8  EC87  F093         	call	_sprintf	;wreg free
 15915                           
 15916                           ;StringCommand.c: 528: UARTstring(buf);
 15917  0116FC  0E00               	movlw	low Command@buf
 15918  0116FE  0101               	movlb	1	; () banked
 15919  011700  6F7F               	movwf	UARTstring@data& (0+255),b
 15920  011702  0E06               	movlw	high Command@buf
 15921  011704  0101               	movlb	1	; () banked
 15922  011706  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 15923  011708  EC24  F0BA         	call	_UARTstring	;wreg free
 15924                           
 15925                           ;StringCommand.c: 529: sprintf(buf, "Chnl set to %d\r\n", duty);
 15926  01170C  0E00               	movlw	low Command@buf
 15927  01170E  0101               	movlb	1	; () banked
 15928  011710  6F8A               	movwf	sprintf@sp& (0+255),b
 15929  011712  0E06               	movlw	high Command@buf
 15930  011714  0101               	movlb	1	; () banked
 15931  011716  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 15932  011718  0E0C               	movlw	low STR_207
 15933  01171A  0101               	movlb	1	; () banked
 15934  01171C  6F8C               	movwf	sprintf@f& (0+255),b
 15935  01171E  0EF9               	movlw	high STR_207
 15936  011720  0101               	movlb	1	; () banked
 15937  011722  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 15938  011724  C6DC  F18E         	movff	Command@duty,?_sprintf+4
 15939  011728  C6DD  F18F         	movff	Command@duty+1,?_sprintf+5
 15940  01172C  EC87  F093         	call	_sprintf	;wreg free
 15941                           
 15942                           ;StringCommand.c: 530: LCDdisplayFeedback(buf);
 15943  011730  0E00               	movlw	low Command@buf
 15944  011732  0101               	movlb	1	; () banked
 15945  011734  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15946  011736  0E06               	movlw	high Command@buf
 15947  011738  0101               	movlb	1	; () banked
 15948  01173A  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15949  01173C  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 15950                           
 15951                           ;StringCommand.c: 531: }
 15952  011740  EF7C  F093         	goto	l685
 15953  011744                     l15459:
 15954                           
 15955                           ;StringCommand.c: 532: else
 15956                           ;StringCommand.c: 533: {
 15957                           ;StringCommand.c: 534: LATE |= 0b00000010;
 15958  011744  828D               	bsf	3981,1,c	;volatile
 15959                           
 15960                           ;StringCommand.c: 535: delayUS(1000);
 15961  011746  0EE8               	movlw	232
 15962  011748  0101               	movlb	1	; () banked
 15963  01174A  6F74               	movwf	delayUS@US& (0+255),b
 15964  01174C  0E03               	movlw	3
 15965  01174E  6F75               	movwf	(delayUS@US+1)& (0+255),b
 15966  011750  0E00               	movlw	0
 15967  011752  6F76               	movwf	(delayUS@US+2)& (0+255),b
 15968  011754  0E00               	movlw	0
 15969  011756  6F77               	movwf	(delayUS@US+3)& (0+255),b
 15970  011758  ECC6  F0BF         	call	_delayUS	;wreg free
 15971                           
 15972                           ;StringCommand.c: 536: ADC_Value = InternalADC_Read(channel);
 15973  01175C  0106               	movlb	6	; () banked
 15974  01175E  51DA               	movf	Command@channel& (0+255),w,b
 15975  011760  ECAB  F002         	call	_InternalADC_Read
 15976  011764  C183  F6C8         	movff	?_InternalADC_Read,Command@ADC_Value
 15977  011768  C184  F6C9         	movff	?_InternalADC_Read+1,Command@ADC_Value+1
 15978                           
 15979                           ;StringCommand.c: 537: sprintf(buf, "ADC channel %d = %d", channel, ADC_Value);
 15980  01176C  0E00               	movlw	low Command@buf
 15981  01176E  0101               	movlb	1	; () banked
 15982  011770  6F8A               	movwf	sprintf@sp& (0+255),b
 15983  011772  0E06               	movlw	high Command@buf
 15984  011774  0101               	movlb	1	; () banked
 15985  011776  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 15986  011778  0E51               	movlw	low STR_208
 15987  01177A  0101               	movlb	1	; () banked
 15988  01177C  6F8C               	movwf	sprintf@f& (0+255),b
 15989  01177E  0EF7               	movlw	high STR_208
 15990  011780  0101               	movlb	1	; () banked
 15991  011782  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 15992  011784  C6DA  F18E         	movff	Command@channel,?_sprintf+4
 15993  011788  C6DB  F18F         	movff	Command@channel+1,?_sprintf+5
 15994  01178C  C6C8  F190         	movff	Command@ADC_Value,?_sprintf+6
 15995  011790  C6C9  F191         	movff	Command@ADC_Value+1,?_sprintf+7
 15996  011794  EC87  F093         	call	_sprintf	;wreg free
 15997                           
 15998                           ;StringCommand.c: 538: LATE &= ~0b00000010;
 15999  011798  928D               	bcf	3981,1,c	;volatile
 16000                           
 16001                           ;StringCommand.c: 539: UARTstring(buf);
 16002  01179A  0E00               	movlw	low Command@buf
 16003  01179C  0101               	movlb	1	; () banked
 16004  01179E  6F7F               	movwf	UARTstring@data& (0+255),b
 16005  0117A0  0E06               	movlw	high Command@buf
 16006  0117A2  0101               	movlb	1	; () banked
 16007  0117A4  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16008  0117A6  EC24  F0BA         	call	_UARTstring	;wreg free
 16009                           
 16010                           ;StringCommand.c: 540: sprintf(buf, "Chnl %d = %d", channel, ADC_Value);
 16011  0117AA  0E00               	movlw	low Command@buf
 16012  0117AC  0101               	movlb	1	; () banked
 16013  0117AE  6F8A               	movwf	sprintf@sp& (0+255),b
 16014  0117B0  0E06               	movlw	high Command@buf
 16015  0117B2  0101               	movlb	1	; () banked
 16016  0117B4  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 16017  0117B6  0E14               	movlw	low STR_209
 16018  0117B8  0101               	movlb	1	; () banked
 16019  0117BA  6F8C               	movwf	sprintf@f& (0+255),b
 16020  0117BC  0EFD               	movlw	high STR_209
 16021  0117BE  0101               	movlb	1	; () banked
 16022  0117C0  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 16023  0117C2  C6DA  F18E         	movff	Command@channel,?_sprintf+4
 16024  0117C6  C6DB  F18F         	movff	Command@channel+1,?_sprintf+5
 16025  0117CA  C6C8  F190         	movff	Command@ADC_Value,?_sprintf+6
 16026  0117CE  C6C9  F191         	movff	Command@ADC_Value+1,?_sprintf+7
 16027  0117D2  EC87  F093         	call	_sprintf	;wreg free
 16028                           
 16029                           ;StringCommand.c: 541: LCDdisplayFeedback(buf);
 16030  0117D6  0E00               	movlw	low Command@buf
 16031  0117D8  0101               	movlb	1	; () banked
 16032  0117DA  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16033  0117DC  0E06               	movlw	high Command@buf
 16034  0117DE  0101               	movlb	1	; () banked
 16035  0117E0  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16036  0117E2  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 16037                           
 16038                           ;StringCommand.c: 542: }
 16039                           ;StringCommand.c: 543: }
 16040  0117E6  EF7C  F093         	goto	l685
 16041  0117EA                     l15475:
 16042                           
 16043                           ;StringCommand.c: 544: else
 16044                           ;StringCommand.c: 545: {
 16045                           ;StringCommand.c: 546: UARTstring("ADC Help Menu\r\n\n");
 16046  0117EA  0EEA               	movlw	low STR_210
 16047  0117EC  0101               	movlb	1	; () banked
 16048  0117EE  6F7F               	movwf	UARTstring@data& (0+255),b
 16049  0117F0  0EF8               	movlw	high STR_210
 16050  0117F2  0101               	movlb	1	; () banked
 16051  0117F4  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16052  0117F6  EC24  F0BA         	call	_UARTstring	;wreg free
 16053                           
 16054                           ;StringCommand.c: 547: UARTstring("Channels:\r\n");
 16055  0117FA  0E7B               	movlw	low STR_211
 16056  0117FC  0101               	movlb	1	; () banked
 16057  0117FE  6F7F               	movwf	UARTstring@data& (0+255),b
 16058  011800  0EFD               	movlw	high STR_211
 16059  011802  0101               	movlb	1	; () banked
 16060  011804  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16061  011806  EC24  F0BA         	call	_UARTstring	;wreg free
 16062                           
 16063                           ;StringCommand.c: 548: UARTstring("0\r\n\n");
 16064  01180A  0EB3               	movlw	low STR_212
 16065  01180C  0101               	movlb	1	; () banked
 16066  01180E  6F7F               	movwf	UARTstring@data& (0+255),b
 16067  011810  0EFF               	movlw	high STR_212
 16068  011812  0101               	movlb	1	; () banked
 16069  011814  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16070  011816  EC24  F0BA         	call	_UARTstring	;wreg free
 16071                           
 16072                           ;StringCommand.c: 549: UARTstring("To read and adc channel, type the command\r\n ADC"
 16073                           ;StringCommand.c: 550: " followed by 'Channel' \r\n");
 16074  01181A  0E5D               	movlw	low STR_213
 16075  01181C  0101               	movlb	1	; () banked
 16076  01181E  6F7F               	movwf	UARTstring@data& (0+255),b
 16077  011820  0EEE               	movlw	high STR_213
 16078  011822  0101               	movlb	1	; () banked
 16079  011824  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16080  011826  EC24  F0BA         	call	_UARTstring	;wreg free
 16081                           
 16082                           ;StringCommand.c: 551: UARTstring("i.e. ADC 0\r\n");
 16083  01182A  0ED3               	movlw	low STR_214
 16084  01182C  0101               	movlb	1	; () banked
 16085  01182E  6F7F               	movwf	UARTstring@data& (0+255),b
 16086  011830  0EFC               	movlw	high STR_214
 16087  011832  0101               	movlb	1	; () banked
 16088  011834  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16089  011836  EC24  F0BA         	call	_UARTstring	;wreg free
 16090                           
 16091                           ;StringCommand.c: 552: LCD_Scroll("ADC Menu");
 16092  01183A  0ECE               	movlw	low STR_215
 16093  01183C  0101               	movlb	1	; () banked
 16094  01183E  6F83               	movwf	LCD_Scroll@This& (0+255),b
 16095  011840  0EFE               	movlw	high STR_215
 16096  011842  0101               	movlb	1	; () banked
 16097  011844  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16098  011846  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 16099                           
 16100                           ;StringCommand.c: 553: LCD_Scroll("Commands:");
 16101  01184A  0E36               	movlw	low STR_178
 16102  01184C  0101               	movlb	1	; () banked
 16103  01184E  6F83               	movwf	LCD_Scroll@This& (0+255),b
 16104  011850  0EFE               	movlw	high STR_178
 16105  011852  0101               	movlb	1	; () banked
 16106  011854  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16107  011856  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 16108                           
 16109                           ;StringCommand.c: 554: LCD_Scroll("0");
 16110  01185A  0E37               	movlw	low (STR_188+12)
 16111  01185C  0101               	movlb	1	; () banked
 16112  01185E  6F83               	movwf	LCD_Scroll@This& (0+255),b
 16113  011860  0EFC               	movlw	high (STR_188+12)
 16114  011862  0101               	movlb	1	; () banked
 16115  011864  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16116  011866  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 16117                           
 16118                           ;StringCommand.c: 555: }
 16119                           ;StringCommand.c: 556: }
 16120  01186A  EF7C  F093         	goto	l685
 16121  01186E                     l15483:
 16122                           
 16123                           ;StringCommand.c: 558: else if (StartsWith(Input, "rtc"))
 16124  01186E  C1C2  F174         	movff	Command@Input,StartsWith@This
 16125  011872  C1C3  F175         	movff	Command@Input+1,StartsWith@This+1
 16126  011876  0EE4               	movlw	low STR_218
 16127  011878  0101               	movlb	1	; () banked
 16128  01187A  6F76               	movwf	StartsWith@That& (0+255),b
 16129  01187C  0EFF               	movlw	high STR_218
 16130  01187E  0101               	movlb	1	; () banked
 16131  011880  6F77               	movwf	(StartsWith@That+1)& (0+255),b
 16132  011882  ECAA  F0BB         	call	_StartsWith	;wreg free
 16133  011886  0900               	iorlw	0
 16134  011888  B4D8               	btfsc	status,2,c
 16135  01188A  D2B1               	goto	l15579
 16136                           
 16137                           ;StringCommand.c: 559: {
 16138                           ;StringCommand.c: 560: if (!StringContains(Input, "?"))
 16139  01188C  C1C2  F174         	movff	Command@Input,StringContains@This
 16140  011890  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 16141  011894  0E17               	movlw	low (STR_83+14)
 16142  011896  0101               	movlb	1	; () banked
 16143  011898  6F76               	movwf	StringContains@That& (0+255),b
 16144  01189A  0EFA               	movlw	high (STR_83+14)
 16145  01189C  0101               	movlb	1	; () banked
 16146  01189E  6F77               	movwf	(StringContains@That+1)& (0+255),b
 16147  0118A0  ECC2  F0BC         	call	_StringContains	;wreg free
 16148  0118A4  0900               	iorlw	0
 16149  0118A6  A4D8               	btfss	status,2,c
 16150  0118A8  D238               	goto	l15567
 16151                           
 16152                           ;StringCommand.c: 561: {
 16153                           ;StringCommand.c: 562: if (StringContains(Input, "battery"))
 16154  0118AA  C1C2  F174         	movff	Command@Input,StringContains@This
 16155  0118AE  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 16156  0118B2  0E4A               	movlw	low STR_220
 16157  0118B4  0101               	movlb	1	; () banked
 16158  0118B6  6F76               	movwf	StringContains@That& (0+255),b
 16159  0118B8  0EFF               	movlw	high STR_220
 16160  0118BA  0101               	movlb	1	; () banked
 16161  0118BC  6F77               	movwf	(StringContains@That+1)& (0+255),b
 16162  0118BE  ECC2  F0BC         	call	_StringContains	;wreg free
 16163  0118C2  0900               	iorlw	0
 16164  0118C4  B4D8               	btfsc	status,2,c
 16165  0118C6  D0C2               	goto	l15505
 16166                           
 16167                           ;StringCommand.c: 563: {
 16168                           ;StringCommand.c: 564: RTC_Battery_Value = (InternalADC_Read(2) + 8);
 16169  0118C8  0E02               	movlw	2
 16170  0118CA  ECAB  F002         	call	_InternalADC_Read
 16171  0118CE  0E08               	movlw	8
 16172  0118D0  0101               	movlb	1	; () banked
 16173  0118D2  2583               	addwf	?_InternalADC_Read& (0+255),w,b
 16174  0118D4  0106               	movlb	6	; () banked
 16175  0118D6  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 16176  0118D8  0E00               	movlw	0
 16177  0118DA  0101               	movlb	1	; () banked
 16178  0118DC  2184               	addwfc	(?_InternalADC_Read+1)& (0+255),w,b
 16179  0118DE  0106               	movlb	6	; () banked
 16180  0118E0  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 16181                           
 16182                           ; BSR set to: 6
 16183                           ;StringCommand.c: 565: RTC_Battery_Value_HIGH_decimal = (unsigned int)(((float)RTC_Batte
      +                          ry_Value / 1024) * 5);
 16184  0118E2  0E00               	movlw	0
 16185  0118E4  0101               	movlb	1	; () banked
 16186  0118E6  6F92               	movwf	___ftmul@f2& (0+255),b
 16187  0118E8  0EA0               	movlw	160
 16188  0118EA  0101               	movlb	1	; () banked
 16189  0118EC  6F93               	movwf	(___ftmul@f2+1)& (0+255),b
 16190  0118EE  0E40               	movlw	64
 16191  0118F0  0101               	movlb	1	; () banked
 16192  0118F2  6F94               	movwf	(___ftmul@f2+2)& (0+255),b
 16193  0118F4  0E00               	movlw	0
 16194  0118F6  0101               	movlb	1	; () banked
 16195  0118F8  6F83               	movwf	___ftdiv@f2& (0+255),b
 16196  0118FA  0E80               	movlw	128
 16197  0118FC  0101               	movlb	1	; () banked
 16198  0118FE  6F84               	movwf	(___ftdiv@f2+1)& (0+255),b
 16199  011900  0E44               	movlw	68
 16200  011902  0101               	movlb	1	; () banked
 16201  011904  6F85               	movwf	(___ftdiv@f2+2)& (0+255),b
 16202  011906  C6CA  F17C         	movff	Command@RTC_Battery_Value,___lwtoft@c
 16203  01190A  C6CB  F17D         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 16204  01190E  EC4E  F007         	call	___lwtoft	;wreg free
 16205  011912  C17C  F180         	movff	?___lwtoft,___ftdiv@f1
 16206  011916  C17D  F181         	movff	?___lwtoft+1,___ftdiv@f1+1
 16207  01191A  C17E  F182         	movff	?___lwtoft+2,___ftdiv@f1+2
 16208  01191E  EC64  F0AD         	call	___ftdiv	;wreg free
 16209  011922  C180  F18F         	movff	?___ftdiv,___ftmul@f1
 16210  011926  C181  F190         	movff	?___ftdiv+1,___ftmul@f1+1
 16211  01192A  C182  F191         	movff	?___ftdiv+2,___ftmul@f1+2
 16212  01192E  ECA5  F0AA         	call	___ftmul	;wreg free
 16213  011932  C18F  F19E         	movff	?___ftmul,___fttol@f1
 16214  011936  C190  F19F         	movff	?___ftmul+1,___fttol@f1+1
 16215  01193A  C191  F1A0         	movff	?___ftmul+2,___fttol@f1+2
 16216  01193E  ECBB  F0AC         	call	___fttol	;wreg free
 16217  011942  C19E  F6CC         	movff	?___fttol,Command@RTC_Battery_Value_HIGH_decimal
 16218  011946  C19F  F6CD         	movff	?___fttol+1,Command@RTC_Battery_Value_HIGH_decimal+1
 16219                           
 16220                           ;StringCommand.c: 566: RTC_Battery_Value_LOW_decimal = (unsigned int)((((float)RTC_Batte
      +                          ry_Value / 1024) * 500));
 16221  01194A  0E00               	movlw	0
 16222  01194C  0101               	movlb	1	; () banked
 16223  01194E  6F92               	movwf	___ftmul@f2& (0+255),b
 16224  011950  0EFA               	movlw	250
 16225  011952  0101               	movlb	1	; () banked
 16226  011954  6F93               	movwf	(___ftmul@f2+1)& (0+255),b
 16227  011956  0E43               	movlw	67
 16228  011958  0101               	movlb	1	; () banked
 16229  01195A  6F94               	movwf	(___ftmul@f2+2)& (0+255),b
 16230  01195C  0E00               	movlw	0
 16231  01195E  0101               	movlb	1	; () banked
 16232  011960  6F83               	movwf	___ftdiv@f2& (0+255),b
 16233  011962  0E80               	movlw	128
 16234  011964  0101               	movlb	1	; () banked
 16235  011966  6F84               	movwf	(___ftdiv@f2+1)& (0+255),b
 16236  011968  0E44               	movlw	68
 16237  01196A  0101               	movlb	1	; () banked
 16238  01196C  6F85               	movwf	(___ftdiv@f2+2)& (0+255),b
 16239  01196E  C6CA  F17C         	movff	Command@RTC_Battery_Value,___lwtoft@c
 16240  011972  C6CB  F17D         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 16241  011976  EC4E  F007         	call	___lwtoft	;wreg free
 16242  01197A  C17C  F180         	movff	?___lwtoft,___ftdiv@f1
 16243  01197E  C17D  F181         	movff	?___lwtoft+1,___ftdiv@f1+1
 16244  011982  C17E  F182         	movff	?___lwtoft+2,___ftdiv@f1+2
 16245  011986  EC64  F0AD         	call	___ftdiv	;wreg free
 16246  01198A  C180  F18F         	movff	?___ftdiv,___ftmul@f1
 16247  01198E  C181  F190         	movff	?___ftdiv+1,___ftmul@f1+1
 16248  011992  C182  F191         	movff	?___ftdiv+2,___ftmul@f1+2
 16249  011996  ECA5  F0AA         	call	___ftmul	;wreg free
 16250  01199A  C18F  F19E         	movff	?___ftmul,___fttol@f1
 16251  01199E  C190  F19F         	movff	?___ftmul+1,___fttol@f1+1
 16252  0119A2  C191  F1A0         	movff	?___ftmul+2,___fttol@f1+2
 16253  0119A6  ECBB  F0AC         	call	___fttol	;wreg free
 16254  0119AA  C19E  F6D2         	movff	?___fttol,Command@RTC_Battery_Value_LOW_decimal
 16255  0119AE  C19F  F6D3         	movff	?___fttol+1,Command@RTC_Battery_Value_LOW_decimal+1
 16256                           
 16257                           ;StringCommand.c: 567: RTC_Battery_Value_LOW_decimal = RTC_Battery_Value_LOW_decimal % 1
      +                          00;
 16258  0119B2  C6D2  F174         	movff	Command@RTC_Battery_Value_LOW_decimal,___lwmod@dividend
 16259  0119B6  C6D3  F175         	movff	Command@RTC_Battery_Value_LOW_decimal+1,___lwmod@dividend+1
 16260  0119BA  0E00               	movlw	0
 16261  0119BC  0101               	movlb	1	; () banked
 16262  0119BE  6F77               	movwf	(___lwmod@divisor+1)& (0+255),b
 16263  0119C0  0E64               	movlw	100
 16264  0119C2  6F76               	movwf	___lwmod@divisor& (0+255),b
 16265  0119C4  EC5A  F0BF         	call	___lwmod	;wreg free
 16266  0119C8  C174  F6D2         	movff	?___lwmod,Command@RTC_Battery_Value_LOW_decimal
 16267  0119CC  C175  F6D3         	movff	?___lwmod+1,Command@RTC_Battery_Value_LOW_decimal+1
 16268                           
 16269                           ;StringCommand.c: 568: sprintf(buf, " 3 Volt RTC Battery Voltage = %d.%d",
 16270                           ;StringCommand.c: 569: RTC_Battery_Value_HIGH_decimal, RTC_Battery_Value_LOW_decimal);
 16271  0119D0  0E00               	movlw	low Command@buf
 16272  0119D2  0101               	movlb	1	; () banked
 16273  0119D4  6F8A               	movwf	sprintf@sp& (0+255),b
 16274  0119D6  0E06               	movlw	high Command@buf
 16275  0119D8  0101               	movlb	1	; () banked
 16276  0119DA  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 16277  0119DC  0EF0               	movlw	low STR_221
 16278  0119DE  0101               	movlb	1	; () banked
 16279  0119E0  6F8C               	movwf	sprintf@f& (0+255),b
 16280  0119E2  0EF2               	movlw	high STR_221
 16281  0119E4  0101               	movlb	1	; () banked
 16282  0119E6  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 16283  0119E8  C6CC  F18E         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 16284  0119EC  C6CD  F18F         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 16285  0119F0  C6D2  F190         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 16286  0119F4  C6D3  F191         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 16287  0119F8  EC87  F093         	call	_sprintf	;wreg free
 16288                           
 16289                           ;StringCommand.c: 570: UARTstring(buf);
 16290  0119FC  0E00               	movlw	low Command@buf
 16291  0119FE  0101               	movlb	1	; () banked
 16292  011A00  6F7F               	movwf	UARTstring@data& (0+255),b
 16293  011A02  0E06               	movlw	high Command@buf
 16294  011A04  0101               	movlb	1	; () banked
 16295  011A06  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16296  011A08  EC24  F0BA         	call	_UARTstring	;wreg free
 16297                           
 16298                           ;StringCommand.c: 571: sprintf(buf, "RTC Bty = %d.%d", RTC_Battery_Value_HIGH_decimal,
 16299                           ;StringCommand.c: 572: RTC_Battery_Value_LOW_decimal);
 16300  011A0C  0E00               	movlw	low Command@buf
 16301  011A0E  0101               	movlb	1	; () banked
 16302  011A10  6F8A               	movwf	sprintf@sp& (0+255),b
 16303  011A12  0E06               	movlw	high Command@buf
 16304  011A14  0101               	movlb	1	; () banked
 16305  011A16  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 16306  011A18  0E99               	movlw	low STR_222
 16307  011A1A  0101               	movlb	1	; () banked
 16308  011A1C  6F8C               	movwf	sprintf@f& (0+255),b
 16309  011A1E  0EFA               	movlw	high STR_222
 16310  011A20  0101               	movlb	1	; () banked
 16311  011A22  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 16312  011A24  C6CC  F18E         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 16313  011A28  C6CD  F18F         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 16314  011A2C  C6D2  F190         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 16315  011A30  C6D3  F191         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 16316  011A34  EC87  F093         	call	_sprintf	;wreg free
 16317                           
 16318                           ;StringCommand.c: 573: LCDdisplayFeedback(buf);
 16319  011A38  0E00               	movlw	low Command@buf
 16320  011A3A  0101               	movlb	1	; () banked
 16321  011A3C  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16322  011A3E  0E06               	movlw	high Command@buf
 16323  011A40  0101               	movlb	1	; () banked
 16324  011A42  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16325  011A44  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 16326                           
 16327                           ;StringCommand.c: 574: }
 16328  011A48  EF7C  F093         	goto	l685
 16329  011A4C                     l15505:
 16330                           
 16331                           ;StringCommand.c: 575: else if(StringContains(Input, "read"))
 16332  011A4C  C1C2  F174         	movff	Command@Input,StringContains@This
 16333  011A50  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 16334  011A54  0EDB               	movlw	low STR_223
 16335  011A56  0101               	movlb	1	; () banked
 16336  011A58  6F76               	movwf	StringContains@That& (0+255),b
 16337  011A5A  0EFF               	movlw	high STR_223
 16338  011A5C  0101               	movlb	1	; () banked
 16339  011A5E  6F77               	movwf	(StringContains@That+1)& (0+255),b
 16340  011A60  ECC2  F0BC         	call	_StringContains	;wreg free
 16341  011A64  0900               	iorlw	0
 16342  011A66  B4D8               	btfsc	status,2,c
 16343  011A68  D0A8               	goto	l15537
 16344                           
 16345                           ;StringCommand.c: 576: {
 16346                           ;StringCommand.c: 577: if(!READ_RTC_TIME())
 16347  011A6A  ECBF  F0B3         	call	_READ_RTC_TIME	;wreg free
 16348  011A6E  0900               	iorlw	0
 16349  011A70  A4D8               	btfss	status,2,c
 16350  011A72  D08B               	goto	l15529
 16351                           
 16352                           ;StringCommand.c: 578: {
 16353                           ;StringCommand.c: 579: SprintDate(buf, NowTime, 0);
 16354  011A74  0E00               	movlw	low Command@buf
 16355  011A76  0101               	movlb	1	; () banked
 16356  011A78  6FB6               	movwf	SprintDate@ReturnBuf& (0+255),b
 16357  011A7A  0E06               	movlw	high Command@buf
 16358  011A7C  0101               	movlb	1	; () banked
 16359  011A7E  6FB7               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 16360  011A80  EE21  F009         	lfsr	2,_NowTime
 16361  011A84  EE01  F0B8         	lfsr	0,SprintDate@DisplayTime
 16362  011A88  0E08               	movlw	8
 16363  011A8A                     u19921:
 16364  011A8A  CFDB FFEB          	movff	plusw2,plusw0
 16365  011A8E  06E8               	decf	wreg,f,c
 16366  011A90  E2FC               	bc	u19921
 16367  011A92  0E00               	movlw	0
 16368  011A94  0101               	movlb	1	; () banked
 16369  011A96  6FC1               	movwf	SprintDate@Military& (0+255),b
 16370  011A98  EC57  F0B2         	call	_SprintDate	;wreg free
 16371                           
 16372                           ;StringCommand.c: 580: UARTstring(buf);
 16373  011A9C  0E00               	movlw	low Command@buf
 16374  011A9E  0101               	movlb	1	; () banked
 16375  011AA0  6F7F               	movwf	UARTstring@data& (0+255),b
 16376  011AA2  0E06               	movlw	high Command@buf
 16377  011AA4  0101               	movlb	1	; () banked
 16378  011AA6  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16379  011AA8  EC24  F0BA         	call	_UARTstring	;wreg free
 16380                           
 16381                           ;StringCommand.c: 581: UARTstring("\r\n");
 16382  011AAC  0ECE               	movlw	low (STR_282+19)
 16383  011AAE  0101               	movlb	1	; () banked
 16384  011AB0  6F7F               	movwf	UARTstring@data& (0+255),b
 16385  011AB2  0EF6               	movlw	high (STR_282+19)
 16386  011AB4  0101               	movlb	1	; () banked
 16387  011AB6  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16388  011AB8  EC24  F0BA         	call	_UARTstring	;wreg free
 16389                           
 16390                           ;StringCommand.c: 582: SetLCDcursor(0, 0);
 16391  011ABC  0E00               	movlw	0
 16392  011ABE  0101               	movlb	1	; () banked
 16393  011AC0  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 16394  011AC2  0E00               	movlw	0
 16395  011AC4  EC8F  F005         	call	_SetLCDcursor
 16396                           
 16397                           ;StringCommand.c: 583: LCDPrintString("RTC Time is:    ");
 16398  011AC8  0E3F               	movlw	low STR_225
 16399  011ACA  0101               	movlb	1	; () banked
 16400  011ACC  6F82               	movwf	LCDPrintString@Text& (0+255),b
 16401  011ACE  0EF9               	movlw	high STR_225
 16402  011AD0  0101               	movlb	1	; () banked
 16403  011AD2  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 16404  011AD4  EC35  F0BE         	call	_LCDPrintString	;wreg free
 16405                           
 16406                           ;StringCommand.c: 584: if(NowTime.HoursAM_PM)
 16407  011AD8  0101               	movlb	1	; () banked
 16408  011ADA  510D               	movf	(_NowTime+4)& (0+255),w,b
 16409  011ADC  B4D8               	btfsc	status,2,c
 16410  011ADE  D023               	goto	l15523
 16411                           
 16412                           ; BSR set to: 1
 16413                           ;StringCommand.c: 585: {
 16414                           ;StringCommand.c: 586: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 16415  011AE0  0E00               	movlw	low Command@buf
 16416  011AE2  0101               	movlb	1	; () banked
 16417  011AE4  6F8A               	movwf	sprintf@sp& (0+255),b
 16418  011AE6  0E06               	movlw	high Command@buf
 16419  011AE8  0101               	movlb	1	; () banked
 16420  011AEA  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 16421  011AEC  0EA4               	movlw	low STR_226
 16422  011AEE  0101               	movlb	1	; () banked
 16423  011AF0  6F8C               	movwf	sprintf@f& (0+255),b
 16424  011AF2  0EF6               	movlw	high STR_226
 16425  011AF4  0101               	movlb	1	; () banked
 16426  011AF6  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 16427  011AF8  C110  F18E         	movff	_NowTime+7,?_sprintf+4
 16428  011AFC  0101               	movlb	1	; () banked
 16429  011AFE  6B8F               	clrf	(?_sprintf+5)& (0+255),b
 16430  011B00  C10F  F190         	movff	_NowTime+6,?_sprintf+6
 16431  011B04  0101               	movlb	1	; () banked
 16432  011B06  6B91               	clrf	(?_sprintf+7)& (0+255),b
 16433  011B08  C10B  F192         	movff	_NowTime+2,?_sprintf+8
 16434  011B0C  0101               	movlb	1	; () banked
 16435  011B0E  6B93               	clrf	(?_sprintf+9)& (0+255),b
 16436  011B10  C10A  F194         	movff	_NowTime+1,?_sprintf+10
 16437  011B14  0101               	movlb	1	; () banked
 16438  011B16  6B95               	clrf	(?_sprintf+11)& (0+255),b
 16439  011B18  C109  F196         	movff	_NowTime,?_sprintf+12
 16440  011B1C  0101               	movlb	1	; () banked
 16441  011B1E  6B97               	clrf	(?_sprintf+13)& (0+255),b
 16442  011B20  EC87  F093         	call	_sprintf	;wreg free
 16443                           
 16444                           ;StringCommand.c: 587: }
 16445  011B24  D023               	goto	l15525
 16446  011B26                     l15523:
 16447                           
 16448                           ;StringCommand.c: 588: else
 16449                           ;StringCommand.c: 589: {
 16450                           ;StringCommand.c: 590: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 16451  011B26  0E00               	movlw	low Command@buf
 16452  011B28  0101               	movlb	1	; () banked
 16453  011B2A  6F8A               	movwf	sprintf@sp& (0+255),b
 16454  011B2C  0E06               	movlw	high Command@buf
 16455  011B2E  0101               	movlb	1	; () banked
 16456  011B30  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 16457  011B32  0E8D               	movlw	low STR_227
 16458  011B34  0101               	movlb	1	; () banked
 16459  011B36  6F8C               	movwf	sprintf@f& (0+255),b
 16460  011B38  0EF6               	movlw	high STR_227
 16461  011B3A  0101               	movlb	1	; () banked
 16462  011B3C  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 16463  011B3E  C110  F18E         	movff	_NowTime+7,?_sprintf+4
 16464  011B42  0101               	movlb	1	; () banked
 16465  011B44  6B8F               	clrf	(?_sprintf+5)& (0+255),b
 16466  011B46  C10F  F190         	movff	_NowTime+6,?_sprintf+6
 16467  011B4A  0101               	movlb	1	; () banked
 16468  011B4C  6B91               	clrf	(?_sprintf+7)& (0+255),b
 16469  011B4E  C10B  F192         	movff	_NowTime+2,?_sprintf+8
 16470  011B52  0101               	movlb	1	; () banked
 16471  011B54  6B93               	clrf	(?_sprintf+9)& (0+255),b
 16472  011B56  C10A  F194         	movff	_NowTime+1,?_sprintf+10
 16473  011B5A  0101               	movlb	1	; () banked
 16474  011B5C  6B95               	clrf	(?_sprintf+11)& (0+255),b
 16475  011B5E  C109  F196         	movff	_NowTime,?_sprintf+12
 16476  011B62  0101               	movlb	1	; () banked
 16477  011B64  6B97               	clrf	(?_sprintf+13)& (0+255),b
 16478  011B66  EC87  F093         	call	_sprintf	;wreg free
 16479  011B6A  D000               	goto	l15525
 16480  011B6C                     l15525:
 16481                           
 16482                           ;StringCommand.c: 591: }
 16483                           ;StringCommand.c: 592: SetLCDcursor(1, 0);
 16484  011B6C  0E00               	movlw	0
 16485  011B6E  0101               	movlb	1	; () banked
 16486  011B70  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 16487  011B72  0E01               	movlw	1
 16488  011B74  EC8F  F005         	call	_SetLCDcursor
 16489                           
 16490                           ;StringCommand.c: 593: LCDPrintString(buf);
 16491  011B78  0E00               	movlw	low Command@buf
 16492  011B7A  0101               	movlb	1	; () banked
 16493  011B7C  6F82               	movwf	LCDPrintString@Text& (0+255),b
 16494  011B7E  0E06               	movlw	high Command@buf
 16495  011B80  0101               	movlb	1	; () banked
 16496  011B82  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 16497  011B84  EC35  F0BE         	call	_LCDPrintString	;wreg free
 16498                           
 16499                           ;StringCommand.c: 594: }
 16500  011B88  D3EB               	goto	l15667
 16501  011B8A                     l15529:
 16502                           
 16503                           ;StringCommand.c: 595: else
 16504                           ;StringCommand.c: 596: {
 16505                           ;StringCommand.c: 597: UARTstring("ERROR: Can't Read RTC\r\n");
 16506  011B8A  0E46               	movlw	low STR_228
 16507  011B8C  0101               	movlb	1	; () banked
 16508  011B8E  6F7F               	movwf	UARTstring@data& (0+255),b
 16509  011B90  0EF6               	movlw	high STR_228
 16510  011B92  0101               	movlb	1	; () banked
 16511  011B94  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16512  011B96  EC24  F0BA         	call	_UARTstring	;wreg free
 16513                           
 16514                           ;StringCommand.c: 598: SetLCDcursor(1, 0);
 16515  011B9A  0E00               	movlw	0
 16516  011B9C  0101               	movlb	1	; () banked
 16517  011B9E  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 16518  011BA0  0E01               	movlw	1
 16519  011BA2  EC8F  F005         	call	_SetLCDcursor
 16520                           
 16521                           ;StringCommand.c: 599: LCDPrintString("RTC isnt working");
 16522  011BA6  0E61               	movlw	low STR_229
 16523  011BA8  0101               	movlb	1	; () banked
 16524  011BAA  6F82               	movwf	LCDPrintString@Text& (0+255),b
 16525  011BAC  0EF9               	movlw	high STR_229
 16526  011BAE  0101               	movlb	1	; () banked
 16527  011BB0  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 16528  011BB2  EC35  F0BE         	call	_LCDPrintString	;wreg free
 16529  011BB6  D3D4               	goto	l15667
 16530  011BB8  D3D3               	goto	l15667
 16531  011BBA                     l15537:
 16532                           
 16533                           ;StringCommand.c: 603: else if(StringContains(Input, "set"))
 16534  011BBA  C1C2  F174         	movff	Command@Input,StringContains@This
 16535  011BBE  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 16536  011BC2  0EF8               	movlw	low STR_230
 16537  011BC4  0101               	movlb	1	; () banked
 16538  011BC6  6F76               	movwf	StringContains@That& (0+255),b
 16539  011BC8  0EFF               	movlw	high STR_230
 16540  011BCA  0101               	movlb	1	; () banked
 16541  011BCC  6F77               	movwf	(StringContains@That+1)& (0+255),b
 16542  011BCE  ECC2  F0BC         	call	_StringContains	;wreg free
 16543  011BD2  0900               	iorlw	0
 16544  011BD4  B4D8               	btfsc	status,2,c
 16545  011BD6  D097               	goto	l15565
 16546                           
 16547                           ;StringCommand.c: 604: {
 16548                           ;StringCommand.c: 605: UARTstring("Enter Time MM/DD/YY HH:MM:SS AM or\r\n");
 16549  011BD8  0ECB               	movlw	low STR_231
 16550  011BDA  0101               	movlb	1	; () banked
 16551  011BDC  6F7F               	movwf	UARTstring@data& (0+255),b
 16552  011BDE  0EF2               	movlw	high STR_231
 16553  011BE0  0101               	movlb	1	; () banked
 16554  011BE2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16555  011BE4  EC24  F0BA         	call	_UARTstring	;wreg free
 16556                           
 16557                           ;StringCommand.c: 606: UARTstring("Enter Time MM/DD/YY HH:MM:SS PM\r\n");
 16558  011BE8  0E5A               	movlw	low STR_232
 16559  011BEA  0101               	movlb	1	; () banked
 16560  011BEC  6F7F               	movwf	UARTstring@data& (0+255),b
 16561  011BEE  0EF3               	movlw	high STR_232
 16562  011BF0  0101               	movlb	1	; () banked
 16563  011BF2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16564  011BF4  EC24  F0BA         	call	_UARTstring	;wreg free
 16565                           
 16566                           ;StringCommand.c: 607: cleanBuffer(Input, 100);
 16567  011BF8  C1C2  F174         	movff	Command@Input,cleanBuffer@data
 16568  011BFC  C1C3  F175         	movff	Command@Input+1,cleanBuffer@data+1
 16569  011C00  0E00               	movlw	0
 16570  011C02  0101               	movlb	1	; () banked
 16571  011C04  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 16572  011C06  0E64               	movlw	100
 16573  011C08  6F76               	movwf	cleanBuffer@count& (0+255),b
 16574  011C0A  ECD3  F003         	call	_cleanBuffer	;wreg free
 16575                           
 16576                           ;StringCommand.c: 608: UARTstring(">");
 16577  011C0E  0ED1               	movlw	low (STR_21+27)
 16578  011C10  0101               	movlb	1	; () banked
 16579  011C12  6F7F               	movwf	UARTstring@data& (0+255),b
 16580  011C14  0EF4               	movlw	high (STR_21+27)
 16581  011C16  0101               	movlb	1	; () banked
 16582  011C18  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16583  011C1A  EC24  F0BA         	call	_UARTstring	;wreg free
 16584  011C1E  D000               	goto	l15545
 16585  011C20                     l15545:
 16586                           
 16587                           ;StringCommand.c: 610: {
 16588                           ;StringCommand.c: 611: if(Input[0] != 0)
 16589  011C20  C1C2  FFD9         	movff	Command@Input,fsr2l
 16590  011C24  C1C3  FFDA         	movff	Command@Input+1,fsr2h
 16591  011C28  50DF               	movf	indf2,w,c
 16592  011C2A  B4D8               	btfsc	status,2,c
 16593  011C2C  D7F9               	goto	l15545
 16594                           
 16595                           ;StringCommand.c: 612: {
 16596                           ;StringCommand.c: 613: lowercase(Input);
 16597  011C2E  C1C2  F174         	movff	Command@Input,lowercase@Input
 16598  011C32  C1C3  F175         	movff	Command@Input+1,lowercase@Input+1
 16599  011C36  ECF4  F0BB         	call	_lowercase	;wreg free
 16600                           
 16601                           ;StringCommand.c: 614: if(Parse_Time(Input))
 16602  011C3A  C1C2  F174         	movff	Command@Input,Parse_Time@This
 16603  011C3E  C1C3  F175         	movff	Command@Input+1,Parse_Time@This+1
 16604  011C42  EC3F  F09C         	call	_Parse_Time	;wreg free
 16605  011C46  0900               	iorlw	0
 16606  011C48  B4D8               	btfsc	status,2,c
 16607  011C4A  D048               	goto	l15563
 16608                           
 16609                           ;StringCommand.c: 615: {
 16610                           ;StringCommand.c: 616: if(!SET_RTC_TIME(NowTime))
 16611  011C4C  EE21  F009         	lfsr	2,_NowTime
 16612  011C50  EE01  F07C         	lfsr	0,SET_RTC_TIME@SetTime
 16613  011C54  0E08               	movlw	8
 16614  011C56                     u19971:
 16615  011C56  CFDB FFEB          	movff	plusw2,plusw0
 16616  011C5A  06E8               	decf	wreg,f,c
 16617  011C5C  E2FC               	bc	u19971
 16618  011C5E  EC94  F0A4         	call	_SET_RTC_TIME	;wreg free
 16619  011C62  0900               	iorlw	0
 16620  011C64  A4D8               	btfss	status,2,c
 16621  011C66  D030               	goto	l15561
 16622                           
 16623                           ;StringCommand.c: 617: {
 16624                           ;StringCommand.c: 618: UARTstring("\r\nTime Set Successfully\r\n");
 16625  011C68  0EC9               	movlw	low STR_234
 16626  011C6A  0101               	movlb	1	; () banked
 16627  011C6C  6F7F               	movwf	UARTstring@data& (0+255),b
 16628  011C6E  0EF5               	movlw	high STR_234
 16629  011C70  0101               	movlb	1	; () banked
 16630  011C72  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16631  011C74  EC24  F0BA         	call	_UARTstring	;wreg free
 16632                           
 16633                           ;StringCommand.c: 619: READ_RTC_TIME();
 16634  011C78  ECBF  F0B3         	call	_READ_RTC_TIME	;wreg free
 16635                           
 16636                           ;StringCommand.c: 620: SprintDate(buf, NowTime, 0);
 16637  011C7C  0E00               	movlw	low Command@buf
 16638  011C7E  0101               	movlb	1	; () banked
 16639  011C80  6FB6               	movwf	SprintDate@ReturnBuf& (0+255),b
 16640  011C82  0E06               	movlw	high Command@buf
 16641  011C84  0101               	movlb	1	; () banked
 16642  011C86  6FB7               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 16643  011C88  EE21  F009         	lfsr	2,_NowTime
 16644  011C8C  EE01  F0B8         	lfsr	0,SprintDate@DisplayTime
 16645  011C90  0E08               	movlw	8
 16646  011C92                     u19991:
 16647  011C92  CFDB FFEB          	movff	plusw2,plusw0
 16648  011C96  06E8               	decf	wreg,f,c
 16649  011C98  E2FC               	bc	u19991
 16650  011C9A  0E00               	movlw	0
 16651  011C9C  0101               	movlb	1	; () banked
 16652  011C9E  6FC1               	movwf	SprintDate@Military& (0+255),b
 16653  011CA0  EC57  F0B2         	call	_SprintDate	;wreg free
 16654                           
 16655                           ;StringCommand.c: 621: UARTstring(buf);
 16656  011CA4  0E00               	movlw	low Command@buf
 16657  011CA6  0101               	movlb	1	; () banked
 16658  011CA8  6F7F               	movwf	UARTstring@data& (0+255),b
 16659  011CAA  0E06               	movlw	high Command@buf
 16660  011CAC  0101               	movlb	1	; () banked
 16661  011CAE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16662  011CB0  EC24  F0BA         	call	_UARTstring	;wreg free
 16663                           
 16664                           ;StringCommand.c: 622: UARTstring("\r\n");
 16665  011CB4  0ECE               	movlw	low (STR_282+19)
 16666  011CB6  0101               	movlb	1	; () banked
 16667  011CB8  6F7F               	movwf	UARTstring@data& (0+255),b
 16668  011CBA  0EF6               	movlw	high (STR_282+19)
 16669  011CBC  0101               	movlb	1	; () banked
 16670  011CBE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16671  011CC0  EC24  F0BA         	call	_UARTstring	;wreg free
 16672                           
 16673                           ;StringCommand.c: 623: }
 16674  011CC4  EF7C  F093         	goto	l685
 16675  011CC8                     l15561:
 16676                           
 16677                           ;StringCommand.c: 624: else
 16678                           ;StringCommand.c: 625: {
 16679                           ;StringCommand.c: 626: UARTstring("\r\nTime Not Set Successfully");
 16680  011CC8  0E43               	movlw	low STR_236
 16681  011CCA  0101               	movlb	1	; () banked
 16682  011CCC  6F7F               	movwf	UARTstring@data& (0+255),b
 16683  011CCE  0EF5               	movlw	high STR_236
 16684  011CD0  0101               	movlb	1	; () banked
 16685  011CD2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16686  011CD4  EC24  F0BA         	call	_UARTstring	;wreg free
 16687                           
 16688                           ;StringCommand.c: 627: }
 16689                           ;StringCommand.c: 628: }
 16690  011CD8  EF7C  F093         	goto	l685
 16691  011CDC                     l15563:
 16692                           
 16693                           ;StringCommand.c: 629: else
 16694                           ;StringCommand.c: 630: {
 16695                           ;StringCommand.c: 631: UARTstring("\r\nInvalid Time Entered\r\n");
 16696  011CDC  0EFC               	movlw	low STR_237
 16697  011CDE  0101               	movlb	1	; () banked
 16698  011CE0  6F7F               	movwf	UARTstring@data& (0+255),b
 16699  011CE2  0EF5               	movlw	high STR_237
 16700  011CE4  0101               	movlb	1	; () banked
 16701  011CE6  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16702  011CE8  EC24  F0BA         	call	_UARTstring	;wreg free
 16703                           
 16704                           ;StringCommand.c: 632: UARTstring("Format is MM/DD/YY HH:MM:SS AM\r\n");
 16705  011CEC  0E9D               	movlw	low STR_238
 16706  011CEE  0101               	movlb	1	; () banked
 16707  011CF0  6F7F               	movwf	UARTstring@data& (0+255),b
 16708  011CF2  0EF3               	movlw	high STR_238
 16709  011CF4  0101               	movlb	1	; () banked
 16710  011CF6  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16711  011CF8  EC24  F0BA         	call	_UARTstring	;wreg free
 16712                           
 16713                           ;StringCommand.c: 633: }
 16714                           ;StringCommand.c: 634: break;
 16715  011CFC  EF7C  F093         	goto	l685
 16716  011D00  D78F               	goto	l15545
 16717                           
 16718                           ;StringCommand.c: 635: }
 16719                           ;StringCommand.c: 636: }
 16720                           ;StringCommand.c: 637: }
 16721  011D02  EF7C  F093         	goto	l685
 16722  011D06                     l15565:
 16723                           
 16724                           ;StringCommand.c: 638: else
 16725                           ;StringCommand.c: 639: {
 16726                           ;StringCommand.c: 640: UARTstring("RTC What???\n");
 16727  011D06  0EED               	movlw	low STR_239
 16728  011D08  0101               	movlb	1	; () banked
 16729  011D0A  6F7F               	movwf	UARTstring@data& (0+255),b
 16730  011D0C  0EFC               	movlw	high STR_239
 16731  011D0E  0101               	movlb	1	; () banked
 16732  011D10  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16733  011D12  EC24  F0BA         	call	_UARTstring	;wreg free
 16734                           
 16735                           ;StringCommand.c: 641: }
 16736                           ;StringCommand.c: 642: }
 16737  011D16  EF7C  F093         	goto	l685
 16738  011D1A                     l15567:
 16739                           
 16740                           ;StringCommand.c: 643: else
 16741                           ;StringCommand.c: 644: {
 16742                           ;StringCommand.c: 645: UARTstring("Real Time Clock Help Menu\r\n\n");
 16743  011D1A  0E7C               	movlw	low STR_240
 16744  011D1C  0101               	movlb	1	; () banked
 16745  011D1E  6F7F               	movwf	UARTstring@data& (0+255),b
 16746  011D20  0EF4               	movlw	high STR_240
 16747  011D22  0101               	movlb	1	; () banked
 16748  011D24  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16749  011D26  EC24  F0BA         	call	_UARTstring	;wreg free
 16750                           
 16751                           ;StringCommand.c: 646: UARTstring("Actions:\r\n");
 16752  011D2A  0EC2               	movlw	low STR_241
 16753  011D2C  0101               	movlb	1	; () banked
 16754  011D2E  6F7F               	movwf	UARTstring@data& (0+255),b
 16755  011D30  0EFD               	movlw	high STR_241
 16756  011D32  0101               	movlb	1	; () banked
 16757  011D34  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16758  011D36  EC24  F0BA         	call	_UARTstring	;wreg free
 16759                           
 16760                           ;StringCommand.c: 647: UARTstring("Battery\r\n");
 16761  011D3A  0E18               	movlw	low STR_242
 16762  011D3C  0101               	movlb	1	; () banked
 16763  011D3E  6F7F               	movwf	UARTstring@data& (0+255),b
 16764  011D40  0EFE               	movlw	high STR_242
 16765  011D42  0101               	movlb	1	; () banked
 16766  011D44  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16767  011D46  EC24  F0BA         	call	_UARTstring	;wreg free
 16768                           
 16769                           ;StringCommand.c: 648: UARTstring("Read\r\n");
 16770  011D4A  0E67               	movlw	low STR_243
 16771  011D4C  0101               	movlb	1	; () banked
 16772  011D4E  6F7F               	movwf	UARTstring@data& (0+255),b
 16773  011D50  0EFF               	movlw	high STR_243
 16774  011D52  0101               	movlb	1	; () banked
 16775  011D54  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16776  011D56  EC24  F0BA         	call	_UARTstring	;wreg free
 16777                           
 16778                           ;StringCommand.c: 649: UARTstring("Set\r\n\n");
 16779  011D5A  0E59               	movlw	low STR_244
 16780  011D5C  0101               	movlb	1	; () banked
 16781  011D5E  6F7F               	movwf	UARTstring@data& (0+255),b
 16782  011D60  0EFF               	movlw	high STR_244
 16783  011D62  0101               	movlb	1	; () banked
 16784  011D64  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16785  011D66  EC24  F0BA         	call	_UARTstring	;wreg free
 16786                           
 16787                           ;StringCommand.c: 650: UARTstring("To command the RTC, type the action\r\n followed by"
 16788                           ;StringCommand.c: 651: " the parameters \r\n\n");
 16789  011D6A  0EA6               	movlw	low STR_245
 16790  011D6C  0101               	movlb	1	; () banked
 16791  011D6E  6F7F               	movwf	UARTstring@data& (0+255),b
 16792  011D70  0EEE               	movlw	high STR_245
 16793  011D72  0101               	movlb	1	; () banked
 16794  011D74  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16795  011D76  EC24  F0BA         	call	_UARTstring	;wreg free
 16796                           
 16797                           ;StringCommand.c: 652: UARTstring("further sub menus available by entering the action an
      +                          d a '?'");
 16798  011D7A  0EAF               	movlw	low STR_246
 16799  011D7C  0101               	movlb	1	; () banked
 16800  011D7E  6F7F               	movwf	UARTstring@data& (0+255),b
 16801  011D80  0EEF               	movlw	high STR_246
 16802  011D82  0101               	movlb	1	; () banked
 16803  011D84  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16804  011D86  EC24  F0BA         	call	_UARTstring	;wreg free
 16805                           
 16806                           ;StringCommand.c: 653: UARTstring("i.e. RTC Set Time?\r\n");
 16807  011D8A  0E28               	movlw	low STR_247
 16808  011D8C  0101               	movlb	1	; () banked
 16809  011D8E  6F7F               	movwf	UARTstring@data& (0+255),b
 16810  011D90  0EF7               	movlw	high STR_247
 16811  011D92  0101               	movlb	1	; () banked
 16812  011D94  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 16813  011D96  EC24  F0BA         	call	_UARTstring	;wreg free
 16814                           
 16815                           ;StringCommand.c: 654: LCD_Scroll("RTC Menu");
 16816  011D9A  0ED7               	movlw	low STR_248
 16817  011D9C  0101               	movlb	1	; () banked
 16818  011D9E  6F83               	movwf	LCD_Scroll@This& (0+255),b
 16819  011DA0  0EFE               	movlw	high STR_248
 16820  011DA2  0101               	movlb	1	; () banked
 16821  011DA4  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16822  011DA6  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 16823                           
 16824                           ;StringCommand.c: 655: LCD_Scroll("Commands:");
 16825  011DAA  0E36               	movlw	low STR_178
 16826  011DAC  0101               	movlb	1	; () banked
 16827  011DAE  6F83               	movwf	LCD_Scroll@This& (0+255),b
 16828  011DB0  0EFE               	movlw	high STR_178
 16829  011DB2  0101               	movlb	1	; () banked
 16830  011DB4  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16831  011DB6  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 16832                           
 16833                           ;StringCommand.c: 656: LCD_Scroll("Battery");
 16834  011DBA  0E42               	movlw	low STR_250
 16835  011DBC  0101               	movlb	1	; () banked
 16836  011DBE  6F83               	movwf	LCD_Scroll@This& (0+255),b
 16837  011DC0  0EFF               	movlw	high STR_250
 16838  011DC2  0101               	movlb	1	; () banked
 16839  011DC4  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16840  011DC6  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 16841                           
 16842                           ;StringCommand.c: 657: LCD_Scroll("Read");
 16843  011DCA  0ED6               	movlw	low STR_251
 16844  011DCC  0101               	movlb	1	; () banked
 16845  011DCE  6F83               	movwf	LCD_Scroll@This& (0+255),b
 16846  011DD0  0EFF               	movlw	high STR_251
 16847  011DD2  0101               	movlb	1	; () banked
 16848  011DD4  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16849  011DD6  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 16850                           
 16851                           ;StringCommand.c: 658: LCD_Scroll("Set");
 16852  011DDA  0EF4               	movlw	low STR_252
 16853  011DDC  0101               	movlb	1	; () banked
 16854  011DDE  6F83               	movwf	LCD_Scroll@This& (0+255),b
 16855  011DE0  0EFF               	movlw	high STR_252
 16856  011DE2  0101               	movlb	1	; () banked
 16857  011DE4  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16858  011DE6  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 16859                           
 16860                           ;StringCommand.c: 660: }
 16861                           ;StringCommand.c: 661: }
 16862  011DEA  EF7C  F093         	goto	l685
 16863  011DEE                     l15579:
 16864                           
 16865                           ;StringCommand.c: 663: else if (StartsWith(Input, "joe"))
 16866  011DEE  C1C2  F174         	movff	Command@Input,StartsWith@This
 16867  011DF2  C1C3  F175         	movff	Command@Input+1,StartsWith@This+1
 16868  011DF6  0EE8               	movlw	low STR_253
 16869  011DF8  0101               	movlb	1	; () banked
 16870  011DFA  6F76               	movwf	StartsWith@That& (0+255),b
 16871  011DFC  0EFF               	movlw	high STR_253
 16872  011DFE  0101               	movlb	1	; () banked
 16873  011E00  6F77               	movwf	(StartsWith@That+1)& (0+255),b
 16874  011E02  ECAA  F0BB         	call	_StartsWith	;wreg free
 16875  011E06  0900               	iorlw	0
 16876  011E08  B4D8               	btfsc	status,2,c
 16877  011E0A  D147               	goto	l15617
 16878                           
 16879                           ;StringCommand.c: 664: {
 16880                           ;StringCommand.c: 665: if (!StringContains(Input, "?"))
 16881  011E0C  C1C2  F174         	movff	Command@Input,StringContains@This
 16882  011E10  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 16883  011E14  0E17               	movlw	low (STR_83+14)
 16884  011E16  0101               	movlb	1	; () banked
 16885  011E18  6F76               	movwf	StringContains@That& (0+255),b
 16886  011E1A  0EFA               	movlw	high (STR_83+14)
 16887  011E1C  0101               	movlb	1	; () banked
 16888  011E1E  6F77               	movwf	(StringContains@That+1)& (0+255),b
 16889  011E20  ECC2  F0BC         	call	_StringContains	;wreg free
 16890  011E24  0900               	iorlw	0
 16891  011E26  A4D8               	btfss	status,2,c
 16892  011E28  D0F7               	goto	l15609
 16893                           
 16894                           ;StringCommand.c: 666: {
 16895                           ;StringCommand.c: 667: if (StringMatch(Input, "joesroomlight=on"))
 16896  011E2A  C1C2  F174         	movff	Command@Input,StringMatch@This
 16897  011E2E  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 16898  011E32  0E94               	movlw	low STR_255
 16899  011E34  0101               	movlb	1	; () banked
 16900  011E36  6F76               	movwf	StringMatch@That& (0+255),b
 16901  011E38  0EF9               	movlw	high STR_255
 16902  011E3A  0101               	movlb	1	; () banked
 16903  011E3C  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 16904  011E3E  EC02  F0BD         	call	_StringMatch	;wreg free
 16905  011E42  0900               	iorlw	0
 16906  011E44  B4D8               	btfsc	status,2,c
 16907  011E46  D064               	goto	l15595
 16908                           
 16909                           ;StringCommand.c: 668: {
 16910                           ;StringCommand.c: 669: INTCONbits.GIE = 0;
 16911  011E48  9EF2               	bcf	intcon,7,c	;volatile
 16912                           
 16913                           ;StringCommand.c: 670: Send_Config2(0b00000001, SubLightON);
 16914  011E4A  0E09               	movlw	low _SubLightON
 16915  011E4C  0101               	movlb	1	; () banked
 16916  011E4E  6F7F               	movwf	Send_Config2@data& (0+255),b
 16917  011E50  0EEE               	movlw	high _SubLightON
 16918  011E52  0101               	movlb	1	; () banked
 16919  011E54  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 16920  011E56  0E01               	movlw	1
 16921  011E58  EC80  F0BC         	call	_Send_Config2
 16922                           
 16923                           ;StringCommand.c: 671: Send_Config2(0b00000001, SubLightON);
 16924  011E5C  0E09               	movlw	low _SubLightON
 16925  011E5E  0101               	movlb	1	; () banked
 16926  011E60  6F7F               	movwf	Send_Config2@data& (0+255),b
 16927  011E62  0EEE               	movlw	high _SubLightON
 16928  011E64  0101               	movlb	1	; () banked
 16929  011E66  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 16930  011E68  0E01               	movlw	1
 16931  011E6A  EC80  F0BC         	call	_Send_Config2
 16932                           
 16933                           ;StringCommand.c: 672: Send_Config2(0b00000001, SubLightON);
 16934  011E6E  0E09               	movlw	low _SubLightON
 16935  011E70  0101               	movlb	1	; () banked
 16936  011E72  6F7F               	movwf	Send_Config2@data& (0+255),b
 16937  011E74  0EEE               	movlw	high _SubLightON
 16938  011E76  0101               	movlb	1	; () banked
 16939  011E78  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 16940  011E7A  0E01               	movlw	1
 16941  011E7C  EC80  F0BC         	call	_Send_Config2
 16942                           
 16943                           ;StringCommand.c: 673: Send_Config2(0b00000001, SubLightON);
 16944  011E80  0E09               	movlw	low _SubLightON
 16945  011E82  0101               	movlb	1	; () banked
 16946  011E84  6F7F               	movwf	Send_Config2@data& (0+255),b
 16947  011E86  0EEE               	movlw	high _SubLightON
 16948  011E88  0101               	movlb	1	; () banked
 16949  011E8A  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 16950  011E8C  0E01               	movlw	1
 16951  011E8E  EC80  F0BC         	call	_Send_Config2
 16952                           
 16953                           ;StringCommand.c: 674: Send_Config2(0b00000001, SubLightON);
 16954  011E92  0E09               	movlw	low _SubLightON
 16955  011E94  0101               	movlb	1	; () banked
 16956  011E96  6F7F               	movwf	Send_Config2@data& (0+255),b
 16957  011E98  0EEE               	movlw	high _SubLightON
 16958  011E9A  0101               	movlb	1	; () banked
 16959  011E9C  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 16960  011E9E  0E01               	movlw	1
 16961  011EA0  EC80  F0BC         	call	_Send_Config2
 16962                           
 16963                           ;StringCommand.c: 675: Send_Config2(0b00000001, SubLightON);
 16964  011EA4  0E09               	movlw	low _SubLightON
 16965  011EA6  0101               	movlb	1	; () banked
 16966  011EA8  6F7F               	movwf	Send_Config2@data& (0+255),b
 16967  011EAA  0EEE               	movlw	high _SubLightON
 16968  011EAC  0101               	movlb	1	; () banked
 16969  011EAE  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 16970  011EB0  0E01               	movlw	1
 16971  011EB2  EC80  F0BC         	call	_Send_Config2
 16972                           
 16973                           ;StringCommand.c: 676: Send_Config2(0b00000001, SubLightON);
 16974  011EB6  0E09               	movlw	low _SubLightON
 16975  011EB8  0101               	movlb	1	; () banked
 16976  011EBA  6F7F               	movwf	Send_Config2@data& (0+255),b
 16977  011EBC  0EEE               	movlw	high _SubLightON
 16978  011EBE  0101               	movlb	1	; () banked
 16979  011EC0  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 16980  011EC2  0E01               	movlw	1
 16981  011EC4  EC80  F0BC         	call	_Send_Config2
 16982                           
 16983                           ;StringCommand.c: 677: Send_Config2(0b00000001, SubLightON);
 16984  011EC8  0E09               	movlw	low _SubLightON
 16985  011ECA  0101               	movlb	1	; () banked
 16986  011ECC  6F7F               	movwf	Send_Config2@data& (0+255),b
 16987  011ECE  0EEE               	movlw	high _SubLightON
 16988  011ED0  0101               	movlb	1	; () banked
 16989  011ED2  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 16990  011ED4  0E01               	movlw	1
 16991  011ED6  EC80  F0BC         	call	_Send_Config2
 16992                           
 16993                           ;StringCommand.c: 678: Send_Config2(0b00000001, SubLightON);
 16994  011EDA  0E09               	movlw	low _SubLightON
 16995  011EDC  0101               	movlb	1	; () banked
 16996  011EDE  6F7F               	movwf	Send_Config2@data& (0+255),b
 16997  011EE0  0EEE               	movlw	high _SubLightON
 16998  011EE2  0101               	movlb	1	; () banked
 16999  011EE4  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 17000  011EE6  0E01               	movlw	1
 17001  011EE8  EC80  F0BC         	call	_Send_Config2
 17002                           
 17003                           ;StringCommand.c: 679: INTCONbits.GIE = 1;
 17004  011EEC  8EF2               	bsf	intcon,7,c	;volatile
 17005                           
 17006                           ;StringCommand.c: 680: UARTstring("Joe's room light On");
 17007  011EEE  0E8D               	movlw	low STR_256
 17008  011EF0  0101               	movlb	1	; () banked
 17009  011EF2  6F7F               	movwf	UARTstring@data& (0+255),b
 17010  011EF4  0EF7               	movlw	high STR_256
 17011  011EF6  0101               	movlb	1	; () banked
 17012  011EF8  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17013  011EFA  EC24  F0BA         	call	_UARTstring	;wreg free
 17014                           
 17015                           ;StringCommand.c: 681: LCDdisplayFeedback("Joe room lt On");
 17016  011EFE  0EEF               	movlw	low STR_257
 17017  011F00  0101               	movlb	1	; () banked
 17018  011F02  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 17019  011F04  0EFB               	movlw	high STR_257
 17020  011F06  0101               	movlb	1	; () banked
 17021  011F08  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 17022  011F0A  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 17023                           
 17024                           ;StringCommand.c: 682: }
 17025  011F0E  D3F4               	goto	l685
 17026  011F10                     l15595:
 17027                           
 17028                           ;StringCommand.c: 683: else if (StringMatch(Input, "joesroomlight=off"))
 17029  011F10  C1C2  F174         	movff	Command@Input,StringMatch@This
 17030  011F14  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 17031  011F18  0E80               	movlw	low STR_258
 17032  011F1A  0101               	movlb	1	; () banked
 17033  011F1C  6F76               	movwf	StringMatch@That& (0+255),b
 17034  011F1E  0EF8               	movlw	high STR_258
 17035  011F20  0101               	movlb	1	; () banked
 17036  011F22  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 17037  011F24  EC02  F0BD         	call	_StringMatch	;wreg free
 17038  011F28  0900               	iorlw	0
 17039  011F2A  B4D8               	btfsc	status,2,c
 17040  011F2C  D064               	goto	l15607
 17041                           
 17042                           ;StringCommand.c: 684: {
 17043                           ;StringCommand.c: 685: INTCONbits.GIE = 0;
 17044  011F2E  9EF2               	bcf	intcon,7,c	;volatile
 17045                           
 17046                           ;StringCommand.c: 686: Send_Config2(0b00000001, SubLightOFF);
 17047  011F30  0EF9               	movlw	low _SubLightOFF
 17048  011F32  0101               	movlb	1	; () banked
 17049  011F34  6F7F               	movwf	Send_Config2@data& (0+255),b
 17050  011F36  0EED               	movlw	high _SubLightOFF
 17051  011F38  0101               	movlb	1	; () banked
 17052  011F3A  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 17053  011F3C  0E01               	movlw	1
 17054  011F3E  EC80  F0BC         	call	_Send_Config2
 17055                           
 17056                           ;StringCommand.c: 687: Send_Config2(0b00000001, SubLightOFF);
 17057  011F42  0EF9               	movlw	low _SubLightOFF
 17058  011F44  0101               	movlb	1	; () banked
 17059  011F46  6F7F               	movwf	Send_Config2@data& (0+255),b
 17060  011F48  0EED               	movlw	high _SubLightOFF
 17061  011F4A  0101               	movlb	1	; () banked
 17062  011F4C  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 17063  011F4E  0E01               	movlw	1
 17064  011F50  EC80  F0BC         	call	_Send_Config2
 17065                           
 17066                           ;StringCommand.c: 688: Send_Config2(0b00000001, SubLightOFF);
 17067  011F54  0EF9               	movlw	low _SubLightOFF
 17068  011F56  0101               	movlb	1	; () banked
 17069  011F58  6F7F               	movwf	Send_Config2@data& (0+255),b
 17070  011F5A  0EED               	movlw	high _SubLightOFF
 17071  011F5C  0101               	movlb	1	; () banked
 17072  011F5E  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 17073  011F60  0E01               	movlw	1
 17074  011F62  EC80  F0BC         	call	_Send_Config2
 17075                           
 17076                           ;StringCommand.c: 689: Send_Config2(0b00000001, SubLightOFF);
 17077  011F66  0EF9               	movlw	low _SubLightOFF
 17078  011F68  0101               	movlb	1	; () banked
 17079  011F6A  6F7F               	movwf	Send_Config2@data& (0+255),b
 17080  011F6C  0EED               	movlw	high _SubLightOFF
 17081  011F6E  0101               	movlb	1	; () banked
 17082  011F70  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 17083  011F72  0E01               	movlw	1
 17084  011F74  EC80  F0BC         	call	_Send_Config2
 17085                           
 17086                           ;StringCommand.c: 690: Send_Config2(0b00000001, SubLightOFF);
 17087  011F78  0EF9               	movlw	low _SubLightOFF
 17088  011F7A  0101               	movlb	1	; () banked
 17089  011F7C  6F7F               	movwf	Send_Config2@data& (0+255),b
 17090  011F7E  0EED               	movlw	high _SubLightOFF
 17091  011F80  0101               	movlb	1	; () banked
 17092  011F82  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 17093  011F84  0E01               	movlw	1
 17094  011F86  EC80  F0BC         	call	_Send_Config2
 17095                           
 17096                           ;StringCommand.c: 691: Send_Config2(0b00000001, SubLightOFF);
 17097  011F8A  0EF9               	movlw	low _SubLightOFF
 17098  011F8C  0101               	movlb	1	; () banked
 17099  011F8E  6F7F               	movwf	Send_Config2@data& (0+255),b
 17100  011F90  0EED               	movlw	high _SubLightOFF
 17101  011F92  0101               	movlb	1	; () banked
 17102  011F94  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 17103  011F96  0E01               	movlw	1
 17104  011F98  EC80  F0BC         	call	_Send_Config2
 17105                           
 17106                           ;StringCommand.c: 692: Send_Config2(0b00000001, SubLightOFF);
 17107  011F9C  0EF9               	movlw	low _SubLightOFF
 17108  011F9E  0101               	movlb	1	; () banked
 17109  011FA0  6F7F               	movwf	Send_Config2@data& (0+255),b
 17110  011FA2  0EED               	movlw	high _SubLightOFF
 17111  011FA4  0101               	movlb	1	; () banked
 17112  011FA6  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 17113  011FA8  0E01               	movlw	1
 17114  011FAA  EC80  F0BC         	call	_Send_Config2
 17115                           
 17116                           ;StringCommand.c: 693: Send_Config2(0b00000001, SubLightOFF);
 17117  011FAE  0EF9               	movlw	low _SubLightOFF
 17118  011FB0  0101               	movlb	1	; () banked
 17119  011FB2  6F7F               	movwf	Send_Config2@data& (0+255),b
 17120  011FB4  0EED               	movlw	high _SubLightOFF
 17121  011FB6  0101               	movlb	1	; () banked
 17122  011FB8  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 17123  011FBA  0E01               	movlw	1
 17124  011FBC  EC80  F0BC         	call	_Send_Config2
 17125                           
 17126                           ;StringCommand.c: 694: Send_Config2(0b00000001, SubLightOFF);
 17127  011FC0  0EF9               	movlw	low _SubLightOFF
 17128  011FC2  0101               	movlb	1	; () banked
 17129  011FC4  6F7F               	movwf	Send_Config2@data& (0+255),b
 17130  011FC6  0EED               	movlw	high _SubLightOFF
 17131  011FC8  0101               	movlb	1	; () banked
 17132  011FCA  6F80               	movwf	(Send_Config2@data+1)& (0+255),b
 17133  011FCC  0E01               	movlw	1
 17134  011FCE  EC80  F0BC         	call	_Send_Config2
 17135                           
 17136                           ;StringCommand.c: 695: INTCONbits.GIE = 1;
 17137  011FD2  8EF2               	bsf	intcon,7,c	;volatile
 17138                           
 17139                           ;StringCommand.c: 696: UARTstring("Joes room light Off");
 17140  011FD4  0E65               	movlw	low STR_259
 17141  011FD6  0101               	movlb	1	; () banked
 17142  011FD8  6F7F               	movwf	UARTstring@data& (0+255),b
 17143  011FDA  0EF7               	movlw	high STR_259
 17144  011FDC  0101               	movlb	1	; () banked
 17145  011FDE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17146  011FE0  EC24  F0BA         	call	_UARTstring	;wreg free
 17147                           
 17148                           ;StringCommand.c: 697: LCDdisplayFeedback("Joe room lt Off");
 17149  011FE4  0EE9               	movlw	low STR_260
 17150  011FE6  0101               	movlb	1	; () banked
 17151  011FE8  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 17152  011FEA  0EFA               	movlw	high STR_260
 17153  011FEC  0101               	movlb	1	; () banked
 17154  011FEE  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 17155  011FF0  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 17156                           
 17157                           ;StringCommand.c: 698: }
 17158  011FF4  D381               	goto	l685
 17159  011FF6                     l15607:
 17160                           
 17161                           ;StringCommand.c: 699: else
 17162                           ;StringCommand.c: 700: {
 17163                           ;StringCommand.c: 701: UARTstring("Joe's room what???");
 17164  011FF6  0EB4               	movlw	low STR_261
 17165  011FF8  0101               	movlb	1	; () banked
 17166  011FFA  6F7F               	movwf	UARTstring@data& (0+255),b
 17167  011FFC  0EF7               	movlw	high STR_261
 17168  011FFE  0101               	movlb	1	; () banked
 17169  012000  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17170  012002  EC24  F0BA         	call	_UARTstring	;wreg free
 17171                           
 17172                           ;StringCommand.c: 702: LCDdisplayFeedback("Joe room what??");
 17173  012006  0E49               	movlw	low STR_262
 17174  012008  0101               	movlb	1	; () banked
 17175  01200A  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 17176  01200C  0EFA               	movlw	high STR_262
 17177  01200E  0101               	movlb	1	; () banked
 17178  012010  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 17179  012012  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 17180                           
 17181                           ;StringCommand.c: 703: }
 17182                           ;StringCommand.c: 704: }
 17183  012016  D370               	goto	l685
 17184  012018                     l15609:
 17185                           
 17186                           ;StringCommand.c: 705: else
 17187                           ;StringCommand.c: 706: {
 17188                           ;StringCommand.c: 707: UARTstring("Joes Room Help Menu\r\n\n");
 17189  012018  0E76               	movlw	low STR_263
 17190  01201A  0101               	movlb	1	; () banked
 17191  01201C  6F7F               	movwf	UARTstring@data& (0+255),b
 17192  01201E  0EF6               	movlw	high STR_263
 17193  012020  0101               	movlb	1	; () banked
 17194  012022  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17195  012024  EC24  F0BA         	call	_UARTstring	;wreg free
 17196                           
 17197                           ;StringCommand.c: 708: UARTstring("Devices:\r\n");
 17198  012028  0EB7               	movlw	low STR_61
 17199  01202A  0101               	movlb	1	; () banked
 17200  01202C  6F7F               	movwf	UARTstring@data& (0+255),b
 17201  01202E  0EFD               	movlw	high STR_61
 17202  012030  0101               	movlb	1	; () banked
 17203  012032  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17204  012034  EC24  F0BA         	call	_UARTstring	;wreg free
 17205                           
 17206                           ;StringCommand.c: 709: UARTstring("Light\r\n\n");
 17207  012038  0E86               	movlw	low STR_265
 17208  01203A  0101               	movlb	1	; () banked
 17209  01203C  6F7F               	movwf	UARTstring@data& (0+255),b
 17210  01203E  0EFE               	movlw	high STR_265
 17211  012040  0101               	movlb	1	; () banked
 17212  012042  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17213  012044  EC24  F0BA         	call	_UARTstring	;wreg free
 17214                           
 17215                           ;StringCommand.c: 710: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 17216  012048  0EEB               	movlw	low STR_64
 17217  01204A  0101               	movlb	1	; () banked
 17218  01204C  6F7F               	movwf	UARTstring@data& (0+255),b
 17219  01204E  0EEE               	movlw	high STR_64
 17220  012050  0101               	movlb	1	; () banked
 17221  012052  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17222  012054  EC24  F0BA         	call	_UARTstring	;wreg free
 17223                           
 17224                           ;StringCommand.c: 711: UARTstring("i.e. Joes room light = On\r\n");
 17225  012058  0E27               	movlw	low STR_267
 17226  01205A  0101               	movlb	1	; () banked
 17227  01205C  6F7F               	movwf	UARTstring@data& (0+255),b
 17228  01205E  0EF5               	movlw	high STR_267
 17229  012060  0101               	movlb	1	; () banked
 17230  012062  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17231  012064  EC24  F0BA         	call	_UARTstring	;wreg free
 17232                           
 17233                           ;StringCommand.c: 712: LCD_Scroll("Joe room Menu");
 17234  012068  0E9B               	movlw	low STR_268
 17235  01206A  0101               	movlb	1	; () banked
 17236  01206C  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17237  01206E  0EFC               	movlw	high STR_268
 17238  012070  0101               	movlb	1	; () banked
 17239  012072  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17240  012074  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17241                           
 17242                           ;StringCommand.c: 713: LCD_Scroll("Devices:");
 17243  012078  0E8F               	movlw	low STR_67
 17244  01207A  0101               	movlb	1	; () banked
 17245  01207C  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17246  01207E  0EFE               	movlw	high STR_67
 17247  012080  0101               	movlb	1	; () banked
 17248  012082  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17249  012084  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17250                           
 17251                           ;StringCommand.c: 714: LCD_Scroll("Light");
 17252  012088  0EA7               	movlw	low STR_93
 17253  01208A  0101               	movlb	1	; () banked
 17254  01208C  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17255  01208E  0EFF               	movlw	high STR_93
 17256  012090  0101               	movlb	1	; () banked
 17257  012092  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17258  012094  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17259                           
 17260                           ;StringCommand.c: 715: }
 17261                           ;StringCommand.c: 716: }
 17262  012098  D32F               	goto	l685
 17263  01209A                     l15617:
 17264                           
 17265                           ;StringCommand.c: 718: else if (StringMatch(Input, "?"))
 17266  01209A  C1C2  F174         	movff	Command@Input,StringMatch@This
 17267  01209E  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 17268  0120A2  0E17               	movlw	low (STR_83+14)
 17269  0120A4  0101               	movlb	1	; () banked
 17270  0120A6  6F76               	movwf	StringMatch@That& (0+255),b
 17271  0120A8  0EFA               	movlw	high (STR_83+14)
 17272  0120AA  0101               	movlb	1	; () banked
 17273  0120AC  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 17274  0120AE  EC02  F0BD         	call	_StringMatch	;wreg free
 17275  0120B2  0900               	iorlw	0
 17276  0120B4  B4D8               	btfsc	status,2,c
 17277  0120B6  D15E               	goto	l15669
 17278                           
 17279                           ;StringCommand.c: 719: {
 17280                           ;StringCommand.c: 720: UARTstring("Devices:\r\n\n");
 17281  0120B8  0E6F               	movlw	low STR_272
 17282  0120BA  0101               	movlb	1	; () banked
 17283  0120BC  6F7F               	movwf	UARTstring@data& (0+255),b
 17284  0120BE  0EFD               	movlw	high STR_272
 17285  0120C0  0101               	movlb	1	; () banked
 17286  0120C2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17287  0120C4  EC24  F0BA         	call	_UARTstring	;wreg free
 17288                           
 17289                           ;StringCommand.c: 721: UARTstring("Bedroom\r\n");
 17290  0120C8  0E0E               	movlw	low STR_273
 17291  0120CA  0101               	movlb	1	; () banked
 17292  0120CC  6F7F               	movwf	UARTstring@data& (0+255),b
 17293  0120CE  0EFE               	movlw	high STR_273
 17294  0120D0  0101               	movlb	1	; () banked
 17295  0120D2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17296  0120D4  EC24  F0BA         	call	_UARTstring	;wreg free
 17297                           
 17298                           ;StringCommand.c: 722: UARTstring("Livingroom\r\n");
 17299  0120D8  0EE0               	movlw	low STR_274
 17300  0120DA  0101               	movlb	1	; () banked
 17301  0120DC  6F7F               	movwf	UARTstring@data& (0+255),b
 17302  0120DE  0EFC               	movlw	high STR_274
 17303  0120E0  0101               	movlb	1	; () banked
 17304  0120E2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17305  0120E4  EC24  F0BA         	call	_UARTstring	;wreg free
 17306                           
 17307                           ;StringCommand.c: 723: UARTstring("Joes room\r\n");
 17308  0120E8  0E87               	movlw	low STR_275
 17309  0120EA  0101               	movlb	1	; () banked
 17310  0120EC  6F7F               	movwf	UARTstring@data& (0+255),b
 17311  0120EE  0EFD               	movlw	high STR_275
 17312  0120F0  0101               	movlb	1	; () banked
 17313  0120F2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17314  0120F4  EC24  F0BA         	call	_UARTstring	;wreg free
 17315                           
 17316                           ;StringCommand.c: 724: UARTstring("Christmas Tree\r\n");
 17317  0120F8  0E1D               	movlw	low STR_276
 17318  0120FA  0101               	movlb	1	; () banked
 17319  0120FC  6F7F               	movwf	UARTstring@data& (0+255),b
 17320  0120FE  0EF9               	movlw	high STR_276
 17321  012100  0101               	movlb	1	; () banked
 17322  012102  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17323  012104  EC24  F0BA         	call	_UARTstring	;wreg free
 17324                           
 17325                           ;StringCommand.c: 725: UARTstring("Contrast\r\n");
 17326  012108  0ECD               	movlw	low STR_277
 17327  01210A  0101               	movlb	1	; () banked
 17328  01210C  6F7F               	movwf	UARTstring@data& (0+255),b
 17329  01210E  0EFD               	movlw	high STR_277
 17330  012110  0101               	movlb	1	; () banked
 17331  012112  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17332  012114  EC24  F0BA         	call	_UARTstring	;wreg free
 17333                           
 17334                           ;StringCommand.c: 726: UARTstring("ADC\r\n");
 17335  012118  0E83               	movlw	low STR_278
 17336  01211A  0101               	movlb	1	; () banked
 17337  01211C  6F7F               	movwf	UARTstring@data& (0+255),b
 17338  01211E  0EFF               	movlw	high STR_278
 17339  012120  0101               	movlb	1	; () banked
 17340  012122  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17341  012124  EC24  F0BA         	call	_UARTstring	;wreg free
 17342                           
 17343                           ;StringCommand.c: 727: UARTstring("RTC\r\n");
 17344  012128  0E58               	movlw	low (STR_228+18)
 17345  01212A  0101               	movlb	1	; () banked
 17346  01212C  6F7F               	movwf	UARTstring@data& (0+255),b
 17347  01212E  0EF6               	movlw	high (STR_228+18)
 17348  012130  0101               	movlb	1	; () banked
 17349  012132  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17350  012134  EC24  F0BA         	call	_UARTstring	;wreg free
 17351                           
 17352                           ;StringCommand.c: 728: UARTstring("Baud\r\n\n");
 17353  012138  0EFA               	movlw	low STR_280
 17354  01213A  0101               	movlb	1	; () banked
 17355  01213C  6F7F               	movwf	UARTstring@data& (0+255),b
 17356  01213E  0EFE               	movlw	high STR_280
 17357  012140  0101               	movlb	1	; () banked
 17358  012142  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17359  012144  EC24  F0BA         	call	_UARTstring	;wreg free
 17360                           
 17361                           ;StringCommand.c: 729: UARTstring("For Device help enter device followed by a '?' \r\n")
      +                          ;
 17362  012148  0EC1               	movlw	low STR_281
 17363  01214A  0101               	movlb	1	; () banked
 17364  01214C  6F7F               	movwf	UARTstring@data& (0+255),b
 17365  01214E  0EF0               	movlw	high STR_281
 17366  012150  0101               	movlb	1	; () banked
 17367  012152  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17368  012154  EC24  F0BA         	call	_UARTstring	;wreg free
 17369                           
 17370                           ;StringCommand.c: 730: UARTstring("i.e.  Livingroom?\r\n\r\n");
 17371  012158  0EBB               	movlw	low STR_282
 17372  01215A  0101               	movlb	1	; () banked
 17373  01215C  6F7F               	movwf	UARTstring@data& (0+255),b
 17374  01215E  0EF6               	movlw	high STR_282
 17375  012160  0101               	movlb	1	; () banked
 17376  012162  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17377  012164  EC24  F0BA         	call	_UARTstring	;wreg free
 17378                           
 17379                           ;StringCommand.c: 731: UARTstring("Current Time\r\n");
 17380  012168  0E59               	movlw	low STR_283
 17381  01216A  0101               	movlb	1	; () banked
 17382  01216C  6F7F               	movwf	UARTstring@data& (0+255),b
 17383  01216E  0EFB               	movlw	high STR_283
 17384  012170  0101               	movlb	1	; () banked
 17385  012172  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17386  012174  EC24  F0BA         	call	_UARTstring	;wreg free
 17387                           
 17388                           ;StringCommand.c: 732: SetLCDcursor(0, 0);
 17389  012178  0E00               	movlw	0
 17390  01217A  0101               	movlb	1	; () banked
 17391  01217C  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 17392  01217E  0E00               	movlw	0
 17393  012180  EC8F  F005         	call	_SetLCDcursor
 17394                           
 17395                           ;StringCommand.c: 733: LCDPrintString("Help Menu");
 17396  012184  0E68               	movlw	low STR_284
 17397  012186  0101               	movlb	1	; () banked
 17398  012188  6F82               	movwf	LCDPrintString@Text& (0+255),b
 17399  01218A  0EFE               	movlw	high STR_284
 17400  01218C  0101               	movlb	1	; () banked
 17401  01218E  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 17402  012190  EC35  F0BE         	call	_LCDPrintString	;wreg free
 17403                           
 17404                           ;StringCommand.c: 734: if(!READ_RTC_TIME())
 17405  012194  ECBF  F0B3         	call	_READ_RTC_TIME	;wreg free
 17406  012198  0900               	iorlw	0
 17407  01219A  A4D8               	btfss	status,2,c
 17408  01219C  D07D               	goto	l15643
 17409                           
 17410                           ;StringCommand.c: 735: {
 17411                           ;StringCommand.c: 736: SprintDate(buf, NowTime, 0);
 17412  01219E  0E00               	movlw	low Command@buf
 17413  0121A0  0101               	movlb	1	; () banked
 17414  0121A2  6FB6               	movwf	SprintDate@ReturnBuf& (0+255),b
 17415  0121A4  0E06               	movlw	high Command@buf
 17416  0121A6  0101               	movlb	1	; () banked
 17417  0121A8  6FB7               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 17418  0121AA  EE21  F009         	lfsr	2,_NowTime
 17419  0121AE  EE01  F0B8         	lfsr	0,SprintDate@DisplayTime
 17420  0121B2  0E08               	movlw	8
 17421  0121B4                     u20061:
 17422  0121B4  CFDB FFEB          	movff	plusw2,plusw0
 17423  0121B8  06E8               	decf	wreg,f,c
 17424  0121BA  E2FC               	bc	u20061
 17425  0121BC  0E00               	movlw	0
 17426  0121BE  0101               	movlb	1	; () banked
 17427  0121C0  6FC1               	movwf	SprintDate@Military& (0+255),b
 17428  0121C2  EC57  F0B2         	call	_SprintDate	;wreg free
 17429                           
 17430                           ;StringCommand.c: 737: UARTstring(buf);
 17431  0121C6  0E00               	movlw	low Command@buf
 17432  0121C8  0101               	movlb	1	; () banked
 17433  0121CA  6F7F               	movwf	UARTstring@data& (0+255),b
 17434  0121CC  0E06               	movlw	high Command@buf
 17435  0121CE  0101               	movlb	1	; () banked
 17436  0121D0  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17437  0121D2  EC24  F0BA         	call	_UARTstring	;wreg free
 17438                           
 17439                           ;StringCommand.c: 738: UARTstring("\r\n");
 17440  0121D6  0ECE               	movlw	low (STR_282+19)
 17441  0121D8  0101               	movlb	1	; () banked
 17442  0121DA  6F7F               	movwf	UARTstring@data& (0+255),b
 17443  0121DC  0EF6               	movlw	high (STR_282+19)
 17444  0121DE  0101               	movlb	1	; () banked
 17445  0121E0  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17446  0121E2  EC24  F0BA         	call	_UARTstring	;wreg free
 17447                           
 17448                           ;StringCommand.c: 740: if(NowTime.HoursAM_PM)
 17449  0121E6  0101               	movlb	1	; () banked
 17450  0121E8  510D               	movf	(_NowTime+4)& (0+255),w,b
 17451  0121EA  B4D8               	btfsc	status,2,c
 17452  0121EC  D023               	goto	l15637
 17453                           
 17454                           ; BSR set to: 1
 17455                           ;StringCommand.c: 741: {
 17456                           ;StringCommand.c: 742: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 17457  0121EE  0E00               	movlw	low Command@buf
 17458  0121F0  0101               	movlb	1	; () banked
 17459  0121F2  6F8A               	movwf	sprintf@sp& (0+255),b
 17460  0121F4  0E06               	movlw	high Command@buf
 17461  0121F6  0101               	movlb	1	; () banked
 17462  0121F8  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 17463  0121FA  0EA4               	movlw	low STR_226
 17464  0121FC  0101               	movlb	1	; () banked
 17465  0121FE  6F8C               	movwf	sprintf@f& (0+255),b
 17466  012200  0EF6               	movlw	high STR_226
 17467  012202  0101               	movlb	1	; () banked
 17468  012204  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 17469  012206  C110  F18E         	movff	_NowTime+7,?_sprintf+4
 17470  01220A  0101               	movlb	1	; () banked
 17471  01220C  6B8F               	clrf	(?_sprintf+5)& (0+255),b
 17472  01220E  C10F  F190         	movff	_NowTime+6,?_sprintf+6
 17473  012212  0101               	movlb	1	; () banked
 17474  012214  6B91               	clrf	(?_sprintf+7)& (0+255),b
 17475  012216  C10B  F192         	movff	_NowTime+2,?_sprintf+8
 17476  01221A  0101               	movlb	1	; () banked
 17477  01221C  6B93               	clrf	(?_sprintf+9)& (0+255),b
 17478  01221E  C10A  F194         	movff	_NowTime+1,?_sprintf+10
 17479  012222  0101               	movlb	1	; () banked
 17480  012224  6B95               	clrf	(?_sprintf+11)& (0+255),b
 17481  012226  C109  F196         	movff	_NowTime,?_sprintf+12
 17482  01222A  0101               	movlb	1	; () banked
 17483  01222C  6B97               	clrf	(?_sprintf+13)& (0+255),b
 17484  01222E  EC87  F093         	call	_sprintf	;wreg free
 17485                           
 17486                           ;StringCommand.c: 743: }
 17487  012232  D023               	goto	l15639
 17488  012234                     l15637:
 17489                           
 17490                           ;StringCommand.c: 744: else
 17491                           ;StringCommand.c: 745: {
 17492                           ;StringCommand.c: 746: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 17493  012234  0E00               	movlw	low Command@buf
 17494  012236  0101               	movlb	1	; () banked
 17495  012238  6F8A               	movwf	sprintf@sp& (0+255),b
 17496  01223A  0E06               	movlw	high Command@buf
 17497  01223C  0101               	movlb	1	; () banked
 17498  01223E  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 17499  012240  0E8D               	movlw	low STR_227
 17500  012242  0101               	movlb	1	; () banked
 17501  012244  6F8C               	movwf	sprintf@f& (0+255),b
 17502  012246  0EF6               	movlw	high STR_227
 17503  012248  0101               	movlb	1	; () banked
 17504  01224A  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 17505  01224C  C110  F18E         	movff	_NowTime+7,?_sprintf+4
 17506  012250  0101               	movlb	1	; () banked
 17507  012252  6B8F               	clrf	(?_sprintf+5)& (0+255),b
 17508  012254  C10F  F190         	movff	_NowTime+6,?_sprintf+6
 17509  012258  0101               	movlb	1	; () banked
 17510  01225A  6B91               	clrf	(?_sprintf+7)& (0+255),b
 17511  01225C  C10B  F192         	movff	_NowTime+2,?_sprintf+8
 17512  012260  0101               	movlb	1	; () banked
 17513  012262  6B93               	clrf	(?_sprintf+9)& (0+255),b
 17514  012264  C10A  F194         	movff	_NowTime+1,?_sprintf+10
 17515  012268  0101               	movlb	1	; () banked
 17516  01226A  6B95               	clrf	(?_sprintf+11)& (0+255),b
 17517  01226C  C109  F196         	movff	_NowTime,?_sprintf+12
 17518  012270  0101               	movlb	1	; () banked
 17519  012272  6B97               	clrf	(?_sprintf+13)& (0+255),b
 17520  012274  EC87  F093         	call	_sprintf	;wreg free
 17521  012278  D000               	goto	l15639
 17522  01227A                     l15639:
 17523                           
 17524                           ;StringCommand.c: 747: }
 17525                           ;StringCommand.c: 748: SetLCDcursor(1, 0);
 17526  01227A  0E00               	movlw	0
 17527  01227C  0101               	movlb	1	; () banked
 17528  01227E  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 17529  012280  0E01               	movlw	1
 17530  012282  EC8F  F005         	call	_SetLCDcursor
 17531                           
 17532                           ;StringCommand.c: 749: LCDPrintString(buf);
 17533  012286  0E00               	movlw	low Command@buf
 17534  012288  0101               	movlb	1	; () banked
 17535  01228A  6F82               	movwf	LCDPrintString@Text& (0+255),b
 17536  01228C  0E06               	movlw	high Command@buf
 17537  01228E  0101               	movlb	1	; () banked
 17538  012290  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 17539  012292  EC35  F0BE         	call	_LCDPrintString	;wreg free
 17540                           
 17541                           ;StringCommand.c: 750: }
 17542  012296  D016               	goto	l821
 17543  012298                     l15643:
 17544                           
 17545                           ;StringCommand.c: 751: else
 17546                           ;StringCommand.c: 752: {
 17547                           ;StringCommand.c: 753: UARTstring("ERROR: Can't Read RTC\r\n");
 17548  012298  0E46               	movlw	low STR_228
 17549  01229A  0101               	movlb	1	; () banked
 17550  01229C  6F7F               	movwf	UARTstring@data& (0+255),b
 17551  01229E  0EF6               	movlw	high STR_228
 17552  0122A0  0101               	movlb	1	; () banked
 17553  0122A2  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17554  0122A4  EC24  F0BA         	call	_UARTstring	;wreg free
 17555                           
 17556                           ;StringCommand.c: 754: SetLCDcursor(1, 0);
 17557  0122A8  0E00               	movlw	0
 17558  0122AA  0101               	movlb	1	; () banked
 17559  0122AC  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 17560  0122AE  0E01               	movlw	1
 17561  0122B0  EC8F  F005         	call	_SetLCDcursor
 17562                           
 17563                           ;StringCommand.c: 755: LCDPrintString("RTC isnt working");
 17564  0122B4  0E61               	movlw	low STR_229
 17565  0122B6  0101               	movlb	1	; () banked
 17566  0122B8  6F82               	movwf	LCDPrintString@Text& (0+255),b
 17567  0122BA  0EF9               	movlw	high STR_229
 17568  0122BC  0101               	movlb	1	; () banked
 17569  0122BE  6F83               	movwf	(LCDPrintString@Text+1)& (0+255),b
 17570  0122C0  EC35  F0BE         	call	_LCDPrintString	;wreg free
 17571  0122C4                     l821:
 17572                           
 17573                           ;StringCommand.c: 756: }
 17574                           ;StringCommand.c: 757: SetLCDcursor(1, 0);
 17575  0122C4  0E00               	movlw	0
 17576  0122C6  0101               	movlb	1	; () banked
 17577  0122C8  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 17578  0122CA  0E01               	movlw	1
 17579  0122CC  EC8F  F005         	call	_SetLCDcursor
 17580                           
 17581                           ;StringCommand.c: 758: LCD_Scroll("Device Menus:");
 17582  0122D0  0E47               	movlw	low STR_290
 17583  0122D2  0101               	movlb	1	; () banked
 17584  0122D4  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17585  0122D6  0EFC               	movlw	high STR_290
 17586  0122D8  0101               	movlb	1	; () banked
 17587  0122DA  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17588  0122DC  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17589                           
 17590                           ;StringCommand.c: 759: LCD_Scroll("Bedroom?");
 17591  0122E0  0E98               	movlw	low STR_291
 17592  0122E2  0101               	movlb	1	; () banked
 17593  0122E4  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17594  0122E6  0EFE               	movlw	high STR_291
 17595  0122E8  0101               	movlb	1	; () banked
 17596  0122EA  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17597  0122EC  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17598                           
 17599                           ;StringCommand.c: 760: LCD_Scroll("Livingroom?");
 17600  0122F0  0E93               	movlw	low STR_292
 17601  0122F2  0101               	movlb	1	; () banked
 17602  0122F4  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17603  0122F6  0EFD               	movlw	high STR_292
 17604  0122F8  0101               	movlb	1	; () banked
 17605  0122FA  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17606  0122FC  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17607                           
 17608                           ;StringCommand.c: 761: LCD_Scroll("Joes Room?");
 17609  012300  0ED8               	movlw	low STR_293
 17610  012302  0101               	movlb	1	; () banked
 17611  012304  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17612  012306  0EFD               	movlw	high STR_293
 17613  012308  0101               	movlb	1	; () banked
 17614  01230A  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17615  01230C  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17616                           
 17617                           ;StringCommand.c: 762: LCD_Scroll("Christmas Tree?");
 17618  012310  0E59               	movlw	low STR_294
 17619  012312  0101               	movlb	1	; () banked
 17620  012314  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17621  012316  0EFA               	movlw	high STR_294
 17622  012318  0101               	movlb	1	; () banked
 17623  01231A  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17624  01231C  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17625                           
 17626                           ;StringCommand.c: 763: LCD_Scroll("Contrast?");
 17627  012320  0E40               	movlw	low STR_295
 17628  012322  0101               	movlb	1	; () banked
 17629  012324  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17630  012326  0EFE               	movlw	high STR_295
 17631  012328  0101               	movlb	1	; () banked
 17632  01232A  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17633  01232C  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17634                           
 17635                           ;StringCommand.c: 764: LCD_Scroll("ADC?");
 17636  012330  0ECC               	movlw	low STR_296
 17637  012332  0101               	movlb	1	; () banked
 17638  012334  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17639  012336  0EFF               	movlw	high STR_296
 17640  012338  0101               	movlb	1	; () banked
 17641  01233A  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17642  01233C  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17643                           
 17644                           ;StringCommand.c: 765: LCD_Scroll("RTC?");
 17645  012340  0ED1               	movlw	low STR_297
 17646  012342  0101               	movlb	1	; () banked
 17647  012344  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17648  012346  0EFF               	movlw	high STR_297
 17649  012348  0101               	movlb	1	; () banked
 17650  01234A  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17651  01234C  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17652                           
 17653                           ;StringCommand.c: 766: LCD_Scroll("Baud?");
 17654  012350  0E8F               	movlw	low STR_298
 17655  012352  0101               	movlb	1	; () banked
 17656  012354  6F83               	movwf	LCD_Scroll@This& (0+255),b
 17657  012356  0EFF               	movlw	high STR_298
 17658  012358  0101               	movlb	1	; () banked
 17659  01235A  6F84               	movwf	(LCD_Scroll@This+1)& (0+255),b
 17660  01235C  EC2A  F0A7         	call	_LCD_Scroll	;wreg free
 17661  012360                     l15667:
 17662                           
 17663                           ;StringCommand.c: 767: LCDclearCount =0;
 17664  012360  0E00               	movlw	0
 17665  012362  0101               	movlb	1	; () banked
 17666  012364  6FC7               	movwf	_LCDclearCount& (0+255),b
 17667  012366  0E00               	movlw	0
 17668  012368  6FC8               	movwf	(_LCDclearCount+1)& (0+255),b
 17669  01236A  0E00               	movlw	0
 17670  01236C  6FC9               	movwf	(_LCDclearCount+2)& (0+255),b
 17671  01236E  0E00               	movlw	0
 17672  012370  6FCA               	movwf	(_LCDclearCount+3)& (0+255),b
 17673                           
 17674                           ;StringCommand.c: 768: }
 17675  012372  D1C2               	goto	l685
 17676  012374                     l15669:
 17677                           
 17678                           ;StringCommand.c: 769: else if(StringMatch(Input, "baud?"))
 17679  012374  C1C2  F174         	movff	Command@Input,StringMatch@This
 17680  012378  C1C3  F175         	movff	Command@Input+1,StringMatch@This+1
 17681  01237C  0E95               	movlw	low STR_299
 17682  01237E  0101               	movlb	1	; () banked
 17683  012380  6F76               	movwf	StringMatch@That& (0+255),b
 17684  012382  0EFF               	movlw	high STR_299
 17685  012384  0101               	movlb	1	; () banked
 17686  012386  6F77               	movwf	(StringMatch@That+1)& (0+255),b
 17687  012388  EC02  F0BD         	call	_StringMatch	;wreg free
 17688  01238C  0900               	iorlw	0
 17689  01238E  B4D8               	btfsc	status,2,c
 17690  012390  D029               	goto	l15677
 17691                           
 17692                           ;StringCommand.c: 770: {
 17693                           ;StringCommand.c: 772: sprintf(buf,"BAUD = %d", GetBaud());
 17694  012392  0E00               	movlw	low Command@buf
 17695  012394  0101               	movlb	1	; () banked
 17696  012396  6F8A               	movwf	sprintf@sp& (0+255),b
 17697  012398  0E06               	movlw	high Command@buf
 17698  01239A  0101               	movlb	1	; () banked
 17699  01239C  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 17700  01239E  0E4A               	movlw	low STR_300
 17701  0123A0  0101               	movlb	1	; () banked
 17702  0123A2  6F8C               	movwf	sprintf@f& (0+255),b
 17703  0123A4  0EFE               	movlw	high STR_300
 17704  0123A6  0101               	movlb	1	; () banked
 17705  0123A8  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 17706  0123AA  EC5E  F008         	call	_GetBaud	;wreg free
 17707  0123AE  C174  F18E         	movff	?_GetBaud,?_sprintf+4
 17708  0123B2  C175  F18F         	movff	?_GetBaud+1,?_sprintf+5
 17709  0123B6  C176  F190         	movff	?_GetBaud+2,?_sprintf+6
 17710  0123BA  C177  F191         	movff	?_GetBaud+3,?_sprintf+7
 17711  0123BE  EC87  F093         	call	_sprintf	;wreg free
 17712                           
 17713                           ;StringCommand.c: 773: UARTstring(buf);
 17714  0123C2  0E00               	movlw	low Command@buf
 17715  0123C4  0101               	movlb	1	; () banked
 17716  0123C6  6F7F               	movwf	UARTstring@data& (0+255),b
 17717  0123C8  0E06               	movlw	high Command@buf
 17718  0123CA  0101               	movlb	1	; () banked
 17719  0123CC  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 17720  0123CE  EC24  F0BA         	call	_UARTstring	;wreg free
 17721                           
 17722                           ;StringCommand.c: 774: LCDdisplayFeedback(buf);
 17723  0123D2  0E00               	movlw	low Command@buf
 17724  0123D4  0101               	movlb	1	; () banked
 17725  0123D6  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 17726  0123D8  0E06               	movlw	high Command@buf
 17727  0123DA  0101               	movlb	1	; () banked
 17728  0123DC  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 17729  0123DE  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 17730                           
 17731                           ;StringCommand.c: 775: }
 17732  0123E2  D18A               	goto	l685
 17733  0123E4                     l15677:
 17734                           
 17735                           ;StringCommand.c: 776: else if(StringContains(Input, "baudwillbesetto") || StringContain
      +                          s(Input, "resetto") ||
 17736                           ;StringCommand.c: 777: StringContains(Input, "setbaud") || StringContains(Input, "change
      +                          baud"))
 17737  0123E4  C1C2  F174         	movff	Command@Input,StringContains@This
 17738  0123E8  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 17739  0123EC  0E19               	movlw	low STR_301
 17740  0123EE  0101               	movlb	1	; () banked
 17741  0123F0  6F76               	movwf	StringContains@That& (0+255),b
 17742  0123F2  0EFB               	movlw	high STR_301
 17743  0123F4  0101               	movlb	1	; () banked
 17744  0123F6  6F77               	movwf	(StringContains@That+1)& (0+255),b
 17745  0123F8  ECC2  F0BC         	call	_StringContains	;wreg free
 17746  0123FC  0900               	iorlw	0
 17747  0123FE  A4D8               	btfss	status,2,c
 17748  012400  D02D               	goto	l15685
 17749  012402  C1C2  F174         	movff	Command@Input,StringContains@This
 17750  012406  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 17751  01240A  0E3A               	movlw	low STR_302
 17752  01240C  0101               	movlb	1	; () banked
 17753  01240E  6F76               	movwf	StringContains@That& (0+255),b
 17754  012410  0EFF               	movlw	high STR_302
 17755  012412  0101               	movlb	1	; () banked
 17756  012414  6F77               	movwf	(StringContains@That+1)& (0+255),b
 17757  012416  ECC2  F0BC         	call	_StringContains	;wreg free
 17758  01241A  0900               	iorlw	0
 17759  01241C  A4D8               	btfss	status,2,c
 17760  01241E  D01E               	goto	l15685
 17761  012420  C1C2  F174         	movff	Command@Input,StringContains@This
 17762  012424  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 17763  012428  0E0A               	movlw	low STR_303
 17764  01242A  0101               	movlb	1	; () banked
 17765  01242C  6F76               	movwf	StringContains@That& (0+255),b
 17766  01242E  0EFF               	movlw	high STR_303
 17767  012430  0101               	movlb	1	; () banked
 17768  012432  6F77               	movwf	(StringContains@That+1)& (0+255),b
 17769  012434  ECC2  F0BC         	call	_StringContains	;wreg free
 17770  012438  0900               	iorlw	0
 17771  01243A  A4D8               	btfss	status,2,c
 17772  01243C  D00F               	goto	l15685
 17773  01243E  C1C2  F174         	movff	Command@Input,StringContains@This
 17774  012442  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 17775  012446  0EE3               	movlw	low STR_304
 17776  012448  0101               	movlb	1	; () banked
 17777  01244A  6F76               	movwf	StringContains@That& (0+255),b
 17778  01244C  0EFD               	movlw	high STR_304
 17779  01244E  0101               	movlb	1	; () banked
 17780  012450  6F77               	movwf	(StringContains@That+1)& (0+255),b
 17781  012452  ECC2  F0BC         	call	_StringContains	;wreg free
 17782  012456  0900               	iorlw	0
 17783  012458  B4D8               	btfsc	status,2,c
 17784  01245A  D0BE               	goto	l15723
 17785  01245C                     l15685:
 17786                           
 17787                           ;StringCommand.c: 778: {
 17788                           ;StringCommand.c: 780: if (!StringContains(Input, "="))
 17789  01245C  C1C2  F174         	movff	Command@Input,StringContains@This
 17790  012460  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 17791  012464  0E05               	movlw	low (STR_201+11)
 17792  012466  0101               	movlb	1	; () banked
 17793  012468  6F76               	movwf	StringContains@That& (0+255),b
 17794  01246A  0EFD               	movlw	high (STR_201+11)
 17795  01246C  0101               	movlb	1	; () banked
 17796  01246E  6F77               	movwf	(StringContains@That+1)& (0+255),b
 17797  012470  ECC2  F0BC         	call	_StringContains	;wreg free
 17798  012474  0900               	iorlw	0
 17799  012476  A4D8               	btfss	status,2,c
 17800  012478  D007               	goto	l15689
 17801                           
 17802                           ;StringCommand.c: 781: {
 17803                           ;StringCommand.c: 782: StringAddEqual(Input);
 17804  01247A  C1C2  F183         	movff	Command@Input,StringAddEqual@Input
 17805  01247E  C1C3  F184         	movff	Command@Input+1,StringAddEqual@Input+1
 17806  012482  EC14  F0A9         	call	_StringAddEqual	;wreg free
 17807  012486  D000               	goto	l15689
 17808  012488                     l15689:
 17809                           
 17810                           ;StringCommand.c: 783: }
 17811                           ;StringCommand.c: 784: BAUDtemp = (unsigned long)GetEnteredNumber(Input);
 17812  012488  C1C2  F180         	movff	Command@Input,GetEnteredNumber@This
 17813  01248C  C1C3  F181         	movff	Command@Input+1,GetEnteredNumber@This+1
 17814  012490  EC29  F0A8         	call	_GetEnteredNumber	;wreg free
 17815  012494  C180  F6CE         	movff	?_GetEnteredNumber,Command@BAUDtemp
 17816  012498  C181  F6CF         	movff	?_GetEnteredNumber+1,Command@BAUDtemp+1
 17817  01249C  C182  F6D0         	movff	?_GetEnteredNumber+2,Command@BAUDtemp+2
 17818  0124A0  C183  F6D1         	movff	?_GetEnteredNumber+3,Command@BAUDtemp+3
 17819                           
 17820                           ;StringCommand.c: 785: if(BAUDtemp >=2400 && BAUDtemp <= 115200)
 17821  0124A4  0106               	movlb	6	; () banked
 17822  0124A6  51D1               	movf	(Command@BAUDtemp+3)& (0+255),w,b
 17823  0124A8  0106               	movlb	6	; () banked
 17824  0124AA  11D0               	iorwf	(Command@BAUDtemp+2)& (0+255),w,b
 17825  0124AC  E108               	bnz	u20140
 17826  0124AE  0E60               	movlw	96
 17827  0124B0  0106               	movlb	6	; () banked
 17828  0124B2  5DCE               	subwf	Command@BAUDtemp& (0+255),w,b
 17829  0124B4  0E09               	movlw	9
 17830  0124B6  0106               	movlb	6	; () banked
 17831  0124B8  59CF               	subwfb	(Command@BAUDtemp+1)& (0+255),w,b
 17832  0124BA  A0D8               	btfss	status,0,c
 17833  0124BC  D084               	goto	l15721
 17834  0124BE                     u20140:
 17835                           
 17836                           ; BSR set to: 6
 17837  0124BE  0106               	movlb	6	; () banked
 17838  0124C0  51D1               	movf	(Command@BAUDtemp+3)& (0+255),w,b
 17839  0124C2  E109               	bnz	u20151
 17840  0124C4  0106               	movlb	6	; () banked
 17841  0124C6  05CE               	decf	Command@BAUDtemp& (0+255),w,b
 17842  0124C8  0EC2               	movlw	194
 17843  0124CA  0106               	movlb	6	; () banked
 17844  0124CC  59CF               	subwfb	(Command@BAUDtemp+1)& (0+255),w,b
 17845  0124CE  0E01               	movlw	1
 17846  0124D0  0106               	movlb	6	; () banked
 17847  0124D2  59D0               	subwfb	(Command@BAUDtemp+2)& (0+255),w,b
 17848  0124D4  B0D8               	btfsc	status,0,c
 17849  0124D6                     u20151:
 17850  0124D6  D077               	goto	l15721
 17851                           
 17852                           ; BSR set to: 6
 17853                           ;StringCommand.c: 786: {
 17854                           ;StringCommand.c: 787: if(StringContains(Input, "withnoparitybit"))
 17855  0124D8  C1C2  F174         	movff	Command@Input,StringContains@This
 17856  0124DC  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 17857  0124E0  0E39               	movlw	low STR_306
 17858  0124E2  0101               	movlb	1	; () banked
 17859  0124E4  6F76               	movwf	StringContains@That& (0+255),b
 17860  0124E6  0EFB               	movlw	high STR_306
 17861  0124E8  0101               	movlb	1	; () banked
 17862  0124EA  6F77               	movwf	(StringContains@That+1)& (0+255),b
 17863  0124EC  ECC2  F0BC         	call	_StringContains	;wreg free
 17864  0124F0  0900               	iorlw	0
 17865  0124F2  B4D8               	btfsc	status,2,c
 17866  0124F4  D002               	goto	l15699
 17867                           
 17868                           ;StringCommand.c: 788: {
 17869                           ;StringCommand.c: 789: PARITYtemp =0;
 17870  0124F6  0E00               	movlw	0
 17871  0124F8  D045               	goto	L13
 17872  0124FA                     l15699:
 17873                           
 17874                           ;StringCommand.c: 791: else if(StringContains(Input, "withoddparitybit"))
 17875  0124FA  C1C2  F174         	movff	Command@Input,StringContains@This
 17876  0124FE  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 17877  012502  0EB6               	movlw	low STR_307
 17878  012504  0101               	movlb	1	; () banked
 17879  012506  6F76               	movwf	StringContains@That& (0+255),b
 17880  012508  0EF9               	movlw	high STR_307
 17881  01250A  0101               	movlb	1	; () banked
 17882  01250C  6F77               	movwf	(StringContains@That+1)& (0+255),b
 17883  01250E  ECC2  F0BC         	call	_StringContains	;wreg free
 17884  012512  0900               	iorlw	0
 17885  012514  B4D8               	btfsc	status,2,c
 17886  012516  D002               	goto	l15703
 17887                           
 17888                           ;StringCommand.c: 792: {
 17889                           ;StringCommand.c: 793: PARITYtemp =1;
 17890  012518  0E01               	movlw	1
 17891  01251A  D034               	goto	L13
 17892  01251C                     l15703:
 17893                           
 17894                           ;StringCommand.c: 795: else if(StringContains(Input, "withevenparitybit"))
 17895  01251C  C1C2  F174         	movff	Command@Input,StringContains@This
 17896  012520  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 17897  012524  0EB6               	movlw	low STR_308
 17898  012526  0101               	movlb	1	; () banked
 17899  012528  6F76               	movwf	StringContains@That& (0+255),b
 17900  01252A  0EF8               	movlw	high STR_308
 17901  01252C  0101               	movlb	1	; () banked
 17902  01252E  6F77               	movwf	(StringContains@That+1)& (0+255),b
 17903  012530  ECC2  F0BC         	call	_StringContains	;wreg free
 17904  012534  0900               	iorlw	0
 17905  012536  B4D8               	btfsc	status,2,c
 17906  012538  D002               	goto	l15707
 17907                           
 17908                           ;StringCommand.c: 796: {
 17909                           ;StringCommand.c: 797: PARITYtemp =2;
 17910  01253A  0E02               	movlw	2
 17911  01253C  D023               	goto	L13
 17912  01253E                     l15707:
 17913                           
 17914                           ;StringCommand.c: 799: else if(StringContains(Input, "withmarkbit"))
 17915  01253E  C1C2  F174         	movff	Command@Input,StringContains@This
 17916  012542  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 17917  012546  0E9F               	movlw	low STR_309
 17918  012548  0101               	movlb	1	; () banked
 17919  01254A  6F76               	movwf	StringContains@That& (0+255),b
 17920  01254C  0EFD               	movlw	high STR_309
 17921  01254E  0101               	movlb	1	; () banked
 17922  012550  6F77               	movwf	(StringContains@That+1)& (0+255),b
 17923  012552  ECC2  F0BC         	call	_StringContains	;wreg free
 17924  012556  0900               	iorlw	0
 17925  012558  B4D8               	btfsc	status,2,c
 17926  01255A  D002               	goto	l15711
 17927                           
 17928                           ;StringCommand.c: 800: {
 17929                           ;StringCommand.c: 801: PARITYtemp =3;
 17930  01255C  0E03               	movlw	3
 17931  01255E  D012               	goto	L13
 17932  012560                     l15711:
 17933                           
 17934                           ;StringCommand.c: 803: else if(StringContains(Input, "withspacebit"))
 17935  012560  C1C2  F174         	movff	Command@Input,StringContains@This
 17936  012564  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 17937  012568  0E3B               	movlw	low STR_310
 17938  01256A  0101               	movlb	1	; () banked
 17939  01256C  6F76               	movwf	StringContains@That& (0+255),b
 17940  01256E  0EFD               	movlw	high STR_310
 17941  012570  0101               	movlb	1	; () banked
 17942  012572  6F77               	movwf	(StringContains@That+1)& (0+255),b
 17943  012574  ECC2  F0BC         	call	_StringContains	;wreg free
 17944  012578  0900               	iorlw	0
 17945  01257A  B4D8               	btfsc	status,2,c
 17946  01257C  D002               	goto	l15715
 17947                           
 17948                           ;StringCommand.c: 804: {
 17949                           ;StringCommand.c: 805: PARITYtemp =4;
 17950  01257E  0E04               	movlw	4
 17951  012580  D001               	goto	L13
 17952  012582                     l15715:
 17953                           
 17954                           ;StringCommand.c: 807: else
 17955                           ;StringCommand.c: 808: {
 17956                           ;StringCommand.c: 809: PARITYtemp = 5;
 17957  012582  0E05               	movlw	5
 17958  012584                     L13:
 17959  012584  0106               	movlb	6	; () banked
 17960  012586  6FD4               	movwf	Command@PARITYtemp& (0+255),b
 17961  012588  0E00               	movlw	0
 17962  01258A  6FD5               	movwf	(Command@PARITYtemp+1)& (0+255),b
 17963  01258C  0E00               	movlw	0
 17964  01258E  6FD6               	movwf	(Command@PARITYtemp+2)& (0+255),b
 17965  012590  0E00               	movlw	0
 17966  012592  6FD7               	movwf	(Command@PARITYtemp+3)& (0+255),b
 17967                           
 17968                           ; BSR set to: 6
 17969                           
 17970                           ; BSR set to: 6
 17971                           
 17972                           ; BSR set to: 6
 17973                           
 17974                           ; BSR set to: 6
 17975  012594  D000               	goto	l15717
 17976  012596                     l15717:
 17977                           
 17978                           ; BSR set to: 6
 17979                           ;StringCommand.c: 810: }
 17980                           ;StringCommand.c: 811: if(PARITYtemp != 5)
 17981  012596  0E05               	movlw	5
 17982  012598  0106               	movlb	6	; () banked
 17983  01259A  19D4               	xorwf	Command@PARITYtemp& (0+255),w,b
 17984  01259C  0106               	movlb	6	; () banked
 17985  01259E  11D5               	iorwf	(Command@PARITYtemp+1)& (0+255),w,b
 17986  0125A0  0106               	movlb	6	; () banked
 17987  0125A2  11D6               	iorwf	(Command@PARITYtemp+2)& (0+255),w,b
 17988  0125A4  0106               	movlb	6	; () banked
 17989  0125A6  11D7               	iorwf	(Command@PARITYtemp+3)& (0+255),w,b
 17990  0125A8  B4D8               	btfsc	status,2,c
 17991  0125AA  D0A6               	goto	l685
 17992                           
 17993                           ; BSR set to: 6
 17994                           ;StringCommand.c: 812: {
 17995                           ;StringCommand.c: 813: SetBaud(BAUDtemp, PARITYtemp);
 17996  0125AC  C6CE  F1B6         	movff	Command@BAUDtemp,SetBaud@Baud
 17997  0125B0  C6CF  F1B7         	movff	Command@BAUDtemp+1,SetBaud@Baud+1
 17998  0125B4  C6D0  F1B8         	movff	Command@BAUDtemp+2,SetBaud@Baud+2
 17999  0125B8  C6D1  F1B9         	movff	Command@BAUDtemp+3,SetBaud@Baud+3
 18000  0125BC  C6D4  F1BA         	movff	Command@PARITYtemp,SetBaud@Parity
 18001  0125C0  ECE6  F0A5         	call	_SetBaud	;wreg free
 18002                           
 18003                           ;StringCommand.c: 814: }
 18004                           ;StringCommand.c: 815: }
 18005  0125C4  D099               	goto	l685
 18006  0125C6                     l15721:
 18007                           
 18008                           ;StringCommand.c: 816: else
 18009                           ;StringCommand.c: 817: {
 18010                           ;StringCommand.c: 818: UARTstring("Baud Out of range\r\n");
 18011  0125C6  0E3D               	movlw	low STR_311
 18012  0125C8  0101               	movlb	1	; () banked
 18013  0125CA  6F7F               	movwf	UARTstring@data& (0+255),b
 18014  0125CC  0EF7               	movlw	high STR_311
 18015  0125CE  0101               	movlb	1	; () banked
 18016  0125D0  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 18017  0125D2  EC24  F0BA         	call	_UARTstring	;wreg free
 18018                           
 18019                           ;StringCommand.c: 819: }
 18020                           ;StringCommand.c: 820: }
 18021  0125D6  D090               	goto	l685
 18022  0125D8                     l15723:
 18023                           
 18024                           ;StringCommand.c: 821: else if(StringContains(Input, "baudis"))
 18025  0125D8  C1C2  F174         	movff	Command@Input,StringContains@This
 18026  0125DC  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 18027  0125E0  0E7C               	movlw	low STR_312
 18028  0125E2  0101               	movlb	1	; () banked
 18029  0125E4  6F76               	movwf	StringContains@That& (0+255),b
 18030  0125E6  0EFF               	movlw	high STR_312
 18031  0125E8  0101               	movlb	1	; () banked
 18032  0125EA  6F77               	movwf	(StringContains@That+1)& (0+255),b
 18033  0125EC  ECC2  F0BC         	call	_StringContains	;wreg free
 18034  0125F0  0900               	iorlw	0
 18035  0125F2  A4D8               	btfss	status,2,c
 18036  0125F4  D05D               	goto	l15743
 18037                           
 18038                           ;StringCommand.c: 829: else if(StringContains(Input, "enterbaudrate"))
 18039                           
 18040                           ;StringCommand.c: 828: }
 18041                           
 18042                           ;StringCommand.c: 822: {
 18043                           ;StringCommand.c: 827: __nop();
 18044  0125F6  C1C2  F174         	movff	Command@Input,StringContains@This
 18045  0125FA  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 18046  0125FE  0E55               	movlw	low STR_313
 18047  012600  0101               	movlb	1	; () banked
 18048  012602  6F76               	movwf	StringContains@That& (0+255),b
 18049  012604  0EFC               	movlw	high STR_313
 18050  012606  0101               	movlb	1	; () banked
 18051  012608  6F77               	movwf	(StringContains@That+1)& (0+255),b
 18052  01260A  ECC2  F0BC         	call	_StringContains	;wreg free
 18053  01260E  0900               	iorlw	0
 18054  012610  A4D8               	btfss	status,2,c
 18055  012612  D04E               	goto	l15743
 18056                           
 18057                           ;StringCommand.c: 834: else if(ISNUMBER(Input[0]))
 18058                           
 18059                           ;StringCommand.c: 833: }
 18060                           
 18061                           ;StringCommand.c: 830: {
 18062                           ;StringCommand.c: 832: __nop();
 18063  012614  C1C2  FFD9         	movff	Command@Input,fsr2l
 18064  012618  C1C3  FFDA         	movff	Command@Input+1,fsr2h
 18065  01261C  50DF               	movf	indf2,w,c
 18066  01261E  ECD2  F007         	call	_ISNUMBER
 18067  012622  0900               	iorlw	0
 18068  012624  B4D8               	btfsc	status,2,c
 18069  012626  D057               	goto	l15747
 18070                           
 18071                           ;StringCommand.c: 835: {
 18072                           ;StringCommand.c: 837: if (!StringContains(Input, "="))
 18073  012628  C1C2  F174         	movff	Command@Input,StringContains@This
 18074  01262C  C1C3  F175         	movff	Command@Input+1,StringContains@This+1
 18075  012630  0E05               	movlw	low (STR_201+11)
 18076  012632  0101               	movlb	1	; () banked
 18077  012634  6F76               	movwf	StringContains@That& (0+255),b
 18078  012636  0EFD               	movlw	high (STR_201+11)
 18079  012638  0101               	movlb	1	; () banked
 18080  01263A  6F77               	movwf	(StringContains@That+1)& (0+255),b
 18081  01263C  ECC2  F0BC         	call	_StringContains	;wreg free
 18082  012640  0900               	iorlw	0
 18083  012642  A4D8               	btfss	status,2,c
 18084  012644  D007               	goto	l15737
 18085                           
 18086                           ;StringCommand.c: 838: {
 18087                           ;StringCommand.c: 839: StringAddEqual(Input);
 18088  012646  C1C2  F183         	movff	Command@Input,StringAddEqual@Input
 18089  01264A  C1C3  F184         	movff	Command@Input+1,StringAddEqual@Input+1
 18090  01264E  EC14  F0A9         	call	_StringAddEqual	;wreg free
 18091  012652  D000               	goto	l15737
 18092  012654                     l15737:
 18093                           
 18094                           ;StringCommand.c: 840: }
 18095                           ;StringCommand.c: 841: tempLONG = (unsigned long)GetEnteredNumber(Input);
 18096  012654  C1C2  F180         	movff	Command@Input,GetEnteredNumber@This
 18097  012658  C1C3  F181         	movff	Command@Input+1,GetEnteredNumber@This+1
 18098  01265C  EC29  F0A8         	call	_GetEnteredNumber	;wreg free
 18099  012660  C180  F6DE         	movff	?_GetEnteredNumber,Command@tempLONG
 18100  012664  C181  F6DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 18101  012668  C182  F6E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 18102  01266C  C183  F6E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 18103                           
 18104                           ;StringCommand.c: 842: {
 18105                           ;StringCommand.c: 843: if(tempLONG >=2400 && tempLONG <=115200)
 18106  012670  0106               	movlb	6	; () banked
 18107  012672  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 18108  012674  D01F               	goto	l15745
 18109  012676  0106               	movlb	6	; () banked
 18110  012678  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 18111  01267A  0106               	movlb	6	; () banked
 18112  01267C  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 18113  01267E  E108               	bnz	u20260
 18114  012680  0E60               	movlw	96
 18115  012682  0106               	movlb	6	; () banked
 18116  012684  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 18117  012686  0E09               	movlw	9
 18118  012688  0106               	movlb	6	; () banked
 18119  01268A  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 18120  01268C  A0D8               	btfss	status,0,c
 18121  01268E  D012               	goto	l15745
 18122  012690                     u20260:
 18123                           
 18124                           ; BSR set to: 6
 18125  012690  0106               	movlb	6	; () banked
 18126  012692  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 18127  012694  D00D               	goto	l15743
 18128  012696  0106               	movlb	6	; () banked
 18129  012698  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 18130  01269A  E10C               	bnz	l15745
 18131  01269C  0106               	movlb	6	; () banked
 18132  01269E  05DE               	decf	Command@tempLONG& (0+255),w,b
 18133  0126A0  0EC2               	movlw	194
 18134  0126A2  0106               	movlb	6	; () banked
 18135  0126A4  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 18136  0126A6  0E01               	movlw	1
 18137  0126A8  0106               	movlb	6	; () banked
 18138  0126AA  59E0               	subwfb	(Command@tempLONG+2)& (0+255),w,b
 18139  0126AC  B0D8               	btfsc	status,0,c
 18140  0126AE  D002               	goto	l15745
 18141  0126B0                     l15743:
 18142                           
 18143                           ; BSR set to: 6
 18144                           ;StringCommand.c: 844: {
 18145                           ;StringCommand.c: 845: __nop();
 18146  0126B0  F000               	nop	
 18147                           
 18148                           ;StringCommand.c: 846: }
 18149  0126B2  D022               	goto	l685
 18150  0126B4                     l15745:
 18151                           
 18152                           ;StringCommand.c: 847: else
 18153                           ;StringCommand.c: 848: {
 18154                           ;StringCommand.c: 849: UARTstring("Invalid Command\r\n");
 18155  0126B4  0E38               	movlw	low STR_315
 18156  0126B6  0101               	movlb	1	; () banked
 18157  0126B8  6F7F               	movwf	UARTstring@data& (0+255),b
 18158  0126BA  0EF8               	movlw	high STR_315
 18159  0126BC  0101               	movlb	1	; () banked
 18160  0126BE  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 18161  0126C0  EC24  F0BA         	call	_UARTstring	;wreg free
 18162                           
 18163                           ;StringCommand.c: 850: LCDdisplayFeedback("Invalid Command");
 18164  0126C4  0EA9               	movlw	low STR_316
 18165  0126C6  0101               	movlb	1	; () banked
 18166  0126C8  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 18167  0126CA  0EFA               	movlw	high STR_316
 18168  0126CC  0101               	movlb	1	; () banked
 18169  0126CE  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 18170  0126D0  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 18171                           
 18172                           ;StringCommand.c: 851: }
 18173                           ;StringCommand.c: 852: }
 18174                           ;StringCommand.c: 853: }
 18175  0126D4  D011               	goto	l685
 18176  0126D6                     l15747:
 18177                           
 18178                           ;StringCommand.c: 854: else
 18179                           ;StringCommand.c: 855: {
 18180                           ;StringCommand.c: 856: UARTstring("Invalid Command\r\n");
 18181  0126D6  0E38               	movlw	low STR_315
 18182  0126D8  0101               	movlb	1	; () banked
 18183  0126DA  6F7F               	movwf	UARTstring@data& (0+255),b
 18184  0126DC  0EF8               	movlw	high STR_315
 18185  0126DE  0101               	movlb	1	; () banked
 18186  0126E0  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 18187  0126E2  EC24  F0BA         	call	_UARTstring	;wreg free
 18188                           
 18189                           ;StringCommand.c: 857: LCDdisplayFeedback("Invalid Command");
 18190  0126E6  0EA9               	movlw	low STR_316
 18191  0126E8  0101               	movlb	1	; () banked
 18192  0126EA  6F86               	movwf	LCDdisplayFeedback@Text& (0+255),b
 18193  0126EC  0EFA               	movlw	high STR_316
 18194  0126EE  0101               	movlb	1	; () banked
 18195  0126F0  6F87               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 18196  0126F2  EC3F  F006         	call	_LCDdisplayFeedback	;wreg free
 18197  0126F6  D000               	goto	l685
 18198  0126F8                     l685:
 18199                           
 18200                           ;StringCommand.c: 858: }
 18201                           ;StringCommand.c: 859: UARTstring("\r\n");
 18202  0126F8  0ECE               	movlw	low (STR_282+19)
 18203  0126FA  0101               	movlb	1	; () banked
 18204  0126FC  6F7F               	movwf	UARTstring@data& (0+255),b
 18205  0126FE  0EF6               	movlw	high (STR_282+19)
 18206  012700  0101               	movlb	1	; () banked
 18207  012702  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 18208  012704  EC24  F0BA         	call	_UARTstring	;wreg free
 18209                           
 18210                           ;StringCommand.c: 860: return 1;
 18211  012708  0E01               	movlw	1
 18212  01270A  0012               	return	
 18213  01270C  0012               	return		;funcret
 18214  01270E                     __end_of_Command:
 18215                           	opt stack 0
 18216                           tblptru	equ	0xFF8
 18217                           tblptrh	equ	0xFF7
 18218                           tblptrl	equ	0xFF6
 18219                           tablat	equ	0xFF5
 18220                           prodh	equ	0xFF4
 18221                           prodl	equ	0xFF3
 18222                           intcon	equ	0xFF2
 18223                           intcon2	equ	0xFF1
 18224                           postinc0	equ	0xFEE
 18225                           plusw0	equ	0xFEB
 18226                           wreg	equ	0xFE8
 18227                           postdec1	equ	0xFE5
 18228                           fsr1l	equ	0xFE1
 18229                           indf2	equ	0xFDF
 18230                           postinc2	equ	0xFDE
 18231                           postdec2	equ	0xFDD
 18232                           plusw2	equ	0xFDB
 18233                           fsr2h	equ	0xFDA
 18234                           fsr2l	equ	0xFD9
 18235                           status	equ	0xFD8
 18236                           
 18237 ;; *************** function _lowercase *****************
 18238 ;; Defined at:
 18239 ;;		line 297 in file "MISC.c"
 18240 ;; Parameters:    Size  Location     Type
 18241 ;;  Input           2   14[BANK1 ] PTR unsigned char 
 18242 ;;		 -> Rxdata(100), 
 18243 ;; Auto vars:     Size  Location     Type
 18244 ;;  i               1   17[BANK1 ] unsigned char 
 18245 ;; Return value:  Size  Location     Type
 18246 ;;		None               void
 18247 ;; Registers used:
 18248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18249 ;; Tracked objects:
 18250 ;;		On entry : 0/0
 18251 ;;		On exit  : 0/0
 18252 ;;		Unchanged: 0/0
 18253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18254 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18255 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18256 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18257 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18258 ;;Total ram usage:        4 bytes
 18259 ;; Hardware stack levels used:    1
 18260 ;; Hardware stack levels required when called:    7
 18261 ;; This function calls:
 18262 ;;		Nothing
 18263 ;; This function is called by:
 18264 ;;		_Command
 18265 ;; This function uses a non-reentrant model
 18266 ;;
 18267                           
 18268                           	psect	text31
 18269  0177E8                     __ptext31:
 18270                           	opt stack 0
 18271  0177E8                     _lowercase:
 18272                           	opt stack 22
 18273                           
 18274                           ;MISC.c: 299: unsigned char i =0;
 18275                           
 18276                           ;incstack = 0
 18277  0177E8  0E00               	movlw	0
 18278  0177EA  0101               	movlb	1	; () banked
 18279  0177EC  6F77               	movwf	lowercase@i& (0+255),b
 18280                           
 18281                           ;MISC.c: 300: while((Input[i]!= 0) && (i < 100))
 18282  0177EE  D02D               	goto	l13985
 18283  0177F0                     l13977:
 18284                           
 18285                           ; BSR set to: 1
 18286                           ;MISC.c: 301: {
 18287                           ;MISC.c: 302: if((Input[i] >= 65) && (Input[i] <= 90 ))
 18288  0177F0  0101               	movlb	1	; () banked
 18289  0177F2  5177               	movf	lowercase@i& (0+255),w,b
 18290  0177F4  0D01               	mullw	1
 18291  0177F6  50F3               	movf	prodl,w,c
 18292  0177F8  0101               	movlb	1	; () banked
 18293  0177FA  2574               	addwf	lowercase@Input& (0+255),w,b
 18294  0177FC  6ED9               	movwf	fsr2l,c
 18295  0177FE  50F4               	movf	prodh,w,c
 18296  017800  0101               	movlb	1	; () banked
 18297  017802  2175               	addwfc	(lowercase@Input+1)& (0+255),w,b
 18298  017804  6EDA               	movwf	fsr2h,c
 18299  017806  0E40               	movlw	64
 18300  017808  64DF               	cpfsgt	indf2,c
 18301  01780A  D01C               	goto	l13983
 18302                           
 18303                           ; BSR set to: 1
 18304  01780C  0101               	movlb	1	; () banked
 18305  01780E  5177               	movf	lowercase@i& (0+255),w,b
 18306  017810  0D01               	mullw	1
 18307  017812  50F3               	movf	prodl,w,c
 18308  017814  0101               	movlb	1	; () banked
 18309  017816  2574               	addwf	lowercase@Input& (0+255),w,b
 18310  017818  6ED9               	movwf	fsr2l,c
 18311  01781A  50F4               	movf	prodh,w,c
 18312  01781C  0101               	movlb	1	; () banked
 18313  01781E  2175               	addwfc	(lowercase@Input+1)& (0+255),w,b
 18314  017820  6EDA               	movwf	fsr2h,c
 18315  017822  0E5B               	movlw	91
 18316  017824  60DF               	cpfslt	indf2,c
 18317  017826  D00E               	goto	l13983
 18318                           
 18319                           ; BSR set to: 1
 18320                           ;MISC.c: 303: {
 18321                           ;MISC.c: 304: Input[i] += 32;
 18322  017828  0101               	movlb	1	; () banked
 18323  01782A  5177               	movf	lowercase@i& (0+255),w,b
 18324  01782C  0D01               	mullw	1
 18325  01782E  50F3               	movf	prodl,w,c
 18326  017830  0101               	movlb	1	; () banked
 18327  017832  2574               	addwf	lowercase@Input& (0+255),w,b
 18328  017834  6ED9               	movwf	fsr2l,c
 18329  017836  50F4               	movf	prodh,w,c
 18330  017838  0101               	movlb	1	; () banked
 18331  01783A  2175               	addwfc	(lowercase@Input+1)& (0+255),w,b
 18332  01783C  6EDA               	movwf	fsr2h,c
 18333  01783E  0E20               	movlw	32
 18334  017840  26DF               	addwf	indf2,f,c
 18335  017842  D000               	goto	l13983
 18336  017844                     l13983:
 18337                           
 18338                           ; BSR set to: 1
 18339                           ;MISC.c: 305: }
 18340                           ;MISC.c: 306: i++;
 18341  017844  0101               	movlb	1	; () banked
 18342  017846  2B77               	incf	lowercase@i& (0+255),f,b
 18343  017848  D000               	goto	l13985
 18344  01784A                     l13985:
 18345                           
 18346                           ; BSR set to: 1
 18347  01784A  0101               	movlb	1	; () banked
 18348  01784C  5177               	movf	lowercase@i& (0+255),w,b
 18349  01784E  0D01               	mullw	1
 18350  017850  50F3               	movf	prodl,w,c
 18351  017852  0101               	movlb	1	; () banked
 18352  017854  2574               	addwf	lowercase@Input& (0+255),w,b
 18353  017856  6ED9               	movwf	fsr2l,c
 18354  017858  50F4               	movf	prodh,w,c
 18355  01785A  0101               	movlb	1	; () banked
 18356  01785C  2175               	addwfc	(lowercase@Input+1)& (0+255),w,b
 18357  01785E  6EDA               	movwf	fsr2h,c
 18358  017860  50DF               	movf	indf2,w,c
 18359  017862  B4D8               	btfsc	status,2,c
 18360  017864  0012               	return	
 18361                           
 18362                           ; BSR set to: 1
 18363  017866  0E63               	movlw	99
 18364  017868  0101               	movlb	1	; () banked
 18365  01786A  6577               	cpfsgt	lowercase@i& (0+255),b
 18366  01786C  D7C1               	goto	l13977
 18367  01786E  0012               	return	
 18368                           
 18369                           ; BSR set to: 1
 18370  017870  0012               	return	
 18371                           
 18372                           ; BSR set to: 1
 18373                           
 18374                           ; BSR set to: 1
 18375  017872  0012               	return		;funcret
 18376  017874                     __end_of_lowercase:
 18377                           	opt stack 0
 18378                           tblptru	equ	0xFF8
 18379                           tblptrh	equ	0xFF7
 18380                           tblptrl	equ	0xFF6
 18381                           tablat	equ	0xFF5
 18382                           prodh	equ	0xFF4
 18383                           prodl	equ	0xFF3
 18384                           intcon	equ	0xFF2
 18385                           intcon2	equ	0xFF1
 18386                           postinc0	equ	0xFEE
 18387                           plusw0	equ	0xFEB
 18388                           wreg	equ	0xFE8
 18389                           postdec1	equ	0xFE5
 18390                           fsr1l	equ	0xFE1
 18391                           indf2	equ	0xFDF
 18392                           postinc2	equ	0xFDE
 18393                           postdec2	equ	0xFDD
 18394                           plusw2	equ	0xFDB
 18395                           fsr2h	equ	0xFDA
 18396                           fsr2l	equ	0xFD9
 18397                           status	equ	0xFD8
 18398                           
 18399 ;; *************** function ___lwtoft *****************
 18400 ;; Defined at:
 18401 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 18402 ;; Parameters:    Size  Location     Type
 18403 ;;  c               2   22[BANK1 ] unsigned int 
 18404 ;; Auto vars:     Size  Location     Type
 18405 ;;		None
 18406 ;; Return value:  Size  Location     Type
 18407 ;;                  3   22[BANK1 ] float 
 18408 ;; Registers used:
 18409 ;;		wreg, status,2, status,0, cstack
 18410 ;; Tracked objects:
 18411 ;;		On entry : 0/0
 18412 ;;		On exit  : 0/0
 18413 ;;		Unchanged: 0/0
 18414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18415 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18418 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18419 ;;Total ram usage:        3 bytes
 18420 ;; Hardware stack levels used:    1
 18421 ;; Hardware stack levels required when called:    8
 18422 ;; This function calls:
 18423 ;;		___ftpack
 18424 ;; This function is called by:
 18425 ;;		_Command
 18426 ;; This function uses a non-reentrant model
 18427 ;;
 18428                           
 18429                           	psect	text32
 18430  000E9C                     __ptext32:
 18431                           	opt stack 0
 18432  000E9C                     ___lwtoft:
 18433                           	opt stack 21
 18434                           
 18435                           ; BSR set to: 1
 18436                           ;incstack = 0
 18437  000E9C  C17C  F174         	movff	___lwtoft@c,___ftpack@arg
 18438  000EA0  C17D  F175         	movff	___lwtoft@c+1,___ftpack@arg+1
 18439  000EA4  0101               	movlb	1	; () banked
 18440  000EA6  6B76               	clrf	(___ftpack@arg+2)& (0+255),b
 18441  000EA8  0E8E               	movlw	142
 18442  000EAA  0101               	movlb	1	; () banked
 18443  000EAC  6F77               	movwf	___ftpack@exp& (0+255),b
 18444  000EAE  0E00               	movlw	0
 18445  000EB0  0101               	movlb	1	; () banked
 18446  000EB2  6F78               	movwf	___ftpack@sign& (0+255),b
 18447  000EB4  ECCA  F0AF         	call	___ftpack	;wreg free
 18448  000EB8  C174  F17C         	movff	?___ftpack,?___lwtoft
 18449  000EBC  C175  F17D         	movff	?___ftpack+1,?___lwtoft+1
 18450  000EC0  C176  F17E         	movff	?___ftpack+2,?___lwtoft+2
 18451  000EC4  0012               	return	
 18452  000EC6  0012               	return		;funcret
 18453  000EC8                     __end_of___lwtoft:
 18454                           	opt stack 0
 18455                           tblptru	equ	0xFF8
 18456                           tblptrh	equ	0xFF7
 18457                           tblptrl	equ	0xFF6
 18458                           tablat	equ	0xFF5
 18459                           prodh	equ	0xFF4
 18460                           prodl	equ	0xFF3
 18461                           intcon	equ	0xFF2
 18462                           intcon2	equ	0xFF1
 18463                           postinc0	equ	0xFEE
 18464                           plusw0	equ	0xFEB
 18465                           wreg	equ	0xFE8
 18466                           postdec1	equ	0xFE5
 18467                           fsr1l	equ	0xFE1
 18468                           indf2	equ	0xFDF
 18469                           postinc2	equ	0xFDE
 18470                           postdec2	equ	0xFDD
 18471                           plusw2	equ	0xFDB
 18472                           fsr2h	equ	0xFDA
 18473                           fsr2l	equ	0xFD9
 18474                           status	equ	0xFD8
 18475                           
 18476 ;; *************** function ___lwmod *****************
 18477 ;; Defined at:
 18478 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 18479 ;; Parameters:    Size  Location     Type
 18480 ;;  dividend        2   14[BANK1 ] unsigned int 
 18481 ;;  divisor         2   16[BANK1 ] unsigned int 
 18482 ;; Auto vars:     Size  Location     Type
 18483 ;;  counter         1   18[BANK1 ] unsigned char 
 18484 ;; Return value:  Size  Location     Type
 18485 ;;                  2   14[BANK1 ] unsigned int 
 18486 ;; Registers used:
 18487 ;;		wreg, status,2, status,0
 18488 ;; Tracked objects:
 18489 ;;		On entry : 0/0
 18490 ;;		On exit  : 0/0
 18491 ;;		Unchanged: 0/0
 18492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18493 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18494 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18496 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 18497 ;;Total ram usage:        5 bytes
 18498 ;; Hardware stack levels used:    1
 18499 ;; Hardware stack levels required when called:    7
 18500 ;; This function calls:
 18501 ;;		Nothing
 18502 ;; This function is called by:
 18503 ;;		_Command
 18504 ;; This function uses a non-reentrant model
 18505 ;;
 18506                           
 18507                           	psect	text33
 18508  017EB4                     __ptext33:
 18509                           	opt stack 0
 18510  017EB4                     ___lwmod:
 18511                           	opt stack 22
 18512                           
 18513                           ;incstack = 0
 18514  017EB4  0101               	movlb	1	; () banked
 18515  017EB6  5176               	movf	___lwmod@divisor& (0+255),w,b
 18516  017EB8  0101               	movlb	1	; () banked
 18517  017EBA  1177               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 18518  017EBC  B4D8               	btfsc	status,2,c
 18519  017EBE  D02B               	goto	l2500
 18520                           
 18521                           ; BSR set to: 1
 18522  017EC0  0E01               	movlw	1
 18523  017EC2  0101               	movlb	1	; () banked
 18524  017EC4  6F78               	movwf	___lwmod@counter& (0+255),b
 18525  017EC6  D007               	goto	l14673
 18526  017EC8                     l14671:
 18527                           
 18528                           ; BSR set to: 1
 18529  017EC8  0101               	movlb	1	; () banked
 18530  017ECA  90D8               	bcf	status,0,c
 18531  017ECC  3776               	rlcf	___lwmod@divisor& (0+255),f,b
 18532  017ECE  3777               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18533  017ED0  0101               	movlb	1	; () banked
 18534  017ED2  2B78               	incf	___lwmod@counter& (0+255),f,b
 18535  017ED4  D000               	goto	l14673
 18536  017ED6                     l14673:
 18537                           
 18538                           ; BSR set to: 1
 18539  017ED6  0101               	movlb	1	; () banked
 18540  017ED8  BF77               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 18541  017EDA  D002               	goto	l14675
 18542  017EDC  D7F5               	goto	l14671
 18543                           
 18544                           ; BSR set to: 1
 18545  017EDE  D000               	goto	l14675
 18546  017EE0                     l14675:
 18547                           
 18548                           ; BSR set to: 1
 18549  017EE0  0101               	movlb	1	; () banked
 18550  017EE2  5176               	movf	___lwmod@divisor& (0+255),w,b
 18551  017EE4  0101               	movlb	1	; () banked
 18552  017EE6  5D74               	subwf	___lwmod@dividend& (0+255),w,b
 18553  017EE8  0101               	movlb	1	; () banked
 18554  017EEA  5177               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18555  017EEC  0101               	movlb	1	; () banked
 18556  017EEE  5975               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18557  017EF0  A0D8               	btfss	status,0,c
 18558  017EF2  D009               	goto	l14679
 18559                           
 18560                           ; BSR set to: 1
 18561  017EF4  0101               	movlb	1	; () banked
 18562  017EF6  5176               	movf	___lwmod@divisor& (0+255),w,b
 18563  017EF8  0101               	movlb	1	; () banked
 18564  017EFA  5F74               	subwf	___lwmod@dividend& (0+255),f,b
 18565  017EFC  0101               	movlb	1	; () banked
 18566  017EFE  5177               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18567  017F00  0101               	movlb	1	; () banked
 18568  017F02  5B75               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 18569  017F04  D000               	goto	l14679
 18570  017F06                     l14679:
 18571                           
 18572                           ; BSR set to: 1
 18573  017F06  0101               	movlb	1	; () banked
 18574  017F08  90D8               	bcf	status,0,c
 18575  017F0A  3377               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 18576  017F0C  3376               	rrcf	___lwmod@divisor& (0+255),f,b
 18577                           
 18578                           ; BSR set to: 1
 18579  017F0E  0101               	movlb	1	; () banked
 18580  017F10  2F78               	decfsz	___lwmod@counter& (0+255),f,b
 18581  017F12  D7E6               	goto	l14675
 18582  017F14  D000               	goto	l2500
 18583  017F16                     l2500:
 18584                           
 18585                           ; BSR set to: 1
 18586  017F16  C174  F174         	movff	___lwmod@dividend,?___lwmod
 18587  017F1A  C175  F175         	movff	___lwmod@dividend+1,?___lwmod+1
 18588                           
 18589                           ; BSR set to: 1
 18590  017F1E  0012               	return		;funcret
 18591  017F20                     __end_of___lwmod:
 18592                           	opt stack 0
 18593                           tblptru	equ	0xFF8
 18594                           tblptrh	equ	0xFF7
 18595                           tblptrl	equ	0xFF6
 18596                           tablat	equ	0xFF5
 18597                           prodh	equ	0xFF4
 18598                           prodl	equ	0xFF3
 18599                           intcon	equ	0xFF2
 18600                           intcon2	equ	0xFF1
 18601                           postinc0	equ	0xFEE
 18602                           plusw0	equ	0xFEB
 18603                           wreg	equ	0xFE8
 18604                           postdec1	equ	0xFE5
 18605                           fsr1l	equ	0xFE1
 18606                           indf2	equ	0xFDF
 18607                           postinc2	equ	0xFDE
 18608                           postdec2	equ	0xFDD
 18609                           plusw2	equ	0xFDB
 18610                           fsr2h	equ	0xFDA
 18611                           fsr2l	equ	0xFD9
 18612                           status	equ	0xFD8
 18613                           
 18614 ;; *************** function _StringMatch *****************
 18615 ;; Defined at:
 18616 ;;		line 126 in file "MISC.c"
 18617 ;; Parameters:    Size  Location     Type
 18618 ;;  This            2   14[BANK1 ] PTR unsigned char 
 18619 ;;		 -> Rxdata(100), 
 18620 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 18621 ;;		 -> STR_299(6), STR_271(2), STR_258(18), STR_255(17), 
 18622 ;;		 -> STR_112(18), STR_109(17), STR_106(15), STR_103(14), 
 18623 ;;		 -> STR_100(17), STR_99(16), STR_79(18), STR_76(17), 
 18624 ;;		 -> STR_73(20), STR_72(19), STR_55(9), STR_52(8), 
 18625 ;;		 -> STR_49(5), STR_46(9), STR_43(8), STR_40(5), 
 18626 ;;		 -> STR_37(2), 
 18627 ;; Auto vars:     Size  Location     Type
 18628 ;;		None
 18629 ;; Return value:  Size  Location     Type
 18630 ;;                  1    wreg      unsigned char 
 18631 ;; Registers used:
 18632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18633 ;; Tracked objects:
 18634 ;;		On entry : 0/0
 18635 ;;		On exit  : 0/0
 18636 ;;		Unchanged: 0/0
 18637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18638 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18640 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18641 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 18642 ;;Total ram usage:        5 bytes
 18643 ;; Hardware stack levels used:    1
 18644 ;; Hardware stack levels required when called:    7
 18645 ;; This function calls:
 18646 ;;		Nothing
 18647 ;; This function is called by:
 18648 ;;		_Command
 18649 ;; This function uses a non-reentrant model
 18650 ;;
 18651                           
 18652                           	psect	text34
 18653  017A04                     __ptext34:
 18654                           	opt stack 0
 18655  017A04                     _StringMatch:
 18656                           	opt stack 22
 18657                           
 18658                           ;MISC.c: 128: while(*This != 0)
 18659                           
 18660                           ; BSR set to: 1
 18661                           ;incstack = 0
 18662  017A04  D027               	goto	l13817
 18663  017A06                     l13807:
 18664                           
 18665                           ;MISC.c: 129: {
 18666                           ;MISC.c: 130: if(*This != *That || *That == 0)
 18667  017A06  C174  FFD9         	movff	StringMatch@This,fsr2l
 18668  017A0A  C175  FFDA         	movff	StringMatch@This+1,fsr2h
 18669  017A0E  50DF               	movf	indf2,w,c
 18670  017A10  0101               	movlb	1	; () banked
 18671  017A12  6F78               	movwf	??_StringMatch& (0+255),b
 18672  017A14  C176  FFF6         	movff	StringMatch@That,tblptrl
 18673  017A18  C177  FFF7         	movff	StringMatch@That+1,tblptrh
 18674  017A1C                     	if	0	;tblptru may be non-zero
 18675  017A1C                     	endif
 18676  017A1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18677  017A1C  0E00               	movlw	low (__mediumconst shr (0+16))
 18678  017A1E  6EF8               	movwf	tblptru,c
 18679  017A20                     	endif
 18680  017A20  0008               	tblrd		*
 18681  017A22  50F5               	movf	tablat,w,c
 18682  017A24  0101               	movlb	1	; () banked
 18683  017A26  1978               	xorwf	??_StringMatch& (0+255),w,b
 18684  017A28  A4D8               	btfss	status,2,c
 18685  017A2A  D00B               	goto	l13811
 18686                           
 18687                           ; BSR set to: 1
 18688  017A2C  C176  FFF6         	movff	StringMatch@That,tblptrl
 18689  017A30  C177  FFF7         	movff	StringMatch@That+1,tblptrh
 18690  017A34                     	if	0	;tblptru may be non-zero
 18691  017A34                     	endif
 18692  017A34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18693  017A34  0E00               	movlw	low (__mediumconst shr (0+16))
 18694  017A36  6EF8               	movwf	tblptru,c
 18695  017A38                     	endif
 18696  017A38  0008               	tblrd		*
 18697  017A3A  50F5               	movf	tablat,w,c
 18698  017A3C  0900               	iorlw	0
 18699  017A3E  A4D8               	btfss	status,2,c
 18700  017A40  D002               	goto	l13815
 18701  017A42                     l13811:
 18702                           
 18703                           ; BSR set to: 1
 18704                           ;MISC.c: 131: {
 18705                           ;MISC.c: 132: return 0;
 18706  017A42  0E00               	movlw	0
 18707                           
 18708                           ; BSR set to: 1
 18709  017A44  0012               	return	
 18710  017A46                     l13815:
 18711                           
 18712                           ; BSR set to: 1
 18713                           ;MISC.c: 133: }
 18714                           ;MISC.c: 134: This++;
 18715  017A46  0101               	movlb	1	; () banked
 18716  017A48  4B74               	infsnz	StringMatch@This& (0+255),f,b
 18717  017A4A  2B75               	incf	(StringMatch@This+1)& (0+255),f,b
 18718                           
 18719                           ;MISC.c: 135: That++;
 18720  017A4C  0101               	movlb	1	; () banked
 18721  017A4E  4B76               	infsnz	StringMatch@That& (0+255),f,b
 18722  017A50  2B77               	incf	(StringMatch@That+1)& (0+255),f,b
 18723  017A52  D000               	goto	l13817
 18724  017A54                     l13817:
 18725  017A54  C174  FFD9         	movff	StringMatch@This,fsr2l
 18726  017A58  C175  FFDA         	movff	StringMatch@This+1,fsr2h
 18727  017A5C  50DF               	movf	indf2,w,c
 18728  017A5E  A4D8               	btfss	status,2,c
 18729  017A60  D7D2               	goto	l13807
 18730                           
 18731                           ;MISC.c: 136: }
 18732                           ;MISC.c: 137: if(*That == 0)
 18733  017A62  C176  FFF6         	movff	StringMatch@That,tblptrl
 18734  017A66  C177  FFF7         	movff	StringMatch@That+1,tblptrh
 18735  017A6A                     	if	0	;tblptru may be non-zero
 18736  017A6A                     	endif
 18737  017A6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18738  017A6A  0E00               	movlw	low (__mediumconst shr (0+16))
 18739  017A6C  6EF8               	movwf	tblptru,c
 18740  017A6E                     	endif
 18741  017A6E  0008               	tblrd		*
 18742  017A70  50F5               	movf	tablat,w,c
 18743  017A72  0900               	iorlw	0
 18744  017A74  A4D8               	btfss	status,2,c
 18745  017A76  D002               	goto	l13827
 18746                           
 18747                           ;MISC.c: 138: {
 18748                           ;MISC.c: 139: return 1;
 18749  017A78  0E01               	movlw	1
 18750                           
 18751                           ;MISC.c: 140: }
 18752  017A7A  0012               	return	
 18753  017A7C                     l13827:
 18754                           
 18755                           ;MISC.c: 141: else
 18756                           ;MISC.c: 142: {
 18757                           ;MISC.c: 143: return 0;
 18758  017A7C  0E00               	movlw	0
 18759  017A7E  0012               	return	
 18760  017A80  0012               	return		;funcret
 18761  017A82                     __end_of_StringMatch:
 18762                           	opt stack 0
 18763                           tblptru	equ	0xFF8
 18764                           tblptrh	equ	0xFF7
 18765                           tblptrl	equ	0xFF6
 18766                           tablat	equ	0xFF5
 18767                           prodh	equ	0xFF4
 18768                           prodl	equ	0xFF3
 18769                           intcon	equ	0xFF2
 18770                           intcon2	equ	0xFF1
 18771                           postinc0	equ	0xFEE
 18772                           plusw0	equ	0xFEB
 18773                           wreg	equ	0xFE8
 18774                           postdec1	equ	0xFE5
 18775                           fsr1l	equ	0xFE1
 18776                           indf2	equ	0xFDF
 18777                           postinc2	equ	0xFDE
 18778                           postdec2	equ	0xFDD
 18779                           plusw2	equ	0xFDB
 18780                           fsr2h	equ	0xFDA
 18781                           fsr2l	equ	0xFD9
 18782                           status	equ	0xFD8
 18783                           
 18784 ;; *************** function _StringContains *****************
 18785 ;; Defined at:
 18786 ;;		line 153 in file "MISC.c"
 18787 ;; Parameters:    Size  Location     Type
 18788 ;;  This            2   14[BANK1 ] PTR unsigned char 
 18789 ;;		 -> Rxdata(100), 
 18790 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 18791 ;;		 -> STR_314(2), STR_313(14), STR_312(7), STR_310(13), 
 18792 ;;		 -> STR_309(12), STR_308(18), STR_307(17), STR_306(16), 
 18793 ;;		 -> STR_305(2), STR_304(11), STR_303(8), STR_302(8), 
 18794 ;;		 -> STR_301(16), STR_254(2), STR_230(4), STR_223(5), 
 18795 ;;		 -> STR_220(8), STR_219(2), STR_199(2), STR_198(2), 
 18796 ;;		 -> STR_182(2), STR_181(2), STR_162(2), STR_159(2), 
 18797 ;;		 -> STR_143(5), STR_142(6), STR_139(4), STR_138(6), 
 18798 ;;		 -> STR_135(2), STR_134(6), STR_133(2), STR_132(10), 
 18799 ;;		 -> STR_131(6), STR_130(6), STR_98(4), STR_97(6), 
 18800 ;;		 -> STR_96(2), STR_71(2), STR_39(2), 
 18801 ;; Auto vars:     Size  Location     Type
 18802 ;;		None
 18803 ;; Return value:  Size  Location     Type
 18804 ;;                  1    wreg      unsigned char 
 18805 ;; Registers used:
 18806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18807 ;; Tracked objects:
 18808 ;;		On entry : 0/0
 18809 ;;		On exit  : 0/0
 18810 ;;		Unchanged: 0/0
 18811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18812 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18814 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18815 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 18816 ;;Total ram usage:        5 bytes
 18817 ;; Hardware stack levels used:    1
 18818 ;; Hardware stack levels required when called:    7
 18819 ;; This function calls:
 18820 ;;		Nothing
 18821 ;; This function is called by:
 18822 ;;		_Command
 18823 ;; This function uses a non-reentrant model
 18824 ;;
 18825                           
 18826                           	psect	text35
 18827  017984                     __ptext35:
 18828                           	opt stack 0
 18829  017984                     _StringContains:
 18830                           	opt stack 22
 18831                           
 18832                           ;MISC.c: 155: while(*This != 0)
 18833                           
 18834                           ;incstack = 0
 18835  017984  D035               	goto	l13851
 18836                           
 18837                           ;MISC.c: 156: {
 18838                           ;MISC.c: 157: while(*This == *That)
 18839  017986  D01D               	goto	l13847
 18840  017988                     l13833:
 18841                           
 18842                           ;MISC.c: 158: {
 18843                           ;MISC.c: 159: That++;
 18844  017988  0101               	movlb	1	; () banked
 18845  01798A  4B76               	infsnz	StringContains@That& (0+255),f,b
 18846  01798C  2B77               	incf	(StringContains@That+1)& (0+255),f,b
 18847                           
 18848                           ;MISC.c: 160: This++;
 18849  01798E  0101               	movlb	1	; () banked
 18850  017990  4B74               	infsnz	StringContains@This& (0+255),f,b
 18851  017992  2B75               	incf	(StringContains@This+1)& (0+255),f,b
 18852                           
 18853                           ; BSR set to: 1
 18854                           ;MISC.c: 161: if(*That == 0)
 18855  017994  C176  FFF6         	movff	StringContains@That,tblptrl
 18856  017998  C177  FFF7         	movff	StringContains@That+1,tblptrh
 18857  01799C                     	if	0	;tblptru may be non-zero
 18858  01799C                     	endif
 18859  01799C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18860  01799C  0E00               	movlw	low (__mediumconst shr (0+16))
 18861  01799E  6EF8               	movwf	tblptru,c
 18862  0179A0                     	endif
 18863  0179A0  0008               	tblrd		*
 18864  0179A2  50F5               	movf	tablat,w,c
 18865  0179A4  0900               	iorlw	0
 18866  0179A6  A4D8               	btfss	status,2,c
 18867  0179A8  D002               	goto	l13841
 18868                           
 18869                           ; BSR set to: 1
 18870                           ;MISC.c: 162: {
 18871                           ;MISC.c: 163: return 1;
 18872  0179AA  0E01               	movlw	1
 18873                           
 18874                           ; BSR set to: 1
 18875  0179AC  0012               	return	
 18876  0179AE                     l13841:
 18877                           
 18878                           ; BSR set to: 1
 18879                           ;MISC.c: 164: }
 18880                           ;MISC.c: 165: if(*This == 0)
 18881  0179AE  C174  FFD9         	movff	StringContains@This,fsr2l
 18882  0179B2  C175  FFDA         	movff	StringContains@This+1,fsr2h
 18883  0179B6  50DF               	movf	indf2,w,c
 18884  0179B8  A4D8               	btfss	status,2,c
 18885  0179BA  D003               	goto	l13847
 18886                           
 18887                           ; BSR set to: 1
 18888                           ;MISC.c: 166: {
 18889                           ;MISC.c: 167: return 0;
 18890  0179BC  0E00               	movlw	0
 18891                           
 18892                           ; BSR set to: 1
 18893  0179BE  0012               	return	
 18894                           
 18895                           ; BSR set to: 1
 18896  0179C0  D000               	goto	l13847
 18897  0179C2                     l13847:
 18898  0179C2  C174  FFD9         	movff	StringContains@This,fsr2l
 18899  0179C6  C175  FFDA         	movff	StringContains@This+1,fsr2h
 18900  0179CA  50DF               	movf	indf2,w,c
 18901  0179CC  0101               	movlb	1	; () banked
 18902  0179CE  6F78               	movwf	??_StringContains& (0+255),b
 18903  0179D0  C176  FFF6         	movff	StringContains@That,tblptrl
 18904  0179D4  C177  FFF7         	movff	StringContains@That+1,tblptrh
 18905  0179D8                     	if	0	;tblptru may be non-zero
 18906  0179D8                     	endif
 18907  0179D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18908  0179D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18909  0179DA  6EF8               	movwf	tblptru,c
 18910  0179DC                     	endif
 18911  0179DC  0008               	tblrd		*
 18912  0179DE  50F5               	movf	tablat,w,c
 18913  0179E0  0101               	movlb	1	; () banked
 18914  0179E2  1978               	xorwf	??_StringContains& (0+255),w,b
 18915  0179E4  B4D8               	btfsc	status,2,c
 18916  0179E6  D7D0               	goto	l13833
 18917                           
 18918                           ; BSR set to: 1
 18919                           ;MISC.c: 168: }
 18920                           ;MISC.c: 169: }
 18921                           ;MISC.c: 170: This++;
 18922                           
 18923                           ; BSR set to: 1
 18924  0179E8  0101               	movlb	1	; () banked
 18925  0179EA  4B74               	infsnz	StringContains@This& (0+255),f,b
 18926  0179EC  2B75               	incf	(StringContains@This+1)& (0+255),f,b
 18927  0179EE  D000               	goto	l13851
 18928  0179F0                     l13851:
 18929  0179F0  C174  FFD9         	movff	StringContains@This,fsr2l
 18930  0179F4  C175  FFDA         	movff	StringContains@This+1,fsr2h
 18931  0179F8  50DF               	movf	indf2,w,c
 18932  0179FA  A4D8               	btfss	status,2,c
 18933  0179FC  D7E2               	goto	l13847
 18934                           
 18935                           ;MISC.c: 171: }
 18936                           ;MISC.c: 172: return 0;
 18937  0179FE  0E00               	movlw	0
 18938  017A00  0012               	return	
 18939  017A02  0012               	return		;funcret
 18940  017A04                     __end_of_StringContains:
 18941                           	opt stack 0
 18942                           tblptru	equ	0xFF8
 18943                           tblptrh	equ	0xFF7
 18944                           tblptrl	equ	0xFF6
 18945                           tablat	equ	0xFF5
 18946                           prodh	equ	0xFF4
 18947                           prodl	equ	0xFF3
 18948                           intcon	equ	0xFF2
 18949                           intcon2	equ	0xFF1
 18950                           postinc0	equ	0xFEE
 18951                           plusw0	equ	0xFEB
 18952                           wreg	equ	0xFE8
 18953                           postdec1	equ	0xFE5
 18954                           fsr1l	equ	0xFE1
 18955                           indf2	equ	0xFDF
 18956                           postinc2	equ	0xFDE
 18957                           postdec2	equ	0xFDD
 18958                           plusw2	equ	0xFDB
 18959                           fsr2h	equ	0xFDA
 18960                           fsr2l	equ	0xFD9
 18961                           status	equ	0xFD8
 18962                           
 18963 ;; *************** function _StringAddEqual *****************
 18964 ;; Defined at:
 18965 ;;		line 315 in file "MISC.c"
 18966 ;; Parameters:    Size  Location     Type
 18967 ;;  Input           2   29[BANK1 ] PTR unsigned char 
 18968 ;;		 -> Rxdata(100), 
 18969 ;; Auto vars:     Size  Location     Type
 18970 ;;  temp          100    0[BANK2 ] unsigned char [100]
 18971 ;;  j               1  102[BANK2 ] unsigned char 
 18972 ;;  i               1  101[BANK2 ] unsigned char 
 18973 ;;  firstnumber     1  100[BANK2 ] unsigned char 
 18974 ;; Return value:  Size  Location     Type
 18975 ;;                  1    wreg      unsigned char 
 18976 ;; Registers used:
 18977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18978 ;; Tracked objects:
 18979 ;;		On entry : 0/0
 18980 ;;		On exit  : 0/0
 18981 ;;		Unchanged: 0/0
 18982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18983 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18984 ;;      Locals:         0       0       0     103       0       0       0       0       0       0       0       0       
      +0       0
 18985 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18986 ;;      Totals:         0       0       4     103       0       0       0       0       0       0       0       0       
      +0       0
 18987 ;;Total ram usage:      107 bytes
 18988 ;; Hardware stack levels used:    1
 18989 ;; Hardware stack levels required when called:    9
 18990 ;; This function calls:
 18991 ;;		_BufferCopy
 18992 ;;		_cleanBuffer
 18993 ;; This function is called by:
 18994 ;;		_Command
 18995 ;; This function uses a non-reentrant model
 18996 ;;
 18997                           
 18998                           	psect	text36
 18999  015228                     __ptext36:
 19000                           	opt stack 0
 19001  015228                     _StringAddEqual:
 19002                           	opt stack 20
 19003                           
 19004                           ;MISC.c: 317: unsigned char i =0;
 19005                           
 19006                           ;incstack = 0
 19007  015228  0E00               	movlw	0
 19008  01522A  0102               	movlb	2	; () banked
 19009  01522C  6F65               	movwf	StringAddEqual@i& (0+255),b
 19010                           
 19011                           ;MISC.c: 318: unsigned char j =0;
 19012  01522E  0E00               	movlw	0
 19013  015230  0102               	movlb	2	; () banked
 19014  015232  6F66               	movwf	StringAddEqual@j& (0+255),b
 19015                           
 19016                           ;MISC.c: 319: unsigned char firstnumber =200;
 19017  015234  0EC8               	movlw	200
 19018  015236  0102               	movlb	2	; () banked
 19019  015238  6F64               	movwf	StringAddEqual@firstnumber& (0+255),b
 19020                           
 19021                           ; BSR set to: 2
 19022                           ;MISC.c: 320: unsigned char temp[100];
 19023                           ;MISC.c: 321: cleanBuffer(temp,100);
 19024  01523A  0E00               	movlw	low StringAddEqual@temp
 19025  01523C  0101               	movlb	1	; () banked
 19026  01523E  6F74               	movwf	cleanBuffer@data& (0+255),b
 19027  015240  0E02               	movlw	high StringAddEqual@temp
 19028  015242  0101               	movlb	1	; () banked
 19029  015244  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 19030  015246  0E00               	movlw	0
 19031  015248  0101               	movlb	1	; () banked
 19032  01524A  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 19033  01524C  0E64               	movlw	100
 19034  01524E  6F76               	movwf	cleanBuffer@count& (0+255),b
 19035  015250  ECD3  F003         	call	_cleanBuffer	;wreg free
 19036                           
 19037                           ;MISC.c: 322: while(Input[i] != 0)
 19038  015254  D032               	goto	l14001
 19039  015256                     l13993:
 19040                           
 19041                           ;MISC.c: 323: {
 19042                           ;MISC.c: 324: if((Input[i] >= 48) && (Input[i] <= 57) || (Input[i] == '-'))
 19043  015256  0102               	movlb	2	; () banked
 19044  015258  5165               	movf	StringAddEqual@i& (0+255),w,b
 19045  01525A  0D01               	mullw	1
 19046  01525C  50F3               	movf	prodl,w,c
 19047  01525E  0101               	movlb	1	; () banked
 19048  015260  2583               	addwf	StringAddEqual@Input& (0+255),w,b
 19049  015262  6ED9               	movwf	fsr2l,c
 19050  015264  50F4               	movf	prodh,w,c
 19051  015266  0101               	movlb	1	; () banked
 19052  015268  2184               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 19053  01526A  6EDA               	movwf	fsr2h,c
 19054  01526C  0E2F               	movlw	47
 19055  01526E  64DF               	cpfsgt	indf2,c
 19056  015270  D00F               	goto	l13997
 19057                           
 19058                           ; BSR set to: 1
 19059  015272  0102               	movlb	2	; () banked
 19060  015274  5165               	movf	StringAddEqual@i& (0+255),w,b
 19061  015276  0D01               	mullw	1
 19062  015278  50F3               	movf	prodl,w,c
 19063  01527A  0101               	movlb	1	; () banked
 19064  01527C  2583               	addwf	StringAddEqual@Input& (0+255),w,b
 19065  01527E  6ED9               	movwf	fsr2l,c
 19066  015280  50F4               	movf	prodh,w,c
 19067  015282  0101               	movlb	1	; () banked
 19068  015284  2184               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 19069  015286  6EDA               	movwf	fsr2h,c
 19070  015288  0E39               	movlw	57
 19071  01528A  64DF               	cpfsgt	indf2,c
 19072  01528C  D010               	goto	l390
 19073  01528E  D000               	goto	l13997
 19074  015290                     l13997:
 19075                           
 19076                           ; BSR set to: 1
 19077  015290  0102               	movlb	2	; () banked
 19078  015292  5165               	movf	StringAddEqual@i& (0+255),w,b
 19079  015294  0D01               	mullw	1
 19080  015296  50F3               	movf	prodl,w,c
 19081  015298  0101               	movlb	1	; () banked
 19082  01529A  2583               	addwf	StringAddEqual@Input& (0+255),w,b
 19083  01529C  6ED9               	movwf	fsr2l,c
 19084  01529E  50F4               	movf	prodh,w,c
 19085  0152A0  0101               	movlb	1	; () banked
 19086  0152A2  2184               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 19087  0152A4  6EDA               	movwf	fsr2h,c
 19088  0152A6  0E2D               	movlw	45
 19089  0152A8  18DE               	xorwf	postinc2,w,c
 19090  0152AA  A4D8               	btfss	status,2,c
 19091  0152AC  D003               	goto	l13999
 19092  0152AE                     l390:
 19093                           
 19094                           ; BSR set to: 1
 19095                           ;MISC.c: 325: {
 19096                           ;MISC.c: 326: firstnumber=i;
 19097  0152AE  C265  F264         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 19098                           
 19099                           ;MISC.c: 327: break;
 19100  0152B2  D011               	goto	l14003
 19101  0152B4                     l13999:
 19102                           
 19103                           ; BSR set to: 1
 19104                           ;MISC.c: 328: }
 19105                           ;MISC.c: 329: i++;
 19106  0152B4  0102               	movlb	2	; () banked
 19107  0152B6  2B65               	incf	StringAddEqual@i& (0+255),f,b
 19108  0152B8  D000               	goto	l14001
 19109  0152BA                     l14001:
 19110  0152BA  0102               	movlb	2	; () banked
 19111  0152BC  5165               	movf	StringAddEqual@i& (0+255),w,b
 19112  0152BE  0D01               	mullw	1
 19113  0152C0  50F3               	movf	prodl,w,c
 19114  0152C2  0101               	movlb	1	; () banked
 19115  0152C4  2583               	addwf	StringAddEqual@Input& (0+255),w,b
 19116  0152C6  6ED9               	movwf	fsr2l,c
 19117  0152C8  50F4               	movf	prodh,w,c
 19118  0152CA  0101               	movlb	1	; () banked
 19119  0152CC  2184               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 19120  0152CE  6EDA               	movwf	fsr2h,c
 19121  0152D0  50DF               	movf	indf2,w,c
 19122  0152D2  A4D8               	btfss	status,2,c
 19123  0152D4  D7C0               	goto	l13993
 19124  0152D6                     l14003:
 19125                           
 19126                           ; BSR set to: 1
 19127                           ;MISC.c: 330: }
 19128                           ;MISC.c: 331: if(firstnumber ==200)
 19129  0152D6  0EC8               	movlw	200
 19130  0152D8  0102               	movlb	2	; () banked
 19131  0152DA  1964               	xorwf	StringAddEqual@firstnumber& (0+255),w,b
 19132  0152DC  B4D8               	btfsc	status,2,c
 19133  0152DE  0012               	return	
 19134  0152E0  D001               	goto	l14007
 19135                           
 19136                           ; BSR set to: 2
 19137                           ;MISC.c: 332: {
 19138                           ;MISC.c: 333: return 0;
 19139                           ;	Return value of _StringAddEqual is never used
 19140  0152E2  0012               	return	
 19141  0152E4                     l14007:
 19142                           
 19143                           ; BSR set to: 2
 19144                           ;MISC.c: 334: }
 19145                           ;MISC.c: 335: for(j=0;j<firstnumber;j++)
 19146  0152E4  0E00               	movlw	0
 19147  0152E6  0102               	movlb	2	; () banked
 19148  0152E8  6F66               	movwf	StringAddEqual@j& (0+255),b
 19149  0152EA  D019               	goto	l14013
 19150  0152EC                     l14009:
 19151                           
 19152                           ; BSR set to: 2
 19153                           ;MISC.c: 336: {
 19154                           ;MISC.c: 337: temp[j] = Input[j];
 19155  0152EC  0102               	movlb	2	; () banked
 19156  0152EE  5166               	movf	StringAddEqual@j& (0+255),w,b
 19157  0152F0  0D01               	mullw	1
 19158  0152F2  50F3               	movf	prodl,w,c
 19159  0152F4  0101               	movlb	1	; () banked
 19160  0152F6  2583               	addwf	StringAddEqual@Input& (0+255),w,b
 19161  0152F8  6ED9               	movwf	fsr2l,c
 19162  0152FA  50F4               	movf	prodh,w,c
 19163  0152FC  0101               	movlb	1	; () banked
 19164  0152FE  2184               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 19165  015300  6EDA               	movwf	fsr2h,c
 19166  015302  0102               	movlb	2	; () banked
 19167  015304  5166               	movf	StringAddEqual@j& (0+255),w,b
 19168  015306  0D01               	mullw	1
 19169  015308  0E00               	movlw	low StringAddEqual@temp
 19170  01530A  24F3               	addwf	prodl,w,c
 19171  01530C  6EE1               	movwf	fsr1l,c
 19172  01530E  0E02               	movlw	high StringAddEqual@temp
 19173  015310  20F4               	addwfc	prodh,w,c
 19174  015312  6EE2               	movwf	fsr1h,c
 19175  015314  CFDF FFE7          	movff	indf2,indf1
 19176                           
 19177                           ; BSR set to: 2
 19178  015318  0102               	movlb	2	; () banked
 19179  01531A  2B66               	incf	StringAddEqual@j& (0+255),f,b
 19180  01531C  D000               	goto	l14013
 19181  01531E                     l14013:
 19182                           
 19183                           ; BSR set to: 2
 19184  01531E  0102               	movlb	2	; () banked
 19185  015320  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 19186  015322  0102               	movlb	2	; () banked
 19187  015324  5D66               	subwf	StringAddEqual@j& (0+255),w,b
 19188  015326  A0D8               	btfss	status,0,c
 19189  015328  D7E1               	goto	l14009
 19190                           
 19191                           ; BSR set to: 2
 19192                           ;MISC.c: 338: }
 19193                           ;MISC.c: 339: temp[firstnumber] = '=';
 19194                           
 19195                           ; BSR set to: 2
 19196  01532A  0102               	movlb	2	; () banked
 19197  01532C  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 19198  01532E  0D01               	mullw	1
 19199  015330  0E00               	movlw	low StringAddEqual@temp
 19200  015332  24F3               	addwf	prodl,w,c
 19201  015334  6ED9               	movwf	fsr2l,c
 19202  015336  0E02               	movlw	high StringAddEqual@temp
 19203  015338  20F4               	addwfc	prodh,w,c
 19204  01533A  6EDA               	movwf	fsr2h,c
 19205  01533C  0E3D               	movlw	61
 19206  01533E  6EDF               	movwf	indf2,c
 19207                           
 19208                           ; BSR set to: 2
 19209                           ;MISC.c: 340: for(j = (firstnumber);j<99;j++)
 19210  015340  C264  F266         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 19211  015344                     l14019:
 19212                           
 19213                           ; BSR set to: 2
 19214  015344  0E62               	movlw	98
 19215  015346  0102               	movlb	2	; () banked
 19216  015348  6566               	cpfsgt	StringAddEqual@j& (0+255),b
 19217  01534A  D001               	goto	l14023
 19218                           
 19219                           ; BSR set to: 2
 19220  01534C  D032               	goto	l14033
 19221  01534E                     l14023:
 19222                           
 19223                           ; BSR set to: 2
 19224                           ;MISC.c: 341: {
 19225                           ;MISC.c: 342: temp[j+1] = Input[j];
 19226  01534E  0102               	movlb	2	; () banked
 19227  015350  5166               	movf	StringAddEqual@j& (0+255),w,b
 19228  015352  0D01               	mullw	1
 19229  015354  50F3               	movf	prodl,w,c
 19230  015356  0101               	movlb	1	; () banked
 19231  015358  2583               	addwf	StringAddEqual@Input& (0+255),w,b
 19232  01535A  6ED9               	movwf	fsr2l,c
 19233  01535C  50F4               	movf	prodh,w,c
 19234  01535E  0101               	movlb	1	; () banked
 19235  015360  2184               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 19236  015362  6EDA               	movwf	fsr2h,c
 19237  015364  0102               	movlb	2	; () banked
 19238  015366  5166               	movf	StringAddEqual@j& (0+255),w,b
 19239  015368  0101               	movlb	1	; () banked
 19240  01536A  6F85               	movwf	??_StringAddEqual& (0+255),b
 19241  01536C  6B86               	clrf	(??_StringAddEqual+1)& (0+255),b
 19242  01536E  0E01               	movlw	1
 19243  015370  0101               	movlb	1	; () banked
 19244  015372  2785               	addwf	??_StringAddEqual& (0+255),f,b
 19245  015374  0E00               	movlw	0
 19246  015376  2386               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 19247  015378  0E00               	movlw	low StringAddEqual@temp
 19248  01537A  0101               	movlb	1	; () banked
 19249  01537C  2585               	addwf	??_StringAddEqual& (0+255),w,b
 19250  01537E  6EE1               	movwf	fsr1l,c
 19251  015380  0E02               	movlw	high StringAddEqual@temp
 19252  015382  0101               	movlb	1	; () banked
 19253  015384  2186               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 19254  015386  6EE2               	movwf	fsr1h,c
 19255  015388  CFDF FFE7          	movff	indf2,indf1
 19256                           
 19257                           ; BSR set to: 1
 19258                           ;MISC.c: 343: if(Input[j] ==0)
 19259  01538C  0102               	movlb	2	; () banked
 19260  01538E  5166               	movf	StringAddEqual@j& (0+255),w,b
 19261  015390  0D01               	mullw	1
 19262  015392  50F3               	movf	prodl,w,c
 19263  015394  0101               	movlb	1	; () banked
 19264  015396  2583               	addwf	StringAddEqual@Input& (0+255),w,b
 19265  015398  6ED9               	movwf	fsr2l,c
 19266  01539A  50F4               	movf	prodh,w,c
 19267  01539C  0101               	movlb	1	; () banked
 19268  01539E  2184               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 19269  0153A0  6EDA               	movwf	fsr2h,c
 19270  0153A2  50DF               	movf	indf2,w,c
 19271  0153A4  B4D8               	btfsc	status,2,c
 19272  0153A6  D005               	goto	l14033
 19273  0153A8  D001               	goto	l14029
 19274                           
 19275                           ; BSR set to: 1
 19276                           ;MISC.c: 344: {
 19277                           ;MISC.c: 345: break;
 19278  0153AA  D003               	goto	l14033
 19279  0153AC                     l14029:
 19280                           
 19281                           ; BSR set to: 1
 19282  0153AC  0102               	movlb	2	; () banked
 19283  0153AE  2B66               	incf	StringAddEqual@j& (0+255),f,b
 19284  0153B0  D7C9               	goto	l14019
 19285  0153B2                     l14033:
 19286                           
 19287                           ;MISC.c: 346: }
 19288                           ;MISC.c: 347: }
 19289                           ;MISC.c: 348: BufferCopy(temp,Input,100, 0);
 19290  0153B2  0E00               	movlw	low StringAddEqual@temp
 19291  0153B4  0101               	movlb	1	; () banked
 19292  0153B6  6F7C               	movwf	BufferCopy@from& (0+255),b
 19293  0153B8  0E02               	movlw	high StringAddEqual@temp
 19294  0153BA  0101               	movlb	1	; () banked
 19295  0153BC  6F7D               	movwf	(BufferCopy@from+1)& (0+255),b
 19296  0153BE  C183  F17E         	movff	StringAddEqual@Input,BufferCopy@to
 19297  0153C2  C184  F17F         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 19298  0153C6  0E64               	movlw	100
 19299  0153C8  0101               	movlb	1	; () banked
 19300  0153CA  6F80               	movwf	BufferCopy@count& (0+255),b
 19301  0153CC  0E00               	movlw	0
 19302  0153CE  0101               	movlb	1	; () banked
 19303  0153D0  6F81               	movwf	BufferCopy@shift& (0+255),b
 19304  0153D2  EC6A  F0B7         	call	_BufferCopy	;wreg free
 19305  0153D6  0012               	return	
 19306                           
 19307                           ;MISC.c: 349: return 1;
 19308                           ;	Return value of _StringAddEqual is never used
 19309  0153D8  0012               	return		;funcret
 19310  0153DA                     __end_of_StringAddEqual:
 19311                           	opt stack 0
 19312                           tblptru	equ	0xFF8
 19313                           tblptrh	equ	0xFF7
 19314                           tblptrl	equ	0xFF6
 19315                           tablat	equ	0xFF5
 19316                           prodh	equ	0xFF4
 19317                           prodl	equ	0xFF3
 19318                           intcon	equ	0xFF2
 19319                           intcon2	equ	0xFF1
 19320                           postinc0	equ	0xFEE
 19321                           plusw0	equ	0xFEB
 19322                           wreg	equ	0xFE8
 19323                           indf1	equ	0xFE7
 19324                           postdec1	equ	0xFE5
 19325                           fsr1h	equ	0xFE2
 19326                           fsr1l	equ	0xFE1
 19327                           indf2	equ	0xFDF
 19328                           postinc2	equ	0xFDE
 19329                           postdec2	equ	0xFDD
 19330                           plusw2	equ	0xFDB
 19331                           fsr2h	equ	0xFDA
 19332                           fsr2l	equ	0xFD9
 19333                           status	equ	0xFD8
 19334                           
 19335 ;; *************** function _StartsWith *****************
 19336 ;; Defined at:
 19337 ;;		line 181 in file "MISC.c"
 19338 ;; Parameters:    Size  Location     Type
 19339 ;;  This            2   14[BANK1 ] PTR unsigned char 
 19340 ;;		 -> Rxdata(100), 
 19341 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 19342 ;;		 -> STR_253(4), STR_218(4), STR_197(4), STR_180(9), 
 19343 ;;		 -> STR_161(17), STR_160(7), STR_158(4), STR_95(8), 
 19344 ;;		 -> STR_70(11), STR_38(4), 
 19345 ;; Auto vars:     Size  Location     Type
 19346 ;;		None
 19347 ;; Return value:  Size  Location     Type
 19348 ;;                  1    wreg      unsigned char 
 19349 ;; Registers used:
 19350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19351 ;; Tracked objects:
 19352 ;;		On entry : 0/0
 19353 ;;		On exit  : 0/0
 19354 ;;		Unchanged: 0/0
 19355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19356 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19358 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19359 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 19360 ;;Total ram usage:        5 bytes
 19361 ;; Hardware stack levels used:    1
 19362 ;; Hardware stack levels required when called:    7
 19363 ;; This function calls:
 19364 ;;		Nothing
 19365 ;; This function is called by:
 19366 ;;		_Command
 19367 ;; This function uses a non-reentrant model
 19368 ;;
 19369                           
 19370                           	psect	text37
 19371  017754                     __ptext37:
 19372                           	opt stack 0
 19373  017754                     _StartsWith:
 19374                           	opt stack 22
 19375                           
 19376                           ;MISC.c: 183: while(*This != 0)
 19377                           
 19378                           ;incstack = 0
 19379  017754  D02B               	goto	l13875
 19380  017756                     l13859:
 19381                           
 19382                           ;MISC.c: 184: {
 19383                           ;MISC.c: 185: if(*This != *That)
 19384  017756  C174  FFD9         	movff	StartsWith@This,fsr2l
 19385  01775A  C175  FFDA         	movff	StartsWith@This+1,fsr2h
 19386  01775E  50DF               	movf	indf2,w,c
 19387  017760  0101               	movlb	1	; () banked
 19388  017762  6F78               	movwf	??_StartsWith& (0+255),b
 19389  017764  C176  FFF6         	movff	StartsWith@That,tblptrl
 19390  017768  C177  FFF7         	movff	StartsWith@That+1,tblptrh
 19391  01776C                     	if	0	;tblptru may be non-zero
 19392  01776C                     	endif
 19393  01776C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19394  01776C  0E00               	movlw	low (__mediumconst shr (0+16))
 19395  01776E  6EF8               	movwf	tblptru,c
 19396  017770                     	endif
 19397  017770  0008               	tblrd		*
 19398  017772  50F5               	movf	tablat,w,c
 19399  017774  0101               	movlb	1	; () banked
 19400  017776  1978               	xorwf	??_StartsWith& (0+255),w,b
 19401  017778  B4D8               	btfsc	status,2,c
 19402  01777A  D011               	goto	l13873
 19403                           
 19404                           ; BSR set to: 1
 19405                           ;MISC.c: 186: {
 19406                           ;MISC.c: 187: if(*That != 0)
 19407  01777C  C176  FFF6         	movff	StartsWith@That,tblptrl
 19408  017780  C177  FFF7         	movff	StartsWith@That+1,tblptrh
 19409  017784                     	if	0	;tblptru may be non-zero
 19410  017784                     	endif
 19411  017784                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19412  017784  0E00               	movlw	low (__mediumconst shr (0+16))
 19413  017786  6EF8               	movwf	tblptru,c
 19414  017788                     	endif
 19415  017788  0008               	tblrd		*
 19416  01778A  50F5               	movf	tablat,w,c
 19417  01778C  0900               	iorlw	0
 19418  01778E  B4D8               	btfsc	status,2,c
 19419  017790  D003               	goto	l13869
 19420                           
 19421                           ; BSR set to: 1
 19422                           ;MISC.c: 188: {
 19423                           ;MISC.c: 189: return 0;
 19424  017792  0E00               	movlw	0
 19425                           
 19426                           ; BSR set to: 1
 19427  017794  0012               	return	
 19428                           
 19429                           ; BSR set to: 1
 19430                           ;MISC.c: 190: }
 19431  017796  D003               	goto	l13873
 19432  017798                     l13869:
 19433                           
 19434                           ; BSR set to: 1
 19435                           ;MISC.c: 191: else
 19436                           ;MISC.c: 192: {
 19437                           ;MISC.c: 193: return 1;
 19438  017798  0E01               	movlw	1
 19439                           
 19440                           ; BSR set to: 1
 19441  01779A  0012               	return	
 19442                           
 19443                           ; BSR set to: 1
 19444  01779C  D000               	goto	l13873
 19445  01779E                     l13873:
 19446                           
 19447                           ; BSR set to: 1
 19448                           ;MISC.c: 194: }
 19449                           ;MISC.c: 195: }
 19450                           ;MISC.c: 196: This++;
 19451  01779E  0101               	movlb	1	; () banked
 19452  0177A0  4B74               	infsnz	StartsWith@This& (0+255),f,b
 19453  0177A2  2B75               	incf	(StartsWith@This+1)& (0+255),f,b
 19454                           
 19455                           ;MISC.c: 197: That++;
 19456  0177A4  0101               	movlb	1	; () banked
 19457  0177A6  4B76               	infsnz	StartsWith@That& (0+255),f,b
 19458  0177A8  2B77               	incf	(StartsWith@That+1)& (0+255),f,b
 19459  0177AA  D000               	goto	l13875
 19460  0177AC                     l13875:
 19461  0177AC  C174  FFD9         	movff	StartsWith@This,fsr2l
 19462  0177B0  C175  FFDA         	movff	StartsWith@This+1,fsr2h
 19463  0177B4  50DF               	movf	indf2,w,c
 19464  0177B6  A4D8               	btfss	status,2,c
 19465  0177B8  D7CE               	goto	l13859
 19466                           
 19467                           ;MISC.c: 198: }
 19468                           ;MISC.c: 199: if(*This == 0 && *That == 0)
 19469  0177BA  C174  FFD9         	movff	StartsWith@This,fsr2l
 19470  0177BE  C175  FFDA         	movff	StartsWith@This+1,fsr2h
 19471  0177C2  50DF               	movf	indf2,w,c
 19472  0177C4  A4D8               	btfss	status,2,c
 19473  0177C6  D00D               	goto	l13887
 19474  0177C8  C176  FFF6         	movff	StartsWith@That,tblptrl
 19475  0177CC  C177  FFF7         	movff	StartsWith@That+1,tblptrh
 19476  0177D0                     	if	0	;tblptru may be non-zero
 19477  0177D0                     	endif
 19478  0177D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19479  0177D0  0E00               	movlw	low (__mediumconst shr (0+16))
 19480  0177D2  6EF8               	movwf	tblptru,c
 19481  0177D4                     	endif
 19482  0177D4  0008               	tblrd		*
 19483  0177D6  50F5               	movf	tablat,w,c
 19484  0177D8  0900               	iorlw	0
 19485  0177DA  A4D8               	btfss	status,2,c
 19486  0177DC  D002               	goto	l13887
 19487                           
 19488                           ;MISC.c: 200: {
 19489                           ;MISC.c: 202: return 1;
 19490  0177DE  0E01               	movlw	1
 19491                           
 19492                           ;MISC.c: 203: }
 19493  0177E0  0012               	return	
 19494  0177E2                     l13887:
 19495                           
 19496                           ;MISC.c: 204: else
 19497                           ;MISC.c: 205: {
 19498                           ;MISC.c: 207: return 0;
 19499  0177E2  0E00               	movlw	0
 19500  0177E4  0012               	return	
 19501  0177E6  0012               	return		;funcret
 19502  0177E8                     __end_of_StartsWith:
 19503                           	opt stack 0
 19504                           tblptru	equ	0xFF8
 19505                           tblptrh	equ	0xFF7
 19506                           tblptrl	equ	0xFF6
 19507                           tablat	equ	0xFF5
 19508                           prodh	equ	0xFF4
 19509                           prodl	equ	0xFF3
 19510                           intcon	equ	0xFF2
 19511                           intcon2	equ	0xFF1
 19512                           postinc0	equ	0xFEE
 19513                           plusw0	equ	0xFEB
 19514                           wreg	equ	0xFE8
 19515                           indf1	equ	0xFE7
 19516                           postdec1	equ	0xFE5
 19517                           fsr1h	equ	0xFE2
 19518                           fsr1l	equ	0xFE1
 19519                           indf2	equ	0xFDF
 19520                           postinc2	equ	0xFDE
 19521                           postdec2	equ	0xFDD
 19522                           plusw2	equ	0xFDB
 19523                           fsr2h	equ	0xFDA
 19524                           fsr2l	equ	0xFD9
 19525                           status	equ	0xFD8
 19526                           
 19527 ;; *************** function _SprintDate *****************
 19528 ;; Defined at:
 19529 ;;		line 254 in file "RTC.c"
 19530 ;; Parameters:    Size  Location     Type
 19531 ;;  ReturnBuf       2   80[BANK1 ] PTR unsigned char 
 19532 ;;		 -> Command@buf(200), 
 19533 ;;  DisplayTime     9   82[BANK1 ] struct TIME
 19534 ;;  Military        1   91[BANK1 ] unsigned char 
 19535 ;; Auto vars:     Size  Location     Type
 19536 ;;		None
 19537 ;; Return value:  Size  Location     Type
 19538 ;;		None               void
 19539 ;; Registers used:
 19540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19541 ;; Tracked objects:
 19542 ;;		On entry : 0/0
 19543 ;;		On exit  : 0/0
 19544 ;;		Unchanged: 0/0
 19545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19546 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 19547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19549 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 19550 ;;Total ram usage:       12 bytes
 19551 ;; Hardware stack levels used:    1
 19552 ;; Hardware stack levels required when called:    9
 19553 ;; This function calls:
 19554 ;;		_sprintf
 19555 ;; This function is called by:
 19556 ;;		_Command
 19557 ;; This function uses a non-reentrant model
 19558 ;;
 19559                           
 19560                           	psect	text38
 19561  0164AE                     __ptext38:
 19562                           	opt stack 0
 19563  0164AE                     _SprintDate:
 19564                           	opt stack 20
 19565                           
 19566                           ;RTC.c: 256: if(!Military)
 19567                           
 19568                           ;incstack = 0
 19569  0164AE  0101               	movlb	1	; () banked
 19570  0164B0  51C1               	movf	SprintDate@Military& (0+255),w,b
 19571  0164B2  0101               	movlb	1	; () banked
 19572  0164B4  A4D8               	btfss	status,2,c
 19573  0164B6  D04E               	goto	l14265
 19574                           
 19575                           ; BSR set to: 1
 19576                           ;RTC.c: 257: {
 19577                           ;RTC.c: 258: if(!DisplayTime.HoursAM_PM)
 19578  0164B8  0101               	movlb	1	; () banked
 19579  0164BA  51BC               	movf	(SprintDate@DisplayTime+4)& (0+255),w,b
 19580  0164BC  A4D8               	btfss	status,2,c
 19581  0164BE  D025               	goto	l14263
 19582                           
 19583                           ; BSR set to: 1
 19584                           ;RTC.c: 259: {
 19585                           ;RTC.c: 260: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d AM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 19586  0164C0  C1B6  F18A         	movff	SprintDate@ReturnBuf,sprintf@sp
 19587  0164C4  C1B7  F18B         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 19588  0164C8  0E14               	movlw	low STR_321
 19589  0164CA  0101               	movlb	1	; () banked
 19590  0164CC  6F8C               	movwf	sprintf@f& (0+255),b
 19591  0164CE  0EF3               	movlw	high STR_321
 19592  0164D0  0101               	movlb	1	; () banked
 19593  0164D2  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 19594  0164D4  C1BF  F18E         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 19595  0164D8  0101               	movlb	1	; () banked
 19596  0164DA  6B8F               	clrf	(?_sprintf+5)& (0+255),b
 19597  0164DC  C1BE  F190         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 19598  0164E0  0101               	movlb	1	; () banked
 19599  0164E2  6B91               	clrf	(?_sprintf+7)& (0+255),b
 19600  0164E4  C1C0  F192         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 19601  0164E8  0101               	movlb	1	; () banked
 19602  0164EA  6B93               	clrf	(?_sprintf+9)& (0+255),b
 19603  0164EC  C1BA  F194         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 19604  0164F0  0101               	movlb	1	; () banked
 19605  0164F2  6B95               	clrf	(?_sprintf+11)& (0+255),b
 19606  0164F4  C1B9  F196         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 19607  0164F8  0101               	movlb	1	; () banked
 19608  0164FA  6B97               	clrf	(?_sprintf+13)& (0+255),b
 19609  0164FC  C1B8  F198         	movff	SprintDate@DisplayTime,?_sprintf+14
 19610  016500  0101               	movlb	1	; () banked
 19611  016502  6B99               	clrf	(?_sprintf+15)& (0+255),b
 19612  016504  EC87  F093         	call	_sprintf	;wreg free
 19613                           
 19614                           ;RTC.c: 261: }
 19615  016508  0012               	return	
 19616  01650A                     l14263:
 19617                           
 19618                           ;RTC.c: 262: else
 19619                           ;RTC.c: 263: {
 19620                           ;RTC.c: 264: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d PM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 19621  01650A  C1B6  F18A         	movff	SprintDate@ReturnBuf,sprintf@sp
 19622  01650E  C1B7  F18B         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 19623  016512  0E37               	movlw	low STR_322
 19624  016514  0101               	movlb	1	; () banked
 19625  016516  6F8C               	movwf	sprintf@f& (0+255),b
 19626  016518  0EF3               	movlw	high STR_322
 19627  01651A  0101               	movlb	1	; () banked
 19628  01651C  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 19629  01651E  C1BF  F18E         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 19630  016522  0101               	movlb	1	; () banked
 19631  016524  6B8F               	clrf	(?_sprintf+5)& (0+255),b
 19632  016526  C1BE  F190         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 19633  01652A  0101               	movlb	1	; () banked
 19634  01652C  6B91               	clrf	(?_sprintf+7)& (0+255),b
 19635  01652E  C1C0  F192         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 19636  016532  0101               	movlb	1	; () banked
 19637  016534  6B93               	clrf	(?_sprintf+9)& (0+255),b
 19638  016536  C1BA  F194         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 19639  01653A  0101               	movlb	1	; () banked
 19640  01653C  6B95               	clrf	(?_sprintf+11)& (0+255),b
 19641  01653E  C1B9  F196         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 19642  016542  0101               	movlb	1	; () banked
 19643  016544  6B97               	clrf	(?_sprintf+13)& (0+255),b
 19644  016546  C1B8  F198         	movff	SprintDate@DisplayTime,?_sprintf+14
 19645  01654A  0101               	movlb	1	; () banked
 19646  01654C  6B99               	clrf	(?_sprintf+15)& (0+255),b
 19647  01654E  EC87  F093         	call	_sprintf	;wreg free
 19648                           
 19649                           ;RTC.c: 265: }
 19650                           ;RTC.c: 266: }
 19651  016552  0012               	return	
 19652  016554                     l14265:
 19653                           
 19654                           ;RTC.c: 267: else
 19655                           ;RTC.c: 268: {
 19656                           ;RTC.c: 269: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d", DisplayTime.Month, Dis
      +                          playTime.Date, DisplayTime.Year, DisplayTime.HoursMilitary, DisplayTime.Minutes, Display
      +                          Time.Seconds);
 19657  016554  C1B6  F18A         	movff	SprintDate@ReturnBuf,sprintf@sp
 19658  016558  C1B7  F18B         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 19659  01655C  0EDF               	movlw	low STR_323
 19660  01655E  0101               	movlb	1	; () banked
 19661  016560  6F8C               	movwf	sprintf@f& (0+255),b
 19662  016562  0EF3               	movlw	high STR_323
 19663  016564  0101               	movlb	1	; () banked
 19664  016566  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 19665  016568  C1BF  F18E         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 19666  01656C  0101               	movlb	1	; () banked
 19667  01656E  6B8F               	clrf	(?_sprintf+5)& (0+255),b
 19668  016570  C1BE  F190         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 19669  016574  0101               	movlb	1	; () banked
 19670  016576  6B91               	clrf	(?_sprintf+7)& (0+255),b
 19671  016578  C1C0  F192         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 19672  01657C  0101               	movlb	1	; () banked
 19673  01657E  6B93               	clrf	(?_sprintf+9)& (0+255),b
 19674  016580  C1BB  F194         	movff	SprintDate@DisplayTime+3,?_sprintf+10
 19675  016584  0101               	movlb	1	; () banked
 19676  016586  6B95               	clrf	(?_sprintf+11)& (0+255),b
 19677  016588  C1B9  F196         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 19678  01658C  0101               	movlb	1	; () banked
 19679  01658E  6B97               	clrf	(?_sprintf+13)& (0+255),b
 19680  016590  C1B8  F198         	movff	SprintDate@DisplayTime,?_sprintf+14
 19681  016594  0101               	movlb	1	; () banked
 19682  016596  6B99               	clrf	(?_sprintf+15)& (0+255),b
 19683  016598  EC87  F093         	call	_sprintf	;wreg free
 19684  01659C  0012               	return	
 19685  01659E  0012               	return		;funcret
 19686  0165A0                     __end_of_SprintDate:
 19687                           	opt stack 0
 19688                           tblptru	equ	0xFF8
 19689                           tblptrh	equ	0xFF7
 19690                           tblptrl	equ	0xFF6
 19691                           tablat	equ	0xFF5
 19692                           prodh	equ	0xFF4
 19693                           prodl	equ	0xFF3
 19694                           intcon	equ	0xFF2
 19695                           intcon2	equ	0xFF1
 19696                           postinc0	equ	0xFEE
 19697                           plusw0	equ	0xFEB
 19698                           wreg	equ	0xFE8
 19699                           indf1	equ	0xFE7
 19700                           postdec1	equ	0xFE5
 19701                           fsr1h	equ	0xFE2
 19702                           fsr1l	equ	0xFE1
 19703                           indf2	equ	0xFDF
 19704                           postinc2	equ	0xFDE
 19705                           postdec2	equ	0xFDD
 19706                           plusw2	equ	0xFDB
 19707                           fsr2h	equ	0xFDA
 19708                           fsr2l	equ	0xFD9
 19709                           status	equ	0xFD8
 19710                           
 19711 ;; *************** function _SetDuty *****************
 19712 ;; Defined at:
 19713 ;;		line 120 in file "PWM.c"
 19714 ;; Parameters:    Size  Location     Type
 19715 ;;  Duty            1    wreg     unsigned char 
 19716 ;; Auto vars:     Size  Location     Type
 19717 ;;  Duty            1   71[BANK1 ] unsigned char 
 19718 ;;  tempPR2         3   72[BANK1 ] float 
 19719 ;;  temp            2   77[BANK1 ] unsigned int 
 19720 ;;  LSB             1   76[BANK1 ] unsigned char 
 19721 ;;  MSB             1   75[BANK1 ] unsigned char 
 19722 ;; Return value:  Size  Location     Type
 19723 ;;		None               void
 19724 ;; Registers used:
 19725 ;;		wreg, status,2, status,0, cstack
 19726 ;; Tracked objects:
 19727 ;;		On entry : 0/0
 19728 ;;		On exit  : 0/0
 19729 ;;		Unchanged: 0/0
 19730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19732 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 19733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19734 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 19735 ;;Total ram usage:        8 bytes
 19736 ;; Hardware stack levels used:    1
 19737 ;; Hardware stack levels required when called:    9
 19738 ;; This function calls:
 19739 ;;		___ftdiv
 19740 ;;		___ftmul
 19741 ;;		___fttol
 19742 ;;		___lbtoft
 19743 ;; This function is called by:
 19744 ;;		_main
 19745 ;;		_Command
 19746 ;;		_PWM_init
 19747 ;;		_ContrastPWM_init
 19748 ;; This function uses a non-reentrant model
 19749 ;;
 19750                           
 19751                           	psect	text39
 19752  017044                     __ptext39:
 19753                           	opt stack 0
 19754  017044                     _SetDuty:
 19755                           	opt stack 21
 19756                           
 19757                           ;incstack = 0
 19758                           ;SetDuty@Duty stored from wreg
 19759  017044  0101               	movlb	1	; () banked
 19760  017046  6FAD               	movwf	SetDuty@Duty& (0+255),b
 19761                           
 19762                           ; BSR set to: 1
 19763                           ;PWM.c: 122: unsigned int temp=0;
 19764  017048  0E00               	movlw	0
 19765  01704A  0101               	movlb	1	; () banked
 19766  01704C  6FB4               	movwf	(SetDuty@temp+1)& (0+255),b
 19767  01704E  0E00               	movlw	0
 19768  017050  6FB3               	movwf	SetDuty@temp& (0+255),b
 19769                           
 19770                           ; BSR set to: 1
 19771                           ;PWM.c: 123: float tempPR2=0;
 19772  017052  0E00               	movlw	0
 19773  017054  0101               	movlb	1	; () banked
 19774  017056  6FAE               	movwf	SetDuty@tempPR2& (0+255),b
 19775  017058  0E00               	movlw	0
 19776  01705A  0101               	movlb	1	; () banked
 19777  01705C  6FAF               	movwf	(SetDuty@tempPR2+1)& (0+255),b
 19778  01705E  0E00               	movlw	0
 19779  017060  0101               	movlb	1	; () banked
 19780  017062  6FB0               	movwf	(SetDuty@tempPR2+2)& (0+255),b
 19781                           
 19782                           ; BSR set to: 1
 19783                           ;PWM.c: 124: unsigned char MSB,LSB;
 19784                           ;PWM.c: 126: tempPR2 = (float) PR2;
 19785  017064  50CB               	movf	4043,w,c	;volatile
 19786  017066  ECF1  F006         	call	___lbtoft
 19787  01706A  C17C  F1AE         	movff	?___lbtoft,SetDuty@tempPR2
 19788  01706E  C17D  F1AF         	movff	?___lbtoft+1,SetDuty@tempPR2+1
 19789  017072  C17E  F1B0         	movff	?___lbtoft+2,SetDuty@tempPR2+2
 19790                           
 19791                           ;PWM.c: 128: temp = (int)(tempPR2 * ((float)Duty/100));
 19792  017076  C1AE  F192         	movff	SetDuty@tempPR2,___ftmul@f2
 19793  01707A  C1AF  F193         	movff	SetDuty@tempPR2+1,___ftmul@f2+1
 19794  01707E  C1B0  F194         	movff	SetDuty@tempPR2+2,___ftmul@f2+2
 19795  017082  0E00               	movlw	0
 19796  017084  0101               	movlb	1	; () banked
 19797  017086  6F83               	movwf	___ftdiv@f2& (0+255),b
 19798  017088  0EC8               	movlw	200
 19799  01708A  0101               	movlb	1	; () banked
 19800  01708C  6F84               	movwf	(___ftdiv@f2+1)& (0+255),b
 19801  01708E  0E42               	movlw	66
 19802  017090  0101               	movlb	1	; () banked
 19803  017092  6F85               	movwf	(___ftdiv@f2+2)& (0+255),b
 19804  017094  0101               	movlb	1	; () banked
 19805  017096  51AD               	movf	SetDuty@Duty& (0+255),w,b
 19806  017098  ECF1  F006         	call	___lbtoft
 19807  01709C  C17C  F180         	movff	?___lbtoft,___ftdiv@f1
 19808  0170A0  C17D  F181         	movff	?___lbtoft+1,___ftdiv@f1+1
 19809  0170A4  C17E  F182         	movff	?___lbtoft+2,___ftdiv@f1+2
 19810  0170A8  EC64  F0AD         	call	___ftdiv	;wreg free
 19811  0170AC  C180  F18F         	movff	?___ftdiv,___ftmul@f1
 19812  0170B0  C181  F190         	movff	?___ftdiv+1,___ftmul@f1+1
 19813  0170B4  C182  F191         	movff	?___ftdiv+2,___ftmul@f1+2
 19814  0170B8  ECA5  F0AA         	call	___ftmul	;wreg free
 19815  0170BC  C18F  F19E         	movff	?___ftmul,___fttol@f1
 19816  0170C0  C190  F19F         	movff	?___ftmul+1,___fttol@f1+1
 19817  0170C4  C191  F1A0         	movff	?___ftmul+2,___fttol@f1+2
 19818  0170C8  ECBB  F0AC         	call	___fttol	;wreg free
 19819  0170CC  C19E  F1B3         	movff	?___fttol,SetDuty@temp
 19820  0170D0  C19F  F1B4         	movff	?___fttol+1,SetDuty@temp+1
 19821                           
 19822                           ;PWM.c: 129: MSB = (temp & 0x300)>>8;
 19823  0170D4  0101               	movlb	1	; () banked
 19824  0170D6  51B4               	movf	(SetDuty@temp+1)& (0+255),w,b
 19825  0170D8  0B03               	andlw	3
 19826  0170DA  0101               	movlb	1	; () banked
 19827  0170DC  6FB1               	movwf	SetDuty@MSB& (0+255),b
 19828                           
 19829                           ; BSR set to: 1
 19830                           ;PWM.c: 130: LSB = temp & 0xff;
 19831  0170DE  C1B3  F1B2         	movff	SetDuty@temp,SetDuty@LSB
 19832                           
 19833                           ; BSR set to: 1
 19834                           ;PWM.c: 132: CCP1CON &= ~(0b00110000);
 19835  0170E2  0ECF               	movlw	207
 19836  0170E4  16BD               	andwf	4029,f,c	;volatile
 19837                           
 19838                           ; BSR set to: 1
 19839                           ;PWM.c: 133: CCP1CON |= MSB << 4;
 19840  0170E6  0101               	movlb	1	; () banked
 19841  0170E8  39B1               	swapf	SetDuty@MSB& (0+255),w,b
 19842  0170EA  0BF0               	andlw	240
 19843  0170EC  12BD               	iorwf	4029,f,c	;volatile
 19844                           
 19845                           ; BSR set to: 1
 19846                           ;PWM.c: 134: CCPR1L = LSB;
 19847  0170EE  C1B2  FFBE         	movff	SetDuty@LSB,4030	;volatile
 19848                           
 19849                           ; BSR set to: 1
 19850                           ;PWM.c: 135: __nop();
 19851  0170F2  F000               	nop	
 19852  0170F4  0012               	return		;funcret
 19853  0170F6                     __end_of_SetDuty:
 19854                           	opt stack 0
 19855                           tblptru	equ	0xFF8
 19856                           tblptrh	equ	0xFF7
 19857                           tblptrl	equ	0xFF6
 19858                           tablat	equ	0xFF5
 19859                           prodh	equ	0xFF4
 19860                           prodl	equ	0xFF3
 19861                           intcon	equ	0xFF2
 19862                           intcon2	equ	0xFF1
 19863                           postinc0	equ	0xFEE
 19864                           plusw0	equ	0xFEB
 19865                           wreg	equ	0xFE8
 19866                           indf1	equ	0xFE7
 19867                           postdec1	equ	0xFE5
 19868                           fsr1h	equ	0xFE2
 19869                           fsr1l	equ	0xFE1
 19870                           indf2	equ	0xFDF
 19871                           postinc2	equ	0xFDE
 19872                           postdec2	equ	0xFDD
 19873                           plusw2	equ	0xFDB
 19874                           fsr2h	equ	0xFDA
 19875                           fsr2l	equ	0xFD9
 19876                           status	equ	0xFD8
 19877                           
 19878 ;; *************** function _SetContrast *****************
 19879 ;; Defined at:
 19880 ;;		line 94 in file "PWM.c"
 19881 ;; Parameters:    Size  Location     Type
 19882 ;;  Duty            1    wreg     unsigned char 
 19883 ;; Auto vars:     Size  Location     Type
 19884 ;;  Duty            1   78[BANK1 ] unsigned char 
 19885 ;;  tempPR2         3   71[BANK1 ] float 
 19886 ;;  temp            2   76[BANK1 ] unsigned int 
 19887 ;;  LSB             1   75[BANK1 ] unsigned char 
 19888 ;;  MSB             1   74[BANK1 ] unsigned char 
 19889 ;; Return value:  Size  Location     Type
 19890 ;;		None               void
 19891 ;; Registers used:
 19892 ;;		wreg, status,2, status,0, cstack
 19893 ;; Tracked objects:
 19894 ;;		On entry : 0/0
 19895 ;;		On exit  : 0/0
 19896 ;;		Unchanged: 0/0
 19897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19899 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 19900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19901 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 19902 ;;Total ram usage:        8 bytes
 19903 ;; Hardware stack levels used:    1
 19904 ;; Hardware stack levels required when called:    9
 19905 ;; This function calls:
 19906 ;;		___ftdiv
 19907 ;;		___ftmul
 19908 ;;		___fttol
 19909 ;;		___lbtoft
 19910 ;; This function is called by:
 19911 ;;		_main
 19912 ;;		_Command
 19913 ;; This function uses a non-reentrant model
 19914 ;;
 19915                           
 19916                           	psect	text40
 19917  016BC0                     __ptext40:
 19918                           	opt stack 0
 19919  016BC0                     _SetContrast:
 19920                           	opt stack 21
 19921                           
 19922                           ;incstack = 0
 19923                           ;SetContrast@Duty stored from wreg
 19924  016BC0  0101               	movlb	1	; () banked
 19925  016BC2  6FB4               	movwf	SetContrast@Duty& (0+255),b
 19926                           
 19927                           ; BSR set to: 1
 19928                           ;PWM.c: 96: unsigned int temp=0;
 19929  016BC4  0E00               	movlw	0
 19930  016BC6  0101               	movlb	1	; () banked
 19931  016BC8  6FB3               	movwf	(SetContrast@temp+1)& (0+255),b
 19932  016BCA  0E00               	movlw	0
 19933  016BCC  6FB2               	movwf	SetContrast@temp& (0+255),b
 19934                           
 19935                           ; BSR set to: 1
 19936                           ;PWM.c: 97: float tempPR2=0;
 19937  016BCE  0E00               	movlw	0
 19938  016BD0  0101               	movlb	1	; () banked
 19939  016BD2  6FAD               	movwf	SetContrast@tempPR2& (0+255),b
 19940  016BD4  0E00               	movlw	0
 19941  016BD6  0101               	movlb	1	; () banked
 19942  016BD8  6FAE               	movwf	(SetContrast@tempPR2+1)& (0+255),b
 19943  016BDA  0E00               	movlw	0
 19944  016BDC  0101               	movlb	1	; () banked
 19945  016BDE  6FAF               	movwf	(SetContrast@tempPR2+2)& (0+255),b
 19946                           
 19947                           ; BSR set to: 1
 19948                           ;PWM.c: 98: unsigned char MSB,LSB;
 19949                           ;PWM.c: 100: Duty = 100 - Duty;
 19950  016BE0  0101               	movlb	1	; () banked
 19951  016BE2  51B4               	movf	SetContrast@Duty& (0+255),w,b
 19952  016BE4  0800               	sublw	0
 19953  016BE6  0F64               	addlw	100
 19954  016BE8  0101               	movlb	1	; () banked
 19955  016BEA  6FB4               	movwf	SetContrast@Duty& (0+255),b
 19956                           
 19957                           ; BSR set to: 1
 19958                           ;PWM.c: 101: Duty = (Duty>>1);
 19959  016BEC  0101               	movlb	1	; () banked
 19960  016BEE  90D8               	bcf	status,0,c
 19961  016BF0  31B4               	rrcf	SetContrast@Duty& (0+255),w,b
 19962  016BF2  0101               	movlb	1	; () banked
 19963  016BF4  6FB4               	movwf	SetContrast@Duty& (0+255),b
 19964                           
 19965                           ; BSR set to: 1
 19966                           ;PWM.c: 103: tempPR2 = (float) PR2;
 19967  016BF6  50CB               	movf	4043,w,c	;volatile
 19968  016BF8  ECF1  F006         	call	___lbtoft
 19969  016BFC  C17C  F1AD         	movff	?___lbtoft,SetContrast@tempPR2
 19970  016C00  C17D  F1AE         	movff	?___lbtoft+1,SetContrast@tempPR2+1
 19971  016C04  C17E  F1AF         	movff	?___lbtoft+2,SetContrast@tempPR2+2
 19972                           
 19973                           ;PWM.c: 105: temp = (int)(tempPR2 * ((float)Duty/100));
 19974  016C08  C1AD  F192         	movff	SetContrast@tempPR2,___ftmul@f2
 19975  016C0C  C1AE  F193         	movff	SetContrast@tempPR2+1,___ftmul@f2+1
 19976  016C10  C1AF  F194         	movff	SetContrast@tempPR2+2,___ftmul@f2+2
 19977  016C14  0E00               	movlw	0
 19978  016C16  0101               	movlb	1	; () banked
 19979  016C18  6F83               	movwf	___ftdiv@f2& (0+255),b
 19980  016C1A  0EC8               	movlw	200
 19981  016C1C  0101               	movlb	1	; () banked
 19982  016C1E  6F84               	movwf	(___ftdiv@f2+1)& (0+255),b
 19983  016C20  0E42               	movlw	66
 19984  016C22  0101               	movlb	1	; () banked
 19985  016C24  6F85               	movwf	(___ftdiv@f2+2)& (0+255),b
 19986  016C26  0101               	movlb	1	; () banked
 19987  016C28  51B4               	movf	SetContrast@Duty& (0+255),w,b
 19988  016C2A  ECF1  F006         	call	___lbtoft
 19989  016C2E  C17C  F180         	movff	?___lbtoft,___ftdiv@f1
 19990  016C32  C17D  F181         	movff	?___lbtoft+1,___ftdiv@f1+1
 19991  016C36  C17E  F182         	movff	?___lbtoft+2,___ftdiv@f1+2
 19992  016C3A  EC64  F0AD         	call	___ftdiv	;wreg free
 19993  016C3E  C180  F18F         	movff	?___ftdiv,___ftmul@f1
 19994  016C42  C181  F190         	movff	?___ftdiv+1,___ftmul@f1+1
 19995  016C46  C182  F191         	movff	?___ftdiv+2,___ftmul@f1+2
 19996  016C4A  ECA5  F0AA         	call	___ftmul	;wreg free
 19997  016C4E  C18F  F19E         	movff	?___ftmul,___fttol@f1
 19998  016C52  C190  F19F         	movff	?___ftmul+1,___fttol@f1+1
 19999  016C56  C191  F1A0         	movff	?___ftmul+2,___fttol@f1+2
 20000  016C5A  ECBB  F0AC         	call	___fttol	;wreg free
 20001  016C5E  C19E  F1B2         	movff	?___fttol,SetContrast@temp
 20002  016C62  C19F  F1B3         	movff	?___fttol+1,SetContrast@temp+1
 20003                           
 20004                           ;PWM.c: 106: MSB = (temp & 0x300)>>8;
 20005  016C66  0101               	movlb	1	; () banked
 20006  016C68  51B3               	movf	(SetContrast@temp+1)& (0+255),w,b
 20007  016C6A  0B03               	andlw	3
 20008  016C6C  0101               	movlb	1	; () banked
 20009  016C6E  6FB0               	movwf	SetContrast@MSB& (0+255),b
 20010                           
 20011                           ; BSR set to: 1
 20012                           ;PWM.c: 107: LSB = temp & 0xff;
 20013  016C70  C1B2  F1B1         	movff	SetContrast@temp,SetContrast@LSB
 20014                           
 20015                           ; BSR set to: 1
 20016                           ;PWM.c: 109: ECCP1CON &= ~0b00110000;
 20017  016C74  0ECF               	movlw	207
 20018  016C76  16BA               	andwf	4026,f,c	;volatile
 20019                           
 20020                           ; BSR set to: 1
 20021                           ;PWM.c: 110: ECCP1CON |= MSB << 4;
 20022  016C78  0101               	movlb	1	; () banked
 20023  016C7A  39B0               	swapf	SetContrast@MSB& (0+255),w,b
 20024  016C7C  0BF0               	andlw	240
 20025  016C7E  12BA               	iorwf	4026,f,c	;volatile
 20026                           
 20027                           ; BSR set to: 1
 20028                           ;PWM.c: 111: ECCPR1L = LSB;
 20029  016C80  C1B1  FFBB         	movff	SetContrast@LSB,4027	;volatile
 20030                           
 20031                           ; BSR set to: 1
 20032                           ;PWM.c: 112: __nop();
 20033  016C84  F000               	nop	
 20034  016C86  0012               	return		;funcret
 20035  016C88                     __end_of_SetContrast:
 20036                           	opt stack 0
 20037                           tblptru	equ	0xFF8
 20038                           tblptrh	equ	0xFF7
 20039                           tblptrl	equ	0xFF6
 20040                           tablat	equ	0xFF5
 20041                           prodh	equ	0xFF4
 20042                           prodl	equ	0xFF3
 20043                           intcon	equ	0xFF2
 20044                           intcon2	equ	0xFF1
 20045                           postinc0	equ	0xFEE
 20046                           plusw0	equ	0xFEB
 20047                           wreg	equ	0xFE8
 20048                           indf1	equ	0xFE7
 20049                           postdec1	equ	0xFE5
 20050                           fsr1h	equ	0xFE2
 20051                           fsr1l	equ	0xFE1
 20052                           indf2	equ	0xFDF
 20053                           postinc2	equ	0xFDE
 20054                           postdec2	equ	0xFDD
 20055                           plusw2	equ	0xFDB
 20056                           fsr2h	equ	0xFDA
 20057                           fsr2l	equ	0xFD9
 20058                           status	equ	0xFD8
 20059                           
 20060 ;; *************** function ___lbtoft *****************
 20061 ;; Defined at:
 20062 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
 20063 ;; Parameters:    Size  Location     Type
 20064 ;;  c               1    wreg     unsigned char 
 20065 ;; Auto vars:     Size  Location     Type
 20066 ;;  c               1   25[BANK1 ] unsigned char 
 20067 ;; Return value:  Size  Location     Type
 20068 ;;                  3   22[BANK1 ] float 
 20069 ;; Registers used:
 20070 ;;		wreg, status,2, status,0, cstack
 20071 ;; Tracked objects:
 20072 ;;		On entry : 0/0
 20073 ;;		On exit  : 0/0
 20074 ;;		Unchanged: 0/0
 20075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20076 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20077 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20079 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 20080 ;;Total ram usage:        4 bytes
 20081 ;; Hardware stack levels used:    1
 20082 ;; Hardware stack levels required when called:    8
 20083 ;; This function calls:
 20084 ;;		___ftpack
 20085 ;; This function is called by:
 20086 ;;		_SetContrast
 20087 ;;		_SetDuty
 20088 ;; This function uses a non-reentrant model
 20089 ;;
 20090                           
 20091                           	psect	text41
 20092  000DE2                     __ptext41:
 20093                           	opt stack 0
 20094  000DE2                     ___lbtoft:
 20095                           	opt stack 21
 20096                           
 20097                           ;incstack = 0
 20098                           ;___lbtoft@c stored from wreg
 20099  000DE2  0101               	movlb	1	; () banked
 20100  000DE4  6F7F               	movwf	___lbtoft@c& (0+255),b
 20101                           
 20102                           ; BSR set to: 1
 20103  000DE6  0101               	movlb	1	; () banked
 20104  000DE8  517F               	movf	___lbtoft@c& (0+255),w,b
 20105  000DEA  0101               	movlb	1	; () banked
 20106  000DEC  6F74               	movwf	___ftpack@arg& (0+255),b
 20107  000DEE  6B75               	clrf	(___ftpack@arg+1)& (0+255),b
 20108  000DF0  6B76               	clrf	(___ftpack@arg+2)& (0+255),b
 20109  000DF2  0E8E               	movlw	142
 20110  000DF4  0101               	movlb	1	; () banked
 20111  000DF6  6F77               	movwf	___ftpack@exp& (0+255),b
 20112  000DF8  0E00               	movlw	0
 20113  000DFA  0101               	movlb	1	; () banked
 20114  000DFC  6F78               	movwf	___ftpack@sign& (0+255),b
 20115  000DFE  ECCA  F0AF         	call	___ftpack	;wreg free
 20116  000E02  C174  F17C         	movff	?___ftpack,?___lbtoft
 20117  000E06  C175  F17D         	movff	?___ftpack+1,?___lbtoft+1
 20118  000E0A  C176  F17E         	movff	?___ftpack+2,?___lbtoft+2
 20119  000E0E  0012               	return	
 20120  000E10  0012               	return		;funcret
 20121  000E12                     __end_of___lbtoft:
 20122                           	opt stack 0
 20123                           tblptru	equ	0xFF8
 20124                           tblptrh	equ	0xFF7
 20125                           tblptrl	equ	0xFF6
 20126                           tablat	equ	0xFF5
 20127                           prodh	equ	0xFF4
 20128                           prodl	equ	0xFF3
 20129                           intcon	equ	0xFF2
 20130                           intcon2	equ	0xFF1
 20131                           postinc0	equ	0xFEE
 20132                           plusw0	equ	0xFEB
 20133                           wreg	equ	0xFE8
 20134                           indf1	equ	0xFE7
 20135                           postdec1	equ	0xFE5
 20136                           fsr1h	equ	0xFE2
 20137                           fsr1l	equ	0xFE1
 20138                           indf2	equ	0xFDF
 20139                           postinc2	equ	0xFDE
 20140                           postdec2	equ	0xFDD
 20141                           plusw2	equ	0xFDB
 20142                           fsr2h	equ	0xFDA
 20143                           fsr2l	equ	0xFD9
 20144                           status	equ	0xFD8
 20145                           
 20146 ;; *************** function ___fttol *****************
 20147 ;; Defined at:
 20148 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 20149 ;; Parameters:    Size  Location     Type
 20150 ;;  f1              3   56[BANK1 ] float 
 20151 ;; Auto vars:     Size  Location     Type
 20152 ;;  lval            4   66[BANK1 ] unsigned long 
 20153 ;;  exp1            1   70[BANK1 ] unsigned char 
 20154 ;;  sign1           1   65[BANK1 ] unsigned char 
 20155 ;; Return value:  Size  Location     Type
 20156 ;;                  4   56[BANK1 ] long 
 20157 ;; Registers used:
 20158 ;;		wreg, status,2, status,0
 20159 ;; Tracked objects:
 20160 ;;		On entry : 0/0
 20161 ;;		On exit  : 0/0
 20162 ;;		Unchanged: 0/0
 20163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20164 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 20165 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20166 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 20167 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 20168 ;;Total ram usage:       15 bytes
 20169 ;; Hardware stack levels used:    1
 20170 ;; Hardware stack levels required when called:    7
 20171 ;; This function calls:
 20172 ;;		Nothing
 20173 ;; This function is called by:
 20174 ;;		_Command
 20175 ;;		_SetContrast
 20176 ;;		_SetDuty
 20177 ;; This function uses a non-reentrant model
 20178 ;;
 20179                           
 20180                           	psect	text42
 20181  015976                     __ptext42:
 20182                           	opt stack 0
 20183  015976                     ___fttol:
 20184                           	opt stack 22
 20185                           
 20186                           ;incstack = 0
 20187  015976  C1A0  F1A2         	movff	___fttol@f1+2,??___fttol
 20188  01597A  0101               	movlb	1	; () banked
 20189  01597C  6BA3               	clrf	(??___fttol+1)& (0+255),b
 20190  01597E  6BA4               	clrf	(??___fttol+2)& (0+255),b
 20191  015980  0101               	movlb	1	; () banked
 20192  015982  359F               	rlcf	(___fttol@f1+1)& (0+255),w,b
 20193  015984  0101               	movlb	1	; () banked
 20194  015986  37A2               	rlcf	??___fttol& (0+255),f,b
 20195  015988  E301               	bnc	u17291
 20196  01598A  81A3               	bsf	(??___fttol+1)& (0+255),0,b
 20197  01598C                     u17291:
 20198  01598C  0101               	movlb	1	; () banked
 20199  01598E  51A2               	movf	??___fttol& (0+255),w,b
 20200  015990  0101               	movlb	1	; () banked
 20201  015992  6FAC               	movwf	___fttol@exp1& (0+255),b
 20202  015994  0101               	movlb	1	; () banked
 20203  015996  51AC               	movf	___fttol@exp1& (0+255),w,b
 20204  015998  A4D8               	btfss	status,2,c
 20205  01599A  D00A               	goto	l13625
 20206                           
 20207                           ; BSR set to: 1
 20208  01599C  0E00               	movlw	0
 20209  01599E  0101               	movlb	1	; () banked
 20210  0159A0  6F9E               	movwf	?___fttol& (0+255),b
 20211  0159A2  0E00               	movlw	0
 20212  0159A4  6F9F               	movwf	(?___fttol+1)& (0+255),b
 20213  0159A6  0E00               	movlw	0
 20214  0159A8  6FA0               	movwf	(?___fttol+2)& (0+255),b
 20215  0159AA  0E00               	movlw	0
 20216  0159AC  6FA1               	movwf	(?___fttol+3)& (0+255),b
 20217                           
 20218                           ; BSR set to: 1
 20219  0159AE  0012               	return	
 20220  0159B0                     l13625:
 20221                           
 20222                           ; BSR set to: 1
 20223  0159B0  0E17               	movlw	23
 20224  0159B2  0101               	movlb	1	; () banked
 20225  0159B4  6FA2               	movwf	??___fttol& (0+255),b
 20226  0159B6  C19E  F1A3         	movff	___fttol@f1,??___fttol+1
 20227  0159BA  C19F  F1A4         	movff	___fttol@f1+1,??___fttol+2
 20228  0159BE  C1A0  F1A5         	movff	___fttol@f1+2,??___fttol+3
 20229  0159C2  0101               	movlb	1	; () banked
 20230  0159C4  29A2               	incf	??___fttol& (0+255),w,b
 20231  0159C6  0101               	movlb	1	; () banked
 20232  0159C8  6FA6               	movwf	(??___fttol+4)& (0+255),b
 20233  0159CA  D005               	goto	u17310
 20234  0159CC                     u17315:
 20235  0159CC  0101               	movlb	1	; () banked
 20236  0159CE  90D8               	bcf	status,0,c
 20237  0159D0  33A5               	rrcf	(??___fttol+3)& (0+255),f,b
 20238  0159D2  33A4               	rrcf	(??___fttol+2)& (0+255),f,b
 20239  0159D4  33A3               	rrcf	(??___fttol+1)& (0+255),f,b
 20240  0159D6                     u17310:
 20241  0159D6  0101               	movlb	1	; () banked
 20242  0159D8  2FA6               	decfsz	(??___fttol+4)& (0+255),f,b
 20243  0159DA  D7F8               	goto	u17315
 20244  0159DC  0101               	movlb	1	; () banked
 20245  0159DE  51A3               	movf	(??___fttol+1)& (0+255),w,b
 20246  0159E0  0101               	movlb	1	; () banked
 20247  0159E2  6FA7               	movwf	___fttol@sign1& (0+255),b
 20248                           
 20249                           ; BSR set to: 1
 20250  0159E4  0101               	movlb	1	; () banked
 20251  0159E6  8F9F               	bsf	(___fttol@f1+1)& (0+255),7,b
 20252                           
 20253                           ; BSR set to: 1
 20254  0159E8  0EFF               	movlw	255
 20255  0159EA  0101               	movlb	1	; () banked
 20256  0159EC  179E               	andwf	___fttol@f1& (0+255),f,b
 20257  0159EE  0EFF               	movlw	255
 20258  0159F0  0101               	movlb	1	; () banked
 20259  0159F2  179F               	andwf	(___fttol@f1+1)& (0+255),f,b
 20260  0159F4  0E00               	movlw	0
 20261  0159F6  0101               	movlb	1	; () banked
 20262  0159F8  17A0               	andwf	(___fttol@f1+2)& (0+255),f,b
 20263                           
 20264                           ; BSR set to: 1
 20265  0159FA  0101               	movlb	1	; () banked
 20266  0159FC  519E               	movf	___fttol@f1& (0+255),w,b
 20267  0159FE  0101               	movlb	1	; () banked
 20268  015A00  6FA8               	movwf	___fttol@lval& (0+255),b
 20269  015A02  0101               	movlb	1	; () banked
 20270  015A04  519F               	movf	(___fttol@f1+1)& (0+255),w,b
 20271  015A06  0101               	movlb	1	; () banked
 20272  015A08  6FA9               	movwf	(___fttol@lval+1)& (0+255),b
 20273  015A0A  0101               	movlb	1	; () banked
 20274  015A0C  51A0               	movf	(___fttol@f1+2)& (0+255),w,b
 20275  015A0E  0101               	movlb	1	; () banked
 20276  015A10  6FAA               	movwf	(___fttol@lval+2)& (0+255),b
 20277  015A12  0101               	movlb	1	; () banked
 20278  015A14  6BAB               	clrf	(___fttol@lval+3)& (0+255),b
 20279                           
 20280                           ; BSR set to: 1
 20281  015A16  0E8E               	movlw	142
 20282  015A18  0101               	movlb	1	; () banked
 20283  015A1A  5FAC               	subwf	___fttol@exp1& (0+255),f,b
 20284                           
 20285                           ; BSR set to: 1
 20286  015A1C  0101               	movlb	1	; () banked
 20287  015A1E  AFAC               	btfss	___fttol@exp1& (0+255),7,b
 20288  015A20  D01B               	goto	l13647
 20289                           
 20290                           ; BSR set to: 1
 20291  015A22  0101               	movlb	1	; () banked
 20292  015A24  51AC               	movf	___fttol@exp1& (0+255),w,b
 20293  015A26  0A80               	xorlw	128
 20294  015A28  0F8F               	addlw	143
 20295  015A2A  B0D8               	btfsc	status,0,c
 20296  015A2C  D00B               	goto	l13643
 20297                           
 20298                           ; BSR set to: 1
 20299  015A2E  0E00               	movlw	0
 20300  015A30  0101               	movlb	1	; () banked
 20301  015A32  6F9E               	movwf	?___fttol& (0+255),b
 20302  015A34  0E00               	movlw	0
 20303  015A36  6F9F               	movwf	(?___fttol+1)& (0+255),b
 20304  015A38  0E00               	movlw	0
 20305  015A3A  6FA0               	movwf	(?___fttol+2)& (0+255),b
 20306  015A3C  0E00               	movlw	0
 20307  015A3E  6FA1               	movwf	(?___fttol+3)& (0+255),b
 20308                           
 20309                           ; BSR set to: 1
 20310  015A40  0012               	return	
 20311                           
 20312                           ; BSR set to: 1
 20313  015A42  D000               	goto	l13643
 20314  015A44                     l13643:
 20315                           
 20316                           ; BSR set to: 1
 20317  015A44  0101               	movlb	1	; () banked
 20318  015A46  90D8               	bcf	status,0,c
 20319  015A48  33AB               	rrcf	(___fttol@lval+3)& (0+255),f,b
 20320  015A4A  33AA               	rrcf	(___fttol@lval+2)& (0+255),f,b
 20321  015A4C  33A9               	rrcf	(___fttol@lval+1)& (0+255),f,b
 20322  015A4E  33A8               	rrcf	___fttol@lval& (0+255),f,b
 20323                           
 20324                           ; BSR set to: 1
 20325  015A50  0101               	movlb	1	; () banked
 20326  015A52  3FAC               	incfsz	___fttol@exp1& (0+255),f,b
 20327  015A54  D7F7               	goto	l13643
 20328                           
 20329                           ; BSR set to: 1
 20330  015A56  D01F               	goto	l13657
 20331  015A58                     l13647:
 20332                           
 20333                           ; BSR set to: 1
 20334  015A58  0E17               	movlw	23
 20335  015A5A  0101               	movlb	1	; () banked
 20336  015A5C  65AC               	cpfsgt	___fttol@exp1& (0+255),b
 20337  015A5E  D014               	goto	l13655
 20338                           
 20339                           ; BSR set to: 1
 20340  015A60  0E00               	movlw	0
 20341  015A62  0101               	movlb	1	; () banked
 20342  015A64  6F9E               	movwf	?___fttol& (0+255),b
 20343  015A66  0E00               	movlw	0
 20344  015A68  6F9F               	movwf	(?___fttol+1)& (0+255),b
 20345  015A6A  0E00               	movlw	0
 20346  015A6C  6FA0               	movwf	(?___fttol+2)& (0+255),b
 20347  015A6E  0E00               	movlw	0
 20348  015A70  6FA1               	movwf	(?___fttol+3)& (0+255),b
 20349                           
 20350                           ; BSR set to: 1
 20351  015A72  0012               	return	
 20352                           
 20353                           ; BSR set to: 1
 20354  015A74  D009               	goto	l13655
 20355  015A76                     l13653:
 20356                           
 20357                           ; BSR set to: 1
 20358  015A76  0101               	movlb	1	; () banked
 20359  015A78  90D8               	bcf	status,0,c
 20360  015A7A  37A8               	rlcf	___fttol@lval& (0+255),f,b
 20361  015A7C  37A9               	rlcf	(___fttol@lval+1)& (0+255),f,b
 20362  015A7E  37AA               	rlcf	(___fttol@lval+2)& (0+255),f,b
 20363  015A80  37AB               	rlcf	(___fttol@lval+3)& (0+255),f,b
 20364  015A82  0101               	movlb	1	; () banked
 20365  015A84  07AC               	decf	___fttol@exp1& (0+255),f,b
 20366  015A86  D000               	goto	l13655
 20367  015A88                     l13655:
 20368                           
 20369                           ; BSR set to: 1
 20370  015A88  0101               	movlb	1	; () banked
 20371  015A8A  51AC               	movf	___fttol@exp1& (0+255),w,b
 20372  015A8C  0101               	movlb	1	; () banked
 20373  015A8E  B4D8               	btfsc	status,2,c
 20374  015A90  D002               	goto	l13657
 20375  015A92  D7F1               	goto	l13653
 20376                           
 20377                           ; BSR set to: 1
 20378  015A94  D000               	goto	l13657
 20379  015A96                     l13657:
 20380                           
 20381                           ; BSR set to: 1
 20382  015A96  0101               	movlb	1	; () banked
 20383  015A98  51A7               	movf	___fttol@sign1& (0+255),w,b
 20384  015A9A  0101               	movlb	1	; () banked
 20385  015A9C  B4D8               	btfsc	status,2,c
 20386  015A9E  D00A               	goto	l13661
 20387                           
 20388                           ; BSR set to: 1
 20389  015AA0  0101               	movlb	1	; () banked
 20390  015AA2  1FAB               	comf	(___fttol@lval+3)& (0+255),f,b
 20391  015AA4  1FAA               	comf	(___fttol@lval+2)& (0+255),f,b
 20392  015AA6  1FA9               	comf	(___fttol@lval+1)& (0+255),f,b
 20393  015AA8  6DA8               	negf	___fttol@lval& (0+255),b
 20394  015AAA  0E00               	movlw	0
 20395  015AAC  23A9               	addwfc	(___fttol@lval+1)& (0+255),f,b
 20396  015AAE  23AA               	addwfc	(___fttol@lval+2)& (0+255),f,b
 20397  015AB0  23AB               	addwfc	(___fttol@lval+3)& (0+255),f,b
 20398  015AB2  D000               	goto	l13661
 20399  015AB4                     l13661:
 20400                           
 20401                           ; BSR set to: 1
 20402  015AB4  C1A8  F19E         	movff	___fttol@lval,?___fttol
 20403  015AB8  C1A9  F19F         	movff	___fttol@lval+1,?___fttol+1
 20404  015ABC  C1AA  F1A0         	movff	___fttol@lval+2,?___fttol+2
 20405  015AC0  C1AB  F1A1         	movff	___fttol@lval+3,?___fttol+3
 20406  015AC4  0012               	return	
 20407                           
 20408                           ; BSR set to: 1
 20409                           
 20410                           ; BSR set to: 1
 20411  015AC6  0012               	return		;funcret
 20412  015AC8                     __end_of___fttol:
 20413                           	opt stack 0
 20414                           tblptru	equ	0xFF8
 20415                           tblptrh	equ	0xFF7
 20416                           tblptrl	equ	0xFF6
 20417                           tablat	equ	0xFF5
 20418                           prodh	equ	0xFF4
 20419                           prodl	equ	0xFF3
 20420                           intcon	equ	0xFF2
 20421                           intcon2	equ	0xFF1
 20422                           postinc0	equ	0xFEE
 20423                           plusw0	equ	0xFEB
 20424                           wreg	equ	0xFE8
 20425                           indf1	equ	0xFE7
 20426                           postdec1	equ	0xFE5
 20427                           fsr1h	equ	0xFE2
 20428                           fsr1l	equ	0xFE1
 20429                           indf2	equ	0xFDF
 20430                           postinc2	equ	0xFDE
 20431                           postdec2	equ	0xFDD
 20432                           plusw2	equ	0xFDB
 20433                           fsr2h	equ	0xFDA
 20434                           fsr2l	equ	0xFD9
 20435                           status	equ	0xFD8
 20436                           
 20437 ;; *************** function ___ftmul *****************
 20438 ;; Defined at:
 20439 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 20440 ;; Parameters:    Size  Location     Type
 20441 ;;  f1              3   41[BANK1 ] float 
 20442 ;;  f2              3   44[BANK1 ] float 
 20443 ;; Auto vars:     Size  Location     Type
 20444 ;;  f3_as_produc    3   51[BANK1 ] unsigned um
 20445 ;;  sign            1   55[BANK1 ] unsigned char 
 20446 ;;  cntr            1   54[BANK1 ] unsigned char 
 20447 ;;  exp             1   50[BANK1 ] unsigned char 
 20448 ;; Return value:  Size  Location     Type
 20449 ;;                  3   41[BANK1 ] float 
 20450 ;; Registers used:
 20451 ;;		wreg, status,2, status,0, cstack
 20452 ;; Tracked objects:
 20453 ;;		On entry : 0/0
 20454 ;;		On exit  : 0/0
 20455 ;;		Unchanged: 0/0
 20456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20457 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20458 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20459 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20460 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 20461 ;;Total ram usage:       15 bytes
 20462 ;; Hardware stack levels used:    1
 20463 ;; Hardware stack levels required when called:    8
 20464 ;; This function calls:
 20465 ;;		___ftpack
 20466 ;; This function is called by:
 20467 ;;		_Command
 20468 ;;		_SetContrast
 20469 ;;		_SetDuty
 20470 ;; This function uses a non-reentrant model
 20471 ;;
 20472                           
 20473                           	psect	text43
 20474  01554A                     __ptext43:
 20475                           	opt stack 0
 20476  01554A                     ___ftmul:
 20477                           	opt stack 21
 20478                           
 20479                           ; BSR set to: 1
 20480                           ;incstack = 0
 20481  01554A  C191  F195         	movff	___ftmul@f1+2,??___ftmul
 20482  01554E  0101               	movlb	1	; () banked
 20483  015550  6B96               	clrf	(??___ftmul+1)& (0+255),b
 20484  015552  6B97               	clrf	(??___ftmul+2)& (0+255),b
 20485  015554  0101               	movlb	1	; () banked
 20486  015556  3590               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 20487  015558  0101               	movlb	1	; () banked
 20488  01555A  3795               	rlcf	??___ftmul& (0+255),f,b
 20489  01555C  E301               	bnc	u17111
 20490  01555E  8196               	bsf	(??___ftmul+1)& (0+255),0,b
 20491  015560                     u17111:
 20492  015560  0101               	movlb	1	; () banked
 20493  015562  5195               	movf	??___ftmul& (0+255),w,b
 20494  015564  0101               	movlb	1	; () banked
 20495  015566  6F98               	movwf	___ftmul@exp& (0+255),b
 20496  015568  0101               	movlb	1	; () banked
 20497  01556A  5198               	movf	___ftmul@exp& (0+255),w,b
 20498  01556C  A4D8               	btfss	status,2,c
 20499  01556E  D00A               	goto	l13497
 20500                           
 20501                           ; BSR set to: 1
 20502  015570  0E00               	movlw	0
 20503  015572  0101               	movlb	1	; () banked
 20504  015574  6F8F               	movwf	?___ftmul& (0+255),b
 20505  015576  0E00               	movlw	0
 20506  015578  0101               	movlb	1	; () banked
 20507  01557A  6F90               	movwf	(?___ftmul+1)& (0+255),b
 20508  01557C  0E00               	movlw	0
 20509  01557E  0101               	movlb	1	; () banked
 20510  015580  6F91               	movwf	(?___ftmul+2)& (0+255),b
 20511                           
 20512                           ; BSR set to: 1
 20513  015582  0012               	return	
 20514  015584                     l13497:
 20515                           
 20516                           ; BSR set to: 1
 20517  015584  C194  F195         	movff	___ftmul@f2+2,??___ftmul
 20518  015588  0101               	movlb	1	; () banked
 20519  01558A  6B96               	clrf	(??___ftmul+1)& (0+255),b
 20520  01558C  6B97               	clrf	(??___ftmul+2)& (0+255),b
 20521  01558E  0101               	movlb	1	; () banked
 20522  015590  3593               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 20523  015592  0101               	movlb	1	; () banked
 20524  015594  3795               	rlcf	??___ftmul& (0+255),f,b
 20525  015596  E301               	bnc	u17131
 20526  015598  8196               	bsf	(??___ftmul+1)& (0+255),0,b
 20527  01559A                     u17131:
 20528  01559A  0101               	movlb	1	; () banked
 20529  01559C  5195               	movf	??___ftmul& (0+255),w,b
 20530  01559E  0101               	movlb	1	; () banked
 20531  0155A0  6F9D               	movwf	___ftmul@sign& (0+255),b
 20532  0155A2  0101               	movlb	1	; () banked
 20533  0155A4  519D               	movf	___ftmul@sign& (0+255),w,b
 20534  0155A6  A4D8               	btfss	status,2,c
 20535  0155A8  D00A               	goto	l13503
 20536                           
 20537                           ; BSR set to: 1
 20538  0155AA  0E00               	movlw	0
 20539  0155AC  0101               	movlb	1	; () banked
 20540  0155AE  6F8F               	movwf	?___ftmul& (0+255),b
 20541  0155B0  0E00               	movlw	0
 20542  0155B2  0101               	movlb	1	; () banked
 20543  0155B4  6F90               	movwf	(?___ftmul+1)& (0+255),b
 20544  0155B6  0E00               	movlw	0
 20545  0155B8  0101               	movlb	1	; () banked
 20546  0155BA  6F91               	movwf	(?___ftmul+2)& (0+255),b
 20547                           
 20548                           ; BSR set to: 1
 20549  0155BC  0012               	return	
 20550  0155BE                     l13503:
 20551                           
 20552                           ; BSR set to: 1
 20553  0155BE  0101               	movlb	1	; () banked
 20554  0155C0  519D               	movf	___ftmul@sign& (0+255),w,b
 20555  0155C2  0F7B               	addlw	123
 20556  0155C4  0101               	movlb	1	; () banked
 20557  0155C6  2798               	addwf	___ftmul@exp& (0+255),f,b
 20558                           
 20559                           ; BSR set to: 1
 20560  0155C8  C191  F19D         	movff	___ftmul@f1+2,___ftmul@sign
 20561  0155CC  0101               	movlb	1	; () banked
 20562  0155CE  5194               	movf	(___ftmul@f2+2)& (0+255),w,b
 20563  0155D0  0101               	movlb	1	; () banked
 20564  0155D2  1B9D               	xorwf	___ftmul@sign& (0+255),f,b
 20565  0155D4  0E80               	movlw	128
 20566  0155D6  0101               	movlb	1	; () banked
 20567  0155D8  179D               	andwf	___ftmul@sign& (0+255),f,b
 20568                           
 20569                           ; BSR set to: 1
 20570  0155DA  0101               	movlb	1	; () banked
 20571  0155DC  8F90               	bsf	(___ftmul@f1+1)& (0+255),7,b
 20572                           
 20573                           ; BSR set to: 1
 20574  0155DE  0101               	movlb	1	; () banked
 20575  0155E0  8F93               	bsf	(___ftmul@f2+1)& (0+255),7,b
 20576                           
 20577                           ; BSR set to: 1
 20578  0155E2  0EFF               	movlw	255
 20579  0155E4  0101               	movlb	1	; () banked
 20580  0155E6  1792               	andwf	___ftmul@f2& (0+255),f,b
 20581  0155E8  0EFF               	movlw	255
 20582  0155EA  0101               	movlb	1	; () banked
 20583  0155EC  1793               	andwf	(___ftmul@f2+1)& (0+255),f,b
 20584  0155EE  0E00               	movlw	0
 20585  0155F0  0101               	movlb	1	; () banked
 20586  0155F2  1794               	andwf	(___ftmul@f2+2)& (0+255),f,b
 20587                           
 20588                           ; BSR set to: 1
 20589  0155F4  0E00               	movlw	0
 20590  0155F6  0101               	movlb	1	; () banked
 20591  0155F8  6F99               	movwf	___ftmul@f3_as_product& (0+255),b
 20592  0155FA  0E00               	movlw	0
 20593  0155FC  0101               	movlb	1	; () banked
 20594  0155FE  6F9A               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 20595  015600  0E00               	movlw	0
 20596  015602  0101               	movlb	1	; () banked
 20597  015604  6F9B               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 20598                           
 20599                           ; BSR set to: 1
 20600  015606  0E07               	movlw	7
 20601  015608  0101               	movlb	1	; () banked
 20602  01560A  6F9C               	movwf	___ftmul@cntr& (0+255),b
 20603  01560C  D000               	goto	l13517
 20604  01560E                     l13517:
 20605                           
 20606                           ; BSR set to: 1
 20607  01560E  0101               	movlb	1	; () banked
 20608  015610  A18F               	btfss	___ftmul@f1& (0+255),0,b
 20609  015612  D00D               	goto	l13521
 20610                           
 20611                           ; BSR set to: 1
 20612  015614  0101               	movlb	1	; () banked
 20613  015616  5192               	movf	___ftmul@f2& (0+255),w,b
 20614  015618  0101               	movlb	1	; () banked
 20615  01561A  2799               	addwf	___ftmul@f3_as_product& (0+255),f,b
 20616  01561C  0101               	movlb	1	; () banked
 20617  01561E  5193               	movf	(___ftmul@f2+1)& (0+255),w,b
 20618  015620  0101               	movlb	1	; () banked
 20619  015622  239A               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 20620  015624  0101               	movlb	1	; () banked
 20621  015626  5194               	movf	(___ftmul@f2+2)& (0+255),w,b
 20622  015628  0101               	movlb	1	; () banked
 20623  01562A  239B               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 20624  01562C  D000               	goto	l13521
 20625  01562E                     l13521:
 20626                           
 20627                           ; BSR set to: 1
 20628  01562E  0101               	movlb	1	; () banked
 20629  015630  90D8               	bcf	status,0,c
 20630  015632  3391               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 20631  015634  3390               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 20632  015636  338F               	rrcf	___ftmul@f1& (0+255),f,b
 20633  015638  0101               	movlb	1	; () banked
 20634  01563A  90D8               	bcf	status,0,c
 20635  01563C  3792               	rlcf	___ftmul@f2& (0+255),f,b
 20636  01563E  3793               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 20637  015640  3794               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 20638                           
 20639                           ; BSR set to: 1
 20640  015642  0101               	movlb	1	; () banked
 20641  015644  2F9C               	decfsz	___ftmul@cntr& (0+255),f,b
 20642  015646  D7E3               	goto	l13517
 20643  015648  D000               	goto	l13525
 20644  01564A                     l13525:
 20645                           
 20646                           ; BSR set to: 1
 20647  01564A  0E09               	movlw	9
 20648  01564C  0101               	movlb	1	; () banked
 20649  01564E  6F9C               	movwf	___ftmul@cntr& (0+255),b
 20650  015650  D000               	goto	l13527
 20651  015652                     l13527:
 20652                           
 20653                           ; BSR set to: 1
 20654  015652  0101               	movlb	1	; () banked
 20655  015654  A18F               	btfss	___ftmul@f1& (0+255),0,b
 20656  015656  D00D               	goto	l13531
 20657                           
 20658                           ; BSR set to: 1
 20659  015658  0101               	movlb	1	; () banked
 20660  01565A  5192               	movf	___ftmul@f2& (0+255),w,b
 20661  01565C  0101               	movlb	1	; () banked
 20662  01565E  2799               	addwf	___ftmul@f3_as_product& (0+255),f,b
 20663  015660  0101               	movlb	1	; () banked
 20664  015662  5193               	movf	(___ftmul@f2+1)& (0+255),w,b
 20665  015664  0101               	movlb	1	; () banked
 20666  015666  239A               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 20667  015668  0101               	movlb	1	; () banked
 20668  01566A  5194               	movf	(___ftmul@f2+2)& (0+255),w,b
 20669  01566C  0101               	movlb	1	; () banked
 20670  01566E  239B               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 20671  015670  D000               	goto	l13531
 20672  015672                     l13531:
 20673                           
 20674                           ; BSR set to: 1
 20675  015672  0101               	movlb	1	; () banked
 20676  015674  90D8               	bcf	status,0,c
 20677  015676  3391               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 20678  015678  3390               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 20679  01567A  338F               	rrcf	___ftmul@f1& (0+255),f,b
 20680  01567C  0101               	movlb	1	; () banked
 20681  01567E  90D8               	bcf	status,0,c
 20682  015680  339B               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 20683  015682  339A               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 20684  015684  3399               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 20685                           
 20686                           ; BSR set to: 1
 20687  015686  0101               	movlb	1	; () banked
 20688  015688  2F9C               	decfsz	___ftmul@cntr& (0+255),f,b
 20689  01568A  D7E3               	goto	l13527
 20690  01568C  D000               	goto	l13535
 20691  01568E                     l13535:
 20692                           
 20693                           ; BSR set to: 1
 20694  01568E  C199  F174         	movff	___ftmul@f3_as_product,___ftpack@arg
 20695  015692  C19A  F175         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 20696  015696  C19B  F176         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 20697  01569A  C198  F177         	movff	___ftmul@exp,___ftpack@exp
 20698  01569E  C19D  F178         	movff	___ftmul@sign,___ftpack@sign
 20699  0156A2  ECCA  F0AF         	call	___ftpack	;wreg free
 20700  0156A6  C174  F18F         	movff	?___ftpack,?___ftmul
 20701  0156AA  C175  F190         	movff	?___ftpack+1,?___ftmul+1
 20702  0156AE  C176  F191         	movff	?___ftpack+2,?___ftmul+2
 20703  0156B2  0012               	return	
 20704  0156B4  0012               	return		;funcret
 20705  0156B6                     __end_of___ftmul:
 20706                           	opt stack 0
 20707                           tblptru	equ	0xFF8
 20708                           tblptrh	equ	0xFF7
 20709                           tblptrl	equ	0xFF6
 20710                           tablat	equ	0xFF5
 20711                           prodh	equ	0xFF4
 20712                           prodl	equ	0xFF3
 20713                           intcon	equ	0xFF2
 20714                           intcon2	equ	0xFF1
 20715                           postinc0	equ	0xFEE
 20716                           plusw0	equ	0xFEB
 20717                           wreg	equ	0xFE8
 20718                           indf1	equ	0xFE7
 20719                           postdec1	equ	0xFE5
 20720                           fsr1h	equ	0xFE2
 20721                           fsr1l	equ	0xFE1
 20722                           indf2	equ	0xFDF
 20723                           postinc2	equ	0xFDE
 20724                           postdec2	equ	0xFDD
 20725                           plusw2	equ	0xFDB
 20726                           fsr2h	equ	0xFDA
 20727                           fsr2l	equ	0xFD9
 20728                           status	equ	0xFD8
 20729                           
 20730 ;; *************** function ___ftdiv *****************
 20731 ;; Defined at:
 20732 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 20733 ;; Parameters:    Size  Location     Type
 20734 ;;  f1              3   26[BANK1 ] float 
 20735 ;;  f2              3   29[BANK1 ] float 
 20736 ;; Auto vars:     Size  Location     Type
 20737 ;;  f3              3   36[BANK1 ] float 
 20738 ;;  sign            1   40[BANK1 ] unsigned char 
 20739 ;;  exp             1   39[BANK1 ] unsigned char 
 20740 ;;  cntr            1   35[BANK1 ] unsigned char 
 20741 ;; Return value:  Size  Location     Type
 20742 ;;                  3   26[BANK1 ] float 
 20743 ;; Registers used:
 20744 ;;		wreg, status,2, status,0, cstack
 20745 ;; Tracked objects:
 20746 ;;		On entry : 0/0
 20747 ;;		On exit  : 0/0
 20748 ;;		Unchanged: 0/0
 20749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20750 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20751 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20752 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20753 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 20754 ;;Total ram usage:       15 bytes
 20755 ;; Hardware stack levels used:    1
 20756 ;; Hardware stack levels required when called:    8
 20757 ;; This function calls:
 20758 ;;		___ftpack
 20759 ;; This function is called by:
 20760 ;;		_Command
 20761 ;;		_SetContrast
 20762 ;;		_SetDuty
 20763 ;; This function uses a non-reentrant model
 20764 ;;
 20765                           
 20766                           	psect	text44
 20767  015AC8                     __ptext44:
 20768                           	opt stack 0
 20769  015AC8                     ___ftdiv:
 20770                           	opt stack 21
 20771                           
 20772                           ;incstack = 0
 20773  015AC8  C182  F186         	movff	___ftdiv@f1+2,??___ftdiv
 20774  015ACC  0101               	movlb	1	; () banked
 20775  015ACE  6B87               	clrf	(??___ftdiv+1)& (0+255),b
 20776  015AD0  6B88               	clrf	(??___ftdiv+2)& (0+255),b
 20777  015AD2  0101               	movlb	1	; () banked
 20778  015AD4  3581               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 20779  015AD6  0101               	movlb	1	; () banked
 20780  015AD8  3786               	rlcf	??___ftdiv& (0+255),f,b
 20781  015ADA  E301               	bnc	u17061
 20782  015ADC  8187               	bsf	(??___ftdiv+1)& (0+255),0,b
 20783  015ADE                     u17061:
 20784  015ADE  0101               	movlb	1	; () banked
 20785  015AE0  5186               	movf	??___ftdiv& (0+255),w,b
 20786  015AE2  0101               	movlb	1	; () banked
 20787  015AE4  6F8D               	movwf	___ftdiv@exp& (0+255),b
 20788  015AE6  0101               	movlb	1	; () banked
 20789  015AE8  518D               	movf	___ftdiv@exp& (0+255),w,b
 20790  015AEA  A4D8               	btfss	status,2,c
 20791  015AEC  D00A               	goto	l13451
 20792                           
 20793                           ; BSR set to: 1
 20794  015AEE  0E00               	movlw	0
 20795  015AF0  0101               	movlb	1	; () banked
 20796  015AF2  6F80               	movwf	?___ftdiv& (0+255),b
 20797  015AF4  0E00               	movlw	0
 20798  015AF6  0101               	movlb	1	; () banked
 20799  015AF8  6F81               	movwf	(?___ftdiv+1)& (0+255),b
 20800  015AFA  0E00               	movlw	0
 20801  015AFC  0101               	movlb	1	; () banked
 20802  015AFE  6F82               	movwf	(?___ftdiv+2)& (0+255),b
 20803                           
 20804                           ; BSR set to: 1
 20805  015B00  0012               	return	
 20806  015B02                     l13451:
 20807                           
 20808                           ; BSR set to: 1
 20809  015B02  C185  F186         	movff	___ftdiv@f2+2,??___ftdiv
 20810  015B06  0101               	movlb	1	; () banked
 20811  015B08  6B87               	clrf	(??___ftdiv+1)& (0+255),b
 20812  015B0A  6B88               	clrf	(??___ftdiv+2)& (0+255),b
 20813  015B0C  0101               	movlb	1	; () banked
 20814  015B0E  3584               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 20815  015B10  0101               	movlb	1	; () banked
 20816  015B12  3786               	rlcf	??___ftdiv& (0+255),f,b
 20817  015B14  E301               	bnc	u17081
 20818  015B16  8187               	bsf	(??___ftdiv+1)& (0+255),0,b
 20819  015B18                     u17081:
 20820  015B18  0101               	movlb	1	; () banked
 20821  015B1A  5186               	movf	??___ftdiv& (0+255),w,b
 20822  015B1C  0101               	movlb	1	; () banked
 20823  015B1E  6F8E               	movwf	___ftdiv@sign& (0+255),b
 20824  015B20  0101               	movlb	1	; () banked
 20825  015B22  518E               	movf	___ftdiv@sign& (0+255),w,b
 20826  015B24  A4D8               	btfss	status,2,c
 20827  015B26  D00A               	goto	l13457
 20828                           
 20829                           ; BSR set to: 1
 20830  015B28  0E00               	movlw	0
 20831  015B2A  0101               	movlb	1	; () banked
 20832  015B2C  6F80               	movwf	?___ftdiv& (0+255),b
 20833  015B2E  0E00               	movlw	0
 20834  015B30  0101               	movlb	1	; () banked
 20835  015B32  6F81               	movwf	(?___ftdiv+1)& (0+255),b
 20836  015B34  0E00               	movlw	0
 20837  015B36  0101               	movlb	1	; () banked
 20838  015B38  6F82               	movwf	(?___ftdiv+2)& (0+255),b
 20839                           
 20840                           ; BSR set to: 1
 20841  015B3A  0012               	return	
 20842  015B3C                     l13457:
 20843                           
 20844                           ; BSR set to: 1
 20845  015B3C  0E00               	movlw	0
 20846  015B3E  0101               	movlb	1	; () banked
 20847  015B40  6F8A               	movwf	___ftdiv@f3& (0+255),b
 20848  015B42  0E00               	movlw	0
 20849  015B44  0101               	movlb	1	; () banked
 20850  015B46  6F8B               	movwf	(___ftdiv@f3+1)& (0+255),b
 20851  015B48  0E00               	movlw	0
 20852  015B4A  0101               	movlb	1	; () banked
 20853  015B4C  6F8C               	movwf	(___ftdiv@f3+2)& (0+255),b
 20854                           
 20855                           ; BSR set to: 1
 20856  015B4E  0101               	movlb	1	; () banked
 20857  015B50  518E               	movf	___ftdiv@sign& (0+255),w,b
 20858  015B52  0F89               	addlw	137
 20859  015B54  0101               	movlb	1	; () banked
 20860  015B56  5F8D               	subwf	___ftdiv@exp& (0+255),f,b
 20861                           
 20862                           ; BSR set to: 1
 20863  015B58  C182  F18E         	movff	___ftdiv@f1+2,___ftdiv@sign
 20864                           
 20865                           ; BSR set to: 1
 20866  015B5C  0101               	movlb	1	; () banked
 20867  015B5E  5185               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20868  015B60  0101               	movlb	1	; () banked
 20869  015B62  1B8E               	xorwf	___ftdiv@sign& (0+255),f,b
 20870                           
 20871                           ; BSR set to: 1
 20872  015B64  0E80               	movlw	128
 20873  015B66  0101               	movlb	1	; () banked
 20874  015B68  178E               	andwf	___ftdiv@sign& (0+255),f,b
 20875                           
 20876                           ; BSR set to: 1
 20877  015B6A  0101               	movlb	1	; () banked
 20878  015B6C  8F81               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 20879                           
 20880                           ; BSR set to: 1
 20881  015B6E  0EFF               	movlw	255
 20882  015B70  0101               	movlb	1	; () banked
 20883  015B72  1780               	andwf	___ftdiv@f1& (0+255),f,b
 20884  015B74  0EFF               	movlw	255
 20885  015B76  0101               	movlb	1	; () banked
 20886  015B78  1781               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 20887  015B7A  0E00               	movlw	0
 20888  015B7C  0101               	movlb	1	; () banked
 20889  015B7E  1782               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 20890                           
 20891                           ; BSR set to: 1
 20892  015B80  0101               	movlb	1	; () banked
 20893  015B82  8F84               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 20894                           
 20895                           ; BSR set to: 1
 20896  015B84  0EFF               	movlw	255
 20897  015B86  0101               	movlb	1	; () banked
 20898  015B88  1783               	andwf	___ftdiv@f2& (0+255),f,b
 20899  015B8A  0EFF               	movlw	255
 20900  015B8C  0101               	movlb	1	; () banked
 20901  015B8E  1784               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 20902  015B90  0E00               	movlw	0
 20903  015B92  0101               	movlb	1	; () banked
 20904  015B94  1785               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 20905                           
 20906                           ; BSR set to: 1
 20907  015B96  0E18               	movlw	24
 20908  015B98  0101               	movlb	1	; () banked
 20909  015B9A  6F89               	movwf	___ftdiv@cntr& (0+255),b
 20910  015B9C  D000               	goto	l13477
 20911  015B9E                     l13477:
 20912                           
 20913                           ; BSR set to: 1
 20914  015B9E  0101               	movlb	1	; () banked
 20915  015BA0  90D8               	bcf	status,0,c
 20916  015BA2  378A               	rlcf	___ftdiv@f3& (0+255),f,b
 20917  015BA4  378B               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 20918  015BA6  378C               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 20919                           
 20920                           ; BSR set to: 1
 20921  015BA8  0101               	movlb	1	; () banked
 20922  015BAA  5183               	movf	___ftdiv@f2& (0+255),w,b
 20923  015BAC  0101               	movlb	1	; () banked
 20924  015BAE  5D80               	subwf	___ftdiv@f1& (0+255),w,b
 20925  015BB0  0101               	movlb	1	; () banked
 20926  015BB2  5184               	movf	(___ftdiv@f2+1)& (0+255),w,b
 20927  015BB4  0101               	movlb	1	; () banked
 20928  015BB6  5981               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 20929  015BB8  0101               	movlb	1	; () banked
 20930  015BBA  5185               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20931  015BBC  0101               	movlb	1	; () banked
 20932  015BBE  5982               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 20933  015BC0  A0D8               	btfss	status,0,c
 20934  015BC2  D00E               	goto	l2350
 20935                           
 20936                           ; BSR set to: 1
 20937  015BC4  0101               	movlb	1	; () banked
 20938  015BC6  5183               	movf	___ftdiv@f2& (0+255),w,b
 20939  015BC8  0101               	movlb	1	; () banked
 20940  015BCA  5F80               	subwf	___ftdiv@f1& (0+255),f,b
 20941  015BCC  0101               	movlb	1	; () banked
 20942  015BCE  5184               	movf	(___ftdiv@f2+1)& (0+255),w,b
 20943  015BD0  0101               	movlb	1	; () banked
 20944  015BD2  5B81               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 20945  015BD4  0101               	movlb	1	; () banked
 20946  015BD6  5185               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20947  015BD8  0101               	movlb	1	; () banked
 20948  015BDA  5B82               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 20949                           
 20950                           ; BSR set to: 1
 20951  015BDC  0101               	movlb	1	; () banked
 20952  015BDE  818A               	bsf	___ftdiv@f3& (0+255),0,b
 20953  015BE0                     l2350:
 20954                           
 20955                           ; BSR set to: 1
 20956  015BE0  0101               	movlb	1	; () banked
 20957  015BE2  90D8               	bcf	status,0,c
 20958  015BE4  3780               	rlcf	___ftdiv@f1& (0+255),f,b
 20959  015BE6  3781               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 20960  015BE8  3782               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 20961                           
 20962                           ; BSR set to: 1
 20963  015BEA  0101               	movlb	1	; () banked
 20964  015BEC  2F89               	decfsz	___ftdiv@cntr& (0+255),f,b
 20965  015BEE  D7D7               	goto	l13477
 20966  015BF0  D000               	goto	l13487
 20967  015BF2                     l13487:
 20968                           
 20969                           ; BSR set to: 1
 20970  015BF2  C18A  F174         	movff	___ftdiv@f3,___ftpack@arg
 20971  015BF6  C18B  F175         	movff	___ftdiv@f3+1,___ftpack@arg+1
 20972  015BFA  C18C  F176         	movff	___ftdiv@f3+2,___ftpack@arg+2
 20973  015BFE  C18D  F177         	movff	___ftdiv@exp,___ftpack@exp
 20974  015C02  C18E  F178         	movff	___ftdiv@sign,___ftpack@sign
 20975  015C06  ECCA  F0AF         	call	___ftpack	;wreg free
 20976  015C0A  C174  F180         	movff	?___ftpack,?___ftdiv
 20977  015C0E  C175  F181         	movff	?___ftpack+1,?___ftdiv+1
 20978  015C12  C176  F182         	movff	?___ftpack+2,?___ftdiv+2
 20979  015C16  0012               	return	
 20980  015C18  0012               	return		;funcret
 20981  015C1A                     __end_of___ftdiv:
 20982                           	opt stack 0
 20983                           tblptru	equ	0xFF8
 20984                           tblptrh	equ	0xFF7
 20985                           tblptrl	equ	0xFF6
 20986                           tablat	equ	0xFF5
 20987                           prodh	equ	0xFF4
 20988                           prodl	equ	0xFF3
 20989                           intcon	equ	0xFF2
 20990                           intcon2	equ	0xFF1
 20991                           postinc0	equ	0xFEE
 20992                           plusw0	equ	0xFEB
 20993                           wreg	equ	0xFE8
 20994                           indf1	equ	0xFE7
 20995                           postdec1	equ	0xFE5
 20996                           fsr1h	equ	0xFE2
 20997                           fsr1l	equ	0xFE1
 20998                           indf2	equ	0xFDF
 20999                           postinc2	equ	0xFDE
 21000                           postdec2	equ	0xFDD
 21001                           plusw2	equ	0xFDB
 21002                           fsr2h	equ	0xFDA
 21003                           fsr2l	equ	0xFD9
 21004                           status	equ	0xFD8
 21005                           
 21006 ;; *************** function ___ftpack *****************
 21007 ;; Defined at:
 21008 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 21009 ;; Parameters:    Size  Location     Type
 21010 ;;  arg             3   14[BANK1 ] unsigned um
 21011 ;;  exp             1   17[BANK1 ] unsigned char 
 21012 ;;  sign            1   18[BANK1 ] unsigned char 
 21013 ;; Auto vars:     Size  Location     Type
 21014 ;;		None
 21015 ;; Return value:  Size  Location     Type
 21016 ;;                  3   14[BANK1 ] float 
 21017 ;; Registers used:
 21018 ;;		wreg, status,2, status,0
 21019 ;; Tracked objects:
 21020 ;;		On entry : 0/0
 21021 ;;		On exit  : 0/0
 21022 ;;		Unchanged: 0/0
 21023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21024 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 21025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21026 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 21027 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 21028 ;;Total ram usage:        8 bytes
 21029 ;; Hardware stack levels used:    1
 21030 ;; Hardware stack levels required when called:    7
 21031 ;; This function calls:
 21032 ;;		Nothing
 21033 ;; This function is called by:
 21034 ;;		___ftdiv
 21035 ;;		___ftmul
 21036 ;;		___lbtoft
 21037 ;;		___lwtoft
 21038 ;; This function uses a non-reentrant model
 21039 ;;
 21040                           
 21041                           	psect	text45
 21042  015F94                     __ptext45:
 21043                           	opt stack 0
 21044  015F94                     ___ftpack:
 21045                           	opt stack 21
 21046                           
 21047                           ;incstack = 0
 21048  015F94  0101               	movlb	1	; () banked
 21049  015F96  5177               	movf	___ftpack@exp& (0+255),w,b
 21050  015F98  0101               	movlb	1	; () banked
 21051  015F9A  B4D8               	btfsc	status,2,c
 21052  015F9C  D008               	goto	l12569
 21053                           
 21054                           ; BSR set to: 1
 21055  015F9E  0101               	movlb	1	; () banked
 21056  015FA0  5174               	movf	___ftpack@arg& (0+255),w,b
 21057  015FA2  0101               	movlb	1	; () banked
 21058  015FA4  1175               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 21059  015FA6  0101               	movlb	1	; () banked
 21060  015FA8  1176               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 21061  015FAA  A4D8               	btfss	status,2,c
 21062  015FAC  D013               	goto	l12575
 21063  015FAE                     l12569:
 21064                           
 21065                           ; BSR set to: 1
 21066  015FAE  0E00               	movlw	0
 21067  015FB0  0101               	movlb	1	; () banked
 21068  015FB2  6F74               	movwf	?___ftpack& (0+255),b
 21069  015FB4  0E00               	movlw	0
 21070  015FB6  0101               	movlb	1	; () banked
 21071  015FB8  6F75               	movwf	(?___ftpack+1)& (0+255),b
 21072  015FBA  0E00               	movlw	0
 21073  015FBC  0101               	movlb	1	; () banked
 21074  015FBE  6F76               	movwf	(?___ftpack+2)& (0+255),b
 21075                           
 21076                           ; BSR set to: 1
 21077  015FC0  0012               	return	
 21078                           
 21079                           ; BSR set to: 1
 21080  015FC2  D008               	goto	l12575
 21081  015FC4                     l12573:
 21082                           
 21083                           ; BSR set to: 1
 21084  015FC4  0101               	movlb	1	; () banked
 21085  015FC6  2B77               	incf	___ftpack@exp& (0+255),f,b
 21086  015FC8  0101               	movlb	1	; () banked
 21087  015FCA  90D8               	bcf	status,0,c
 21088  015FCC  3376               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 21089  015FCE  3375               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 21090  015FD0  3374               	rrcf	___ftpack@arg& (0+255),f,b
 21091  015FD2  D000               	goto	l12575
 21092  015FD4                     l12575:
 21093                           
 21094                           ; BSR set to: 1
 21095  015FD4  0E00               	movlw	0
 21096  015FD6  0101               	movlb	1	; () banked
 21097  015FD8  1574               	andwf	___ftpack@arg& (0+255),w,b
 21098  015FDA  0101               	movlb	1	; () banked
 21099  015FDC  6F79               	movwf	??___ftpack& (0+255),b
 21100  015FDE  0E00               	movlw	0
 21101  015FE0  0101               	movlb	1	; () banked
 21102  015FE2  1575               	andwf	(___ftpack@arg+1)& (0+255),w,b
 21103  015FE4  0101               	movlb	1	; () banked
 21104  015FE6  6F7A               	movwf	(??___ftpack+1)& (0+255),b
 21105  015FE8  0EFE               	movlw	254
 21106  015FEA  0101               	movlb	1	; () banked
 21107  015FEC  1576               	andwf	(___ftpack@arg+2)& (0+255),w,b
 21108  015FEE  0101               	movlb	1	; () banked
 21109  015FF0  6F7B               	movwf	(??___ftpack+2)& (0+255),b
 21110  015FF2  0101               	movlb	1	; () banked
 21111  015FF4  5179               	movf	??___ftpack& (0+255),w,b
 21112  015FF6  0101               	movlb	1	; () banked
 21113  015FF8  117A               	iorwf	(??___ftpack+1)& (0+255),w,b
 21114  015FFA  0101               	movlb	1	; () banked
 21115  015FFC  117B               	iorwf	(??___ftpack+2)& (0+255),w,b
 21116  015FFE  B4D8               	btfsc	status,2,c
 21117  016000  D013               	goto	l12581
 21118  016002  D7E0               	goto	l12573
 21119                           
 21120                           ; BSR set to: 1
 21121  016004  D011               	goto	l12581
 21122  016006                     l12577:
 21123                           
 21124                           ; BSR set to: 1
 21125  016006  0101               	movlb	1	; () banked
 21126  016008  2B77               	incf	___ftpack@exp& (0+255),f,b
 21127                           
 21128                           ; BSR set to: 1
 21129  01600A  0E01               	movlw	1
 21130  01600C  0101               	movlb	1	; () banked
 21131  01600E  2774               	addwf	___ftpack@arg& (0+255),f,b
 21132  016010  0E00               	movlw	0
 21133  016012  0101               	movlb	1	; () banked
 21134  016014  2375               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 21135  016016  0E00               	movlw	0
 21136  016018  0101               	movlb	1	; () banked
 21137  01601A  2376               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 21138  01601C  0101               	movlb	1	; () banked
 21139  01601E  90D8               	bcf	status,0,c
 21140  016020  3376               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 21141  016022  3375               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 21142  016024  3374               	rrcf	___ftpack@arg& (0+255),f,b
 21143  016026  D000               	goto	l12581
 21144  016028                     l12581:
 21145                           
 21146                           ; BSR set to: 1
 21147  016028  0E00               	movlw	0
 21148  01602A  0101               	movlb	1	; () banked
 21149  01602C  1574               	andwf	___ftpack@arg& (0+255),w,b
 21150  01602E  0101               	movlb	1	; () banked
 21151  016030  6F79               	movwf	??___ftpack& (0+255),b
 21152  016032  0E00               	movlw	0
 21153  016034  0101               	movlb	1	; () banked
 21154  016036  1575               	andwf	(___ftpack@arg+1)& (0+255),w,b
 21155  016038  0101               	movlb	1	; () banked
 21156  01603A  6F7A               	movwf	(??___ftpack+1)& (0+255),b
 21157  01603C  0EFF               	movlw	255
 21158  01603E  0101               	movlb	1	; () banked
 21159  016040  1576               	andwf	(___ftpack@arg+2)& (0+255),w,b
 21160  016042  0101               	movlb	1	; () banked
 21161  016044  6F7B               	movwf	(??___ftpack+2)& (0+255),b
 21162  016046  0101               	movlb	1	; () banked
 21163  016048  5179               	movf	??___ftpack& (0+255),w,b
 21164  01604A  0101               	movlb	1	; () banked
 21165  01604C  117A               	iorwf	(??___ftpack+1)& (0+255),w,b
 21166  01604E  0101               	movlb	1	; () banked
 21167  016050  117B               	iorwf	(??___ftpack+2)& (0+255),w,b
 21168  016052  B4D8               	btfsc	status,2,c
 21169  016054  D00A               	goto	l12585
 21170  016056  D7D7               	goto	l12577
 21171                           
 21172                           ; BSR set to: 1
 21173  016058  D008               	goto	l12585
 21174  01605A                     l12583:
 21175                           
 21176                           ; BSR set to: 1
 21177  01605A  0101               	movlb	1	; () banked
 21178  01605C  0777               	decf	___ftpack@exp& (0+255),f,b
 21179  01605E  0101               	movlb	1	; () banked
 21180  016060  90D8               	bcf	status,0,c
 21181  016062  3774               	rlcf	___ftpack@arg& (0+255),f,b
 21182  016064  3775               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 21183  016066  3776               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 21184  016068  D000               	goto	l12585
 21185  01606A                     l12585:
 21186                           
 21187                           ; BSR set to: 1
 21188  01606A  0101               	movlb	1	; () banked
 21189  01606C  BF75               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 21190  01606E  D005               	goto	l2286
 21191                           
 21192                           ; BSR set to: 1
 21193  016070  0E02               	movlw	2
 21194  016072  0101               	movlb	1	; () banked
 21195  016074  6177               	cpfslt	___ftpack@exp& (0+255),b
 21196  016076  D7F1               	goto	l12583
 21197  016078  D000               	goto	l2286
 21198  01607A                     l2286:
 21199                           
 21200                           ; BSR set to: 1
 21201  01607A  0101               	movlb	1	; () banked
 21202  01607C  B177               	btfsc	___ftpack@exp& (0+255),0,b
 21203  01607E  D003               	goto	l12591
 21204                           
 21205                           ; BSR set to: 1
 21206  016080  0101               	movlb	1	; () banked
 21207  016082  9F75               	bcf	(___ftpack@arg+1)& (0+255),7,b
 21208  016084  D000               	goto	l12591
 21209  016086                     l12591:
 21210                           
 21211                           ; BSR set to: 1
 21212  016086  0101               	movlb	1	; () banked
 21213  016088  90D8               	bcf	status,0,c
 21214  01608A  3377               	rrcf	___ftpack@exp& (0+255),f,b
 21215  01608C  0101               	movlb	1	; () banked
 21216  01608E  5177               	movf	___ftpack@exp& (0+255),w,b
 21217  016090  0101               	movlb	1	; () banked
 21218  016092  1376               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 21219                           
 21220                           ; BSR set to: 1
 21221  016094  0101               	movlb	1	; () banked
 21222  016096  5178               	movf	___ftpack@sign& (0+255),w,b
 21223  016098  0101               	movlb	1	; () banked
 21224  01609A  B4D8               	btfsc	status,2,c
 21225  01609C  D003               	goto	l12597
 21226                           
 21227                           ; BSR set to: 1
 21228  01609E  0101               	movlb	1	; () banked
 21229  0160A0  8F76               	bsf	(___ftpack@arg+2)& (0+255),7,b
 21230  0160A2  D000               	goto	l12597
 21231  0160A4                     l12597:
 21232                           
 21233                           ; BSR set to: 1
 21234  0160A4  C174  F174         	movff	___ftpack@arg,?___ftpack
 21235  0160A8  C175  F175         	movff	___ftpack@arg+1,?___ftpack+1
 21236  0160AC  C176  F176         	movff	___ftpack@arg+2,?___ftpack+2
 21237  0160B0  0012               	return	
 21238                           
 21239                           ; BSR set to: 1
 21240                           
 21241                           ; BSR set to: 1
 21242  0160B2  0012               	return		;funcret
 21243  0160B4                     __end_of___ftpack:
 21244                           	opt stack 0
 21245                           tblptru	equ	0xFF8
 21246                           tblptrh	equ	0xFF7
 21247                           tblptrl	equ	0xFF6
 21248                           tablat	equ	0xFF5
 21249                           prodh	equ	0xFF4
 21250                           prodl	equ	0xFF3
 21251                           intcon	equ	0xFF2
 21252                           intcon2	equ	0xFF1
 21253                           postinc0	equ	0xFEE
 21254                           plusw0	equ	0xFEB
 21255                           wreg	equ	0xFE8
 21256                           indf1	equ	0xFE7
 21257                           postdec1	equ	0xFE5
 21258                           fsr1h	equ	0xFE2
 21259                           fsr1l	equ	0xFE1
 21260                           indf2	equ	0xFDF
 21261                           postinc2	equ	0xFDE
 21262                           postdec2	equ	0xFDD
 21263                           plusw2	equ	0xFDB
 21264                           fsr2h	equ	0xFDA
 21265                           fsr2l	equ	0xFD9
 21266                           status	equ	0xFD8
 21267                           
 21268 ;; *************** function _SetBaud *****************
 21269 ;; Defined at:
 21270 ;;		line 312 in file "UART.c"
 21271 ;; Parameters:    Size  Location     Type
 21272 ;;  Baud            4   80[BANK1 ] unsigned long 
 21273 ;;  Parity          1   84[BANK1 ] unsigned char 
 21274 ;; Auto vars:     Size  Location     Type
 21275 ;;  buf            50    0[BANK2 ] unsigned char [50]
 21276 ;;  status          1   50[BANK2 ] unsigned char 
 21277 ;; Return value:  Size  Location     Type
 21278 ;;		None               void
 21279 ;; Registers used:
 21280 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21281 ;; Tracked objects:
 21282 ;;		On entry : 0/0
 21283 ;;		On exit  : 0/0
 21284 ;;		Unchanged: 0/0
 21285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21286 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 21287 ;;      Locals:         0       0       0      51       0       0       0       0       0       0       0       0       
      +0       0
 21288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21289 ;;      Totals:         0       0       5      51       0       0       0       0       0       0       0       0       
      +0       0
 21290 ;;Total ram usage:       56 bytes
 21291 ;; Hardware stack levels used:    1
 21292 ;; Hardware stack levels required when called:   10
 21293 ;; This function calls:
 21294 ;;		_InitUART
 21295 ;;		_SetMemoryBaud
 21296 ;;		_SetMemoryParity
 21297 ;;		_UARTstring
 21298 ;;		_UARTstringWAIT
 21299 ;;		_delayUS
 21300 ;;		_sprintf
 21301 ;; This function is called by:
 21302 ;;		_Command
 21303 ;; This function uses a non-reentrant model
 21304 ;;
 21305                           
 21306                           	psect	text46
 21307  014BCC                     __ptext46:
 21308                           	opt stack 0
 21309  014BCC                     _SetBaud:
 21310                           	opt stack 19
 21311                           
 21312                           ;UART.c: 314: unsigned char buf[50];
 21313                           ;UART.c: 315: unsigned char status=0;
 21314                           
 21315                           ; BSR set to: 1
 21316                           ;incstack = 0
 21317  014BCC  0E00               	movlw	0
 21318  014BCE  0102               	movlb	2	; () banked
 21319  014BD0  6F32               	movwf	SetBaud@status& (0+255),b
 21320                           
 21321                           ;UART.c: 317: if(Parity)
 21322  014BD2  0101               	movlb	1	; () banked
 21323  014BD4  51BA               	movf	SetBaud@Parity& (0+255),w,b
 21324  014BD6  0101               	movlb	1	; () banked
 21325  014BD8  A4D8               	btfss	status,2,c
 21326  014BDA  D05E               	goto	l14065
 21327  014BDC  D06A               	goto	l14067
 21328                           
 21329                           ; BSR set to: 1
 21330                           ;UART.c: 318: {
 21331                           ;UART.c: 319: switch (Parity)
 21332  014BDE  D05C               	goto	l14065
 21333  014BE0                     l14055:
 21334                           
 21335                           ; BSR set to: 1
 21336                           ;UART.c: 322: sprintf(buf,"System Baud will be set to %lu with Odd parity bit\r\n",Baud)
      +                          ;
 21337  014BE0  0E00               	movlw	low SetBaud@buf
 21338  014BE2  0101               	movlb	1	; () banked
 21339  014BE4  6F8A               	movwf	sprintf@sp& (0+255),b
 21340  014BE6  0E02               	movlw	high SetBaud@buf
 21341  014BE8  0101               	movlb	1	; () banked
 21342  014BEA  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 21343  014BEC  0E58               	movlw	low STR_23
 21344  014BEE  0101               	movlb	1	; () banked
 21345  014BF0  6F8C               	movwf	sprintf@f& (0+255),b
 21346  014BF2  0EF0               	movlw	high STR_23
 21347  014BF4  0101               	movlb	1	; () banked
 21348  014BF6  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 21349  014BF8  C1B6  F18E         	movff	SetBaud@Baud,?_sprintf+4
 21350  014BFC  C1B7  F18F         	movff	SetBaud@Baud+1,?_sprintf+5
 21351  014C00  C1B8  F190         	movff	SetBaud@Baud+2,?_sprintf+6
 21352  014C04  C1B9  F191         	movff	SetBaud@Baud+3,?_sprintf+7
 21353  014C08  EC87  F093         	call	_sprintf	;wreg free
 21354                           
 21355                           ;UART.c: 323: break;
 21356  014C0C  D069               	goto	l14069
 21357  014C0E                     l14057:
 21358                           
 21359                           ;UART.c: 325: sprintf(buf,"System Baud will be set to %lu with Even parity bit\r\n",Baud
      +                          );
 21360  014C0E  0E00               	movlw	low SetBaud@buf
 21361  014C10  0101               	movlb	1	; () banked
 21362  014C12  6F8A               	movwf	sprintf@sp& (0+255),b
 21363  014C14  0E02               	movlw	high SetBaud@buf
 21364  014C16  0101               	movlb	1	; () banked
 21365  014C18  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 21366  014C1A  0EEC               	movlw	low STR_24
 21367  014C1C  0101               	movlb	1	; () banked
 21368  014C1E  6F8C               	movwf	sprintf@f& (0+255),b
 21369  014C20  0EEF               	movlw	high STR_24
 21370  014C22  0101               	movlb	1	; () banked
 21371  014C24  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 21372  014C26  C1B6  F18E         	movff	SetBaud@Baud,?_sprintf+4
 21373  014C2A  C1B7  F18F         	movff	SetBaud@Baud+1,?_sprintf+5
 21374  014C2E  C1B8  F190         	movff	SetBaud@Baud+2,?_sprintf+6
 21375  014C32  C1B9  F191         	movff	SetBaud@Baud+3,?_sprintf+7
 21376  014C36  EC87  F093         	call	_sprintf	;wreg free
 21377                           
 21378                           ;UART.c: 326: break;
 21379  014C3A  D052               	goto	l14069
 21380  014C3C                     l14059:
 21381                           
 21382                           ;UART.c: 328: sprintf(buf,"System Baud will be set to %lu with Mark bit\r\n",Baud);
 21383  014C3C  0E00               	movlw	low SetBaud@buf
 21384  014C3E  0101               	movlb	1	; () banked
 21385  014C40  6F8A               	movwf	sprintf@sp& (0+255),b
 21386  014C42  0E02               	movlw	high SetBaud@buf
 21387  014C44  0101               	movlb	1	; () banked
 21388  014C46  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 21389  014C48  0E84               	movlw	low STR_25
 21390  014C4A  0101               	movlb	1	; () banked
 21391  014C4C  6F8C               	movwf	sprintf@f& (0+255),b
 21392  014C4E  0EF1               	movlw	high STR_25
 21393  014C50  0101               	movlb	1	; () banked
 21394  014C52  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 21395  014C54  C1B6  F18E         	movff	SetBaud@Baud,?_sprintf+4
 21396  014C58  C1B7  F18F         	movff	SetBaud@Baud+1,?_sprintf+5
 21397  014C5C  C1B8  F190         	movff	SetBaud@Baud+2,?_sprintf+6
 21398  014C60  C1B9  F191         	movff	SetBaud@Baud+3,?_sprintf+7
 21399  014C64  EC87  F093         	call	_sprintf	;wreg free
 21400                           
 21401                           ;UART.c: 329: break;
 21402  014C68  D03B               	goto	l14069
 21403  014C6A                     l14061:
 21404                           
 21405                           ;UART.c: 331: sprintf(buf,"System Baud will be set to %lu with Space bit\r\n",Baud);
 21406  014C6A  0E00               	movlw	low SetBaud@buf
 21407  014C6C  0101               	movlb	1	; () banked
 21408  014C6E  6F8A               	movwf	sprintf@sp& (0+255),b
 21409  014C70  0E02               	movlw	high SetBaud@buf
 21410  014C72  0101               	movlb	1	; () banked
 21411  014C74  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 21412  014C76  0E54               	movlw	low STR_26
 21413  014C78  0101               	movlb	1	; () banked
 21414  014C7A  6F8C               	movwf	sprintf@f& (0+255),b
 21415  014C7C  0EF1               	movlw	high STR_26
 21416  014C7E  0101               	movlb	1	; () banked
 21417  014C80  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 21418  014C82  C1B6  F18E         	movff	SetBaud@Baud,?_sprintf+4
 21419  014C86  C1B7  F18F         	movff	SetBaud@Baud+1,?_sprintf+5
 21420  014C8A  C1B8  F190         	movff	SetBaud@Baud+2,?_sprintf+6
 21421  014C8E  C1B9  F191         	movff	SetBaud@Baud+3,?_sprintf+7
 21422  014C92  EC87  F093         	call	_sprintf	;wreg free
 21423                           
 21424                           ;UART.c: 333: }
 21425                           
 21426                           ;UART.c: 332: break;
 21427  014C96  D024               	goto	l14069
 21428  014C98                     l14065:
 21429  014C98  0101               	movlb	1	; () banked
 21430  014C9A  51BA               	movf	SetBaud@Parity& (0+255),w,b
 21431                           
 21432                           ; Switch size 1, requested type "space"
 21433                           ; Number of cases is 3, Range of values is 1 to 3
 21434                           ; switch strategies available:
 21435                           ; Name         Instructions Cycles
 21436                           ; simple_byte           10     6 (average)
 21437                           ;	Chosen strategy is simple_byte
 21438  014C9C  0A01               	xorlw	1	; case 1
 21439  014C9E  B4D8               	btfsc	status,2,c
 21440  014CA0  D79F               	goto	l14055
 21441  014CA2  0A03               	xorlw	3	; case 2
 21442  014CA4  B4D8               	btfsc	status,2,c
 21443  014CA6  D7B3               	goto	l14057
 21444  014CA8  0A01               	xorlw	1	; case 3
 21445  014CAA  B4D8               	btfsc	status,2,c
 21446  014CAC  D7C7               	goto	l14059
 21447  014CAE  D7DD               	goto	l14061
 21448                           
 21449                           ; BSR set to: 1
 21450                           ;UART.c: 334: }
 21451  014CB0  D017               	goto	l14069
 21452  014CB2                     l14067:
 21453                           
 21454                           ; BSR set to: 1
 21455                           ;UART.c: 335: else
 21456                           ;UART.c: 336: {
 21457                           ;UART.c: 337: sprintf(buf,"System Baud will be set to %lu with no parity bit\r\n",Baud);
 21458  014CB2  0E00               	movlw	low SetBaud@buf
 21459  014CB4  0101               	movlb	1	; () banked
 21460  014CB6  6F8A               	movwf	sprintf@sp& (0+255),b
 21461  014CB8  0E02               	movlw	high SetBaud@buf
 21462  014CBA  0101               	movlb	1	; () banked
 21463  014CBC  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 21464  014CBE  0E8D               	movlw	low STR_27
 21465  014CC0  0101               	movlb	1	; () banked
 21466  014CC2  6F8C               	movwf	sprintf@f& (0+255),b
 21467  014CC4  0EF0               	movlw	high STR_27
 21468  014CC6  0101               	movlb	1	; () banked
 21469  014CC8  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 21470  014CCA  C1B6  F18E         	movff	SetBaud@Baud,?_sprintf+4
 21471  014CCE  C1B7  F18F         	movff	SetBaud@Baud+1,?_sprintf+5
 21472  014CD2  C1B8  F190         	movff	SetBaud@Baud+2,?_sprintf+6
 21473  014CD6  C1B9  F191         	movff	SetBaud@Baud+3,?_sprintf+7
 21474  014CDA  EC87  F093         	call	_sprintf	;wreg free
 21475  014CDE  D000               	goto	l14069
 21476  014CE0                     l14069:
 21477                           
 21478                           ;UART.c: 338: }
 21479                           ;UART.c: 340: status = SetMemoryBaud(Baud);
 21480  014CE0  C1B6  F197         	movff	SetBaud@Baud,SetMemoryBaud@Baud
 21481  014CE4  C1B7  F198         	movff	SetBaud@Baud+1,SetMemoryBaud@Baud+1
 21482  014CE8  C1B8  F199         	movff	SetBaud@Baud+2,SetMemoryBaud@Baud+2
 21483  014CEC  C1B9  F19A         	movff	SetBaud@Baud+3,SetMemoryBaud@Baud+3
 21484  014CF0  EC34  F0B4         	call	_SetMemoryBaud	;wreg free
 21485  014CF4  0102               	movlb	2	; () banked
 21486  014CF6  6F32               	movwf	SetBaud@status& (0+255),b
 21487                           
 21488                           ; BSR set to: 2
 21489                           ;UART.c: 341: if(status)
 21490  014CF8  0102               	movlb	2	; () banked
 21491  014CFA  5132               	movf	SetBaud@status& (0+255),w,b
 21492  014CFC  0102               	movlb	2	; () banked
 21493  014CFE  B4D8               	btfsc	status,2,c
 21494  014D00  D006               	goto	l557
 21495                           
 21496                           ; BSR set to: 2
 21497                           ;UART.c: 342: {
 21498                           ;UART.c: 344: status = SetMemoryParity(Parity);
 21499  014D02  0101               	movlb	1	; () banked
 21500  014D04  51BA               	movf	SetBaud@Parity& (0+255),w,b
 21501  014D06  EC5A  F006         	call	_SetMemoryParity
 21502  014D0A  0102               	movlb	2	; () banked
 21503  014D0C  6F32               	movwf	SetBaud@status& (0+255),b
 21504  014D0E                     l557:
 21505                           
 21506                           ; BSR set to: 2
 21507                           ;UART.c: 345: }
 21508                           ;UART.c: 346: InitUART(Baud, Parity);
 21509  014D0E  C1B6  F181         	movff	SetBaud@Baud,InitUART@Baud
 21510  014D12  C1B7  F182         	movff	SetBaud@Baud+1,InitUART@Baud+1
 21511  014D16  C1B8  F183         	movff	SetBaud@Baud+2,InitUART@Baud+2
 21512  014D1A  C1B9  F184         	movff	SetBaud@Baud+3,InitUART@Baud+3
 21513  014D1E  C1BA  F185         	movff	SetBaud@Parity,InitUART@parity
 21514  014D22  EC5B  F0AB         	call	_InitUART	;wreg free
 21515                           
 21516                           ;UART.c: 347: UARTstring("\r\n");
 21517  014D26  0ECE               	movlw	low (STR_282+19)
 21518  014D28  0101               	movlb	1	; () banked
 21519  014D2A  6F7F               	movwf	UARTstring@data& (0+255),b
 21520  014D2C  0EF6               	movlw	high (STR_282+19)
 21521  014D2E  0101               	movlb	1	; () banked
 21522  014D30  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 21523  014D32  EC24  F0BA         	call	_UARTstring	;wreg free
 21524                           
 21525                           ;UART.c: 348: delayUS(10000);
 21526  014D36  0E10               	movlw	16
 21527  014D38  0101               	movlb	1	; () banked
 21528  014D3A  6F74               	movwf	delayUS@US& (0+255),b
 21529  014D3C  0E27               	movlw	39
 21530  014D3E  6F75               	movwf	(delayUS@US+1)& (0+255),b
 21531  014D40  0E00               	movlw	0
 21532  014D42  6F76               	movwf	(delayUS@US+2)& (0+255),b
 21533  014D44  0E00               	movlw	0
 21534  014D46  6F77               	movwf	(delayUS@US+3)& (0+255),b
 21535  014D48  ECC6  F0BF         	call	_delayUS	;wreg free
 21536                           
 21537                           ;UART.c: 349: if(!status)
 21538  014D4C  0102               	movlb	2	; () banked
 21539  014D4E  5132               	movf	SetBaud@status& (0+255),w,b
 21540  014D50  0102               	movlb	2	; () banked
 21541  014D52  A4D8               	btfss	status,2,c
 21542  014D54  D014               	goto	l14085
 21543                           
 21544                           ; BSR set to: 2
 21545                           ;UART.c: 350: {
 21546                           ;UART.c: 351: UARTstring("System Program Fail\r\n");
 21547  014D56  0EFD               	movlw	low STR_29
 21548  014D58  0101               	movlb	1	; () banked
 21549  014D5A  6F7F               	movwf	UARTstring@data& (0+255),b
 21550  014D5C  0EF6               	movlw	high STR_29
 21551  014D5E  0101               	movlb	1	; () banked
 21552  014D60  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 21553  014D62  EC24  F0BA         	call	_UARTstring	;wreg free
 21554                           
 21555                           ;UART.c: 352: delayUS(10000);
 21556  014D66  0E10               	movlw	16
 21557  014D68  0101               	movlb	1	; () banked
 21558  014D6A  6F74               	movwf	delayUS@US& (0+255),b
 21559  014D6C  0E27               	movlw	39
 21560  014D6E  6F75               	movwf	(delayUS@US+1)& (0+255),b
 21561  014D70  0E00               	movlw	0
 21562  014D72  6F76               	movwf	(delayUS@US+2)& (0+255),b
 21563  014D74  0E00               	movlw	0
 21564  014D76  6F77               	movwf	(delayUS@US+3)& (0+255),b
 21565  014D78  ECC6  F0BF         	call	_delayUS	;wreg free
 21566  014D7C  D000               	goto	l14085
 21567  014D7E                     l14085:
 21568                           
 21569                           ;UART.c: 353: }
 21570                           ;UART.c: 354: sprintf(buf,"System Baud is %lu",Baud);
 21571  014D7E  0E00               	movlw	low SetBaud@buf
 21572  014D80  0101               	movlb	1	; () banked
 21573  014D82  6F8A               	movwf	sprintf@sp& (0+255),b
 21574  014D84  0E02               	movlw	high SetBaud@buf
 21575  014D86  0101               	movlb	1	; () banked
 21576  014D88  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
 21577  014D8A  0E00               	movlw	low STR_30
 21578  014D8C  0101               	movlb	1	; () banked
 21579  014D8E  6F8C               	movwf	sprintf@f& (0+255),b
 21580  014D90  0EF8               	movlw	high STR_30
 21581  014D92  0101               	movlb	1	; () banked
 21582  014D94  6F8D               	movwf	(sprintf@f+1)& (0+255),b
 21583  014D96  C1B6  F18E         	movff	SetBaud@Baud,?_sprintf+4
 21584  014D9A  C1B7  F18F         	movff	SetBaud@Baud+1,?_sprintf+5
 21585  014D9E  C1B8  F190         	movff	SetBaud@Baud+2,?_sprintf+6
 21586  014DA2  C1B9  F191         	movff	SetBaud@Baud+3,?_sprintf+7
 21587  014DA6  EC87  F093         	call	_sprintf	;wreg free
 21588                           
 21589                           ;UART.c: 355: UARTstring(buf);
 21590  014DAA  0E00               	movlw	low SetBaud@buf
 21591  014DAC  0101               	movlb	1	; () banked
 21592  014DAE  6F7F               	movwf	UARTstring@data& (0+255),b
 21593  014DB0  0E02               	movlw	high SetBaud@buf
 21594  014DB2  0101               	movlb	1	; () banked
 21595  014DB4  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 21596  014DB6  EC24  F0BA         	call	_UARTstring	;wreg free
 21597                           
 21598                           ;UART.c: 356: if(Parity)
 21599  014DBA  0101               	movlb	1	; () banked
 21600  014DBC  51BA               	movf	SetBaud@Parity& (0+255),w,b
 21601  014DBE  0101               	movlb	1	; () banked
 21602  014DC0  A4D8               	btfss	status,2,c
 21603  014DC2  D026               	goto	l14103
 21604  014DC4  D032               	goto	l14105
 21605                           
 21606                           ; BSR set to: 1
 21607                           ;UART.c: 357: {
 21608                           ;UART.c: 358: switch (Parity)
 21609  014DC6  D024               	goto	l14103
 21610  014DC8                     l14093:
 21611                           
 21612                           ; BSR set to: 1
 21613                           ;UART.c: 361: UARTstringWAIT(" with Odd parity bit\r\n");
 21614  014DC8  0E76               	movlw	low (STR_23+30)
 21615  014DCA  0101               	movlb	1	; () banked
 21616  014DCC  6F7F               	movwf	UARTstringWAIT@data& (0+255),b
 21617  014DCE  0EF0               	movlw	high (STR_23+30)
 21618  014DD0  0101               	movlb	1	; () banked
 21619  014DD2  6F80               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 21620  014DD4  ECE8  F0BE         	call	_UARTstringWAIT	;wreg free
 21621                           
 21622                           ;UART.c: 362: break;
 21623  014DD8  D031               	goto	l14107
 21624  014DDA                     l14095:
 21625                           
 21626                           ;UART.c: 364: UARTstringWAIT(" with Even parity bit\r\n");
 21627  014DDA  0E0A               	movlw	low (STR_24+30)
 21628  014DDC  0101               	movlb	1	; () banked
 21629  014DDE  6F7F               	movwf	UARTstringWAIT@data& (0+255),b
 21630  014DE0  0EF0               	movlw	high (STR_24+30)
 21631  014DE2  0101               	movlb	1	; () banked
 21632  014DE4  6F80               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 21633  014DE6  ECE8  F0BE         	call	_UARTstringWAIT	;wreg free
 21634                           
 21635                           ;UART.c: 365: break;
 21636  014DEA  D028               	goto	l14107
 21637  014DEC                     l14097:
 21638                           
 21639                           ;UART.c: 367: UARTstringWAIT(" with Mark bit\r\n");
 21640  014DEC  0EA2               	movlw	low (STR_25+30)
 21641  014DEE  0101               	movlb	1	; () banked
 21642  014DF0  6F7F               	movwf	UARTstringWAIT@data& (0+255),b
 21643  014DF2  0EF1               	movlw	high (STR_25+30)
 21644  014DF4  0101               	movlb	1	; () banked
 21645  014DF6  6F80               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 21646  014DF8  ECE8  F0BE         	call	_UARTstringWAIT	;wreg free
 21647                           
 21648                           ;UART.c: 368: break;
 21649  014DFC  D01F               	goto	l14107
 21650  014DFE                     l14099:
 21651                           
 21652                           ;UART.c: 370: UARTstringWAIT(" with Space bit\r\n");
 21653  014DFE  0E72               	movlw	low (STR_26+30)
 21654  014E00  0101               	movlb	1	; () banked
 21655  014E02  6F7F               	movwf	UARTstringWAIT@data& (0+255),b
 21656  014E04  0EF1               	movlw	high (STR_26+30)
 21657  014E06  0101               	movlb	1	; () banked
 21658  014E08  6F80               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 21659  014E0A  ECE8  F0BE         	call	_UARTstringWAIT	;wreg free
 21660                           
 21661                           ;UART.c: 372: }
 21662                           
 21663                           ;UART.c: 371: break;
 21664  014E0E  D016               	goto	l14107
 21665  014E10                     l14103:
 21666  014E10  0101               	movlb	1	; () banked
 21667  014E12  51BA               	movf	SetBaud@Parity& (0+255),w,b
 21668                           
 21669                           ; Switch size 1, requested type "space"
 21670                           ; Number of cases is 3, Range of values is 1 to 3
 21671                           ; switch strategies available:
 21672                           ; Name         Instructions Cycles
 21673                           ; simple_byte           10     6 (average)
 21674                           ;	Chosen strategy is simple_byte
 21675  014E14  0A01               	xorlw	1	; case 1
 21676  014E16  B4D8               	btfsc	status,2,c
 21677  014E18  D7D7               	goto	l14093
 21678  014E1A  0A03               	xorlw	3	; case 2
 21679  014E1C  B4D8               	btfsc	status,2,c
 21680  014E1E  D7DD               	goto	l14095
 21681  014E20  0A01               	xorlw	1	; case 3
 21682  014E22  B4D8               	btfsc	status,2,c
 21683  014E24  D7E3               	goto	l14097
 21684  014E26  D7EB               	goto	l14099
 21685                           
 21686                           ; BSR set to: 1
 21687                           ;UART.c: 373: }
 21688  014E28  D009               	goto	l14107
 21689  014E2A                     l14105:
 21690                           
 21691                           ; BSR set to: 1
 21692                           ;UART.c: 374: else
 21693                           ;UART.c: 375: {
 21694                           ;UART.c: 376: UARTstring(" with no parity bit\r\n");
 21695  014E2A  0EAB               	movlw	low (STR_27+30)
 21696  014E2C  0101               	movlb	1	; () banked
 21697  014E2E  6F7F               	movwf	UARTstring@data& (0+255),b
 21698  014E30  0EF0               	movlw	high (STR_27+30)
 21699  014E32  0101               	movlb	1	; () banked
 21700  014E34  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 21701  014E36  EC24  F0BA         	call	_UARTstring	;wreg free
 21702  014E3A  D000               	goto	l14107
 21703  014E3C                     l14107:
 21704                           
 21705                           ;UART.c: 377: }
 21706                           ;UART.c: 379: delayUS(10000);
 21707  014E3C  0E10               	movlw	16
 21708  014E3E  0101               	movlb	1	; () banked
 21709  014E40  6F74               	movwf	delayUS@US& (0+255),b
 21710  014E42  0E27               	movlw	39
 21711  014E44  6F75               	movwf	(delayUS@US+1)& (0+255),b
 21712  014E46  0E00               	movlw	0
 21713  014E48  6F76               	movwf	(delayUS@US+2)& (0+255),b
 21714  014E4A  0E00               	movlw	0
 21715  014E4C  6F77               	movwf	(delayUS@US+3)& (0+255),b
 21716  014E4E  ECC6  F0BF         	call	_delayUS	;wreg free
 21717  014E52  0012               	return		;funcret
 21718  014E54                     __end_of_SetBaud:
 21719                           	opt stack 0
 21720                           tblptru	equ	0xFF8
 21721                           tblptrh	equ	0xFF7
 21722                           tblptrl	equ	0xFF6
 21723                           tablat	equ	0xFF5
 21724                           prodh	equ	0xFF4
 21725                           prodl	equ	0xFF3
 21726                           intcon	equ	0xFF2
 21727                           intcon2	equ	0xFF1
 21728                           postinc0	equ	0xFEE
 21729                           plusw0	equ	0xFEB
 21730                           wreg	equ	0xFE8
 21731                           indf1	equ	0xFE7
 21732                           postdec1	equ	0xFE5
 21733                           fsr1h	equ	0xFE2
 21734                           fsr1l	equ	0xFE1
 21735                           indf2	equ	0xFDF
 21736                           postinc2	equ	0xFDE
 21737                           postdec2	equ	0xFDD
 21738                           plusw2	equ	0xFDB
 21739                           fsr2h	equ	0xFDA
 21740                           fsr2l	equ	0xFD9
 21741                           status	equ	0xFD8
 21742                           
 21743 ;; *************** function _sprintf *****************
 21744 ;; Defined at:
 21745 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 21746 ;; Parameters:    Size  Location     Type
 21747 ;;  sp              2   36[BANK1 ] PTR unsigned char 
 21748 ;;		 -> Command@buf(200), SetBaud@buf(50), 
 21749 ;;  f               2   38[BANK1 ] PTR const unsigned char 
 21750 ;;		 -> STR_323(32), STR_322(35), STR_321(35), STR_300(10), 
 21751 ;;		 -> STR_287(23), STR_286(23), STR_227(23), STR_226(23), 
 21752 ;;		 -> STR_222(16), STR_221(36), STR_209(13), STR_208(20), 
 21753 ;;		 -> STR_207(17), STR_206(29), STR_190(15), STR_189(32), 
 21754 ;;		 -> STR_171(15), STR_170(22), STR_30(19), STR_27(52), 
 21755 ;;		 -> STR_26(48), STR_25(47), STR_24(54), STR_23(53), 
 21756 ;; Auto vars:     Size  Location     Type
 21757 ;;  idx             1   56[BANK1 ] unsigned char 
 21758 ;;  val             4   69[BANK1 ] unsigned long 
 21759 ;;  tmpval          4    0        struct .
 21760 ;;  flag            2   78[BANK1 ] unsigned short 
 21761 ;;  width           2   75[BANK1 ] int 
 21762 ;;  prec            2   73[BANK1 ] int 
 21763 ;;  ap              2   67[BANK1 ] PTR void [1]
 21764 ;;		 -> ?_sprintf(2), 
 21765 ;;  len             2   65[BANK1 ] unsigned int 
 21766 ;;  cp              2   57[BANK1 ] PTR const unsigned char 
 21767 ;;		 -> sprintf@c(1), 
 21768 ;;  c               1   77[BANK1 ] char 
 21769 ;; Return value:  Size  Location     Type
 21770 ;;                  2   36[BANK1 ] int 
 21771 ;; Registers used:
 21772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21773 ;; Tracked objects:
 21774 ;;		On entry : 0/0
 21775 ;;		On exit  : 0/0
 21776 ;;		Unchanged: 0/0
 21777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21778 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 21779 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
 21780 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 21781 ;;      Totals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0
 21782 ;;Total ram usage:       44 bytes
 21783 ;; Hardware stack levels used:    1
 21784 ;; Hardware stack levels required when called:    8
 21785 ;; This function calls:
 21786 ;;		___lldiv
 21787 ;;		___llmod
 21788 ;;		___wmul
 21789 ;;		_isdigit
 21790 ;; This function is called by:
 21791 ;;		_SetBaud
 21792 ;;		_Command
 21793 ;;		_SprintDate
 21794 ;; This function uses a non-reentrant model
 21795 ;;
 21796                           
 21797                           	psect	text47
 21798  01270E                     __ptext47:
 21799                           	opt stack 0
 21800  01270E                     _sprintf:
 21801                           	opt stack 21
 21802                           
 21803                           ;doprnt.c: 494: va_list ap;
 21804                           ;doprnt.c: 499: signed char c;
 21805                           ;doprnt.c: 501: int width;
 21806                           ;doprnt.c: 504: int prec;
 21807                           ;doprnt.c: 508: unsigned short flag;
 21808                           ;doprnt.c: 523: union {
 21809                           ;doprnt.c: 524: unsigned long vd;
 21810                           ;doprnt.c: 525: double integ;
 21811                           ;doprnt.c: 526: } tmpval;
 21812                           ;doprnt.c: 528: unsigned long val;
 21813                           ;doprnt.c: 529: unsigned len;
 21814                           ;doprnt.c: 530: const char * cp;
 21815                           ;doprnt.c: 533: *ap = __va_start();
 21816                           
 21817                           ;incstack = 0
 21818  01270E  0E8E               	movlw	low (?_sprintf+4)
 21819  012710  0101               	movlb	1	; () banked
 21820  012712  6FA9               	movwf	sprintf@ap& (0+255),b
 21821  012714  0E01               	movlw	high (?_sprintf+4)
 21822  012716  0101               	movlb	1	; () banked
 21823  012718  6FAA               	movwf	(sprintf@ap+1)& (0+255),b
 21824                           
 21825                           ;doprnt.c: 536: while(c = *f++) {
 21826  01271A  EFBB  F099         	goto	l13145
 21827  01271E                     l12793:
 21828                           
 21829                           ; BSR set to: 1
 21830                           ;doprnt.c: 538: if(c != '%')
 21831  01271E  0E25               	movlw	37
 21832  012720  0101               	movlb	1	; () banked
 21833  012722  19B3               	xorwf	sprintf@c& (0+255),w,b
 21834  012724  B4D8               	btfsc	status,2,c
 21835  012726  D00B               	goto	l12799
 21836                           
 21837                           ; BSR set to: 1
 21838                           ;doprnt.c: 540: {
 21839                           ;doprnt.c: 541: ((*sp++ = (c)));
 21840  012728  C18A  FFD9         	movff	sprintf@sp,fsr2l
 21841  01272C  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 21842  012730  C1B3  FFDF         	movff	sprintf@c,indf2
 21843                           
 21844                           ; BSR set to: 1
 21845  012734  0101               	movlb	1	; () banked
 21846  012736  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 21847  012738  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 21848                           
 21849                           ;doprnt.c: 542: continue;
 21850  01273A  EFBB  F099         	goto	l13145
 21851  01273E                     l12799:
 21852                           
 21853                           ; BSR set to: 1
 21854                           ;doprnt.c: 543: }
 21855                           ;doprnt.c: 546: width = 0;
 21856  01273E  0E00               	movlw	0
 21857  012740  0101               	movlb	1	; () banked
 21858  012742  6FB2               	movwf	(sprintf@width+1)& (0+255),b
 21859  012744  0E00               	movlw	0
 21860  012746  6FB1               	movwf	sprintf@width& (0+255),b
 21861                           
 21862                           ;doprnt.c: 548: flag = 0;
 21863  012748  0E00               	movlw	0
 21864  01274A  0101               	movlb	1	; () banked
 21865  01274C  6FB5               	movwf	(sprintf@flag+1)& (0+255),b
 21866  01274E  0E00               	movlw	0
 21867  012750  6FB4               	movwf	sprintf@flag& (0+255),b
 21868                           
 21869                           ; BSR set to: 1
 21870                           ;doprnt.c: 551: switch(*f) {
 21871                           
 21872                           ;doprnt.c: 550: for(;;) {
 21873  012752  D010               	goto	l12811
 21874  012754                     l12801:
 21875                           
 21876                           ;doprnt.c: 554: flag |= 0x08;
 21877  012754  0101               	movlb	1	; () banked
 21878  012756  87B4               	bsf	sprintf@flag& (0+255),3,b
 21879  012758  D008               	goto	L16
 21880  01275A                     l12803:
 21881                           
 21882                           ;doprnt.c: 561: flag |= 0x01;
 21883  01275A  0101               	movlb	1	; () banked
 21884  01275C  81B4               	bsf	sprintf@flag& (0+255),0,b
 21885  01275E  D005               	goto	L16
 21886  012760                     l12805:
 21887                           
 21888                           ;doprnt.c: 574: flag |= 0x800;
 21889  012760  0101               	movlb	1	; () banked
 21890  012762  87B5               	bsf	(sprintf@flag+1)& (0+255),3,b
 21891  012764  D002               	goto	L16
 21892  012766                     l12807:
 21893                           
 21894                           ;doprnt.c: 580: flag |= 0x04;
 21895  012766  0101               	movlb	1	; () banked
 21896  012768  85B4               	bsf	sprintf@flag& (0+255),2,b
 21897  01276A                     L16:
 21898                           
 21899                           ;doprnt.c: 581: f++;
 21900  01276A  0101               	movlb	1	; () banked
 21901  01276C  4B8C               	infsnz	sprintf@f& (0+255),f,b
 21902  01276E  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
 21903                           
 21904                           ;doprnt.c: 582: continue;
 21905  012770  D001               	goto	l12811
 21906                           
 21907                           ; BSR set to: 1
 21908                           ;doprnt.c: 584: }
 21909  012772  D016               	goto	l1837
 21910  012774                     l12811:
 21911  012774  C18C  FFF6         	movff	sprintf@f,tblptrl
 21912  012778  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 21913  01277C                     	if	0	;tblptru may be non-zero
 21914  01277C                     	endif
 21915  01277C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21916  01277C  0E00               	movlw	low (__mediumconst shr (0+16))
 21917  01277E  6EF8               	movwf	tblptru,c
 21918  012780                     	endif
 21919  012780  0008               	tblrd		*
 21920  012782  50F5               	movf	tablat,w,c
 21921                           
 21922                           ; Switch size 1, requested type "space"
 21923                           ; Number of cases is 4, Range of values is 32 to 48
 21924                           ; switch strategies available:
 21925                           ; Name         Instructions Cycles
 21926                           ; simple_byte           13     7 (average)
 21927                           ;	Chosen strategy is simple_byte
 21928  012784  0A20               	xorlw	32	; case 32
 21929  012786  B4D8               	btfsc	status,2,c
 21930  012788  D7E8               	goto	l12803
 21931  01278A  0A03               	xorlw	3	; case 35
 21932  01278C  B4D8               	btfsc	status,2,c
 21933  01278E  D7E8               	goto	l12805
 21934  012790  0A0E               	xorlw	14	; case 45
 21935  012792  B4D8               	btfsc	status,2,c
 21936  012794  D7DF               	goto	l12801
 21937  012796  0A1D               	xorlw	29	; case 48
 21938  012798  B4D8               	btfsc	status,2,c
 21939  01279A  D7E5               	goto	l12807
 21940                           
 21941                           ;doprnt.c: 585: break;
 21942  01279C  D001               	goto	l1837
 21943                           
 21944                           ;doprnt.c: 586: }
 21945  01279E  D7EA               	goto	l12811
 21946  0127A0                     l1837:
 21947                           
 21948                           ;doprnt.c: 593: if(flag & 0x08)
 21949  0127A0  0101               	movlb	1	; () banked
 21950  0127A2  A7B4               	btfss	sprintf@flag& (0+255),3,b
 21951  0127A4  D003               	goto	l12815
 21952                           
 21953                           ; BSR set to: 1
 21954                           ;doprnt.c: 594: flag &= ~0x04;
 21955  0127A6  0101               	movlb	1	; () banked
 21956  0127A8  95B4               	bcf	sprintf@flag& (0+255),2,b
 21957  0127AA  D000               	goto	l12815
 21958  0127AC                     l12815:
 21959                           
 21960                           ; BSR set to: 1
 21961                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 21962  0127AC  C18C  FFF6         	movff	sprintf@f,tblptrl
 21963  0127B0  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 21964  0127B4                     	if	0	;tblptru may be non-zero
 21965  0127B4                     	endif
 21966  0127B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21967  0127B4  0E00               	movlw	low (__mediumconst shr (0+16))
 21968  0127B6  6EF8               	movwf	tblptru,c
 21969  0127B8                     	endif
 21970  0127B8  0008               	tblrd		*
 21971  0127BA  50F5               	movf	tablat,w,c
 21972  0127BC  EC09  F007         	call	_isdigit
 21973  0127C0  A0D8               	btfss	status,0,c
 21974  0127C2  D047               	goto	l12827
 21975                           
 21976                           ;doprnt.c: 598: width = 0;
 21977  0127C4  0E00               	movlw	0
 21978  0127C6  0101               	movlb	1	; () banked
 21979  0127C8  6FB2               	movwf	(sprintf@width+1)& (0+255),b
 21980  0127CA  0E00               	movlw	0
 21981  0127CC  6FB1               	movwf	sprintf@width& (0+255),b
 21982  0127CE  D000               	goto	l12819
 21983  0127D0                     l12819:
 21984                           
 21985                           ;doprnt.c: 600: width *= 10;
 21986  0127D0  C1B1  F174         	movff	sprintf@width,___wmul@multiplier
 21987  0127D4  C1B2  F175         	movff	sprintf@width+1,___wmul@multiplier+1
 21988  0127D8  0E00               	movlw	0
 21989  0127DA  0101               	movlb	1	; () banked
 21990  0127DC  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
 21991  0127DE  0E0A               	movlw	10
 21992  0127E0  6F76               	movwf	___wmul@multiplicand& (0+255),b
 21993  0127E2  EC07  F006         	call	___wmul	;wreg free
 21994  0127E6  C174  F1B1         	movff	?___wmul,sprintf@width
 21995  0127EA  C175  F1B2         	movff	?___wmul+1,sprintf@width+1
 21996                           
 21997                           ;doprnt.c: 601: width += *f++ - '0';
 21998  0127EE  0ED0               	movlw	208
 21999  0127F0  0101               	movlb	1	; () banked
 22000  0127F2  6F9A               	movwf	??_sprintf& (0+255),b
 22001  0127F4  0EFF               	movlw	255
 22002  0127F6  0101               	movlb	1	; () banked
 22003  0127F8  6F9B               	movwf	(??_sprintf+1)& (0+255),b
 22004  0127FA  C18C  FFF6         	movff	sprintf@f,tblptrl
 22005  0127FE  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 22006  012802                     	if	0	;tblptru may be non-zero
 22007  012802                     	endif
 22008  012802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22009  012802  0E00               	movlw	low (__mediumconst shr (0+16))
 22010  012804  6EF8               	movwf	tblptru,c
 22011  012806                     	endif
 22012  012806  0008               	tblrd		*
 22013  012808  50F5               	movf	tablat,w,c
 22014  01280A  0101               	movlb	1	; () banked
 22015  01280C  6F9C               	movwf	(??_sprintf+2)& (0+255),b
 22016  01280E  6B9D               	clrf	(??_sprintf+3)& (0+255),b
 22017  012810  0101               	movlb	1	; () banked
 22018  012812  519A               	movf	??_sprintf& (0+255),w,b
 22019  012814  0101               	movlb	1	; () banked
 22020  012816  279C               	addwf	(??_sprintf+2)& (0+255),f,b
 22021  012818  0101               	movlb	1	; () banked
 22022  01281A  519B               	movf	(??_sprintf+1)& (0+255),w,b
 22023  01281C  0101               	movlb	1	; () banked
 22024  01281E  239D               	addwfc	(??_sprintf+3)& (0+255),f,b
 22025  012820  0101               	movlb	1	; () banked
 22026  012822  519C               	movf	(??_sprintf+2)& (0+255),w,b
 22027  012824  0101               	movlb	1	; () banked
 22028  012826  27B1               	addwf	sprintf@width& (0+255),f,b
 22029  012828  0101               	movlb	1	; () banked
 22030  01282A  519D               	movf	(??_sprintf+3)& (0+255),w,b
 22031  01282C  0101               	movlb	1	; () banked
 22032  01282E  23B2               	addwfc	(sprintf@width+1)& (0+255),f,b
 22033                           
 22034                           ; BSR set to: 1
 22035  012830  0101               	movlb	1	; () banked
 22036  012832  4B8C               	infsnz	sprintf@f& (0+255),f,b
 22037  012834  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
 22038                           
 22039                           ; BSR set to: 1
 22040                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 22041  012836  C18C  FFF6         	movff	sprintf@f,tblptrl
 22042  01283A  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 22043  01283E                     	if	0	;tblptru may be non-zero
 22044  01283E                     	endif
 22045  01283E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22046  01283E  0E00               	movlw	low (__mediumconst shr (0+16))
 22047  012840  6EF8               	movwf	tblptru,c
 22048  012842                     	endif
 22049  012842  0008               	tblrd		*
 22050  012844  50F5               	movf	tablat,w,c
 22051  012846  EC09  F007         	call	_isdigit
 22052  01284A  A0D8               	btfss	status,0,c
 22053  01284C  D01E               	goto	l12835
 22054  01284E  D7C0               	goto	l12819
 22055                           
 22056                           ;doprnt.c: 604: } else if(*f == '*') {
 22057  012850  D01C               	goto	l12835
 22058  012852                     l12827:
 22059  012852  C18C  FFF6         	movff	sprintf@f,tblptrl
 22060  012856  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 22061  01285A                     	if	0	;tblptru may be non-zero
 22062  01285A                     	endif
 22063  01285A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22064  01285A  0E00               	movlw	low (__mediumconst shr (0+16))
 22065  01285C  6EF8               	movwf	tblptru,c
 22066  01285E                     	endif
 22067  01285E  0008               	tblrd		*
 22068  012860  50F5               	movf	tablat,w,c
 22069  012862  0A2A               	xorlw	42
 22070  012864  A4D8               	btfss	status,2,c
 22071  012866  D011               	goto	l12835
 22072                           
 22073                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 22074  012868  C1A9  FFD9         	movff	sprintf@ap,fsr2l
 22075  01286C  C1AA  FFDA         	movff	sprintf@ap+1,fsr2h
 22076  012870  CFDE F1B1          	movff	postinc2,sprintf@width
 22077  012874  CFDD F1B2          	movff	postdec2,sprintf@width+1
 22078  012878  0E02               	movlw	2
 22079  01287A  0101               	movlb	1	; () banked
 22080  01287C  27A9               	addwf	sprintf@ap& (0+255),f,b
 22081  01287E  0E00               	movlw	0
 22082  012880  23AA               	addwfc	(sprintf@ap+1)& (0+255),f,b
 22083                           
 22084                           ; BSR set to: 1
 22085                           ;doprnt.c: 606: f++;
 22086  012882  0101               	movlb	1	; () banked
 22087  012884  4B8C               	infsnz	sprintf@f& (0+255),f,b
 22088  012886  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
 22089                           
 22090                           ; BSR set to: 1
 22091  012888  D000               	goto	l12835
 22092  01288A                     l12835:
 22093                           
 22094                           ;doprnt.c: 608: }
 22095                           ;doprnt.c: 611: if(*f == '.') {
 22096  01288A  C18C  FFF6         	movff	sprintf@f,tblptrl
 22097  01288E  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 22098  012892                     	if	0	;tblptru may be non-zero
 22099  012892                     	endif
 22100  012892                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22101  012892  0E00               	movlw	low (__mediumconst shr (0+16))
 22102  012894  6EF8               	movwf	tblptru,c
 22103  012896                     	endif
 22104  012896  0008               	tblrd		*
 22105  012898  50F5               	movf	tablat,w,c
 22106  01289A  0A2E               	xorlw	46
 22107  01289C  A4D8               	btfss	status,2,c
 22108  01289E  D05B               	goto	l12855
 22109                           
 22110                           ;doprnt.c: 612: flag |= 0x4000;
 22111  0128A0  0101               	movlb	1	; () banked
 22112  0128A2  8DB5               	bsf	(sprintf@flag+1)& (0+255),6,b
 22113                           
 22114                           ;doprnt.c: 613: f++;
 22115  0128A4  0101               	movlb	1	; () banked
 22116  0128A6  4B8C               	infsnz	sprintf@f& (0+255),f,b
 22117  0128A8  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
 22118                           
 22119                           ; BSR set to: 1
 22120                           ;doprnt.c: 615: if(*f == '*') {
 22121  0128AA  C18C  FFF6         	movff	sprintf@f,tblptrl
 22122  0128AE  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 22123  0128B2                     	if	0	;tblptru may be non-zero
 22124  0128B2                     	endif
 22125  0128B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22126  0128B2  0E00               	movlw	low (__mediumconst shr (0+16))
 22127  0128B4  6EF8               	movwf	tblptru,c
 22128  0128B6                     	endif
 22129  0128B6  0008               	tblrd		*
 22130  0128B8  50F5               	movf	tablat,w,c
 22131  0128BA  0A2A               	xorlw	42
 22132  0128BC  A4D8               	btfss	status,2,c
 22133  0128BE  D011               	goto	l12847
 22134                           
 22135                           ; BSR set to: 1
 22136                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 22137  0128C0  C1A9  FFD9         	movff	sprintf@ap,fsr2l
 22138  0128C4  C1AA  FFDA         	movff	sprintf@ap+1,fsr2h
 22139  0128C8  CFDE F1AF          	movff	postinc2,sprintf@prec
 22140  0128CC  CFDD F1B0          	movff	postdec2,sprintf@prec+1
 22141                           
 22142                           ; BSR set to: 1
 22143  0128D0  0E02               	movlw	2
 22144  0128D2  0101               	movlb	1	; () banked
 22145  0128D4  27A9               	addwf	sprintf@ap& (0+255),f,b
 22146  0128D6  0E00               	movlw	0
 22147  0128D8  23AA               	addwfc	(sprintf@ap+1)& (0+255),f,b
 22148                           
 22149                           ; BSR set to: 1
 22150                           ;doprnt.c: 617: f++;
 22151  0128DA  0101               	movlb	1	; () banked
 22152  0128DC  4B8C               	infsnz	sprintf@f& (0+255),f,b
 22153  0128DE  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
 22154                           
 22155                           ;doprnt.c: 618: } else
 22156  0128E0  D0EF               	goto	l12913
 22157  0128E2                     l12847:
 22158                           
 22159                           ; BSR set to: 1
 22160                           ;doprnt.c: 620: {
 22161                           ;doprnt.c: 621: prec = 0;
 22162  0128E2  0E00               	movlw	0
 22163  0128E4  0101               	movlb	1	; () banked
 22164  0128E6  6FB0               	movwf	(sprintf@prec+1)& (0+255),b
 22165  0128E8  0E00               	movlw	0
 22166  0128EA  6FAF               	movwf	sprintf@prec& (0+255),b
 22167                           
 22168                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 22169  0128EC  D026               	goto	l12853
 22170  0128EE                     l12849:
 22171                           
 22172                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 22173  0128EE  C1AF  F174         	movff	sprintf@prec,___wmul@multiplier
 22174  0128F2  C1B0  F175         	movff	sprintf@prec+1,___wmul@multiplier+1
 22175  0128F6  0E00               	movlw	0
 22176  0128F8  0101               	movlb	1	; () banked
 22177  0128FA  6F77               	movwf	(___wmul@multiplicand+1)& (0+255),b
 22178  0128FC  0E0A               	movlw	10
 22179  0128FE  6F76               	movwf	___wmul@multiplicand& (0+255),b
 22180  012900  EC07  F006         	call	___wmul	;wreg free
 22181  012904  C18C  FFF6         	movff	sprintf@f,tblptrl
 22182  012908  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 22183  01290C                     	if	0	;tblptru may be non-zero
 22184  01290C                     	endif
 22185  01290C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22186  01290C  0E00               	movlw	low (__mediumconst shr (0+16))
 22187  01290E  6EF8               	movwf	tblptru,c
 22188  012910                     	endif
 22189  012910  0008               	tblrd		*
 22190  012912  50F5               	movf	tablat,w,c
 22191  012914  0101               	movlb	1	; () banked
 22192  012916  2774               	addwf	?___wmul& (0+255),f,b
 22193  012918  0E00               	movlw	0
 22194  01291A  0101               	movlb	1	; () banked
 22195  01291C  2375               	addwfc	(?___wmul+1)& (0+255),f,b
 22196  01291E  0ED0               	movlw	208
 22197  012920  0101               	movlb	1	; () banked
 22198  012922  2574               	addwf	?___wmul& (0+255),w,b
 22199  012924  0101               	movlb	1	; () banked
 22200  012926  6FAF               	movwf	sprintf@prec& (0+255),b
 22201  012928  0EFF               	movlw	255
 22202  01292A  0101               	movlb	1	; () banked
 22203  01292C  2175               	addwfc	(?___wmul+1)& (0+255),w,b
 22204  01292E  0101               	movlb	1	; () banked
 22205  012930  6FB0               	movwf	(sprintf@prec+1)& (0+255),b
 22206                           
 22207                           ; BSR set to: 1
 22208  012932  0101               	movlb	1	; () banked
 22209  012934  4B8C               	infsnz	sprintf@f& (0+255),f,b
 22210  012936  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
 22211  012938  D000               	goto	l12853
 22212  01293A                     l12853:
 22213                           
 22214                           ; BSR set to: 1
 22215  01293A  C18C  FFF6         	movff	sprintf@f,tblptrl
 22216  01293E  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 22217  012942                     	if	0	;tblptru may be non-zero
 22218  012942                     	endif
 22219  012942                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22220  012942  0E00               	movlw	low (__mediumconst shr (0+16))
 22221  012944  6EF8               	movwf	tblptru,c
 22222  012946                     	endif
 22223  012946  0008               	tblrd		*
 22224  012948  50F5               	movf	tablat,w,c
 22225  01294A  EC09  F007         	call	_isdigit
 22226  01294E  A0D8               	btfss	status,0,c
 22227  012950  D0B7               	goto	l12913
 22228  012952  D7CD               	goto	l12849
 22229                           
 22230                           ;doprnt.c: 624: }
 22231                           ;doprnt.c: 625: } else {
 22232  012954  D0B5               	goto	l12913
 22233  012956                     l12855:
 22234                           
 22235                           ;doprnt.c: 626: prec = 0;
 22236  012956  0E00               	movlw	0
 22237  012958  0101               	movlb	1	; () banked
 22238  01295A  6FB0               	movwf	(sprintf@prec+1)& (0+255),b
 22239  01295C  0E00               	movlw	0
 22240  01295E  6FAF               	movwf	sprintf@prec& (0+255),b
 22241                           
 22242                           ; BSR set to: 1
 22243                           ;doprnt.c: 635: switch(c = *f++) {
 22244                           
 22245                           ;doprnt.c: 630: }
 22246                           ;doprnt.c: 633: loop:
 22247                           
 22248                           ; BSR set to: 1
 22249  012960  D0AF               	goto	l12913
 22250                           
 22251                           ; BSR set to: 1
 22252                           ;doprnt.c: 638: goto alldone;
 22253                           
 22254                           ;doprnt.c: 637: case 0:
 22255  012962  EFCE  F099         	goto	l13147
 22256  012966                     l12857:
 22257                           
 22258                           ; BSR set to: 1
 22259                           ;doprnt.c: 643: flag |= 0x10;
 22260  012966  0101               	movlb	1	; () banked
 22261  012968  89B4               	bsf	sprintf@flag& (0+255),4,b
 22262                           
 22263                           ;doprnt.c: 644: goto loop;
 22264  01296A  D0AA               	goto	l12913
 22265  01296C                     l12859:
 22266                           
 22267                           ; BSR set to: 1
 22268                           ;doprnt.c: 691: flag |= 0x40;
 22269  01296C  0101               	movlb	1	; () banked
 22270  01296E  8DB4               	bsf	sprintf@flag& (0+255),6,b
 22271                           
 22272                           ; BSR set to: 1
 22273                           ;doprnt.c: 698: case 'i':
 22274                           ;doprnt.c: 699: break;
 22275                           
 22276                           ; BSR set to: 1
 22277                           
 22278                           ;doprnt.c: 697: case 'd':
 22279                           
 22280                           ;doprnt.c: 693: break;
 22281  012970  D0D2               	goto	l12915
 22282  012972                     l12861:
 22283                           
 22284                           ; BSR set to: 1
 22285                           ;doprnt.c: 714: flag |= 0x20;
 22286  012972  0101               	movlb	1	; () banked
 22287  012974  8BB4               	bsf	sprintf@flag& (0+255),5,b
 22288  012976                     l1861:
 22289                           
 22290                           ; BSR set to: 1
 22291                           ;doprnt.c: 721: flag |= 0x80;
 22292  012976  0101               	movlb	1	; () banked
 22293  012978  8FB4               	bsf	sprintf@flag& (0+255),7,b
 22294                           
 22295                           ;doprnt.c: 723: break;
 22296  01297A  D0CD               	goto	l12915
 22297  01297C                     l12863:
 22298                           
 22299                           ; BSR set to: 1
 22300                           ;doprnt.c: 753: if(prec && prec < len)
 22301  01297C  0101               	movlb	1	; () banked
 22302  01297E  51AF               	movf	sprintf@prec& (0+255),w,b
 22303  012980  0101               	movlb	1	; () banked
 22304  012982  11B0               	iorwf	(sprintf@prec+1)& (0+255),w,b
 22305  012984  B4D8               	btfsc	status,2,c
 22306  012986  D00F               	goto	l12869
 22307                           
 22308                           ; BSR set to: 1
 22309  012988  0101               	movlb	1	; () banked
 22310  01298A  51A7               	movf	sprintf@len& (0+255),w,b
 22311  01298C  0101               	movlb	1	; () banked
 22312  01298E  5DAF               	subwf	sprintf@prec& (0+255),w,b
 22313  012990  0101               	movlb	1	; () banked
 22314  012992  51A8               	movf	(sprintf@len+1)& (0+255),w,b
 22315  012994  0101               	movlb	1	; () banked
 22316  012996  59B0               	subwfb	(sprintf@prec+1)& (0+255),w,b
 22317  012998  B0D8               	btfsc	status,0,c
 22318  01299A  D005               	goto	l12869
 22319                           
 22320                           ; BSR set to: 1
 22321                           ;doprnt.c: 754: len = prec;
 22322  01299C  C1AF  F1A7         	movff	sprintf@prec,sprintf@len
 22323  0129A0  C1B0  F1A8         	movff	sprintf@prec+1,sprintf@len+1
 22324  0129A4  D000               	goto	l12869
 22325  0129A6                     l12869:
 22326                           
 22327                           ; BSR set to: 1
 22328                           ;doprnt.c: 757: if(width > len)
 22329  0129A6  0101               	movlb	1	; () banked
 22330  0129A8  51B1               	movf	sprintf@width& (0+255),w,b
 22331  0129AA  0101               	movlb	1	; () banked
 22332  0129AC  5DA7               	subwf	sprintf@len& (0+255),w,b
 22333  0129AE  0101               	movlb	1	; () banked
 22334  0129B0  51B2               	movf	(sprintf@width+1)& (0+255),w,b
 22335  0129B2  0101               	movlb	1	; () banked
 22336  0129B4  59A8               	subwfb	(sprintf@len+1)& (0+255),w,b
 22337  0129B6  B0D8               	btfsc	status,0,c
 22338  0129B8  D009               	goto	l12873
 22339                           
 22340                           ; BSR set to: 1
 22341                           ;doprnt.c: 758: width -= len;
 22342  0129BA  0101               	movlb	1	; () banked
 22343  0129BC  51A7               	movf	sprintf@len& (0+255),w,b
 22344  0129BE  0101               	movlb	1	; () banked
 22345  0129C0  5FB1               	subwf	sprintf@width& (0+255),f,b
 22346  0129C2  0101               	movlb	1	; () banked
 22347  0129C4  51A8               	movf	(sprintf@len+1)& (0+255),w,b
 22348  0129C6  0101               	movlb	1	; () banked
 22349  0129C8  5BB2               	subwfb	(sprintf@width+1)& (0+255),f,b
 22350  0129CA  D006               	goto	l12875
 22351  0129CC                     l12873:
 22352                           
 22353                           ; BSR set to: 1
 22354                           ;doprnt.c: 759: else
 22355                           ;doprnt.c: 760: width = 0;
 22356  0129CC  0E00               	movlw	0
 22357  0129CE  0101               	movlb	1	; () banked
 22358  0129D0  6FB2               	movwf	(sprintf@width+1)& (0+255),b
 22359  0129D2  0E00               	movlw	0
 22360  0129D4  6FB1               	movwf	sprintf@width& (0+255),b
 22361  0129D6  D000               	goto	l12875
 22362  0129D8                     l12875:
 22363                           
 22364                           ; BSR set to: 1
 22365                           ;doprnt.c: 762: if(!(flag & 0x08))
 22366  0129D8  0101               	movlb	1	; () banked
 22367  0129DA  A7B4               	btfss	sprintf@flag& (0+255),3,b
 22368  0129DC  D00C               	goto	l12883
 22369  0129DE  D029               	goto	l12891
 22370                           
 22371                           ; BSR set to: 1
 22372                           ;doprnt.c: 764: while(width--)
 22373  0129E0  D00A               	goto	l12883
 22374  0129E2                     l12879:
 22375                           
 22376                           ; BSR set to: 1
 22377                           ;doprnt.c: 765: ((*sp++ = (' ')));
 22378  0129E2  C18A  FFD9         	movff	sprintf@sp,fsr2l
 22379  0129E6  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 22380  0129EA  0E20               	movlw	32
 22381  0129EC  6EDF               	movwf	indf2,c
 22382                           
 22383                           ; BSR set to: 1
 22384  0129EE  0101               	movlb	1	; () banked
 22385  0129F0  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 22386  0129F2  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 22387  0129F4  D000               	goto	l12883
 22388  0129F6                     l12883:
 22389                           
 22390                           ; BSR set to: 1
 22391  0129F6  0101               	movlb	1	; () banked
 22392  0129F8  07B1               	decf	sprintf@width& (0+255),f,b
 22393  0129FA  A0D8               	btfss	status,0,c
 22394  0129FC  07B2               	decf	(sprintf@width+1)& (0+255),f,b
 22395  0129FE  0101               	movlb	1	; () banked
 22396  012A00  29B1               	incf	sprintf@width& (0+255),w,b
 22397  012A02  E1EF               	bnz	l12879
 22398  012A04  0101               	movlb	1	; () banked
 22399  012A06  29B2               	incf	(sprintf@width+1)& (0+255),w,b
 22400  012A08  B4D8               	btfsc	status,2,c
 22401  012A0A  D013               	goto	l12891
 22402  012A0C  D7EA               	goto	l12879
 22403                           
 22404                           ; BSR set to: 1
 22405                           ;doprnt.c: 767: while(len--)
 22406                           
 22407                           ; BSR set to: 1
 22408  012A0E  D011               	goto	l12891
 22409  012A10                     l12885:
 22410                           
 22411                           ; BSR set to: 1
 22412                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 22413  012A10  C19F  FFD9         	movff	sprintf@cp,fsr2l
 22414  012A14  C1A0  FFDA         	movff	sprintf@cp+1,fsr2h
 22415  012A18  C18A  FFE1         	movff	sprintf@sp,fsr1l
 22416  012A1C  C18B  FFE2         	movff	sprintf@sp+1,fsr1h
 22417  012A20  CFDF FFE7          	movff	indf2,indf1
 22418                           
 22419                           ; BSR set to: 1
 22420  012A24  0101               	movlb	1	; () banked
 22421  012A26  4B9F               	infsnz	sprintf@cp& (0+255),f,b
 22422  012A28  2BA0               	incf	(sprintf@cp+1)& (0+255),f,b
 22423                           
 22424                           ; BSR set to: 1
 22425  012A2A  0101               	movlb	1	; () banked
 22426  012A2C  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 22427  012A2E  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 22428  012A30  D000               	goto	l12891
 22429  012A32                     l12891:
 22430                           
 22431                           ; BSR set to: 1
 22432  012A32  0101               	movlb	1	; () banked
 22433  012A34  07A7               	decf	sprintf@len& (0+255),f,b
 22434  012A36  A0D8               	btfss	status,0,c
 22435  012A38  07A8               	decf	(sprintf@len+1)& (0+255),f,b
 22436  012A3A  0101               	movlb	1	; () banked
 22437  012A3C  29A7               	incf	sprintf@len& (0+255),w,b
 22438  012A3E  E1E8               	bnz	l12885
 22439  012A40  0101               	movlb	1	; () banked
 22440  012A42  29A8               	incf	(sprintf@len+1)& (0+255),w,b
 22441  012A44  A4D8               	btfss	status,2,c
 22442  012A46  D7E4               	goto	l12885
 22443                           
 22444                           ; BSR set to: 1
 22445                           ;doprnt.c: 770: if(flag & 0x08)
 22446  012A48  0101               	movlb	1	; () banked
 22447  012A4A  B7B4               	btfsc	sprintf@flag& (0+255),3,b
 22448  012A4C  D00D               	goto	l12899
 22449  012A4E  EFBB  F099         	goto	l13145
 22450                           
 22451                           ; BSR set to: 1
 22452                           ;doprnt.c: 771: while(width--)
 22453  012A52  D00A               	goto	l12899
 22454  012A54                     l12895:
 22455                           
 22456                           ; BSR set to: 1
 22457                           ;doprnt.c: 772: ((*sp++ = (' ')));
 22458  012A54  C18A  FFD9         	movff	sprintf@sp,fsr2l
 22459  012A58  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 22460  012A5C  0E20               	movlw	32
 22461  012A5E  6EDF               	movwf	indf2,c
 22462                           
 22463                           ; BSR set to: 1
 22464  012A60  0101               	movlb	1	; () banked
 22465  012A62  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 22466  012A64  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 22467  012A66  D000               	goto	l12899
 22468  012A68                     l12899:
 22469                           
 22470                           ; BSR set to: 1
 22471  012A68  0101               	movlb	1	; () banked
 22472  012A6A  07B1               	decf	sprintf@width& (0+255),f,b
 22473  012A6C  A0D8               	btfss	status,0,c
 22474  012A6E  07B2               	decf	(sprintf@width+1)& (0+255),f,b
 22475  012A70  0101               	movlb	1	; () banked
 22476  012A72  29B1               	incf	sprintf@width& (0+255),w,b
 22477  012A74  E1EF               	bnz	l12895
 22478  012A76  0101               	movlb	1	; () banked
 22479  012A78  29B2               	incf	(sprintf@width+1)& (0+255),w,b
 22480  012A7A  B4D8               	btfsc	status,2,c
 22481  012A7C  EFBB  F099         	goto	l13145
 22482  012A80  D7E9               	goto	l12895
 22483                           
 22484                           ; BSR set to: 1
 22485                           ;doprnt.c: 774: continue;
 22486                           
 22487                           ; BSR set to: 1
 22488  012A82  EFBB  F099         	goto	l13145
 22489  012A86                     l12901:
 22490                           
 22491                           ; BSR set to: 1
 22492                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 22493  012A86  C1A9  FFD9         	movff	sprintf@ap,fsr2l
 22494  012A8A  C1AA  FFDA         	movff	sprintf@ap+1,fsr2h
 22495  012A8E  50DF               	movf	indf2,w,c
 22496  012A90  0101               	movlb	1	; () banked
 22497  012A92  6FB3               	movwf	sprintf@c& (0+255),b
 22498                           
 22499                           ; BSR set to: 1
 22500  012A94  0E02               	movlw	2
 22501  012A96  0101               	movlb	1	; () banked
 22502  012A98  27A9               	addwf	sprintf@ap& (0+255),f,b
 22503  012A9A  0E00               	movlw	0
 22504  012A9C  23AA               	addwfc	(sprintf@ap+1)& (0+255),f,b
 22505  012A9E  D000               	goto	l12905
 22506  012AA0                     l12905:
 22507                           
 22508                           ; BSR set to: 1
 22509                           ;doprnt.c: 805: cp = (char *)&c;
 22510  012AA0  0EB3               	movlw	low sprintf@c
 22511  012AA2  0101               	movlb	1	; () banked
 22512  012AA4  6F9F               	movwf	sprintf@cp& (0+255),b
 22513  012AA6  0E01               	movlw	high sprintf@c
 22514  012AA8  0101               	movlb	1	; () banked
 22515  012AAA  6FA0               	movwf	(sprintf@cp+1)& (0+255),b
 22516                           
 22517                           ; BSR set to: 1
 22518                           ;doprnt.c: 806: len = 1;
 22519  012AAC  0E00               	movlw	0
 22520  012AAE  0101               	movlb	1	; () banked
 22521  012AB0  6FA8               	movwf	(sprintf@len+1)& (0+255),b
 22522  012AB2  0E01               	movlw	1
 22523  012AB4  6FA7               	movwf	sprintf@len& (0+255),b
 22524                           
 22525                           ;doprnt.c: 807: goto dostring;
 22526  012AB6  D762               	goto	l12863
 22527  012AB8                     l12909:
 22528                           
 22529                           ; BSR set to: 1
 22530                           ;doprnt.c: 818: flag |= 0xC0;
 22531  012AB8  0EC0               	movlw	192
 22532  012ABA  0101               	movlb	1	; () banked
 22533  012ABC  13B4               	iorwf	sprintf@flag& (0+255),f,b
 22534                           
 22535                           ; BSR set to: 1
 22536                           ;doprnt.c: 822: }
 22537                           
 22538                           ;doprnt.c: 819: break;
 22539  012ABE  D02B               	goto	l12915
 22540  012AC0                     l12913:
 22541  012AC0  C18C  FFF6         	movff	sprintf@f,tblptrl
 22542  012AC4  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 22543  012AC8  0101               	movlb	1	; () banked
 22544  012ACA  4B8C               	infsnz	sprintf@f& (0+255),f,b
 22545  012ACC  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
 22546  012ACE                     	if	0	;tblptru may be non-zero
 22547  012ACE                     	endif
 22548  012ACE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22549  012ACE  0E00               	movlw	low (__mediumconst shr (0+16))
 22550  012AD0  6EF8               	movwf	tblptru,c
 22551  012AD2                     	endif
 22552  012AD2  0008               	tblrd		*
 22553  012AD4  CFF5 F1B3          	movff	tablat,sprintf@c
 22554  012AD8  0101               	movlb	1	; () banked
 22555  012ADA  51B3               	movf	sprintf@c& (0+255),w,b
 22556                           
 22557                           ; Switch size 1, requested type "space"
 22558                           ; Number of cases is 9, Range of values is 0 to 120
 22559                           ; switch strategies available:
 22560                           ; Name         Instructions Cycles
 22561                           ; simple_byte           28    15 (average)
 22562                           ;	Chosen strategy is simple_byte
 22563  012ADC  0A00               	xorlw	0	; case 0
 22564  012ADE  B4D8               	btfsc	status,2,c
 22565  012AE0  EFCE  F099         	goto	l13147
 22566  012AE4  0A58               	xorlw	88	; case 88
 22567  012AE6  B4D8               	btfsc	status,2,c
 22568  012AE8  D744               	goto	l12861
 22569  012AEA  0A3B               	xorlw	59	; case 99
 22570  012AEC  B4D8               	btfsc	status,2,c
 22571  012AEE  D7CB               	goto	l12901
 22572  012AF0  0A07               	xorlw	7	; case 100
 22573  012AF2  B4D8               	btfsc	status,2,c
 22574  012AF4  D010               	goto	l12915
 22575  012AF6  0A0D               	xorlw	13	; case 105
 22576  012AF8  B4D8               	btfsc	status,2,c
 22577  012AFA  D00D               	goto	l12915
 22578  012AFC  0A05               	xorlw	5	; case 108
 22579  012AFE  B4D8               	btfsc	status,2,c
 22580  012B00  D732               	goto	l12857
 22581  012B02  0A03               	xorlw	3	; case 111
 22582  012B04  B4D8               	btfsc	status,2,c
 22583  012B06  D732               	goto	l12859
 22584  012B08  0A1A               	xorlw	26	; case 117
 22585  012B0A  B4D8               	btfsc	status,2,c
 22586  012B0C  D7D5               	goto	l12909
 22587  012B0E  0A0D               	xorlw	13	; case 120
 22588  012B10  B4D8               	btfsc	status,2,c
 22589  012B12  D731               	goto	l1861
 22590  012B14  D7C5               	goto	l12905
 22591  012B16                     l12915:
 22592                           
 22593                           ; BSR set to: 1
 22594                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 22595  012B16  0EC0               	movlw	192
 22596  012B18  0101               	movlb	1	; () banked
 22597  012B1A  15B4               	andwf	sprintf@flag& (0+255),w,b
 22598  012B1C  0101               	movlb	1	; () banked
 22599  012B1E  6F9A               	movwf	??_sprintf& (0+255),b
 22600  012B20  0E00               	movlw	0
 22601  012B22  0101               	movlb	1	; () banked
 22602  012B24  15B5               	andwf	(sprintf@flag+1)& (0+255),w,b
 22603  012B26  0101               	movlb	1	; () banked
 22604  012B28  6F9B               	movwf	(??_sprintf+1)& (0+255),b
 22605  012B2A  0101               	movlb	1	; () banked
 22606  012B2C  519A               	movf	??_sprintf& (0+255),w,b
 22607  012B2E  0101               	movlb	1	; () banked
 22608  012B30  119B               	iorwf	(??_sprintf+1)& (0+255),w,b
 22609  012B32  A4D8               	btfss	status,2,c
 22610  012B34  D035               	goto	l1880
 22611                           
 22612                           ; BSR set to: 1
 22613                           ;doprnt.c: 1253: {
 22614                           ;doprnt.c: 1255: if(flag & 0x10)
 22615  012B36  0101               	movlb	1	; () banked
 22616  012B38  A9B4               	btfss	sprintf@flag& (0+255),4,b
 22617  012B3A  D00E               	goto	l12923
 22618                           
 22619                           ; BSR set to: 1
 22620                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 22621  012B3C  C1A9  FFD9         	movff	sprintf@ap,fsr2l
 22622  012B40  C1AA  FFDA         	movff	sprintf@ap+1,fsr2h
 22623  012B44  CFDE F1AB          	movff	postinc2,sprintf@val
 22624  012B48  CFDE F1AC          	movff	postinc2,sprintf@val+1
 22625  012B4C  CFDE F1AD          	movff	postinc2,sprintf@val+2
 22626  012B50  CFDE F1AE          	movff	postinc2,sprintf@val+3
 22627                           
 22628                           ; BSR set to: 1
 22629  012B54  0E04               	movlw	4
 22630  012B56  D00F               	goto	L17
 22631  012B58                     l12923:
 22632                           
 22633                           ; BSR set to: 1
 22634                           ;doprnt.c: 1257: else
 22635                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 22636  012B58  C1A9  FFD9         	movff	sprintf@ap,fsr2l
 22637  012B5C  C1AA  FFDA         	movff	sprintf@ap+1,fsr2h
 22638  012B60  CFDE F1AB          	movff	postinc2,sprintf@val
 22639  012B64  CFDD F1AC          	movff	postdec2,sprintf@val+1
 22640  012B68  0101               	movlb	1	; () banked
 22641  012B6A  0E00               	movlw	0
 22642  012B6C  BFAC               	btfsc	(sprintf@val+1)& (0+255),7,b
 22643  012B6E  0EFF               	movlw	-1
 22644  012B70  6FAD               	movwf	(sprintf@val+2)& (0+255),b
 22645  012B72  6FAE               	movwf	(sprintf@val+3)& (0+255),b
 22646                           
 22647                           ; BSR set to: 1
 22648  012B74  0E02               	movlw	2
 22649  012B76                     L17:
 22650  012B76  0101               	movlb	1	; () banked
 22651  012B78  27A9               	addwf	sprintf@ap& (0+255),f,b
 22652  012B7A  0E00               	movlw	0
 22653  012B7C  23AA               	addwfc	(sprintf@ap+1)& (0+255),f,b
 22654  012B7E  D000               	goto	l12927
 22655  012B80                     l12927:
 22656                           
 22657                           ; BSR set to: 1
 22658                           ;doprnt.c: 1261: if((long)val < 0) {
 22659  012B80  0101               	movlb	1	; () banked
 22660  012B82  AFAE               	btfss	(sprintf@val+3)& (0+255),7,b
 22661  012B84  D033               	goto	l12941
 22662                           
 22663                           ; BSR set to: 1
 22664                           ;doprnt.c: 1262: flag |= 0x03;
 22665  012B86  0E03               	movlw	3
 22666  012B88  0101               	movlb	1	; () banked
 22667  012B8A  13B4               	iorwf	sprintf@flag& (0+255),f,b
 22668                           
 22669                           ; BSR set to: 1
 22670                           ;doprnt.c: 1263: val = -val;
 22671  012B8C  0101               	movlb	1	; () banked
 22672  012B8E  1FAE               	comf	(sprintf@val+3)& (0+255),f,b
 22673  012B90  1FAD               	comf	(sprintf@val+2)& (0+255),f,b
 22674  012B92  1FAC               	comf	(sprintf@val+1)& (0+255),f,b
 22675  012B94  6DAB               	negf	sprintf@val& (0+255),b
 22676  012B96  0E00               	movlw	0
 22677  012B98  23AC               	addwfc	(sprintf@val+1)& (0+255),f,b
 22678  012B9A  23AD               	addwfc	(sprintf@val+2)& (0+255),f,b
 22679  012B9C  23AE               	addwfc	(sprintf@val+3)& (0+255),f,b
 22680                           
 22681                           ; BSR set to: 1
 22682                           ;doprnt.c: 1264: }
 22683                           ;doprnt.c: 1266: }
 22684  012B9E  D026               	goto	l12941
 22685  012BA0                     l1880:
 22686                           
 22687                           ; BSR set to: 1
 22688                           ;doprnt.c: 1268: else
 22689                           ;doprnt.c: 1273: {
 22690                           ;doprnt.c: 1281: if(flag & 0x10)
 22691  012BA0  0101               	movlb	1	; () banked
 22692  012BA2  A9B4               	btfss	sprintf@flag& (0+255),4,b
 22693  012BA4  D00E               	goto	l12937
 22694                           
 22695                           ; BSR set to: 1
 22696                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 22697  012BA6  C1A9  FFD9         	movff	sprintf@ap,fsr2l
 22698  012BAA  C1AA  FFDA         	movff	sprintf@ap+1,fsr2h
 22699  012BAE  CFDE F1AB          	movff	postinc2,sprintf@val
 22700  012BB2  CFDE F1AC          	movff	postinc2,sprintf@val+1
 22701  012BB6  CFDE F1AD          	movff	postinc2,sprintf@val+2
 22702  012BBA  CFDE F1AE          	movff	postinc2,sprintf@val+3
 22703                           
 22704                           ; BSR set to: 1
 22705  012BBE  0E04               	movlw	4
 22706  012BC0  D010               	goto	L18
 22707  012BC2                     l12937:
 22708                           
 22709                           ; BSR set to: 1
 22710                           ;doprnt.c: 1283: else
 22711                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 22712  012BC2  C1A9  FFD9         	movff	sprintf@ap,fsr2l
 22713  012BC6  C1AA  FFDA         	movff	sprintf@ap+1,fsr2h
 22714  012BCA  CFDE F19A          	movff	postinc2,??_sprintf
 22715  012BCE  CFDD F19B          	movff	postdec2,??_sprintf+1
 22716  012BD2  C19A  F1AB         	movff	??_sprintf,sprintf@val
 22717  012BD6  C19B  F1AC         	movff	??_sprintf+1,sprintf@val+1
 22718  012BDA  0101               	movlb	1	; () banked
 22719  012BDC  6BAD               	clrf	(sprintf@val+2)& (0+255),b
 22720  012BDE  6BAE               	clrf	(sprintf@val+3)& (0+255),b
 22721                           
 22722                           ; BSR set to: 1
 22723  012BE0  0E02               	movlw	2
 22724  012BE2                     L18:
 22725  012BE2  0101               	movlb	1	; () banked
 22726  012BE4  27A9               	addwf	sprintf@ap& (0+255),f,b
 22727  012BE6  0E00               	movlw	0
 22728  012BE8  23AA               	addwfc	(sprintf@ap+1)& (0+255),f,b
 22729                           
 22730                           ; BSR set to: 1
 22731  012BEA  D000               	goto	l12941
 22732  012BEC                     l12941:
 22733                           
 22734                           ; BSR set to: 1
 22735                           ;doprnt.c: 1287: }
 22736                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 22737  012BEC  0101               	movlb	1	; () banked
 22738  012BEE  51AF               	movf	sprintf@prec& (0+255),w,b
 22739  012BF0  0101               	movlb	1	; () banked
 22740  012BF2  11B0               	iorwf	(sprintf@prec+1)& (0+255),w,b
 22741  012BF4  A4D8               	btfss	status,2,c
 22742  012BF6  D099               	goto	l12991
 22743                           
 22744                           ; BSR set to: 1
 22745  012BF8  0101               	movlb	1	; () banked
 22746  012BFA  51AB               	movf	sprintf@val& (0+255),w,b
 22747  012BFC  0101               	movlb	1	; () banked
 22748  012BFE  11AC               	iorwf	(sprintf@val+1)& (0+255),w,b
 22749  012C00  0101               	movlb	1	; () banked
 22750  012C02  11AD               	iorwf	(sprintf@val+2)& (0+255),w,b
 22751  012C04  0101               	movlb	1	; () banked
 22752  012C06  11AE               	iorwf	(sprintf@val+3)& (0+255),w,b
 22753  012C08  A4D8               	btfss	status,2,c
 22754  012C0A  D08F               	goto	l12991
 22755                           
 22756                           ; BSR set to: 1
 22757                           ;doprnt.c: 1291: prec++;
 22758  012C0C  0101               	movlb	1	; () banked
 22759  012C0E  4BAF               	infsnz	sprintf@prec& (0+255),f,b
 22760  012C10  2BB0               	incf	(sprintf@prec+1)& (0+255),f,b
 22761                           
 22762                           ; BSR set to: 1
 22763                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 22764  012C12  D08B               	goto	l12991
 22765                           
 22766                           ; BSR set to: 1
 22767                           
 22768                           ;doprnt.c: 1299: case 0x00:
 22769  012C14  D000               	goto	l12947
 22770  012C16                     l12947:
 22771                           
 22772                           ; BSR set to: 1
 22773                           ;doprnt.c: 1302: case 0xC0:
 22774                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 22775  012C16  0E01               	movlw	1
 22776  012C18  0101               	movlb	1	; () banked
 22777  012C1A  6FB3               	movwf	sprintf@c& (0+255),b
 22778  012C1C                     l12949:
 22779                           
 22780                           ; BSR set to: 1
 22781  012C1C  0E0A               	movlw	10
 22782  012C1E  0101               	movlb	1	; () banked
 22783  012C20  19B3               	xorwf	sprintf@c& (0+255),w,b
 22784  012C22  B4D8               	btfsc	status,2,c
 22785  012C24  D092               	goto	l12993
 22786  012C26  D001               	goto	l12953
 22787                           
 22788                           ; BSR set to: 1
 22789  012C28  D090               	goto	l12993
 22790  012C2A                     l12953:
 22791                           
 22792                           ; BSR set to: 1
 22793                           ;doprnt.c: 1306: if(val < dpowers[c])
 22794  012C2A  0101               	movlb	1	; () banked
 22795  012C2C  51B3               	movf	sprintf@c& (0+255),w,b
 22796  012C2E  0D04               	mullw	4
 22797  012C30  0EF1               	movlw	low _dpowers
 22798  012C32  24F3               	addwf	prodl,w,c
 22799  012C34  6EF6               	movwf	tblptrl,c
 22800  012C36  0EEC               	movlw	high _dpowers
 22801  012C38  20F4               	addwfc	prodh,w,c
 22802  012C3A  6EF7               	movwf	tblptrh,c
 22803  012C3C                     	if	1	;There are 3 active tblptr bytes
 22804  012C3C  6AF8               	clrf	tblptru,c
 22805  012C3E  0E00               	movlw	low (__mediumconst shr (0+16))
 22806  012C40  22F8               	addwfc	tblptru,f,c
 22807  012C42                     	endif
 22808  012C42  0009               	tblrd		*+
 22809  012C44  50F5               	movf	tablat,w,c
 22810  012C46  0101               	movlb	1	; () banked
 22811  012C48  5DAB               	subwf	sprintf@val& (0+255),w,b
 22812  012C4A  0009               	tblrd		*+
 22813  012C4C  50F5               	movf	tablat,w,c
 22814  012C4E  0101               	movlb	1	; () banked
 22815  012C50  59AC               	subwfb	(sprintf@val+1)& (0+255),w,b
 22816  012C52  0009               	tblrd		*+
 22817  012C54  50F5               	movf	tablat,w,c
 22818  012C56  0101               	movlb	1	; () banked
 22819  012C58  59AD               	subwfb	(sprintf@val+2)& (0+255),w,b
 22820  012C5A  0009               	tblrd		*+
 22821  012C5C  50F5               	movf	tablat,w,c
 22822  012C5E  0101               	movlb	1	; () banked
 22823  012C60  59AE               	subwfb	(sprintf@val+3)& (0+255),w,b
 22824  012C62  A0D8               	btfss	status,0,c
 22825  012C64  D072               	goto	l12993
 22826  012C66  D001               	goto	l12957
 22827                           
 22828                           ; BSR set to: 1
 22829                           ;doprnt.c: 1307: break;
 22830  012C68  D070               	goto	l12993
 22831  012C6A                     l12957:
 22832                           
 22833                           ; BSR set to: 1
 22834  012C6A  0101               	movlb	1	; () banked
 22835  012C6C  2BB3               	incf	sprintf@c& (0+255),f,b
 22836  012C6E  D7D6               	goto	l12949
 22837                           
 22838                           ; BSR set to: 1
 22839                           ;doprnt.c: 1309: break;
 22840                           
 22841                           ; BSR set to: 1
 22842  012C70  D06C               	goto	l12993
 22843  012C72                     l12961:
 22844                           
 22845                           ; BSR set to: 1
 22846                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 22847  012C72  0E01               	movlw	1
 22848  012C74  0101               	movlb	1	; () banked
 22849  012C76  6FB3               	movwf	sprintf@c& (0+255),b
 22850  012C78                     l12963:
 22851                           
 22852                           ; BSR set to: 1
 22853  012C78  0E08               	movlw	8
 22854  012C7A  0101               	movlb	1	; () banked
 22855  012C7C  19B3               	xorwf	sprintf@c& (0+255),w,b
 22856  012C7E  B4D8               	btfsc	status,2,c
 22857  012C80  D064               	goto	l12993
 22858  012C82  D001               	goto	l12967
 22859                           
 22860                           ; BSR set to: 1
 22861  012C84  D062               	goto	l12993
 22862  012C86                     l12967:
 22863                           
 22864                           ; BSR set to: 1
 22865                           ;doprnt.c: 1317: if(val < hexpowers[c])
 22866  012C86  0101               	movlb	1	; () banked
 22867  012C88  51B3               	movf	sprintf@c& (0+255),w,b
 22868  012C8A  0D04               	mullw	4
 22869  012C8C  0E19               	movlw	low _hexpowers
 22870  012C8E  24F3               	addwf	prodl,w,c
 22871  012C90  6EF6               	movwf	tblptrl,c
 22872  012C92  0EED               	movlw	high _hexpowers
 22873  012C94  20F4               	addwfc	prodh,w,c
 22874  012C96  6EF7               	movwf	tblptrh,c
 22875  012C98                     	if	1	;There are 3 active tblptr bytes
 22876  012C98  6AF8               	clrf	tblptru,c
 22877  012C9A  0E00               	movlw	low (__mediumconst shr (0+16))
 22878  012C9C  22F8               	addwfc	tblptru,f,c
 22879  012C9E                     	endif
 22880  012C9E  0009               	tblrd		*+
 22881  012CA0  50F5               	movf	tablat,w,c
 22882  012CA2  0101               	movlb	1	; () banked
 22883  012CA4  5DAB               	subwf	sprintf@val& (0+255),w,b
 22884  012CA6  0009               	tblrd		*+
 22885  012CA8  50F5               	movf	tablat,w,c
 22886  012CAA  0101               	movlb	1	; () banked
 22887  012CAC  59AC               	subwfb	(sprintf@val+1)& (0+255),w,b
 22888  012CAE  0009               	tblrd		*+
 22889  012CB0  50F5               	movf	tablat,w,c
 22890  012CB2  0101               	movlb	1	; () banked
 22891  012CB4  59AD               	subwfb	(sprintf@val+2)& (0+255),w,b
 22892  012CB6  0009               	tblrd		*+
 22893  012CB8  50F5               	movf	tablat,w,c
 22894  012CBA  0101               	movlb	1	; () banked
 22895  012CBC  59AE               	subwfb	(sprintf@val+3)& (0+255),w,b
 22896  012CBE  A0D8               	btfss	status,0,c
 22897  012CC0  D044               	goto	l12993
 22898  012CC2  D001               	goto	l12971
 22899                           
 22900                           ; BSR set to: 1
 22901                           ;doprnt.c: 1318: break;
 22902  012CC4  D042               	goto	l12993
 22903  012CC6                     l12971:
 22904                           
 22905                           ; BSR set to: 1
 22906  012CC6  0101               	movlb	1	; () banked
 22907  012CC8  2BB3               	incf	sprintf@c& (0+255),f,b
 22908  012CCA  D7D6               	goto	l12963
 22909                           
 22910                           ; BSR set to: 1
 22911                           ;doprnt.c: 1320: break;
 22912                           
 22913                           ; BSR set to: 1
 22914  012CCC  D03E               	goto	l12993
 22915  012CCE                     l12975:
 22916                           
 22917                           ; BSR set to: 1
 22918                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 22919  012CCE  0E01               	movlw	1
 22920  012CD0  0101               	movlb	1	; () banked
 22921  012CD2  6FB3               	movwf	sprintf@c& (0+255),b
 22922  012CD4                     l12977:
 22923                           
 22924                           ; BSR set to: 1
 22925  012CD4  0E0C               	movlw	12
 22926  012CD6  0101               	movlb	1	; () banked
 22927  012CD8  19B3               	xorwf	sprintf@c& (0+255),w,b
 22928  012CDA  B4D8               	btfsc	status,2,c
 22929  012CDC  D036               	goto	l12993
 22930  012CDE  D001               	goto	l12981
 22931                           
 22932                           ; BSR set to: 1
 22933  012CE0  D034               	goto	l12993
 22934  012CE2                     l12981:
 22935                           
 22936                           ; BSR set to: 1
 22937                           ;doprnt.c: 1329: if(val < octpowers[c])
 22938  012CE2  0101               	movlb	1	; () banked
 22939  012CE4  51B3               	movf	sprintf@c& (0+255),w,b
 22940  012CE6  0D04               	mullw	4
 22941  012CE8  0EC1               	movlw	low _octpowers
 22942  012CEA  24F3               	addwf	prodl,w,c
 22943  012CEC  6EF6               	movwf	tblptrl,c
 22944  012CEE  0EEC               	movlw	high _octpowers
 22945  012CF0  20F4               	addwfc	prodh,w,c
 22946  012CF2  6EF7               	movwf	tblptrh,c
 22947  012CF4                     	if	1	;There are 3 active tblptr bytes
 22948  012CF4  6AF8               	clrf	tblptru,c
 22949  012CF6  0E00               	movlw	low (__mediumconst shr (0+16))
 22950  012CF8  22F8               	addwfc	tblptru,f,c
 22951  012CFA                     	endif
 22952  012CFA  0009               	tblrd		*+
 22953  012CFC  50F5               	movf	tablat,w,c
 22954  012CFE  0101               	movlb	1	; () banked
 22955  012D00  5DAB               	subwf	sprintf@val& (0+255),w,b
 22956  012D02  0009               	tblrd		*+
 22957  012D04  50F5               	movf	tablat,w,c
 22958  012D06  0101               	movlb	1	; () banked
 22959  012D08  59AC               	subwfb	(sprintf@val+1)& (0+255),w,b
 22960  012D0A  0009               	tblrd		*+
 22961  012D0C  50F5               	movf	tablat,w,c
 22962  012D0E  0101               	movlb	1	; () banked
 22963  012D10  59AD               	subwfb	(sprintf@val+2)& (0+255),w,b
 22964  012D12  0009               	tblrd		*+
 22965  012D14  50F5               	movf	tablat,w,c
 22966  012D16  0101               	movlb	1	; () banked
 22967  012D18  59AE               	subwfb	(sprintf@val+3)& (0+255),w,b
 22968  012D1A  A0D8               	btfss	status,0,c
 22969  012D1C  D016               	goto	l12993
 22970  012D1E  D001               	goto	l12985
 22971                           
 22972                           ; BSR set to: 1
 22973                           ;doprnt.c: 1330: break;
 22974  012D20  D014               	goto	l12993
 22975  012D22                     l12985:
 22976                           
 22977                           ; BSR set to: 1
 22978  012D22  0101               	movlb	1	; () banked
 22979  012D24  2BB3               	incf	sprintf@c& (0+255),f,b
 22980  012D26  D7D6               	goto	l12977
 22981                           
 22982                           ; BSR set to: 1
 22983                           ;doprnt.c: 1336: }
 22984                           
 22985                           ; BSR set to: 1
 22986                           ;doprnt.c: 1332: break;
 22987                           
 22988                           ; BSR set to: 1
 22989  012D28  D010               	goto	l12993
 22990  012D2A                     l12991:
 22991                           
 22992                           ; BSR set to: 1
 22993  012D2A  0101               	movlb	1	; () banked
 22994  012D2C  51B4               	movf	sprintf@flag& (0+255),w,b
 22995  012D2E  0BC0               	andlw	192
 22996                           
 22997                           ; Switch size 1, requested type "space"
 22998                           ; Number of cases is 4, Range of values is 0 to 192
 22999                           ; switch strategies available:
 23000                           ; Name         Instructions Cycles
 23001                           ; simple_byte           13     7 (average)
 23002                           ;	Chosen strategy is simple_byte
 23003  012D30  0A00               	xorlw	0	; case 0
 23004  012D32  B4D8               	btfsc	status,2,c
 23005  012D34  D770               	goto	l12947
 23006  012D36  0A40               	xorlw	64	; case 64
 23007  012D38  B4D8               	btfsc	status,2,c
 23008  012D3A  D7C9               	goto	l12975
 23009  012D3C  0AC0               	xorlw	192	; case 128
 23010  012D3E  B4D8               	btfsc	status,2,c
 23011  012D40  D798               	goto	l12961
 23012  012D42  0A40               	xorlw	64	; case 192
 23013  012D44  B4D8               	btfsc	status,2,c
 23014  012D46  D767               	goto	l12947
 23015  012D48  D000               	goto	l12993
 23016  012D4A                     l12993:
 23017                           
 23018                           ; BSR set to: 1
 23019                           ;doprnt.c: 1339: if(c < prec)
 23020  012D4A  0E80               	movlw	128
 23021  012D4C  0101               	movlb	1	; () banked
 23022  012D4E  BFB3               	btfsc	sprintf@c& (0+255),7,b
 23023  012D50  0E7F               	movlw	127
 23024  012D52  0101               	movlb	1	; () banked
 23025  012D54  6F9A               	movwf	??_sprintf& (0+255),b
 23026  012D56  0101               	movlb	1	; () banked
 23027  012D58  51AF               	movf	sprintf@prec& (0+255),w,b
 23028  012D5A  0101               	movlb	1	; () banked
 23029  012D5C  5DB3               	subwf	sprintf@c& (0+255),w,b
 23030  012D5E  0101               	movlb	1	; () banked
 23031  012D60  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
 23032  012D62  0A80               	xorlw	128
 23033  012D64  0101               	movlb	1	; () banked
 23034  012D66  599A               	subwfb	??_sprintf& (0+255),w,b
 23035  012D68  B0D8               	btfsc	status,0,c
 23036  012D6A  D003               	goto	l12997
 23037                           
 23038                           ; BSR set to: 1
 23039                           ;doprnt.c: 1340: c = prec;
 23040  012D6C  C1AF  F1B3         	movff	sprintf@prec,sprintf@c
 23041  012D70  D019               	goto	l13001
 23042  012D72                     l12997:
 23043                           
 23044                           ; BSR set to: 1
 23045                           ;doprnt.c: 1341: else if(prec < c)
 23046  012D72  0101               	movlb	1	; () banked
 23047  012D74  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
 23048  012D76  0A80               	xorlw	128
 23049  012D78  0101               	movlb	1	; () banked
 23050  012D7A  6F9A               	movwf	??_sprintf& (0+255),b
 23051  012D7C  0101               	movlb	1	; () banked
 23052  012D7E  51B3               	movf	sprintf@c& (0+255),w,b
 23053  012D80  0101               	movlb	1	; () banked
 23054  012D82  5DAF               	subwf	sprintf@prec& (0+255),w,b
 23055  012D84  0E80               	movlw	128
 23056  012D86  0101               	movlb	1	; () banked
 23057  012D88  BFB3               	btfsc	sprintf@c& (0+255),7,b
 23058  012D8A  0E7F               	movlw	127
 23059  012D8C  0101               	movlb	1	; () banked
 23060  012D8E  599A               	subwfb	??_sprintf& (0+255),w,b
 23061  012D90  B0D8               	btfsc	status,0,c
 23062  012D92  D008               	goto	l13001
 23063                           
 23064                           ; BSR set to: 1
 23065                           ;doprnt.c: 1342: prec = c;
 23066  012D94  0101               	movlb	1	; () banked
 23067  012D96  51B3               	movf	sprintf@c& (0+255),w,b
 23068  012D98  0101               	movlb	1	; () banked
 23069  012D9A  6FAF               	movwf	sprintf@prec& (0+255),b
 23070  012D9C  6BB0               	clrf	(sprintf@prec+1)& (0+255),b
 23071  012D9E  BFAF               	btfsc	sprintf@prec& (0+255),7,b
 23072  012DA0  07B0               	decf	(sprintf@prec+1)& (0+255),f,b
 23073                           
 23074                           ; BSR set to: 1
 23075  012DA2  D000               	goto	l13001
 23076  012DA4                     l13001:
 23077                           
 23078                           ; BSR set to: 1
 23079                           ;doprnt.c: 1345: if(width && flag & 0x03)
 23080  012DA4  0101               	movlb	1	; () banked
 23081  012DA6  51B1               	movf	sprintf@width& (0+255),w,b
 23082  012DA8  0101               	movlb	1	; () banked
 23083  012DAA  11B2               	iorwf	(sprintf@width+1)& (0+255),w,b
 23084  012DAC  B4D8               	btfsc	status,2,c
 23085  012DAE  D015               	goto	l13007
 23086                           
 23087                           ; BSR set to: 1
 23088  012DB0  0E03               	movlw	3
 23089  012DB2  0101               	movlb	1	; () banked
 23090  012DB4  15B4               	andwf	sprintf@flag& (0+255),w,b
 23091  012DB6  0101               	movlb	1	; () banked
 23092  012DB8  6F9A               	movwf	??_sprintf& (0+255),b
 23093  012DBA  0E00               	movlw	0
 23094  012DBC  0101               	movlb	1	; () banked
 23095  012DBE  15B5               	andwf	(sprintf@flag+1)& (0+255),w,b
 23096  012DC0  0101               	movlb	1	; () banked
 23097  012DC2  6F9B               	movwf	(??_sprintf+1)& (0+255),b
 23098  012DC4  0101               	movlb	1	; () banked
 23099  012DC6  519A               	movf	??_sprintf& (0+255),w,b
 23100  012DC8  0101               	movlb	1	; () banked
 23101  012DCA  119B               	iorwf	(??_sprintf+1)& (0+255),w,b
 23102  012DCC  B4D8               	btfsc	status,2,c
 23103  012DCE  D005               	goto	l13007
 23104                           
 23105                           ; BSR set to: 1
 23106                           ;doprnt.c: 1346: width--;
 23107  012DD0  0101               	movlb	1	; () banked
 23108  012DD2  07B1               	decf	sprintf@width& (0+255),f,b
 23109  012DD4  A0D8               	btfss	status,0,c
 23110  012DD6  07B2               	decf	(sprintf@width+1)& (0+255),f,b
 23111  012DD8  D000               	goto	l13007
 23112  012DDA                     l13007:
 23113                           
 23114                           ; BSR set to: 1
 23115                           ;doprnt.c: 1348: if(flag & 0x4000) {
 23116  012DDA  0101               	movlb	1	; () banked
 23117  012DDC  ADB5               	btfss	(sprintf@flag+1)& (0+255),6,b
 23118  012DDE  D01F               	goto	l13015
 23119                           
 23120                           ; BSR set to: 1
 23121                           ;doprnt.c: 1349: if(width > prec)
 23122  012DE0  0101               	movlb	1	; () banked
 23123  012DE2  51B1               	movf	sprintf@width& (0+255),w,b
 23124  012DE4  0101               	movlb	1	; () banked
 23125  012DE6  5DAF               	subwf	sprintf@prec& (0+255),w,b
 23126  012DE8  0101               	movlb	1	; () banked
 23127  012DEA  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
 23128  012DEC  0A80               	xorlw	128
 23129  012DEE  0101               	movlb	1	; () banked
 23130  012DF0  6F9A               	movwf	??_sprintf& (0+255),b
 23131  012DF2  0101               	movlb	1	; () banked
 23132  012DF4  51B2               	movf	(sprintf@width+1)& (0+255),w,b
 23133  012DF6  0A80               	xorlw	128
 23134  012DF8  0101               	movlb	1	; () banked
 23135  012DFA  599A               	subwfb	??_sprintf& (0+255),w,b
 23136  012DFC  B0D8               	btfsc	status,0,c
 23137  012DFE  D009               	goto	l13013
 23138                           
 23139                           ; BSR set to: 1
 23140                           ;doprnt.c: 1350: width -= prec;
 23141  012E00  0101               	movlb	1	; () banked
 23142  012E02  51AF               	movf	sprintf@prec& (0+255),w,b
 23143  012E04  0101               	movlb	1	; () banked
 23144  012E06  5FB1               	subwf	sprintf@width& (0+255),f,b
 23145  012E08  0101               	movlb	1	; () banked
 23146  012E0A  51B0               	movf	(sprintf@prec+1)& (0+255),w,b
 23147  012E0C  0101               	movlb	1	; () banked
 23148  012E0E  5BB2               	subwfb	(sprintf@width+1)& (0+255),f,b
 23149  012E10  D006               	goto	l13015
 23150  012E12                     l13013:
 23151                           
 23152                           ; BSR set to: 1
 23153                           ;doprnt.c: 1351: else
 23154                           ;doprnt.c: 1352: width = 0;
 23155  012E12  0E00               	movlw	0
 23156  012E14  0101               	movlb	1	; () banked
 23157  012E16  6FB2               	movwf	(sprintf@width+1)& (0+255),b
 23158  012E18  0E00               	movlw	0
 23159  012E1A  6FB1               	movwf	sprintf@width& (0+255),b
 23160                           
 23161                           ; BSR set to: 1
 23162  012E1C  D000               	goto	l13015
 23163  012E1E                     l13015:
 23164                           
 23165                           ; BSR set to: 1
 23166                           ;doprnt.c: 1353: }
 23167                           ;doprnt.c: 1357: if((flag & (
 23168                           ;doprnt.c: 1359: 0x04|
 23169                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 23170  012E1E  0EC4               	movlw	196
 23171  012E20  0101               	movlb	1	; () banked
 23172  012E22  6F9A               	movwf	??_sprintf& (0+255),b
 23173  012E24  0E08               	movlw	8
 23174  012E26  0101               	movlb	1	; () banked
 23175  012E28  6F9B               	movwf	(??_sprintf+1)& (0+255),b
 23176  012E2A  C1B4  F19C         	movff	sprintf@flag,??_sprintf+2
 23177  012E2E  C1B5  F19D         	movff	sprintf@flag+1,??_sprintf+3
 23178  012E32  0101               	movlb	1	; () banked
 23179  012E34  519A               	movf	??_sprintf& (0+255),w,b
 23180  012E36  0101               	movlb	1	; () banked
 23181  012E38  179C               	andwf	(??_sprintf+2)& (0+255),f,b
 23182  012E3A  0101               	movlb	1	; () banked
 23183  012E3C  519B               	movf	(??_sprintf+1)& (0+255),w,b
 23184  012E3E  0101               	movlb	1	; () banked
 23185  012E40  179D               	andwf	(??_sprintf+3)& (0+255),f,b
 23186  012E42  0E40               	movlw	64
 23187  012E44  0101               	movlb	1	; () banked
 23188  012E46  199C               	xorwf	(??_sprintf+2)& (0+255),w,b
 23189  012E48  E110               	bnz	l13021
 23190  012E4A  0E08               	movlw	8
 23191  012E4C  0101               	movlb	1	; () banked
 23192  012E4E  199D               	xorwf	(??_sprintf+3)& (0+255),w,b
 23193  012E50  A4D8               	btfss	status,2,c
 23194  012E52  D00B               	goto	l13021
 23195                           
 23196                           ; BSR set to: 1
 23197                           ;doprnt.c: 1362: if(width)
 23198  012E54  0101               	movlb	1	; () banked
 23199  012E56  51B1               	movf	sprintf@width& (0+255),w,b
 23200  012E58  0101               	movlb	1	; () banked
 23201  012E5A  11B2               	iorwf	(sprintf@width+1)& (0+255),w,b
 23202  012E5C  B4D8               	btfsc	status,2,c
 23203  012E5E  D037               	goto	l13029
 23204                           
 23205                           ; BSR set to: 1
 23206                           ;doprnt.c: 1363: width--;
 23207  012E60  0101               	movlb	1	; () banked
 23208  012E62  07B1               	decf	sprintf@width& (0+255),f,b
 23209  012E64  A0D8               	btfss	status,0,c
 23210  012E66  07B2               	decf	(sprintf@width+1)& (0+255),f,b
 23211                           
 23212                           ; BSR set to: 1
 23213                           ;doprnt.c: 1364: } else
 23214  012E68  D032               	goto	l13029
 23215  012E6A                     l13021:
 23216                           
 23217                           ; BSR set to: 1
 23218                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 23219  012E6A  0EC0               	movlw	192
 23220  012E6C  0101               	movlb	1	; () banked
 23221  012E6E  6F9A               	movwf	??_sprintf& (0+255),b
 23222  012E70  0E08               	movlw	8
 23223  012E72  0101               	movlb	1	; () banked
 23224  012E74  6F9B               	movwf	(??_sprintf+1)& (0+255),b
 23225  012E76  C1B4  F19C         	movff	sprintf@flag,??_sprintf+2
 23226  012E7A  C1B5  F19D         	movff	sprintf@flag+1,??_sprintf+3
 23227  012E7E  0101               	movlb	1	; () banked
 23228  012E80  519A               	movf	??_sprintf& (0+255),w,b
 23229  012E82  0101               	movlb	1	; () banked
 23230  012E84  179C               	andwf	(??_sprintf+2)& (0+255),f,b
 23231  012E86  0101               	movlb	1	; () banked
 23232  012E88  519B               	movf	(??_sprintf+1)& (0+255),w,b
 23233  012E8A  0101               	movlb	1	; () banked
 23234  012E8C  179D               	andwf	(??_sprintf+3)& (0+255),f,b
 23235  012E8E  0E80               	movlw	128
 23236  012E90  0101               	movlb	1	; () banked
 23237  012E92  199C               	xorwf	(??_sprintf+2)& (0+255),w,b
 23238  012E94  E11C               	bnz	l13029
 23239  012E96  0E08               	movlw	8
 23240  012E98  0101               	movlb	1	; () banked
 23241  012E9A  199D               	xorwf	(??_sprintf+3)& (0+255),w,b
 23242  012E9C  A4D8               	btfss	status,2,c
 23243  012E9E  D017               	goto	l13029
 23244                           
 23245                           ; BSR set to: 1
 23246                           ;doprnt.c: 1372: if(width > 2)
 23247  012EA0  0101               	movlb	1	; () banked
 23248  012EA2  BFB2               	btfsc	(sprintf@width+1)& (0+255),7,b
 23249  012EA4  D00E               	goto	l13027
 23250  012EA6  0101               	movlb	1	; () banked
 23251  012EA8  51B2               	movf	(sprintf@width+1)& (0+255),w,b
 23252  012EAA  E105               	bnz	u16150
 23253  012EAC  0E03               	movlw	3
 23254  012EAE  0101               	movlb	1	; () banked
 23255  012EB0  5DB1               	subwf	sprintf@width& (0+255),w,b
 23256  012EB2  A0D8               	btfss	status,0,c
 23257  012EB4  D006               	goto	l13027
 23258  012EB6                     u16150:
 23259                           
 23260                           ; BSR set to: 1
 23261                           ;doprnt.c: 1373: width -= 2;
 23262  012EB6  0101               	movlb	1	; () banked
 23263  012EB8  0EFE               	movlw	254
 23264  012EBA  27B1               	addwf	sprintf@width& (0+255),f,b
 23265  012EBC  0EFF               	movlw	255
 23266  012EBE  23B2               	addwfc	(sprintf@width+1)& (0+255),f,b
 23267  012EC0  D006               	goto	l13029
 23268  012EC2                     l13027:
 23269                           
 23270                           ; BSR set to: 1
 23271                           ;doprnt.c: 1374: else
 23272                           ;doprnt.c: 1375: width = 0;
 23273  012EC2  0E00               	movlw	0
 23274  012EC4  0101               	movlb	1	; () banked
 23275  012EC6  6FB2               	movwf	(sprintf@width+1)& (0+255),b
 23276  012EC8  0E00               	movlw	0
 23277  012ECA  6FB1               	movwf	sprintf@width& (0+255),b
 23278                           
 23279                           ; BSR set to: 1
 23280                           
 23281                           ; BSR set to: 1
 23282  012ECC  D000               	goto	l13029
 23283  012ECE                     l13029:
 23284                           
 23285                           ; BSR set to: 1
 23286                           ;doprnt.c: 1376: }
 23287                           ;doprnt.c: 1381: if(width > c)
 23288  012ECE  0E80               	movlw	128
 23289  012ED0  0101               	movlb	1	; () banked
 23290  012ED2  BFB3               	btfsc	sprintf@c& (0+255),7,b
 23291  012ED4  0E7F               	movlw	127
 23292  012ED6  0101               	movlb	1	; () banked
 23293  012ED8  6F9A               	movwf	??_sprintf& (0+255),b
 23294  012EDA  0101               	movlb	1	; () banked
 23295  012EDC  51B1               	movf	sprintf@width& (0+255),w,b
 23296  012EDE  0101               	movlb	1	; () banked
 23297  012EE0  5DB3               	subwf	sprintf@c& (0+255),w,b
 23298  012EE2  0101               	movlb	1	; () banked
 23299  012EE4  51B2               	movf	(sprintf@width+1)& (0+255),w,b
 23300  012EE6  0A80               	xorlw	128
 23301  012EE8  0101               	movlb	1	; () banked
 23302  012EEA  599A               	subwfb	??_sprintf& (0+255),w,b
 23303  012EEC  B0D8               	btfsc	status,0,c
 23304  012EEE  D00B               	goto	l13033
 23305                           
 23306                           ; BSR set to: 1
 23307                           ;doprnt.c: 1382: width -= c;
 23308  012EF0  0101               	movlb	1	; () banked
 23309  012EF2  51B3               	movf	sprintf@c& (0+255),w,b
 23310  012EF4  0101               	movlb	1	; () banked
 23311  012EF6  5FB1               	subwf	sprintf@width& (0+255),f,b
 23312  012EF8  0E00               	movlw	0
 23313  012EFA  0101               	movlb	1	; () banked
 23314  012EFC  BFB3               	btfsc	sprintf@c& (0+255),7,b
 23315  012EFE  0EFF               	movlw	255
 23316  012F00  0101               	movlb	1	; () banked
 23317  012F02  5BB2               	subwfb	(sprintf@width+1)& (0+255),f,b
 23318  012F04  D006               	goto	l13035
 23319  012F06                     l13033:
 23320                           
 23321                           ; BSR set to: 1
 23322                           ;doprnt.c: 1383: else
 23323                           ;doprnt.c: 1384: width = 0;
 23324  012F06  0E00               	movlw	0
 23325  012F08  0101               	movlb	1	; () banked
 23326  012F0A  6FB2               	movwf	(sprintf@width+1)& (0+255),b
 23327  012F0C  0E00               	movlw	0
 23328  012F0E  6FB1               	movwf	sprintf@width& (0+255),b
 23329  012F10  D000               	goto	l13035
 23330  012F12                     l13035:
 23331                           
 23332                           ; BSR set to: 1
 23333                           ;doprnt.c: 1387: if(flag & 0x04) {
 23334  012F12  0101               	movlb	1	; () banked
 23335  012F14  A5B4               	btfss	sprintf@flag& (0+255),2,b
 23336  012F16  D079               	goto	l13071
 23337                           
 23338                           ; BSR set to: 1
 23339                           ;doprnt.c: 1392: if(flag & 0x03)
 23340  012F18  0E03               	movlw	3
 23341  012F1A  0101               	movlb	1	; () banked
 23342  012F1C  15B4               	andwf	sprintf@flag& (0+255),w,b
 23343  012F1E  0101               	movlb	1	; () banked
 23344  012F20  6F9A               	movwf	??_sprintf& (0+255),b
 23345  012F22  0E00               	movlw	0
 23346  012F24  0101               	movlb	1	; () banked
 23347  012F26  15B5               	andwf	(sprintf@flag+1)& (0+255),w,b
 23348  012F28  0101               	movlb	1	; () banked
 23349  012F2A  6F9B               	movwf	(??_sprintf+1)& (0+255),b
 23350  012F2C  0101               	movlb	1	; () banked
 23351  012F2E  519A               	movf	??_sprintf& (0+255),w,b
 23352  012F30  0101               	movlb	1	; () banked
 23353  012F32  119B               	iorwf	(??_sprintf+1)& (0+255),w,b
 23354  012F34  B4D8               	btfsc	status,2,c
 23355  012F36  D00A               	goto	l1919
 23356                           
 23357                           ; BSR set to: 1
 23358                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 23359  012F38  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23360  012F3C  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23361  012F40  0E2D               	movlw	45
 23362  012F42  D00C               	goto	L19
 23363  012F44                     l13041:
 23364                           
 23365                           ; BSR set to: 1
 23366  012F44  0101               	movlb	1	; () banked
 23367  012F46  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 23368  012F48  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 23369  012F4A  D044               	goto	l13063
 23370  012F4C                     l1919:
 23371                           
 23372                           ; BSR set to: 1
 23373                           ;doprnt.c: 1396: else
 23374                           ;doprnt.c: 1399: if(flag & 0x01)
 23375  012F4C  0101               	movlb	1	; () banked
 23376  012F4E  A1B4               	btfss	sprintf@flag& (0+255),0,b
 23377  012F50  D007               	goto	l13047
 23378                           
 23379                           ; BSR set to: 1
 23380                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 23381  012F52  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23382  012F56  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23383  012F5A  0E20               	movlw	32
 23384  012F5C                     L19:
 23385  012F5C  6EDF               	movwf	indf2,c
 23386  012F5E  D7F2               	goto	l13041
 23387  012F60                     l13047:
 23388                           
 23389                           ; BSR set to: 1
 23390                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 23391  012F60  0EC0               	movlw	192
 23392  012F62  0101               	movlb	1	; () banked
 23393  012F64  6F9A               	movwf	??_sprintf& (0+255),b
 23394  012F66  0E08               	movlw	8
 23395  012F68  0101               	movlb	1	; () banked
 23396  012F6A  6F9B               	movwf	(??_sprintf+1)& (0+255),b
 23397  012F6C  C1B4  F19C         	movff	sprintf@flag,??_sprintf+2
 23398  012F70  C1B5  F19D         	movff	sprintf@flag+1,??_sprintf+3
 23399  012F74  0101               	movlb	1	; () banked
 23400  012F76  519A               	movf	??_sprintf& (0+255),w,b
 23401  012F78  0101               	movlb	1	; () banked
 23402  012F7A  179C               	andwf	(??_sprintf+2)& (0+255),f,b
 23403  012F7C  0101               	movlb	1	; () banked
 23404  012F7E  519B               	movf	(??_sprintf+1)& (0+255),w,b
 23405  012F80  0101               	movlb	1	; () banked
 23406  012F82  179D               	andwf	(??_sprintf+3)& (0+255),f,b
 23407  012F84  0E80               	movlw	128
 23408  012F86  0101               	movlb	1	; () banked
 23409  012F88  199C               	xorwf	(??_sprintf+2)& (0+255),w,b
 23410  012F8A  E124               	bnz	l13063
 23411  012F8C  0E08               	movlw	8
 23412  012F8E  0101               	movlb	1	; () banked
 23413  012F90  199D               	xorwf	(??_sprintf+3)& (0+255),w,b
 23414  012F92  A4D8               	btfss	status,2,c
 23415  012F94  D01F               	goto	l13063
 23416                           
 23417                           ; BSR set to: 1
 23418                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 23419  012F96  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23420  012F9A  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23421  012F9E  0E30               	movlw	48
 23422  012FA0  6EDF               	movwf	indf2,c
 23423                           
 23424                           ; BSR set to: 1
 23425  012FA2  0101               	movlb	1	; () banked
 23426  012FA4  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 23427  012FA6  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 23428                           
 23429                           ; BSR set to: 1
 23430                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 23431  012FA8  0101               	movlb	1	; () banked
 23432  012FAA  BBB4               	btfsc	sprintf@flag& (0+255),5,b
 23433  012FAC  D005               	goto	l13057
 23434                           
 23435                           ; BSR set to: 1
 23436  012FAE  0E00               	movlw	0
 23437  012FB0  0101               	movlb	1	; () banked
 23438  012FB2  6FA2               	movwf	(_sprintf$3076+1)& (0+255),b
 23439  012FB4  0E78               	movlw	120
 23440  012FB6  D004               	goto	L20
 23441  012FB8                     l13057:
 23442                           
 23443                           ; BSR set to: 1
 23444  012FB8  0E00               	movlw	0
 23445  012FBA  0101               	movlb	1	; () banked
 23446  012FBC  6FA2               	movwf	(_sprintf$3076+1)& (0+255),b
 23447  012FBE  0E58               	movlw	88
 23448  012FC0                     L20:
 23449  012FC0  6FA1               	movwf	_sprintf$3076& (0+255),b
 23450  012FC2  D000               	goto	l13059
 23451  012FC4                     l13059:
 23452                           
 23453                           ; BSR set to: 1
 23454  012FC4  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23455  012FC8  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23456  012FCC  C1A1  FFDF         	movff	_sprintf$3076,indf2
 23457  012FD0  D7B9               	goto	l13041
 23458                           
 23459                           ; BSR set to: 1
 23460                           
 23461                           ; BSR set to: 1
 23462                           
 23463                           ; BSR set to: 1
 23464  012FD2  D000               	goto	l13063
 23465  012FD4                     l13063:
 23466                           
 23467                           ; BSR set to: 1
 23468                           ;doprnt.c: 1412: }
 23469                           ;doprnt.c: 1415: if(width)
 23470  012FD4  0101               	movlb	1	; () banked
 23471  012FD6  51B1               	movf	sprintf@width& (0+255),w,b
 23472  012FD8  0101               	movlb	1	; () banked
 23473  012FDA  11B2               	iorwf	(sprintf@width+1)& (0+255),w,b
 23474  012FDC  B4D8               	btfsc	status,2,c
 23475  012FDE  D19C               	goto	l13135
 23476  012FE0                     l13065:
 23477                           
 23478                           ; BSR set to: 1
 23479                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 23480  012FE0  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23481  012FE4  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23482  012FE8  0E30               	movlw	48
 23483  012FEA  6EDF               	movwf	indf2,c
 23484                           
 23485                           ; BSR set to: 1
 23486  012FEC  0101               	movlb	1	; () banked
 23487  012FEE  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 23488  012FF0  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 23489                           
 23490                           ; BSR set to: 1
 23491                           ;doprnt.c: 1418: while(--width);
 23492  012FF2  0101               	movlb	1	; () banked
 23493  012FF4  07B1               	decf	sprintf@width& (0+255),f,b
 23494  012FF6  A0D8               	btfss	status,0,c
 23495  012FF8  07B2               	decf	(sprintf@width+1)& (0+255),f,b
 23496  012FFA  0101               	movlb	1	; () banked
 23497  012FFC  51B1               	movf	sprintf@width& (0+255),w,b
 23498  012FFE  0101               	movlb	1	; () banked
 23499  013000  11B2               	iorwf	(sprintf@width+1)& (0+255),w,b
 23500  013002  B4D8               	btfsc	status,2,c
 23501  013004  D189               	goto	l13135
 23502  013006  D7EC               	goto	l13065
 23503                           
 23504                           ; BSR set to: 1
 23505                           ;doprnt.c: 1420: } else
 23506                           
 23507                           ; BSR set to: 1
 23508  013008  D187               	goto	l13135
 23509  01300A                     l13071:
 23510                           
 23511                           ; BSR set to: 1
 23512                           ;doprnt.c: 1422: {
 23513                           ;doprnt.c: 1424: if(width
 23514                           ;doprnt.c: 1426: && !(flag & 0x08)
 23515                           ;doprnt.c: 1428: )
 23516  01300A  0101               	movlb	1	; () banked
 23517  01300C  51B1               	movf	sprintf@width& (0+255),w,b
 23518  01300E  0101               	movlb	1	; () banked
 23519  013010  11B2               	iorwf	(sprintf@width+1)& (0+255),w,b
 23520  013012  B4D8               	btfsc	status,2,c
 23521  013014  D018               	goto	l13081
 23522                           
 23523                           ; BSR set to: 1
 23524  013016  0101               	movlb	1	; () banked
 23525  013018  B7B4               	btfsc	sprintf@flag& (0+255),3,b
 23526  01301A  D015               	goto	l13081
 23527  01301C                     l13075:
 23528                           
 23529                           ; BSR set to: 1
 23530                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 23531  01301C  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23532  013020  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23533  013024  0E20               	movlw	32
 23534  013026  6EDF               	movwf	indf2,c
 23535                           
 23536                           ; BSR set to: 1
 23537  013028  0101               	movlb	1	; () banked
 23538  01302A  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 23539  01302C  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 23540                           
 23541                           ; BSR set to: 1
 23542                           ;doprnt.c: 1431: while(--width);
 23543  01302E  0101               	movlb	1	; () banked
 23544  013030  07B1               	decf	sprintf@width& (0+255),f,b
 23545  013032  A0D8               	btfss	status,0,c
 23546  013034  07B2               	decf	(sprintf@width+1)& (0+255),f,b
 23547  013036  0101               	movlb	1	; () banked
 23548  013038  51B1               	movf	sprintf@width& (0+255),w,b
 23549  01303A  0101               	movlb	1	; () banked
 23550  01303C  11B2               	iorwf	(sprintf@width+1)& (0+255),w,b
 23551  01303E  B4D8               	btfsc	status,2,c
 23552  013040  D002               	goto	l13081
 23553  013042  D7EC               	goto	l13075
 23554                           
 23555                           ; BSR set to: 1
 23556  013044  D000               	goto	l13081
 23557  013046                     l13081:
 23558                           
 23559                           ; BSR set to: 1
 23560                           ;doprnt.c: 1438: if(flag & 0x03)
 23561  013046  0E03               	movlw	3
 23562  013048  0101               	movlb	1	; () banked
 23563  01304A  15B4               	andwf	sprintf@flag& (0+255),w,b
 23564  01304C  0101               	movlb	1	; () banked
 23565  01304E  6F9A               	movwf	??_sprintf& (0+255),b
 23566  013050  0E00               	movlw	0
 23567  013052  0101               	movlb	1	; () banked
 23568  013054  15B5               	andwf	(sprintf@flag+1)& (0+255),w,b
 23569  013056  0101               	movlb	1	; () banked
 23570  013058  6F9B               	movwf	(??_sprintf+1)& (0+255),b
 23571  01305A  0101               	movlb	1	; () banked
 23572  01305C  519A               	movf	??_sprintf& (0+255),w,b
 23573  01305E  0101               	movlb	1	; () banked
 23574  013060  119B               	iorwf	(??_sprintf+1)& (0+255),w,b
 23575  013062  B4D8               	btfsc	status,2,c
 23576  013064  D00A               	goto	l1935
 23577                           
 23578                           ; BSR set to: 1
 23579                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 23580  013066  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23581  01306A  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23582  01306E  0E2D               	movlw	45
 23583  013070  D00C               	goto	L21
 23584  013072                     l13085:
 23585                           
 23586                           ; BSR set to: 1
 23587  013072  0101               	movlb	1	; () banked
 23588  013074  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 23589  013076  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 23590  013078  D00B               	goto	l13091
 23591  01307A                     l1935:
 23592                           
 23593                           ; BSR set to: 1
 23594                           ;doprnt.c: 1443: else if(flag & 0x01)
 23595  01307A  0101               	movlb	1	; () banked
 23596  01307C  A1B4               	btfss	sprintf@flag& (0+255),0,b
 23597  01307E  D008               	goto	l13091
 23598                           
 23599                           ; BSR set to: 1
 23600                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 23601  013080  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23602  013084  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23603  013088  0E20               	movlw	32
 23604  01308A                     L21:
 23605  01308A  6EDF               	movwf	indf2,c
 23606  01308C  D7F2               	goto	l13085
 23607                           
 23608                           ; BSR set to: 1
 23609                           
 23610                           ; BSR set to: 1
 23611  01308E  D000               	goto	l13091
 23612  013090                     l13091:
 23613                           
 23614                           ; BSR set to: 1
 23615                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 23616  013090  0EC0               	movlw	192
 23617  013092  0101               	movlb	1	; () banked
 23618  013094  6F9A               	movwf	??_sprintf& (0+255),b
 23619  013096  0E08               	movlw	8
 23620  013098  0101               	movlb	1	; () banked
 23621  01309A  6F9B               	movwf	(??_sprintf+1)& (0+255),b
 23622  01309C  C1B4  F19C         	movff	sprintf@flag,??_sprintf+2
 23623  0130A0  C1B5  F19D         	movff	sprintf@flag+1,??_sprintf+3
 23624  0130A4  0101               	movlb	1	; () banked
 23625  0130A6  519A               	movf	??_sprintf& (0+255),w,b
 23626  0130A8  0101               	movlb	1	; () banked
 23627  0130AA  179C               	andwf	(??_sprintf+2)& (0+255),f,b
 23628  0130AC  0101               	movlb	1	; () banked
 23629  0130AE  519B               	movf	(??_sprintf+1)& (0+255),w,b
 23630  0130B0  0101               	movlb	1	; () banked
 23631  0130B2  179D               	andwf	(??_sprintf+3)& (0+255),f,b
 23632  0130B4  0E40               	movlw	64
 23633  0130B6  0101               	movlb	1	; () banked
 23634  0130B8  199C               	xorwf	(??_sprintf+2)& (0+255),w,b
 23635  0130BA  E10C               	bnz	l13097
 23636  0130BC  0E08               	movlw	8
 23637  0130BE  0101               	movlb	1	; () banked
 23638  0130C0  199D               	xorwf	(??_sprintf+3)& (0+255),w,b
 23639  0130C2  A4D8               	btfss	status,2,c
 23640  0130C4  D007               	goto	l13097
 23641                           
 23642                           ; BSR set to: 1
 23643                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 23644  0130C6  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23645  0130CA  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23646  0130CE  0E30               	movlw	48
 23647  0130D0  6EDF               	movwf	indf2,c
 23648  0130D2  D11E               	goto	l13133
 23649  0130D4                     l13097:
 23650                           
 23651                           ; BSR set to: 1
 23652                           ;doprnt.c: 1450: else
 23653                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 23654  0130D4  0EC0               	movlw	192
 23655  0130D6  0101               	movlb	1	; () banked
 23656  0130D8  6F9A               	movwf	??_sprintf& (0+255),b
 23657  0130DA  0E08               	movlw	8
 23658  0130DC  0101               	movlb	1	; () banked
 23659  0130DE  6F9B               	movwf	(??_sprintf+1)& (0+255),b
 23660  0130E0  C1B4  F19C         	movff	sprintf@flag,??_sprintf+2
 23661  0130E4  C1B5  F19D         	movff	sprintf@flag+1,??_sprintf+3
 23662  0130E8  0101               	movlb	1	; () banked
 23663  0130EA  519A               	movf	??_sprintf& (0+255),w,b
 23664  0130EC  0101               	movlb	1	; () banked
 23665  0130EE  179C               	andwf	(??_sprintf+2)& (0+255),f,b
 23666  0130F0  0101               	movlb	1	; () banked
 23667  0130F2  519B               	movf	(??_sprintf+1)& (0+255),w,b
 23668  0130F4  0101               	movlb	1	; () banked
 23669  0130F6  179D               	andwf	(??_sprintf+3)& (0+255),f,b
 23670  0130F8  0E80               	movlw	128
 23671  0130FA  0101               	movlb	1	; () banked
 23672  0130FC  199C               	xorwf	(??_sprintf+2)& (0+255),w,b
 23673  0130FE  E104               	bnz	u16301
 23674  013100  0E08               	movlw	8
 23675  013102  0101               	movlb	1	; () banked
 23676  013104  199D               	xorwf	(??_sprintf+3)& (0+255),w,b
 23677  013106  A4D8               	btfss	status,2,c
 23678  013108                     u16301:
 23679  013108  D107               	goto	l13135
 23680                           
 23681                           ; BSR set to: 1
 23682                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 23683  01310A  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23684  01310E  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23685  013112  0E30               	movlw	48
 23686  013114  6EDF               	movwf	indf2,c
 23687                           
 23688                           ; BSR set to: 1
 23689  013116  0101               	movlb	1	; () banked
 23690  013118  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 23691  01311A  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 23692                           
 23693                           ; BSR set to: 1
 23694                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 23695  01311C  0101               	movlb	1	; () banked
 23696  01311E  BBB4               	btfsc	sprintf@flag& (0+255),5,b
 23697  013120  D005               	goto	l13107
 23698                           
 23699                           ; BSR set to: 1
 23700  013122  0E00               	movlw	0
 23701  013124  0101               	movlb	1	; () banked
 23702  013126  6FA4               	movwf	(_sprintf$3077+1)& (0+255),b
 23703  013128  0E78               	movlw	120
 23704  01312A  D004               	goto	L22
 23705  01312C                     l13107:
 23706                           
 23707                           ; BSR set to: 1
 23708  01312C  0E00               	movlw	0
 23709  01312E  0101               	movlb	1	; () banked
 23710  013130  6FA4               	movwf	(_sprintf$3077+1)& (0+255),b
 23711  013132  0E58               	movlw	88
 23712  013134                     L22:
 23713  013134  6FA3               	movwf	_sprintf$3077& (0+255),b
 23714  013136  D000               	goto	l13109
 23715  013138                     l13109:
 23716                           
 23717                           ; BSR set to: 1
 23718  013138  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23719  01313C  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23720  013140  C1A3  FFDF         	movff	_sprintf$3077,indf2
 23721  013144  D0E5               	goto	l13133
 23722                           
 23723                           ; BSR set to: 1
 23724                           ;doprnt.c: 1466: }
 23725                           ;doprnt.c: 1469: }
 23726                           ;doprnt.c: 1474: while(prec--) {
 23727                           
 23728                           ; BSR set to: 1
 23729                           
 23730                           ; BSR set to: 1
 23731                           
 23732                           ; BSR set to: 1
 23733  013146  D0E8               	goto	l13135
 23734                           
 23735                           ; BSR set to: 1
 23736                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
 23737  013148  D0CD               	goto	l13129
 23738                           
 23739                           ; BSR set to: 1
 23740                           
 23741                           ;doprnt.c: 1478: {
 23742                           ;doprnt.c: 1483: case 0x00:
 23743  01314A  D000               	goto	l13113
 23744  01314C                     l13113:
 23745                           
 23746                           ; BSR set to: 1
 23747                           ;doprnt.c: 1486: case 0xC0:
 23748                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 23749  01314C  C1AF  F19A         	movff	sprintf@prec,??_sprintf
 23750  013150  C1B0  F19B         	movff	sprintf@prec+1,??_sprintf+1
 23751  013154  0101               	movlb	1	; () banked
 23752  013156  90D8               	bcf	status,0,c
 23753  013158  379A               	rlcf	??_sprintf& (0+255),f,b
 23754  01315A  379B               	rlcf	(??_sprintf+1)& (0+255),f,b
 23755  01315C  0101               	movlb	1	; () banked
 23756  01315E  90D8               	bcf	status,0,c
 23757  013160  379A               	rlcf	??_sprintf& (0+255),f,b
 23758  013162  379B               	rlcf	(??_sprintf+1)& (0+255),f,b
 23759  013164  0EF1               	movlw	low _dpowers
 23760  013166  0101               	movlb	1	; () banked
 23761  013168  259A               	addwf	??_sprintf& (0+255),w,b
 23762  01316A  6EF6               	movwf	tblptrl,c
 23763  01316C  0EEC               	movlw	high _dpowers
 23764  01316E  219B               	addwfc	(??_sprintf+1)& (0+255),w,b
 23765  013170  6EF7               	movwf	tblptrh,c
 23766  013172                     	if	1	;There are 3 active tblptr bytes
 23767  013172  6AF8               	clrf	tblptru,c
 23768  013174  0E00               	movlw	low (__mediumconst shr (0+16))
 23769  013176  22F8               	addwfc	tblptru,f,c
 23770  013178                     	endif
 23771  013178  0009               	tblrd		*+
 23772  01317A  CFF5 F178          	movff	tablat,___lldiv@divisor
 23773  01317E  0009               	tblrd		*+
 23774  013180  CFF5 F179          	movff	tablat,___lldiv@divisor+1
 23775  013184  0009               	tblrd		*+
 23776  013186  CFF5 F17A          	movff	tablat,___lldiv@divisor+2
 23777  01318A  000A               	tblrd		*-
 23778  01318C  CFF5 F17B          	movff	tablat,___lldiv@divisor+3
 23779  013190  C1AB  F174         	movff	sprintf@val,___lldiv@dividend
 23780  013194  C1AC  F175         	movff	sprintf@val+1,___lldiv@dividend+1
 23781  013198  C1AD  F176         	movff	sprintf@val+2,___lldiv@dividend+2
 23782  01319C  C1AE  F177         	movff	sprintf@val+3,___lldiv@dividend+3
 23783  0131A0  ECA8  F0B6         	call	___lldiv	;wreg free
 23784  0131A4  C174  F181         	movff	?___lldiv,___llmod@dividend
 23785  0131A8  C175  F182         	movff	?___lldiv+1,___llmod@dividend+1
 23786  0131AC  C176  F183         	movff	?___lldiv+2,___llmod@dividend+2
 23787  0131B0  C177  F184         	movff	?___lldiv+3,___llmod@dividend+3
 23788  0131B4  0E0A               	movlw	10
 23789  0131B6  0101               	movlb	1	; () banked
 23790  0131B8  6F85               	movwf	___llmod@divisor& (0+255),b
 23791  0131BA  0E00               	movlw	0
 23792  0131BC  6F86               	movwf	(___llmod@divisor+1)& (0+255),b
 23793  0131BE  0E00               	movlw	0
 23794  0131C0  6F87               	movwf	(___llmod@divisor+2)& (0+255),b
 23795  0131C2  0E00               	movlw	0
 23796  0131C4  6F88               	movwf	(___llmod@divisor+3)& (0+255),b
 23797  0131C6  ECD2  F0B9         	call	___llmod	;wreg free
 23798  0131CA  0101               	movlb	1	; () banked
 23799  0131CC  5181               	movf	?___llmod& (0+255),w,b
 23800  0131CE  D086               	goto	L23
 23801  0131D0                     l13115:
 23802                           
 23803                           ; BSR set to: 1
 23804                           ;doprnt.c: 1499: {
 23805                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 23806  0131D0  C1AB  F174         	movff	sprintf@val,___lldiv@dividend
 23807  0131D4  C1AC  F175         	movff	sprintf@val+1,___lldiv@dividend+1
 23808  0131D8  C1AD  F176         	movff	sprintf@val+2,___lldiv@dividend+2
 23809  0131DC  C1AE  F177         	movff	sprintf@val+3,___lldiv@dividend+3
 23810  0131E0  C1AF  F19A         	movff	sprintf@prec,??_sprintf
 23811  0131E4  C1B0  F19B         	movff	sprintf@prec+1,??_sprintf+1
 23812  0131E8  0101               	movlb	1	; () banked
 23813  0131EA  90D8               	bcf	status,0,c
 23814  0131EC  379A               	rlcf	??_sprintf& (0+255),f,b
 23815  0131EE  379B               	rlcf	(??_sprintf+1)& (0+255),f,b
 23816  0131F0  0101               	movlb	1	; () banked
 23817  0131F2  90D8               	bcf	status,0,c
 23818  0131F4  379A               	rlcf	??_sprintf& (0+255),f,b
 23819  0131F6  379B               	rlcf	(??_sprintf+1)& (0+255),f,b
 23820  0131F8  0E19               	movlw	low _hexpowers
 23821  0131FA  0101               	movlb	1	; () banked
 23822  0131FC  259A               	addwf	??_sprintf& (0+255),w,b
 23823  0131FE  6EF6               	movwf	tblptrl,c
 23824  013200  0EED               	movlw	high _hexpowers
 23825  013202  219B               	addwfc	(??_sprintf+1)& (0+255),w,b
 23826  013204  6EF7               	movwf	tblptrh,c
 23827  013206                     	if	1	;There are 3 active tblptr bytes
 23828  013206  6AF8               	clrf	tblptru,c
 23829  013208  0E00               	movlw	low (__mediumconst shr (0+16))
 23830  01320A  22F8               	addwfc	tblptru,f,c
 23831  01320C                     	endif
 23832  01320C  0009               	tblrd		*+
 23833  01320E  CFF5 F178          	movff	tablat,___lldiv@divisor
 23834  013212  0009               	tblrd		*+
 23835  013214  CFF5 F179          	movff	tablat,___lldiv@divisor+1
 23836  013218  0009               	tblrd		*+
 23837  01321A  CFF5 F17A          	movff	tablat,___lldiv@divisor+2
 23838  01321E  000A               	tblrd		*-
 23839  013220  CFF5 F17B          	movff	tablat,___lldiv@divisor+3
 23840  013224  ECA8  F0B6         	call	___lldiv	;wreg free
 23841  013228  0101               	movlb	1	; () banked
 23842  01322A  5174               	movf	?___lldiv& (0+255),w,b
 23843  01322C  0B0F               	andlw	15
 23844  01322E  0101               	movlb	1	; () banked
 23845  013230  6F9E               	movwf	sprintf@idx& (0+255),b
 23846                           
 23847                           ; BSR set to: 1
 23848                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 23849  013232  0101               	movlb	1	; () banked
 23850  013234  BBB4               	btfsc	sprintf@flag& (0+255),5,b
 23851  013236  D005               	goto	l13121
 23852                           
 23853                           ; BSR set to: 1
 23854  013238  0ED9               	movlw	low STR_326
 23855  01323A  0101               	movlb	1	; () banked
 23856  01323C  6FA5               	movwf	_sprintf$3083& (0+255),b
 23857  01323E  0EF8               	movlw	high STR_326
 23858  013240  D004               	goto	L24
 23859  013242                     l13121:
 23860                           
 23861                           ; BSR set to: 1
 23862  013242  0EC8               	movlw	low STR_325
 23863  013244  0101               	movlb	1	; () banked
 23864  013246  6FA5               	movwf	_sprintf$3083& (0+255),b
 23865  013248  0EF8               	movlw	high STR_325
 23866  01324A                     L24:
 23867  01324A  0101               	movlb	1	; () banked
 23868  01324C  6FA6               	movwf	(_sprintf$3083+1)& (0+255),b
 23869  01324E  D000               	goto	l13123
 23870  013250                     l13123:
 23871                           
 23872                           ; BSR set to: 1
 23873  013250  0101               	movlb	1	; () banked
 23874  013252  519E               	movf	sprintf@idx& (0+255),w,b
 23875  013254  0D01               	mullw	1
 23876  013256  C1A5  F19A         	movff	_sprintf$3083,??_sprintf
 23877  01325A  C1A6  F19B         	movff	_sprintf$3083+1,??_sprintf+1
 23878  01325E  50F3               	movf	prodl,w,c
 23879  013260  0101               	movlb	1	; () banked
 23880  013262  279A               	addwf	??_sprintf& (0+255),f,b
 23881  013264  50F4               	movf	prodh,w,c
 23882  013266  0101               	movlb	1	; () banked
 23883  013268  239B               	addwfc	(??_sprintf+1)& (0+255),f,b
 23884  01326A  C19A  FFF6         	movff	??_sprintf,tblptrl
 23885  01326E  C19B  FFF7         	movff	??_sprintf+1,tblptrh
 23886  013272                     	if	0	;tblptru may be non-zero
 23887  013272                     	endif
 23888  013272                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23889  013272  0E00               	movlw	low (__mediumconst shr (0+16))
 23890  013274  6EF8               	movwf	tblptru,c
 23891  013276                     	endif
 23892  013276  0008               	tblrd		*
 23893  013278  CFF5 F1B3          	movff	tablat,sprintf@c
 23894                           
 23895                           ;doprnt.c: 1508: }
 23896                           ;doprnt.c: 1510: break;
 23897  01327C  D043               	goto	l13131
 23898  01327E                     l13125:
 23899                           
 23900                           ; BSR set to: 1
 23901                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 23902  01327E  C1AB  F174         	movff	sprintf@val,___lldiv@dividend
 23903  013282  C1AC  F175         	movff	sprintf@val+1,___lldiv@dividend+1
 23904  013286  C1AD  F176         	movff	sprintf@val+2,___lldiv@dividend+2
 23905  01328A  C1AE  F177         	movff	sprintf@val+3,___lldiv@dividend+3
 23906  01328E  C1AF  F19A         	movff	sprintf@prec,??_sprintf
 23907  013292  C1B0  F19B         	movff	sprintf@prec+1,??_sprintf+1
 23908  013296  0101               	movlb	1	; () banked
 23909  013298  90D8               	bcf	status,0,c
 23910  01329A  379A               	rlcf	??_sprintf& (0+255),f,b
 23911  01329C  379B               	rlcf	(??_sprintf+1)& (0+255),f,b
 23912  01329E  0101               	movlb	1	; () banked
 23913  0132A0  90D8               	bcf	status,0,c
 23914  0132A2  379A               	rlcf	??_sprintf& (0+255),f,b
 23915  0132A4  379B               	rlcf	(??_sprintf+1)& (0+255),f,b
 23916  0132A6  0EC1               	movlw	low _octpowers
 23917  0132A8  0101               	movlb	1	; () banked
 23918  0132AA  259A               	addwf	??_sprintf& (0+255),w,b
 23919  0132AC  6EF6               	movwf	tblptrl,c
 23920  0132AE  0EEC               	movlw	high _octpowers
 23921  0132B0  219B               	addwfc	(??_sprintf+1)& (0+255),w,b
 23922  0132B2  6EF7               	movwf	tblptrh,c
 23923  0132B4                     	if	1	;There are 3 active tblptr bytes
 23924  0132B4  6AF8               	clrf	tblptru,c
 23925  0132B6  0E00               	movlw	low (__mediumconst shr (0+16))
 23926  0132B8  22F8               	addwfc	tblptru,f,c
 23927  0132BA                     	endif
 23928  0132BA  0009               	tblrd		*+
 23929  0132BC  CFF5 F178          	movff	tablat,___lldiv@divisor
 23930  0132C0  0009               	tblrd		*+
 23931  0132C2  CFF5 F179          	movff	tablat,___lldiv@divisor+1
 23932  0132C6  0009               	tblrd		*+
 23933  0132C8  CFF5 F17A          	movff	tablat,___lldiv@divisor+2
 23934  0132CC  000A               	tblrd		*-
 23935  0132CE  CFF5 F17B          	movff	tablat,___lldiv@divisor+3
 23936  0132D2  ECA8  F0B6         	call	___lldiv	;wreg free
 23937  0132D6  0101               	movlb	1	; () banked
 23938  0132D8  5174               	movf	?___lldiv& (0+255),w,b
 23939  0132DA  0B07               	andlw	7
 23940  0132DC                     L23:
 23941  0132DC  0F30               	addlw	48
 23942  0132DE  0101               	movlb	1	; () banked
 23943  0132E0  6FB3               	movwf	sprintf@c& (0+255),b
 23944                           
 23945                           ; BSR set to: 1
 23946                           ;doprnt.c: 1523: }
 23947                           
 23948                           ;doprnt.c: 1520: break;
 23949  0132E2  D010               	goto	l13131
 23950  0132E4                     l13129:
 23951                           
 23952                           ; BSR set to: 1
 23953  0132E4  0101               	movlb	1	; () banked
 23954  0132E6  51B4               	movf	sprintf@flag& (0+255),w,b
 23955  0132E8  0BC0               	andlw	192
 23956                           
 23957                           ; Switch size 1, requested type "space"
 23958                           ; Number of cases is 4, Range of values is 0 to 192
 23959                           ; switch strategies available:
 23960                           ; Name         Instructions Cycles
 23961                           ; simple_byte           13     7 (average)
 23962                           ;	Chosen strategy is simple_byte
 23963  0132EA  0A00               	xorlw	0	; case 0
 23964  0132EC  B4D8               	btfsc	status,2,c
 23965  0132EE  D72E               	goto	l13113
 23966  0132F0  0A40               	xorlw	64	; case 64
 23967  0132F2  B4D8               	btfsc	status,2,c
 23968  0132F4  D7C4               	goto	l13125
 23969  0132F6  0AC0               	xorlw	192	; case 128
 23970  0132F8  B4D8               	btfsc	status,2,c
 23971  0132FA  D76A               	goto	l13115
 23972  0132FC  0A40               	xorlw	64	; case 192
 23973  0132FE  B4D8               	btfsc	status,2,c
 23974  013300  D725               	goto	l13113
 23975  013302  D000               	goto	l13131
 23976  013304                     l13131:
 23977                           
 23978                           ; BSR set to: 1
 23979                           ;doprnt.c: 1524: ((*sp++ = (c)));
 23980  013304  C18A  FFD9         	movff	sprintf@sp,fsr2l
 23981  013308  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 23982  01330C  C1B3  FFDF         	movff	sprintf@c,indf2
 23983  013310                     l13133:
 23984                           
 23985                           ; BSR set to: 1
 23986  013310  0101               	movlb	1	; () banked
 23987  013312  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 23988  013314  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 23989  013316  D000               	goto	l13135
 23990  013318                     l13135:
 23991                           
 23992                           ; BSR set to: 1
 23993  013318  0101               	movlb	1	; () banked
 23994  01331A  07AF               	decf	sprintf@prec& (0+255),f,b
 23995  01331C  A0D8               	btfss	status,0,c
 23996  01331E  07B0               	decf	(sprintf@prec+1)& (0+255),f,b
 23997  013320  0101               	movlb	1	; () banked
 23998  013322  29AF               	incf	sprintf@prec& (0+255),w,b
 23999  013324  E1DF               	bnz	l13129
 24000  013326  0101               	movlb	1	; () banked
 24001  013328  29B0               	incf	(sprintf@prec+1)& (0+255),w,b
 24002  01332A  A4D8               	btfss	status,2,c
 24003  01332C  D7DB               	goto	l13129
 24004                           
 24005                           ; BSR set to: 1
 24006                           ;doprnt.c: 1525: }
 24007                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 24008  01332E  0101               	movlb	1	; () banked
 24009  013330  A7B4               	btfss	sprintf@flag& (0+255),3,b
 24010  013332  D021               	goto	l13145
 24011                           
 24012                           ; BSR set to: 1
 24013  013334  0101               	movlb	1	; () banked
 24014  013336  BFB2               	btfsc	(sprintf@width+1)& (0+255),7,b
 24015  013338  D01E               	goto	l13145
 24016  01333A  0101               	movlb	1	; () banked
 24017  01333C  51B2               	movf	(sprintf@width+1)& (0+255),w,b
 24018  01333E  E106               	bnz	l13139
 24019  013340  0101               	movlb	1	; () banked
 24020  013342  05B1               	decf	sprintf@width& (0+255),w,b
 24021  013344  B0D8               	btfsc	status,0,c
 24022  013346  D002               	goto	l13139
 24023  013348  D016               	goto	l13145
 24024  01334A  D000               	goto	l13139
 24025  01334C                     l13139:
 24026                           
 24027                           ; BSR set to: 1
 24028                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 24029  01334C  C18A  FFD9         	movff	sprintf@sp,fsr2l
 24030  013350  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 24031  013354  0E20               	movlw	32
 24032  013356  6EDF               	movwf	indf2,c
 24033                           
 24034                           ; BSR set to: 1
 24035  013358  0101               	movlb	1	; () banked
 24036  01335A  4B8A               	infsnz	sprintf@sp& (0+255),f,b
 24037  01335C  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
 24038                           
 24039                           ; BSR set to: 1
 24040                           ;doprnt.c: 1531: while(--width);
 24041  01335E  0101               	movlb	1	; () banked
 24042  013360  07B1               	decf	sprintf@width& (0+255),f,b
 24043  013362  A0D8               	btfss	status,0,c
 24044  013364  07B2               	decf	(sprintf@width+1)& (0+255),f,b
 24045  013366  0101               	movlb	1	; () banked
 24046  013368  51B1               	movf	sprintf@width& (0+255),w,b
 24047  01336A  0101               	movlb	1	; () banked
 24048  01336C  11B2               	iorwf	(sprintf@width+1)& (0+255),w,b
 24049  01336E  B4D8               	btfsc	status,2,c
 24050  013370  D002               	goto	l13145
 24051  013372  D7EC               	goto	l13139
 24052                           
 24053                           ; BSR set to: 1
 24054                           
 24055                           ; BSR set to: 1
 24056  013374  D000               	goto	l13145
 24057  013376                     l13145:
 24058                           
 24059                           ; BSR set to: 1
 24060  013376  C18C  FFF6         	movff	sprintf@f,tblptrl
 24061  01337A  C18D  FFF7         	movff	sprintf@f+1,tblptrh
 24062  01337E  0101               	movlb	1	; () banked
 24063  013380  4B8C               	infsnz	sprintf@f& (0+255),f,b
 24064  013382  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
 24065  013384                     	if	0	;tblptru may be non-zero
 24066  013384                     	endif
 24067  013384                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24068  013384  0E00               	movlw	low (__mediumconst shr (0+16))
 24069  013386  6EF8               	movwf	tblptru,c
 24070  013388                     	endif
 24071  013388  0008               	tblrd		*
 24072  01338A  CFF5 F1B3          	movff	tablat,sprintf@c
 24073  01338E  0101               	movlb	1	; () banked
 24074  013390  51B3               	movf	sprintf@c& (0+255),w,b
 24075  013392  B4D8               	btfsc	status,2,c
 24076  013394  D003               	goto	l13147
 24077  013396  EF8F  F093         	goto	l12793
 24078                           
 24079                           ; BSR set to: 1
 24080  01339A  D000               	goto	l13147
 24081  01339C                     l13147:
 24082                           
 24083                           ; BSR set to: 1
 24084                           ;doprnt.c: 1538: *sp = 0;
 24085  01339C  C18A  FFD9         	movff	sprintf@sp,fsr2l
 24086  0133A0  C18B  FFDA         	movff	sprintf@sp+1,fsr2h
 24087  0133A4  0E00               	movlw	0
 24088  0133A6  6EDF               	movwf	indf2,c
 24089  0133A8  0012               	return	
 24090                           
 24091                           ; BSR set to: 1
 24092                           
 24093                           ; BSR set to: 1
 24094                           ;doprnt.c: 1540: return 0;
 24095                           ;	Return value of _sprintf is never used
 24096  0133AA  0012               	return		;funcret
 24097  0133AC                     __end_of_sprintf:
 24098                           	opt stack 0
 24099                           tblptru	equ	0xFF8
 24100                           tblptrh	equ	0xFF7
 24101                           tblptrl	equ	0xFF6
 24102                           tablat	equ	0xFF5
 24103                           prodh	equ	0xFF4
 24104                           prodl	equ	0xFF3
 24105                           intcon	equ	0xFF2
 24106                           intcon2	equ	0xFF1
 24107                           postinc0	equ	0xFEE
 24108                           plusw0	equ	0xFEB
 24109                           wreg	equ	0xFE8
 24110                           indf1	equ	0xFE7
 24111                           postdec1	equ	0xFE5
 24112                           fsr1h	equ	0xFE2
 24113                           fsr1l	equ	0xFE1
 24114                           indf2	equ	0xFDF
 24115                           postinc2	equ	0xFDE
 24116                           postdec2	equ	0xFDD
 24117                           plusw2	equ	0xFDB
 24118                           fsr2h	equ	0xFDA
 24119                           fsr2l	equ	0xFD9
 24120                           status	equ	0xFD8
 24121                           
 24122 ;; *************** function _isdigit *****************
 24123 ;; Defined at:
 24124 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 24125 ;; Parameters:    Size  Location     Type
 24126 ;;  c               1    wreg     unsigned char 
 24127 ;; Auto vars:     Size  Location     Type
 24128 ;;  c               1   16[BANK1 ] unsigned char 
 24129 ;; Return value:  Size  Location     Type
 24130 ;;		None               void
 24131 ;; Registers used:
 24132 ;;		wreg, status,2, status,0
 24133 ;; Tracked objects:
 24134 ;;		On entry : 0/0
 24135 ;;		On exit  : 0/0
 24136 ;;		Unchanged: 0/0
 24137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24139 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24140 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24141 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 24142 ;;Total ram usage:        3 bytes
 24143 ;; Hardware stack levels used:    1
 24144 ;; Hardware stack levels required when called:    7
 24145 ;; This function calls:
 24146 ;;		Nothing
 24147 ;; This function is called by:
 24148 ;;		_sprintf
 24149 ;; This function uses a non-reentrant model
 24150 ;;
 24151                           
 24152                           	psect	text48
 24153  000E12                     __ptext48:
 24154                           	opt stack 0
 24155  000E12                     _isdigit:
 24156                           	opt stack 21
 24157                           
 24158                           ; BSR set to: 1
 24159                           ;incstack = 0
 24160                           ;isdigit@c stored from wreg
 24161  000E12  0101               	movlb	1	; () banked
 24162  000E14  6F76               	movwf	isdigit@c& (0+255),b
 24163                           
 24164                           ; BSR set to: 1
 24165  000E16  0E00               	movlw	0
 24166  000E18  0101               	movlb	1	; () banked
 24167  000E1A  6F75               	movwf	_isdigit$3362& (0+255),b
 24168                           
 24169                           ; BSR set to: 1
 24170  000E1C  0E3A               	movlw	58
 24171  000E1E  0101               	movlb	1	; () banked
 24172  000E20  6176               	cpfslt	isdigit@c& (0+255),b
 24173  000E22  D008               	goto	l12555
 24174                           
 24175                           ; BSR set to: 1
 24176  000E24  0E2F               	movlw	47
 24177  000E26  0101               	movlb	1	; () banked
 24178  000E28  6576               	cpfsgt	isdigit@c& (0+255),b
 24179  000E2A  D004               	goto	l12555
 24180                           
 24181                           ; BSR set to: 1
 24182  000E2C  0E01               	movlw	1
 24183  000E2E  0101               	movlb	1	; () banked
 24184  000E30  6F75               	movwf	_isdigit$3362& (0+255),b
 24185  000E32  D000               	goto	l12555
 24186  000E34                     l12555:
 24187                           
 24188                           ; BSR set to: 1
 24189  000E34  C175  F174         	movff	_isdigit$3362,??_isdigit
 24190  000E38  0101               	movlb	1	; () banked
 24191  000E3A  3174               	rrcf	??_isdigit& (0+255),w,b
 24192  000E3C  0012               	return	
 24193                           
 24194                           ; BSR set to: 1
 24195                           
 24196                           ; BSR set to: 1
 24197  000E3E  0012               	return		;funcret
 24198  000E40                     __end_of_isdigit:
 24199                           	opt stack 0
 24200                           tblptru	equ	0xFF8
 24201                           tblptrh	equ	0xFF7
 24202                           tblptrl	equ	0xFF6
 24203                           tablat	equ	0xFF5
 24204                           prodh	equ	0xFF4
 24205                           prodl	equ	0xFF3
 24206                           intcon	equ	0xFF2
 24207                           intcon2	equ	0xFF1
 24208                           postinc0	equ	0xFEE
 24209                           plusw0	equ	0xFEB
 24210                           wreg	equ	0xFE8
 24211                           indf1	equ	0xFE7
 24212                           postdec1	equ	0xFE5
 24213                           fsr1h	equ	0xFE2
 24214                           fsr1l	equ	0xFE1
 24215                           indf2	equ	0xFDF
 24216                           postinc2	equ	0xFDE
 24217                           postdec2	equ	0xFDD
 24218                           plusw2	equ	0xFDB
 24219                           fsr2h	equ	0xFDA
 24220                           fsr2l	equ	0xFD9
 24221                           status	equ	0xFD8
 24222                           
 24223 ;; *************** function ___wmul *****************
 24224 ;; Defined at:
 24225 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 24226 ;; Parameters:    Size  Location     Type
 24227 ;;  multiplier      2   14[BANK1 ] unsigned int 
 24228 ;;  multiplicand    2   16[BANK1 ] unsigned int 
 24229 ;; Auto vars:     Size  Location     Type
 24230 ;;  product         2   18[BANK1 ] unsigned int 
 24231 ;; Return value:  Size  Location     Type
 24232 ;;                  2   14[BANK1 ] unsigned int 
 24233 ;; Registers used:
 24234 ;;		wreg, status,2, status,0, prodl, prodh
 24235 ;; Tracked objects:
 24236 ;;		On entry : 0/0
 24237 ;;		On exit  : 0/0
 24238 ;;		Unchanged: 0/0
 24239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24240 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24241 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24243 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 24244 ;;Total ram usage:        6 bytes
 24245 ;; Hardware stack levels used:    1
 24246 ;; Hardware stack levels required when called:    7
 24247 ;; This function calls:
 24248 ;;		Nothing
 24249 ;; This function is called by:
 24250 ;;		_SetFreq
 24251 ;;		_sprintf
 24252 ;; This function uses a non-reentrant model
 24253 ;;
 24254                           
 24255                           	psect	text49
 24256  000C0E                     __ptext49:
 24257                           	opt stack 0
 24258  000C0E                     ___wmul:
 24259                           	opt stack 21
 24260                           
 24261                           ; BSR set to: 1
 24262                           ;incstack = 0
 24263  000C0E  0101               	movlb	1	; () banked
 24264  000C10  5174               	movf	___wmul@multiplier& (0+255),w,b
 24265  000C12  0101               	movlb	1	; () banked
 24266  000C14  0376               	mulwf	___wmul@multiplicand& (0+255),b
 24267  000C16  CFF3 F178          	movff	prodl,___wmul@product
 24268  000C1A  CFF4 F179          	movff	prodh,___wmul@product+1
 24269  000C1E  0101               	movlb	1	; () banked
 24270  000C20  5174               	movf	___wmul@multiplier& (0+255),w,b
 24271  000C22  0101               	movlb	1	; () banked
 24272  000C24  0377               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 24273  000C26  50F3               	movf	prodl,w,c
 24274  000C28  0101               	movlb	1	; () banked
 24275  000C2A  2779               	addwf	(___wmul@product+1)& (0+255),f,b
 24276  000C2C  0101               	movlb	1	; () banked
 24277  000C2E  5175               	movf	(___wmul@multiplier+1)& (0+255),w,b
 24278  000C30  0101               	movlb	1	; () banked
 24279  000C32  0376               	mulwf	___wmul@multiplicand& (0+255),b
 24280  000C34  50F3               	movf	prodl,w,c
 24281  000C36  0101               	movlb	1	; () banked
 24282  000C38  2779               	addwf	(___wmul@product+1)& (0+255),f,b
 24283                           
 24284                           ; BSR set to: 1
 24285  000C3A  C178  F174         	movff	___wmul@product,?___wmul
 24286  000C3E  C179  F175         	movff	___wmul@product+1,?___wmul+1
 24287  000C42  0012               	return	
 24288                           
 24289                           ; BSR set to: 1
 24290                           
 24291                           ; BSR set to: 1
 24292  000C44  0012               	return		;funcret
 24293  000C46                     __end_of___wmul:
 24294                           	opt stack 0
 24295                           tblptru	equ	0xFF8
 24296                           tblptrh	equ	0xFF7
 24297                           tblptrl	equ	0xFF6
 24298                           tablat	equ	0xFF5
 24299                           prodh	equ	0xFF4
 24300                           prodl	equ	0xFF3
 24301                           intcon	equ	0xFF2
 24302                           intcon2	equ	0xFF1
 24303                           postinc0	equ	0xFEE
 24304                           plusw0	equ	0xFEB
 24305                           wreg	equ	0xFE8
 24306                           indf1	equ	0xFE7
 24307                           postdec1	equ	0xFE5
 24308                           fsr1h	equ	0xFE2
 24309                           fsr1l	equ	0xFE1
 24310                           indf2	equ	0xFDF
 24311                           postinc2	equ	0xFDE
 24312                           postdec2	equ	0xFDD
 24313                           plusw2	equ	0xFDB
 24314                           fsr2h	equ	0xFDA
 24315                           fsr2l	equ	0xFD9
 24316                           status	equ	0xFD8
 24317                           
 24318 ;; *************** function ___llmod *****************
 24319 ;; Defined at:
 24320 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 24321 ;; Parameters:    Size  Location     Type
 24322 ;;  dividend        4   27[BANK1 ] unsigned long 
 24323 ;;  divisor         4   31[BANK1 ] unsigned long 
 24324 ;; Auto vars:     Size  Location     Type
 24325 ;;  counter         1   35[BANK1 ] unsigned char 
 24326 ;; Return value:  Size  Location     Type
 24327 ;;                  4   27[BANK1 ] unsigned long 
 24328 ;; Registers used:
 24329 ;;		wreg, status,2, status,0
 24330 ;; Tracked objects:
 24331 ;;		On entry : 0/0
 24332 ;;		On exit  : 0/0
 24333 ;;		Unchanged: 0/0
 24334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24335 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 24336 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24338 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 24339 ;;Total ram usage:        9 bytes
 24340 ;; Hardware stack levels used:    1
 24341 ;; Hardware stack levels required when called:    7
 24342 ;; This function calls:
 24343 ;;		Nothing
 24344 ;; This function is called by:
 24345 ;;		_sprintf
 24346 ;; This function uses a non-reentrant model
 24347 ;;
 24348                           
 24349                           	psect	text50
 24350  0173A4                     __ptext50:
 24351                           	opt stack 0
 24352  0173A4                     ___llmod:
 24353                           	opt stack 21
 24354                           
 24355                           ; BSR set to: 1
 24356                           ;incstack = 0
 24357  0173A4  0101               	movlb	1	; () banked
 24358  0173A6  5185               	movf	___llmod@divisor& (0+255),w,b
 24359  0173A8  0101               	movlb	1	; () banked
 24360  0173AA  1186               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 24361  0173AC  0101               	movlb	1	; () banked
 24362  0173AE  1187               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 24363  0173B0  0101               	movlb	1	; () banked
 24364  0173B2  1188               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 24365  0173B4  B4D8               	btfsc	status,2,c
 24366  0173B6  D03F               	goto	l2437
 24367                           
 24368                           ; BSR set to: 1
 24369  0173B8  0E01               	movlw	1
 24370  0173BA  0101               	movlb	1	; () banked
 24371  0173BC  6F89               	movwf	___llmod@counter& (0+255),b
 24372  0173BE  D009               	goto	l12629
 24373  0173C0                     l12627:
 24374                           
 24375                           ; BSR set to: 1
 24376  0173C0  0101               	movlb	1	; () banked
 24377  0173C2  90D8               	bcf	status,0,c
 24378  0173C4  3785               	rlcf	___llmod@divisor& (0+255),f,b
 24379  0173C6  3786               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 24380  0173C8  3787               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 24381  0173CA  3788               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 24382  0173CC  0101               	movlb	1	; () banked
 24383  0173CE  2B89               	incf	___llmod@counter& (0+255),f,b
 24384  0173D0  D000               	goto	l12629
 24385  0173D2                     l12629:
 24386                           
 24387                           ; BSR set to: 1
 24388  0173D2  0101               	movlb	1	; () banked
 24389  0173D4  BF88               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 24390  0173D6  D002               	goto	l12631
 24391  0173D8  D7F3               	goto	l12627
 24392                           
 24393                           ; BSR set to: 1
 24394  0173DA  D000               	goto	l12631
 24395  0173DC                     l12631:
 24396                           
 24397                           ; BSR set to: 1
 24398  0173DC  0101               	movlb	1	; () banked
 24399  0173DE  5185               	movf	___llmod@divisor& (0+255),w,b
 24400  0173E0  0101               	movlb	1	; () banked
 24401  0173E2  5D81               	subwf	___llmod@dividend& (0+255),w,b
 24402  0173E4  0101               	movlb	1	; () banked
 24403  0173E6  5186               	movf	(___llmod@divisor+1)& (0+255),w,b
 24404  0173E8  0101               	movlb	1	; () banked
 24405  0173EA  5982               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 24406  0173EC  0101               	movlb	1	; () banked
 24407  0173EE  5187               	movf	(___llmod@divisor+2)& (0+255),w,b
 24408  0173F0  0101               	movlb	1	; () banked
 24409  0173F2  5983               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 24410  0173F4  0101               	movlb	1	; () banked
 24411  0173F6  5188               	movf	(___llmod@divisor+3)& (0+255),w,b
 24412  0173F8  0101               	movlb	1	; () banked
 24413  0173FA  5984               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 24414  0173FC  A0D8               	btfss	status,0,c
 24415  0173FE  D011               	goto	l12635
 24416                           
 24417                           ; BSR set to: 1
 24418  017400  0101               	movlb	1	; () banked
 24419  017402  5185               	movf	___llmod@divisor& (0+255),w,b
 24420  017404  0101               	movlb	1	; () banked
 24421  017406  5F81               	subwf	___llmod@dividend& (0+255),f,b
 24422  017408  0101               	movlb	1	; () banked
 24423  01740A  5186               	movf	(___llmod@divisor+1)& (0+255),w,b
 24424  01740C  0101               	movlb	1	; () banked
 24425  01740E  5B82               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 24426  017410  0101               	movlb	1	; () banked
 24427  017412  5187               	movf	(___llmod@divisor+2)& (0+255),w,b
 24428  017414  0101               	movlb	1	; () banked
 24429  017416  5B83               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 24430  017418  0101               	movlb	1	; () banked
 24431  01741A  5188               	movf	(___llmod@divisor+3)& (0+255),w,b
 24432  01741C  0101               	movlb	1	; () banked
 24433  01741E  5B84               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 24434  017420  D000               	goto	l12635
 24435  017422                     l12635:
 24436                           
 24437                           ; BSR set to: 1
 24438  017422  0101               	movlb	1	; () banked
 24439  017424  90D8               	bcf	status,0,c
 24440  017426  3388               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 24441  017428  3387               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 24442  01742A  3386               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 24443  01742C  3385               	rrcf	___llmod@divisor& (0+255),f,b
 24444                           
 24445                           ; BSR set to: 1
 24446  01742E  0101               	movlb	1	; () banked
 24447  017430  2F89               	decfsz	___llmod@counter& (0+255),f,b
 24448  017432  D7D4               	goto	l12631
 24449  017434  D000               	goto	l2437
 24450  017436                     l2437:
 24451                           
 24452                           ; BSR set to: 1
 24453  017436  C181  F181         	movff	___llmod@dividend,?___llmod
 24454  01743A  C182  F182         	movff	___llmod@dividend+1,?___llmod+1
 24455  01743E  C183  F183         	movff	___llmod@dividend+2,?___llmod+2
 24456  017442  C184  F184         	movff	___llmod@dividend+3,?___llmod+3
 24457                           
 24458                           ; BSR set to: 1
 24459  017446  0012               	return		;funcret
 24460  017448                     __end_of___llmod:
 24461                           	opt stack 0
 24462                           tblptru	equ	0xFF8
 24463                           tblptrh	equ	0xFF7
 24464                           tblptrl	equ	0xFF6
 24465                           tablat	equ	0xFF5
 24466                           prodh	equ	0xFF4
 24467                           prodl	equ	0xFF3
 24468                           intcon	equ	0xFF2
 24469                           intcon2	equ	0xFF1
 24470                           postinc0	equ	0xFEE
 24471                           plusw0	equ	0xFEB
 24472                           wreg	equ	0xFE8
 24473                           indf1	equ	0xFE7
 24474                           postdec1	equ	0xFE5
 24475                           fsr1h	equ	0xFE2
 24476                           fsr1l	equ	0xFE1
 24477                           indf2	equ	0xFDF
 24478                           postinc2	equ	0xFDE
 24479                           postdec2	equ	0xFDD
 24480                           plusw2	equ	0xFDB
 24481                           fsr2h	equ	0xFDA
 24482                           fsr2l	equ	0xFD9
 24483                           status	equ	0xFD8
 24484                           
 24485 ;; *************** function _UARTstringWAIT *****************
 24486 ;; Defined at:
 24487 ;;		line 292 in file "UART.c"
 24488 ;; Parameters:    Size  Location     Type
 24489 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 24490 ;;		 -> STR_34(18), STR_33(17), STR_32(24), STR_31(23), 
 24491 ;; Auto vars:     Size  Location     Type
 24492 ;;		None
 24493 ;; Return value:  Size  Location     Type
 24494 ;;		None               void
 24495 ;; Registers used:
 24496 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24497 ;; Tracked objects:
 24498 ;;		On entry : 0/0
 24499 ;;		On exit  : 0/0
 24500 ;;		Unchanged: 0/0
 24501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24502 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24505 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24506 ;;Total ram usage:        2 bytes
 24507 ;; Hardware stack levels used:    1
 24508 ;; Hardware stack levels required when called:    9
 24509 ;; This function calls:
 24510 ;;		_UARTchar
 24511 ;;		_delayUS
 24512 ;; This function is called by:
 24513 ;;		_SetBaud
 24514 ;; This function uses a non-reentrant model
 24515 ;;
 24516                           
 24517                           	psect	text51
 24518  017DD0                     __ptext51:
 24519                           	opt stack 0
 24520  017DD0                     _UARTstringWAIT:
 24521                           	opt stack 19
 24522  017DD0                     
 24523                           ;UART.c: 295: {
 24524                           ;UART.c: 296: delayUS(5000);
 24525  017DD0  0E88               	movlw	136
 24526  017DD2  0101               	movlb	1	; () banked
 24527  017DD4  6F74               	movwf	delayUS@US& (0+255),b
 24528  017DD6  0E13               	movlw	19
 24529  017DD8  6F75               	movwf	(delayUS@US+1)& (0+255),b
 24530  017DDA  0E00               	movlw	0
 24531  017DDC  6F76               	movwf	(delayUS@US+2)& (0+255),b
 24532  017DDE  0E00               	movlw	0
 24533  017DE0  6F77               	movwf	(delayUS@US+3)& (0+255),b
 24534  017DE2  ECC6  F0BF         	call	_delayUS	;wreg free
 24535                           
 24536                           ;UART.c: 297: if(*data != 0)
 24537  017DE6  C17F  FFF6         	movff	UARTstringWAIT@data,tblptrl
 24538  017DEA  C180  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 24539  017DEE                     	if	0	;tblptru may be non-zero
 24540  017DEE                     	endif
 24541  017DEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24542  017DEE  0E00               	movlw	low (__mediumconst shr (0+16))
 24543  017DF0  6EF8               	movwf	tblptru,c
 24544  017DF2                     	endif
 24545  017DF2  0008               	tblrd		*
 24546  017DF4  50F5               	movf	tablat,w,c
 24547  017DF6  0900               	iorlw	0
 24548  017DF8  B4D8               	btfsc	status,2,c
 24549  017DFA  D015               	goto	l12789
 24550                           
 24551                           ;UART.c: 298: {
 24552                           ;UART.c: 299: UARTchar((unsigned char) *data, 0, 0);
 24553  017DFC  0E00               	movlw	0
 24554  017DFE  0101               	movlb	1	; () banked
 24555  017E00  6F7B               	movwf	UARTchar@NinethBit_override& (0+255),b
 24556  017E02  0E00               	movlw	0
 24557  017E04  0101               	movlb	1	; () banked
 24558  017E06  6F7C               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 24559  017E08  C17F  FFF6         	movff	UARTstringWAIT@data,tblptrl
 24560  017E0C  C180  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 24561  017E10                     	if	0	;tblptru may be non-zero
 24562  017E10                     	endif
 24563  017E10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24564  017E10  0E00               	movlw	low (__mediumconst shr (0+16))
 24565  017E12  6EF8               	movwf	tblptru,c
 24566  017E14                     	endif
 24567  017E14  0008               	tblrd		*
 24568  017E16  50F5               	movf	tablat,w,c
 24569  017E18  EC3A  F0BC         	call	_UARTchar
 24570                           
 24571                           ;UART.c: 300: while((!TXSTAbits.TRMT));
 24572  017E1C  D000               	goto	l542
 24573  017E1E                     l542:
 24574  017E1E  B2AC               	btfsc	4012,1,c	;volatile
 24575  017E20  D002               	goto	l12789
 24576  017E22  D7FD               	goto	l542
 24577  017E24  D000               	goto	l12789
 24578  017E26                     l12789:
 24579                           
 24580                           ;UART.c: 301: }
 24581                           ;UART.c: 302: } while( *data++);
 24582  017E26  C17F  FFF6         	movff	UARTstringWAIT@data,tblptrl
 24583  017E2A  C180  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 24584  017E2E  0101               	movlb	1	; () banked
 24585  017E30  4B7F               	infsnz	UARTstringWAIT@data& (0+255),f,b
 24586  017E32  2B80               	incf	(UARTstringWAIT@data+1)& (0+255),f,b
 24587  017E34                     	if	0	;tblptru may be non-zero
 24588  017E34                     	endif
 24589  017E34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24590  017E34  0E00               	movlw	low (__mediumconst shr (0+16))
 24591  017E36  6EF8               	movwf	tblptru,c
 24592  017E38                     	endif
 24593  017E38  0008               	tblrd		*
 24594  017E3A  50F5               	movf	tablat,w,c
 24595  017E3C  0900               	iorlw	0
 24596  017E3E  A4D8               	btfss	status,2,c
 24597  017E40  D7C7               	goto	l12783
 24598                           
 24599                           ; BSR set to: 1
 24600                           
 24601                           ; BSR set to: 1
 24602  017E42  0012               	return		;funcret
 24603  017E44                     __end_of_UARTstringWAIT:
 24604                           	opt stack 0
 24605                           tblptru	equ	0xFF8
 24606                           tblptrh	equ	0xFF7
 24607                           tblptrl	equ	0xFF6
 24608                           tablat	equ	0xFF5
 24609                           prodh	equ	0xFF4
 24610                           prodl	equ	0xFF3
 24611                           intcon	equ	0xFF2
 24612                           intcon2	equ	0xFF1
 24613                           postinc0	equ	0xFEE
 24614                           plusw0	equ	0xFEB
 24615                           wreg	equ	0xFE8
 24616                           indf1	equ	0xFE7
 24617                           postdec1	equ	0xFE5
 24618                           fsr1h	equ	0xFE2
 24619                           fsr1l	equ	0xFE1
 24620                           indf2	equ	0xFDF
 24621                           postinc2	equ	0xFDE
 24622                           postdec2	equ	0xFDD
 24623                           plusw2	equ	0xFDB
 24624                           fsr2h	equ	0xFDA
 24625                           fsr2l	equ	0xFD9
 24626                           status	equ	0xFD8
 24627                           
 24628 ;; *************** function _SetMemoryParity *****************
 24629 ;; Defined at:
 24630 ;;		line 190 in file "EEPROM.c"
 24631 ;; Parameters:    Size  Location     Type
 24632 ;;  Parity          1    wreg     unsigned char 
 24633 ;; Auto vars:     Size  Location     Type
 24634 ;;  Parity          1   19[BANK1 ] unsigned char 
 24635 ;;  Test            1   18[BANK1 ] unsigned char 
 24636 ;; Return value:  Size  Location     Type
 24637 ;;                  1    wreg      unsigned char 
 24638 ;; Registers used:
 24639 ;;		wreg, status,2, status,0, cstack
 24640 ;; Tracked objects:
 24641 ;;		On entry : 0/0
 24642 ;;		On exit  : 0/0
 24643 ;;		Unchanged: 0/0
 24644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24646 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24648 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24649 ;;Total ram usage:        2 bytes
 24650 ;; Hardware stack levels used:    1
 24651 ;; Hardware stack levels required when called:    9
 24652 ;; This function calls:
 24653 ;;		_GetMemoryParity
 24654 ;;		_WriteEEPROM_1Byte
 24655 ;; This function is called by:
 24656 ;;		_SetBaud
 24657 ;;		_SetEEPROM
 24658 ;; This function uses a non-reentrant model
 24659 ;;
 24660                           
 24661                           	psect	text52
 24662  000CB4                     __ptext52:
 24663                           	opt stack 0
 24664  000CB4                     _SetMemoryParity:
 24665                           	opt stack 20
 24666                           
 24667                           ; BSR set to: 1
 24668                           ;incstack = 0
 24669                           ;SetMemoryParity@Parity stored from wreg
 24670  000CB4  0101               	movlb	1	; () banked
 24671  000CB6  6F79               	movwf	SetMemoryParity@Parity& (0+255),b
 24672                           
 24673                           ; BSR set to: 1
 24674                           ;EEPROM.c: 192: unsigned char Test;
 24675                           ;EEPROM.c: 194: WriteEEPROM_1Byte(4, Parity);
 24676  000CB8  0E00               	movlw	0
 24677  000CBA  0101               	movlb	1	; () banked
 24678  000CBC  6F75               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 24679  000CBE  0E04               	movlw	4
 24680  000CC0  6F74               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 24681  000CC2  C179  F176         	movff	SetMemoryParity@Parity,WriteEEPROM_1Byte@data
 24682  000CC6  EC2F  F005         	call	_WriteEEPROM_1Byte	;wreg free
 24683                           
 24684                           ;EEPROM.c: 197: Test = GetMemoryParity();
 24685  000CCA  ECC3  F007         	call	_GetMemoryParity	;wreg free
 24686  000CCE  0101               	movlb	1	; () banked
 24687  000CD0  6F78               	movwf	SetMemoryParity@Test& (0+255),b
 24688                           
 24689                           ; BSR set to: 1
 24690                           ;EEPROM.c: 199: if(Test == Parity)
 24691  000CD2  0101               	movlb	1	; () banked
 24692  000CD4  5179               	movf	SetMemoryParity@Parity& (0+255),w,b
 24693  000CD6  0101               	movlb	1	; () banked
 24694  000CD8  1978               	xorwf	SetMemoryParity@Test& (0+255),w,b
 24695  000CDA  A4D8               	btfss	status,2,c
 24696  000CDC  D002               	goto	l13187
 24697                           
 24698                           ; BSR set to: 1
 24699                           ;EEPROM.c: 200: {
 24700                           ;EEPROM.c: 201: return 1;
 24701  000CDE  0E01               	movlw	1
 24702                           
 24703                           ; BSR set to: 1
 24704  000CE0  0012               	return	
 24705  000CE2                     l13187:
 24706                           
 24707                           ; BSR set to: 1
 24708                           ;EEPROM.c: 202: }
 24709                           ;EEPROM.c: 203: return 0;
 24710  000CE2  0E00               	movlw	0
 24711  000CE4  0012               	return	
 24712                           
 24713                           ; BSR set to: 1
 24714                           
 24715                           ; BSR set to: 1
 24716  000CE6  0012               	return		;funcret
 24717  000CE8                     __end_of_SetMemoryParity:
 24718                           	opt stack 0
 24719                           tblptru	equ	0xFF8
 24720                           tblptrh	equ	0xFF7
 24721                           tblptrl	equ	0xFF6
 24722                           tablat	equ	0xFF5
 24723                           prodh	equ	0xFF4
 24724                           prodl	equ	0xFF3
 24725                           intcon	equ	0xFF2
 24726                           intcon2	equ	0xFF1
 24727                           postinc0	equ	0xFEE
 24728                           plusw0	equ	0xFEB
 24729                           wreg	equ	0xFE8
 24730                           indf1	equ	0xFE7
 24731                           postdec1	equ	0xFE5
 24732                           fsr1h	equ	0xFE2
 24733                           fsr1l	equ	0xFE1
 24734                           indf2	equ	0xFDF
 24735                           postinc2	equ	0xFDE
 24736                           postdec2	equ	0xFDD
 24737                           plusw2	equ	0xFDB
 24738                           fsr2h	equ	0xFDA
 24739                           fsr2l	equ	0xFD9
 24740                           status	equ	0xFD8
 24741                           
 24742 ;; *************** function _GetMemoryParity *****************
 24743 ;; Defined at:
 24744 ;;		line 176 in file "EEPROM.c"
 24745 ;; Parameters:    Size  Location     Type
 24746 ;;		None
 24747 ;; Auto vars:     Size  Location     Type
 24748 ;;  Parity          1   17[BANK1 ] unsigned char 
 24749 ;; Return value:  Size  Location     Type
 24750 ;;                  1    wreg      unsigned char 
 24751 ;; Registers used:
 24752 ;;		wreg, status,2, status,0, cstack
 24753 ;; Tracked objects:
 24754 ;;		On entry : 0/0
 24755 ;;		On exit  : 0/0
 24756 ;;		Unchanged: 0/0
 24757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24759 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24761 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24762 ;;Total ram usage:        1 bytes
 24763 ;; Hardware stack levels used:    1
 24764 ;; Hardware stack levels required when called:    8
 24765 ;; This function calls:
 24766 ;;		_ReadEEPROM_1Byte
 24767 ;; This function is called by:
 24768 ;;		_SetMemoryParity
 24769 ;; This function uses a non-reentrant model
 24770 ;;
 24771                           
 24772                           	psect	text53
 24773  000F86                     __ptext53:
 24774                           	opt stack 0
 24775  000F86                     _GetMemoryParity:
 24776                           	opt stack 20
 24777                           
 24778                           ;EEPROM.c: 178: unsigned char Parity;
 24779                           ;EEPROM.c: 180: Parity = ReadEEPROM_1Byte(4);
 24780                           
 24781                           ; BSR set to: 1
 24782                           ;incstack = 0
 24783  000F86  0E00               	movlw	0
 24784  000F88  0101               	movlb	1	; () banked
 24785  000F8A  6F75               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 24786  000F8C  0E04               	movlw	4
 24787  000F8E  6F74               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 24788  000F90  ECCD  F005         	call	_ReadEEPROM_1Byte	;wreg free
 24789  000F94  0101               	movlb	1	; () banked
 24790  000F96  5174               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 24791  000F98  0101               	movlb	1	; () banked
 24792  000F9A  6F77               	movwf	GetMemoryParity@Parity& (0+255),b
 24793                           
 24794                           ; BSR set to: 1
 24795                           ;EEPROM.c: 182: return (Parity);
 24796  000F9C  0101               	movlb	1	; () banked
 24797  000F9E  5177               	movf	GetMemoryParity@Parity& (0+255),w,b
 24798  000FA0  0012               	return	
 24799                           
 24800                           ; BSR set to: 1
 24801                           
 24802                           ; BSR set to: 1
 24803  000FA2  0012               	return		;funcret
 24804  000FA4                     __end_of_GetMemoryParity:
 24805                           	opt stack 0
 24806                           tblptru	equ	0xFF8
 24807                           tblptrh	equ	0xFF7
 24808                           tblptrl	equ	0xFF6
 24809                           tablat	equ	0xFF5
 24810                           prodh	equ	0xFF4
 24811                           prodl	equ	0xFF3
 24812                           intcon	equ	0xFF2
 24813                           intcon2	equ	0xFF1
 24814                           postinc0	equ	0xFEE
 24815                           plusw0	equ	0xFEB
 24816                           wreg	equ	0xFE8
 24817                           indf1	equ	0xFE7
 24818                           postdec1	equ	0xFE5
 24819                           fsr1h	equ	0xFE2
 24820                           fsr1l	equ	0xFE1
 24821                           indf2	equ	0xFDF
 24822                           postinc2	equ	0xFDE
 24823                           postdec2	equ	0xFDD
 24824                           plusw2	equ	0xFDB
 24825                           fsr2h	equ	0xFDA
 24826                           fsr2l	equ	0xFD9
 24827                           status	equ	0xFD8
 24828                           
 24829 ;; *************** function _SetMemoryBaud *****************
 24830 ;; Defined at:
 24831 ;;		line 142 in file "EEPROM.c"
 24832 ;; Parameters:    Size  Location     Type
 24833 ;;  Baud            4   49[BANK1 ] unsigned long 
 24834 ;; Auto vars:     Size  Location     Type
 24835 ;;  Test            4   57[BANK1 ] unsigned long 
 24836 ;;  BaudTempL       1   64[BANK1 ] unsigned char 
 24837 ;;  BaudTempML      1   63[BANK1 ] unsigned char 
 24838 ;;  BaudTempMH      1   62[BANK1 ] unsigned char 
 24839 ;;  BaudTempH       1   61[BANK1 ] unsigned char 
 24840 ;; Return value:  Size  Location     Type
 24841 ;;                  1    wreg      unsigned char 
 24842 ;; Registers used:
 24843 ;;		wreg, status,2, status,0, cstack
 24844 ;; Tracked objects:
 24845 ;;		On entry : 0/0
 24846 ;;		On exit  : 0/0
 24847 ;;		Unchanged: 0/0
 24848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24849 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24850 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 24851 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24852 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 24853 ;;Total ram usage:       16 bytes
 24854 ;; Hardware stack levels used:    1
 24855 ;; Hardware stack levels required when called:    9
 24856 ;; This function calls:
 24857 ;;		_GetMemoryBaud
 24858 ;;		_WriteEEPROM_1Byte
 24859 ;; This function is called by:
 24860 ;;		_SetBaud
 24861 ;;		_SetEEPROM
 24862 ;; This function uses a non-reentrant model
 24863 ;;
 24864                           
 24865                           	psect	text54
 24866  016868                     __ptext54:
 24867                           	opt stack 0
 24868  016868                     _SetMemoryBaud:
 24869                           	opt stack 20
 24870                           
 24871                           ;EEPROM.c: 144: unsigned char BaudTempH;
 24872                           ;EEPROM.c: 145: unsigned char BaudTempMH;
 24873                           ;EEPROM.c: 146: unsigned char BaudTempML;
 24874                           ;EEPROM.c: 147: unsigned char BaudTempL;
 24875                           ;EEPROM.c: 148: unsigned long Test;
 24876                           ;EEPROM.c: 150: BaudTempH = (unsigned char) ((Baud & 0XFF000000) >> 24);
 24877                           
 24878                           ; BSR set to: 1
 24879                           ;incstack = 0
 24880  016868  0E00               	movlw	0
 24881  01686A  0101               	movlb	1	; () banked
 24882  01686C  1597               	andwf	SetMemoryBaud@Baud& (0+255),w,b
 24883  01686E  0101               	movlb	1	; () banked
 24884  016870  6F9B               	movwf	??_SetMemoryBaud& (0+255),b
 24885  016872  0E00               	movlw	0
 24886  016874  0101               	movlb	1	; () banked
 24887  016876  1598               	andwf	(SetMemoryBaud@Baud+1)& (0+255),w,b
 24888  016878  0101               	movlb	1	; () banked
 24889  01687A  6F9C               	movwf	(??_SetMemoryBaud+1)& (0+255),b
 24890  01687C  0E00               	movlw	0
 24891  01687E  0101               	movlb	1	; () banked
 24892  016880  1599               	andwf	(SetMemoryBaud@Baud+2)& (0+255),w,b
 24893  016882  0101               	movlb	1	; () banked
 24894  016884  6F9D               	movwf	(??_SetMemoryBaud+2)& (0+255),b
 24895  016886  0EFF               	movlw	255
 24896  016888  0101               	movlb	1	; () banked
 24897  01688A  159A               	andwf	(SetMemoryBaud@Baud+3)& (0+255),w,b
 24898  01688C  0101               	movlb	1	; () banked
 24899  01688E  6F9E               	movwf	(??_SetMemoryBaud+3)& (0+255),b
 24900  016890  0E19               	movlw	25
 24901  016892  D006               	goto	u16380
 24902  016894                     u16385:
 24903  016894  0101               	movlb	1	; () banked
 24904  016896  90D8               	bcf	status,0,c
 24905  016898  339E               	rrcf	(??_SetMemoryBaud+3)& (0+255),f,b
 24906  01689A  339D               	rrcf	(??_SetMemoryBaud+2)& (0+255),f,b
 24907  01689C  339C               	rrcf	(??_SetMemoryBaud+1)& (0+255),f,b
 24908  01689E  339B               	rrcf	??_SetMemoryBaud& (0+255),f,b
 24909  0168A0                     u16380:
 24910  0168A0  2EE8               	decfsz	wreg,f,c
 24911  0168A2  D7F8               	goto	u16385
 24912  0168A4  0101               	movlb	1	; () banked
 24913  0168A6  519B               	movf	??_SetMemoryBaud& (0+255),w,b
 24914  0168A8  0101               	movlb	1	; () banked
 24915  0168AA  6FA3               	movwf	SetMemoryBaud@BaudTempH& (0+255),b
 24916                           
 24917                           ; BSR set to: 1
 24918                           ;EEPROM.c: 151: BaudTempMH = (unsigned char) ((Baud & 0X00FF0000) >> 16);
 24919  0168AC  C199  F1A4         	movff	SetMemoryBaud@Baud+2,SetMemoryBaud@BaudTempMH
 24920                           
 24921                           ; BSR set to: 1
 24922                           ;EEPROM.c: 152: BaudTempML = (unsigned char) ((Baud & 0X0000FF00) >> 8);
 24923  0168B0  C198  F1A5         	movff	SetMemoryBaud@Baud+1,SetMemoryBaud@BaudTempML
 24924                           
 24925                           ; BSR set to: 1
 24926                           ;EEPROM.c: 153: BaudTempL = (unsigned char) (Baud & 0X000000FF);
 24927  0168B4  C197  F1A6         	movff	SetMemoryBaud@Baud,SetMemoryBaud@BaudTempL
 24928                           
 24929                           ; BSR set to: 1
 24930                           ;EEPROM.c: 156: WriteEEPROM_1Byte(0, BaudTempH);
 24931  0168B8  0E00               	movlw	0
 24932  0168BA  0101               	movlb	1	; () banked
 24933  0168BC  6F75               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 24934  0168BE  0E00               	movlw	0
 24935  0168C0  6F74               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 24936  0168C2  C1A3  F176         	movff	SetMemoryBaud@BaudTempH,WriteEEPROM_1Byte@data
 24937  0168C6  EC2F  F005         	call	_WriteEEPROM_1Byte	;wreg free
 24938                           
 24939                           ;EEPROM.c: 157: WriteEEPROM_1Byte(1, BaudTempMH);
 24940  0168CA  0E00               	movlw	0
 24941  0168CC  0101               	movlb	1	; () banked
 24942  0168CE  6F75               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 24943  0168D0  0E01               	movlw	1
 24944  0168D2  6F74               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 24945  0168D4  C1A4  F176         	movff	SetMemoryBaud@BaudTempMH,WriteEEPROM_1Byte@data
 24946  0168D8  EC2F  F005         	call	_WriteEEPROM_1Byte	;wreg free
 24947                           
 24948                           ;EEPROM.c: 158: WriteEEPROM_1Byte(2, BaudTempML);
 24949  0168DC  0E00               	movlw	0
 24950  0168DE  0101               	movlb	1	; () banked
 24951  0168E0  6F75               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 24952  0168E2  0E02               	movlw	2
 24953  0168E4  6F74               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 24954  0168E6  C1A5  F176         	movff	SetMemoryBaud@BaudTempML,WriteEEPROM_1Byte@data
 24955  0168EA  EC2F  F005         	call	_WriteEEPROM_1Byte	;wreg free
 24956                           
 24957                           ;EEPROM.c: 159: WriteEEPROM_1Byte(3, BaudTempL);
 24958  0168EE  0E00               	movlw	0
 24959  0168F0  0101               	movlb	1	; () banked
 24960  0168F2  6F75               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 24961  0168F4  0E03               	movlw	3
 24962  0168F6  6F74               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 24963  0168F8  C1A6  F176         	movff	SetMemoryBaud@BaudTempL,WriteEEPROM_1Byte@data
 24964  0168FC  EC2F  F005         	call	_WriteEEPROM_1Byte	;wreg free
 24965                           
 24966                           ;EEPROM.c: 162: Test = GetMemoryBaud();
 24967  016900  EC10  F0AC         	call	_GetMemoryBaud	;wreg free
 24968  016904  C177  F19F         	movff	?_GetMemoryBaud,SetMemoryBaud@Test
 24969  016908  C178  F1A0         	movff	?_GetMemoryBaud+1,SetMemoryBaud@Test+1
 24970  01690C  C179  F1A1         	movff	?_GetMemoryBaud+2,SetMemoryBaud@Test+2
 24971  016910  C17A  F1A2         	movff	?_GetMemoryBaud+3,SetMemoryBaud@Test+3
 24972                           
 24973                           ;EEPROM.c: 164: if(Test == Baud)
 24974  016914  0101               	movlb	1	; () banked
 24975  016916  5197               	movf	SetMemoryBaud@Baud& (0+255),w,b
 24976  016918  0101               	movlb	1	; () banked
 24977  01691A  199F               	xorwf	SetMemoryBaud@Test& (0+255),w,b
 24978  01691C  E112               	bnz	l13175
 24979  01691E  0101               	movlb	1	; () banked
 24980  016920  5198               	movf	(SetMemoryBaud@Baud+1)& (0+255),w,b
 24981  016922  0101               	movlb	1	; () banked
 24982  016924  19A0               	xorwf	(SetMemoryBaud@Test+1)& (0+255),w,b
 24983  016926  E10D               	bnz	l13175
 24984  016928  0101               	movlb	1	; () banked
 24985  01692A  5199               	movf	(SetMemoryBaud@Baud+2)& (0+255),w,b
 24986  01692C  0101               	movlb	1	; () banked
 24987  01692E  19A1               	xorwf	(SetMemoryBaud@Test+2)& (0+255),w,b
 24988  016930  E108               	bnz	l13175
 24989  016932  0101               	movlb	1	; () banked
 24990  016934  519A               	movf	(SetMemoryBaud@Baud+3)& (0+255),w,b
 24991  016936  0101               	movlb	1	; () banked
 24992  016938  19A2               	xorwf	(SetMemoryBaud@Test+3)& (0+255),w,b
 24993  01693A  A4D8               	btfss	status,2,c
 24994  01693C  D002               	goto	l13175
 24995                           
 24996                           ; BSR set to: 1
 24997                           ;EEPROM.c: 165: {
 24998                           ;EEPROM.c: 166: return 1;
 24999  01693E  0E01               	movlw	1
 25000                           
 25001                           ; BSR set to: 1
 25002  016940  0012               	return	
 25003  016942                     l13175:
 25004                           
 25005                           ; BSR set to: 1
 25006                           ;EEPROM.c: 167: }
 25007                           ;EEPROM.c: 168: return 0;
 25008  016942  0E00               	movlw	0
 25009  016944  0012               	return	
 25010                           
 25011                           ; BSR set to: 1
 25012                           
 25013                           ; BSR set to: 1
 25014  016946  0012               	return		;funcret
 25015  016948                     __end_of_SetMemoryBaud:
 25016                           	opt stack 0
 25017                           tblptru	equ	0xFF8
 25018                           tblptrh	equ	0xFF7
 25019                           tblptrl	equ	0xFF6
 25020                           tablat	equ	0xFF5
 25021                           prodh	equ	0xFF4
 25022                           prodl	equ	0xFF3
 25023                           intcon	equ	0xFF2
 25024                           intcon2	equ	0xFF1
 25025                           postinc0	equ	0xFEE
 25026                           plusw0	equ	0xFEB
 25027                           wreg	equ	0xFE8
 25028                           indf1	equ	0xFE7
 25029                           postdec1	equ	0xFE5
 25030                           fsr1h	equ	0xFE2
 25031                           fsr1l	equ	0xFE1
 25032                           indf2	equ	0xFDF
 25033                           postinc2	equ	0xFDE
 25034                           postdec2	equ	0xFDD
 25035                           plusw2	equ	0xFDB
 25036                           fsr2h	equ	0xFDA
 25037                           fsr2l	equ	0xFD9
 25038                           status	equ	0xFD8
 25039                           
 25040 ;; *************** function _WriteEEPROM_1Byte *****************
 25041 ;; Defined at:
 25042 ;;		line 94 in file "EEPROM.c"
 25043 ;; Parameters:    Size  Location     Type
 25044 ;;  address         2   14[BANK1 ] unsigned int 
 25045 ;;  data            1   16[BANK1 ] unsigned char 
 25046 ;; Auto vars:     Size  Location     Type
 25047 ;;  GIEstatus       1   17[BANK1 ] unsigned char 
 25048 ;; Return value:  Size  Location     Type
 25049 ;;		None               void
 25050 ;; Registers used:
 25051 ;;		wreg, status,2, status,0, cstack
 25052 ;; Tracked objects:
 25053 ;;		On entry : 0/0
 25054 ;;		On exit  : 0/0
 25055 ;;		Unchanged: 0/0
 25056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25057 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 25058 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25060 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 25061 ;;Total ram usage:        4 bytes
 25062 ;; Hardware stack levels used:    1
 25063 ;; Hardware stack levels required when called:    8
 25064 ;; This function calls:
 25065 ;;		_EEPROM_UNLOCK
 25066 ;; This function is called by:
 25067 ;;		_SetMemoryBaud
 25068 ;;		_SetMemoryParity
 25069 ;;		_SetMemoryLong
 25070 ;;		_SetMemoryInt
 25071 ;;		_SetMemoryChar
 25072 ;; This function uses a non-reentrant model
 25073 ;;
 25074                           
 25075                           	psect	text55
 25076  000A5E                     __ptext55:
 25077                           	opt stack 0
 25078  000A5E                     _WriteEEPROM_1Byte:
 25079                           	opt stack 20
 25080                           
 25081                           ;EEPROM.c: 96: unsigned char GIEstatus = INTCONbits.GIE;
 25082                           
 25083                           ; BSR set to: 1
 25084                           ;incstack = 0
 25085  000A5E  0E00               	movlw	0
 25086  000A60  BEF2               	btfsc	intcon,7,c	;volatile
 25087  000A62  0E01               	movlw	1
 25088  000A64  0101               	movlb	1	; () banked
 25089  000A66  6F77               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 25090                           
 25091                           ; BSR set to: 1
 25092                           ;EEPROM.c: 97: EEADRH = (unsigned char)((address & 0x300) >> 8);
 25093  000A68  0101               	movlb	1	; () banked
 25094  000A6A  5175               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 25095  000A6C  0B03               	andlw	3
 25096  000A6E  6EAA               	movwf	4010,c	;volatile
 25097                           
 25098                           ; BSR set to: 1
 25099                           ;EEPROM.c: 98: EEADR = (unsigned char)(address & 0xFF);
 25100  000A70  C174  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 25101                           
 25102                           ; BSR set to: 1
 25103                           ;EEPROM.c: 99: EEDATA = data;
 25104  000A74  C176  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 25105                           
 25106                           ; BSR set to: 1
 25107                           ;EEPROM.c: 100: EECON1bits.EEPGD = 0;
 25108  000A78  9EA6               	bcf	4006,7,c	;volatile
 25109                           
 25110                           ; BSR set to: 1
 25111                           ;EEPROM.c: 101: EECON1bits.CFGS = 0;
 25112  000A7A  9CA6               	bcf	4006,6,c	;volatile
 25113                           
 25114                           ; BSR set to: 1
 25115                           ;EEPROM.c: 102: EECON1bits.WREN =1;
 25116  000A7C  84A6               	bsf	4006,2,c	;volatile
 25117                           
 25118                           ; BSR set to: 1
 25119                           ;EEPROM.c: 103: INTCONbits.GIE =0;
 25120  000A7E  9EF2               	bcf	intcon,7,c	;volatile
 25121                           
 25122                           ; BSR set to: 1
 25123                           ;EEPROM.c: 104: EEPROM_UNLOCK();
 25124  000A80  EC13  F008         	call	_EEPROM_UNLOCK	;wreg free
 25125                           
 25126                           ;EEPROM.c: 105: EECON1bits.WR =1;
 25127  000A84  82A6               	bsf	4006,1,c	;volatile
 25128                           
 25129                           ;EEPROM.c: 106: while(EECON1bits.WR);
 25130  000A86  D000               	goto	l1586
 25131  000A88                     l1586:
 25132  000A88  B2A6               	btfsc	4006,1,c	;volatile
 25133  000A8A  D7FE               	goto	l1586
 25134                           
 25135                           ;EEPROM.c: 107: EECON1bits.WREN =0;
 25136  000A8C  94A6               	bcf	4006,2,c	;volatile
 25137                           
 25138                           ;EEPROM.c: 108: if(GIEstatus)
 25139  000A8E  0101               	movlb	1	; () banked
 25140  000A90  5177               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 25141  000A92  0101               	movlb	1	; () banked
 25142  000A94  B4D8               	btfsc	status,2,c
 25143  000A96  0012               	return	
 25144                           
 25145                           ; BSR set to: 1
 25146                           ;EEPROM.c: 109: {
 25147                           ;EEPROM.c: 110: INTCONbits.GIE =1;
 25148  000A98  8EF2               	bsf	intcon,7,c	;volatile
 25149  000A9A  0012               	return	
 25150                           
 25151                           ; BSR set to: 1
 25152                           
 25153                           ; BSR set to: 1
 25154  000A9C  0012               	return		;funcret
 25155  000A9E                     __end_of_WriteEEPROM_1Byte:
 25156                           	opt stack 0
 25157                           tblptru	equ	0xFF8
 25158                           tblptrh	equ	0xFF7
 25159                           tblptrl	equ	0xFF6
 25160                           tablat	equ	0xFF5
 25161                           prodh	equ	0xFF4
 25162                           prodl	equ	0xFF3
 25163                           intcon	equ	0xFF2
 25164                           intcon2	equ	0xFF1
 25165                           postinc0	equ	0xFEE
 25166                           plusw0	equ	0xFEB
 25167                           wreg	equ	0xFE8
 25168                           indf1	equ	0xFE7
 25169                           postdec1	equ	0xFE5
 25170                           fsr1h	equ	0xFE2
 25171                           fsr1l	equ	0xFE1
 25172                           indf2	equ	0xFDF
 25173                           postinc2	equ	0xFDE
 25174                           postdec2	equ	0xFDD
 25175                           plusw2	equ	0xFDB
 25176                           fsr2h	equ	0xFDA
 25177                           fsr2l	equ	0xFD9
 25178                           status	equ	0xFD8
 25179                           
 25180 ;; *************** function _EEPROM_UNLOCK *****************
 25181 ;; Defined at:
 25182 ;;		line 79 in file "EEPROM.c"
 25183 ;; Parameters:    Size  Location     Type
 25184 ;;		None
 25185 ;; Auto vars:     Size  Location     Type
 25186 ;;		None
 25187 ;; Return value:  Size  Location     Type
 25188 ;;		None               void
 25189 ;; Registers used:
 25190 ;;		wreg, status,2
 25191 ;; Tracked objects:
 25192 ;;		On entry : 0/0
 25193 ;;		On exit  : 0/0
 25194 ;;		Unchanged: 0/0
 25195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25200 ;;Total ram usage:        0 bytes
 25201 ;; Hardware stack levels used:    1
 25202 ;; Hardware stack levels required when called:    7
 25203 ;; This function calls:
 25204 ;;		Nothing
 25205 ;; This function is called by:
 25206 ;;		_WriteEEPROM_1Byte
 25207 ;; This function uses a non-reentrant model
 25208 ;;
 25209                           
 25210                           	psect	text56
 25211  001026                     __ptext56:
 25212                           	opt stack 0
 25213  001026                     _EEPROM_UNLOCK:
 25214                           	opt stack 20
 25215                           
 25216                           ;EEPROM.c: 81: EECON2 = 0x55;
 25217                           
 25218                           ; BSR set to: 1
 25219                           ;incstack = 0
 25220  001026  0E55               	movlw	85
 25221  001028  6EA7               	movwf	4007,c	;volatile
 25222                           
 25223                           ;EEPROM.c: 82: EECON2 = 0xAA;
 25224  00102A  0EAA               	movlw	170
 25225  00102C  6EA7               	movwf	4007,c	;volatile
 25226                           
 25227                           ;EEPROM.c: 83: EECON1bits.WR =1;
 25228  00102E  82A6               	bsf	4006,1,c	;volatile
 25229                           
 25230                           ;EEPROM.c: 84: while(EECON1bits.WR);
 25231  001030  D000               	goto	l1580
 25232  001032                     l1580:
 25233  001032  B2A6               	btfsc	4006,1,c	;volatile
 25234  001034  D7FE               	goto	l1580
 25235                           
 25236                           ;EEPROM.c: 85: __nop();
 25237  001036  F000               	nop	
 25238                           
 25239                           ;EEPROM.c: 86: __nop();
 25240  001038  F000               	nop	
 25241  00103A  0012               	return		;funcret
 25242  00103C                     __end_of_EEPROM_UNLOCK:
 25243                           	opt stack 0
 25244                           tblptru	equ	0xFF8
 25245                           tblptrh	equ	0xFF7
 25246                           tblptrl	equ	0xFF6
 25247                           tablat	equ	0xFF5
 25248                           prodh	equ	0xFF4
 25249                           prodl	equ	0xFF3
 25250                           intcon	equ	0xFF2
 25251                           intcon2	equ	0xFF1
 25252                           postinc0	equ	0xFEE
 25253                           plusw0	equ	0xFEB
 25254                           wreg	equ	0xFE8
 25255                           indf1	equ	0xFE7
 25256                           postdec1	equ	0xFE5
 25257                           fsr1h	equ	0xFE2
 25258                           fsr1l	equ	0xFE1
 25259                           indf2	equ	0xFDF
 25260                           postinc2	equ	0xFDE
 25261                           postdec2	equ	0xFDD
 25262                           plusw2	equ	0xFDB
 25263                           fsr2h	equ	0xFDA
 25264                           fsr2l	equ	0xFD9
 25265                           status	equ	0xFD8
 25266                           
 25267 ;; *************** function _GetMemoryBaud *****************
 25268 ;; Defined at:
 25269 ;;		line 119 in file "EEPROM.c"
 25270 ;; Parameters:    Size  Location     Type
 25271 ;;		None
 25272 ;; Auto vars:     Size  Location     Type
 25273 ;;  baud            4   41[BANK1 ] unsigned long 
 25274 ;;  BaudTempL       1   48[BANK1 ] unsigned char 
 25275 ;;  BaudTempML      1   47[BANK1 ] unsigned char 
 25276 ;;  BaudTempMH      1   46[BANK1 ] unsigned char 
 25277 ;;  BaudTempH       1   45[BANK1 ] unsigned char 
 25278 ;; Return value:  Size  Location     Type
 25279 ;;                  4   17[BANK1 ] unsigned long 
 25280 ;; Registers used:
 25281 ;;		wreg, status,2, status,0, cstack
 25282 ;; Tracked objects:
 25283 ;;		On entry : 0/0
 25284 ;;		On exit  : 0/0
 25285 ;;		Unchanged: 0/0
 25286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25287 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 25288 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 25289 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 25290 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
 25291 ;;Total ram usage:       32 bytes
 25292 ;; Hardware stack levels used:    1
 25293 ;; Hardware stack levels required when called:    8
 25294 ;; This function calls:
 25295 ;;		_ReadEEPROM_1Byte
 25296 ;; This function is called by:
 25297 ;;		_SetMemoryBaud
 25298 ;;		_GetEEPROM
 25299 ;; This function uses a non-reentrant model
 25300 ;;
 25301                           
 25302                           	psect	text57
 25303  015820                     __ptext57:
 25304                           	opt stack 0
 25305  015820                     _GetMemoryBaud:
 25306                           	opt stack 20
 25307                           
 25308                           ;EEPROM.c: 121: unsigned char BaudTempH;
 25309                           ;EEPROM.c: 122: unsigned char BaudTempMH;
 25310                           ;EEPROM.c: 123: unsigned char BaudTempML;
 25311                           ;EEPROM.c: 124: unsigned char BaudTempL;
 25312                           ;EEPROM.c: 125: unsigned long baud =0;
 25313                           
 25314                           ;incstack = 0
 25315  015820  0E00               	movlw	0
 25316  015822  0101               	movlb	1	; () banked
 25317  015824  6F8F               	movwf	GetMemoryBaud@baud& (0+255),b
 25318  015826  0E00               	movlw	0
 25319  015828  6F90               	movwf	(GetMemoryBaud@baud+1)& (0+255),b
 25320  01582A  0E00               	movlw	0
 25321  01582C  6F91               	movwf	(GetMemoryBaud@baud+2)& (0+255),b
 25322  01582E  0E00               	movlw	0
 25323  015830  6F92               	movwf	(GetMemoryBaud@baud+3)& (0+255),b
 25324                           
 25325                           ; BSR set to: 1
 25326                           ;EEPROM.c: 127: BaudTempH = ReadEEPROM_1Byte(0);
 25327  015832  0E00               	movlw	0
 25328  015834  0101               	movlb	1	; () banked
 25329  015836  6F75               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 25330  015838  0E00               	movlw	0
 25331  01583A  6F74               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 25332  01583C  ECCD  F005         	call	_ReadEEPROM_1Byte	;wreg free
 25333  015840  0101               	movlb	1	; () banked
 25334  015842  5174               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 25335  015844  0101               	movlb	1	; () banked
 25336  015846  6F93               	movwf	GetMemoryBaud@BaudTempH& (0+255),b
 25337                           
 25338                           ; BSR set to: 1
 25339                           ;EEPROM.c: 128: BaudTempMH = ReadEEPROM_1Byte(1);
 25340  015848  0E00               	movlw	0
 25341  01584A  0101               	movlb	1	; () banked
 25342  01584C  6F75               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 25343  01584E  0E01               	movlw	1
 25344  015850  6F74               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 25345  015852  ECCD  F005         	call	_ReadEEPROM_1Byte	;wreg free
 25346  015856  0101               	movlb	1	; () banked
 25347  015858  5174               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 25348  01585A  0101               	movlb	1	; () banked
 25349  01585C  6F94               	movwf	GetMemoryBaud@BaudTempMH& (0+255),b
 25350                           
 25351                           ; BSR set to: 1
 25352                           ;EEPROM.c: 129: BaudTempML = ReadEEPROM_1Byte(2);
 25353  01585E  0E00               	movlw	0
 25354  015860  0101               	movlb	1	; () banked
 25355  015862  6F75               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 25356  015864  0E02               	movlw	2
 25357  015866  6F74               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 25358  015868  ECCD  F005         	call	_ReadEEPROM_1Byte	;wreg free
 25359  01586C  0101               	movlb	1	; () banked
 25360  01586E  5174               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 25361  015870  0101               	movlb	1	; () banked
 25362  015872  6F95               	movwf	GetMemoryBaud@BaudTempML& (0+255),b
 25363                           
 25364                           ; BSR set to: 1
 25365                           ;EEPROM.c: 130: BaudTempL = ReadEEPROM_1Byte(3);
 25366  015874  0E00               	movlw	0
 25367  015876  0101               	movlb	1	; () banked
 25368  015878  6F75               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 25369  01587A  0E03               	movlw	3
 25370  01587C  6F74               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 25371  01587E  ECCD  F005         	call	_ReadEEPROM_1Byte	;wreg free
 25372  015882  0101               	movlb	1	; () banked
 25373  015884  5174               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 25374  015886  0101               	movlb	1	; () banked
 25375  015888  6F96               	movwf	GetMemoryBaud@BaudTempL& (0+255),b
 25376                           
 25377                           ; BSR set to: 1
 25378                           ;EEPROM.c: 132: baud = (((unsigned long) BaudTempH << 24) + ((unsigned long)BaudTempMH <
      +                          < 16)
 25379                           ;EEPROM.c: 133: + ((unsigned long)BaudTempML << 8) + (unsigned long)BaudTempL);
 25380  01588A  C195  F17B         	movff	GetMemoryBaud@BaudTempML,??_GetMemoryBaud
 25381  01588E  0101               	movlb	1	; () banked
 25382  015890  6B7C               	clrf	(??_GetMemoryBaud+1)& (0+255),b
 25383  015892  6B7D               	clrf	(??_GetMemoryBaud+2)& (0+255),b
 25384  015894  6B7E               	clrf	(??_GetMemoryBaud+3)& (0+255),b
 25385  015896  C17D  F17E         	movff	??_GetMemoryBaud+2,??_GetMemoryBaud+3
 25386  01589A  C17C  F17D         	movff	??_GetMemoryBaud+1,??_GetMemoryBaud+2
 25387  01589E  C17B  F17C         	movff	??_GetMemoryBaud,??_GetMemoryBaud+1
 25388  0158A2  0101               	movlb	1	; () banked
 25389  0158A4  6B7B               	clrf	??_GetMemoryBaud& (0+255),b
 25390  0158A6  C194  F17F         	movff	GetMemoryBaud@BaudTempMH,??_GetMemoryBaud+4
 25391  0158AA  0101               	movlb	1	; () banked
 25392  0158AC  6B80               	clrf	(??_GetMemoryBaud+5)& (0+255),b
 25393  0158AE  6B81               	clrf	(??_GetMemoryBaud+6)& (0+255),b
 25394  0158B0  6B82               	clrf	(??_GetMemoryBaud+7)& (0+255),b
 25395  0158B2  C180  F182         	movff	??_GetMemoryBaud+5,??_GetMemoryBaud+7
 25396  0158B6  C17F  F181         	movff	??_GetMemoryBaud+4,??_GetMemoryBaud+6
 25397  0158BA  0101               	movlb	1	; () banked
 25398  0158BC  6B80               	clrf	(??_GetMemoryBaud+5)& (0+255),b
 25399  0158BE  6B7F               	clrf	(??_GetMemoryBaud+4)& (0+255),b
 25400  0158C0  C193  F183         	movff	GetMemoryBaud@BaudTempH,??_GetMemoryBaud+8
 25401  0158C4  0101               	movlb	1	; () banked
 25402  0158C6  6B84               	clrf	(??_GetMemoryBaud+9)& (0+255),b
 25403  0158C8  6B85               	clrf	(??_GetMemoryBaud+10)& (0+255),b
 25404  0158CA  6B86               	clrf	(??_GetMemoryBaud+11)& (0+255),b
 25405  0158CC  C183  F186         	movff	??_GetMemoryBaud+8,??_GetMemoryBaud+11
 25406  0158D0  0101               	movlb	1	; () banked
 25407  0158D2  6B85               	clrf	(??_GetMemoryBaud+10)& (0+255),b
 25408  0158D4  6B84               	clrf	(??_GetMemoryBaud+9)& (0+255),b
 25409  0158D6  6B83               	clrf	(??_GetMemoryBaud+8)& (0+255),b
 25410  0158D8  0101               	movlb	1	; () banked
 25411  0158DA  517F               	movf	(??_GetMemoryBaud+4)& (0+255),w,b
 25412  0158DC  0101               	movlb	1	; () banked
 25413  0158DE  2583               	addwf	(??_GetMemoryBaud+8)& (0+255),w,b
 25414  0158E0  0101               	movlb	1	; () banked
 25415  0158E2  6F87               	movwf	(??_GetMemoryBaud+12)& (0+255),b
 25416  0158E4  0101               	movlb	1	; () banked
 25417  0158E6  5180               	movf	(??_GetMemoryBaud+5)& (0+255),w,b
 25418  0158E8  0101               	movlb	1	; () banked
 25419  0158EA  2184               	addwfc	(??_GetMemoryBaud+9)& (0+255),w,b
 25420  0158EC  0101               	movlb	1	; () banked
 25421  0158EE  6F88               	movwf	(??_GetMemoryBaud+13)& (0+255),b
 25422  0158F0  0101               	movlb	1	; () banked
 25423  0158F2  5181               	movf	(??_GetMemoryBaud+6)& (0+255),w,b
 25424  0158F4  0101               	movlb	1	; () banked
 25425  0158F6  2185               	addwfc	(??_GetMemoryBaud+10)& (0+255),w,b
 25426  0158F8  0101               	movlb	1	; () banked
 25427  0158FA  6F89               	movwf	(??_GetMemoryBaud+14)& (0+255),b
 25428  0158FC  0101               	movlb	1	; () banked
 25429  0158FE  5182               	movf	(??_GetMemoryBaud+7)& (0+255),w,b
 25430  015900  0101               	movlb	1	; () banked
 25431  015902  2186               	addwfc	(??_GetMemoryBaud+11)& (0+255),w,b
 25432  015904  0101               	movlb	1	; () banked
 25433  015906  6F8A               	movwf	(??_GetMemoryBaud+15)& (0+255),b
 25434  015908  0101               	movlb	1	; () banked
 25435  01590A  517B               	movf	??_GetMemoryBaud& (0+255),w,b
 25436  01590C  0101               	movlb	1	; () banked
 25437  01590E  2587               	addwf	(??_GetMemoryBaud+12)& (0+255),w,b
 25438  015910  0101               	movlb	1	; () banked
 25439  015912  6F8B               	movwf	(??_GetMemoryBaud+16)& (0+255),b
 25440  015914  0101               	movlb	1	; () banked
 25441  015916  517C               	movf	(??_GetMemoryBaud+1)& (0+255),w,b
 25442  015918  0101               	movlb	1	; () banked
 25443  01591A  2188               	addwfc	(??_GetMemoryBaud+13)& (0+255),w,b
 25444  01591C  0101               	movlb	1	; () banked
 25445  01591E  6F8C               	movwf	(??_GetMemoryBaud+17)& (0+255),b
 25446  015920  0101               	movlb	1	; () banked
 25447  015922  517D               	movf	(??_GetMemoryBaud+2)& (0+255),w,b
 25448  015924  0101               	movlb	1	; () banked
 25449  015926  2189               	addwfc	(??_GetMemoryBaud+14)& (0+255),w,b
 25450  015928  0101               	movlb	1	; () banked
 25451  01592A  6F8D               	movwf	(??_GetMemoryBaud+18)& (0+255),b
 25452  01592C  0101               	movlb	1	; () banked
 25453  01592E  517E               	movf	(??_GetMemoryBaud+3)& (0+255),w,b
 25454  015930  0101               	movlb	1	; () banked
 25455  015932  218A               	addwfc	(??_GetMemoryBaud+15)& (0+255),w,b
 25456  015934  0101               	movlb	1	; () banked
 25457  015936  6F8E               	movwf	(??_GetMemoryBaud+19)& (0+255),b
 25458  015938  0101               	movlb	1	; () banked
 25459  01593A  5196               	movf	GetMemoryBaud@BaudTempL& (0+255),w,b
 25460  01593C  0101               	movlb	1	; () banked
 25461  01593E  258B               	addwf	(??_GetMemoryBaud+16)& (0+255),w,b
 25462  015940  0101               	movlb	1	; () banked
 25463  015942  6F8F               	movwf	GetMemoryBaud@baud& (0+255),b
 25464  015944  0E00               	movlw	0
 25465  015946  0101               	movlb	1	; () banked
 25466  015948  218C               	addwfc	(??_GetMemoryBaud+17)& (0+255),w,b
 25467  01594A  0101               	movlb	1	; () banked
 25468  01594C  6F90               	movwf	(GetMemoryBaud@baud+1)& (0+255),b
 25469  01594E  0E00               	movlw	0
 25470  015950  0101               	movlb	1	; () banked
 25471  015952  218D               	addwfc	(??_GetMemoryBaud+18)& (0+255),w,b
 25472  015954  0101               	movlb	1	; () banked
 25473  015956  6F91               	movwf	(GetMemoryBaud@baud+2)& (0+255),b
 25474  015958  0E00               	movlw	0
 25475  01595A  0101               	movlb	1	; () banked
 25476  01595C  218E               	addwfc	(??_GetMemoryBaud+19)& (0+255),w,b
 25477  01595E  0101               	movlb	1	; () banked
 25478  015960  6F92               	movwf	(GetMemoryBaud@baud+3)& (0+255),b
 25479                           
 25480                           ; BSR set to: 1
 25481                           ;EEPROM.c: 134: return baud;
 25482  015962  C18F  F177         	movff	GetMemoryBaud@baud,?_GetMemoryBaud
 25483  015966  C190  F178         	movff	GetMemoryBaud@baud+1,?_GetMemoryBaud+1
 25484  01596A  C191  F179         	movff	GetMemoryBaud@baud+2,?_GetMemoryBaud+2
 25485  01596E  C192  F17A         	movff	GetMemoryBaud@baud+3,?_GetMemoryBaud+3
 25486  015972  0012               	return	
 25487                           
 25488                           ; BSR set to: 1
 25489                           
 25490                           ; BSR set to: 1
 25491  015974  0012               	return		;funcret
 25492  015976                     __end_of_GetMemoryBaud:
 25493                           	opt stack 0
 25494                           tblptru	equ	0xFF8
 25495                           tblptrh	equ	0xFF7
 25496                           tblptrl	equ	0xFF6
 25497                           tablat	equ	0xFF5
 25498                           prodh	equ	0xFF4
 25499                           prodl	equ	0xFF3
 25500                           intcon	equ	0xFF2
 25501                           intcon2	equ	0xFF1
 25502                           postinc0	equ	0xFEE
 25503                           plusw0	equ	0xFEB
 25504                           wreg	equ	0xFE8
 25505                           indf1	equ	0xFE7
 25506                           postdec1	equ	0xFE5
 25507                           fsr1h	equ	0xFE2
 25508                           fsr1l	equ	0xFE1
 25509                           indf2	equ	0xFDF
 25510                           postinc2	equ	0xFDE
 25511                           postdec2	equ	0xFDD
 25512                           plusw2	equ	0xFDB
 25513                           fsr2h	equ	0xFDA
 25514                           fsr2l	equ	0xFD9
 25515                           status	equ	0xFD8
 25516                           
 25517 ;; *************** function _ReadEEPROM_1Byte *****************
 25518 ;; Defined at:
 25519 ;;		line 54 in file "EEPROM.c"
 25520 ;; Parameters:    Size  Location     Type
 25521 ;;  address         2   14[BANK1 ] unsigned int 
 25522 ;; Auto vars:     Size  Location     Type
 25523 ;;  GIEstatus       1   16[BANK1 ] unsigned char 
 25524 ;; Return value:  Size  Location     Type
 25525 ;;                  2   14[BANK1 ] unsigned int 
 25526 ;; Registers used:
 25527 ;;		wreg, status,2, status,0
 25528 ;; Tracked objects:
 25529 ;;		On entry : 0/0
 25530 ;;		On exit  : 0/0
 25531 ;;		Unchanged: 0/0
 25532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25533 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25534 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25536 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 25537 ;;Total ram usage:        3 bytes
 25538 ;; Hardware stack levels used:    1
 25539 ;; Hardware stack levels required when called:    7
 25540 ;; This function calls:
 25541 ;;		Nothing
 25542 ;; This function is called by:
 25543 ;;		_GetMemoryBaud
 25544 ;;		_GetMemoryParity
 25545 ;;		_GetMemoryLong
 25546 ;;		_GetMemoryChar
 25547 ;;		_GetMemoryInt
 25548 ;; This function uses a non-reentrant model
 25549 ;;
 25550                           
 25551                           	psect	text58
 25552  000B9A                     __ptext58:
 25553                           	opt stack 0
 25554  000B9A                     _ReadEEPROM_1Byte:
 25555                           	opt stack 20
 25556                           
 25557                           ;EEPROM.c: 56: unsigned char GIEstatus = INTCONbits.GIE;
 25558                           
 25559                           ; BSR set to: 1
 25560                           ;incstack = 0
 25561  000B9A  0E00               	movlw	0
 25562  000B9C  BEF2               	btfsc	intcon,7,c	;volatile
 25563  000B9E  0E01               	movlw	1
 25564  000BA0  0101               	movlb	1	; () banked
 25565  000BA2  6F76               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 25566                           
 25567                           ; BSR set to: 1
 25568                           ;EEPROM.c: 57: EECON1bits.EEPGD = 0;
 25569  000BA4  9EA6               	bcf	4006,7,c	;volatile
 25570                           
 25571                           ; BSR set to: 1
 25572                           ;EEPROM.c: 58: EECON1bits.CFGS = 0;
 25573  000BA6  9CA6               	bcf	4006,6,c	;volatile
 25574                           
 25575                           ; BSR set to: 1
 25576                           ;EEPROM.c: 59: EEADRH = (unsigned char)((address & 0x300) >> 8);
 25577  000BA8  0101               	movlb	1	; () banked
 25578  000BAA  5175               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 25579  000BAC  0B03               	andlw	3
 25580  000BAE  6EAA               	movwf	4010,c	;volatile
 25581                           
 25582                           ; BSR set to: 1
 25583                           ;EEPROM.c: 60: EEADR = (unsigned char)(address & 0xFF);
 25584  000BB0  C174  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 25585                           
 25586                           ; BSR set to: 1
 25587                           ;EEPROM.c: 61: INTCONbits.GIE =0;
 25588  000BB4  9EF2               	bcf	intcon,7,c	;volatile
 25589                           
 25590                           ; BSR set to: 1
 25591                           ;EEPROM.c: 62: EECON1bits.RD = 1;
 25592  000BB6  80A6               	bsf	4006,0,c	;volatile
 25593                           
 25594                           ;EEPROM.c: 63: while(EECON1bits.RD);
 25595  000BB8  D000               	goto	l1573
 25596  000BBA                     l1573:
 25597  000BBA  B0A6               	btfsc	4006,0,c	;volatile
 25598  000BBC  D7FE               	goto	l1573
 25599                           
 25600                           ;EEPROM.c: 64: __nop();
 25601  000BBE  F000               	nop	
 25602                           
 25603                           ;EEPROM.c: 65: __nop();
 25604  000BC0  F000               	nop	
 25605                           
 25606                           ;EEPROM.c: 66: if(GIEstatus)
 25607  000BC2  0101               	movlb	1	; () banked
 25608  000BC4  5176               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 25609  000BC6  0101               	movlb	1	; () banked
 25610  000BC8  A4D8               	btfss	status,2,c
 25611                           
 25612                           ; BSR set to: 1
 25613                           ;EEPROM.c: 67: {
 25614                           ;EEPROM.c: 68: INTCONbits.GIE =1;
 25615  000BCA  8EF2               	bsf	intcon,7,c	;volatile
 25616                           
 25617                           ; BSR set to: 1
 25618                           ;EEPROM.c: 69: }
 25619                           ;EEPROM.c: 70: return (EEDATA);
 25620  000BCC  CFA8 F174          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 25621  000BD0  0101               	movlb	1	; () banked
 25622  000BD2  6B75               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 25623                           
 25624                           ; BSR set to: 1
 25625  000BD4  0012               	return		;funcret
 25626  000BD6                     __end_of_ReadEEPROM_1Byte:
 25627                           	opt stack 0
 25628                           tblptru	equ	0xFF8
 25629                           tblptrh	equ	0xFF7
 25630                           tblptrl	equ	0xFF6
 25631                           tablat	equ	0xFF5
 25632                           prodh	equ	0xFF4
 25633                           prodl	equ	0xFF3
 25634                           intcon	equ	0xFF2
 25635                           intcon2	equ	0xFF1
 25636                           postinc0	equ	0xFEE
 25637                           plusw0	equ	0xFEB
 25638                           wreg	equ	0xFE8
 25639                           indf1	equ	0xFE7
 25640                           postdec1	equ	0xFE5
 25641                           fsr1h	equ	0xFE2
 25642                           fsr1l	equ	0xFE1
 25643                           indf2	equ	0xFDF
 25644                           postinc2	equ	0xFDE
 25645                           postdec2	equ	0xFDD
 25646                           plusw2	equ	0xFDB
 25647                           fsr2h	equ	0xFDA
 25648                           fsr2l	equ	0xFD9
 25649                           status	equ	0xFD8
 25650                           
 25651 ;; *************** function _InitUART *****************
 25652 ;; Defined at:
 25653 ;;		line 67 in file "UART.c"
 25654 ;; Parameters:    Size  Location     Type
 25655 ;;  Baud            4   27[BANK1 ] unsigned long 
 25656 ;;  parity          1   31[BANK1 ] unsigned char 
 25657 ;; Auto vars:     Size  Location     Type
 25658 ;;  temp            4   40[BANK1 ] unsigned long 
 25659 ;;  spbrg           2   36[BANK1 ] unsigned int 
 25660 ;;  config          1   39[BANK1 ] unsigned char 
 25661 ;;  baudconfig      1   38[BANK1 ] unsigned char 
 25662 ;; Return value:  Size  Location     Type
 25663 ;;		None               void
 25664 ;; Registers used:
 25665 ;;		wreg, status,2, status,0, cstack
 25666 ;; Tracked objects:
 25667 ;;		On entry : 0/0
 25668 ;;		On exit  : 0/0
 25669 ;;		Unchanged: 0/0
 25670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25671 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 25672 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 25673 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 25674 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
 25675 ;;Total ram usage:       17 bytes
 25676 ;; Hardware stack levels used:    1
 25677 ;; Hardware stack levels required when called:    8
 25678 ;; This function calls:
 25679 ;;		_OpenUSART
 25680 ;;		_ReadUSART
 25681 ;;		___lldiv
 25682 ;;		_baudUSART
 25683 ;; This function is called by:
 25684 ;;		_main
 25685 ;;		_SetBaud
 25686 ;; This function uses a non-reentrant model
 25687 ;;
 25688                           
 25689                           	psect	text59
 25690  0156B6                     __ptext59:
 25691                           	opt stack 0
 25692  0156B6                     _InitUART:
 25693                           	opt stack 22
 25694                           
 25695                           ;UART.c: 69: unsigned long temp;
 25696                           ;UART.c: 70: unsigned char config;
 25697                           ;UART.c: 71: unsigned int spbrg;
 25698                           ;UART.c: 72: unsigned char baudconfig;
 25699                           ;UART.c: 82: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
 25700                           
 25701                           ; BSR set to: 1
 25702                           ;incstack = 0
 25703  0156B6  0E4F               	movlw	79
 25704  0156B8  16AB               	andwf	4011,f,c	;volatile
 25705  0156BA  9AAC               	bcf	4012,5,c	;volatile
 25706  0156BC  0ECF               	movlw	207
 25707  0156BE  169D               	andwf	3997,f,c	;volatile
 25708                           
 25709                           ;UART.c: 83: config =0;
 25710  0156C0  0E00               	movlw	0
 25711  0156C2  0101               	movlb	1	; () banked
 25712  0156C4  6F8D               	movwf	InitUART@config& (0+255),b
 25713                           
 25714                           ; BSR set to: 1
 25715                           ;UART.c: 84: baudconfig =0;
 25716  0156C6  0E00               	movlw	0
 25717  0156C8  0101               	movlb	1	; () banked
 25718  0156CA  6F8C               	movwf	InitUART@baudconfig& (0+255),b
 25719                           
 25720                           ; BSR set to: 1
 25721                           ;UART.c: 85: BAUDCON =0;
 25722  0156CC  0E00               	movlw	0
 25723  0156CE  6EB8               	movwf	4024,c	;volatile
 25724                           
 25725                           ; BSR set to: 1
 25726                           ;UART.c: 89: config |= 0b01000000;
 25727  0156D0  0101               	movlb	1	; () banked
 25728  0156D2  8D8D               	bsf	InitUART@config& (0+255),6,b
 25729                           
 25730                           ; BSR set to: 1
 25731                           ;UART.c: 90: config |= 0b00001000;
 25732  0156D4  0101               	movlb	1	; () banked
 25733  0156D6  878D               	bsf	InitUART@config& (0+255),3,b
 25734                           
 25735                           ; BSR set to: 1
 25736                           ;UART.c: 92: config |= 0b00010000;
 25737  0156D8  0101               	movlb	1	; () banked
 25738  0156DA  898D               	bsf	InitUART@config& (0+255),4,b
 25739                           
 25740                           ; BSR set to: 1
 25741                           ;UART.c: 94: if(parity)
 25742  0156DC  0101               	movlb	1	; () banked
 25743  0156DE  5185               	movf	InitUART@parity& (0+255),w,b
 25744  0156E0  0101               	movlb	1	; () banked
 25745  0156E2  B4D8               	btfsc	status,2,c
 25746  0156E4  D003               	goto	l12759
 25747                           
 25748                           ; BSR set to: 1
 25749                           ;UART.c: 95: {
 25750                           ;UART.c: 96: config |= 0b00000010;
 25751  0156E6  0101               	movlb	1	; () banked
 25752  0156E8  838D               	bsf	InitUART@config& (0+255),1,b
 25753                           
 25754                           ;UART.c: 97: }
 25755  0156EA  D002               	goto	l485
 25756  0156EC                     l12759:
 25757                           
 25758                           ; BSR set to: 1
 25759                           ;UART.c: 98: else
 25760                           ;UART.c: 99: {
 25761                           ;UART.c: 100: config &= ~0b00000010;
 25762  0156EC  0101               	movlb	1	; () banked
 25763  0156EE  938D               	bcf	InitUART@config& (0+255),1,b
 25764  0156F0                     l485:
 25765                           
 25766                           ; BSR set to: 1
 25767                           ;UART.c: 101: }
 25768                           ;UART.c: 102: baudconfig |= 0b00001000;
 25769  0156F0  0101               	movlb	1	; () banked
 25770  0156F2  878C               	bsf	InitUART@baudconfig& (0+255),3,b
 25771                           
 25772                           ; BSR set to: 1
 25773                           ;UART.c: 105: temp = (40960000L / Baud) - 1;
 25774  0156F4  0E00               	movlw	0
 25775  0156F6  0101               	movlb	1	; () banked
 25776  0156F8  6F74               	movwf	___lldiv@dividend& (0+255),b
 25777  0156FA  0E00               	movlw	0
 25778  0156FC  6F75               	movwf	(___lldiv@dividend+1)& (0+255),b
 25779  0156FE  0E71               	movlw	113
 25780  015700  6F76               	movwf	(___lldiv@dividend+2)& (0+255),b
 25781  015702  0E02               	movlw	2
 25782  015704  6F77               	movwf	(___lldiv@dividend+3)& (0+255),b
 25783  015706  C181  F178         	movff	InitUART@Baud,___lldiv@divisor
 25784  01570A  C182  F179         	movff	InitUART@Baud+1,___lldiv@divisor+1
 25785  01570E  C183  F17A         	movff	InitUART@Baud+2,___lldiv@divisor+2
 25786  015712  C184  F17B         	movff	InitUART@Baud+3,___lldiv@divisor+3
 25787  015716  ECA8  F0B6         	call	___lldiv	;wreg free
 25788  01571A  0EFF               	movlw	255
 25789  01571C  0101               	movlb	1	; () banked
 25790  01571E  2574               	addwf	?___lldiv& (0+255),w,b
 25791  015720  0101               	movlb	1	; () banked
 25792  015722  6F8E               	movwf	InitUART@temp& (0+255),b
 25793  015724  0EFF               	movlw	255
 25794  015726  0101               	movlb	1	; () banked
 25795  015728  2175               	addwfc	(?___lldiv+1)& (0+255),w,b
 25796  01572A  0101               	movlb	1	; () banked
 25797  01572C  6F8F               	movwf	(InitUART@temp+1)& (0+255),b
 25798  01572E  0EFF               	movlw	255
 25799  015730  0101               	movlb	1	; () banked
 25800  015732  2176               	addwfc	(?___lldiv+2)& (0+255),w,b
 25801  015734  0101               	movlb	1	; () banked
 25802  015736  6F90               	movwf	(InitUART@temp+2)& (0+255),b
 25803  015738  0EFF               	movlw	255
 25804  01573A  0101               	movlb	1	; () banked
 25805  01573C  2177               	addwfc	(?___lldiv+3)& (0+255),w,b
 25806  01573E  0101               	movlb	1	; () banked
 25807  015740  6F91               	movwf	(InitUART@temp+3)& (0+255),b
 25808                           
 25809                           ; BSR set to: 1
 25810                           ;UART.c: 106: temp = (temp >> 2) - 1;
 25811  015742  C18E  F186         	movff	InitUART@temp,??_InitUART
 25812  015746  C18F  F187         	movff	InitUART@temp+1,??_InitUART+1
 25813  01574A  C190  F188         	movff	InitUART@temp+2,??_InitUART+2
 25814  01574E  C191  F189         	movff	InitUART@temp+3,??_InitUART+3
 25815  015752  0E03               	movlw	3
 25816  015754  D006               	goto	u15710
 25817  015756                     u15715:
 25818  015756  0101               	movlb	1	; () banked
 25819  015758  90D8               	bcf	status,0,c
 25820  01575A  3389               	rrcf	(??_InitUART+3)& (0+255),f,b
 25821  01575C  3388               	rrcf	(??_InitUART+2)& (0+255),f,b
 25822  01575E  3387               	rrcf	(??_InitUART+1)& (0+255),f,b
 25823  015760  3386               	rrcf	??_InitUART& (0+255),f,b
 25824  015762                     u15710:
 25825  015762  2EE8               	decfsz	wreg,f,c
 25826  015764  D7F8               	goto	u15715
 25827  015766  0EFF               	movlw	255
 25828  015768  0101               	movlb	1	; () banked
 25829  01576A  2586               	addwf	??_InitUART& (0+255),w,b
 25830  01576C  0101               	movlb	1	; () banked
 25831  01576E  6F8E               	movwf	InitUART@temp& (0+255),b
 25832  015770  0EFF               	movlw	255
 25833  015772  0101               	movlb	1	; () banked
 25834  015774  2187               	addwfc	(??_InitUART+1)& (0+255),w,b
 25835  015776  0101               	movlb	1	; () banked
 25836  015778  6F8F               	movwf	(InitUART@temp+1)& (0+255),b
 25837  01577A  0EFF               	movlw	255
 25838  01577C  0101               	movlb	1	; () banked
 25839  01577E  2188               	addwfc	(??_InitUART+2)& (0+255),w,b
 25840  015780  0101               	movlb	1	; () banked
 25841  015782  6F90               	movwf	(InitUART@temp+2)& (0+255),b
 25842  015784  0EFF               	movlw	255
 25843  015786  0101               	movlb	1	; () banked
 25844  015788  2189               	addwfc	(??_InitUART+3)& (0+255),w,b
 25845  01578A  0101               	movlb	1	; () banked
 25846  01578C  6F91               	movwf	(InitUART@temp+3)& (0+255),b
 25847                           
 25848                           ; BSR set to: 1
 25849                           ;UART.c: 107: spbrg = (unsigned int)temp;
 25850  01578E  C18E  F18A         	movff	InitUART@temp,InitUART@spbrg
 25851  015792  C18F  F18B         	movff	InitUART@temp+1,InitUART@spbrg+1
 25852                           
 25853                           ; BSR set to: 1
 25854                           ;UART.c: 109: OpenUSART(config, spbrg);
 25855  015796  C18A  F174         	movff	InitUART@spbrg,OpenUSART@spbrg
 25856  01579A  C18B  F175         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 25857  01579E  0101               	movlb	1	; () banked
 25858  0157A0  518D               	movf	InitUART@config& (0+255),w,b
 25859  0157A2  ECAD  F0BE         	call	_OpenUSART
 25860                           
 25861                           ;UART.c: 110: baudUSART(baudconfig);
 25862  0157A6  0101               	movlb	1	; () banked
 25863  0157A8  518C               	movf	InitUART@baudconfig& (0+255),w,b
 25864  0157AA  EC7E  F008         	call	_baudUSART
 25865                           
 25866                           ;UART.c: 111: temp = ReadUSART();
 25867  0157AE  EC74  F006         	call	_ReadUSART	;wreg free
 25868  0157B2  0101               	movlb	1	; () banked
 25869  0157B4  6F86               	movwf	??_InitUART& (0+255),b
 25870  0157B6  0101               	movlb	1	; () banked
 25871  0157B8  5186               	movf	??_InitUART& (0+255),w,b
 25872  0157BA  0101               	movlb	1	; () banked
 25873  0157BC  6F8E               	movwf	InitUART@temp& (0+255),b
 25874  0157BE  6B8F               	clrf	(InitUART@temp+1)& (0+255),b
 25875  0157C0  6B90               	clrf	(InitUART@temp+2)& (0+255),b
 25876  0157C2  6B91               	clrf	(InitUART@temp+3)& (0+255),b
 25877                           
 25878                           ; BSR set to: 1
 25879                           ;UART.c: 112: temp = ReadUSART();
 25880  0157C4  EC74  F006         	call	_ReadUSART	;wreg free
 25881  0157C8  0101               	movlb	1	; () banked
 25882  0157CA  6F86               	movwf	??_InitUART& (0+255),b
 25883  0157CC  0101               	movlb	1	; () banked
 25884  0157CE  5186               	movf	??_InitUART& (0+255),w,b
 25885  0157D0  0101               	movlb	1	; () banked
 25886  0157D2  6F8E               	movwf	InitUART@temp& (0+255),b
 25887  0157D4  6B8F               	clrf	(InitUART@temp+1)& (0+255),b
 25888  0157D6  6B90               	clrf	(InitUART@temp+2)& (0+255),b
 25889  0157D8  6B91               	clrf	(InitUART@temp+3)& (0+255),b
 25890                           
 25891                           ; BSR set to: 1
 25892                           ;UART.c: 113: temp = ReadUSART();
 25893  0157DA  EC74  F006         	call	_ReadUSART	;wreg free
 25894  0157DE  0101               	movlb	1	; () banked
 25895  0157E0  6F86               	movwf	??_InitUART& (0+255),b
 25896  0157E2  0101               	movlb	1	; () banked
 25897  0157E4  5186               	movf	??_InitUART& (0+255),w,b
 25898  0157E6  0101               	movlb	1	; () banked
 25899  0157E8  6F8E               	movwf	InitUART@temp& (0+255),b
 25900  0157EA  6B8F               	clrf	(InitUART@temp+1)& (0+255),b
 25901  0157EC  6B90               	clrf	(InitUART@temp+2)& (0+255),b
 25902  0157EE  6B91               	clrf	(InitUART@temp+3)& (0+255),b
 25903                           
 25904                           ; BSR set to: 1
 25905                           ;UART.c: 114: temp = ReadUSART();
 25906  0157F0  EC74  F006         	call	_ReadUSART	;wreg free
 25907  0157F4  0101               	movlb	1	; () banked
 25908  0157F6  6F86               	movwf	??_InitUART& (0+255),b
 25909  0157F8  0101               	movlb	1	; () banked
 25910  0157FA  5186               	movf	??_InitUART& (0+255),w,b
 25911  0157FC  0101               	movlb	1	; () banked
 25912  0157FE  6F8E               	movwf	InitUART@temp& (0+255),b
 25913  015800  6B8F               	clrf	(InitUART@temp+1)& (0+255),b
 25914  015802  6B90               	clrf	(InitUART@temp+2)& (0+255),b
 25915  015804  6B91               	clrf	(InitUART@temp+3)& (0+255),b
 25916                           
 25917                           ; BSR set to: 1
 25918                           ;UART.c: 115: temp = ReadUSART();
 25919  015806  EC74  F006         	call	_ReadUSART	;wreg free
 25920  01580A  0101               	movlb	1	; () banked
 25921  01580C  6F86               	movwf	??_InitUART& (0+255),b
 25922  01580E  0101               	movlb	1	; () banked
 25923  015810  5186               	movf	??_InitUART& (0+255),w,b
 25924  015812  0101               	movlb	1	; () banked
 25925  015814  6F8E               	movwf	InitUART@temp& (0+255),b
 25926  015816  6B8F               	clrf	(InitUART@temp+1)& (0+255),b
 25927  015818  6B90               	clrf	(InitUART@temp+2)& (0+255),b
 25928  01581A  6B91               	clrf	(InitUART@temp+3)& (0+255),b
 25929                           
 25930                           ; BSR set to: 1
 25931                           ;UART.c: 117: IPR1bits.RCIP = 0;
 25932  01581C  9A9F               	bcf	3999,5,c	;volatile
 25933                           
 25934                           ; BSR set to: 1
 25935  01581E  0012               	return		;funcret
 25936  015820                     __end_of_InitUART:
 25937                           	opt stack 0
 25938                           tblptru	equ	0xFF8
 25939                           tblptrh	equ	0xFF7
 25940                           tblptrl	equ	0xFF6
 25941                           tablat	equ	0xFF5
 25942                           prodh	equ	0xFF4
 25943                           prodl	equ	0xFF3
 25944                           intcon	equ	0xFF2
 25945                           intcon2	equ	0xFF1
 25946                           postinc0	equ	0xFEE
 25947                           plusw0	equ	0xFEB
 25948                           wreg	equ	0xFE8
 25949                           indf1	equ	0xFE7
 25950                           postdec1	equ	0xFE5
 25951                           fsr1h	equ	0xFE2
 25952                           fsr1l	equ	0xFE1
 25953                           indf2	equ	0xFDF
 25954                           postinc2	equ	0xFDE
 25955                           postdec2	equ	0xFDD
 25956                           plusw2	equ	0xFDB
 25957                           fsr2h	equ	0xFDA
 25958                           fsr2l	equ	0xFD9
 25959                           status	equ	0xFD8
 25960                           
 25961 ;; *************** function _baudUSART *****************
 25962 ;; Defined at:
 25963 ;;		line 125 in file "UART.c"
 25964 ;; Parameters:    Size  Location     Type
 25965 ;;  baudconfig      1    wreg     unsigned char 
 25966 ;; Auto vars:     Size  Location     Type
 25967 ;;  baudconfig      1   14[BANK1 ] unsigned char 
 25968 ;; Return value:  Size  Location     Type
 25969 ;;		None               void
 25970 ;; Registers used:
 25971 ;;		wreg, status,2
 25972 ;; Tracked objects:
 25973 ;;		On entry : 0/0
 25974 ;;		On exit  : 0/0
 25975 ;;		Unchanged: 0/0
 25976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25978 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25980 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25981 ;;Total ram usage:        1 bytes
 25982 ;; Hardware stack levels used:    1
 25983 ;; Hardware stack levels required when called:    7
 25984 ;; This function calls:
 25985 ;;		Nothing
 25986 ;; This function is called by:
 25987 ;;		_InitUART
 25988 ;; This function uses a non-reentrant model
 25989 ;;
 25990                           
 25991                           	psect	text60
 25992  0010FC                     __ptext60:
 25993                           	opt stack 0
 25994  0010FC                     _baudUSART:
 25995                           	opt stack 22
 25996                           
 25997                           ; BSR set to: 1
 25998                           ;incstack = 0
 25999                           ;baudUSART@baudconfig stored from wreg
 26000  0010FC  0101               	movlb	1	; () banked
 26001  0010FE  6F74               	movwf	baudUSART@baudconfig& (0+255),b
 26002                           
 26003                           ; BSR set to: 1
 26004                           ;UART.c: 127: BAUDCON =0;
 26005  001100  0E00               	movlw	0
 26006  001102  6EB8               	movwf	4024,c	;volatile
 26007                           
 26008                           ; BSR set to: 1
 26009                           ;UART.c: 128: BAUDCON = baudconfig;
 26010  001104  C174  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
 26011                           
 26012                           ; BSR set to: 1
 26013  001108  0012               	return		;funcret
 26014  00110A                     __end_of_baudUSART:
 26015                           	opt stack 0
 26016                           tblptru	equ	0xFF8
 26017                           tblptrh	equ	0xFF7
 26018                           tblptrl	equ	0xFF6
 26019                           tablat	equ	0xFF5
 26020                           prodh	equ	0xFF4
 26021                           prodl	equ	0xFF3
 26022                           intcon	equ	0xFF2
 26023                           intcon2	equ	0xFF1
 26024                           postinc0	equ	0xFEE
 26025                           plusw0	equ	0xFEB
 26026                           wreg	equ	0xFE8
 26027                           indf1	equ	0xFE7
 26028                           postdec1	equ	0xFE5
 26029                           fsr1h	equ	0xFE2
 26030                           fsr1l	equ	0xFE1
 26031                           indf2	equ	0xFDF
 26032                           postinc2	equ	0xFDE
 26033                           postdec2	equ	0xFDD
 26034                           plusw2	equ	0xFDB
 26035                           fsr2h	equ	0xFDA
 26036                           fsr2l	equ	0xFD9
 26037                           status	equ	0xFD8
 26038                           
 26039 ;; *************** function ___lldiv *****************
 26040 ;; Defined at:
 26041 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 26042 ;; Parameters:    Size  Location     Type
 26043 ;;  dividend        4   14[BANK1 ] unsigned long 
 26044 ;;  divisor         4   18[BANK1 ] unsigned long 
 26045 ;; Auto vars:     Size  Location     Type
 26046 ;;  quotient        4   22[BANK1 ] unsigned long 
 26047 ;;  counter         1   26[BANK1 ] unsigned char 
 26048 ;; Return value:  Size  Location     Type
 26049 ;;                  4   14[BANK1 ] unsigned long 
 26050 ;; Registers used:
 26051 ;;		wreg, status,2, status,0
 26052 ;; Tracked objects:
 26053 ;;		On entry : 0/0
 26054 ;;		On exit  : 0/0
 26055 ;;		Unchanged: 0/0
 26056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26057 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 26058 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 26059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26060 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 26061 ;;Total ram usage:       13 bytes
 26062 ;; Hardware stack levels used:    1
 26063 ;; Hardware stack levels required when called:    7
 26064 ;; This function calls:
 26065 ;;		Nothing
 26066 ;; This function is called by:
 26067 ;;		_InitUART
 26068 ;;		_sprintf
 26069 ;; This function uses a non-reentrant model
 26070 ;;
 26071                           
 26072                           	psect	text61
 26073  016D50                     __ptext61:
 26074                           	opt stack 0
 26075  016D50                     ___lldiv:
 26076                           	opt stack 22
 26077                           
 26078                           ; BSR set to: 1
 26079                           ;incstack = 0
 26080  016D50  0E00               	movlw	0
 26081  016D52  0101               	movlb	1	; () banked
 26082  016D54  6F7C               	movwf	___lldiv@quotient& (0+255),b
 26083  016D56  0E00               	movlw	0
 26084  016D58  6F7D               	movwf	(___lldiv@quotient+1)& (0+255),b
 26085  016D5A  0E00               	movlw	0
 26086  016D5C  6F7E               	movwf	(___lldiv@quotient+2)& (0+255),b
 26087  016D5E  0E00               	movlw	0
 26088  016D60  6F7F               	movwf	(___lldiv@quotient+3)& (0+255),b
 26089                           
 26090                           ; BSR set to: 1
 26091  016D62  0101               	movlb	1	; () banked
 26092  016D64  5178               	movf	___lldiv@divisor& (0+255),w,b
 26093  016D66  0101               	movlb	1	; () banked
 26094  016D68  1179               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 26095  016D6A  0101               	movlb	1	; () banked
 26096  016D6C  117A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 26097  016D6E  0101               	movlb	1	; () banked
 26098  016D70  117B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 26099  016D72  B4D8               	btfsc	status,2,c
 26100  016D74  D047               	goto	l2427
 26101                           
 26102                           ; BSR set to: 1
 26103  016D76  0E01               	movlw	1
 26104  016D78  0101               	movlb	1	; () banked
 26105  016D7A  6F80               	movwf	___lldiv@counter& (0+255),b
 26106  016D7C  D009               	goto	l12609
 26107  016D7E                     l12607:
 26108                           
 26109                           ; BSR set to: 1
 26110  016D7E  0101               	movlb	1	; () banked
 26111  016D80  90D8               	bcf	status,0,c
 26112  016D82  3778               	rlcf	___lldiv@divisor& (0+255),f,b
 26113  016D84  3779               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 26114  016D86  377A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 26115  016D88  377B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 26116  016D8A  0101               	movlb	1	; () banked
 26117  016D8C  2B80               	incf	___lldiv@counter& (0+255),f,b
 26118  016D8E  D000               	goto	l12609
 26119  016D90                     l12609:
 26120                           
 26121                           ; BSR set to: 1
 26122  016D90  0101               	movlb	1	; () banked
 26123  016D92  BF7B               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 26124  016D94  D002               	goto	l12611
 26125  016D96  D7F3               	goto	l12607
 26126                           
 26127                           ; BSR set to: 1
 26128  016D98  D000               	goto	l12611
 26129  016D9A                     l12611:
 26130                           
 26131                           ; BSR set to: 1
 26132  016D9A  0101               	movlb	1	; () banked
 26133  016D9C  90D8               	bcf	status,0,c
 26134  016D9E  377C               	rlcf	___lldiv@quotient& (0+255),f,b
 26135  016DA0  377D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 26136  016DA2  377E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 26137  016DA4  377F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 26138                           
 26139                           ; BSR set to: 1
 26140  016DA6  0101               	movlb	1	; () banked
 26141  016DA8  5178               	movf	___lldiv@divisor& (0+255),w,b
 26142  016DAA  0101               	movlb	1	; () banked
 26143  016DAC  5D74               	subwf	___lldiv@dividend& (0+255),w,b
 26144  016DAE  0101               	movlb	1	; () banked
 26145  016DB0  5179               	movf	(___lldiv@divisor+1)& (0+255),w,b
 26146  016DB2  0101               	movlb	1	; () banked
 26147  016DB4  5975               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 26148  016DB6  0101               	movlb	1	; () banked
 26149  016DB8  517A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 26150  016DBA  0101               	movlb	1	; () banked
 26151  016DBC  5976               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 26152  016DBE  0101               	movlb	1	; () banked
 26153  016DC0  517B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 26154  016DC2  0101               	movlb	1	; () banked
 26155  016DC4  5977               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 26156  016DC6  A0D8               	btfss	status,0,c
 26157  016DC8  D013               	goto	l12619
 26158                           
 26159                           ; BSR set to: 1
 26160  016DCA  0101               	movlb	1	; () banked
 26161  016DCC  5178               	movf	___lldiv@divisor& (0+255),w,b
 26162  016DCE  0101               	movlb	1	; () banked
 26163  016DD0  5F74               	subwf	___lldiv@dividend& (0+255),f,b
 26164  016DD2  0101               	movlb	1	; () banked
 26165  016DD4  5179               	movf	(___lldiv@divisor+1)& (0+255),w,b
 26166  016DD6  0101               	movlb	1	; () banked
 26167  016DD8  5B75               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 26168  016DDA  0101               	movlb	1	; () banked
 26169  016DDC  517A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 26170  016DDE  0101               	movlb	1	; () banked
 26171  016DE0  5B76               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 26172  016DE2  0101               	movlb	1	; () banked
 26173  016DE4  517B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 26174  016DE6  0101               	movlb	1	; () banked
 26175  016DE8  5B77               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 26176                           
 26177                           ; BSR set to: 1
 26178  016DEA  0101               	movlb	1	; () banked
 26179  016DEC  817C               	bsf	___lldiv@quotient& (0+255),0,b
 26180  016DEE  D000               	goto	l12619
 26181  016DF0                     l12619:
 26182                           
 26183                           ; BSR set to: 1
 26184  016DF0  0101               	movlb	1	; () banked
 26185  016DF2  90D8               	bcf	status,0,c
 26186  016DF4  337B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 26187  016DF6  337A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 26188  016DF8  3379               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 26189  016DFA  3378               	rrcf	___lldiv@divisor& (0+255),f,b
 26190                           
 26191                           ; BSR set to: 1
 26192  016DFC  0101               	movlb	1	; () banked
 26193  016DFE  2F80               	decfsz	___lldiv@counter& (0+255),f,b
 26194  016E00  D7CC               	goto	l12611
 26195  016E02  D000               	goto	l2427
 26196  016E04                     l2427:
 26197                           
 26198                           ; BSR set to: 1
 26199  016E04  C17C  F174         	movff	___lldiv@quotient,?___lldiv
 26200  016E08  C17D  F175         	movff	___lldiv@quotient+1,?___lldiv+1
 26201  016E0C  C17E  F176         	movff	___lldiv@quotient+2,?___lldiv+2
 26202  016E10  C17F  F177         	movff	___lldiv@quotient+3,?___lldiv+3
 26203                           
 26204                           ; BSR set to: 1
 26205  016E14  0012               	return		;funcret
 26206  016E16                     __end_of___lldiv:
 26207                           	opt stack 0
 26208                           tblptru	equ	0xFF8
 26209                           tblptrh	equ	0xFF7
 26210                           tblptrl	equ	0xFF6
 26211                           tablat	equ	0xFF5
 26212                           prodh	equ	0xFF4
 26213                           prodl	equ	0xFF3
 26214                           intcon	equ	0xFF2
 26215                           intcon2	equ	0xFF1
 26216                           postinc0	equ	0xFEE
 26217                           plusw0	equ	0xFEB
 26218                           wreg	equ	0xFE8
 26219                           indf1	equ	0xFE7
 26220                           postdec1	equ	0xFE5
 26221                           fsr1h	equ	0xFE2
 26222                           fsr1l	equ	0xFE1
 26223                           indf2	equ	0xFDF
 26224                           postinc2	equ	0xFDE
 26225                           postdec2	equ	0xFDD
 26226                           plusw2	equ	0xFDB
 26227                           fsr2h	equ	0xFDA
 26228                           fsr2l	equ	0xFD9
 26229                           status	equ	0xFD8
 26230                           
 26231 ;; *************** function _ReadUSART *****************
 26232 ;; Defined at:
 26233 ;;		line 250 in file "UART.c"
 26234 ;; Parameters:    Size  Location     Type
 26235 ;;		None
 26236 ;; Auto vars:     Size  Location     Type
 26237 ;;  data            1   14[BANK1 ] unsigned char 
 26238 ;; Return value:  Size  Location     Type
 26239 ;;                  1    wreg      unsigned char 
 26240 ;; Registers used:
 26241 ;;		wreg, status,2, status,0
 26242 ;; Tracked objects:
 26243 ;;		On entry : 0/0
 26244 ;;		On exit  : 0/0
 26245 ;;		Unchanged: 0/0
 26246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26248 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26250 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26251 ;;Total ram usage:        1 bytes
 26252 ;; Hardware stack levels used:    1
 26253 ;; Hardware stack levels required when called:    7
 26254 ;; This function calls:
 26255 ;;		Nothing
 26256 ;; This function is called by:
 26257 ;;		_main
 26258 ;;		_InitUART
 26259 ;; This function uses a non-reentrant model
 26260 ;;
 26261                           
 26262                           	psect	text62
 26263  000CE8                     __ptext62:
 26264                           	opt stack 0
 26265  000CE8                     _ReadUSART:
 26266                           	opt stack 23
 26267                           
 26268                           ;UART.c: 252: char data;
 26269                           ;UART.c: 254: USART_Status.val &= 0xf2;
 26270                           
 26271                           ; BSR set to: 1
 26272                           ;incstack = 0
 26273  000CE8  0EF2               	movlw	242
 26274  000CEA  0101               	movlb	1	; () banked
 26275  000CEC  1715               	andwf	_USART_Status& (0+255),f,b
 26276                           
 26277                           ; BSR set to: 1
 26278                           ;UART.c: 256: if(RCSTAbits.RX9)
 26279  000CEE  ACAB               	btfss	4011,6,c	;volatile
 26280  000CF0  D007               	goto	l530
 26281                           
 26282                           ; BSR set to: 1
 26283                           ;UART.c: 257: {
 26284                           ;UART.c: 258: USART_Status.RX_NINE = 0;
 26285  000CF2  0101               	movlb	1	; () banked
 26286  000CF4  9115               	bcf	_USART_Status& (0+255),0,b
 26287                           
 26288                           ;UART.c: 259: if(RCSTAbits.RX9D)
 26289  000CF6  A0AB               	btfss	4011,0,c	;volatile
 26290  000CF8  D003               	goto	l530
 26291                           
 26292                           ; BSR set to: 1
 26293                           ;UART.c: 260: USART_Status.RX_NINE = 1;
 26294  000CFA  0101               	movlb	1	; () banked
 26295  000CFC  8115               	bsf	_USART_Status& (0+255),0,b
 26296  000CFE  D000               	goto	l530
 26297  000D00                     l530:
 26298                           
 26299                           ; BSR set to: 1
 26300                           ;UART.c: 261: }
 26301                           ;UART.c: 263: if(RCSTAbits.FERR)
 26302  000D00  A4AB               	btfss	4011,2,c	;volatile
 26303  000D02  D002               	goto	l532
 26304                           
 26305                           ; BSR set to: 1
 26306                           ;UART.c: 264: USART_Status.FRAME_ERROR = 1;
 26307  000D04  0101               	movlb	1	; () banked
 26308  000D06  8515               	bsf	_USART_Status& (0+255),2,b
 26309  000D08                     l532:
 26310                           
 26311                           ; BSR set to: 1
 26312                           ;UART.c: 266: if(RCSTAbits.OERR)
 26313  000D08  A2AB               	btfss	4011,1,c	;volatile
 26314  000D0A  D002               	goto	l533
 26315                           
 26316                           ; BSR set to: 1
 26317                           ;UART.c: 267: USART_Status.OVERRUN_ERROR = 1;
 26318  000D0C  0101               	movlb	1	; () banked
 26319  000D0E  8715               	bsf	_USART_Status& (0+255),3,b
 26320  000D10                     l533:
 26321                           
 26322                           ; BSR set to: 1
 26323                           ;UART.c: 269: data = RCREG;
 26324  000D10  CFAE F174          	movff	4014,ReadUSART@data	;volatile
 26325                           
 26326                           ; BSR set to: 1
 26327                           ;UART.c: 271: return (data);
 26328  000D14  0101               	movlb	1	; () banked
 26329  000D16  5174               	movf	ReadUSART@data& (0+255),w,b
 26330  000D18  0012               	return	
 26331                           
 26332                           ; BSR set to: 1
 26333                           
 26334                           ; BSR set to: 1
 26335  000D1A  0012               	return		;funcret
 26336  000D1C                     __end_of_ReadUSART:
 26337                           	opt stack 0
 26338                           tblptru	equ	0xFF8
 26339                           tblptrh	equ	0xFF7
 26340                           tblptrl	equ	0xFF6
 26341                           tablat	equ	0xFF5
 26342                           prodh	equ	0xFF4
 26343                           prodl	equ	0xFF3
 26344                           intcon	equ	0xFF2
 26345                           intcon2	equ	0xFF1
 26346                           postinc0	equ	0xFEE
 26347                           plusw0	equ	0xFEB
 26348                           wreg	equ	0xFE8
 26349                           indf1	equ	0xFE7
 26350                           postdec1	equ	0xFE5
 26351                           fsr1h	equ	0xFE2
 26352                           fsr1l	equ	0xFE1
 26353                           indf2	equ	0xFDF
 26354                           postinc2	equ	0xFDE
 26355                           postdec2	equ	0xFDD
 26356                           plusw2	equ	0xFDB
 26357                           fsr2h	equ	0xFDA
 26358                           fsr2l	equ	0xFD9
 26359                           status	equ	0xFD8
 26360                           
 26361 ;; *************** function _OpenUSART *****************
 26362 ;; Defined at:
 26363 ;;		line 136 in file "UART.c"
 26364 ;; Parameters:    Size  Location     Type
 26365 ;;  config          1    wreg     unsigned char 
 26366 ;;  spbrg           2   14[BANK1 ] unsigned int 
 26367 ;; Auto vars:     Size  Location     Type
 26368 ;;  config          1   16[BANK1 ] unsigned char 
 26369 ;; Return value:  Size  Location     Type
 26370 ;;		None               void
 26371 ;; Registers used:
 26372 ;;		wreg, status,2
 26373 ;; Tracked objects:
 26374 ;;		On entry : 0/0
 26375 ;;		On exit  : 0/0
 26376 ;;		Unchanged: 0/0
 26377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26378 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26379 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26381 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 26382 ;;Total ram usage:        3 bytes
 26383 ;; Hardware stack levels used:    1
 26384 ;; Hardware stack levels required when called:    7
 26385 ;; This function calls:
 26386 ;;		Nothing
 26387 ;; This function is called by:
 26388 ;;		_InitUART
 26389 ;; This function uses a non-reentrant model
 26390 ;;
 26391                           
 26392                           	psect	text63
 26393  017D5A                     __ptext63:
 26394                           	opt stack 0
 26395  017D5A                     _OpenUSART:
 26396                           	opt stack 22
 26397                           
 26398                           ; BSR set to: 1
 26399                           ;incstack = 0
 26400                           ;OpenUSART@config stored from wreg
 26401  017D5A  0101               	movlb	1	; () banked
 26402  017D5C  6F76               	movwf	OpenUSART@config& (0+255),b
 26403                           
 26404                           ; BSR set to: 1
 26405                           ;UART.c: 138: TXSTA = 0;
 26406  017D5E  0E00               	movlw	0
 26407  017D60  6EAC               	movwf	4012,c	;volatile
 26408                           
 26409                           ;UART.c: 139: RCSTA = 0;
 26410  017D62  0E00               	movlw	0
 26411  017D64  6EAB               	movwf	4011,c	;volatile
 26412                           
 26413                           ; BSR set to: 1
 26414                           ;UART.c: 141: if(config&0x01)
 26415  017D66  0101               	movlb	1	; () banked
 26416  017D68  A176               	btfss	OpenUSART@config& (0+255),0,b
 26417  017D6A  D002               	goto	l12323
 26418                           
 26419                           ; BSR set to: 1
 26420                           ;UART.c: 142: TXSTAbits.SYNC = 1;
 26421  017D6C  88AC               	bsf	4012,4,c	;volatile
 26422  017D6E  D000               	goto	l12323
 26423  017D70                     l12323:
 26424                           
 26425                           ; BSR set to: 1
 26426                           ;UART.c: 144: if(config&0x02)
 26427  017D70  0101               	movlb	1	; () banked
 26428  017D72  A376               	btfss	OpenUSART@config& (0+255),1,b
 26429  017D74  D003               	goto	l12327
 26430                           
 26431                           ; BSR set to: 1
 26432                           ;UART.c: 145: {
 26433                           ;UART.c: 146: TXSTAbits.TX9 = 1;
 26434  017D76  8CAC               	bsf	4012,6,c	;volatile
 26435                           
 26436                           ;UART.c: 147: RCSTAbits.RX9 = 1;
 26437  017D78  8CAB               	bsf	4011,6,c	;volatile
 26438  017D7A  D000               	goto	l12327
 26439  017D7C                     l12327:
 26440                           
 26441                           ; BSR set to: 1
 26442                           ;UART.c: 148: }
 26443                           ;UART.c: 150: if(config&0x04)
 26444  017D7C  0101               	movlb	1	; () banked
 26445  017D7E  A576               	btfss	OpenUSART@config& (0+255),2,b
 26446  017D80  D002               	goto	l12331
 26447                           
 26448                           ; BSR set to: 1
 26449                           ;UART.c: 151: TXSTAbits.CSRC = 1;
 26450  017D82  8EAC               	bsf	4012,7,c	;volatile
 26451  017D84  D000               	goto	l12331
 26452  017D86                     l12331:
 26453                           
 26454                           ; BSR set to: 1
 26455                           ;UART.c: 153: if(config&0x08)
 26456  017D86  0101               	movlb	1	; () banked
 26457  017D88  A776               	btfss	OpenUSART@config& (0+255),3,b
 26458  017D8A  D002               	goto	l495
 26459                           
 26460                           ; BSR set to: 1
 26461                           ;UART.c: 154: RCSTAbits.CREN = 1;
 26462  017D8C  88AB               	bsf	4011,4,c	;volatile
 26463  017D8E  D002               	goto	l12335
 26464  017D90                     l495:
 26465                           
 26466                           ; BSR set to: 1
 26467                           ;UART.c: 155: else
 26468                           ;UART.c: 156: RCSTAbits.SREN = 1;
 26469  017D90  8AAB               	bsf	4011,5,c	;volatile
 26470  017D92  D000               	goto	l12335
 26471  017D94                     l12335:
 26472                           
 26473                           ; BSR set to: 1
 26474                           ;UART.c: 158: if(config&0x10)
 26475  017D94  0101               	movlb	1	; () banked
 26476  017D96  B976               	btfsc	OpenUSART@config& (0+255),4,b
 26477                           
 26478                           ; BSR set to: 1
 26479                           ;UART.c: 159: TXSTAbits.BRGH = 1;
 26480  017D98  84AC               	bsf	4012,2,c	;volatile
 26481                           
 26482                           ; BSR set to: 1
 26483                           ;UART.c: 161: PIR1bits.TXIF = 0;
 26484  017D9A  989E               	bcf	3998,4,c	;volatile
 26485                           
 26486                           ; BSR set to: 1
 26487                           ;UART.c: 163: if(config&0x20)
 26488  017D9C  0101               	movlb	1	; () banked
 26489  017D9E  AB76               	btfss	OpenUSART@config& (0+255),5,b
 26490  017DA0  D002               	goto	l12343
 26491                           
 26492                           ; BSR set to: 1
 26493                           ;UART.c: 164: RCSTAbits.ADEN = 1;
 26494  017DA2  86AB               	bsf	4011,3,c	;volatile
 26495  017DA4  D000               	goto	l12343
 26496  017DA6                     l12343:
 26497                           
 26498                           ; BSR set to: 1
 26499                           ;UART.c: 166: if(config&0x40)
 26500  017DA6  0101               	movlb	1	; () banked
 26501  017DA8  AD76               	btfss	OpenUSART@config& (0+255),6,b
 26502  017DAA  D002               	goto	l499
 26503                           
 26504                           ; BSR set to: 1
 26505                           ;UART.c: 167: {
 26506                           ;UART.c: 168: PIE1bits.RCIE = 1;
 26507  017DAC  8A9D               	bsf	3997,5,c	;volatile
 26508                           
 26509                           ;UART.c: 169: }
 26510  017DAE  D001               	goto	l500
 26511  017DB0                     l499:
 26512                           
 26513                           ; BSR set to: 1
 26514                           ;UART.c: 170: else
 26515                           ;UART.c: 171: {
 26516                           ;UART.c: 172: PIE1bits.RCIE = 0;
 26517  017DB0  9A9D               	bcf	3997,5,c	;volatile
 26518  017DB2                     l500:
 26519                           
 26520                           ; BSR set to: 1
 26521                           ;UART.c: 173: }
 26522                           ;UART.c: 175: PIR1bits.RCIF = 0;
 26523  017DB2  9A9E               	bcf	3998,5,c	;volatile
 26524                           
 26525                           ; BSR set to: 1
 26526                           ;UART.c: 177: if(config&0x80)
 26527  017DB4  0101               	movlb	1	; () banked
 26528  017DB6  AF76               	btfss	OpenUSART@config& (0+255),7,b
 26529  017DB8  D002               	goto	l501
 26530                           
 26531                           ; BSR set to: 1
 26532                           ;UART.c: 178: PIE1bits.TXIE = 1;
 26533  017DBA  889D               	bsf	3997,4,c	;volatile
 26534  017DBC  D001               	goto	l502
 26535  017DBE                     l501:
 26536                           
 26537                           ; BSR set to: 1
 26538                           ;UART.c: 179: else
 26539                           ;UART.c: 180: PIE1bits.TXIE = 0;
 26540  017DBE  989D               	bcf	3997,4,c	;volatile
 26541  017DC0                     l502:
 26542                           
 26543                           ; BSR set to: 1
 26544                           ;UART.c: 182: SPBRG = spbrg;
 26545  017DC0  C174  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 26546                           
 26547                           ; BSR set to: 1
 26548                           ;UART.c: 183: SPBRGH = spbrg >> 8;
 26549  017DC4  0101               	movlb	1	; () banked
 26550  017DC6  5175               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 26551  017DC8  6EB0               	movwf	4016,c	;volatile
 26552                           
 26553                           ; BSR set to: 1
 26554                           ;UART.c: 185: TXSTAbits.TXEN = 1;
 26555  017DCA  8AAC               	bsf	4012,5,c	;volatile
 26556                           
 26557                           ; BSR set to: 1
 26558                           ;UART.c: 186: RCSTAbits.SPEN = 1;
 26559  017DCC  8EAB               	bsf	4011,7,c	;volatile
 26560                           
 26561                           ; BSR set to: 1
 26562  017DCE  0012               	return		;funcret
 26563  017DD0                     __end_of_OpenUSART:
 26564                           	opt stack 0
 26565                           tblptru	equ	0xFF8
 26566                           tblptrh	equ	0xFF7
 26567                           tblptrl	equ	0xFF6
 26568                           tablat	equ	0xFF5
 26569                           prodh	equ	0xFF4
 26570                           prodl	equ	0xFF3
 26571                           intcon	equ	0xFF2
 26572                           intcon2	equ	0xFF1
 26573                           postinc0	equ	0xFEE
 26574                           plusw0	equ	0xFEB
 26575                           wreg	equ	0xFE8
 26576                           indf1	equ	0xFE7
 26577                           postdec1	equ	0xFE5
 26578                           fsr1h	equ	0xFE2
 26579                           fsr1l	equ	0xFE1
 26580                           indf2	equ	0xFDF
 26581                           postinc2	equ	0xFDE
 26582                           postdec2	equ	0xFDD
 26583                           plusw2	equ	0xFDB
 26584                           fsr2h	equ	0xFDA
 26585                           fsr2l	equ	0xFD9
 26586                           status	equ	0xFD8
 26587                           
 26588 ;; *************** function _Send_Config2 *****************
 26589 ;; Defined at:
 26590 ;;		line 137 in file "RF.c"
 26591 ;; Parameters:    Size  Location     Type
 26592 ;;  pin             1    wreg     unsigned char 
 26593 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 26594 ;;		 -> SubLightOFF(16), SubLightON(16), Aux2OFF(16), Aux2ON(16), 
 26595 ;;		 -> BedOFF(16), BedON(16), AuxOFF(16), AuxON(16), 
 26596 ;;		 -> fanOFF(16), fanON(16), 
 26597 ;; Auto vars:     Size  Location     Type
 26598 ;;  pin             1   29[BANK1 ] unsigned char 
 26599 ;;  i               1   30[BANK1 ] unsigned char 
 26600 ;; Return value:  Size  Location     Type
 26601 ;;		None               void
 26602 ;; Registers used:
 26603 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26604 ;; Tracked objects:
 26605 ;;		On entry : 0/0
 26606 ;;		On exit  : 0/0
 26607 ;;		Unchanged: 0/0
 26608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26609 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26610 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26611 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26612 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 26613 ;;Total ram usage:        6 bytes
 26614 ;; Hardware stack levels used:    1
 26615 ;; Hardware stack levels required when called:    9
 26616 ;; This function calls:
 26617 ;;		_One_Config2
 26618 ;;		_Zero_Config2
 26619 ;;		_delayUS
 26620 ;; This function is called by:
 26621 ;;		_Command
 26622 ;; This function uses a non-reentrant model
 26623 ;;
 26624                           
 26625                           	psect	text64
 26626  017900                     __ptext64:
 26627                           	opt stack 0
 26628  017900                     _Send_Config2:
 26629                           	opt stack 20
 26630                           
 26631                           ; BSR set to: 1
 26632                           ;incstack = 0
 26633                           ;Send_Config2@pin stored from wreg
 26634  017900  0101               	movlb	1	; () banked
 26635  017902  6F83               	movwf	Send_Config2@pin& (0+255),b
 26636                           
 26637                           ; BSR set to: 1
 26638                           ;RF.c: 139: unsigned char i=0;
 26639  017904  0E00               	movlw	0
 26640  017906  0101               	movlb	1	; () banked
 26641  017908  6F84               	movwf	Send_Config2@i& (0+255),b
 26642                           
 26643                           ;RF.c: 141: for(i=0;i<16;i++)
 26644  01790A  0E00               	movlw	0
 26645  01790C  0101               	movlb	1	; () banked
 26646  01790E  6F84               	movwf	Send_Config2@i& (0+255),b
 26647  017910                     l14193:
 26648                           
 26649                           ; BSR set to: 1
 26650  017910  0E0F               	movlw	15
 26651  017912  0101               	movlb	1	; () banked
 26652  017914  6584               	cpfsgt	Send_Config2@i& (0+255),b
 26653  017916  D001               	goto	l14197
 26654                           
 26655                           ; BSR set to: 1
 26656  017918  D025               	goto	l14207
 26657  01791A                     l14197:
 26658                           
 26659                           ; BSR set to: 1
 26660                           ;RF.c: 142: {
 26661                           ;RF.c: 143: if(data[i] == 0)
 26662  01791A  0101               	movlb	1	; () banked
 26663  01791C  5184               	movf	Send_Config2@i& (0+255),w,b
 26664  01791E  0D01               	mullw	1
 26665  017920  C17F  F181         	movff	Send_Config2@data,??_Send_Config2
 26666  017924  C180  F182         	movff	Send_Config2@data+1,??_Send_Config2+1
 26667  017928  50F3               	movf	prodl,w,c
 26668  01792A  0101               	movlb	1	; () banked
 26669  01792C  2781               	addwf	??_Send_Config2& (0+255),f,b
 26670  01792E  50F4               	movf	prodh,w,c
 26671  017930  0101               	movlb	1	; () banked
 26672  017932  2382               	addwfc	(??_Send_Config2+1)& (0+255),f,b
 26673  017934  C181  FFF6         	movff	??_Send_Config2,tblptrl
 26674  017938  C182  FFF7         	movff	??_Send_Config2+1,tblptrh
 26675  01793C                     	if	0	;tblptru may be non-zero
 26676  01793C                     	endif
 26677  01793C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26678  01793C  0E00               	movlw	low (__mediumconst shr (0+16))
 26679  01793E  6EF8               	movwf	tblptru,c
 26680  017940                     	endif
 26681  017940  0008               	tblrd		*
 26682  017942  50F5               	movf	tablat,w,c
 26683  017944  0900               	iorlw	0
 26684  017946  A4D8               	btfss	status,2,c
 26685  017948  D005               	goto	l14201
 26686                           
 26687                           ; BSR set to: 1
 26688                           ;RF.c: 144: {
 26689                           ;RF.c: 145: Zero_Config2(pin);
 26690  01794A  0101               	movlb	1	; () banked
 26691  01794C  5183               	movf	Send_Config2@pin& (0+255),w,b
 26692  01794E  EC4F  F005         	call	_Zero_Config2
 26693                           
 26694                           ;RF.c: 146: }
 26695  017952  D005               	goto	l14203
 26696  017954                     l14201:
 26697                           
 26698                           ;RF.c: 147: else
 26699                           ;RF.c: 148: {
 26700                           ;RF.c: 149: One_Config2(pin);
 26701  017954  0101               	movlb	1	; () banked
 26702  017956  5183               	movf	Send_Config2@pin& (0+255),w,b
 26703  017958  EC6F  F005         	call	_One_Config2
 26704  01795C  D000               	goto	l14203
 26705  01795E                     l14203:
 26706  01795E  0101               	movlb	1	; () banked
 26707  017960  2B84               	incf	Send_Config2@i& (0+255),f,b
 26708  017962  D7D6               	goto	l14193
 26709  017964                     l14207:
 26710                           
 26711                           ; BSR set to: 1
 26712                           ;RF.c: 150: }
 26713                           ;RF.c: 151: }
 26714                           ;RF.c: 153: LATD &= ~pin;
 26715  017964  0101               	movlb	1	; () banked
 26716  017966  5183               	movf	Send_Config2@pin& (0+255),w,b
 26717  017968  0AFF               	xorlw	255
 26718  01796A  168C               	andwf	3980,f,c	;volatile
 26719                           
 26720                           ; BSR set to: 1
 26721                           ;RF.c: 154: delayUS(11700);
 26722  01796C  0EB4               	movlw	180
 26723  01796E  0101               	movlb	1	; () banked
 26724  017970  6F74               	movwf	delayUS@US& (0+255),b
 26725  017972  0E2D               	movlw	45
 26726  017974  6F75               	movwf	(delayUS@US+1)& (0+255),b
 26727  017976  0E00               	movlw	0
 26728  017978  6F76               	movwf	(delayUS@US+2)& (0+255),b
 26729  01797A  0E00               	movlw	0
 26730  01797C  6F77               	movwf	(delayUS@US+3)& (0+255),b
 26731  01797E  ECC6  F0BF         	call	_delayUS	;wreg free
 26732  017982  0012               	return		;funcret
 26733  017984                     __end_of_Send_Config2:
 26734                           	opt stack 0
 26735                           tblptru	equ	0xFF8
 26736                           tblptrh	equ	0xFF7
 26737                           tblptrl	equ	0xFF6
 26738                           tablat	equ	0xFF5
 26739                           prodh	equ	0xFF4
 26740                           prodl	equ	0xFF3
 26741                           intcon	equ	0xFF2
 26742                           intcon2	equ	0xFF1
 26743                           postinc0	equ	0xFEE
 26744                           plusw0	equ	0xFEB
 26745                           wreg	equ	0xFE8
 26746                           indf1	equ	0xFE7
 26747                           postdec1	equ	0xFE5
 26748                           fsr1h	equ	0xFE2
 26749                           fsr1l	equ	0xFE1
 26750                           indf2	equ	0xFDF
 26751                           postinc2	equ	0xFDE
 26752                           postdec2	equ	0xFDD
 26753                           plusw2	equ	0xFDB
 26754                           fsr2h	equ	0xFDA
 26755                           fsr2l	equ	0xFD9
 26756                           status	equ	0xFD8
 26757                           
 26758 ;; *************** function _Zero_Config2 *****************
 26759 ;; Defined at:
 26760 ;;		line 163 in file "RF.c"
 26761 ;; Parameters:    Size  Location     Type
 26762 ;;  pin             1    wreg     unsigned char 
 26763 ;; Auto vars:     Size  Location     Type
 26764 ;;  pin             1   24[BANK1 ] unsigned char 
 26765 ;; Return value:  Size  Location     Type
 26766 ;;		None               void
 26767 ;; Registers used:
 26768 ;;		wreg, status,2, status,0, cstack
 26769 ;; Tracked objects:
 26770 ;;		On entry : 0/0
 26771 ;;		On exit  : 0/0
 26772 ;;		Unchanged: 0/0
 26773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26775 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26777 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26778 ;;Total ram usage:        1 bytes
 26779 ;; Hardware stack levels used:    1
 26780 ;; Hardware stack levels required when called:    8
 26781 ;; This function calls:
 26782 ;;		_delayUS
 26783 ;; This function is called by:
 26784 ;;		_Send_Config2
 26785 ;; This function uses a non-reentrant model
 26786 ;;
 26787                           
 26788                           	psect	text65
 26789  000A9E                     __ptext65:
 26790                           	opt stack 0
 26791  000A9E                     _Zero_Config2:
 26792                           	opt stack 20
 26793                           
 26794                           ;incstack = 0
 26795                           ;Zero_Config2@pin stored from wreg
 26796  000A9E  0101               	movlb	1	; () banked
 26797  000AA0  6F7E               	movwf	Zero_Config2@pin& (0+255),b
 26798                           
 26799                           ; BSR set to: 1
 26800                           ;RF.c: 165: LATD |= pin;
 26801  000AA2  0101               	movlb	1	; () banked
 26802  000AA4  517E               	movf	Zero_Config2@pin& (0+255),w,b
 26803  000AA6  128C               	iorwf	3980,f,c	;volatile
 26804                           
 26805                           ; BSR set to: 1
 26806                           ;RF.c: 166: delayUS(705);
 26807  000AA8  0EC1               	movlw	193
 26808  000AAA  0101               	movlb	1	; () banked
 26809  000AAC  6F74               	movwf	delayUS@US& (0+255),b
 26810  000AAE  0E02               	movlw	2
 26811  000AB0  6F75               	movwf	(delayUS@US+1)& (0+255),b
 26812  000AB2  0E00               	movlw	0
 26813  000AB4  6F76               	movwf	(delayUS@US+2)& (0+255),b
 26814  000AB6  0E00               	movlw	0
 26815  000AB8  6F77               	movwf	(delayUS@US+3)& (0+255),b
 26816  000ABA  ECC6  F0BF         	call	_delayUS	;wreg free
 26817                           
 26818                           ;RF.c: 167: LATD &= ~pin;
 26819  000ABE  0101               	movlb	1	; () banked
 26820  000AC0  517E               	movf	Zero_Config2@pin& (0+255),w,b
 26821  000AC2  0AFF               	xorlw	255
 26822  000AC4  168C               	andwf	3980,f,c	;volatile
 26823                           
 26824                           ;RF.c: 168: delayUS(1910);
 26825  000AC6  0E76               	movlw	118
 26826  000AC8  0101               	movlb	1	; () banked
 26827  000ACA  6F74               	movwf	delayUS@US& (0+255),b
 26828  000ACC  0E07               	movlw	7
 26829  000ACE  6F75               	movwf	(delayUS@US+1)& (0+255),b
 26830  000AD0  0E00               	movlw	0
 26831  000AD2  6F76               	movwf	(delayUS@US+2)& (0+255),b
 26832  000AD4  0E00               	movlw	0
 26833  000AD6  6F77               	movwf	(delayUS@US+3)& (0+255),b
 26834  000AD8  ECC6  F0BF         	call	_delayUS	;wreg free
 26835  000ADC  0012               	return		;funcret
 26836  000ADE                     __end_of_Zero_Config2:
 26837                           	opt stack 0
 26838                           tblptru	equ	0xFF8
 26839                           tblptrh	equ	0xFF7
 26840                           tblptrl	equ	0xFF6
 26841                           tablat	equ	0xFF5
 26842                           prodh	equ	0xFF4
 26843                           prodl	equ	0xFF3
 26844                           intcon	equ	0xFF2
 26845                           intcon2	equ	0xFF1
 26846                           postinc0	equ	0xFEE
 26847                           plusw0	equ	0xFEB
 26848                           wreg	equ	0xFE8
 26849                           indf1	equ	0xFE7
 26850                           postdec1	equ	0xFE5
 26851                           fsr1h	equ	0xFE2
 26852                           fsr1l	equ	0xFE1
 26853                           indf2	equ	0xFDF
 26854                           postinc2	equ	0xFDE
 26855                           postdec2	equ	0xFDD
 26856                           plusw2	equ	0xFDB
 26857                           fsr2h	equ	0xFDA
 26858                           fsr2l	equ	0xFD9
 26859                           status	equ	0xFD8
 26860                           
 26861 ;; *************** function _One_Config2 *****************
 26862 ;; Defined at:
 26863 ;;		line 176 in file "RF.c"
 26864 ;; Parameters:    Size  Location     Type
 26865 ;;  pin             1    wreg     unsigned char 
 26866 ;; Auto vars:     Size  Location     Type
 26867 ;;  pin             1   24[BANK1 ] unsigned char 
 26868 ;; Return value:  Size  Location     Type
 26869 ;;		None               void
 26870 ;; Registers used:
 26871 ;;		wreg, status,2, status,0, cstack
 26872 ;; Tracked objects:
 26873 ;;		On entry : 0/0
 26874 ;;		On exit  : 0/0
 26875 ;;		Unchanged: 0/0
 26876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26878 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26880 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26881 ;;Total ram usage:        1 bytes
 26882 ;; Hardware stack levels used:    1
 26883 ;; Hardware stack levels required when called:    8
 26884 ;; This function calls:
 26885 ;;		_delayUS
 26886 ;; This function is called by:
 26887 ;;		_Send_Config2
 26888 ;; This function uses a non-reentrant model
 26889 ;;
 26890                           
 26891                           	psect	text66
 26892  000ADE                     __ptext66:
 26893                           	opt stack 0
 26894  000ADE                     _One_Config2:
 26895                           	opt stack 20
 26896                           
 26897                           ;incstack = 0
 26898                           ;One_Config2@pin stored from wreg
 26899  000ADE  0101               	movlb	1	; () banked
 26900  000AE0  6F7E               	movwf	One_Config2@pin& (0+255),b
 26901                           
 26902                           ; BSR set to: 1
 26903                           ;RF.c: 178: LATD |= pin;
 26904  000AE2  0101               	movlb	1	; () banked
 26905  000AE4  517E               	movf	One_Config2@pin& (0+255),w,b
 26906  000AE6  128C               	iorwf	3980,f,c	;volatile
 26907                           
 26908                           ; BSR set to: 1
 26909                           ;RF.c: 179: delayUS(1955);
 26910  000AE8  0EA3               	movlw	163
 26911  000AEA  0101               	movlb	1	; () banked
 26912  000AEC  6F74               	movwf	delayUS@US& (0+255),b
 26913  000AEE  0E07               	movlw	7
 26914  000AF0  6F75               	movwf	(delayUS@US+1)& (0+255),b
 26915  000AF2  0E00               	movlw	0
 26916  000AF4  6F76               	movwf	(delayUS@US+2)& (0+255),b
 26917  000AF6  0E00               	movlw	0
 26918  000AF8  6F77               	movwf	(delayUS@US+3)& (0+255),b
 26919  000AFA  ECC6  F0BF         	call	_delayUS	;wreg free
 26920                           
 26921                           ;RF.c: 180: LATD &= ~pin;
 26922  000AFE  0101               	movlb	1	; () banked
 26923  000B00  517E               	movf	One_Config2@pin& (0+255),w,b
 26924  000B02  0AFF               	xorlw	255
 26925  000B04  168C               	andwf	3980,f,c	;volatile
 26926                           
 26927                           ;RF.c: 181: delayUS(705);
 26928  000B06  0EC1               	movlw	193
 26929  000B08  0101               	movlb	1	; () banked
 26930  000B0A  6F74               	movwf	delayUS@US& (0+255),b
 26931  000B0C  0E02               	movlw	2
 26932  000B0E  6F75               	movwf	(delayUS@US+1)& (0+255),b
 26933  000B10  0E00               	movlw	0
 26934  000B12  6F76               	movwf	(delayUS@US+2)& (0+255),b
 26935  000B14  0E00               	movlw	0
 26936  000B16  6F77               	movwf	(delayUS@US+3)& (0+255),b
 26937  000B18  ECC6  F0BF         	call	_delayUS	;wreg free
 26938  000B1C  0012               	return		;funcret
 26939  000B1E                     __end_of_One_Config2:
 26940                           	opt stack 0
 26941                           tblptru	equ	0xFF8
 26942                           tblptrh	equ	0xFF7
 26943                           tblptrl	equ	0xFF6
 26944                           tablat	equ	0xFF5
 26945                           prodh	equ	0xFF4
 26946                           prodl	equ	0xFF3
 26947                           intcon	equ	0xFF2
 26948                           intcon2	equ	0xFF1
 26949                           postinc0	equ	0xFEE
 26950                           plusw0	equ	0xFEB
 26951                           wreg	equ	0xFE8
 26952                           indf1	equ	0xFE7
 26953                           postdec1	equ	0xFE5
 26954                           fsr1h	equ	0xFE2
 26955                           fsr1l	equ	0xFE1
 26956                           indf2	equ	0xFDF
 26957                           postinc2	equ	0xFDE
 26958                           postdec2	equ	0xFDD
 26959                           plusw2	equ	0xFDB
 26960                           fsr2h	equ	0xFDA
 26961                           fsr2l	equ	0xFD9
 26962                           status	equ	0xFD8
 26963                           
 26964 ;; *************** function _Send_Config1 *****************
 26965 ;; Defined at:
 26966 ;;		line 54 in file "RF.c"
 26967 ;; Parameters:    Size  Location     Type
 26968 ;;  pin             1    wreg     unsigned char 
 26969 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 26970 ;;		 -> TXdataF(12), TXdataE(12), TXdataD(12), 
 26971 ;; Auto vars:     Size  Location     Type
 26972 ;;  pin             1   30[BANK1 ] unsigned char 
 26973 ;;  i               1   29[BANK1 ] unsigned char 
 26974 ;; Return value:  Size  Location     Type
 26975 ;;		None               void
 26976 ;; Registers used:
 26977 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26978 ;; Tracked objects:
 26979 ;;		On entry : 0/0
 26980 ;;		On exit  : 0/0
 26981 ;;		Unchanged: 0/0
 26982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26983 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26984 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26985 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26986 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 26987 ;;Total ram usage:        6 bytes
 26988 ;; Hardware stack levels used:    1
 26989 ;; Hardware stack levels required when called:    9
 26990 ;; This function calls:
 26991 ;;		_One_Config1
 26992 ;;		_Zero_Config1
 26993 ;;		_delayUS
 26994 ;;		_f_Config1
 26995 ;; This function is called by:
 26996 ;;		_Command
 26997 ;; This function uses a non-reentrant model
 26998 ;;
 26999                           
 27000                           	psect	text67
 27001  016948                     __ptext67:
 27002                           	opt stack 0
 27003  016948                     _Send_Config1:
 27004                           	opt stack 20
 27005                           
 27006                           ;incstack = 0
 27007                           ;Send_Config1@pin stored from wreg
 27008  016948  0101               	movlb	1	; () banked
 27009  01694A  6F84               	movwf	Send_Config1@pin& (0+255),b
 27010                           
 27011                           ; BSR set to: 1
 27012                           ;RF.c: 56: unsigned char i=0;
 27013  01694C  0E00               	movlw	0
 27014  01694E  0101               	movlb	1	; () banked
 27015  016950  6F83               	movwf	Send_Config1@i& (0+255),b
 27016                           
 27017                           ;RF.c: 58: for(i=0;i<12;i++)
 27018  016952  0E00               	movlw	0
 27019  016954  0101               	movlb	1	; () banked
 27020  016956  6F83               	movwf	Send_Config1@i& (0+255),b
 27021  016958                     l14167:
 27022                           
 27023                           ; BSR set to: 1
 27024  016958  0E0B               	movlw	11
 27025  01695A  0101               	movlb	1	; () banked
 27026  01695C  6583               	cpfsgt	Send_Config1@i& (0+255),b
 27027  01695E  D001               	goto	l14171
 27028                           
 27029                           ; BSR set to: 1
 27030  016960  D042               	goto	l14185
 27031  016962                     l14171:
 27032                           
 27033                           ; BSR set to: 1
 27034                           ;RF.c: 59: {
 27035                           ;RF.c: 60: if(data[i] == 0)
 27036  016962  0101               	movlb	1	; () banked
 27037  016964  5183               	movf	Send_Config1@i& (0+255),w,b
 27038  016966  0D01               	mullw	1
 27039  016968  C17F  F181         	movff	Send_Config1@data,??_Send_Config1
 27040  01696C  C180  F182         	movff	Send_Config1@data+1,??_Send_Config1+1
 27041  016970  50F3               	movf	prodl,w,c
 27042  016972  0101               	movlb	1	; () banked
 27043  016974  2781               	addwf	??_Send_Config1& (0+255),f,b
 27044  016976  50F4               	movf	prodh,w,c
 27045  016978  0101               	movlb	1	; () banked
 27046  01697A  2382               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 27047  01697C  C181  FFF6         	movff	??_Send_Config1,tblptrl
 27048  016980  C182  FFF7         	movff	??_Send_Config1+1,tblptrh
 27049  016984                     	if	0	;tblptru may be non-zero
 27050  016984                     	endif
 27051  016984                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27052  016984  0E00               	movlw	low (__mediumconst shr (0+16))
 27053  016986  6EF8               	movwf	tblptru,c
 27054  016988                     	endif
 27055  016988  0008               	tblrd		*
 27056  01698A  50F5               	movf	tablat,w,c
 27057  01698C  0900               	iorlw	0
 27058  01698E  A4D8               	btfss	status,2,c
 27059  016990  D005               	goto	l14175
 27060                           
 27061                           ; BSR set to: 1
 27062                           ;RF.c: 61: {
 27063                           ;RF.c: 62: Zero_Config1(pin);
 27064  016992  0101               	movlb	1	; () banked
 27065  016994  5184               	movf	Send_Config1@pin& (0+255),w,b
 27066  016996  EC7E  F0BD         	call	_Zero_Config1
 27067                           
 27068                           ;RF.c: 63: }
 27069  01699A  D022               	goto	l14181
 27070  01699C                     l14175:
 27071                           
 27072                           ;RF.c: 64: else if(data[i] ==1)
 27073  01699C  0101               	movlb	1	; () banked
 27074  01699E  5183               	movf	Send_Config1@i& (0+255),w,b
 27075  0169A0  0D01               	mullw	1
 27076  0169A2  C17F  F181         	movff	Send_Config1@data,??_Send_Config1
 27077  0169A6  C180  F182         	movff	Send_Config1@data+1,??_Send_Config1+1
 27078  0169AA  50F3               	movf	prodl,w,c
 27079  0169AC  0101               	movlb	1	; () banked
 27080  0169AE  2781               	addwf	??_Send_Config1& (0+255),f,b
 27081  0169B0  50F4               	movf	prodh,w,c
 27082  0169B2  0101               	movlb	1	; () banked
 27083  0169B4  2382               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 27084  0169B6  C181  FFF6         	movff	??_Send_Config1,tblptrl
 27085  0169BA  C182  FFF7         	movff	??_Send_Config1+1,tblptrh
 27086  0169BE                     	if	0	;tblptru may be non-zero
 27087  0169BE                     	endif
 27088  0169BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 27089  0169BE  0E00               	movlw	low (__mediumconst shr (0+16))
 27090  0169C0  6EF8               	movwf	tblptru,c
 27091  0169C2                     	endif
 27092  0169C2  0008               	tblrd		*
 27093  0169C4  50F5               	movf	tablat,w,c
 27094  0169C6  06E8               	decf	wreg,f,c
 27095  0169C8  A4D8               	btfss	status,2,c
 27096  0169CA  D005               	goto	l14179
 27097                           
 27098                           ; BSR set to: 1
 27099                           ;RF.c: 65: {
 27100                           ;RF.c: 66: One_Config1(pin);
 27101  0169CC  0101               	movlb	1	; () banked
 27102  0169CE  5184               	movf	Send_Config1@pin& (0+255),w,b
 27103  0169D0  ECBB  F0BD         	call	_One_Config1
 27104                           
 27105                           ;RF.c: 67: }
 27106  0169D4  D005               	goto	l14181
 27107  0169D6                     l14179:
 27108                           
 27109                           ;RF.c: 68: else
 27110                           ;RF.c: 69: {
 27111                           ;RF.c: 70: f_Config1(pin);
 27112  0169D6  0101               	movlb	1	; () banked
 27113  0169D8  5184               	movf	Send_Config1@pin& (0+255),w,b
 27114  0169DA  EC41  F0BD         	call	_f_Config1
 27115  0169DE  D000               	goto	l14181
 27116  0169E0                     l14181:
 27117  0169E0  0101               	movlb	1	; () banked
 27118  0169E2  2B83               	incf	Send_Config1@i& (0+255),f,b
 27119  0169E4  D7B9               	goto	l14167
 27120  0169E6                     l14185:
 27121                           
 27122                           ; BSR set to: 1
 27123                           ;RF.c: 71: }
 27124                           ;RF.c: 72: }
 27125                           ;RF.c: 74: LATD |= pin;
 27126  0169E6  0101               	movlb	1	; () banked
 27127  0169E8  5184               	movf	Send_Config1@pin& (0+255),w,b
 27128  0169EA  128C               	iorwf	3980,f,c	;volatile
 27129                           
 27130                           ; BSR set to: 1
 27131                           ;RF.c: 75: delayUS(222);
 27132  0169EC  0EDE               	movlw	222
 27133  0169EE  0101               	movlb	1	; () banked
 27134  0169F0  6F74               	movwf	delayUS@US& (0+255),b
 27135  0169F2  0E00               	movlw	0
 27136  0169F4  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27137  0169F6  0E00               	movlw	0
 27138  0169F8  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27139  0169FA  0E00               	movlw	0
 27140  0169FC  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27141  0169FE  ECC6  F0BF         	call	_delayUS	;wreg free
 27142                           
 27143                           ;RF.c: 76: LATD &= ~pin;
 27144  016A02  0101               	movlb	1	; () banked
 27145  016A04  5184               	movf	Send_Config1@pin& (0+255),w,b
 27146  016A06  0AFF               	xorlw	255
 27147  016A08  168C               	andwf	3980,f,c	;volatile
 27148                           
 27149                           ;RF.c: 77: delayUS(7330);
 27150  016A0A  0EA2               	movlw	162
 27151  016A0C  0101               	movlb	1	; () banked
 27152  016A0E  6F74               	movwf	delayUS@US& (0+255),b
 27153  016A10  0E1C               	movlw	28
 27154  016A12  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27155  016A14  0E00               	movlw	0
 27156  016A16  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27157  016A18  0E00               	movlw	0
 27158  016A1A  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27159  016A1C  ECC6  F0BF         	call	_delayUS	;wreg free
 27160  016A20  0012               	return		;funcret
 27161  016A22                     __end_of_Send_Config1:
 27162                           	opt stack 0
 27163                           tblptru	equ	0xFF8
 27164                           tblptrh	equ	0xFF7
 27165                           tblptrl	equ	0xFF6
 27166                           tablat	equ	0xFF5
 27167                           prodh	equ	0xFF4
 27168                           prodl	equ	0xFF3
 27169                           intcon	equ	0xFF2
 27170                           intcon2	equ	0xFF1
 27171                           postinc0	equ	0xFEE
 27172                           plusw0	equ	0xFEB
 27173                           wreg	equ	0xFE8
 27174                           indf1	equ	0xFE7
 27175                           postdec1	equ	0xFE5
 27176                           fsr1h	equ	0xFE2
 27177                           fsr1l	equ	0xFE1
 27178                           indf2	equ	0xFDF
 27179                           postinc2	equ	0xFDE
 27180                           postdec2	equ	0xFDD
 27181                           plusw2	equ	0xFDB
 27182                           fsr2h	equ	0xFDA
 27183                           fsr2l	equ	0xFD9
 27184                           status	equ	0xFD8
 27185                           
 27186 ;; *************** function _f_Config1 *****************
 27187 ;; Defined at:
 27188 ;;		line 120 in file "RF.c"
 27189 ;; Parameters:    Size  Location     Type
 27190 ;;  pin             1    wreg     unsigned char 
 27191 ;; Auto vars:     Size  Location     Type
 27192 ;;  pin             1   24[BANK1 ] unsigned char 
 27193 ;; Return value:  Size  Location     Type
 27194 ;;		None               void
 27195 ;; Registers used:
 27196 ;;		wreg, status,2, status,0, cstack
 27197 ;; Tracked objects:
 27198 ;;		On entry : 0/0
 27199 ;;		On exit  : 0/0
 27200 ;;		Unchanged: 0/0
 27201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27203 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27205 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27206 ;;Total ram usage:        1 bytes
 27207 ;; Hardware stack levels used:    1
 27208 ;; Hardware stack levels required when called:    8
 27209 ;; This function calls:
 27210 ;;		_delayUS
 27211 ;; This function is called by:
 27212 ;;		_Send_Config1
 27213 ;; This function uses a non-reentrant model
 27214 ;;
 27215                           
 27216                           	psect	text68
 27217  017A82                     __ptext68:
 27218                           	opt stack 0
 27219  017A82                     _f_Config1:
 27220                           	opt stack 20
 27221                           
 27222                           ;incstack = 0
 27223                           ;f_Config1@pin stored from wreg
 27224  017A82  0101               	movlb	1	; () banked
 27225  017A84  6F7E               	movwf	f_Config1@pin& (0+255),b
 27226                           
 27227                           ; BSR set to: 1
 27228                           ;RF.c: 122: LATD |= pin;
 27229  017A86  0101               	movlb	1	; () banked
 27230  017A88  517E               	movf	f_Config1@pin& (0+255),w,b
 27231  017A8A  128C               	iorwf	3980,f,c	;volatile
 27232                           
 27233                           ; BSR set to: 1
 27234                           ;RF.c: 123: delayUS(216);
 27235  017A8C  0ED8               	movlw	216
 27236  017A8E  0101               	movlb	1	; () banked
 27237  017A90  6F74               	movwf	delayUS@US& (0+255),b
 27238  017A92  0E00               	movlw	0
 27239  017A94  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27240  017A96  0E00               	movlw	0
 27241  017A98  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27242  017A9A  0E00               	movlw	0
 27243  017A9C  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27244  017A9E  ECC6  F0BF         	call	_delayUS	;wreg free
 27245                           
 27246                           ;RF.c: 124: LATD &= ~pin;
 27247  017AA2  0101               	movlb	1	; () banked
 27248  017AA4  517E               	movf	f_Config1@pin& (0+255),w,b
 27249  017AA6  0AFF               	xorlw	255
 27250  017AA8  168C               	andwf	3980,f,c	;volatile
 27251                           
 27252                           ;RF.c: 125: delayUS(614);
 27253  017AAA  0E66               	movlw	102
 27254  017AAC  0101               	movlb	1	; () banked
 27255  017AAE  6F74               	movwf	delayUS@US& (0+255),b
 27256  017AB0  0E02               	movlw	2
 27257  017AB2  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27258  017AB4  0E00               	movlw	0
 27259  017AB6  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27260  017AB8  0E00               	movlw	0
 27261  017ABA  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27262  017ABC  ECC6  F0BF         	call	_delayUS	;wreg free
 27263                           
 27264                           ;RF.c: 126: LATD |= pin;
 27265  017AC0  0101               	movlb	1	; () banked
 27266  017AC2  517E               	movf	f_Config1@pin& (0+255),w,b
 27267  017AC4  128C               	iorwf	3980,f,c	;volatile
 27268                           
 27269                           ; BSR set to: 1
 27270                           ;RF.c: 127: delayUS(614);
 27271  017AC6  0E66               	movlw	102
 27272  017AC8  0101               	movlb	1	; () banked
 27273  017ACA  6F74               	movwf	delayUS@US& (0+255),b
 27274  017ACC  0E02               	movlw	2
 27275  017ACE  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27276  017AD0  0E00               	movlw	0
 27277  017AD2  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27278  017AD4  0E00               	movlw	0
 27279  017AD6  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27280  017AD8  ECC6  F0BF         	call	_delayUS	;wreg free
 27281                           
 27282                           ;RF.c: 128: LATD &= ~pin;
 27283  017ADC  0101               	movlb	1	; () banked
 27284  017ADE  517E               	movf	f_Config1@pin& (0+255),w,b
 27285  017AE0  0AFF               	xorlw	255
 27286  017AE2  168C               	andwf	3980,f,c	;volatile
 27287                           
 27288                           ; BSR set to: 1
 27289                           ;RF.c: 129: delayUS(216);
 27290  017AE4  0ED8               	movlw	216
 27291  017AE6  0101               	movlb	1	; () banked
 27292  017AE8  6F74               	movwf	delayUS@US& (0+255),b
 27293  017AEA  0E00               	movlw	0
 27294  017AEC  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27295  017AEE  0E00               	movlw	0
 27296  017AF0  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27297  017AF2  0E00               	movlw	0
 27298  017AF4  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27299  017AF6  ECC6  F0BF         	call	_delayUS	;wreg free
 27300  017AFA  0012               	return		;funcret
 27301  017AFC                     __end_of_f_Config1:
 27302                           	opt stack 0
 27303                           tblptru	equ	0xFF8
 27304                           tblptrh	equ	0xFF7
 27305                           tblptrl	equ	0xFF6
 27306                           tablat	equ	0xFF5
 27307                           prodh	equ	0xFF4
 27308                           prodl	equ	0xFF3
 27309                           intcon	equ	0xFF2
 27310                           intcon2	equ	0xFF1
 27311                           postinc0	equ	0xFEE
 27312                           plusw0	equ	0xFEB
 27313                           wreg	equ	0xFE8
 27314                           indf1	equ	0xFE7
 27315                           postdec1	equ	0xFE5
 27316                           fsr1h	equ	0xFE2
 27317                           fsr1l	equ	0xFE1
 27318                           indf2	equ	0xFDF
 27319                           postinc2	equ	0xFDE
 27320                           postdec2	equ	0xFDD
 27321                           plusw2	equ	0xFDB
 27322                           fsr2h	equ	0xFDA
 27323                           fsr2l	equ	0xFD9
 27324                           status	equ	0xFD8
 27325                           
 27326 ;; *************** function _Zero_Config1 *****************
 27327 ;; Defined at:
 27328 ;;		line 86 in file "RF.c"
 27329 ;; Parameters:    Size  Location     Type
 27330 ;;  pin             1    wreg     unsigned char 
 27331 ;; Auto vars:     Size  Location     Type
 27332 ;;  pin             1   24[BANK1 ] unsigned char 
 27333 ;; Return value:  Size  Location     Type
 27334 ;;		None               void
 27335 ;; Registers used:
 27336 ;;		wreg, status,2, status,0, cstack
 27337 ;; Tracked objects:
 27338 ;;		On entry : 0/0
 27339 ;;		On exit  : 0/0
 27340 ;;		Unchanged: 0/0
 27341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27343 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27345 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27346 ;;Total ram usage:        1 bytes
 27347 ;; Hardware stack levels used:    1
 27348 ;; Hardware stack levels required when called:    8
 27349 ;; This function calls:
 27350 ;;		_delayUS
 27351 ;; This function is called by:
 27352 ;;		_Send_Config1
 27353 ;; This function uses a non-reentrant model
 27354 ;;
 27355                           
 27356                           	psect	text69
 27357  017AFC                     __ptext69:
 27358                           	opt stack 0
 27359  017AFC                     _Zero_Config1:
 27360                           	opt stack 20
 27361                           
 27362                           ;incstack = 0
 27363                           ;Zero_Config1@pin stored from wreg
 27364  017AFC  0101               	movlb	1	; () banked
 27365  017AFE  6F7E               	movwf	Zero_Config1@pin& (0+255),b
 27366                           
 27367                           ; BSR set to: 1
 27368                           ;RF.c: 88: LATD |= pin;
 27369  017B00  0101               	movlb	1	; () banked
 27370  017B02  517E               	movf	Zero_Config1@pin& (0+255),w,b
 27371  017B04  128C               	iorwf	3980,f,c	;volatile
 27372                           
 27373                           ; BSR set to: 1
 27374                           ;RF.c: 89: delayUS(216 );
 27375  017B06  0ED8               	movlw	216
 27376  017B08  0101               	movlb	1	; () banked
 27377  017B0A  6F74               	movwf	delayUS@US& (0+255),b
 27378  017B0C  0E00               	movlw	0
 27379  017B0E  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27380  017B10  0E00               	movlw	0
 27381  017B12  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27382  017B14  0E00               	movlw	0
 27383  017B16  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27384  017B18  ECC6  F0BF         	call	_delayUS	;wreg free
 27385                           
 27386                           ;RF.c: 90: LATD &= ~pin;
 27387  017B1C  0101               	movlb	1	; () banked
 27388  017B1E  517E               	movf	Zero_Config1@pin& (0+255),w,b
 27389  017B20  0AFF               	xorlw	255
 27390  017B22  168C               	andwf	3980,f,c	;volatile
 27391                           
 27392                           ;RF.c: 91: delayUS(614 );
 27393  017B24  0E66               	movlw	102
 27394  017B26  0101               	movlb	1	; () banked
 27395  017B28  6F74               	movwf	delayUS@US& (0+255),b
 27396  017B2A  0E02               	movlw	2
 27397  017B2C  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27398  017B2E  0E00               	movlw	0
 27399  017B30  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27400  017B32  0E00               	movlw	0
 27401  017B34  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27402  017B36  ECC6  F0BF         	call	_delayUS	;wreg free
 27403                           
 27404                           ;RF.c: 92: LATD |= pin;
 27405  017B3A  0101               	movlb	1	; () banked
 27406  017B3C  517E               	movf	Zero_Config1@pin& (0+255),w,b
 27407  017B3E  128C               	iorwf	3980,f,c	;volatile
 27408                           
 27409                           ; BSR set to: 1
 27410                           ;RF.c: 93: delayUS(216 );
 27411  017B40  0ED8               	movlw	216
 27412  017B42  0101               	movlb	1	; () banked
 27413  017B44  6F74               	movwf	delayUS@US& (0+255),b
 27414  017B46  0E00               	movlw	0
 27415  017B48  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27416  017B4A  0E00               	movlw	0
 27417  017B4C  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27418  017B4E  0E00               	movlw	0
 27419  017B50  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27420  017B52  ECC6  F0BF         	call	_delayUS	;wreg free
 27421                           
 27422                           ;RF.c: 94: LATD &= ~pin;
 27423  017B56  0101               	movlb	1	; () banked
 27424  017B58  517E               	movf	Zero_Config1@pin& (0+255),w,b
 27425  017B5A  0AFF               	xorlw	255
 27426  017B5C  168C               	andwf	3980,f,c	;volatile
 27427                           
 27428                           ; BSR set to: 1
 27429                           ;RF.c: 95: delayUS(614 );
 27430  017B5E  0E66               	movlw	102
 27431  017B60  0101               	movlb	1	; () banked
 27432  017B62  6F74               	movwf	delayUS@US& (0+255),b
 27433  017B64  0E02               	movlw	2
 27434  017B66  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27435  017B68  0E00               	movlw	0
 27436  017B6A  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27437  017B6C  0E00               	movlw	0
 27438  017B6E  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27439  017B70  ECC6  F0BF         	call	_delayUS	;wreg free
 27440  017B74  0012               	return		;funcret
 27441  017B76                     __end_of_Zero_Config1:
 27442                           	opt stack 0
 27443                           tblptru	equ	0xFF8
 27444                           tblptrh	equ	0xFF7
 27445                           tblptrl	equ	0xFF6
 27446                           tablat	equ	0xFF5
 27447                           prodh	equ	0xFF4
 27448                           prodl	equ	0xFF3
 27449                           intcon	equ	0xFF2
 27450                           intcon2	equ	0xFF1
 27451                           postinc0	equ	0xFEE
 27452                           plusw0	equ	0xFEB
 27453                           wreg	equ	0xFE8
 27454                           indf1	equ	0xFE7
 27455                           postdec1	equ	0xFE5
 27456                           fsr1h	equ	0xFE2
 27457                           fsr1l	equ	0xFE1
 27458                           indf2	equ	0xFDF
 27459                           postinc2	equ	0xFDE
 27460                           postdec2	equ	0xFDD
 27461                           plusw2	equ	0xFDB
 27462                           fsr2h	equ	0xFDA
 27463                           fsr2l	equ	0xFD9
 27464                           status	equ	0xFD8
 27465                           
 27466 ;; *************** function _One_Config1 *****************
 27467 ;; Defined at:
 27468 ;;		line 103 in file "RF.c"
 27469 ;; Parameters:    Size  Location     Type
 27470 ;;  pin             1    wreg     unsigned char 
 27471 ;; Auto vars:     Size  Location     Type
 27472 ;;  pin             1   24[BANK1 ] unsigned char 
 27473 ;; Return value:  Size  Location     Type
 27474 ;;		None               void
 27475 ;; Registers used:
 27476 ;;		wreg, status,2, status,0, cstack
 27477 ;; Tracked objects:
 27478 ;;		On entry : 0/0
 27479 ;;		On exit  : 0/0
 27480 ;;		Unchanged: 0/0
 27481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27483 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27485 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27486 ;;Total ram usage:        1 bytes
 27487 ;; Hardware stack levels used:    1
 27488 ;; Hardware stack levels required when called:    8
 27489 ;; This function calls:
 27490 ;;		_delayUS
 27491 ;; This function is called by:
 27492 ;;		_Send_Config1
 27493 ;; This function uses a non-reentrant model
 27494 ;;
 27495                           
 27496                           	psect	text70
 27497  017B76                     __ptext70:
 27498                           	opt stack 0
 27499  017B76                     _One_Config1:
 27500                           	opt stack 20
 27501                           
 27502                           ;incstack = 0
 27503                           ;One_Config1@pin stored from wreg
 27504  017B76  0101               	movlb	1	; () banked
 27505  017B78  6F7E               	movwf	One_Config1@pin& (0+255),b
 27506                           
 27507                           ; BSR set to: 1
 27508                           ;RF.c: 105: LATD |= pin;
 27509  017B7A  0101               	movlb	1	; () banked
 27510  017B7C  517E               	movf	One_Config1@pin& (0+255),w,b
 27511  017B7E  128C               	iorwf	3980,f,c	;volatile
 27512                           
 27513                           ; BSR set to: 1
 27514                           ;RF.c: 106: delayUS(614);
 27515  017B80  0E66               	movlw	102
 27516  017B82  0101               	movlb	1	; () banked
 27517  017B84  6F74               	movwf	delayUS@US& (0+255),b
 27518  017B86  0E02               	movlw	2
 27519  017B88  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27520  017B8A  0E00               	movlw	0
 27521  017B8C  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27522  017B8E  0E00               	movlw	0
 27523  017B90  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27524  017B92  ECC6  F0BF         	call	_delayUS	;wreg free
 27525                           
 27526                           ;RF.c: 107: LATD &= ~pin;
 27527  017B96  0101               	movlb	1	; () banked
 27528  017B98  517E               	movf	One_Config1@pin& (0+255),w,b
 27529  017B9A  0AFF               	xorlw	255
 27530  017B9C  168C               	andwf	3980,f,c	;volatile
 27531                           
 27532                           ;RF.c: 108: delayUS(216);
 27533  017B9E  0ED8               	movlw	216
 27534  017BA0  0101               	movlb	1	; () banked
 27535  017BA2  6F74               	movwf	delayUS@US& (0+255),b
 27536  017BA4  0E00               	movlw	0
 27537  017BA6  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27538  017BA8  0E00               	movlw	0
 27539  017BAA  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27540  017BAC  0E00               	movlw	0
 27541  017BAE  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27542  017BB0  ECC6  F0BF         	call	_delayUS	;wreg free
 27543                           
 27544                           ;RF.c: 109: LATD |= pin;
 27545  017BB4  0101               	movlb	1	; () banked
 27546  017BB6  517E               	movf	One_Config1@pin& (0+255),w,b
 27547  017BB8  128C               	iorwf	3980,f,c	;volatile
 27548                           
 27549                           ; BSR set to: 1
 27550                           ;RF.c: 110: delayUS(614);
 27551  017BBA  0E66               	movlw	102
 27552  017BBC  0101               	movlb	1	; () banked
 27553  017BBE  6F74               	movwf	delayUS@US& (0+255),b
 27554  017BC0  0E02               	movlw	2
 27555  017BC2  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27556  017BC4  0E00               	movlw	0
 27557  017BC6  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27558  017BC8  0E00               	movlw	0
 27559  017BCA  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27560  017BCC  ECC6  F0BF         	call	_delayUS	;wreg free
 27561                           
 27562                           ;RF.c: 111: LATD &= ~pin;
 27563  017BD0  0101               	movlb	1	; () banked
 27564  017BD2  517E               	movf	One_Config1@pin& (0+255),w,b
 27565  017BD4  0AFF               	xorlw	255
 27566  017BD6  168C               	andwf	3980,f,c	;volatile
 27567                           
 27568                           ; BSR set to: 1
 27569                           ;RF.c: 112: delayUS(216);
 27570  017BD8  0ED8               	movlw	216
 27571  017BDA  0101               	movlb	1	; () banked
 27572  017BDC  6F74               	movwf	delayUS@US& (0+255),b
 27573  017BDE  0E00               	movlw	0
 27574  017BE0  6F75               	movwf	(delayUS@US+1)& (0+255),b
 27575  017BE2  0E00               	movlw	0
 27576  017BE4  6F76               	movwf	(delayUS@US+2)& (0+255),b
 27577  017BE6  0E00               	movlw	0
 27578  017BE8  6F77               	movwf	(delayUS@US+3)& (0+255),b
 27579  017BEA  ECC6  F0BF         	call	_delayUS	;wreg free
 27580  017BEE  0012               	return		;funcret
 27581  017BF0                     __end_of_One_Config1:
 27582                           	opt stack 0
 27583                           tblptru	equ	0xFF8
 27584                           tblptrh	equ	0xFF7
 27585                           tblptrl	equ	0xFF6
 27586                           tablat	equ	0xFF5
 27587                           prodh	equ	0xFF4
 27588                           prodl	equ	0xFF3
 27589                           intcon	equ	0xFF2
 27590                           intcon2	equ	0xFF1
 27591                           postinc0	equ	0xFEE
 27592                           plusw0	equ	0xFEB
 27593                           wreg	equ	0xFE8
 27594                           indf1	equ	0xFE7
 27595                           postdec1	equ	0xFE5
 27596                           fsr1h	equ	0xFE2
 27597                           fsr1l	equ	0xFE1
 27598                           indf2	equ	0xFDF
 27599                           postinc2	equ	0xFDE
 27600                           postdec2	equ	0xFDD
 27601                           plusw2	equ	0xFDB
 27602                           fsr2h	equ	0xFDA
 27603                           fsr2l	equ	0xFD9
 27604                           status	equ	0xFD8
 27605                           
 27606 ;; *************** function _SET_RTC_TIME *****************
 27607 ;; Defined at:
 27608 ;;		line 170 in file "RTC.c"
 27609 ;; Parameters:    Size  Location     Type
 27610 ;;  SetTime         9   22[BANK1 ] struct TIME
 27611 ;; Auto vars:     Size  Location     Type
 27612 ;;  temp            7   35[BANK1 ] unsigned char [7]
 27613 ;;  Error           1   42[BANK1 ] char 
 27614 ;; Return value:  Size  Location     Type
 27615 ;;                  1    wreg      unsigned char 
 27616 ;; Registers used:
 27617 ;;		wreg, status,2, status,0, cstack
 27618 ;; Tracked objects:
 27619 ;;		On entry : 0/0
 27620 ;;		On exit  : 0/0
 27621 ;;		Unchanged: 0/0
 27622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27623 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 27624 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 27625 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27626 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
 27627 ;;Total ram usage:       21 bytes
 27628 ;; Hardware stack levels used:    1
 27629 ;; Hardware stack levels required when called:   10
 27630 ;; This function calls:
 27631 ;;		_I2C_Write_At_Address
 27632 ;;		___awdiv
 27633 ;;		___awmod
 27634 ;; This function is called by:
 27635 ;;		_Command
 27636 ;; This function uses a non-reentrant model
 27637 ;;
 27638                           
 27639                           	psect	text71
 27640  014928                     __ptext71:
 27641                           	opt stack 0
 27642  014928                     _SET_RTC_TIME:
 27643                           	opt stack 19
 27644                           
 27645                           ;RTC.c: 172: signed char Error =0;
 27646                           
 27647                           ;incstack = 0
 27648  014928  0E00               	movlw	0
 27649  01492A  0101               	movlb	1	; () banked
 27650  01492C  6F90               	movwf	SET_RTC_TIME@Error& (0+255),b
 27651                           
 27652                           ; BSR set to: 1
 27653                           ;RTC.c: 173: unsigned char temp[7];
 27654                           ;RTC.c: 175: temp[0] = ((SetTime.Seconds /10) << 4) + (SetTime.Seconds % 10);
 27655  01492E  C17C  F174         	movff	SET_RTC_TIME@SetTime,___awmod@dividend
 27656  014932  0101               	movlb	1	; () banked
 27657  014934  6B75               	clrf	(___awmod@dividend+1)& (0+255),b
 27658  014936  0E00               	movlw	0
 27659  014938  0101               	movlb	1	; () banked
 27660  01493A  6F77               	movwf	(___awmod@divisor+1)& (0+255),b
 27661  01493C  0E0A               	movlw	10
 27662  01493E  6F76               	movwf	___awmod@divisor& (0+255),b
 27663  014940  ECC8  F0B7         	call	___awmod	;wreg free
 27664  014944  C174  F185         	movff	?___awmod,??_SET_RTC_TIME
 27665  014948  C175  F186         	movff	?___awmod+1,??_SET_RTC_TIME+1
 27666  01494C  C17C  F174         	movff	SET_RTC_TIME@SetTime,___awdiv@dividend
 27667  014950  0101               	movlb	1	; () banked
 27668  014952  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
 27669  014954  0E00               	movlw	0
 27670  014956  0101               	movlb	1	; () banked
 27671  014958  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
 27672  01495A  0E0A               	movlw	10
 27673  01495C  6F76               	movwf	___awdiv@divisor& (0+255),b
 27674  01495E  EC11  F0B5         	call	___awdiv	;wreg free
 27675  014962  0101               	movlb	1	; () banked
 27676  014964  3974               	swapf	?___awdiv& (0+255),w,b
 27677  014966  0BF0               	andlw	240
 27678  014968  0101               	movlb	1	; () banked
 27679  01496A  2585               	addwf	??_SET_RTC_TIME& (0+255),w,b
 27680  01496C  0101               	movlb	1	; () banked
 27681  01496E  6F89               	movwf	SET_RTC_TIME@temp& (0+255),b
 27682                           
 27683                           ; BSR set to: 1
 27684                           ;RTC.c: 176: Error = I2C_Write_At_Address( 0b1101000, 0x00, temp[0] );
 27685  014970  0E00               	movlw	0
 27686  014972  0101               	movlb	1	; () banked
 27687  014974  6F76               	movwf	I2C_Write_At_Address@Register& (0+255),b
 27688  014976  C189  F177         	movff	SET_RTC_TIME@temp,I2C_Write_At_Address@data
 27689  01497A  0E68               	movlw	104
 27690  01497C  EC79  F0B5         	call	_I2C_Write_At_Address
 27691  014980  0101               	movlb	1	; () banked
 27692  014982  6F90               	movwf	SET_RTC_TIME@Error& (0+255),b
 27693                           
 27694                           ;RTC.c: 177: if(Error)
 27695  014984  0101               	movlb	1	; () banked
 27696  014986  5190               	movf	SET_RTC_TIME@Error& (0+255),w,b
 27697  014988  0101               	movlb	1	; () banked
 27698  01498A  B4D8               	btfsc	status,2,c
 27699  01498C  D002               	goto	l14547
 27700                           
 27701                           ; BSR set to: 1
 27702                           ;RTC.c: 178: {
 27703                           ;RTC.c: 179: return 1;
 27704  01498E  0E01               	movlw	1
 27705                           
 27706                           ; BSR set to: 1
 27707  014990  0012               	return	
 27708  014992                     l14547:
 27709                           
 27710                           ; BSR set to: 1
 27711                           ;RTC.c: 180: }
 27712                           ;RTC.c: 182: temp[1] = ((SetTime.Minutes /10) << 4) + (SetTime.Minutes % 10);
 27713  014992  C17D  F174         	movff	SET_RTC_TIME@SetTime+1,___awmod@dividend
 27714  014996  0101               	movlb	1	; () banked
 27715  014998  6B75               	clrf	(___awmod@dividend+1)& (0+255),b
 27716  01499A  0E00               	movlw	0
 27717  01499C  0101               	movlb	1	; () banked
 27718  01499E  6F77               	movwf	(___awmod@divisor+1)& (0+255),b
 27719  0149A0  0E0A               	movlw	10
 27720  0149A2  6F76               	movwf	___awmod@divisor& (0+255),b
 27721  0149A4  ECC8  F0B7         	call	___awmod	;wreg free
 27722  0149A8  C174  F185         	movff	?___awmod,??_SET_RTC_TIME
 27723  0149AC  C175  F186         	movff	?___awmod+1,??_SET_RTC_TIME+1
 27724  0149B0  C17D  F174         	movff	SET_RTC_TIME@SetTime+1,___awdiv@dividend
 27725  0149B4  0101               	movlb	1	; () banked
 27726  0149B6  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
 27727  0149B8  0E00               	movlw	0
 27728  0149BA  0101               	movlb	1	; () banked
 27729  0149BC  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
 27730  0149BE  0E0A               	movlw	10
 27731  0149C0  6F76               	movwf	___awdiv@divisor& (0+255),b
 27732  0149C2  EC11  F0B5         	call	___awdiv	;wreg free
 27733  0149C6  0101               	movlb	1	; () banked
 27734  0149C8  3974               	swapf	?___awdiv& (0+255),w,b
 27735  0149CA  0BF0               	andlw	240
 27736  0149CC  0101               	movlb	1	; () banked
 27737  0149CE  2585               	addwf	??_SET_RTC_TIME& (0+255),w,b
 27738  0149D0  0101               	movlb	1	; () banked
 27739  0149D2  6F8A               	movwf	(SET_RTC_TIME@temp+1)& (0+255),b
 27740                           
 27741                           ;RTC.c: 183: Error = I2C_Write_At_Address( 0b1101000, 0x01, temp[1] );
 27742  0149D4  0E01               	movlw	1
 27743  0149D6  0101               	movlb	1	; () banked
 27744  0149D8  6F76               	movwf	I2C_Write_At_Address@Register& (0+255),b
 27745  0149DA  C18A  F177         	movff	SET_RTC_TIME@temp+1,I2C_Write_At_Address@data
 27746  0149DE  0E68               	movlw	104
 27747  0149E0  EC79  F0B5         	call	_I2C_Write_At_Address
 27748  0149E4  0101               	movlb	1	; () banked
 27749  0149E6  6F90               	movwf	SET_RTC_TIME@Error& (0+255),b
 27750                           
 27751                           ; BSR set to: 1
 27752                           ;RTC.c: 184: if(Error)
 27753  0149E8  0101               	movlb	1	; () banked
 27754  0149EA  5190               	movf	SET_RTC_TIME@Error& (0+255),w,b
 27755  0149EC  0101               	movlb	1	; () banked
 27756  0149EE  B4D8               	btfsc	status,2,c
 27757  0149F0  D002               	goto	l14555
 27758                           
 27759                           ; BSR set to: 1
 27760                           ;RTC.c: 185: {
 27761                           ;RTC.c: 186: return 2;
 27762  0149F2  0E02               	movlw	2
 27763                           
 27764                           ; BSR set to: 1
 27765  0149F4  0012               	return	
 27766  0149F6                     l14555:
 27767                           
 27768                           ; BSR set to: 1
 27769                           ;RTC.c: 187: }
 27770                           ;RTC.c: 189: temp[2] = ((SetTime.Hours /10) << 4) + (SetTime.Hours % 10) + (SetTime.Hour
      +                          sAM_PM << 5);
 27771  0149F6  C180  F185         	movff	SET_RTC_TIME@SetTime+4,??_SET_RTC_TIME
 27772  0149FA  0E05               	movlw	5
 27773  0149FC  0101               	movlb	1	; () banked
 27774  0149FE  6F86               	movwf	(??_SET_RTC_TIME+1)& (0+255),b
 27775  014A00                     u18665:
 27776  014A00  0101               	movlb	1	; () banked
 27777  014A02  90D8               	bcf	status,0,c
 27778  014A04  3785               	rlcf	??_SET_RTC_TIME& (0+255),f,b
 27779  014A06  0101               	movlb	1	; () banked
 27780  014A08  2F86               	decfsz	(??_SET_RTC_TIME+1)& (0+255),f,b
 27781  014A0A  D7FA               	goto	u18665
 27782  014A0C  C17E  F174         	movff	SET_RTC_TIME@SetTime+2,___awmod@dividend
 27783  014A10  0101               	movlb	1	; () banked
 27784  014A12  6B75               	clrf	(___awmod@dividend+1)& (0+255),b
 27785  014A14  0E00               	movlw	0
 27786  014A16  0101               	movlb	1	; () banked
 27787  014A18  6F77               	movwf	(___awmod@divisor+1)& (0+255),b
 27788  014A1A  0E0A               	movlw	10
 27789  014A1C  6F76               	movwf	___awmod@divisor& (0+255),b
 27790  014A1E  ECC8  F0B7         	call	___awmod	;wreg free
 27791  014A22  C174  F187         	movff	?___awmod,??_SET_RTC_TIME+2
 27792  014A26  C175  F188         	movff	?___awmod+1,??_SET_RTC_TIME+3
 27793  014A2A  C17E  F174         	movff	SET_RTC_TIME@SetTime+2,___awdiv@dividend
 27794  014A2E  0101               	movlb	1	; () banked
 27795  014A30  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
 27796  014A32  0E00               	movlw	0
 27797  014A34  0101               	movlb	1	; () banked
 27798  014A36  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
 27799  014A38  0E0A               	movlw	10
 27800  014A3A  6F76               	movwf	___awdiv@divisor& (0+255),b
 27801  014A3C  EC11  F0B5         	call	___awdiv	;wreg free
 27802  014A40  0101               	movlb	1	; () banked
 27803  014A42  3974               	swapf	?___awdiv& (0+255),w,b
 27804  014A44  0BF0               	andlw	240
 27805  014A46  0101               	movlb	1	; () banked
 27806  014A48  2587               	addwf	(??_SET_RTC_TIME+2)& (0+255),w,b
 27807  014A4A  0101               	movlb	1	; () banked
 27808  014A4C  2585               	addwf	??_SET_RTC_TIME& (0+255),w,b
 27809  014A4E  0101               	movlb	1	; () banked
 27810  014A50  6F8B               	movwf	(SET_RTC_TIME@temp+2)& (0+255),b
 27811                           
 27812                           ;RTC.c: 190: Error = I2C_Write_At_Address( 0b1101000, 0x02, temp[2] );
 27813  014A52  0E02               	movlw	2
 27814  014A54  0101               	movlb	1	; () banked
 27815  014A56  6F76               	movwf	I2C_Write_At_Address@Register& (0+255),b
 27816  014A58  C18B  F177         	movff	SET_RTC_TIME@temp+2,I2C_Write_At_Address@data
 27817  014A5C  0E68               	movlw	104
 27818  014A5E  EC79  F0B5         	call	_I2C_Write_At_Address
 27819  014A62  0101               	movlb	1	; () banked
 27820  014A64  6F90               	movwf	SET_RTC_TIME@Error& (0+255),b
 27821                           
 27822                           ; BSR set to: 1
 27823                           ;RTC.c: 191: if(Error)
 27824  014A66  0101               	movlb	1	; () banked
 27825  014A68  5190               	movf	SET_RTC_TIME@Error& (0+255),w,b
 27826  014A6A  0101               	movlb	1	; () banked
 27827  014A6C  B4D8               	btfsc	status,2,c
 27828  014A6E  D002               	goto	l1218
 27829                           
 27830                           ; BSR set to: 1
 27831                           ;RTC.c: 192: {
 27832                           ;RTC.c: 193: return 3;
 27833  014A70  0E03               	movlw	3
 27834                           
 27835                           ; BSR set to: 1
 27836  014A72  0012               	return	
 27837  014A74                     l1218:
 27838                           
 27839                           ; BSR set to: 1
 27840                           ;RTC.c: 194: }
 27841                           ;RTC.c: 196: temp[3] = (SetTime.Day);
 27842  014A74  C181  F18C         	movff	SET_RTC_TIME@SetTime+5,SET_RTC_TIME@temp+3
 27843                           
 27844                           ; BSR set to: 1
 27845                           ;RTC.c: 197: Error = I2C_Write_At_Address( 0b1101000, 0x03, temp[3] );
 27846  014A78  0E03               	movlw	3
 27847  014A7A  0101               	movlb	1	; () banked
 27848  014A7C  6F76               	movwf	I2C_Write_At_Address@Register& (0+255),b
 27849  014A7E  C18C  F177         	movff	SET_RTC_TIME@temp+3,I2C_Write_At_Address@data
 27850  014A82  0E68               	movlw	104
 27851  014A84  EC79  F0B5         	call	_I2C_Write_At_Address
 27852  014A88  0101               	movlb	1	; () banked
 27853  014A8A  6F90               	movwf	SET_RTC_TIME@Error& (0+255),b
 27854                           
 27855                           ; BSR set to: 1
 27856                           ;RTC.c: 198: if(Error)
 27857  014A8C  0101               	movlb	1	; () banked
 27858  014A8E  5190               	movf	SET_RTC_TIME@Error& (0+255),w,b
 27859  014A90  0101               	movlb	1	; () banked
 27860  014A92  B4D8               	btfsc	status,2,c
 27861  014A94  D002               	goto	l14571
 27862                           
 27863                           ; BSR set to: 1
 27864                           ;RTC.c: 199: {
 27865                           ;RTC.c: 200: return 4;
 27866  014A96  0E04               	movlw	4
 27867                           
 27868                           ; BSR set to: 1
 27869  014A98  0012               	return	
 27870  014A9A                     l14571:
 27871                           
 27872                           ; BSR set to: 1
 27873                           ;RTC.c: 201: }
 27874                           ;RTC.c: 203: temp[4] = ((SetTime.Date /10) << 4) + (SetTime.Date % 10);
 27875  014A9A  C182  F174         	movff	SET_RTC_TIME@SetTime+6,___awmod@dividend
 27876  014A9E  0101               	movlb	1	; () banked
 27877  014AA0  6B75               	clrf	(___awmod@dividend+1)& (0+255),b
 27878  014AA2  0E00               	movlw	0
 27879  014AA4  0101               	movlb	1	; () banked
 27880  014AA6  6F77               	movwf	(___awmod@divisor+1)& (0+255),b
 27881  014AA8  0E0A               	movlw	10
 27882  014AAA  6F76               	movwf	___awmod@divisor& (0+255),b
 27883  014AAC  ECC8  F0B7         	call	___awmod	;wreg free
 27884  014AB0  C174  F185         	movff	?___awmod,??_SET_RTC_TIME
 27885  014AB4  C175  F186         	movff	?___awmod+1,??_SET_RTC_TIME+1
 27886  014AB8  C182  F174         	movff	SET_RTC_TIME@SetTime+6,___awdiv@dividend
 27887  014ABC  0101               	movlb	1	; () banked
 27888  014ABE  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
 27889  014AC0  0E00               	movlw	0
 27890  014AC2  0101               	movlb	1	; () banked
 27891  014AC4  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
 27892  014AC6  0E0A               	movlw	10
 27893  014AC8  6F76               	movwf	___awdiv@divisor& (0+255),b
 27894  014ACA  EC11  F0B5         	call	___awdiv	;wreg free
 27895  014ACE  0101               	movlb	1	; () banked
 27896  014AD0  3974               	swapf	?___awdiv& (0+255),w,b
 27897  014AD2  0BF0               	andlw	240
 27898  014AD4  0101               	movlb	1	; () banked
 27899  014AD6  2585               	addwf	??_SET_RTC_TIME& (0+255),w,b
 27900  014AD8  0101               	movlb	1	; () banked
 27901  014ADA  6F8D               	movwf	(SET_RTC_TIME@temp+4)& (0+255),b
 27902                           
 27903                           ;RTC.c: 204: Error = I2C_Write_At_Address( 0b1101000, 0x04, temp[4] );
 27904  014ADC  0E04               	movlw	4
 27905  014ADE  0101               	movlb	1	; () banked
 27906  014AE0  6F76               	movwf	I2C_Write_At_Address@Register& (0+255),b
 27907  014AE2  C18D  F177         	movff	SET_RTC_TIME@temp+4,I2C_Write_At_Address@data
 27908  014AE6  0E68               	movlw	104
 27909  014AE8  EC79  F0B5         	call	_I2C_Write_At_Address
 27910  014AEC  0101               	movlb	1	; () banked
 27911  014AEE  6F90               	movwf	SET_RTC_TIME@Error& (0+255),b
 27912                           
 27913                           ; BSR set to: 1
 27914                           ;RTC.c: 205: if(Error)
 27915  014AF0  0101               	movlb	1	; () banked
 27916  014AF2  5190               	movf	SET_RTC_TIME@Error& (0+255),w,b
 27917  014AF4  0101               	movlb	1	; () banked
 27918  014AF6  B4D8               	btfsc	status,2,c
 27919  014AF8  D002               	goto	l14579
 27920                           
 27921                           ; BSR set to: 1
 27922                           ;RTC.c: 206: {
 27923                           ;RTC.c: 207: return 5;
 27924  014AFA  0E05               	movlw	5
 27925                           
 27926                           ; BSR set to: 1
 27927  014AFC  0012               	return	
 27928  014AFE                     l14579:
 27929                           
 27930                           ; BSR set to: 1
 27931                           ;RTC.c: 208: }
 27932                           ;RTC.c: 210: temp[5] = ((SetTime.Month /10) << 4) + (SetTime.Month % 10);
 27933  014AFE  C183  F174         	movff	SET_RTC_TIME@SetTime+7,___awmod@dividend
 27934  014B02  0101               	movlb	1	; () banked
 27935  014B04  6B75               	clrf	(___awmod@dividend+1)& (0+255),b
 27936  014B06  0E00               	movlw	0
 27937  014B08  0101               	movlb	1	; () banked
 27938  014B0A  6F77               	movwf	(___awmod@divisor+1)& (0+255),b
 27939  014B0C  0E0A               	movlw	10
 27940  014B0E  6F76               	movwf	___awmod@divisor& (0+255),b
 27941  014B10  ECC8  F0B7         	call	___awmod	;wreg free
 27942  014B14  C174  F185         	movff	?___awmod,??_SET_RTC_TIME
 27943  014B18  C175  F186         	movff	?___awmod+1,??_SET_RTC_TIME+1
 27944  014B1C  C183  F174         	movff	SET_RTC_TIME@SetTime+7,___awdiv@dividend
 27945  014B20  0101               	movlb	1	; () banked
 27946  014B22  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
 27947  014B24  0E00               	movlw	0
 27948  014B26  0101               	movlb	1	; () banked
 27949  014B28  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
 27950  014B2A  0E0A               	movlw	10
 27951  014B2C  6F76               	movwf	___awdiv@divisor& (0+255),b
 27952  014B2E  EC11  F0B5         	call	___awdiv	;wreg free
 27953  014B32  0101               	movlb	1	; () banked
 27954  014B34  3974               	swapf	?___awdiv& (0+255),w,b
 27955  014B36  0BF0               	andlw	240
 27956  014B38  0101               	movlb	1	; () banked
 27957  014B3A  2585               	addwf	??_SET_RTC_TIME& (0+255),w,b
 27958  014B3C  0101               	movlb	1	; () banked
 27959  014B3E  6F8E               	movwf	(SET_RTC_TIME@temp+5)& (0+255),b
 27960                           
 27961                           ;RTC.c: 211: Error = I2C_Write_At_Address( 0b1101000, 0x05, temp[5] );
 27962  014B40  0E05               	movlw	5
 27963  014B42  0101               	movlb	1	; () banked
 27964  014B44  6F76               	movwf	I2C_Write_At_Address@Register& (0+255),b
 27965  014B46  C18E  F177         	movff	SET_RTC_TIME@temp+5,I2C_Write_At_Address@data
 27966  014B4A  0E68               	movlw	104
 27967  014B4C  EC79  F0B5         	call	_I2C_Write_At_Address
 27968  014B50  0101               	movlb	1	; () banked
 27969  014B52  6F90               	movwf	SET_RTC_TIME@Error& (0+255),b
 27970                           
 27971                           ; BSR set to: 1
 27972                           ;RTC.c: 212: if(Error)
 27973  014B54  0101               	movlb	1	; () banked
 27974  014B56  5190               	movf	SET_RTC_TIME@Error& (0+255),w,b
 27975  014B58  0101               	movlb	1	; () banked
 27976  014B5A  B4D8               	btfsc	status,2,c
 27977  014B5C  D002               	goto	l14587
 27978                           
 27979                           ; BSR set to: 1
 27980                           ;RTC.c: 213: {
 27981                           ;RTC.c: 214: return 6;
 27982  014B5E  0E06               	movlw	6
 27983                           
 27984                           ; BSR set to: 1
 27985  014B60  0012               	return	
 27986  014B62                     l14587:
 27987                           
 27988                           ; BSR set to: 1
 27989                           ;RTC.c: 215: }
 27990                           ;RTC.c: 217: temp[6] = ((SetTime.Year /10) << 4) + (SetTime.Year % 10);
 27991  014B62  C184  F174         	movff	SET_RTC_TIME@SetTime+8,___awmod@dividend
 27992  014B66  0101               	movlb	1	; () banked
 27993  014B68  6B75               	clrf	(___awmod@dividend+1)& (0+255),b
 27994  014B6A  0E00               	movlw	0
 27995  014B6C  0101               	movlb	1	; () banked
 27996  014B6E  6F77               	movwf	(___awmod@divisor+1)& (0+255),b
 27997  014B70  0E0A               	movlw	10
 27998  014B72  6F76               	movwf	___awmod@divisor& (0+255),b
 27999  014B74  ECC8  F0B7         	call	___awmod	;wreg free
 28000  014B78  C174  F185         	movff	?___awmod,??_SET_RTC_TIME
 28001  014B7C  C175  F186         	movff	?___awmod+1,??_SET_RTC_TIME+1
 28002  014B80  C184  F174         	movff	SET_RTC_TIME@SetTime+8,___awdiv@dividend
 28003  014B84  0101               	movlb	1	; () banked
 28004  014B86  6B75               	clrf	(___awdiv@dividend+1)& (0+255),b
 28005  014B88  0E00               	movlw	0
 28006  014B8A  0101               	movlb	1	; () banked
 28007  014B8C  6F77               	movwf	(___awdiv@divisor+1)& (0+255),b
 28008  014B8E  0E0A               	movlw	10
 28009  014B90  6F76               	movwf	___awdiv@divisor& (0+255),b
 28010  014B92  EC11  F0B5         	call	___awdiv	;wreg free
 28011  014B96  0101               	movlb	1	; () banked
 28012  014B98  3974               	swapf	?___awdiv& (0+255),w,b
 28013  014B9A  0BF0               	andlw	240
 28014  014B9C  0101               	movlb	1	; () banked
 28015  014B9E  2585               	addwf	??_SET_RTC_TIME& (0+255),w,b
 28016  014BA0  0101               	movlb	1	; () banked
 28017  014BA2  6F8F               	movwf	(SET_RTC_TIME@temp+6)& (0+255),b
 28018                           
 28019                           ;RTC.c: 218: Error = I2C_Write_At_Address( 0b1101000, 0x06, temp[6] );
 28020  014BA4  0E06               	movlw	6
 28021  014BA6  0101               	movlb	1	; () banked
 28022  014BA8  6F76               	movwf	I2C_Write_At_Address@Register& (0+255),b
 28023  014BAA  C18F  F177         	movff	SET_RTC_TIME@temp+6,I2C_Write_At_Address@data
 28024  014BAE  0E68               	movlw	104
 28025  014BB0  EC79  F0B5         	call	_I2C_Write_At_Address
 28026  014BB4  0101               	movlb	1	; () banked
 28027  014BB6  6F90               	movwf	SET_RTC_TIME@Error& (0+255),b
 28028                           
 28029                           ; BSR set to: 1
 28030                           ;RTC.c: 219: if(Error)
 28031  014BB8  0101               	movlb	1	; () banked
 28032  014BBA  5190               	movf	SET_RTC_TIME@Error& (0+255),w,b
 28033  014BBC  0101               	movlb	1	; () banked
 28034  014BBE  B4D8               	btfsc	status,2,c
 28035  014BC0  D002               	goto	l14595
 28036                           
 28037                           ; BSR set to: 1
 28038                           ;RTC.c: 220: {
 28039                           ;RTC.c: 221: return 7;
 28040  014BC2  0E07               	movlw	7
 28041                           
 28042                           ; BSR set to: 1
 28043  014BC4  0012               	return	
 28044  014BC6                     l14595:
 28045                           
 28046                           ; BSR set to: 1
 28047                           ;RTC.c: 222: }
 28048                           ;RTC.c: 224: return 0;
 28049  014BC6  0E00               	movlw	0
 28050  014BC8  0012               	return	
 28051                           
 28052                           ; BSR set to: 1
 28053                           
 28054                           ; BSR set to: 1
 28055  014BCA  0012               	return		;funcret
 28056  014BCC                     __end_of_SET_RTC_TIME:
 28057                           	opt stack 0
 28058                           tblptru	equ	0xFF8
 28059                           tblptrh	equ	0xFF7
 28060                           tblptrl	equ	0xFF6
 28061                           tablat	equ	0xFF5
 28062                           prodh	equ	0xFF4
 28063                           prodl	equ	0xFF3
 28064                           intcon	equ	0xFF2
 28065                           intcon2	equ	0xFF1
 28066                           postinc0	equ	0xFEE
 28067                           plusw0	equ	0xFEB
 28068                           wreg	equ	0xFE8
 28069                           indf1	equ	0xFE7
 28070                           postdec1	equ	0xFE5
 28071                           fsr1h	equ	0xFE2
 28072                           fsr1l	equ	0xFE1
 28073                           indf2	equ	0xFDF
 28074                           postinc2	equ	0xFDE
 28075                           postdec2	equ	0xFDD
 28076                           plusw2	equ	0xFDB
 28077                           fsr2h	equ	0xFDA
 28078                           fsr2l	equ	0xFD9
 28079                           status	equ	0xFD8
 28080                           
 28081 ;; *************** function ___awmod *****************
 28082 ;; Defined at:
 28083 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 28084 ;; Parameters:    Size  Location     Type
 28085 ;;  dividend        2   14[BANK1 ] int 
 28086 ;;  divisor         2   16[BANK1 ] int 
 28087 ;; Auto vars:     Size  Location     Type
 28088 ;;  sign            1   19[BANK1 ] unsigned char 
 28089 ;;  counter         1   18[BANK1 ] unsigned char 
 28090 ;; Return value:  Size  Location     Type
 28091 ;;                  2   14[BANK1 ] int 
 28092 ;; Registers used:
 28093 ;;		wreg, status,2, status,0
 28094 ;; Tracked objects:
 28095 ;;		On entry : 0/0
 28096 ;;		On exit  : 0/0
 28097 ;;		Unchanged: 0/0
 28098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28099 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28100 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28102 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 28103 ;;Total ram usage:        6 bytes
 28104 ;; Hardware stack levels used:    1
 28105 ;; Hardware stack levels required when called:    7
 28106 ;; This function calls:
 28107 ;;		Nothing
 28108 ;; This function is called by:
 28109 ;;		_SET_RTC_TIME
 28110 ;; This function uses a non-reentrant model
 28111 ;;
 28112                           
 28113                           	psect	text72
 28114  016F90                     __ptext72:
 28115                           	opt stack 0
 28116  016F90                     ___awmod:
 28117                           	opt stack 21
 28118                           
 28119                           ; BSR set to: 1
 28120                           ;incstack = 0
 28121  016F90  0E00               	movlw	0
 28122  016F92  0101               	movlb	1	; () banked
 28123  016F94  6F79               	movwf	___awmod@sign& (0+255),b
 28124                           
 28125                           ; BSR set to: 1
 28126  016F96  0101               	movlb	1	; () banked
 28127  016F98  AF75               	btfss	(___awmod@dividend+1)& (0+255),7,b
 28128  016F9A  D009               	goto	l13591
 28129                           
 28130                           ; BSR set to: 1
 28131  016F9C  0101               	movlb	1	; () banked
 28132  016F9E  6D74               	negf	___awmod@dividend& (0+255),b
 28133  016FA0  1F75               	comf	(___awmod@dividend+1)& (0+255),f,b
 28134  016FA2  B0D8               	btfsc	status,0,c
 28135  016FA4  2B75               	incf	(___awmod@dividend+1)& (0+255),f,b
 28136                           
 28137                           ; BSR set to: 1
 28138  016FA6  0E01               	movlw	1
 28139  016FA8  0101               	movlb	1	; () banked
 28140  016FAA  6F79               	movwf	___awmod@sign& (0+255),b
 28141  016FAC  D000               	goto	l13591
 28142  016FAE                     l13591:
 28143                           
 28144                           ; BSR set to: 1
 28145  016FAE  0101               	movlb	1	; () banked
 28146  016FB0  AF77               	btfss	(___awmod@divisor+1)& (0+255),7,b
 28147  016FB2  D006               	goto	l13595
 28148                           
 28149                           ; BSR set to: 1
 28150  016FB4  0101               	movlb	1	; () banked
 28151  016FB6  6D76               	negf	___awmod@divisor& (0+255),b
 28152  016FB8  1F77               	comf	(___awmod@divisor+1)& (0+255),f,b
 28153  016FBA  B0D8               	btfsc	status,0,c
 28154  016FBC  2B77               	incf	(___awmod@divisor+1)& (0+255),f,b
 28155  016FBE  D000               	goto	l13595
 28156  016FC0                     l13595:
 28157                           
 28158                           ; BSR set to: 1
 28159  016FC0  0101               	movlb	1	; () banked
 28160  016FC2  5176               	movf	___awmod@divisor& (0+255),w,b
 28161  016FC4  0101               	movlb	1	; () banked
 28162  016FC6  1177               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 28163  016FC8  B4D8               	btfsc	status,2,c
 28164  016FCA  D02B               	goto	l13611
 28165                           
 28166                           ; BSR set to: 1
 28167  016FCC  0E01               	movlw	1
 28168  016FCE  0101               	movlb	1	; () banked
 28169  016FD0  6F78               	movwf	___awmod@counter& (0+255),b
 28170  016FD2  D007               	goto	l13601
 28171  016FD4                     l13599:
 28172                           
 28173                           ; BSR set to: 1
 28174  016FD4  0101               	movlb	1	; () banked
 28175  016FD6  90D8               	bcf	status,0,c
 28176  016FD8  3776               	rlcf	___awmod@divisor& (0+255),f,b
 28177  016FDA  3777               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 28178  016FDC  0101               	movlb	1	; () banked
 28179  016FDE  2B78               	incf	___awmod@counter& (0+255),f,b
 28180  016FE0  D000               	goto	l13601
 28181  016FE2                     l13601:
 28182                           
 28183                           ; BSR set to: 1
 28184  016FE2  0101               	movlb	1	; () banked
 28185  016FE4  BF77               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 28186  016FE6  D002               	goto	l13603
 28187  016FE8  D7F5               	goto	l13599
 28188                           
 28189                           ; BSR set to: 1
 28190  016FEA  D000               	goto	l13603
 28191  016FEC                     l13603:
 28192                           
 28193                           ; BSR set to: 1
 28194  016FEC  0101               	movlb	1	; () banked
 28195  016FEE  5176               	movf	___awmod@divisor& (0+255),w,b
 28196  016FF0  0101               	movlb	1	; () banked
 28197  016FF2  5D74               	subwf	___awmod@dividend& (0+255),w,b
 28198  016FF4  0101               	movlb	1	; () banked
 28199  016FF6  5177               	movf	(___awmod@divisor+1)& (0+255),w,b
 28200  016FF8  0101               	movlb	1	; () banked
 28201  016FFA  5975               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 28202  016FFC  A0D8               	btfss	status,0,c
 28203  016FFE  D009               	goto	l13607
 28204                           
 28205                           ; BSR set to: 1
 28206  017000  0101               	movlb	1	; () banked
 28207  017002  5176               	movf	___awmod@divisor& (0+255),w,b
 28208  017004  0101               	movlb	1	; () banked
 28209  017006  5F74               	subwf	___awmod@dividend& (0+255),f,b
 28210  017008  0101               	movlb	1	; () banked
 28211  01700A  5177               	movf	(___awmod@divisor+1)& (0+255),w,b
 28212  01700C  0101               	movlb	1	; () banked
 28213  01700E  5B75               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 28214  017010  D000               	goto	l13607
 28215  017012                     l13607:
 28216                           
 28217                           ; BSR set to: 1
 28218  017012  0101               	movlb	1	; () banked
 28219  017014  90D8               	bcf	status,0,c
 28220  017016  3377               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 28221  017018  3376               	rrcf	___awmod@divisor& (0+255),f,b
 28222                           
 28223                           ; BSR set to: 1
 28224  01701A  0101               	movlb	1	; () banked
 28225  01701C  2F78               	decfsz	___awmod@counter& (0+255),f,b
 28226  01701E  D7E6               	goto	l13603
 28227                           
 28228                           ; BSR set to: 1
 28229  017020  D000               	goto	l13611
 28230  017022                     l13611:
 28231                           
 28232                           ; BSR set to: 1
 28233  017022  0101               	movlb	1	; () banked
 28234  017024  5179               	movf	___awmod@sign& (0+255),w,b
 28235  017026  0101               	movlb	1	; () banked
 28236  017028  B4D8               	btfsc	status,2,c
 28237  01702A  D006               	goto	l13615
 28238                           
 28239                           ; BSR set to: 1
 28240  01702C  0101               	movlb	1	; () banked
 28241  01702E  6D74               	negf	___awmod@dividend& (0+255),b
 28242  017030  1F75               	comf	(___awmod@dividend+1)& (0+255),f,b
 28243  017032  B0D8               	btfsc	status,0,c
 28244  017034  2B75               	incf	(___awmod@dividend+1)& (0+255),f,b
 28245  017036  D000               	goto	l13615
 28246  017038                     l13615:
 28247                           
 28248                           ; BSR set to: 1
 28249  017038  C174  F174         	movff	___awmod@dividend,?___awmod
 28250  01703C  C175  F175         	movff	___awmod@dividend+1,?___awmod+1
 28251  017040  0012               	return	
 28252                           
 28253                           ; BSR set to: 1
 28254                           
 28255                           ; BSR set to: 1
 28256  017042  0012               	return		;funcret
 28257  017044                     __end_of___awmod:
 28258                           	opt stack 0
 28259                           tblptru	equ	0xFF8
 28260                           tblptrh	equ	0xFF7
 28261                           tblptrl	equ	0xFF6
 28262                           tablat	equ	0xFF5
 28263                           prodh	equ	0xFF4
 28264                           prodl	equ	0xFF3
 28265                           intcon	equ	0xFF2
 28266                           intcon2	equ	0xFF1
 28267                           postinc0	equ	0xFEE
 28268                           plusw0	equ	0xFEB
 28269                           wreg	equ	0xFE8
 28270                           indf1	equ	0xFE7
 28271                           postdec1	equ	0xFE5
 28272                           fsr1h	equ	0xFE2
 28273                           fsr1l	equ	0xFE1
 28274                           indf2	equ	0xFDF
 28275                           postinc2	equ	0xFDE
 28276                           postdec2	equ	0xFDD
 28277                           plusw2	equ	0xFDB
 28278                           fsr2h	equ	0xFDA
 28279                           fsr2l	equ	0xFD9
 28280                           status	equ	0xFD8
 28281                           
 28282 ;; *************** function ___awdiv *****************
 28283 ;; Defined at:
 28284 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 28285 ;; Parameters:    Size  Location     Type
 28286 ;;  dividend        2   14[BANK1 ] int 
 28287 ;;  divisor         2   16[BANK1 ] int 
 28288 ;; Auto vars:     Size  Location     Type
 28289 ;;  quotient        2   20[BANK1 ] int 
 28290 ;;  sign            1   19[BANK1 ] unsigned char 
 28291 ;;  counter         1   18[BANK1 ] unsigned char 
 28292 ;; Return value:  Size  Location     Type
 28293 ;;                  2   14[BANK1 ] int 
 28294 ;; Registers used:
 28295 ;;		wreg, status,2, status,0
 28296 ;; Tracked objects:
 28297 ;;		On entry : 0/0
 28298 ;;		On exit  : 0/0
 28299 ;;		Unchanged: 0/0
 28300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28301 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28302 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28304 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 28305 ;;Total ram usage:        8 bytes
 28306 ;; Hardware stack levels used:    1
 28307 ;; Hardware stack levels required when called:    7
 28308 ;; This function calls:
 28309 ;;		Nothing
 28310 ;; This function is called by:
 28311 ;;		_SET_RTC_TIME
 28312 ;; This function uses a non-reentrant model
 28313 ;;
 28314                           
 28315                           	psect	text73
 28316  016A22                     __ptext73:
 28317                           	opt stack 0
 28318  016A22                     ___awdiv:
 28319                           	opt stack 21
 28320                           
 28321                           ; BSR set to: 1
 28322                           ;incstack = 0
 28323  016A22  0E00               	movlw	0
 28324  016A24  0101               	movlb	1	; () banked
 28325  016A26  6F79               	movwf	___awdiv@sign& (0+255),b
 28326                           
 28327                           ; BSR set to: 1
 28328  016A28  0101               	movlb	1	; () banked
 28329  016A2A  AF77               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 28330  016A2C  D009               	goto	l13547
 28331                           
 28332                           ; BSR set to: 1
 28333  016A2E  0101               	movlb	1	; () banked
 28334  016A30  6D76               	negf	___awdiv@divisor& (0+255),b
 28335  016A32  1F77               	comf	(___awdiv@divisor+1)& (0+255),f,b
 28336  016A34  B0D8               	btfsc	status,0,c
 28337  016A36  2B77               	incf	(___awdiv@divisor+1)& (0+255),f,b
 28338                           
 28339                           ; BSR set to: 1
 28340  016A38  0E01               	movlw	1
 28341  016A3A  0101               	movlb	1	; () banked
 28342  016A3C  6F79               	movwf	___awdiv@sign& (0+255),b
 28343  016A3E  D000               	goto	l13547
 28344  016A40                     l13547:
 28345                           
 28346                           ; BSR set to: 1
 28347  016A40  0101               	movlb	1	; () banked
 28348  016A42  AF75               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 28349  016A44  D009               	goto	l13553
 28350                           
 28351                           ; BSR set to: 1
 28352  016A46  0101               	movlb	1	; () banked
 28353  016A48  6D74               	negf	___awdiv@dividend& (0+255),b
 28354  016A4A  1F75               	comf	(___awdiv@dividend+1)& (0+255),f,b
 28355  016A4C  B0D8               	btfsc	status,0,c
 28356  016A4E  2B75               	incf	(___awdiv@dividend+1)& (0+255),f,b
 28357                           
 28358                           ; BSR set to: 1
 28359  016A50  0E01               	movlw	1
 28360  016A52  0101               	movlb	1	; () banked
 28361  016A54  1B79               	xorwf	___awdiv@sign& (0+255),f,b
 28362  016A56  D000               	goto	l13553
 28363  016A58                     l13553:
 28364                           
 28365                           ; BSR set to: 1
 28366  016A58  0E00               	movlw	0
 28367  016A5A  0101               	movlb	1	; () banked
 28368  016A5C  6F7B               	movwf	(___awdiv@quotient+1)& (0+255),b
 28369  016A5E  0E00               	movlw	0
 28370  016A60  6F7A               	movwf	___awdiv@quotient& (0+255),b
 28371                           
 28372                           ; BSR set to: 1
 28373  016A62  0101               	movlb	1	; () banked
 28374  016A64  5176               	movf	___awdiv@divisor& (0+255),w,b
 28375  016A66  0101               	movlb	1	; () banked
 28376  016A68  1177               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 28377  016A6A  B4D8               	btfsc	status,2,c
 28378  016A6C  D031               	goto	l13575
 28379                           
 28380                           ; BSR set to: 1
 28381  016A6E  0E01               	movlw	1
 28382  016A70  0101               	movlb	1	; () banked
 28383  016A72  6F78               	movwf	___awdiv@counter& (0+255),b
 28384  016A74  D007               	goto	l13561
 28385  016A76                     l13559:
 28386                           
 28387                           ; BSR set to: 1
 28388  016A76  0101               	movlb	1	; () banked
 28389  016A78  90D8               	bcf	status,0,c
 28390  016A7A  3776               	rlcf	___awdiv@divisor& (0+255),f,b
 28391  016A7C  3777               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 28392  016A7E  0101               	movlb	1	; () banked
 28393  016A80  2B78               	incf	___awdiv@counter& (0+255),f,b
 28394  016A82  D000               	goto	l13561
 28395  016A84                     l13561:
 28396                           
 28397                           ; BSR set to: 1
 28398  016A84  0101               	movlb	1	; () banked
 28399  016A86  BF77               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 28400  016A88  D002               	goto	l13563
 28401  016A8A  D7F5               	goto	l13559
 28402                           
 28403                           ; BSR set to: 1
 28404  016A8C  D000               	goto	l13563
 28405  016A8E                     l13563:
 28406                           
 28407                           ; BSR set to: 1
 28408  016A8E  0101               	movlb	1	; () banked
 28409  016A90  90D8               	bcf	status,0,c
 28410  016A92  377A               	rlcf	___awdiv@quotient& (0+255),f,b
 28411  016A94  377B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 28412                           
 28413                           ; BSR set to: 1
 28414  016A96  0101               	movlb	1	; () banked
 28415  016A98  5176               	movf	___awdiv@divisor& (0+255),w,b
 28416  016A9A  0101               	movlb	1	; () banked
 28417  016A9C  5D74               	subwf	___awdiv@dividend& (0+255),w,b
 28418  016A9E  0101               	movlb	1	; () banked
 28419  016AA0  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28420  016AA2  0101               	movlb	1	; () banked
 28421  016AA4  5975               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 28422  016AA6  A0D8               	btfss	status,0,c
 28423  016AA8  D00B               	goto	l13571
 28424                           
 28425                           ; BSR set to: 1
 28426  016AAA  0101               	movlb	1	; () banked
 28427  016AAC  5176               	movf	___awdiv@divisor& (0+255),w,b
 28428  016AAE  0101               	movlb	1	; () banked
 28429  016AB0  5F74               	subwf	___awdiv@dividend& (0+255),f,b
 28430  016AB2  0101               	movlb	1	; () banked
 28431  016AB4  5177               	movf	(___awdiv@divisor+1)& (0+255),w,b
 28432  016AB6  0101               	movlb	1	; () banked
 28433  016AB8  5B75               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 28434                           
 28435                           ; BSR set to: 1
 28436  016ABA  0101               	movlb	1	; () banked
 28437  016ABC  817A               	bsf	___awdiv@quotient& (0+255),0,b
 28438  016ABE  D000               	goto	l13571
 28439  016AC0                     l13571:
 28440                           
 28441                           ; BSR set to: 1
 28442  016AC0  0101               	movlb	1	; () banked
 28443  016AC2  90D8               	bcf	status,0,c
 28444  016AC4  3377               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 28445  016AC6  3376               	rrcf	___awdiv@divisor& (0+255),f,b
 28446                           
 28447                           ; BSR set to: 1
 28448  016AC8  0101               	movlb	1	; () banked
 28449  016ACA  2F78               	decfsz	___awdiv@counter& (0+255),f,b
 28450  016ACC  D7E0               	goto	l13563
 28451                           
 28452                           ; BSR set to: 1
 28453  016ACE  D000               	goto	l13575
 28454  016AD0                     l13575:
 28455                           
 28456                           ; BSR set to: 1
 28457  016AD0  0101               	movlb	1	; () banked
 28458  016AD2  5179               	movf	___awdiv@sign& (0+255),w,b
 28459  016AD4  0101               	movlb	1	; () banked
 28460  016AD6  B4D8               	btfsc	status,2,c
 28461  016AD8  D006               	goto	l13579
 28462                           
 28463                           ; BSR set to: 1
 28464  016ADA  0101               	movlb	1	; () banked
 28465  016ADC  6D7A               	negf	___awdiv@quotient& (0+255),b
 28466  016ADE  1F7B               	comf	(___awdiv@quotient+1)& (0+255),f,b
 28467  016AE0  B0D8               	btfsc	status,0,c
 28468  016AE2  2B7B               	incf	(___awdiv@quotient+1)& (0+255),f,b
 28469  016AE4  D000               	goto	l13579
 28470  016AE6                     l13579:
 28471                           
 28472                           ; BSR set to: 1
 28473  016AE6  C17A  F174         	movff	___awdiv@quotient,?___awdiv
 28474  016AEA  C17B  F175         	movff	___awdiv@quotient+1,?___awdiv+1
 28475  016AEE  0012               	return	
 28476                           
 28477                           ; BSR set to: 1
 28478                           
 28479                           ; BSR set to: 1
 28480  016AF0  0012               	return		;funcret
 28481  016AF2                     __end_of___awdiv:
 28482                           	opt stack 0
 28483                           tblptru	equ	0xFF8
 28484                           tblptrh	equ	0xFF7
 28485                           tblptrl	equ	0xFF6
 28486                           tablat	equ	0xFF5
 28487                           prodh	equ	0xFF4
 28488                           prodl	equ	0xFF3
 28489                           intcon	equ	0xFF2
 28490                           intcon2	equ	0xFF1
 28491                           postinc0	equ	0xFEE
 28492                           plusw0	equ	0xFEB
 28493                           wreg	equ	0xFE8
 28494                           indf1	equ	0xFE7
 28495                           postdec1	equ	0xFE5
 28496                           fsr1h	equ	0xFE2
 28497                           fsr1l	equ	0xFE1
 28498                           indf2	equ	0xFDF
 28499                           postinc2	equ	0xFDE
 28500                           postdec2	equ	0xFDD
 28501                           plusw2	equ	0xFDB
 28502                           fsr2h	equ	0xFDA
 28503                           fsr2l	equ	0xFD9
 28504                           status	equ	0xFD8
 28505                           
 28506 ;; *************** function _I2C_Write_At_Address *****************
 28507 ;; Defined at:
 28508 ;;		line 161 in file "I2C.c"
 28509 ;; Parameters:    Size  Location     Type
 28510 ;;  I2Caddress      1    wreg     unsigned char 
 28511 ;;  Register        1   16[BANK1 ] unsigned char 
 28512 ;;  data            1   17[BANK1 ] unsigned char 
 28513 ;; Auto vars:     Size  Location     Type
 28514 ;;  I2Caddress      1   20[BANK1 ] unsigned char 
 28515 ;; Return value:  Size  Location     Type
 28516 ;;                  1    wreg      unsigned char 
 28517 ;; Registers used:
 28518 ;;		wreg, status,2, status,0, cstack
 28519 ;; Tracked objects:
 28520 ;;		On entry : 0/0
 28521 ;;		On exit  : 0/0
 28522 ;;		Unchanged: 0/0
 28523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28524 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28525 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28526 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28527 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 28528 ;;Total ram usage:        5 bytes
 28529 ;; Hardware stack levels used:    1
 28530 ;; Hardware stack levels required when called:    9
 28531 ;; This function calls:
 28532 ;;		_IdleI2C
 28533 ;;		_WriteI2C
 28534 ;; This function is called by:
 28535 ;;		_RTC_Clock_Enable
 28536 ;;		_RTC_TIME_NONMilitary
 28537 ;;		_SET_RTC_TIME
 28538 ;;		_RTC_Clock_Disable
 28539 ;; This function uses a non-reentrant model
 28540 ;;
 28541                           
 28542                           	psect	text74
 28543  016AF2                     __ptext74:
 28544                           	opt stack 0
 28545  016AF2                     _I2C_Write_At_Address:
 28546                           	opt stack 19
 28547                           
 28548                           ; BSR set to: 1
 28549                           ;incstack = 0
 28550                           ;I2C_Write_At_Address@I2Caddress stored from wreg
 28551  016AF2  0101               	movlb	1	; () banked
 28552  016AF4  6F7A               	movwf	I2C_Write_At_Address@I2Caddress& (0+255),b
 28553                           
 28554                           ; BSR set to: 1
 28555                           ;I2C.c: 163: IdleI2C();
 28556  016AF6  EC54  F008         	call	_IdleI2C	;wreg free
 28557                           
 28558                           ;I2C.c: 164: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 28559  016AFA  80C5               	bsf	4037,0,c	;volatile
 28560  016AFC  D000               	goto	l1366
 28561  016AFE                     l1366:
 28562  016AFE  A0C5               	btfss	4037,0,c	;volatile
 28563  016B00  D002               	goto	l1369
 28564  016B02  D7FD               	goto	l1366
 28565                           
 28566                           ;I2C.c: 165: while ( SSPCON2bits.SEN );
 28567  016B04  D000               	goto	l1369
 28568  016B06                     l1369:
 28569  016B06  B0C5               	btfsc	4037,0,c	;volatile
 28570  016B08  D7FE               	goto	l1369
 28571                           
 28572                           ;I2C.c: 166: if ( PIR2bits.BCLIF )
 28573  016B0A  A6A1               	btfss	4001,3,c	;volatile
 28574  016B0C  D003               	goto	l13301
 28575                           
 28576                           ;I2C.c: 167: {
 28577                           ;I2C.c: 168: return ( -1 );
 28578  016B0E  0EFF               	movlw	255
 28579  016B10  0012               	return	
 28580                           
 28581                           ;I2C.c: 169: }
 28582  016B12  D047               	goto	l1374
 28583  016B14                     l13301:
 28584                           
 28585                           ;I2C.c: 170: else
 28586                           ;I2C.c: 171: {
 28587                           ;I2C.c: 172: if ( WriteI2C( I2Caddress << 1) & 0xFE )
 28588  016B14  0101               	movlb	1	; () banked
 28589  016B16  517A               	movf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 28590  016B18  257A               	addwf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 28591  016B1A  EC90  F0BF         	call	_WriteI2C
 28592  016B1E  0101               	movlb	1	; () banked
 28593  016B20  6F78               	movwf	??_I2C_Write_At_Address& (0+255),b
 28594  016B22  6B79               	clrf	(??_I2C_Write_At_Address+1)& (0+255),b
 28595  016B24  BF78               	btfsc	??_I2C_Write_At_Address& (0+255),7,b
 28596  016B26  0779               	decf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 28597  016B28  0EFE               	movlw	254
 28598  016B2A  0101               	movlb	1	; () banked
 28599  016B2C  1778               	andwf	??_I2C_Write_At_Address& (0+255),f,b
 28600  016B2E  0E00               	movlw	0
 28601  016B30  1779               	andwf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 28602  016B32  0101               	movlb	1	; () banked
 28603  016B34  5178               	movf	??_I2C_Write_At_Address& (0+255),w,b
 28604  016B36  0101               	movlb	1	; () banked
 28605  016B38  1179               	iorwf	(??_I2C_Write_At_Address+1)& (0+255),w,b
 28606  016B3A  B4D8               	btfsc	status,2,c
 28607  016B3C  D006               	goto	l1375
 28608                           
 28609                           ; BSR set to: 1
 28610                           ;I2C.c: 173: {
 28611                           ;I2C.c: 174: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28612  016B3E  84C5               	bsf	4037,2,c	;volatile
 28613  016B40  D000               	goto	l1376
 28614  016B42                     l1376:
 28615                           
 28616                           ; BSR set to: 1
 28617  016B42  B4C5               	btfsc	4037,2,c	;volatile
 28618  016B44  D7FE               	goto	l1376
 28619                           
 28620                           ; BSR set to: 1
 28621                           ;I2C.c: 175: return ( -3 );
 28622                           
 28623                           ; BSR set to: 1
 28624  016B46  0EFD               	movlw	253
 28625                           
 28626                           ; BSR set to: 1
 28627  016B48  0012               	return	
 28628  016B4A                     l1375:
 28629                           
 28630                           ; BSR set to: 1
 28631                           ;I2C.c: 176: }
 28632                           ;I2C.c: 179: if ( !SSPCON2bits.ACKSTAT )
 28633  016B4A  BCC5               	btfsc	4037,6,c	;volatile
 28634  016B4C  D024               	goto	l1379
 28635                           
 28636                           ; BSR set to: 1
 28637                           ;I2C.c: 180: {
 28638                           ;I2C.c: 181: if ( WriteI2C( Register ) )
 28639  016B4E  0101               	movlb	1	; () banked
 28640  016B50  5176               	movf	I2C_Write_At_Address@Register& (0+255),w,b
 28641  016B52  EC90  F0BF         	call	_WriteI2C
 28642  016B56  0900               	iorlw	0
 28643  016B58  B4D8               	btfsc	status,2,c
 28644  016B5A  D006               	goto	l1380
 28645                           
 28646                           ;I2C.c: 182: {
 28647                           ;I2C.c: 183: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28648  016B5C  84C5               	bsf	4037,2,c	;volatile
 28649  016B5E  D000               	goto	l1381
 28650  016B60                     l1381:
 28651  016B60  B4C5               	btfsc	4037,2,c	;volatile
 28652  016B62  D7FE               	goto	l1381
 28653                           
 28654                           ;I2C.c: 184: return ( -3 );
 28655  016B64  0EFD               	movlw	253
 28656  016B66  0012               	return	
 28657  016B68                     l1380:
 28658                           
 28659                           ;I2C.c: 185: }
 28660                           ;I2C.c: 188: if ( !SSPCON2bits.ACKSTAT )
 28661  016B68  BCC5               	btfsc	4037,6,c	;volatile
 28662  016B6A  D00E               	goto	l1384
 28663                           
 28664                           ;I2C.c: 189: {
 28665                           ;I2C.c: 190: if ( WriteI2C ( data ) )
 28666  016B6C  0101               	movlb	1	; () banked
 28667  016B6E  5177               	movf	I2C_Write_At_Address@data& (0+255),w,b
 28668  016B70  EC90  F0BF         	call	_WriteI2C
 28669  016B74  0900               	iorlw	0
 28670  016B76  B4D8               	btfsc	status,2,c
 28671  016B78  D014               	goto	l1374
 28672                           
 28673                           ;I2C.c: 191: {
 28674                           ;I2C.c: 192: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28675  016B7A  84C5               	bsf	4037,2,c	;volatile
 28676  016B7C  D000               	goto	l1386
 28677  016B7E                     l1386:
 28678  016B7E  B4C5               	btfsc	4037,2,c	;volatile
 28679  016B80  D7FE               	goto	l1386
 28680                           
 28681                           ;I2C.c: 193: return( -4 );
 28682  016B82  0EFC               	movlw	252
 28683  016B84  0012               	return	
 28684                           
 28685                           ;I2C.c: 194: }
 28686                           ;I2C.c: 195: }
 28687  016B86  D00D               	goto	l1374
 28688  016B88                     l1384:
 28689                           
 28690                           ;I2C.c: 196: else
 28691                           ;I2C.c: 197: {
 28692                           ;I2C.c: 198: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28693  016B88  84C5               	bsf	4037,2,c	;volatile
 28694  016B8A  D000               	goto	l1390
 28695  016B8C                     l1390:
 28696  016B8C  B4C5               	btfsc	4037,2,c	;volatile
 28697  016B8E  D7FE               	goto	l1390
 28698                           
 28699                           ;I2C.c: 199: return ( -2 );
 28700  016B90  0EFE               	movlw	254
 28701  016B92  0012               	return	
 28702                           
 28703                           ;I2C.c: 200: }
 28704                           ;I2C.c: 201: }
 28705  016B94  D006               	goto	l1374
 28706  016B96                     l1379:
 28707                           
 28708                           ; BSR set to: 1
 28709                           ;I2C.c: 202: else
 28710                           ;I2C.c: 203: {
 28711                           ;I2C.c: 204: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28712  016B96  84C5               	bsf	4037,2,c	;volatile
 28713  016B98  D000               	goto	l1394
 28714  016B9A                     l1394:
 28715                           
 28716                           ; BSR set to: 1
 28717  016B9A  B4C5               	btfsc	4037,2,c	;volatile
 28718  016B9C  D7FE               	goto	l1394
 28719                           
 28720                           ; BSR set to: 1
 28721                           ;I2C.c: 205: return ( -2 );
 28722                           
 28723                           ; BSR set to: 1
 28724  016B9E  0EFE               	movlw	254
 28725                           
 28726                           ; BSR set to: 1
 28727  016BA0  0012               	return	
 28728  016BA2                     l1374:
 28729                           
 28730                           ;I2C.c: 206: }
 28731                           ;I2C.c: 207: }
 28732                           ;I2C.c: 210: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28733  016BA2  84C5               	bsf	4037,2,c	;volatile
 28734  016BA4  D000               	goto	l1397
 28735  016BA6                     l1397:
 28736  016BA6  A4C5               	btfss	4037,2,c	;volatile
 28737  016BA8  D002               	goto	l1400
 28738  016BAA  D7FD               	goto	l1397
 28739                           
 28740                           ;I2C.c: 211: while ( SSPCON2bits.PEN );
 28741  016BAC  D000               	goto	l1400
 28742  016BAE                     l1400:
 28743  016BAE  B4C5               	btfsc	4037,2,c	;volatile
 28744  016BB0  D7FE               	goto	l1400
 28745                           
 28746                           ;I2C.c: 212: if ( PIR2bits.BCLIF )
 28747  016BB2  A6A1               	btfss	4001,3,c	;volatile
 28748  016BB4  D002               	goto	l13337
 28749                           
 28750                           ;I2C.c: 213: {
 28751                           ;I2C.c: 214: return ( -1 );
 28752  016BB6  0EFF               	movlw	255
 28753  016BB8  0012               	return	
 28754  016BBA                     l13337:
 28755                           
 28756                           ;I2C.c: 215: }
 28757                           ;I2C.c: 216: return ( 0 );
 28758  016BBA  0E00               	movlw	0
 28759  016BBC  0012               	return	
 28760  016BBE  0012               	return		;funcret
 28761  016BC0                     __end_of_I2C_Write_At_Address:
 28762                           	opt stack 0
 28763                           tblptru	equ	0xFF8
 28764                           tblptrh	equ	0xFF7
 28765                           tblptrl	equ	0xFF6
 28766                           tablat	equ	0xFF5
 28767                           prodh	equ	0xFF4
 28768                           prodl	equ	0xFF3
 28769                           intcon	equ	0xFF2
 28770                           intcon2	equ	0xFF1
 28771                           postinc0	equ	0xFEE
 28772                           plusw0	equ	0xFEB
 28773                           wreg	equ	0xFE8
 28774                           indf1	equ	0xFE7
 28775                           postdec1	equ	0xFE5
 28776                           fsr1h	equ	0xFE2
 28777                           fsr1l	equ	0xFE1
 28778                           indf2	equ	0xFDF
 28779                           postinc2	equ	0xFDE
 28780                           postdec2	equ	0xFDD
 28781                           plusw2	equ	0xFDB
 28782                           fsr2h	equ	0xFDA
 28783                           fsr2l	equ	0xFD9
 28784                           status	equ	0xFD8
 28785                           
 28786 ;; *************** function _RemoveSpaces *****************
 28787 ;; Defined at:
 28788 ;;		line 273 in file "MISC.c"
 28789 ;; Parameters:    Size  Location     Type
 28790 ;;  This            2   29[BANK1 ] PTR unsigned char 
 28791 ;;		 -> Rxdata(100), 
 28792 ;; Auto vars:     Size  Location     Type
 28793 ;;  That          100    0[BANK2 ] unsigned char [100]
 28794 ;;  address         2  100[BANK2 ] PTR unsigned char 
 28795 ;;		 -> Rxdata(100), 
 28796 ;;  i               1  102[BANK2 ] unsigned char 
 28797 ;; Return value:  Size  Location     Type
 28798 ;;		None               void
 28799 ;; Registers used:
 28800 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28801 ;; Tracked objects:
 28802 ;;		On entry : 0/0
 28803 ;;		On exit  : 0/0
 28804 ;;		Unchanged: 0/0
 28805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28806 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28807 ;;      Locals:         0       0       0     103       0       0       0       0       0       0       0       0       
      +0       0
 28808 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28809 ;;      Totals:         0       0       3     103       0       0       0       0       0       0       0       0       
      +0       0
 28810 ;;Total ram usage:      106 bytes
 28811 ;; Hardware stack levels used:    1
 28812 ;; Hardware stack levels required when called:    9
 28813 ;; This function calls:
 28814 ;;		_BufferCopy
 28815 ;;		_cleanBuffer
 28816 ;; This function is called by:
 28817 ;;		_Command
 28818 ;; This function uses a non-reentrant model
 28819 ;;
 28820                           
 28821                           	psect	text75
 28822  017624                     __ptext75:
 28823                           	opt stack 0
 28824  017624                     _RemoveSpaces:
 28825                           	opt stack 20
 28826                           
 28827                           ;MISC.c: 276: unsigned char i =0;
 28828                           
 28829                           ;incstack = 0
 28830  017624  0E00               	movlw	0
 28831  017626  0102               	movlb	2	; () banked
 28832  017628  6F66               	movwf	RemoveSpaces@i& (0+255),b
 28833                           
 28834                           ; BSR set to: 2
 28835                           ;MISC.c: 277: unsigned char* address = This;
 28836  01762A  C183  F264         	movff	RemoveSpaces@This,RemoveSpaces@address
 28837  01762E  C184  F265         	movff	RemoveSpaces@This+1,RemoveSpaces@address+1
 28838                           
 28839                           ; BSR set to: 2
 28840                           ;MISC.c: 278: unsigned char That[100];
 28841                           ;MISC.c: 279: cleanBuffer(That,100);
 28842  017632  0E00               	movlw	low RemoveSpaces@That
 28843  017634  0101               	movlb	1	; () banked
 28844  017636  6F74               	movwf	cleanBuffer@data& (0+255),b
 28845  017638  0E02               	movlw	high RemoveSpaces@That
 28846  01763A  0101               	movlb	1	; () banked
 28847  01763C  6F75               	movwf	(cleanBuffer@data+1)& (0+255),b
 28848  01763E  0E00               	movlw	0
 28849  017640  0101               	movlb	1	; () banked
 28850  017642  6F77               	movwf	(cleanBuffer@count+1)& (0+255),b
 28851  017644  0E64               	movlw	100
 28852  017646  6F76               	movwf	cleanBuffer@count& (0+255),b
 28853  017648  ECD3  F003         	call	_cleanBuffer	;wreg free
 28854                           
 28855                           ;MISC.c: 280: while(*This != 0)
 28856  01764C  D01E               	goto	l13971
 28857  01764E                     l13963:
 28858                           
 28859                           ;MISC.c: 281: {
 28860                           ;MISC.c: 282: if(*This != ' ')
 28861  01764E  C183  FFD9         	movff	RemoveSpaces@This,fsr2l
 28862  017652  C184  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 28863  017656  0E20               	movlw	32
 28864  017658  18DE               	xorwf	postinc2,w,c
 28865  01765A  B4D8               	btfsc	status,2,c
 28866  01765C  D012               	goto	l13969
 28867                           
 28868                           ;MISC.c: 283: {
 28869                           ;MISC.c: 284: That[i] = *This;
 28870  01765E  C183  FFD9         	movff	RemoveSpaces@This,fsr2l
 28871  017662  C184  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 28872  017666  0102               	movlb	2	; () banked
 28873  017668  5166               	movf	RemoveSpaces@i& (0+255),w,b
 28874  01766A  0D01               	mullw	1
 28875  01766C  0E00               	movlw	low RemoveSpaces@That
 28876  01766E  24F3               	addwf	prodl,w,c
 28877  017670  6EE1               	movwf	fsr1l,c
 28878  017672  0E02               	movlw	high RemoveSpaces@That
 28879  017674  20F4               	addwfc	prodh,w,c
 28880  017676  6EE2               	movwf	fsr1h,c
 28881  017678  CFDF FFE7          	movff	indf2,indf1
 28882                           
 28883                           ; BSR set to: 2
 28884                           ;MISC.c: 285: i++;
 28885  01767C  0102               	movlb	2	; () banked
 28886  01767E  2B66               	incf	RemoveSpaces@i& (0+255),f,b
 28887  017680  D000               	goto	l13969
 28888  017682                     l13969:
 28889                           
 28890                           ;MISC.c: 286: }
 28891                           ;MISC.c: 287: This++;
 28892  017682  0101               	movlb	1	; () banked
 28893  017684  4B83               	infsnz	RemoveSpaces@This& (0+255),f,b
 28894  017686  2B84               	incf	(RemoveSpaces@This+1)& (0+255),f,b
 28895  017688  D000               	goto	l13971
 28896  01768A                     l13971:
 28897  01768A  C183  FFD9         	movff	RemoveSpaces@This,fsr2l
 28898  01768E  C184  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 28899  017692  50DF               	movf	indf2,w,c
 28900  017694  A4D8               	btfss	status,2,c
 28901  017696  D7DB               	goto	l13963
 28902                           
 28903                           ;MISC.c: 288: }
 28904                           ;MISC.c: 289: BufferCopy(That,address, 100, 0);
 28905  017698  0E00               	movlw	low RemoveSpaces@That
 28906  01769A  0101               	movlb	1	; () banked
 28907  01769C  6F7C               	movwf	BufferCopy@from& (0+255),b
 28908  01769E  0E02               	movlw	high RemoveSpaces@That
 28909  0176A0  0101               	movlb	1	; () banked
 28910  0176A2  6F7D               	movwf	(BufferCopy@from+1)& (0+255),b
 28911  0176A4  C264  F17E         	movff	RemoveSpaces@address,BufferCopy@to
 28912  0176A8  C265  F17F         	movff	RemoveSpaces@address+1,BufferCopy@to+1
 28913  0176AC  0E64               	movlw	100
 28914  0176AE  0101               	movlb	1	; () banked
 28915  0176B0  6F80               	movwf	BufferCopy@count& (0+255),b
 28916  0176B2  0E00               	movlw	0
 28917  0176B4  0101               	movlb	1	; () banked
 28918  0176B6  6F81               	movwf	BufferCopy@shift& (0+255),b
 28919  0176B8  EC6A  F0B7         	call	_BufferCopy	;wreg free
 28920  0176BC  0012               	return		;funcret
 28921  0176BE                     __end_of_RemoveSpaces:
 28922                           	opt stack 0
 28923                           tblptru	equ	0xFF8
 28924                           tblptrh	equ	0xFF7
 28925                           tblptrl	equ	0xFF6
 28926                           tablat	equ	0xFF5
 28927                           prodh	equ	0xFF4
 28928                           prodl	equ	0xFF3
 28929                           intcon	equ	0xFF2
 28930                           intcon2	equ	0xFF1
 28931                           postinc0	equ	0xFEE
 28932                           plusw0	equ	0xFEB
 28933                           wreg	equ	0xFE8
 28934                           indf1	equ	0xFE7
 28935                           postdec1	equ	0xFE5
 28936                           fsr1h	equ	0xFE2
 28937                           fsr1l	equ	0xFE1
 28938                           indf2	equ	0xFDF
 28939                           postinc2	equ	0xFDE
 28940                           postdec2	equ	0xFDD
 28941                           plusw2	equ	0xFDB
 28942                           fsr2h	equ	0xFDA
 28943                           fsr2l	equ	0xFD9
 28944                           status	equ	0xFD8
 28945                           
 28946 ;; *************** function _READ_RTC_TIME *****************
 28947 ;; Defined at:
 28948 ;;		line 139 in file "RTC.c"
 28949 ;; Parameters:    Size  Location     Type
 28950 ;;		None
 28951 ;; Auto vars:     Size  Location     Type
 28952 ;;  temp            7   24[BANK1 ] unsigned char [7]
 28953 ;;  Error           1   31[BANK1 ] char 
 28954 ;; Return value:  Size  Location     Type
 28955 ;;                  1    wreg      unsigned char 
 28956 ;; Registers used:
 28957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28958 ;; Tracked objects:
 28959 ;;		On entry : 0/0
 28960 ;;		On exit  : 0/0
 28961 ;;		Unchanged: 0/0
 28962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28964 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 28965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28966 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 28967 ;;Total ram usage:        8 bytes
 28968 ;; Hardware stack levels used:    1
 28969 ;; Hardware stack levels required when called:   10
 28970 ;; This function calls:
 28971 ;;		_I2C_Read_Sequential
 28972 ;;		_ResetI2C
 28973 ;; This function is called by:
 28974 ;;		_Command
 28975 ;; This function uses a non-reentrant model
 28976 ;;
 28977                           
 28978                           	psect	text76
 28979  01677E                     __ptext76:
 28980                           	opt stack 0
 28981  01677E                     _READ_RTC_TIME:
 28982                           	opt stack 19
 28983                           
 28984                           ;RTC.c: 141: signed char Error =0;
 28985                           
 28986                           ;incstack = 0
 28987  01677E  0E00               	movlw	0
 28988  016780  0101               	movlb	1	; () banked
 28989  016782  6F85               	movwf	READ_RTC_TIME@Error& (0+255),b
 28990                           
 28991                           ; BSR set to: 1
 28992                           ;RTC.c: 142: unsigned char temp[7];
 28993                           ;RTC.c: 144: Error = I2C_Read_Sequential( 0b1101000, 0x00, temp, 7 );
 28994  016784  0E00               	movlw	0
 28995  016786  0101               	movlb	1	; () banked
 28996  016788  6F77               	movwf	I2C_Read_Sequential@Register& (0+255),b
 28997  01678A  0E7E               	movlw	low READ_RTC_TIME@temp
 28998  01678C  0101               	movlb	1	; () banked
 28999  01678E  6F78               	movwf	I2C_Read_Sequential@rdptr& (0+255),b
 29000  016790  0E01               	movlw	high READ_RTC_TIME@temp
 29001  016792  0101               	movlb	1	; () banked
 29002  016794  6F79               	movwf	(I2C_Read_Sequential@rdptr+1)& (0+255),b
 29003  016796  0E07               	movlw	7
 29004  016798  0101               	movlb	1	; () banked
 29005  01679A  6F7A               	movwf	I2C_Read_Sequential@length& (0+255),b
 29006  01679C  0E68               	movlw	104
 29007  01679E  EC5A  F0B0         	call	_I2C_Read_Sequential
 29008  0167A2  0101               	movlb	1	; () banked
 29009  0167A4  6F85               	movwf	READ_RTC_TIME@Error& (0+255),b
 29010                           
 29011                           ; BSR set to: 1
 29012                           ;RTC.c: 146: if(Error == 0 )
 29013  0167A6  0101               	movlb	1	; () banked
 29014  0167A8  5185               	movf	READ_RTC_TIME@Error& (0+255),w,b
 29015  0167AA  0101               	movlb	1	; () banked
 29016  0167AC  A4D8               	btfss	status,2,c
 29017  0167AE  D055               	goto	l14251
 29018                           
 29019                           ; BSR set to: 1
 29020                           ;RTC.c: 147: {
 29021                           ;RTC.c: 148: NowTime.Seconds = (temp[0] & 0x0F) + (((temp[0] & 0x70)>> 4) * 10);
 29022  0167B0  0101               	movlb	1	; () banked
 29023  0167B2  397E               	swapf	READ_RTC_TIME@temp& (0+255),w,b
 29024  0167B4  0B0F               	andlw	15
 29025  0167B6  0B07               	andlw	7
 29026  0167B8  0D0A               	mullw	10
 29027  0167BA  0101               	movlb	1	; () banked
 29028  0167BC  517E               	movf	READ_RTC_TIME@temp& (0+255),w,b
 29029  0167BE  0B0F               	andlw	15
 29030  0167C0  24F3               	addwf	prodl,w,c
 29031  0167C2  0101               	movlb	1	; () banked
 29032  0167C4  6F09               	movwf	_NowTime& (0+255),b
 29033                           
 29034                           ;RTC.c: 149: NowTime.Minutes = (temp[1] & 0x0F) + (((temp[1] & 0x70) >> 4) * 10);
 29035  0167C6  0101               	movlb	1	; () banked
 29036  0167C8  397F               	swapf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 29037  0167CA  0B0F               	andlw	15
 29038  0167CC  0B07               	andlw	7
 29039  0167CE  0D0A               	mullw	10
 29040  0167D0  0101               	movlb	1	; () banked
 29041  0167D2  517F               	movf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 29042  0167D4  0B0F               	andlw	15
 29043  0167D6  24F3               	addwf	prodl,w,c
 29044  0167D8  0101               	movlb	1	; () banked
 29045  0167DA  6F0A               	movwf	(_NowTime+1)& (0+255),b
 29046                           
 29047                           ;RTC.c: 150: NowTime.Hours = (temp[2] & 0x0F) + (((temp[2] & 0x10) >> 4) * 10);
 29048  0167DC  0101               	movlb	1	; () banked
 29049  0167DE  3980               	swapf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 29050  0167E0  0B0F               	andlw	15
 29051  0167E2  0B01               	andlw	1
 29052  0167E4  0D0A               	mullw	10
 29053  0167E6  0101               	movlb	1	; () banked
 29054  0167E8  5180               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 29055  0167EA  0B0F               	andlw	15
 29056  0167EC  24F3               	addwf	prodl,w,c
 29057  0167EE  0101               	movlb	1	; () banked
 29058  0167F0  6F0B               	movwf	(_NowTime+2)& (0+255),b
 29059                           
 29060                           ; BSR set to: 1
 29061                           ;RTC.c: 151: NowTime.HoursAM_PM = temp[2] & 0x20;
 29062  0167F2  0101               	movlb	1	; () banked
 29063  0167F4  5180               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 29064  0167F6  0B20               	andlw	32
 29065  0167F8  0101               	movlb	1	; () banked
 29066  0167FA  6F0D               	movwf	(_NowTime+4)& (0+255),b
 29067                           
 29068                           ; BSR set to: 1
 29069                           ;RTC.c: 152: NowTime.HoursMilitary = NowTime.Hours + 12 * NowTime.HoursAM_PM;
 29070  0167FC  0101               	movlb	1	; () banked
 29071  0167FE  510D               	movf	(_NowTime+4)& (0+255),w,b
 29072  016800  0D0C               	mullw	12
 29073  016802  50F3               	movf	prodl,w,c
 29074  016804  0101               	movlb	1	; () banked
 29075  016806  250B               	addwf	(_NowTime+2)& (0+255),w,b
 29076  016808  0101               	movlb	1	; () banked
 29077  01680A  6F0C               	movwf	(_NowTime+3)& (0+255),b
 29078                           
 29079                           ;RTC.c: 153: NowTime.Day = temp[3] & 0x07;
 29080  01680C  0101               	movlb	1	; () banked
 29081  01680E  5181               	movf	(READ_RTC_TIME@temp+3)& (0+255),w,b
 29082  016810  0B07               	andlw	7
 29083  016812  0101               	movlb	1	; () banked
 29084  016814  6F0E               	movwf	(_NowTime+5)& (0+255),b
 29085                           
 29086                           ; BSR set to: 1
 29087                           ;RTC.c: 154: NowTime.Date = (temp[4] & 0x0F) + (((temp[4] & 0x30)>> 4) * 10);
 29088  016816  0101               	movlb	1	; () banked
 29089  016818  3982               	swapf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 29090  01681A  0B0F               	andlw	15
 29091  01681C  0B03               	andlw	3
 29092  01681E  0D0A               	mullw	10
 29093  016820  0101               	movlb	1	; () banked
 29094  016822  5182               	movf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 29095  016824  0B0F               	andlw	15
 29096  016826  24F3               	addwf	prodl,w,c
 29097  016828  0101               	movlb	1	; () banked
 29098  01682A  6F0F               	movwf	(_NowTime+6)& (0+255),b
 29099                           
 29100                           ; BSR set to: 1
 29101                           ;RTC.c: 155: NowTime.Month = (temp[5] & 0x0F) + (((temp[5] & 0x10) >> 4) * 10);
 29102  01682C  0101               	movlb	1	; () banked
 29103  01682E  3983               	swapf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 29104  016830  0B0F               	andlw	15
 29105  016832  0B01               	andlw	1
 29106  016834  0D0A               	mullw	10
 29107  016836  0101               	movlb	1	; () banked
 29108  016838  5183               	movf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 29109  01683A  0B0F               	andlw	15
 29110  01683C  24F3               	addwf	prodl,w,c
 29111  01683E  0101               	movlb	1	; () banked
 29112  016840  6F10               	movwf	(_NowTime+7)& (0+255),b
 29113                           
 29114                           ; BSR set to: 1
 29115                           ;RTC.c: 156: NowTime.Year = (temp[6] & 0x0F) + (((temp[6] & 0xF0) >> 4) * 10);
 29116  016842  0101               	movlb	1	; () banked
 29117  016844  3984               	swapf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 29118  016846  0B0F               	andlw	15
 29119  016848  0B0F               	andlw	15
 29120  01684A  0D0A               	mullw	10
 29121  01684C  0101               	movlb	1	; () banked
 29122  01684E  5184               	movf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 29123  016850  0B0F               	andlw	15
 29124  016852  24F3               	addwf	prodl,w,c
 29125  016854  0101               	movlb	1	; () banked
 29126  016856  6F11               	movwf	(_NowTime+8)& (0+255),b
 29127                           
 29128                           ;RTC.c: 157: }
 29129  016858  D003               	goto	l14253
 29130  01685A                     l14251:
 29131                           
 29132                           ; BSR set to: 1
 29133                           ;RTC.c: 158: else
 29134                           ;RTC.c: 159: {
 29135                           ;RTC.c: 160: ResetI2C();
 29136  01685A  EC8E  F007         	call	_ResetI2C	;wreg free
 29137  01685E  D000               	goto	l14253
 29138  016860                     l14253:
 29139                           
 29140                           ;RTC.c: 161: }
 29141                           ;RTC.c: 162: return Error;
 29142  016860  0101               	movlb	1	; () banked
 29143  016862  5185               	movf	READ_RTC_TIME@Error& (0+255),w,b
 29144  016864  0012               	return	
 29145                           
 29146                           ; BSR set to: 1
 29147                           
 29148                           ; BSR set to: 1
 29149  016866  0012               	return		;funcret
 29150  016868                     __end_of_READ_RTC_TIME:
 29151                           	opt stack 0
 29152                           tblptru	equ	0xFF8
 29153                           tblptrh	equ	0xFF7
 29154                           tblptrl	equ	0xFF6
 29155                           tablat	equ	0xFF5
 29156                           prodh	equ	0xFF4
 29157                           prodl	equ	0xFF3
 29158                           intcon	equ	0xFF2
 29159                           intcon2	equ	0xFF1
 29160                           postinc0	equ	0xFEE
 29161                           plusw0	equ	0xFEB
 29162                           wreg	equ	0xFE8
 29163                           indf1	equ	0xFE7
 29164                           postdec1	equ	0xFE5
 29165                           fsr1h	equ	0xFE2
 29166                           fsr1l	equ	0xFE1
 29167                           indf2	equ	0xFDF
 29168                           postinc2	equ	0xFDE
 29169                           postdec2	equ	0xFDD
 29170                           plusw2	equ	0xFDB
 29171                           fsr2h	equ	0xFDA
 29172                           fsr2l	equ	0xFD9
 29173                           status	equ	0xFD8
 29174                           
 29175 ;; *************** function _ResetI2C *****************
 29176 ;; Defined at:
 29177 ;;		line 93 in file "I2C.c"
 29178 ;; Parameters:    Size  Location     Type
 29179 ;;		None
 29180 ;; Auto vars:     Size  Location     Type
 29181 ;;		None
 29182 ;; Return value:  Size  Location     Type
 29183 ;;		None               void
 29184 ;; Registers used:
 29185 ;;		wreg, status,2, status,0, cstack
 29186 ;; Tracked objects:
 29187 ;;		On entry : 0/0
 29188 ;;		On exit  : 0/0
 29189 ;;		Unchanged: 0/0
 29190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29195 ;;Total ram usage:        0 bytes
 29196 ;; Hardware stack levels used:    1
 29197 ;; Hardware stack levels required when called:    9
 29198 ;; This function calls:
 29199 ;;		_Init_I2C_Master
 29200 ;;		_delayUS
 29201 ;; This function is called by:
 29202 ;;		_RTC_Clock_Enable
 29203 ;;		_RTC_TIME_NONMilitary
 29204 ;;		_READ_RTC_TIME
 29205 ;;		_RTC_Clock_Disable
 29206 ;;		_READ_RTC_SECONDS
 29207 ;; This function uses a non-reentrant model
 29208 ;;
 29209                           
 29210                           	psect	text77
 29211  000F1C                     __ptext77:
 29212                           	opt stack 0
 29213  000F1C                     _ResetI2C:
 29214                           	opt stack 19
 29215                           
 29216                           ;I2C.c: 95: SSPCON1 &= 0xDF;
 29217                           
 29218                           ; BSR set to: 1
 29219                           ;incstack = 0
 29220  000F1C  9AC6               	bcf	4038,5,c	;volatile
 29221                           
 29222                           ;I2C.c: 96: TRISCbits.TRISC3 = 0;
 29223  000F1E  9694               	bcf	3988,3,c	;volatile
 29224                           
 29225                           ;I2C.c: 97: LATC &= ~0b00001000;
 29226  000F20  968B               	bcf	3979,3,c	;volatile
 29227                           
 29228                           ;I2C.c: 98: delayUS(200);
 29229  000F22  0EC8               	movlw	200
 29230  000F24  0101               	movlb	1	; () banked
 29231  000F26  6F74               	movwf	delayUS@US& (0+255),b
 29232  000F28  0E00               	movlw	0
 29233  000F2A  6F75               	movwf	(delayUS@US+1)& (0+255),b
 29234  000F2C  0E00               	movlw	0
 29235  000F2E  6F76               	movwf	(delayUS@US+2)& (0+255),b
 29236  000F30  0E00               	movlw	0
 29237  000F32  6F77               	movwf	(delayUS@US+3)& (0+255),b
 29238  000F34  ECC6  F0BF         	call	_delayUS	;wreg free
 29239                           
 29240                           ;I2C.c: 99: TRISCbits.TRISC3 = 1;
 29241  000F38  8694               	bsf	3988,3,c	;volatile
 29242                           
 29243                           ;I2C.c: 100: Init_I2C_Master();
 29244  000F3A  EC50  F004         	call	_Init_I2C_Master	;wreg free
 29245  000F3E  0012               	return		;funcret
 29246  000F40                     __end_of_ResetI2C:
 29247                           	opt stack 0
 29248                           tblptru	equ	0xFF8
 29249                           tblptrh	equ	0xFF7
 29250                           tblptrl	equ	0xFF6
 29251                           tablat	equ	0xFF5
 29252                           prodh	equ	0xFF4
 29253                           prodl	equ	0xFF3
 29254                           intcon	equ	0xFF2
 29255                           intcon2	equ	0xFF1
 29256                           postinc0	equ	0xFEE
 29257                           plusw0	equ	0xFEB
 29258                           wreg	equ	0xFE8
 29259                           indf1	equ	0xFE7
 29260                           postdec1	equ	0xFE5
 29261                           fsr1h	equ	0xFE2
 29262                           fsr1l	equ	0xFE1
 29263                           indf2	equ	0xFDF
 29264                           postinc2	equ	0xFDE
 29265                           postdec2	equ	0xFDD
 29266                           plusw2	equ	0xFDB
 29267                           fsr2h	equ	0xFDA
 29268                           fsr2l	equ	0xFD9
 29269                           status	equ	0xFD8
 29270                           
 29271 ;; *************** function _Init_I2C_Master *****************
 29272 ;; Defined at:
 29273 ;;		line 55 in file "I2C.c"
 29274 ;; Parameters:    Size  Location     Type
 29275 ;;		None
 29276 ;; Auto vars:     Size  Location     Type
 29277 ;;  baud            2   16[BANK1 ] unsigned int 
 29278 ;; Return value:  Size  Location     Type
 29279 ;;		None               void
 29280 ;; Registers used:
 29281 ;;		wreg, status,2, status,0, cstack
 29282 ;; Tracked objects:
 29283 ;;		On entry : 0/0
 29284 ;;		On exit  : 0/0
 29285 ;;		Unchanged: 0/0
 29286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29288 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29290 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29291 ;;Total ram usage:        2 bytes
 29292 ;; Hardware stack levels used:    1
 29293 ;; Hardware stack levels required when called:    8
 29294 ;; This function calls:
 29295 ;;		_OpenI2C
 29296 ;; This function is called by:
 29297 ;;		_main
 29298 ;;		_ResetI2C
 29299 ;; This function uses a non-reentrant model
 29300 ;;
 29301                           
 29302                           	psect	text78
 29303  0008A0                     __ptext78:
 29304                           	opt stack 0
 29305  0008A0                     _Init_I2C_Master:
 29306                           	opt stack 19
 29307                           
 29308                           ;I2C.c: 57: unsigned int baud = 0;
 29309                           
 29310                           ;incstack = 0
 29311  0008A0  0E00               	movlw	0
 29312  0008A2  0101               	movlb	1	; () banked
 29313  0008A4  6F77               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 29314  0008A6  0E00               	movlw	0
 29315  0008A8  6F76               	movwf	Init_I2C_Master@baud& (0+255),b
 29316                           
 29317                           ;I2C.c: 60: baud = (unsigned char)(40960000L/4 /((4* (long)5 * 1000L) - 1));
 29318  0008AA  0E00               	movlw	0
 29319  0008AC  0101               	movlb	1	; () banked
 29320  0008AE  6F77               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 29321  0008B0  0E00               	movlw	0
 29322  0008B2  6F76               	movwf	Init_I2C_Master@baud& (0+255),b
 29323                           
 29324                           ; BSR set to: 1
 29325                           ;I2C.c: 61: if(baud > 127 || baud == 0)
 29326  0008B4  0101               	movlb	1	; () banked
 29327  0008B6  5177               	movf	(Init_I2C_Master@baud+1)& (0+255),w,b
 29328  0008B8  E10B               	bnz	l12311
 29329  0008BA  0E80               	movlw	128
 29330  0008BC  0101               	movlb	1	; () banked
 29331  0008BE  5D76               	subwf	Init_I2C_Master@baud& (0+255),w,b
 29332  0008C0  B0D8               	btfsc	status,0,c
 29333  0008C2  D006               	goto	l12311
 29334                           
 29335                           ; BSR set to: 1
 29336  0008C4  0101               	movlb	1	; () banked
 29337  0008C6  5176               	movf	Init_I2C_Master@baud& (0+255),w,b
 29338  0008C8  0101               	movlb	1	; () banked
 29339  0008CA  1177               	iorwf	(Init_I2C_Master@baud+1)& (0+255),w,b
 29340  0008CC  A4D8               	btfss	status,2,c
 29341  0008CE  D006               	goto	l12313
 29342  0008D0                     l12311:
 29343                           
 29344                           ; BSR set to: 1
 29345                           ;I2C.c: 62: {
 29346                           ;I2C.c: 63: baud = 127;
 29347  0008D0  0E00               	movlw	0
 29348  0008D2  0101               	movlb	1	; () banked
 29349  0008D4  6F77               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 29350  0008D6  0E7F               	movlw	127
 29351  0008D8  6F76               	movwf	Init_I2C_Master@baud& (0+255),b
 29352  0008DA  D000               	goto	l12313
 29353  0008DC                     l12313:
 29354                           
 29355                           ; BSR set to: 1
 29356                           ;I2C.c: 64: }
 29357                           ;I2C.c: 65: SSPADD = baud;
 29358  0008DC  C176  FFC8         	movff	Init_I2C_Master@baud,4040	;volatile
 29359                           
 29360                           ; BSR set to: 1
 29361                           ;I2C.c: 66: OpenI2C(0b00001000, 0b10000000);
 29362  0008E0  0E80               	movlw	128
 29363  0008E2  0101               	movlb	1	; () banked
 29364  0008E4  6F74               	movwf	OpenI2C@slew& (0+255),b
 29365  0008E6  0E08               	movlw	8
 29366  0008E8  ECA0  F007         	call	_OpenI2C
 29367  0008EC  0012               	return		;funcret
 29368  0008EE                     __end_of_Init_I2C_Master:
 29369                           	opt stack 0
 29370                           tblptru	equ	0xFF8
 29371                           tblptrh	equ	0xFF7
 29372                           tblptrl	equ	0xFF6
 29373                           tablat	equ	0xFF5
 29374                           prodh	equ	0xFF4
 29375                           prodl	equ	0xFF3
 29376                           intcon	equ	0xFF2
 29377                           intcon2	equ	0xFF1
 29378                           postinc0	equ	0xFEE
 29379                           plusw0	equ	0xFEB
 29380                           wreg	equ	0xFE8
 29381                           indf1	equ	0xFE7
 29382                           postdec1	equ	0xFE5
 29383                           fsr1h	equ	0xFE2
 29384                           fsr1l	equ	0xFE1
 29385                           indf2	equ	0xFDF
 29386                           postinc2	equ	0xFDE
 29387                           postdec2	equ	0xFDD
 29388                           plusw2	equ	0xFDB
 29389                           fsr2h	equ	0xFDA
 29390                           fsr2l	equ	0xFD9
 29391                           status	equ	0xFD8
 29392                           
 29393 ;; *************** function _OpenI2C *****************
 29394 ;; Defined at:
 29395 ;;		line 74 in file "I2C.c"
 29396 ;; Parameters:    Size  Location     Type
 29397 ;;  sync_mode       1    wreg     unsigned char 
 29398 ;;  slew            1   14[BANK1 ] unsigned char 
 29399 ;; Auto vars:     Size  Location     Type
 29400 ;;  sync_mode       1   15[BANK1 ] unsigned char 
 29401 ;; Return value:  Size  Location     Type
 29402 ;;		None               void
 29403 ;; Registers used:
 29404 ;;		wreg, status,2, status,0
 29405 ;; Tracked objects:
 29406 ;;		On entry : 0/0
 29407 ;;		On exit  : 0/0
 29408 ;;		Unchanged: 0/0
 29409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29410 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29411 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29413 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29414 ;;Total ram usage:        2 bytes
 29415 ;; Hardware stack levels used:    1
 29416 ;; Hardware stack levels required when called:    7
 29417 ;; This function calls:
 29418 ;;		Nothing
 29419 ;; This function is called by:
 29420 ;;		_Init_I2C_Master
 29421 ;; This function uses a non-reentrant model
 29422 ;;
 29423                           
 29424                           	psect	text79
 29425  000F40                     __ptext79:
 29426                           	opt stack 0
 29427  000F40                     _OpenI2C:
 29428                           	opt stack 19
 29429                           
 29430                           ;incstack = 0
 29431                           ;OpenI2C@sync_mode stored from wreg
 29432  000F40  0101               	movlb	1	; () banked
 29433  000F42  6F75               	movwf	OpenI2C@sync_mode& (0+255),b
 29434                           
 29435                           ; BSR set to: 1
 29436                           ;I2C.c: 76: SSPSTAT &= 0x3F;
 29437  000F44  0E3F               	movlw	63
 29438  000F46  16C7               	andwf	4039,f,c	;volatile
 29439                           
 29440                           ; BSR set to: 1
 29441                           ;I2C.c: 77: SSPCON1 = 0x00;
 29442  000F48  0E00               	movlw	0
 29443  000F4A  6EC6               	movwf	4038,c	;volatile
 29444                           
 29445                           ; BSR set to: 1
 29446                           ;I2C.c: 78: SSPCON2 = 0x00;
 29447  000F4C  0E00               	movlw	0
 29448  000F4E  6EC5               	movwf	4037,c	;volatile
 29449                           
 29450                           ;I2C.c: 79: SSPCON1 |= sync_mode;
 29451  000F50  0101               	movlb	1	; () banked
 29452  000F52  5175               	movf	OpenI2C@sync_mode& (0+255),w,b
 29453  000F54  12C6               	iorwf	4038,f,c	;volatile
 29454                           
 29455                           ;I2C.c: 80: SSPSTAT |= slew;
 29456  000F56  0101               	movlb	1	; () banked
 29457  000F58  5174               	movf	OpenI2C@slew& (0+255),w,b
 29458  000F5A  12C7               	iorwf	4039,f,c	;volatile
 29459                           
 29460                           ; BSR set to: 1
 29461                           ;I2C.c: 82: TRISCbits.TRISC3 = 1;
 29462  000F5C  8694               	bsf	3988,3,c	;volatile
 29463                           
 29464                           ; BSR set to: 1
 29465                           ;I2C.c: 83: TRISCbits.TRISC4 = 1;
 29466  000F5E  8894               	bsf	3988,4,c	;volatile
 29467                           
 29468                           ; BSR set to: 1
 29469                           ;I2C.c: 84: SSPCON1 |= 0b00100000;
 29470  000F60  8AC6               	bsf	4038,5,c	;volatile
 29471                           
 29472                           ; BSR set to: 1
 29473  000F62  0012               	return		;funcret
 29474  000F64                     __end_of_OpenI2C:
 29475                           	opt stack 0
 29476                           tblptru	equ	0xFF8
 29477                           tblptrh	equ	0xFF7
 29478                           tblptrl	equ	0xFF6
 29479                           tablat	equ	0xFF5
 29480                           prodh	equ	0xFF4
 29481                           prodl	equ	0xFF3
 29482                           intcon	equ	0xFF2
 29483                           intcon2	equ	0xFF1
 29484                           postinc0	equ	0xFEE
 29485                           plusw0	equ	0xFEB
 29486                           wreg	equ	0xFE8
 29487                           indf1	equ	0xFE7
 29488                           postdec1	equ	0xFE5
 29489                           fsr1h	equ	0xFE2
 29490                           fsr1l	equ	0xFE1
 29491                           indf2	equ	0xFDF
 29492                           postinc2	equ	0xFDE
 29493                           postdec2	equ	0xFDD
 29494                           plusw2	equ	0xFDB
 29495                           fsr2h	equ	0xFDA
 29496                           fsr2l	equ	0xFD9
 29497                           status	equ	0xFD8
 29498                           
 29499 ;; *************** function _I2C_Read_Sequential *****************
 29500 ;; Defined at:
 29501 ;;		line 307 in file "I2C.c"
 29502 ;; Parameters:    Size  Location     Type
 29503 ;;  I2Caddress      1    wreg     unsigned char 
 29504 ;;  Register        1   17[BANK1 ] unsigned char 
 29505 ;;  rdptr           2   18[BANK1 ] PTR unsigned char 
 29506 ;;		 -> READ_RTC_TIME@temp(7), 
 29507 ;;  length          1   20[BANK1 ] unsigned char 
 29508 ;; Auto vars:     Size  Location     Type
 29509 ;;  I2Caddress      1   21[BANK1 ] unsigned char 
 29510 ;; Return value:  Size  Location     Type
 29511 ;;                  1    wreg      unsigned char 
 29512 ;; Registers used:
 29513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29514 ;; Tracked objects:
 29515 ;;		On entry : 0/0
 29516 ;;		On exit  : 0/0
 29517 ;;		Unchanged: 0/0
 29518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29519 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 29520 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29522 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 29523 ;;Total ram usage:        5 bytes
 29524 ;; Hardware stack levels used:    1
 29525 ;; Hardware stack levels required when called:    9
 29526 ;; This function calls:
 29527 ;;		_IdleI2C
 29528 ;;		_Multiple_I2C_Read
 29529 ;;		_WriteI2C
 29530 ;; This function is called by:
 29531 ;;		_READ_RTC_TIME
 29532 ;; This function uses a non-reentrant model
 29533 ;;
 29534                           
 29535                           	psect	text80
 29536  0160B4                     __ptext80:
 29537                           	opt stack 0
 29538  0160B4                     _I2C_Read_Sequential:
 29539                           	opt stack 19
 29540                           
 29541                           ; BSR set to: 1
 29542                           ;incstack = 0
 29543                           ;I2C_Read_Sequential@I2Caddress stored from wreg
 29544  0160B4  0101               	movlb	1	; () banked
 29545  0160B6  6F7B               	movwf	I2C_Read_Sequential@I2Caddress& (0+255),b
 29546                           
 29547                           ; BSR set to: 1
 29548                           ;I2C.c: 309: IdleI2C();
 29549  0160B8  EC54  F008         	call	_IdleI2C	;wreg free
 29550                           
 29551                           ;I2C.c: 310: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 29552  0160BC  80C5               	bsf	4037,0,c	;volatile
 29553  0160BE  D000               	goto	l1467
 29554  0160C0                     l1467:
 29555  0160C0  A0C5               	btfss	4037,0,c	;volatile
 29556  0160C2  D002               	goto	l1470
 29557  0160C4  D7FD               	goto	l1467
 29558                           
 29559                           ;I2C.c: 311: while ( SSPCON2bits.SEN );
 29560  0160C6  D000               	goto	l1470
 29561  0160C8                     l1470:
 29562  0160C8  B0C5               	btfsc	4037,0,c	;volatile
 29563  0160CA  D7FE               	goto	l1470
 29564                           
 29565                           ;I2C.c: 312: if ( PIR2bits.BCLIF )
 29566  0160CC  A6A1               	btfss	4001,3,c	;volatile
 29567  0160CE  D003               	goto	l13361
 29568  0160D0                     l13355:
 29569                           
 29570                           ;I2C.c: 313: {
 29571                           ;I2C.c: 314: return ( -1 );
 29572  0160D0  0EFF               	movlw	255
 29573  0160D2  0012               	return	
 29574                           
 29575                           ;I2C.c: 315: }
 29576  0160D4  D070               	goto	l13409
 29577  0160D6                     l13361:
 29578                           
 29579                           ;I2C.c: 316: else
 29580                           ;I2C.c: 317: {
 29581                           ;I2C.c: 318: if ( WriteI2C( (I2Caddress << 1) & 0xFE ) )
 29582  0160D6  0101               	movlb	1	; () banked
 29583  0160D8  517B               	movf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 29584  0160DA  257B               	addwf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 29585  0160DC  0BFE               	andlw	254
 29586  0160DE  EC90  F0BF         	call	_WriteI2C
 29587  0160E2  0900               	iorlw	0
 29588  0160E4  B4D8               	btfsc	status,2,c
 29589  0160E6  D006               	goto	l1476
 29590                           
 29591                           ;I2C.c: 319: {
 29592                           ;I2C.c: 320: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 29593  0160E8  84C5               	bsf	4037,2,c	;volatile
 29594  0160EA  D000               	goto	l1477
 29595  0160EC                     l1477:
 29596  0160EC  B4C5               	btfsc	4037,2,c	;volatile
 29597  0160EE  D7FE               	goto	l1477
 29598                           
 29599                           ;I2C.c: 321: return ( -3 );
 29600  0160F0  0EFD               	movlw	253
 29601  0160F2  0012               	return	
 29602  0160F4                     l1476:
 29603                           
 29604                           ;I2C.c: 322: }
 29605                           ;I2C.c: 325: if ( !SSPCON2bits.ACKSTAT )
 29606  0160F4  BCC5               	btfsc	4037,6,c	;volatile
 29607  0160F6  D058               	goto	l1480
 29608                           
 29609                           ;I2C.c: 326: {
 29610                           ;I2C.c: 327: if ( WriteI2C( Register ) )
 29611  0160F8  0101               	movlb	1	; () banked
 29612  0160FA  5177               	movf	I2C_Read_Sequential@Register& (0+255),w,b
 29613  0160FC  EC90  F0BF         	call	_WriteI2C
 29614  016100  0900               	iorlw	0
 29615  016102  B4D8               	btfsc	status,2,c
 29616  016104  D006               	goto	l1481
 29617                           
 29618                           ;I2C.c: 328: {
 29619                           ;I2C.c: 329: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 29620  016106  84C5               	bsf	4037,2,c	;volatile
 29621  016108  D000               	goto	l1482
 29622  01610A                     l1482:
 29623  01610A  B4C5               	btfsc	4037,2,c	;volatile
 29624  01610C  D7FE               	goto	l1482
 29625                           
 29626                           ;I2C.c: 330: return ( -3 );
 29627  01610E  0EFD               	movlw	253
 29628  016110  0012               	return	
 29629  016112                     l1481:
 29630                           
 29631                           ;I2C.c: 331: }
 29632                           ;I2C.c: 334: if ( !SSPCON2bits.ACKSTAT )
 29633  016112  BCC5               	btfsc	4037,6,c	;volatile
 29634  016114  D042               	goto	l1485
 29635                           
 29636                           ;I2C.c: 335: {
 29637                           ;I2C.c: 336: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
 29638  016116  82C5               	bsf	4037,1,c	;volatile
 29639  016118  D000               	goto	l1486
 29640  01611A                     l1486:
 29641  01611A  A2C5               	btfss	4037,1,c	;volatile
 29642  01611C  D002               	goto	l1489
 29643  01611E  D7FD               	goto	l1486
 29644                           
 29645                           ;I2C.c: 337: while ( SSPCON2bits.RSEN );
 29646  016120  D000               	goto	l1489
 29647  016122                     l1489:
 29648  016122  B2C5               	btfsc	4037,1,c	;volatile
 29649  016124  D7FE               	goto	l1489
 29650                           
 29651                           ;I2C.c: 338: if ( WriteI2C( (I2Caddress << 1) +1 ) )
 29652  016126  80D8               	bsf	status,0,c
 29653  016128  0101               	movlb	1	; () banked
 29654  01612A  357B               	rlcf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 29655  01612C  EC90  F0BF         	call	_WriteI2C
 29656  016130  0900               	iorlw	0
 29657  016132  B4D8               	btfsc	status,2,c
 29658  016134  D006               	goto	l1492
 29659                           
 29660                           ;I2C.c: 339: {
 29661                           ;I2C.c: 340: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 29662  016136  84C5               	bsf	4037,2,c	;volatile
 29663  016138  D000               	goto	l1493
 29664  01613A                     l1493:
 29665  01613A  B4C5               	btfsc	4037,2,c	;volatile
 29666  01613C  D7FE               	goto	l1493
 29667                           
 29668                           ;I2C.c: 341: return ( -3 );
 29669  01613E  0EFD               	movlw	253
 29670  016140  0012               	return	
 29671  016142                     l1492:
 29672                           
 29673                           ;I2C.c: 342: }
 29674                           ;I2C.c: 345: if ( !SSPCON2bits.ACKSTAT )
 29675  016142  BCC5               	btfsc	4037,6,c	;volatile
 29676  016144  D023               	goto	l1496
 29677                           
 29678                           ;I2C.c: 346: {
 29679                           ;I2C.c: 347: if ( Multiple_I2C_Read( rdptr, length ) )
 29680  016146  C178  F174         	movff	I2C_Read_Sequential@rdptr,Multiple_I2C_Read@rdptr
 29681  01614A  C179  F175         	movff	I2C_Read_Sequential@rdptr+1,Multiple_I2C_Read@rdptr+1
 29682  01614E  C17A  F176         	movff	I2C_Read_Sequential@length,Multiple_I2C_Read@length
 29683  016152  EC45  F003         	call	_Multiple_I2C_Read	;wreg free
 29684  016156  0900               	iorlw	0
 29685  016158  B4D8               	btfsc	status,2,c
 29686  01615A  D002               	goto	l1497
 29687                           
 29688                           ;I2C.c: 348: {
 29689                           ;I2C.c: 349: return ( -1 );
 29690  01615C  0EFF               	movlw	255
 29691  01615E  0012               	return	
 29692  016160                     l1497:
 29693                           
 29694                           ;I2C.c: 350: }
 29695                           ;I2C.c: 352: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
 29696  016160  8AC5               	bsf	4037,5,c	;volatile
 29697  016162  88C5               	bsf	4037,4,c	;volatile
 29698  016164  D000               	goto	l1498
 29699  016166                     l1498:
 29700  016166  A8C5               	btfss	4037,4,c	;volatile
 29701  016168  D002               	goto	l1501
 29702  01616A  D7FD               	goto	l1498
 29703                           
 29704                           ;I2C.c: 353: while ( SSPCON2bits.ACKEN );
 29705  01616C  D000               	goto	l1501
 29706  01616E                     l1501:
 29707  01616E  B8C5               	btfsc	4037,4,c	;volatile
 29708  016170  D7FE               	goto	l1501
 29709                           
 29710                           ;I2C.c: 354: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 29711  016172  84C5               	bsf	4037,2,c	;volatile
 29712  016174  D000               	goto	l1504
 29713  016176                     l1504:
 29714  016176  A4C5               	btfss	4037,2,c	;volatile
 29715  016178  D002               	goto	l1507
 29716  01617A  D7FD               	goto	l1504
 29717                           
 29718                           ;I2C.c: 355: while ( SSPCON2bits.PEN );
 29719  01617C  D000               	goto	l1507
 29720  01617E                     l1507:
 29721  01617E  B4C5               	btfsc	4037,2,c	;volatile
 29722  016180  D7FE               	goto	l1507
 29723                           
 29724                           ;I2C.c: 356: if ( PIR2bits.BCLIF )
 29725  016182  A6A1               	btfss	4001,3,c	;volatile
 29726  016184  D018               	goto	l13409
 29727  016186  D7A4               	goto	l13355
 29728                           
 29729                           ;I2C.c: 357: {
 29730                           ;I2C.c: 358: return ( -1 );
 29731  016188  0012               	return	
 29732                           
 29733                           ;I2C.c: 359: }
 29734                           ;I2C.c: 360: }
 29735  01618A  D015               	goto	l13409
 29736  01618C                     l1496:
 29737                           
 29738                           ;I2C.c: 361: else
 29739                           ;I2C.c: 362: {
 29740                           ;I2C.c: 363: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 29741  01618C  84C5               	bsf	4037,2,c	;volatile
 29742  01618E  D000               	goto	l1512
 29743  016190                     l1512:
 29744  016190  B4C5               	btfsc	4037,2,c	;volatile
 29745  016192  D7FE               	goto	l1512
 29746  016194                     l13397:
 29747                           
 29748                           ;I2C.c: 364: return ( -2 );
 29749  016194  0EFE               	movlw	254
 29750  016196  0012               	return	
 29751                           
 29752                           ;I2C.c: 365: }
 29753                           ;I2C.c: 366: }
 29754  016198  D00E               	goto	l13409
 29755  01619A                     l1485:
 29756                           
 29757                           ;I2C.c: 367: else
 29758                           ;I2C.c: 368: {
 29759                           ;I2C.c: 369: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 29760  01619A  84C5               	bsf	4037,2,c	;volatile
 29761  01619C  D000               	goto	l1516
 29762  01619E                     l1516:
 29763  01619E  B4C5               	btfsc	4037,2,c	;volatile
 29764  0161A0  D7FE               	goto	l1516
 29765  0161A2  D7F8               	goto	l13397
 29766                           
 29767                           ;I2C.c: 370: return ( -2 );
 29768  0161A4  0012               	return	
 29769                           
 29770                           ;I2C.c: 371: }
 29771                           ;I2C.c: 372: }
 29772  0161A6  D007               	goto	l13409
 29773  0161A8                     l1480:
 29774                           
 29775                           ;I2C.c: 373: else
 29776                           ;I2C.c: 374: {
 29777                           ;I2C.c: 375: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 29778  0161A8  84C5               	bsf	4037,2,c	;volatile
 29779  0161AA  D000               	goto	l1520
 29780  0161AC                     l1520:
 29781  0161AC  B4C5               	btfsc	4037,2,c	;volatile
 29782  0161AE  D7FE               	goto	l1520
 29783  0161B0  D7F1               	goto	l13397
 29784                           
 29785                           ;I2C.c: 376: return ( -2 );
 29786  0161B2  0012               	return	
 29787  0161B4  D000               	goto	l13409
 29788  0161B6                     l13409:
 29789                           
 29790                           ;I2C.c: 377: }
 29791                           ;I2C.c: 378: }
 29792                           ;I2C.c: 379: return ( 0 );
 29793  0161B6  0E00               	movlw	0
 29794  0161B8  0012               	return	
 29795  0161BA  0012               	return		;funcret
 29796  0161BC                     __end_of_I2C_Read_Sequential:
 29797                           	opt stack 0
 29798                           tblptru	equ	0xFF8
 29799                           tblptrh	equ	0xFF7
 29800                           tblptrl	equ	0xFF6
 29801                           tablat	equ	0xFF5
 29802                           prodh	equ	0xFF4
 29803                           prodl	equ	0xFF3
 29804                           intcon	equ	0xFF2
 29805                           intcon2	equ	0xFF1
 29806                           postinc0	equ	0xFEE
 29807                           plusw0	equ	0xFEB
 29808                           wreg	equ	0xFE8
 29809                           indf1	equ	0xFE7
 29810                           postdec1	equ	0xFE5
 29811                           fsr1h	equ	0xFE2
 29812                           fsr1l	equ	0xFE1
 29813                           indf2	equ	0xFDF
 29814                           postinc2	equ	0xFDE
 29815                           postdec2	equ	0xFDD
 29816                           plusw2	equ	0xFDB
 29817                           fsr2h	equ	0xFDA
 29818                           fsr2l	equ	0xFD9
 29819                           status	equ	0xFD8
 29820                           
 29821 ;; *************** function _WriteI2C *****************
 29822 ;; Defined at:
 29823 ;;		line 119 in file "I2C.c"
 29824 ;; Parameters:    Size  Location     Type
 29825 ;;  data_out        1    wreg     unsigned char 
 29826 ;; Auto vars:     Size  Location     Type
 29827 ;;  data_out        1   15[BANK1 ] unsigned char 
 29828 ;; Return value:  Size  Location     Type
 29829 ;;                  1    wreg      char 
 29830 ;; Registers used:
 29831 ;;		wreg, status,2, status,0, cstack
 29832 ;; Tracked objects:
 29833 ;;		On entry : 0/0
 29834 ;;		On exit  : 0/0
 29835 ;;		Unchanged: 0/0
 29836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29838 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29840 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29841 ;;Total ram usage:        1 bytes
 29842 ;; Hardware stack levels used:    1
 29843 ;; Hardware stack levels required when called:    8
 29844 ;; This function calls:
 29845 ;;		_IdleI2C
 29846 ;; This function is called by:
 29847 ;;		_I2C_Write_At_Address
 29848 ;;		_I2C_Read_At_Address
 29849 ;;		_I2C_Read_Sequential
 29850 ;; This function uses a non-reentrant model
 29851 ;;
 29852                           
 29853                           	psect	text81
 29854  017F20                     __ptext81:
 29855                           	opt stack 0
 29856  017F20                     _WriteI2C:
 29857                           	opt stack 19
 29858                           
 29859                           ;incstack = 0
 29860                           ;WriteI2C@data_out stored from wreg
 29861  017F20  0101               	movlb	1	; () banked
 29862  017F22  6F75               	movwf	WriteI2C@data_out& (0+255),b
 29863                           
 29864                           ; BSR set to: 1
 29865                           ;I2C.c: 121: SSPBUF = data_out;
 29866  017F24  C175  FFC9         	movff	WriteI2C@data_out,4041	;volatile
 29867                           
 29868                           ; BSR set to: 1
 29869                           ;I2C.c: 122: if ( SSPCON1bits.WCOL )
 29870  017F28  AEC6               	btfss	4038,7,c	;volatile
 29871  017F2A  D002               	goto	l12437
 29872                           
 29873                           ; BSR set to: 1
 29874                           ;I2C.c: 123: return ( -1 );
 29875  017F2C  0EFF               	movlw	255
 29876                           
 29877                           ; BSR set to: 1
 29878                           
 29879                           ; BSR set to: 1
 29880  017F2E  0012               	return	
 29881  017F30                     l12437:
 29882                           
 29883                           ; BSR set to: 1
 29884                           ;I2C.c: 124: else
 29885                           ;I2C.c: 125: {
 29886                           ;I2C.c: 126: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
 29887  017F30  50C6               	movf	4038,w,c	;volatile
 29888  017F32  0B0F               	andlw	15
 29889  017F34  0A08               	xorlw	8
 29890  017F36  B4D8               	btfsc	status,2,c
 29891  017F38  D010               	goto	l12455
 29892                           
 29893                           ; BSR set to: 1
 29894  017F3A  50C6               	movf	4038,w,c	;volatile
 29895  017F3C  0B0F               	andlw	15
 29896  017F3E  0A0B               	xorlw	11
 29897  017F40  B4D8               	btfsc	status,2,c
 29898  017F42  D00B               	goto	l12455
 29899                           
 29900                           ; BSR set to: 1
 29901                           ;I2C.c: 127: {
 29902                           ;I2C.c: 128: SSPCON1bits.CKP = 1;
 29903  017F44  88C6               	bsf	4038,4,c	;volatile
 29904                           
 29905                           ;I2C.c: 129: while ( !PIR1bits.SSPIF );
 29906  017F46  D000               	goto	l1349
 29907  017F48                     l1349:
 29908  017F48  A69E               	btfss	3998,3,c	;volatile
 29909  017F4A  D7FE               	goto	l1349
 29910                           
 29911                           ;I2C.c: 131: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
 29912  017F4C  A4C7               	btfss	4039,2,c	;volatile
 29913  017F4E  B0C7               	btfsc	4039,0,c	;volatile
 29914  017F50  D002               	goto	l12451
 29915                           
 29916                           ;I2C.c: 132: {
 29917                           ;I2C.c: 133: return ( -2 );
 29918  017F52  0EFE               	movlw	254
 29919                           
 29920                           ;I2C.c: 134: }
 29921  017F54  0012               	return	
 29922  017F56                     l12451:
 29923                           
 29924                           ;I2C.c: 135: else
 29925                           ;I2C.c: 136: {
 29926                           ;I2C.c: 137: return ( 0 );
 29927  017F56  0E00               	movlw	0
 29928                           
 29929                           ;I2C.c: 138: }
 29930                           ;I2C.c: 139: }
 29931  017F58  0012               	return	
 29932  017F5A                     l12455:
 29933                           
 29934                           ;I2C.c: 140: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 29935  017F5A  50C6               	movf	4038,w,c	;volatile
 29936  017F5C  0B0F               	andlw	15
 29937  017F5E  0A08               	xorlw	8
 29938  017F60  B4D8               	btfsc	status,2,c
 29939  017F62  D007               	goto	l1358
 29940  017F64  50C6               	movf	4038,w,c	;volatile
 29941  017F66  0B0F               	andlw	15
 29942  017F68  0A0B               	xorlw	11
 29943  017F6A  B4D8               	btfsc	status,2,c
 29944  017F6C  D002               	goto	l1358
 29945  017F6E  D00B               	goto	l12473
 29946                           
 29947                           ;I2C.c: 141: {
 29948                           ;I2C.c: 142: while( SSPSTATbits.BF );
 29949  017F70  D000               	goto	l1358
 29950  017F72                     l1358:
 29951  017F72  B0C7               	btfsc	4039,0,c	;volatile
 29952  017F74  D7FE               	goto	l1358
 29953                           
 29954                           ;I2C.c: 143: IdleI2C();
 29955  017F76  EC54  F008         	call	_IdleI2C	;wreg free
 29956                           
 29957                           ;I2C.c: 144: if ( SSPCON2bits.ACKSTAT )
 29958  017F7A  ACC5               	btfss	4037,6,c	;volatile
 29959  017F7C  D002               	goto	l12469
 29960                           
 29961                           ;I2C.c: 145: return ( -2 );
 29962  017F7E  0EFE               	movlw	254
 29963  017F80  0012               	return	
 29964  017F82                     l12469:
 29965                           
 29966                           ;I2C.c: 146: else return ( 0 );
 29967  017F82  0E00               	movlw	0
 29968                           
 29969                           ;I2C.c: 147: }
 29970  017F84  0012               	return	
 29971  017F86                     l12473:
 29972                           
 29973                           ;I2C.c: 148: else
 29974                           ;I2C.c: 149: {
 29975                           ;I2C.c: 150: return (-4);
 29976  017F86  0EFC               	movlw	252
 29977  017F88  0012               	return	
 29978  017F8A  0012               	return		;funcret
 29979  017F8C                     __end_of_WriteI2C:
 29980                           	opt stack 0
 29981                           tblptru	equ	0xFF8
 29982                           tblptrh	equ	0xFF7
 29983                           tblptrl	equ	0xFF6
 29984                           tablat	equ	0xFF5
 29985                           prodh	equ	0xFF4
 29986                           prodl	equ	0xFF3
 29987                           intcon	equ	0xFF2
 29988                           intcon2	equ	0xFF1
 29989                           postinc0	equ	0xFEE
 29990                           plusw0	equ	0xFEB
 29991                           wreg	equ	0xFE8
 29992                           indf1	equ	0xFE7
 29993                           postdec1	equ	0xFE5
 29994                           fsr1h	equ	0xFE2
 29995                           fsr1l	equ	0xFE1
 29996                           indf2	equ	0xFDF
 29997                           postinc2	equ	0xFDE
 29998                           postdec2	equ	0xFDD
 29999                           plusw2	equ	0xFDB
 30000                           fsr2h	equ	0xFDA
 30001                           fsr2l	equ	0xFD9
 30002                           status	equ	0xFD8
 30003                           
 30004 ;; *************** function _IdleI2C *****************
 30005 ;; Defined at:
 30006 ;;		line 108 in file "I2C.c"
 30007 ;; Parameters:    Size  Location     Type
 30008 ;;		None
 30009 ;; Auto vars:     Size  Location     Type
 30010 ;;		None
 30011 ;; Return value:  Size  Location     Type
 30012 ;;		None               void
 30013 ;; Registers used:
 30014 ;;		wreg, status,2, status,0
 30015 ;; Tracked objects:
 30016 ;;		On entry : 0/0
 30017 ;;		On exit  : 0/0
 30018 ;;		Unchanged: 0/0
 30019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30022 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30023 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30024 ;;Total ram usage:        1 bytes
 30025 ;; Hardware stack levels used:    1
 30026 ;; Hardware stack levels required when called:    7
 30027 ;; This function calls:
 30028 ;;		Nothing
 30029 ;; This function is called by:
 30030 ;;		_WriteI2C
 30031 ;;		_I2C_Write_At_Address
 30032 ;;		_I2C_Read_At_Address
 30033 ;;		_I2C_Read_Sequential
 30034 ;; This function uses a non-reentrant model
 30035 ;;
 30036                           
 30037                           	psect	text82
 30038  0010A8                     __ptext82:
 30039                           	opt stack 0
 30040  0010A8                     _IdleI2C:
 30041                           	opt stack 19
 30042                           
 30043                           ;I2C.c: 111: continue;
 30044                           
 30045                           ;I2C.c: 110: while ( ( SSPCON2 & 0x1F ) || ( SSPSTATbits.R_W ) )
 30046                           
 30047                           ;incstack = 0
 30048  0010A8  D000               	goto	l12213
 30049  0010AA                     l12213:
 30050  0010AA  CFC5 F174          	movff	4037,??_IdleI2C	;volatile
 30051  0010AE  0E1F               	movlw	31
 30052  0010B0  0101               	movlb	1	; () banked
 30053  0010B2  1774               	andwf	??_IdleI2C& (0+255),f,b
 30054  0010B4  B4D8               	btfsc	status,2,c
 30055                           
 30056                           ; BSR set to: 1
 30057  0010B6  B4C7               	btfsc	4039,2,c	;volatile
 30058  0010B8  D7F8               	goto	l12213
 30059                           
 30060                           ; BSR set to: 1
 30061                           
 30062                           ; BSR set to: 1
 30063  0010BA  0012               	return		;funcret
 30064  0010BC                     __end_of_IdleI2C:
 30065                           	opt stack 0
 30066                           tblptru	equ	0xFF8
 30067                           tblptrh	equ	0xFF7
 30068                           tblptrl	equ	0xFF6
 30069                           tablat	equ	0xFF5
 30070                           prodh	equ	0xFF4
 30071                           prodl	equ	0xFF3
 30072                           intcon	equ	0xFF2
 30073                           intcon2	equ	0xFF1
 30074                           postinc0	equ	0xFEE
 30075                           plusw0	equ	0xFEB
 30076                           wreg	equ	0xFE8
 30077                           indf1	equ	0xFE7
 30078                           postdec1	equ	0xFE5
 30079                           fsr1h	equ	0xFE2
 30080                           fsr1l	equ	0xFE1
 30081                           indf2	equ	0xFDF
 30082                           postinc2	equ	0xFDE
 30083                           postdec2	equ	0xFDD
 30084                           plusw2	equ	0xFDB
 30085                           fsr2h	equ	0xFDA
 30086                           fsr2l	equ	0xFD9
 30087                           status	equ	0xFD8
 30088                           
 30089 ;; *************** function _Multiple_I2C_Read *****************
 30090 ;; Defined at:
 30091 ;;		line 387 in file "I2C.c"
 30092 ;; Parameters:    Size  Location     Type
 30093 ;;  rdptr           2   14[BANK1 ] PTR unsigned char 
 30094 ;;		 -> READ_RTC_TIME@temp(7), 
 30095 ;;  length          1   16[BANK1 ] unsigned char 
 30096 ;; Auto vars:     Size  Location     Type
 30097 ;;		None
 30098 ;; Return value:  Size  Location     Type
 30099 ;;                  1    wreg      unsigned char 
 30100 ;; Registers used:
 30101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30102 ;; Tracked objects:
 30103 ;;		On entry : 0/0
 30104 ;;		On exit  : 0/0
 30105 ;;		Unchanged: 0/0
 30106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30107 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 30108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30110 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 30111 ;;Total ram usage:        3 bytes
 30112 ;; Hardware stack levels used:    1
 30113 ;; Hardware stack levels required when called:    8
 30114 ;; This function calls:
 30115 ;;		_readI2C
 30116 ;; This function is called by:
 30117 ;;		_I2C_Read_Sequential
 30118 ;; This function uses a non-reentrant model
 30119 ;;
 30120                           
 30121                           	psect	text83
 30122  00068A                     __ptext83:
 30123                           	opt stack 0
 30124  00068A                     _Multiple_I2C_Read:
 30125                           	opt stack 19
 30126                           
 30127                           ;I2C.c: 389: while ( length-- )
 30128                           
 30129                           ; BSR set to: 1
 30130                           ;incstack = 0
 30131  00068A  D027               	goto	l12495
 30132  00068C                     l12479:
 30133                           
 30134                           ;I2C.c: 390: {
 30135                           ;I2C.c: 391: *rdptr++ = readI2C();
 30136  00068C  ECB2  F007         	call	_readI2C	;wreg free
 30137  000690  C174  FFD9         	movff	Multiple_I2C_Read@rdptr,fsr2l
 30138  000694  C175  FFDA         	movff	Multiple_I2C_Read@rdptr+1,fsr2h
 30139  000698  6EDF               	movwf	indf2,c
 30140  00069A  0101               	movlb	1	; () banked
 30141  00069C  4B74               	infsnz	Multiple_I2C_Read@rdptr& (0+255),f,b
 30142  00069E  2B75               	incf	(Multiple_I2C_Read@rdptr+1)& (0+255),f,b
 30143                           
 30144                           ;I2C.c: 392: while ( SSPCON2bits.RCEN );
 30145  0006A0  D000               	goto	l1527
 30146  0006A2                     l1527:
 30147  0006A2  B6C5               	btfsc	4037,3,c	;volatile
 30148  0006A4  D7FE               	goto	l1527
 30149                           
 30150                           ;I2C.c: 394: if ( PIR2bits.BCLIF )
 30151  0006A6  A6A1               	btfss	4001,3,c	;volatile
 30152  0006A8  D002               	goto	l12487
 30153                           
 30154                           ;I2C.c: 395: {
 30155                           ;I2C.c: 396: return ( -1 );
 30156  0006AA  0EFF               	movlw	255
 30157  0006AC  0012               	return	
 30158  0006AE                     l12487:
 30159                           
 30160                           ;I2C.c: 397: }
 30161                           ;I2C.c: 399: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 30162  0006AE  50C6               	movf	4038,w,c	;volatile
 30163  0006B0  0B0F               	andlw	15
 30164  0006B2  0A08               	xorlw	8
 30165  0006B4  B4D8               	btfsc	status,2,c
 30166  0006B6  D005               	goto	l12491
 30167  0006B8  50C6               	movf	4038,w,c	;volatile
 30168  0006BA  0B0F               	andlw	15
 30169  0006BC  0A0B               	xorlw	11
 30170  0006BE  A4D8               	btfss	status,2,c
 30171  0006C0  D00C               	goto	l12495
 30172  0006C2                     l12491:
 30173                           
 30174                           ;I2C.c: 400: {
 30175                           ;I2C.c: 401: if ( length )
 30176  0006C2  0101               	movlb	1	; () banked
 30177  0006C4  5176               	movf	Multiple_I2C_Read@length& (0+255),w,b
 30178  0006C6  0101               	movlb	1	; () banked
 30179  0006C8  B4D8               	btfsc	status,2,c
 30180  0006CA  D007               	goto	l12495
 30181                           
 30182                           ; BSR set to: 1
 30183                           ;I2C.c: 402: {
 30184                           ;I2C.c: 403: SSPCON2bits.ACKDT = 0;
 30185  0006CC  9AC5               	bcf	4037,5,c	;volatile
 30186                           
 30187                           ;I2C.c: 404: SSPCON2bits.ACKEN = 1;
 30188  0006CE  88C5               	bsf	4037,4,c	;volatile
 30189                           
 30190                           ;I2C.c: 405: while ( SSPCON2bits.ACKEN );
 30191  0006D0  D000               	goto	l1536
 30192  0006D2                     l1536:
 30193  0006D2  A8C5               	btfss	4037,4,c	;volatile
 30194  0006D4  D002               	goto	l12495
 30195  0006D6  D7FD               	goto	l1536
 30196  0006D8  D000               	goto	l12495
 30197  0006DA                     l12495:
 30198  0006DA  0101               	movlb	1	; () banked
 30199  0006DC  0776               	decf	Multiple_I2C_Read@length& (0+255),f,b
 30200  0006DE  0101               	movlb	1	; () banked
 30201  0006E0  2976               	incf	Multiple_I2C_Read@length& (0+255),w,b
 30202  0006E2  A4D8               	btfss	status,2,c
 30203  0006E4  D7D3               	goto	l12479
 30204                           
 30205                           ; BSR set to: 1
 30206                           ;I2C.c: 406: }
 30207                           ;I2C.c: 407: }
 30208                           ;I2C.c: 409: }
 30209                           ;I2C.c: 410: return ( 0 );
 30210                           
 30211                           ; BSR set to: 1
 30212  0006E6  0E00               	movlw	0
 30213  0006E8  0012               	return	
 30214                           
 30215                           ; BSR set to: 1
 30216  0006EA  0012               	return		;funcret
 30217  0006EC                     __end_of_Multiple_I2C_Read:
 30218                           	opt stack 0
 30219                           tblptru	equ	0xFF8
 30220                           tblptrh	equ	0xFF7
 30221                           tblptrl	equ	0xFF6
 30222                           tablat	equ	0xFF5
 30223                           prodh	equ	0xFF4
 30224                           prodl	equ	0xFF3
 30225                           intcon	equ	0xFF2
 30226                           intcon2	equ	0xFF1
 30227                           postinc0	equ	0xFEE
 30228                           plusw0	equ	0xFEB
 30229                           wreg	equ	0xFE8
 30230                           indf1	equ	0xFE7
 30231                           postdec1	equ	0xFE5
 30232                           fsr1h	equ	0xFE2
 30233                           fsr1l	equ	0xFE1
 30234                           indf2	equ	0xFDF
 30235                           postinc2	equ	0xFDE
 30236                           postdec2	equ	0xFDD
 30237                           plusw2	equ	0xFDB
 30238                           fsr2h	equ	0xFDA
 30239                           fsr2l	equ	0xFD9
 30240                           status	equ	0xFD8
 30241                           
 30242 ;; *************** function _readI2C *****************
 30243 ;; Defined at:
 30244 ;;		line 418 in file "I2C.c"
 30245 ;; Parameters:    Size  Location     Type
 30246 ;;		None
 30247 ;; Auto vars:     Size  Location     Type
 30248 ;;		None
 30249 ;; Return value:  Size  Location     Type
 30250 ;;                  1    wreg      unsigned char 
 30251 ;; Registers used:
 30252 ;;		wreg, status,2, status,0
 30253 ;; Tracked objects:
 30254 ;;		On entry : 0/0
 30255 ;;		On exit  : 0/0
 30256 ;;		Unchanged: 0/0
 30257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30262 ;;Total ram usage:        0 bytes
 30263 ;; Hardware stack levels used:    1
 30264 ;; Hardware stack levels required when called:    7
 30265 ;; This function calls:
 30266 ;;		Nothing
 30267 ;; This function is called by:
 30268 ;;		_Multiple_I2C_Read
 30269 ;; This function uses a non-reentrant model
 30270 ;;
 30271                           
 30272                           	psect	text84
 30273  000F64                     __ptext84:
 30274                           	opt stack 0
 30275  000F64                     _readI2C:
 30276                           	opt stack 19
 30277                           
 30278                           ;I2C.c: 420: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 30279                           
 30280                           ;incstack = 0
 30281  000F64  50C6               	movf	4038,w,c	;volatile
 30282  000F66  0B0F               	andlw	15
 30283  000F68  0A08               	xorlw	8
 30284  000F6A  B4D8               	btfsc	status,2,c
 30285  000F6C  D005               	goto	l1544
 30286  000F6E  50C6               	movf	4038,w,c	;volatile
 30287  000F70  0B0F               	andlw	15
 30288  000F72  0A0B               	xorlw	11
 30289  000F74  A4D8               	btfss	status,2,c
 30290  000F76  D002               	goto	l1545
 30291  000F78                     l1544:
 30292                           
 30293                           ;I2C.c: 421: SSPCON2bits.RCEN = 1;
 30294  000F78  86C5               	bsf	4037,3,c	;volatile
 30295                           
 30296                           ;I2C.c: 422: while ( !SSPSTATbits.BF );
 30297  000F7A  D000               	goto	l1545
 30298  000F7C                     l1545:
 30299  000F7C  A0C7               	btfss	4039,0,c	;volatile
 30300  000F7E  D7FE               	goto	l1545
 30301                           
 30302                           ;I2C.c: 423: return ( SSPBUF );
 30303  000F80  50C9               	movf	4041,w,c	;volatile
 30304  000F82  0012               	return	
 30305  000F84  0012               	return		;funcret
 30306  000F86                     __end_of_readI2C:
 30307                           	opt stack 0
 30308                           tblptru	equ	0xFF8
 30309                           tblptrh	equ	0xFF7
 30310                           tblptrl	equ	0xFF6
 30311                           tablat	equ	0xFF5
 30312                           prodh	equ	0xFF4
 30313                           prodl	equ	0xFF3
 30314                           intcon	equ	0xFF2
 30315                           intcon2	equ	0xFF1
 30316                           postinc0	equ	0xFEE
 30317                           plusw0	equ	0xFEB
 30318                           wreg	equ	0xFE8
 30319                           indf1	equ	0xFE7
 30320                           postdec1	equ	0xFE5
 30321                           fsr1h	equ	0xFE2
 30322                           fsr1l	equ	0xFE1
 30323                           indf2	equ	0xFDF
 30324                           postinc2	equ	0xFDE
 30325                           postdec2	equ	0xFDD
 30326                           plusw2	equ	0xFDB
 30327                           fsr2h	equ	0xFDA
 30328                           fsr2l	equ	0xFD9
 30329                           status	equ	0xFD8
 30330                           
 30331 ;; *************** function _Parse_Time *****************
 30332 ;; Defined at:
 30333 ;;		line 279 in file "RTC.c"
 30334 ;; Parameters:    Size  Location     Type
 30335 ;;  This            2   14[BANK1 ] PTR unsigned char 
 30336 ;;		 -> Rxdata(100), 
 30337 ;; Auto vars:     Size  Location     Type
 30338 ;;  TempTime        9   18[BANK1 ] struct TIME
 30339 ;;  temp            1   17[BANK1 ] unsigned char 
 30340 ;; Return value:  Size  Location     Type
 30341 ;;                  1    wreg      unsigned char 
 30342 ;; Registers used:
 30343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30344 ;; Tracked objects:
 30345 ;;		On entry : 0/0
 30346 ;;		On exit  : 0/0
 30347 ;;		Unchanged: 0/0
 30348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30349 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30350 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 30351 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30352 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 30353 ;;Total ram usage:       13 bytes
 30354 ;; Hardware stack levels used:    1
 30355 ;; Hardware stack levels required when called:    7
 30356 ;; This function calls:
 30357 ;;		Nothing
 30358 ;; This function is called by:
 30359 ;;		_Command
 30360 ;; This function uses a non-reentrant model
 30361 ;;
 30362                           
 30363                           	psect	text85
 30364  01387E                     __ptext85:
 30365                           	opt stack 0
 30366  01387E                     _Parse_Time:
 30367                           	opt stack 22
 30368                           
 30369                           ;RTC.c: 281: TIME TempTime;
 30370                           ;RTC.c: 282: unsigned char temp = 0;
 30371                           
 30372                           ;incstack = 0
 30373  01387E  0E00               	movlw	0
 30374  013880  0101               	movlb	1	; () banked
 30375  013882  6F77               	movwf	Parse_Time@temp& (0+255),b
 30376                           
 30377                           ; BSR set to: 1
 30378                           ;RTC.c: 284: if(*This != 0 && *This == ' ')
 30379  013884  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30380  013888  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30381  01388C  50DF               	movf	indf2,w,c
 30382  01388E  B4D8               	btfsc	status,2,c
 30383  013890  D00C               	goto	l14275
 30384                           
 30385                           ; BSR set to: 1
 30386  013892  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30387  013896  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30388  01389A  0E20               	movlw	32
 30389  01389C  18DE               	xorwf	postinc2,w,c
 30390  01389E  A4D8               	btfss	status,2,c
 30391  0138A0  D004               	goto	l14275
 30392                           
 30393                           ; BSR set to: 1
 30394                           ;RTC.c: 285: {
 30395                           ;RTC.c: 286: This++;
 30396  0138A2  0101               	movlb	1	; () banked
 30397  0138A4  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30398  0138A6  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30399  0138A8  D000               	goto	l14275
 30400  0138AA                     l14275:
 30401                           
 30402                           ; BSR set to: 1
 30403                           ;RTC.c: 287: }
 30404                           ;RTC.c: 290: if (*This >= 48 && *This <= 57)
 30405  0138AA  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30406  0138AE  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30407  0138B2  0E2F               	movlw	47
 30408  0138B4  64DF               	cpfsgt	indf2,c
 30409  0138B6  D013               	goto	l14283
 30410                           
 30411                           ; BSR set to: 1
 30412  0138B8  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30413  0138BC  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30414  0138C0  0E3A               	movlw	58
 30415  0138C2  60DF               	cpfslt	indf2,c
 30416  0138C4  D00C               	goto	l14283
 30417                           
 30418                           ; BSR set to: 1
 30419                           ;RTC.c: 291: {
 30420                           ;RTC.c: 292: temp = *This - 48;
 30421  0138C6  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30422  0138CA  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30423  0138CE  50DF               	movf	indf2,w,c
 30424  0138D0  0FD0               	addlw	208
 30425  0138D2  0101               	movlb	1	; () banked
 30426  0138D4  6F77               	movwf	Parse_Time@temp& (0+255),b
 30427                           
 30428                           ; BSR set to: 1
 30429                           ;RTC.c: 293: This++;
 30430  0138D6  0101               	movlb	1	; () banked
 30431  0138D8  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30432  0138DA  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30433                           
 30434                           ;RTC.c: 294: }
 30435  0138DC  D002               	goto	l14287
 30436  0138DE                     l14283:
 30437                           
 30438                           ; BSR set to: 1
 30439                           ;RTC.c: 295: else
 30440                           ;RTC.c: 296: {
 30441                           ;RTC.c: 297: return 0;
 30442  0138DE  0E00               	movlw	0
 30443                           
 30444                           ; BSR set to: 1
 30445  0138E0  0012               	return	
 30446  0138E2                     l14287:
 30447                           
 30448                           ; BSR set to: 1
 30449                           ;RTC.c: 298: }
 30450                           ;RTC.c: 300: if(*This >= 48 && *This <= 57)
 30451  0138E2  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30452  0138E6  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30453  0138EA  0E2F               	movlw	47
 30454  0138EC  64DF               	cpfsgt	indf2,c
 30455  0138EE  D018               	goto	l14297
 30456                           
 30457                           ; BSR set to: 1
 30458  0138F0  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30459  0138F4  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30460  0138F8  0E3A               	movlw	58
 30461  0138FA  60DF               	cpfslt	indf2,c
 30462  0138FC  D011               	goto	l14297
 30463                           
 30464                           ; BSR set to: 1
 30465                           ;RTC.c: 301: {
 30466                           ;RTC.c: 302: temp *= 10;
 30467  0138FE  0E0A               	movlw	10
 30468  013900  0101               	movlb	1	; () banked
 30469  013902  0377               	mulwf	Parse_Time@temp& (0+255),b
 30470  013904  50F3               	movf	prodl,w,c
 30471  013906  6F77               	movwf	Parse_Time@temp& (0+255),b
 30472                           
 30473                           ; BSR set to: 1
 30474                           ;RTC.c: 303: temp += *This - 48;
 30475  013908  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30476  01390C  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30477  013910  50DF               	movf	indf2,w,c
 30478  013912  0FD0               	addlw	208
 30479  013914  0101               	movlb	1	; () banked
 30480  013916  2777               	addwf	Parse_Time@temp& (0+255),f,b
 30481                           
 30482                           ; BSR set to: 1
 30483                           ;RTC.c: 304: This++;
 30484  013918  0101               	movlb	1	; () banked
 30485  01391A  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30486  01391C  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30487                           
 30488                           ;RTC.c: 305: }
 30489  01391E  D00C               	goto	l1242
 30490  013920                     l14297:
 30491                           
 30492                           ; BSR set to: 1
 30493                           ;RTC.c: 306: else if(*This == '/')
 30494  013920  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30495  013924  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30496  013928  0E2F               	movlw	47
 30497  01392A  18DE               	xorwf	postinc2,w,c
 30498  01392C  B4D8               	btfsc	status,2,c
 30499  01392E  D004               	goto	l1242
 30500  013930  D001               	goto	l14301
 30501                           
 30502                           ; BSR set to: 1
 30503                           ;RTC.c: 307: {
 30504                           ;RTC.c: 309: }
 30505  013932  D002               	goto	l1242
 30506  013934                     l14301:
 30507                           
 30508                           ; BSR set to: 1
 30509                           ;RTC.c: 310: else
 30510                           ;RTC.c: 311: {
 30511                           ;RTC.c: 312: return 0;
 30512  013934  0E00               	movlw	0
 30513                           
 30514                           ; BSR set to: 1
 30515  013936  0012               	return	
 30516  013938                     l1242:
 30517                           
 30518                           ; BSR set to: 1
 30519                           ;RTC.c: 313: }
 30520                           ;RTC.c: 314: TempTime.Month = temp;
 30521  013938  C177  F17F         	movff	Parse_Time@temp,Parse_Time@TempTime+7
 30522                           
 30523                           ; BSR set to: 1
 30524                           ;RTC.c: 316: if(*This == '/')
 30525  01393C  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30526  013940  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30527  013944  0E2F               	movlw	47
 30528  013946  18DE               	xorwf	postinc2,w,c
 30529  013948  A4D8               	btfss	status,2,c
 30530  01394A  D004               	goto	l14309
 30531                           
 30532                           ; BSR set to: 1
 30533                           ;RTC.c: 317: {
 30534                           ;RTC.c: 318: This++;
 30535  01394C  0101               	movlb	1	; () banked
 30536  01394E  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30537  013950  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30538                           
 30539                           ;RTC.c: 319: }
 30540  013952  D002               	goto	l14313
 30541  013954                     l14309:
 30542                           
 30543                           ; BSR set to: 1
 30544                           ;RTC.c: 320: else
 30545                           ;RTC.c: 321: {
 30546                           ;RTC.c: 322: return 0;
 30547  013954  0E00               	movlw	0
 30548                           
 30549                           ; BSR set to: 1
 30550  013956  0012               	return	
 30551  013958                     l14313:
 30552                           
 30553                           ; BSR set to: 1
 30554                           ;RTC.c: 323: }
 30555                           ;RTC.c: 326: if (*This >= 48 && *This <= 57)
 30556  013958  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30557  01395C  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30558  013960  0E2F               	movlw	47
 30559  013962  64DF               	cpfsgt	indf2,c
 30560  013964  D013               	goto	l14321
 30561                           
 30562                           ; BSR set to: 1
 30563  013966  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30564  01396A  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30565  01396E  0E3A               	movlw	58
 30566  013970  60DF               	cpfslt	indf2,c
 30567  013972  D00C               	goto	l14321
 30568                           
 30569                           ; BSR set to: 1
 30570                           ;RTC.c: 327: {
 30571                           ;RTC.c: 328: temp = *This - 48;
 30572  013974  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30573  013978  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30574  01397C  50DF               	movf	indf2,w,c
 30575  01397E  0FD0               	addlw	208
 30576  013980  0101               	movlb	1	; () banked
 30577  013982  6F77               	movwf	Parse_Time@temp& (0+255),b
 30578                           
 30579                           ; BSR set to: 1
 30580                           ;RTC.c: 329: This++;
 30581  013984  0101               	movlb	1	; () banked
 30582  013986  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30583  013988  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30584                           
 30585                           ;RTC.c: 330: }
 30586  01398A  D002               	goto	l14325
 30587  01398C                     l14321:
 30588                           
 30589                           ; BSR set to: 1
 30590                           ;RTC.c: 331: else
 30591                           ;RTC.c: 332: {
 30592                           ;RTC.c: 333: return 0;
 30593  01398C  0E00               	movlw	0
 30594                           
 30595                           ; BSR set to: 1
 30596  01398E  0012               	return	
 30597  013990                     l14325:
 30598                           
 30599                           ; BSR set to: 1
 30600                           ;RTC.c: 334: }
 30601                           ;RTC.c: 336: if(*This >= 48 && *This <= 57)
 30602  013990  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30603  013994  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30604  013998  0E2F               	movlw	47
 30605  01399A  64DF               	cpfsgt	indf2,c
 30606  01399C  D018               	goto	l14335
 30607                           
 30608                           ; BSR set to: 1
 30609  01399E  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30610  0139A2  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30611  0139A6  0E3A               	movlw	58
 30612  0139A8  60DF               	cpfslt	indf2,c
 30613  0139AA  D011               	goto	l14335
 30614                           
 30615                           ; BSR set to: 1
 30616                           ;RTC.c: 337: {
 30617                           ;RTC.c: 338: temp *= 10;
 30618  0139AC  0E0A               	movlw	10
 30619  0139AE  0101               	movlb	1	; () banked
 30620  0139B0  0377               	mulwf	Parse_Time@temp& (0+255),b
 30621  0139B2  50F3               	movf	prodl,w,c
 30622  0139B4  6F77               	movwf	Parse_Time@temp& (0+255),b
 30623                           
 30624                           ; BSR set to: 1
 30625                           ;RTC.c: 339: temp += *This - 48;
 30626  0139B6  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30627  0139BA  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30628  0139BE  50DF               	movf	indf2,w,c
 30629  0139C0  0FD0               	addlw	208
 30630  0139C2  0101               	movlb	1	; () banked
 30631  0139C4  2777               	addwf	Parse_Time@temp& (0+255),f,b
 30632                           
 30633                           ; BSR set to: 1
 30634                           ;RTC.c: 340: This++;
 30635  0139C6  0101               	movlb	1	; () banked
 30636  0139C8  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30637  0139CA  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30638                           
 30639                           ;RTC.c: 341: }
 30640  0139CC  D00C               	goto	l1250
 30641  0139CE                     l14335:
 30642                           
 30643                           ; BSR set to: 1
 30644                           ;RTC.c: 342: else if(*This == '/')
 30645  0139CE  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30646  0139D2  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30647  0139D6  0E2F               	movlw	47
 30648  0139D8  18DE               	xorwf	postinc2,w,c
 30649  0139DA  B4D8               	btfsc	status,2,c
 30650  0139DC  D004               	goto	l1250
 30651  0139DE  D001               	goto	l14339
 30652                           
 30653                           ; BSR set to: 1
 30654                           ;RTC.c: 343: {
 30655                           ;RTC.c: 345: }
 30656  0139E0  D002               	goto	l1250
 30657  0139E2                     l14339:
 30658                           
 30659                           ; BSR set to: 1
 30660                           ;RTC.c: 346: else
 30661                           ;RTC.c: 347: {
 30662                           ;RTC.c: 348: return 0;
 30663  0139E2  0E00               	movlw	0
 30664                           
 30665                           ; BSR set to: 1
 30666  0139E4  0012               	return	
 30667  0139E6                     l1250:
 30668                           
 30669                           ; BSR set to: 1
 30670                           ;RTC.c: 349: }
 30671                           ;RTC.c: 350: TempTime.Date = temp;
 30672  0139E6  C177  F17E         	movff	Parse_Time@temp,Parse_Time@TempTime+6
 30673                           
 30674                           ; BSR set to: 1
 30675                           ;RTC.c: 352: if(*This == '/')
 30676  0139EA  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30677  0139EE  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30678  0139F2  0E2F               	movlw	47
 30679  0139F4  18DE               	xorwf	postinc2,w,c
 30680  0139F6  A4D8               	btfss	status,2,c
 30681  0139F8  D004               	goto	l14347
 30682                           
 30683                           ; BSR set to: 1
 30684                           ;RTC.c: 353: {
 30685                           ;RTC.c: 354: This++;
 30686  0139FA  0101               	movlb	1	; () banked
 30687  0139FC  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30688  0139FE  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30689                           
 30690                           ;RTC.c: 355: }
 30691  013A00  D002               	goto	l14351
 30692  013A02                     l14347:
 30693                           
 30694                           ; BSR set to: 1
 30695                           ;RTC.c: 356: else
 30696                           ;RTC.c: 357: {
 30697                           ;RTC.c: 358: return 0;
 30698  013A02  0E00               	movlw	0
 30699                           
 30700                           ; BSR set to: 1
 30701  013A04  0012               	return	
 30702  013A06                     l14351:
 30703                           
 30704                           ; BSR set to: 1
 30705                           ;RTC.c: 359: }
 30706                           ;RTC.c: 362: if (*This >= 48 && *This <= 57)
 30707  013A06  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30708  013A0A  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30709  013A0E  0E2F               	movlw	47
 30710  013A10  64DF               	cpfsgt	indf2,c
 30711  013A12  D013               	goto	l14359
 30712                           
 30713                           ; BSR set to: 1
 30714  013A14  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30715  013A18  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30716  013A1C  0E3A               	movlw	58
 30717  013A1E  60DF               	cpfslt	indf2,c
 30718  013A20  D00C               	goto	l14359
 30719                           
 30720                           ; BSR set to: 1
 30721                           ;RTC.c: 363: {
 30722                           ;RTC.c: 364: temp = *This - 48;
 30723  013A22  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30724  013A26  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30725  013A2A  50DF               	movf	indf2,w,c
 30726  013A2C  0FD0               	addlw	208
 30727  013A2E  0101               	movlb	1	; () banked
 30728  013A30  6F77               	movwf	Parse_Time@temp& (0+255),b
 30729                           
 30730                           ; BSR set to: 1
 30731                           ;RTC.c: 365: This++;
 30732  013A32  0101               	movlb	1	; () banked
 30733  013A34  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30734  013A36  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30735                           
 30736                           ;RTC.c: 366: }
 30737  013A38  D002               	goto	l14363
 30738  013A3A                     l14359:
 30739                           
 30740                           ; BSR set to: 1
 30741                           ;RTC.c: 367: else
 30742                           ;RTC.c: 368: {
 30743                           ;RTC.c: 369: return 0;
 30744  013A3A  0E00               	movlw	0
 30745                           
 30746                           ; BSR set to: 1
 30747  013A3C  0012               	return	
 30748  013A3E                     l14363:
 30749                           
 30750                           ; BSR set to: 1
 30751                           ;RTC.c: 370: }
 30752                           ;RTC.c: 371: if (*This >= 48 && *This <= 57)
 30753  013A3E  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30754  013A42  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30755  013A46  0E2F               	movlw	47
 30756  013A48  64DF               	cpfsgt	indf2,c
 30757  013A4A  D018               	goto	l14373
 30758                           
 30759                           ; BSR set to: 1
 30760  013A4C  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30761  013A50  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30762  013A54  0E3A               	movlw	58
 30763  013A56  60DF               	cpfslt	indf2,c
 30764  013A58  D011               	goto	l14373
 30765                           
 30766                           ; BSR set to: 1
 30767                           ;RTC.c: 372: {
 30768                           ;RTC.c: 373: temp *= 10;
 30769  013A5A  0E0A               	movlw	10
 30770  013A5C  0101               	movlb	1	; () banked
 30771  013A5E  0377               	mulwf	Parse_Time@temp& (0+255),b
 30772  013A60  50F3               	movf	prodl,w,c
 30773  013A62  6F77               	movwf	Parse_Time@temp& (0+255),b
 30774                           
 30775                           ; BSR set to: 1
 30776                           ;RTC.c: 374: temp += *This - 48;
 30777  013A64  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30778  013A68  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30779  013A6C  50DF               	movf	indf2,w,c
 30780  013A6E  0FD0               	addlw	208
 30781  013A70  0101               	movlb	1	; () banked
 30782  013A72  2777               	addwf	Parse_Time@temp& (0+255),f,b
 30783                           
 30784                           ; BSR set to: 1
 30785                           ;RTC.c: 375: This++;
 30786  013A74  0101               	movlb	1	; () banked
 30787  013A76  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30788  013A78  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30789                           
 30790                           ;RTC.c: 376: }
 30791  013A7A  D002               	goto	l1258
 30792  013A7C                     l14373:
 30793                           
 30794                           ; BSR set to: 1
 30795                           ;RTC.c: 377: else
 30796                           ;RTC.c: 378: {
 30797                           ;RTC.c: 379: return 0;
 30798  013A7C  0E00               	movlw	0
 30799                           
 30800                           ; BSR set to: 1
 30801  013A7E  0012               	return	
 30802  013A80                     l1258:
 30803                           
 30804                           ; BSR set to: 1
 30805                           ;RTC.c: 380: }
 30806                           ;RTC.c: 381: TempTime.Year = temp;
 30807  013A80  C177  F180         	movff	Parse_Time@temp,Parse_Time@TempTime+8
 30808                           
 30809                           ; BSR set to: 1
 30810                           ;RTC.c: 383: if(*This == ' ')
 30811  013A84  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30812  013A88  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30813  013A8C  0E20               	movlw	32
 30814  013A8E  18DE               	xorwf	postinc2,w,c
 30815  013A90  A4D8               	btfss	status,2,c
 30816  013A92  D004               	goto	l14381
 30817                           
 30818                           ; BSR set to: 1
 30819                           ;RTC.c: 384: {
 30820                           ;RTC.c: 385: This++;
 30821  013A94  0101               	movlb	1	; () banked
 30822  013A96  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30823  013A98  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30824  013A9A  D000               	goto	l14381
 30825  013A9C                     l14381:
 30826                           
 30827                           ; BSR set to: 1
 30828                           ;RTC.c: 386: }
 30829                           ;RTC.c: 389: if (*This >= 48 && *This <= 57)
 30830  013A9C  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30831  013AA0  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30832  013AA4  0E2F               	movlw	47
 30833  013AA6  64DF               	cpfsgt	indf2,c
 30834  013AA8  D013               	goto	l14389
 30835                           
 30836                           ; BSR set to: 1
 30837  013AAA  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30838  013AAE  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30839  013AB2  0E3A               	movlw	58
 30840  013AB4  60DF               	cpfslt	indf2,c
 30841  013AB6  D00C               	goto	l14389
 30842                           
 30843                           ; BSR set to: 1
 30844                           ;RTC.c: 390: {
 30845                           ;RTC.c: 391: temp = *This - 48;
 30846  013AB8  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30847  013ABC  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30848  013AC0  50DF               	movf	indf2,w,c
 30849  013AC2  0FD0               	addlw	208
 30850  013AC4  0101               	movlb	1	; () banked
 30851  013AC6  6F77               	movwf	Parse_Time@temp& (0+255),b
 30852                           
 30853                           ; BSR set to: 1
 30854                           ;RTC.c: 392: This++;
 30855  013AC8  0101               	movlb	1	; () banked
 30856  013ACA  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30857  013ACC  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30858                           
 30859                           ;RTC.c: 393: }
 30860  013ACE  D002               	goto	l14393
 30861  013AD0                     l14389:
 30862                           
 30863                           ; BSR set to: 1
 30864                           ;RTC.c: 394: else
 30865                           ;RTC.c: 395: {
 30866                           ;RTC.c: 396: return 0;
 30867  013AD0  0E00               	movlw	0
 30868                           
 30869                           ; BSR set to: 1
 30870  013AD2  0012               	return	
 30871  013AD4                     l14393:
 30872                           
 30873                           ; BSR set to: 1
 30874                           ;RTC.c: 397: }
 30875                           ;RTC.c: 399: if(*This >= 48 && *This <= 57)
 30876  013AD4  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30877  013AD8  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30878  013ADC  0E2F               	movlw	47
 30879  013ADE  64DF               	cpfsgt	indf2,c
 30880  013AE0  D018               	goto	l14403
 30881                           
 30882                           ; BSR set to: 1
 30883  013AE2  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30884  013AE6  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30885  013AEA  0E3A               	movlw	58
 30886  013AEC  60DF               	cpfslt	indf2,c
 30887  013AEE  D011               	goto	l14403
 30888                           
 30889                           ; BSR set to: 1
 30890                           ;RTC.c: 400: {
 30891                           ;RTC.c: 401: temp *= 10;
 30892  013AF0  0E0A               	movlw	10
 30893  013AF2  0101               	movlb	1	; () banked
 30894  013AF4  0377               	mulwf	Parse_Time@temp& (0+255),b
 30895  013AF6  50F3               	movf	prodl,w,c
 30896  013AF8  6F77               	movwf	Parse_Time@temp& (0+255),b
 30897                           
 30898                           ; BSR set to: 1
 30899                           ;RTC.c: 402: temp += *This - 48;
 30900  013AFA  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30901  013AFE  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30902  013B02  50DF               	movf	indf2,w,c
 30903  013B04  0FD0               	addlw	208
 30904  013B06  0101               	movlb	1	; () banked
 30905  013B08  2777               	addwf	Parse_Time@temp& (0+255),f,b
 30906                           
 30907                           ; BSR set to: 1
 30908                           ;RTC.c: 403: This++;
 30909  013B0A  0101               	movlb	1	; () banked
 30910  013B0C  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30911  013B0E  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30912                           
 30913                           ;RTC.c: 404: }
 30914  013B10  D00C               	goto	l1263
 30915  013B12                     l14403:
 30916                           
 30917                           ; BSR set to: 1
 30918                           ;RTC.c: 405: else if(*This == ':')
 30919  013B12  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30920  013B16  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30921  013B1A  0E3A               	movlw	58
 30922  013B1C  18DE               	xorwf	postinc2,w,c
 30923  013B1E  B4D8               	btfsc	status,2,c
 30924  013B20  D004               	goto	l1263
 30925  013B22  D001               	goto	l14407
 30926                           
 30927                           ; BSR set to: 1
 30928                           ;RTC.c: 406: {
 30929                           ;RTC.c: 408: }
 30930  013B24  D002               	goto	l1263
 30931  013B26                     l14407:
 30932                           
 30933                           ; BSR set to: 1
 30934                           ;RTC.c: 409: else
 30935                           ;RTC.c: 410: {
 30936                           ;RTC.c: 411: return 0;
 30937  013B26  0E00               	movlw	0
 30938                           
 30939                           ; BSR set to: 1
 30940  013B28  0012               	return	
 30941  013B2A                     l1263:
 30942                           
 30943                           ; BSR set to: 1
 30944                           ;RTC.c: 412: }
 30945                           ;RTC.c: 413: TempTime.Hours = temp;
 30946  013B2A  C177  F17A         	movff	Parse_Time@temp,Parse_Time@TempTime+2
 30947                           
 30948                           ; BSR set to: 1
 30949                           ;RTC.c: 415: if(*This == ':')
 30950  013B2E  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30951  013B32  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30952  013B36  0E3A               	movlw	58
 30953  013B38  18DE               	xorwf	postinc2,w,c
 30954  013B3A  A4D8               	btfss	status,2,c
 30955  013B3C  D004               	goto	l14415
 30956                           
 30957                           ; BSR set to: 1
 30958                           ;RTC.c: 416: {
 30959                           ;RTC.c: 417: This++;
 30960  013B3E  0101               	movlb	1	; () banked
 30961  013B40  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 30962  013B42  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 30963                           
 30964                           ;RTC.c: 418: }
 30965  013B44  D002               	goto	l14419
 30966  013B46                     l14415:
 30967                           
 30968                           ; BSR set to: 1
 30969                           ;RTC.c: 419: else
 30970                           ;RTC.c: 420: {
 30971                           ;RTC.c: 421: return 0;
 30972  013B46  0E00               	movlw	0
 30973                           
 30974                           ; BSR set to: 1
 30975  013B48  0012               	return	
 30976  013B4A                     l14419:
 30977                           
 30978                           ; BSR set to: 1
 30979                           ;RTC.c: 422: }
 30980                           ;RTC.c: 425: if (*This >= 48 && *This <= 57)
 30981  013B4A  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30982  013B4E  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30983  013B52  0E2F               	movlw	47
 30984  013B54  64DF               	cpfsgt	indf2,c
 30985  013B56  D013               	goto	l14427
 30986                           
 30987                           ; BSR set to: 1
 30988  013B58  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30989  013B5C  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30990  013B60  0E3A               	movlw	58
 30991  013B62  60DF               	cpfslt	indf2,c
 30992  013B64  D00C               	goto	l14427
 30993                           
 30994                           ; BSR set to: 1
 30995                           ;RTC.c: 426: {
 30996                           ;RTC.c: 427: temp = *This - 48;
 30997  013B66  C174  FFD9         	movff	Parse_Time@This,fsr2l
 30998  013B6A  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 30999  013B6E  50DF               	movf	indf2,w,c
 31000  013B70  0FD0               	addlw	208
 31001  013B72  0101               	movlb	1	; () banked
 31002  013B74  6F77               	movwf	Parse_Time@temp& (0+255),b
 31003                           
 31004                           ; BSR set to: 1
 31005                           ;RTC.c: 428: This++;
 31006  013B76  0101               	movlb	1	; () banked
 31007  013B78  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 31008  013B7A  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 31009                           
 31010                           ;RTC.c: 429: }
 31011  013B7C  D002               	goto	l14431
 31012  013B7E                     l14427:
 31013                           
 31014                           ; BSR set to: 1
 31015                           ;RTC.c: 430: else
 31016                           ;RTC.c: 431: {
 31017                           ;RTC.c: 432: return 0;
 31018  013B7E  0E00               	movlw	0
 31019                           
 31020                           ; BSR set to: 1
 31021  013B80  0012               	return	
 31022  013B82                     l14431:
 31023                           
 31024                           ; BSR set to: 1
 31025                           ;RTC.c: 433: }
 31026                           ;RTC.c: 435: if(*This >= 48 && *This <= 57)
 31027  013B82  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31028  013B86  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31029  013B8A  0E2F               	movlw	47
 31030  013B8C  64DF               	cpfsgt	indf2,c
 31031  013B8E  D018               	goto	l14441
 31032                           
 31033                           ; BSR set to: 1
 31034  013B90  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31035  013B94  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31036  013B98  0E3A               	movlw	58
 31037  013B9A  60DF               	cpfslt	indf2,c
 31038  013B9C  D011               	goto	l14441
 31039                           
 31040                           ; BSR set to: 1
 31041                           ;RTC.c: 436: {
 31042                           ;RTC.c: 437: temp *= 10;
 31043  013B9E  0E0A               	movlw	10
 31044  013BA0  0101               	movlb	1	; () banked
 31045  013BA2  0377               	mulwf	Parse_Time@temp& (0+255),b
 31046  013BA4  50F3               	movf	prodl,w,c
 31047  013BA6  6F77               	movwf	Parse_Time@temp& (0+255),b
 31048                           
 31049                           ; BSR set to: 1
 31050                           ;RTC.c: 438: temp += *This - 48;
 31051  013BA8  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31052  013BAC  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31053  013BB0  50DF               	movf	indf2,w,c
 31054  013BB2  0FD0               	addlw	208
 31055  013BB4  0101               	movlb	1	; () banked
 31056  013BB6  2777               	addwf	Parse_Time@temp& (0+255),f,b
 31057                           
 31058                           ; BSR set to: 1
 31059                           ;RTC.c: 439: This++;
 31060  013BB8  0101               	movlb	1	; () banked
 31061  013BBA  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 31062  013BBC  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 31063                           
 31064                           ;RTC.c: 440: }
 31065  013BBE  D00C               	goto	l1271
 31066  013BC0                     l14441:
 31067                           
 31068                           ; BSR set to: 1
 31069                           ;RTC.c: 441: else if(*This == ':')
 31070  013BC0  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31071  013BC4  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31072  013BC8  0E3A               	movlw	58
 31073  013BCA  18DE               	xorwf	postinc2,w,c
 31074  013BCC  B4D8               	btfsc	status,2,c
 31075  013BCE  D004               	goto	l1271
 31076  013BD0  D001               	goto	l14445
 31077                           
 31078                           ; BSR set to: 1
 31079                           ;RTC.c: 442: {
 31080                           ;RTC.c: 444: }
 31081  013BD2  D002               	goto	l1271
 31082  013BD4                     l14445:
 31083                           
 31084                           ; BSR set to: 1
 31085                           ;RTC.c: 445: else
 31086                           ;RTC.c: 446: {
 31087                           ;RTC.c: 447: return 0;
 31088  013BD4  0E00               	movlw	0
 31089                           
 31090                           ; BSR set to: 1
 31091  013BD6  0012               	return	
 31092  013BD8                     l1271:
 31093                           
 31094                           ; BSR set to: 1
 31095                           ;RTC.c: 448: }
 31096                           ;RTC.c: 449: TempTime.Minutes = temp;
 31097  013BD8  C177  F179         	movff	Parse_Time@temp,Parse_Time@TempTime+1
 31098                           
 31099                           ; BSR set to: 1
 31100                           ;RTC.c: 451: if(*This == ':')
 31101  013BDC  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31102  013BE0  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31103  013BE4  0E3A               	movlw	58
 31104  013BE6  18DE               	xorwf	postinc2,w,c
 31105  013BE8  A4D8               	btfss	status,2,c
 31106  013BEA  D004               	goto	l14453
 31107                           
 31108                           ; BSR set to: 1
 31109                           ;RTC.c: 452: {
 31110                           ;RTC.c: 453: This++;
 31111  013BEC  0101               	movlb	1	; () banked
 31112  013BEE  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 31113  013BF0  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 31114                           
 31115                           ;RTC.c: 454: }
 31116  013BF2  D002               	goto	l14457
 31117  013BF4                     l14453:
 31118                           
 31119                           ; BSR set to: 1
 31120                           ;RTC.c: 455: else
 31121                           ;RTC.c: 456: {
 31122                           ;RTC.c: 457: return 0;
 31123  013BF4  0E00               	movlw	0
 31124                           
 31125                           ; BSR set to: 1
 31126  013BF6  0012               	return	
 31127  013BF8                     l14457:
 31128                           
 31129                           ; BSR set to: 1
 31130                           ;RTC.c: 458: }
 31131                           ;RTC.c: 461: if (*This >= 48 && *This <= 57)
 31132  013BF8  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31133  013BFC  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31134  013C00  0E2F               	movlw	47
 31135  013C02  64DF               	cpfsgt	indf2,c
 31136  013C04  D013               	goto	l14465
 31137                           
 31138                           ; BSR set to: 1
 31139  013C06  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31140  013C0A  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31141  013C0E  0E3A               	movlw	58
 31142  013C10  60DF               	cpfslt	indf2,c
 31143  013C12  D00C               	goto	l14465
 31144                           
 31145                           ; BSR set to: 1
 31146                           ;RTC.c: 462: {
 31147                           ;RTC.c: 463: temp = *This - 48;
 31148  013C14  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31149  013C18  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31150  013C1C  50DF               	movf	indf2,w,c
 31151  013C1E  0FD0               	addlw	208
 31152  013C20  0101               	movlb	1	; () banked
 31153  013C22  6F77               	movwf	Parse_Time@temp& (0+255),b
 31154                           
 31155                           ; BSR set to: 1
 31156                           ;RTC.c: 464: This++;
 31157  013C24  0101               	movlb	1	; () banked
 31158  013C26  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 31159  013C28  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 31160                           
 31161                           ;RTC.c: 465: }
 31162  013C2A  D002               	goto	l14469
 31163  013C2C                     l14465:
 31164                           
 31165                           ; BSR set to: 1
 31166                           ;RTC.c: 466: else
 31167                           ;RTC.c: 467: {
 31168                           ;RTC.c: 468: return 0;
 31169  013C2C  0E00               	movlw	0
 31170                           
 31171                           ; BSR set to: 1
 31172  013C2E  0012               	return	
 31173  013C30                     l14469:
 31174                           
 31175                           ; BSR set to: 1
 31176                           ;RTC.c: 469: }
 31177                           ;RTC.c: 470: if (*This >= 48 && *This <= 57)
 31178  013C30  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31179  013C34  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31180  013C38  0E2F               	movlw	47
 31181  013C3A  64DF               	cpfsgt	indf2,c
 31182  013C3C  D018               	goto	l14479
 31183                           
 31184                           ; BSR set to: 1
 31185  013C3E  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31186  013C42  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31187  013C46  0E3A               	movlw	58
 31188  013C48  60DF               	cpfslt	indf2,c
 31189  013C4A  D011               	goto	l14479
 31190                           
 31191                           ; BSR set to: 1
 31192                           ;RTC.c: 471: {
 31193                           ;RTC.c: 472: temp *= 10;
 31194  013C4C  0E0A               	movlw	10
 31195  013C4E  0101               	movlb	1	; () banked
 31196  013C50  0377               	mulwf	Parse_Time@temp& (0+255),b
 31197  013C52  50F3               	movf	prodl,w,c
 31198  013C54  6F77               	movwf	Parse_Time@temp& (0+255),b
 31199                           
 31200                           ; BSR set to: 1
 31201                           ;RTC.c: 473: temp += *This - 48;
 31202  013C56  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31203  013C5A  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31204  013C5E  50DF               	movf	indf2,w,c
 31205  013C60  0FD0               	addlw	208
 31206  013C62  0101               	movlb	1	; () banked
 31207  013C64  2777               	addwf	Parse_Time@temp& (0+255),f,b
 31208                           
 31209                           ; BSR set to: 1
 31210                           ;RTC.c: 474: This++;
 31211  013C66  0101               	movlb	1	; () banked
 31212  013C68  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 31213  013C6A  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 31214                           
 31215                           ;RTC.c: 475: }
 31216  013C6C  D002               	goto	l1279
 31217  013C6E                     l14479:
 31218                           
 31219                           ; BSR set to: 1
 31220                           ;RTC.c: 476: else
 31221                           ;RTC.c: 477: {
 31222                           ;RTC.c: 478: return 0;
 31223  013C6E  0E00               	movlw	0
 31224                           
 31225                           ; BSR set to: 1
 31226  013C70  0012               	return	
 31227  013C72                     l1279:
 31228                           
 31229                           ; BSR set to: 1
 31230                           ;RTC.c: 479: }
 31231                           ;RTC.c: 480: TempTime.Seconds = temp;
 31232  013C72  C177  F178         	movff	Parse_Time@temp,Parse_Time@TempTime
 31233                           
 31234                           ; BSR set to: 1
 31235                           ;RTC.c: 482: if(*This == ' ')
 31236  013C76  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31237  013C7A  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31238  013C7E  0E20               	movlw	32
 31239  013C80  18DE               	xorwf	postinc2,w,c
 31240  013C82  A4D8               	btfss	status,2,c
 31241  013C84  D004               	goto	l14487
 31242                           
 31243                           ; BSR set to: 1
 31244                           ;RTC.c: 483: {
 31245                           ;RTC.c: 484: This++;
 31246  013C86  0101               	movlb	1	; () banked
 31247  013C88  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 31248  013C8A  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 31249  013C8C  D000               	goto	l14487
 31250  013C8E                     l14487:
 31251                           
 31252                           ; BSR set to: 1
 31253                           ;RTC.c: 485: }
 31254                           ;RTC.c: 486: if(*This == 'a')
 31255  013C8E  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31256  013C92  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31257  013C96  0E61               	movlw	97
 31258  013C98  18DE               	xorwf	postinc2,w,c
 31259  013C9A  A4D8               	btfss	status,2,c
 31260  013C9C  D010               	goto	l14499
 31261                           
 31262                           ; BSR set to: 1
 31263                           ;RTC.c: 487: {
 31264                           ;RTC.c: 488: This++;
 31265  013C9E  0101               	movlb	1	; () banked
 31266  013CA0  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 31267  013CA2  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 31268                           
 31269                           ; BSR set to: 1
 31270                           ;RTC.c: 489: if(*This == 'm')
 31271  013CA4  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31272  013CA8  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31273  013CAC  0E6D               	movlw	109
 31274  013CAE  18DE               	xorwf	postinc2,w,c
 31275  013CB0  A4D8               	btfss	status,2,c
 31276  013CB2  D002               	goto	l14495
 31277                           
 31278                           ; BSR set to: 1
 31279                           ;RTC.c: 490: {
 31280                           ;RTC.c: 491: TempTime.HoursAM_PM = 0;
 31281  013CB4  0E00               	movlw	0
 31282  013CB6  D017               	goto	L25
 31283  013CB8                     l14495:
 31284                           
 31285                           ; BSR set to: 1
 31286                           ;RTC.c: 493: else
 31287                           ;RTC.c: 494: {
 31288                           ;RTC.c: 495: return 0;
 31289  013CB8  0E00               	movlw	0
 31290                           
 31291                           ; BSR set to: 1
 31292  013CBA  0012               	return	
 31293                           
 31294                           ; BSR set to: 1
 31295                           ;RTC.c: 496: }
 31296                           ;RTC.c: 497: }
 31297  013CBC  D01D               	goto	l14515
 31298  013CBE                     l14499:
 31299                           
 31300                           ; BSR set to: 1
 31301                           ;RTC.c: 498: else if(*This == 'p')
 31302  013CBE  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31303  013CC2  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31304  013CC6  0E70               	movlw	112
 31305  013CC8  18DE               	xorwf	postinc2,w,c
 31306  013CCA  A4D8               	btfss	status,2,c
 31307  013CCC  D7F5               	goto	l14495
 31308                           
 31309                           ; BSR set to: 1
 31310                           ;RTC.c: 499: {
 31311                           ;RTC.c: 500: This++;
 31312  013CCE  0101               	movlb	1	; () banked
 31313  013CD0  4B74               	infsnz	Parse_Time@This& (0+255),f,b
 31314  013CD2  2B75               	incf	(Parse_Time@This+1)& (0+255),f,b
 31315                           
 31316                           ; BSR set to: 1
 31317                           ;RTC.c: 501: if(*This == 'm')
 31318  013CD4  C174  FFD9         	movff	Parse_Time@This,fsr2l
 31319  013CD8  C175  FFDA         	movff	Parse_Time@This+1,fsr2h
 31320  013CDC  0E6D               	movlw	109
 31321  013CDE  18DE               	xorwf	postinc2,w,c
 31322  013CE0  A4D8               	btfss	status,2,c
 31323  013CE2  D7EA               	goto	l14495
 31324                           
 31325                           ; BSR set to: 1
 31326                           ;RTC.c: 502: {
 31327                           ;RTC.c: 503: TempTime.HoursAM_PM = 1;
 31328  013CE4  0E01               	movlw	1
 31329  013CE6                     L25:
 31330  013CE6  0101               	movlb	1	; () banked
 31331  013CE8  6F7C               	movwf	(Parse_Time@TempTime+4)& (0+255),b
 31332                           
 31333                           ;RTC.c: 504: }
 31334  013CEA  D006               	goto	l14515
 31335                           
 31336                           ; BSR set to: 1
 31337  013CEC  D7E5               	goto	l14495
 31338                           
 31339                           ; BSR set to: 1
 31340                           
 31341                           ; BSR set to: 1
 31342                           ;RTC.c: 505: else
 31343                           ;RTC.c: 506: {
 31344                           ;RTC.c: 507: return 0;
 31345  013CEE  0012               	return	
 31346                           
 31347                           ; BSR set to: 1
 31348                           ;RTC.c: 508: }
 31349                           ;RTC.c: 509: }
 31350  013CF0  D003               	goto	l14515
 31351                           
 31352                           ; BSR set to: 1
 31353  013CF2  D7E2               	goto	l14495
 31354                           
 31355                           ; BSR set to: 1
 31356                           
 31357                           ; BSR set to: 1
 31358                           ;RTC.c: 510: else
 31359                           ;RTC.c: 511: {
 31360                           ;RTC.c: 512: return 0;
 31361  013CF4  0012               	return	
 31362                           
 31363                           ; BSR set to: 1
 31364  013CF6  D000               	goto	l14515
 31365  013CF8                     l14515:
 31366                           
 31367                           ; BSR set to: 1
 31368                           ;RTC.c: 513: }
 31369                           ;RTC.c: 514: if(TempTime.Month > 12 || TempTime.Date > 31 || TempTime.Year > 99 || TempT
      +                          ime.Hours > 12 || TempTime.Minutes > 59 || TempTime.Seconds > 59)
 31370  013CF8  0E0D               	movlw	13
 31371  013CFA  0101               	movlb	1	; () banked
 31372  013CFC  617F               	cpfslt	(Parse_Time@TempTime+7)& (0+255),b
 31373  013CFE  D015               	goto	l14527
 31374                           
 31375                           ; BSR set to: 1
 31376  013D00  0E20               	movlw	32
 31377  013D02  0101               	movlb	1	; () banked
 31378  013D04  617E               	cpfslt	(Parse_Time@TempTime+6)& (0+255),b
 31379  013D06  D011               	goto	l14527
 31380                           
 31381                           ; BSR set to: 1
 31382  013D08  0E64               	movlw	100
 31383  013D0A  0101               	movlb	1	; () banked
 31384  013D0C  6180               	cpfslt	(Parse_Time@TempTime+8)& (0+255),b
 31385  013D0E  D00D               	goto	l14527
 31386                           
 31387                           ; BSR set to: 1
 31388  013D10  0E0D               	movlw	13
 31389  013D12  0101               	movlb	1	; () banked
 31390  013D14  617A               	cpfslt	(Parse_Time@TempTime+2)& (0+255),b
 31391  013D16  D009               	goto	l14527
 31392                           
 31393                           ; BSR set to: 1
 31394  013D18  0E3C               	movlw	60
 31395  013D1A  0101               	movlb	1	; () banked
 31396  013D1C  6179               	cpfslt	(Parse_Time@TempTime+1)& (0+255),b
 31397  013D1E  D005               	goto	l14527
 31398                           
 31399                           ; BSR set to: 1
 31400  013D20  0E3B               	movlw	59
 31401  013D22  0101               	movlb	1	; () banked
 31402  013D24  6578               	cpfsgt	Parse_Time@TempTime& (0+255),b
 31403  013D26  D003               	goto	l1289
 31404  013D28  D000               	goto	l14527
 31405  013D2A                     l14527:
 31406                           
 31407                           ; BSR set to: 1
 31408                           ;RTC.c: 515: {
 31409                           ;RTC.c: 516: return 0;
 31410  013D2A  0E00               	movlw	0
 31411                           
 31412                           ; BSR set to: 1
 31413                           ;RTC.c: 517: }
 31414                           
 31415                           ; BSR set to: 1
 31416  013D2C  0012               	return	
 31417  013D2E                     l1289:
 31418                           
 31419                           ; BSR set to: 1
 31420                           ;RTC.c: 518: else
 31421                           ;RTC.c: 519: {
 31422                           ;RTC.c: 520: NowTime.Month = TempTime.Month;
 31423  013D2E  C17F  F110         	movff	Parse_Time@TempTime+7,_NowTime+7
 31424                           
 31425                           ;RTC.c: 521: NowTime.Date = TempTime.Date;
 31426  013D32  C17E  F10F         	movff	Parse_Time@TempTime+6,_NowTime+6
 31427                           
 31428                           ;RTC.c: 522: NowTime.Year= TempTime.Year;
 31429  013D36  C180  F111         	movff	Parse_Time@TempTime+8,_NowTime+8
 31430                           
 31431                           ;RTC.c: 523: NowTime.Hours = TempTime.Hours;
 31432  013D3A  C17A  F10B         	movff	Parse_Time@TempTime+2,_NowTime+2
 31433                           
 31434                           ;RTC.c: 524: NowTime.Minutes = TempTime.Minutes;
 31435  013D3E  C179  F10A         	movff	Parse_Time@TempTime+1,_NowTime+1
 31436                           
 31437                           ;RTC.c: 525: NowTime.Seconds= TempTime.Seconds;
 31438  013D42  C178  F109         	movff	Parse_Time@TempTime,_NowTime
 31439                           
 31440                           ;RTC.c: 526: NowTime.HoursAM_PM = TempTime.HoursAM_PM;
 31441  013D46  C17C  F10D         	movff	Parse_Time@TempTime+4,_NowTime+4
 31442                           
 31443                           ; BSR set to: 1
 31444                           ;RTC.c: 527: return 1;
 31445  013D4A  0E01               	movlw	1
 31446                           
 31447                           ; BSR set to: 1
 31448  013D4C  0012               	return	
 31449                           
 31450                           ; BSR set to: 1
 31451                           
 31452                           ; BSR set to: 1
 31453  013D4E  0012               	return		;funcret
 31454  013D50                     __end_of_Parse_Time:
 31455                           	opt stack 0
 31456                           tblptru	equ	0xFF8
 31457                           tblptrh	equ	0xFF7
 31458                           tblptrl	equ	0xFF6
 31459                           tablat	equ	0xFF5
 31460                           prodh	equ	0xFF4
 31461                           prodl	equ	0xFF3
 31462                           intcon	equ	0xFF2
 31463                           intcon2	equ	0xFF1
 31464                           postinc0	equ	0xFEE
 31465                           plusw0	equ	0xFEB
 31466                           wreg	equ	0xFE8
 31467                           indf1	equ	0xFE7
 31468                           postdec1	equ	0xFE5
 31469                           fsr1h	equ	0xFE2
 31470                           fsr1l	equ	0xFE1
 31471                           indf2	equ	0xFDF
 31472                           postinc2	equ	0xFDE
 31473                           postdec2	equ	0xFDD
 31474                           plusw2	equ	0xFDB
 31475                           fsr2h	equ	0xFDA
 31476                           fsr2l	equ	0xFD9
 31477                           status	equ	0xFD8
 31478                           
 31479 ;; *************** function _LCDdisplayFeedback *****************
 31480 ;; Defined at:
 31481 ;;		line 255 in file "LCD.c"
 31482 ;; Parameters:    Size  Location     Type
 31483 ;;  Text            2   32[BANK1 ] PTR const unsigned char 
 31484 ;;		 -> STR_318(16), STR_316(16), STR_262(16), STR_260(16), 
 31485 ;;		 -> STR_257(15), STR_205(16), STR_203(16), STR_201(13), 
 31486 ;;		 -> STR_188(14), STR_186(16), STR_184(15), STR_173(16), 
 31487 ;;		 -> Command@buf(200), STR_169(14), STR_167(16), STR_165(15), 
 31488 ;;		 -> STR_147(13), STR_145(15), STR_141(14), STR_137(16), 
 31489 ;;		 -> STR_124(16), STR_116(16), STR_114(16), STR_111(15), 
 31490 ;;		 -> STR_108(15), STR_105(14), STR_102(16), STR_90(16), 
 31491 ;;		 -> STR_83(16), STR_81(15), STR_78(14), STR_75(16), 
 31492 ;;		 -> STR_59(12), STR_57(9), STR_54(8), STR_51(13), 
 31493 ;;		 -> STR_48(9), STR_45(8), STR_42(13), 
 31494 ;; Auto vars:     Size  Location     Type
 31495 ;;		None
 31496 ;; Return value:  Size  Location     Type
 31497 ;;		None               void
 31498 ;; Registers used:
 31499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31500 ;; Tracked objects:
 31501 ;;		On entry : 0/0
 31502 ;;		On exit  : 0/0
 31503 ;;		Unchanged: 0/0
 31504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31505 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31508 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31509 ;;Total ram usage:        2 bytes
 31510 ;; Hardware stack levels used:    1
 31511 ;; Hardware stack levels required when called:   11
 31512 ;; This function calls:
 31513 ;;		_ClearLCD
 31514 ;;		_LCDPrintString
 31515 ;;		_SetLCDcursor
 31516 ;; This function is called by:
 31517 ;;		_Command
 31518 ;; This function uses a non-reentrant model
 31519 ;;
 31520                           
 31521                           	psect	text86
 31522  000C7E                     __ptext86:
 31523                           	opt stack 0
 31524  000C7E                     _LCDdisplayFeedback:
 31525                           	opt stack 18
 31526                           
 31527                           ;LCD.c: 257: ClearLCD();
 31528                           
 31529                           ; BSR set to: 1
 31530                           ;incstack = 0
 31531  000C7E  ECEF  F007         	call	_ClearLCD	;wreg free
 31532                           
 31533                           ;LCD.c: 258: SetLCDcursor(1, 0);
 31534  000C82  0E00               	movlw	0
 31535  000C84  0101               	movlb	1	; () banked
 31536  000C86  6F82               	movwf	SetLCDcursor@Col& (0+255),b
 31537  000C88  0E01               	movlw	1
 31538  000C8A  EC8F  F005         	call	_SetLCDcursor
 31539                           
 31540                           ;LCD.c: 259: LCDPrintString(Text);
 31541  000C8E  C186  F182         	movff	LCDdisplayFeedback@Text,LCDPrintString@Text
 31542  000C92  C187  F183         	movff	LCDdisplayFeedback@Text+1,LCDPrintString@Text+1
 31543  000C96  EC35  F0BE         	call	_LCDPrintString	;wreg free
 31544                           
 31545                           ;LCD.c: 260: LCDwait = 1;
 31546  000C9A  0E01               	movlw	1
 31547  000C9C  0101               	movlb	1	; () banked
 31548  000C9E  6F12               	movwf	_LCDwait& (0+255),b
 31549                           
 31550                           ; BSR set to: 1
 31551                           ;LCD.c: 261: LCDclearCount =0;
 31552  000CA0  0E00               	movlw	0
 31553  000CA2  0101               	movlb	1	; () banked
 31554  000CA4  6FC7               	movwf	_LCDclearCount& (0+255),b
 31555  000CA6  0E00               	movlw	0
 31556  000CA8  6FC8               	movwf	(_LCDclearCount+1)& (0+255),b
 31557  000CAA  0E00               	movlw	0
 31558  000CAC  6FC9               	movwf	(_LCDclearCount+2)& (0+255),b
 31559  000CAE  0E00               	movlw	0
 31560  000CB0  6FCA               	movwf	(_LCDclearCount+3)& (0+255),b
 31561                           
 31562                           ; BSR set to: 1
 31563  000CB2  0012               	return		;funcret
 31564  000CB4                     __end_of_LCDdisplayFeedback:
 31565                           	opt stack 0
 31566                           tblptru	equ	0xFF8
 31567                           tblptrh	equ	0xFF7
 31568                           tblptrl	equ	0xFF6
 31569                           tablat	equ	0xFF5
 31570                           prodh	equ	0xFF4
 31571                           prodl	equ	0xFF3
 31572                           intcon	equ	0xFF2
 31573                           intcon2	equ	0xFF1
 31574                           postinc0	equ	0xFEE
 31575                           plusw0	equ	0xFEB
 31576                           wreg	equ	0xFE8
 31577                           indf1	equ	0xFE7
 31578                           postdec1	equ	0xFE5
 31579                           fsr1h	equ	0xFE2
 31580                           fsr1l	equ	0xFE1
 31581                           indf2	equ	0xFDF
 31582                           postinc2	equ	0xFDE
 31583                           postdec2	equ	0xFDD
 31584                           plusw2	equ	0xFDB
 31585                           fsr2h	equ	0xFDA
 31586                           fsr2l	equ	0xFD9
 31587                           status	equ	0xFD8
 31588                           
 31589 ;; *************** function _SetLCDcursor *****************
 31590 ;; Defined at:
 31591 ;;		line 195 in file "LCD.c"
 31592 ;; Parameters:    Size  Location     Type
 31593 ;;  Row             1    wreg     unsigned char 
 31594 ;;  Col             1   28[BANK1 ] unsigned char 
 31595 ;; Auto vars:     Size  Location     Type
 31596 ;;  Row             1   29[BANK1 ] unsigned char 
 31597 ;;  address         1   30[BANK1 ] unsigned char 
 31598 ;; Return value:  Size  Location     Type
 31599 ;;		None               void
 31600 ;; Registers used:
 31601 ;;		wreg, status,2, status,0, cstack
 31602 ;; Tracked objects:
 31603 ;;		On entry : 0/0
 31604 ;;		On exit  : 0/0
 31605 ;;		Unchanged: 0/0
 31606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31607 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31608 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31610 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 31611 ;;Total ram usage:        3 bytes
 31612 ;; Hardware stack levels used:    1
 31613 ;; Hardware stack levels required when called:   10
 31614 ;; This function calls:
 31615 ;;		_SendLCDbyte
 31616 ;; This function is called by:
 31617 ;;		_main
 31618 ;;		_Command
 31619 ;;		_LCDdisplayFeedback
 31620 ;;		_LCDScreenUpdate
 31621 ;; This function uses a non-reentrant model
 31622 ;;
 31623                           
 31624                           	psect	text87
 31625  000B1E                     __ptext87:
 31626                           	opt stack 0
 31627  000B1E                     _SetLCDcursor:
 31628                           	opt stack 20
 31629                           
 31630                           ; BSR set to: 1
 31631                           ;incstack = 0
 31632                           ;SetLCDcursor@Row stored from wreg
 31633  000B1E  0101               	movlb	1	; () banked
 31634  000B20  6F83               	movwf	SetLCDcursor@Row& (0+255),b
 31635                           
 31636                           ; BSR set to: 1
 31637                           ;LCD.c: 197: char address;
 31638                           ;LCD.c: 200: if (Row == 0)
 31639  000B22  0101               	movlb	1	; () banked
 31640  000B24  5183               	movf	SetLCDcursor@Row& (0+255),w,b
 31641  000B26  0101               	movlb	1	; () banked
 31642  000B28  A4D8               	btfss	status,2,c
 31643  000B2A  D002               	goto	l12691
 31644                           
 31645                           ; BSR set to: 1
 31646                           ;LCD.c: 201: {
 31647                           ;LCD.c: 202: address = 0;
 31648  000B2C  0E00               	movlw	0
 31649  000B2E  D001               	goto	L26
 31650  000B30                     l12691:
 31651                           
 31652                           ; BSR set to: 1
 31653                           ;LCD.c: 204: else
 31654                           ;LCD.c: 205: {
 31655                           ;LCD.c: 206: address = 0x40;
 31656  000B30  0E40               	movlw	64
 31657  000B32                     L26:
 31658  000B32  0101               	movlb	1	; () banked
 31659  000B34  6F84               	movwf	SetLCDcursor@address& (0+255),b
 31660  000B36  D000               	goto	l12693
 31661  000B38                     l12693:
 31662                           
 31663                           ; BSR set to: 1
 31664                           ;LCD.c: 207: }
 31665                           ;LCD.c: 209: address |= Col;
 31666  000B38  0101               	movlb	1	; () banked
 31667  000B3A  5182               	movf	SetLCDcursor@Col& (0+255),w,b
 31668  000B3C  0101               	movlb	1	; () banked
 31669  000B3E  1384               	iorwf	SetLCDcursor@address& (0+255),f,b
 31670                           
 31671                           ; BSR set to: 1
 31672                           ;LCD.c: 210: if(!LCDwait)
 31673  000B40  0101               	movlb	1	; () banked
 31674  000B42  5112               	movf	_LCDwait& (0+255),w,b
 31675  000B44  A4D8               	btfss	status,2,c
 31676  000B46  0012               	return	
 31677                           
 31678                           ; BSR set to: 1
 31679                           ;LCD.c: 211: {
 31680                           ;LCD.c: 212: SendLCDbyte(0x80 | address, 0);
 31681  000B48  0E00               	movlw	0
 31682  000B4A  0101               	movlb	1	; () banked
 31683  000B4C  6F7E               	movwf	SendLCDbyte@isCommand& (0+255),b
 31684  000B4E  0101               	movlb	1	; () banked
 31685  000B50  5184               	movf	SetLCDcursor@address& (0+255),w,b
 31686  000B52  0980               	iorlw	128
 31687  000B54  ECD0  F0B2         	call	_SendLCDbyte
 31688  000B58  0012               	return	
 31689  000B5A  0012               	return		;funcret
 31690  000B5C                     __end_of_SetLCDcursor:
 31691                           	opt stack 0
 31692                           tblptru	equ	0xFF8
 31693                           tblptrh	equ	0xFF7
 31694                           tblptrl	equ	0xFF6
 31695                           tablat	equ	0xFF5
 31696                           prodh	equ	0xFF4
 31697                           prodl	equ	0xFF3
 31698                           intcon	equ	0xFF2
 31699                           intcon2	equ	0xFF1
 31700                           postinc0	equ	0xFEE
 31701                           plusw0	equ	0xFEB
 31702                           wreg	equ	0xFE8
 31703                           indf1	equ	0xFE7
 31704                           postdec1	equ	0xFE5
 31705                           fsr1h	equ	0xFE2
 31706                           fsr1l	equ	0xFE1
 31707                           indf2	equ	0xFDF
 31708                           postinc2	equ	0xFDE
 31709                           postdec2	equ	0xFDD
 31710                           plusw2	equ	0xFDB
 31711                           fsr2h	equ	0xFDA
 31712                           fsr2l	equ	0xFD9
 31713                           status	equ	0xFD8
 31714                           
 31715 ;; *************** function _LCDPrintString *****************
 31716 ;; Defined at:
 31717 ;;		line 236 in file "LCD.c"
 31718 ;; Parameters:    Size  Location     Type
 31719 ;;  Text            2   28[BANK1 ] PTR const unsigned char 
 31720 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 31721 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 31722 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 31723 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 31724 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 31725 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 31726 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 31727 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 31728 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 31729 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 31730 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 31731 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 31732 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 31733 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 31734 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 31735 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 31736 ;;		 -> low_isr@LCD_TEMP(16), 
 31737 ;; Auto vars:     Size  Location     Type
 31738 ;;  c               2   30[BANK1 ] PTR unsigned char 
 31739 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 31740 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 31741 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 31742 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 31743 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 31744 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 31745 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 31746 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 31747 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 31748 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 31749 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 31750 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 31751 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 31752 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 31753 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 31754 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 31755 ;;		 -> low_isr@LCD_TEMP(16), 
 31756 ;; Return value:  Size  Location     Type
 31757 ;;		None               void
 31758 ;; Registers used:
 31759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31760 ;; Tracked objects:
 31761 ;;		On entry : 0/0
 31762 ;;		On exit  : 0/0
 31763 ;;		Unchanged: 0/0
 31764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31765 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31766 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31768 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31769 ;;Total ram usage:        4 bytes
 31770 ;; Hardware stack levels used:    1
 31771 ;; Hardware stack levels required when called:   10
 31772 ;; This function calls:
 31773 ;;		_SendLCDbyte
 31774 ;; This function is called by:
 31775 ;;		_main
 31776 ;;		_Command
 31777 ;;		_LCDdisplayFeedback
 31778 ;;		_LCDScreenUpdate
 31779 ;; This function uses a non-reentrant model
 31780 ;;
 31781                           
 31782                           	psect	text88
 31783  017C6A                     __ptext88:
 31784                           	opt stack 0
 31785  017C6A                     _LCDPrintString:
 31786                           	opt stack 19
 31787                           
 31788                           ;LCD.c: 238: unsigned char *c;
 31789                           ;LCD.c: 240: c = (unsigned char*)Text;
 31790                           
 31791                           ;incstack = 0
 31792  017C6A  C182  F184         	movff	LCDPrintString@Text,LCDPrintString@c
 31793  017C6E  C183  F185         	movff	LCDPrintString@Text+1,LCDPrintString@c+1
 31794                           
 31795                           ;LCD.c: 242: while ((c != 0) && (*c != 0))
 31796  017C72  D01A               	goto	l12705
 31797  017C74                     l12701:
 31798                           
 31799                           ;LCD.c: 243: {
 31800                           ;LCD.c: 244: SendLCDbyte(*c, 1);
 31801  017C74  0E01               	movlw	1
 31802  017C76  0101               	movlb	1	; () banked
 31803  017C78  6F7E               	movwf	SendLCDbyte@isCommand& (0+255),b
 31804  017C7A  C184  FFF6         	movff	LCDPrintString@c,tblptrl
 31805  017C7E  C185  FFF7         	movff	LCDPrintString@c+1,tblptrh
 31806  017C82  0E00               	movlw	low (__mediumconst shr (0+16))
 31807  017C84  6EF8               	movwf	tblptru,c
 31808  017C86  0E0C               	movlw	(high __ramtop+-1)
 31809  017C88  64F7               	cpfsgt	tblptrh,c
 31810  017C8A  D003               	bra	u15607
 31811  017C8C  0008               	tblrd		*
 31812  017C8E  50F5               	movf	tablat,w,c
 31813  017C90  D005               	bra	u15600
 31814  017C92                     u15607:
 31815  017C92  CFF6 FFE9          	movff	tblptrl,fsr0l
 31816  017C96  CFF7 FFEA          	movff	tblptrh,fsr0h
 31817  017C9A  50EF               	movf	indf0,w,c
 31818  017C9C                     u15600:
 31819  017C9C  ECD0  F0B2         	call	_SendLCDbyte
 31820                           
 31821                           ;LCD.c: 245: c++;
 31822  017CA0  0101               	movlb	1	; () banked
 31823  017CA2  4B84               	infsnz	LCDPrintString@c& (0+255),f,b
 31824  017CA4  2B85               	incf	(LCDPrintString@c+1)& (0+255),f,b
 31825  017CA6  D000               	goto	l12705
 31826  017CA8                     l12705:
 31827  017CA8  0101               	movlb	1	; () banked
 31828  017CAA  5184               	movf	LCDPrintString@c& (0+255),w,b
 31829  017CAC  0101               	movlb	1	; () banked
 31830  017CAE  1185               	iorwf	(LCDPrintString@c+1)& (0+255),w,b
 31831  017CB0  B4D8               	btfsc	status,2,c
 31832  017CB2  0012               	return	
 31833                           
 31834                           ; BSR set to: 1
 31835  017CB4  C184  FFF6         	movff	LCDPrintString@c,tblptrl
 31836  017CB8  C185  FFF7         	movff	LCDPrintString@c+1,tblptrh
 31837  017CBC  0E00               	movlw	low (__mediumconst shr (0+16))
 31838  017CBE  6EF8               	movwf	tblptru,c
 31839  017CC0  0E0C               	movlw	(high __ramtop+-1)
 31840  017CC2  64F7               	cpfsgt	tblptrh,c
 31841  017CC4  D003               	bra	u15627
 31842  017CC6  0008               	tblrd		*
 31843  017CC8  50F5               	movf	tablat,w,c
 31844  017CCA  D005               	bra	u15620
 31845  017CCC                     u15627:
 31846  017CCC  CFF6 FFE9          	movff	tblptrl,fsr0l
 31847  017CD0  CFF7 FFEA          	movff	tblptrh,fsr0h
 31848  017CD4  50EF               	movf	indf0,w,c
 31849  017CD6                     u15620:
 31850  017CD6  0900               	iorlw	0
 31851  017CD8  B4D8               	btfsc	status,2,c
 31852  017CDA  0012               	return	
 31853  017CDC  D7CB               	goto	l12701
 31854  017CDE  0012               	return	
 31855  017CE0  0012               	return		;funcret
 31856  017CE2                     __end_of_LCDPrintString:
 31857                           	opt stack 0
 31858                           tblptru	equ	0xFF8
 31859                           tblptrh	equ	0xFF7
 31860                           tblptrl	equ	0xFF6
 31861                           tablat	equ	0xFF5
 31862                           prodh	equ	0xFF4
 31863                           prodl	equ	0xFF3
 31864                           intcon	equ	0xFF2
 31865                           intcon2	equ	0xFF1
 31866                           indf0	equ	0xFEF
 31867                           postinc0	equ	0xFEE
 31868                           plusw0	equ	0xFEB
 31869                           fsr0h	equ	0xFEA
 31870                           fsr0l	equ	0xFE9
 31871                           wreg	equ	0xFE8
 31872                           indf1	equ	0xFE7
 31873                           postdec1	equ	0xFE5
 31874                           fsr1h	equ	0xFE2
 31875                           fsr1l	equ	0xFE1
 31876                           indf2	equ	0xFDF
 31877                           postinc2	equ	0xFDE
 31878                           postdec2	equ	0xFDD
 31879                           plusw2	equ	0xFDB
 31880                           fsr2h	equ	0xFDA
 31881                           fsr2l	equ	0xFD9
 31882                           status	equ	0xFD8
 31883                           
 31884 ;; *************** function _ClearLCD *****************
 31885 ;; Defined at:
 31886 ;;		line 222 in file "LCD.c"
 31887 ;; Parameters:    Size  Location     Type
 31888 ;;		None
 31889 ;; Auto vars:     Size  Location     Type
 31890 ;;		None
 31891 ;; Return value:  Size  Location     Type
 31892 ;;		None               void
 31893 ;; Registers used:
 31894 ;;		wreg, status,2, status,0, cstack
 31895 ;; Tracked objects:
 31896 ;;		On entry : 0/0
 31897 ;;		On exit  : 0/0
 31898 ;;		Unchanged: 0/0
 31899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31904 ;;Total ram usage:        0 bytes
 31905 ;; Hardware stack levels used:    1
 31906 ;; Hardware stack levels required when called:   10
 31907 ;; This function calls:
 31908 ;;		_SendLCDbyte
 31909 ;; This function is called by:
 31910 ;;		_main
 31911 ;;		_init_LCD
 31912 ;;		_LCDdisplayFeedback
 31913 ;;		_LCDScreenUpdate
 31914 ;; This function uses a non-reentrant model
 31915 ;;
 31916                           
 31917                           	psect	text89
 31918  000FDE                     __ptext89:
 31919                           	opt stack 0
 31920  000FDE                     _ClearLCD:
 31921                           	opt stack 19
 31922                           
 31923                           ;LCD.c: 227: SendLCDbyte(0x01, 0);
 31924                           
 31925                           ;incstack = 0
 31926  000FDE  0E00               	movlw	0
 31927  000FE0  0101               	movlb	1	; () banked
 31928  000FE2  6F7E               	movwf	SendLCDbyte@isCommand& (0+255),b
 31929  000FE4  0E01               	movlw	1
 31930  000FE6  ECD0  F0B2         	call	_SendLCDbyte
 31931                           
 31932                           ;LCD.c: 228: SendLCDbyte(0x02, 0);
 31933  000FEA  0E00               	movlw	0
 31934  000FEC  0101               	movlb	1	; () banked
 31935  000FEE  6F7E               	movwf	SendLCDbyte@isCommand& (0+255),b
 31936  000FF0  0E02               	movlw	2
 31937  000FF2  ECD0  F0B2         	call	_SendLCDbyte
 31938  000FF6  0012               	return		;funcret
 31939  000FF8                     __end_of_ClearLCD:
 31940                           	opt stack 0
 31941                           tblptru	equ	0xFF8
 31942                           tblptrh	equ	0xFF7
 31943                           tblptrl	equ	0xFF6
 31944                           tablat	equ	0xFF5
 31945                           prodh	equ	0xFF4
 31946                           prodl	equ	0xFF3
 31947                           intcon	equ	0xFF2
 31948                           intcon2	equ	0xFF1
 31949                           indf0	equ	0xFEF
 31950                           postinc0	equ	0xFEE
 31951                           plusw0	equ	0xFEB
 31952                           fsr0h	equ	0xFEA
 31953                           fsr0l	equ	0xFE9
 31954                           wreg	equ	0xFE8
 31955                           indf1	equ	0xFE7
 31956                           postdec1	equ	0xFE5
 31957                           fsr1h	equ	0xFE2
 31958                           fsr1l	equ	0xFE1
 31959                           indf2	equ	0xFDF
 31960                           postinc2	equ	0xFDE
 31961                           postdec2	equ	0xFDD
 31962                           plusw2	equ	0xFDB
 31963                           fsr2h	equ	0xFDA
 31964                           fsr2l	equ	0xFD9
 31965                           status	equ	0xFD8
 31966                           
 31967 ;; *************** function _SendLCDbyte *****************
 31968 ;; Defined at:
 31969 ;;		line 109 in file "LCD.c"
 31970 ;; Parameters:    Size  Location     Type
 31971 ;;  data            1    wreg     unsigned char 
 31972 ;;  isCommand       1   24[BANK1 ] unsigned char 
 31973 ;; Auto vars:     Size  Location     Type
 31974 ;;  data            1   25[BANK1 ] unsigned char 
 31975 ;;  LSB_nibble      1   27[BANK1 ] unsigned char 
 31976 ;;  MSB_nibble      1   26[BANK1 ] unsigned char 
 31977 ;; Return value:  Size  Location     Type
 31978 ;;		None               void
 31979 ;; Registers used:
 31980 ;;		wreg, status,2, status,0, cstack
 31981 ;; Tracked objects:
 31982 ;;		On entry : 0/0
 31983 ;;		On exit  : 0/0
 31984 ;;		Unchanged: 0/0
 31985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31986 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31987 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 31988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31989 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31990 ;;Total ram usage:        4 bytes
 31991 ;; Hardware stack levels used:    1
 31992 ;; Hardware stack levels required when called:    9
 31993 ;; This function calls:
 31994 ;;		_PulseEnablePin
 31995 ;;		_delayUS
 31996 ;; This function is called by:
 31997 ;;		_init_LCD
 31998 ;;		_SetLCDcursor
 31999 ;;		_ClearLCD
 32000 ;;		_LCDPrintString
 32001 ;;		_LCDPrintChar
 32002 ;; This function uses a non-reentrant model
 32003 ;;
 32004                           
 32005                           	psect	text90
 32006  0165A0                     __ptext90:
 32007                           	opt stack 0
 32008  0165A0                     _SendLCDbyte:
 32009                           	opt stack 20
 32010                           
 32011                           ;incstack = 0
 32012                           ;SendLCDbyte@data stored from wreg
 32013  0165A0  0101               	movlb	1	; () banked
 32014  0165A2  6F7F               	movwf	SendLCDbyte@data& (0+255),b
 32015                           
 32016                           ; BSR set to: 1
 32017                           ;LCD.c: 111: unsigned char MSB_nibble=0;
 32018  0165A4  0E00               	movlw	0
 32019  0165A6  0101               	movlb	1	; () banked
 32020  0165A8  6F80               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 32021                           
 32022                           ;LCD.c: 112: unsigned char LSB_nibble=0;
 32023  0165AA  0E00               	movlw	0
 32024  0165AC  0101               	movlb	1	; () banked
 32025  0165AE  6F81               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 32026                           
 32027                           ; BSR set to: 1
 32028                           ;LCD.c: 114: LATA &= ~(0b00001000+0b00010000+0b00100000);
 32029  0165B0  0EC7               	movlw	199
 32030  0165B2  1689               	andwf	3977,f,c	;volatile
 32031                           
 32032                           ; BSR set to: 1
 32033                           ;LCD.c: 115: LATE &= ~0b00000001;
 32034  0165B4  908D               	bcf	3981,0,c	;volatile
 32035                           
 32036                           ; BSR set to: 1
 32037                           ;LCD.c: 116: LATD &= ~(0b10000000 + 0b00100000);
 32038  0165B6  0E5F               	movlw	95
 32039  0165B8  168C               	andwf	3980,f,c	;volatile
 32040                           
 32041                           ; BSR set to: 1
 32042                           ;LCD.c: 117: delayUS(10);
 32043  0165BA  0E0A               	movlw	10
 32044  0165BC  0101               	movlb	1	; () banked
 32045  0165BE  6F74               	movwf	delayUS@US& (0+255),b
 32046  0165C0  0E00               	movlw	0
 32047  0165C2  6F75               	movwf	(delayUS@US+1)& (0+255),b
 32048  0165C4  0E00               	movlw	0
 32049  0165C6  6F76               	movwf	(delayUS@US+2)& (0+255),b
 32050  0165C8  0E00               	movlw	0
 32051  0165CA  6F77               	movwf	(delayUS@US+3)& (0+255),b
 32052  0165CC  ECC6  F0BF         	call	_delayUS	;wreg free
 32053                           
 32054                           ;LCD.c: 118: MSB_nibble = (data & 0xF0)>>4;
 32055  0165D0  0101               	movlb	1	; () banked
 32056  0165D2  397F               	swapf	SendLCDbyte@data& (0+255),w,b
 32057  0165D4  0B0F               	andlw	15
 32058  0165D6  0B0F               	andlw	15
 32059  0165D8  0101               	movlb	1	; () banked
 32060  0165DA  6F80               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 32061                           
 32062                           ; BSR set to: 1
 32063                           ;LCD.c: 119: LSB_nibble = (data & 0x0F);
 32064  0165DC  0101               	movlb	1	; () banked
 32065  0165DE  517F               	movf	SendLCDbyte@data& (0+255),w,b
 32066  0165E0  0B0F               	andlw	15
 32067  0165E2  0101               	movlb	1	; () banked
 32068  0165E4  6F81               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 32069                           
 32070                           ; BSR set to: 1
 32071                           ;LCD.c: 120: if(!LCDwait)
 32072  0165E6  0101               	movlb	1	; () banked
 32073  0165E8  5112               	movf	_LCDwait& (0+255),w,b
 32074  0165EA  A4D8               	btfss	status,2,c
 32075  0165EC  D044               	goto	l12425
 32076                           
 32077                           ; BSR set to: 1
 32078                           ;LCD.c: 121: {
 32079                           ;LCD.c: 122: if(isCommand)
 32080  0165EE  0101               	movlb	1	; () banked
 32081  0165F0  517E               	movf	SendLCDbyte@isCommand& (0+255),w,b
 32082  0165F2  0101               	movlb	1	; () banked
 32083  0165F4  B4D8               	btfsc	status,2,c
 32084  0165F6  D002               	goto	l12381
 32085                           
 32086                           ; BSR set to: 1
 32087                           ;LCD.c: 123: {
 32088                           ;LCD.c: 124: LATD |= (0b00100000);
 32089  0165F8  8A8C               	bsf	3980,5,c	;volatile
 32090                           
 32091                           ;LCD.c: 125: }
 32092  0165FA  D002               	goto	l12383
 32093  0165FC                     l12381:
 32094                           
 32095                           ; BSR set to: 1
 32096                           ;LCD.c: 126: else
 32097                           ;LCD.c: 127: {
 32098                           ;LCD.c: 128: LATD &= ~(0b00100000);
 32099  0165FC  9A8C               	bcf	3980,5,c	;volatile
 32100  0165FE  D000               	goto	l12383
 32101  016600                     l12383:
 32102                           
 32103                           ; BSR set to: 1
 32104                           ;LCD.c: 129: }
 32105                           ;LCD.c: 130: if(MSB_nibble&0b1000)
 32106  016600  0101               	movlb	1	; () banked
 32107  016602  A780               	btfss	SendLCDbyte@MSB_nibble& (0+255),3,b
 32108  016604  D002               	goto	l12387
 32109                           
 32110                           ; BSR set to: 1
 32111                           ;LCD.c: 131: {
 32112                           ;LCD.c: 132: LATA |= 0b00001000;
 32113  016606  8689               	bsf	3977,3,c	;volatile
 32114  016608  D000               	goto	l12387
 32115  01660A                     l12387:
 32116                           
 32117                           ; BSR set to: 1
 32118                           ;LCD.c: 133: }
 32119                           ;LCD.c: 134: if(MSB_nibble&0b0100)
 32120  01660A  0101               	movlb	1	; () banked
 32121  01660C  A580               	btfss	SendLCDbyte@MSB_nibble& (0+255),2,b
 32122  01660E  D002               	goto	l12391
 32123                           
 32124                           ; BSR set to: 1
 32125                           ;LCD.c: 135: {
 32126                           ;LCD.c: 136: LATA |= 0b00010000;
 32127  016610  8889               	bsf	3977,4,c	;volatile
 32128  016612  D000               	goto	l12391
 32129  016614                     l12391:
 32130                           
 32131                           ; BSR set to: 1
 32132                           ;LCD.c: 137: }
 32133                           ;LCD.c: 138: if(MSB_nibble&0b0010)
 32134  016614  0101               	movlb	1	; () banked
 32135  016616  A380               	btfss	SendLCDbyte@MSB_nibble& (0+255),1,b
 32136  016618  D002               	goto	l12395
 32137                           
 32138                           ; BSR set to: 1
 32139                           ;LCD.c: 139: {
 32140                           ;LCD.c: 140: LATA |= 0b00100000;
 32141  01661A  8A89               	bsf	3977,5,c	;volatile
 32142  01661C  D000               	goto	l12395
 32143  01661E                     l12395:
 32144                           
 32145                           ; BSR set to: 1
 32146                           ;LCD.c: 141: }
 32147                           ;LCD.c: 142: if(MSB_nibble&0b0001)
 32148  01661E  0101               	movlb	1	; () banked
 32149  016620  A180               	btfss	SendLCDbyte@MSB_nibble& (0+255),0,b
 32150  016622  D002               	goto	l12399
 32151                           
 32152                           ; BSR set to: 1
 32153                           ;LCD.c: 143: {
 32154                           ;LCD.c: 144: LATE |= 0b00000001;
 32155  016624  808D               	bsf	3981,0,c	;volatile
 32156  016626  D000               	goto	l12399
 32157  016628                     l12399:
 32158                           
 32159                           ; BSR set to: 1
 32160                           ;LCD.c: 145: }
 32161                           ;LCD.c: 146: PulseEnablePin();
 32162  016628  EC8E  F006         	call	_PulseEnablePin	;wreg free
 32163                           
 32164                           ;LCD.c: 147: LATA &= ~(0b00001000+0b00010000+0b00100000);
 32165  01662C  0EC7               	movlw	199
 32166  01662E  1689               	andwf	3977,f,c	;volatile
 32167                           
 32168                           ;LCD.c: 148: LATE &= ~0b00000001;
 32169  016630  908D               	bcf	3981,0,c	;volatile
 32170                           
 32171                           ;LCD.c: 149: delayUS(10);
 32172  016632  0E0A               	movlw	10
 32173  016634  0101               	movlb	1	; () banked
 32174  016636  6F74               	movwf	delayUS@US& (0+255),b
 32175  016638  0E00               	movlw	0
 32176  01663A  6F75               	movwf	(delayUS@US+1)& (0+255),b
 32177  01663C  0E00               	movlw	0
 32178  01663E  6F76               	movwf	(delayUS@US+2)& (0+255),b
 32179  016640  0E00               	movlw	0
 32180  016642  6F77               	movwf	(delayUS@US+3)& (0+255),b
 32181  016644  ECC6  F0BF         	call	_delayUS	;wreg free
 32182                           
 32183                           ;LCD.c: 150: if(LSB_nibble&0b1000)
 32184  016648  0101               	movlb	1	; () banked
 32185  01664A  A781               	btfss	SendLCDbyte@LSB_nibble& (0+255),3,b
 32186  01664C  D002               	goto	l12411
 32187                           
 32188                           ; BSR set to: 1
 32189                           ;LCD.c: 151: {
 32190                           ;LCD.c: 152: LATA |= 0b00001000;
 32191  01664E  8689               	bsf	3977,3,c	;volatile
 32192  016650  D000               	goto	l12411
 32193  016652                     l12411:
 32194                           
 32195                           ; BSR set to: 1
 32196                           ;LCD.c: 153: }
 32197                           ;LCD.c: 154: if(LSB_nibble&0b0100)
 32198  016652  0101               	movlb	1	; () banked
 32199  016654  A581               	btfss	SendLCDbyte@LSB_nibble& (0+255),2,b
 32200  016656  D002               	goto	l12415
 32201                           
 32202                           ; BSR set to: 1
 32203                           ;LCD.c: 155: {
 32204                           ;LCD.c: 156: LATA |= 0b00010000;
 32205  016658  8889               	bsf	3977,4,c	;volatile
 32206  01665A  D000               	goto	l12415
 32207  01665C                     l12415:
 32208                           
 32209                           ; BSR set to: 1
 32210                           ;LCD.c: 157: }
 32211                           ;LCD.c: 158: if(LSB_nibble&0b0010)
 32212  01665C  0101               	movlb	1	; () banked
 32213  01665E  A381               	btfss	SendLCDbyte@LSB_nibble& (0+255),1,b
 32214  016660  D002               	goto	l12419
 32215                           
 32216                           ; BSR set to: 1
 32217                           ;LCD.c: 159: {
 32218                           ;LCD.c: 160: LATA |= 0b00100000;
 32219  016662  8A89               	bsf	3977,5,c	;volatile
 32220  016664  D000               	goto	l12419
 32221  016666                     l12419:
 32222                           
 32223                           ; BSR set to: 1
 32224                           ;LCD.c: 161: }
 32225                           ;LCD.c: 162: if(LSB_nibble&0b0001)
 32226  016666  0101               	movlb	1	; () banked
 32227  016668  A181               	btfss	SendLCDbyte@LSB_nibble& (0+255),0,b
 32228  01666A  D002               	goto	l12423
 32229                           
 32230                           ; BSR set to: 1
 32231                           ;LCD.c: 163: {
 32232                           ;LCD.c: 164: LATE |= 0b00000001;
 32233  01666C  808D               	bsf	3981,0,c	;volatile
 32234  01666E  D000               	goto	l12423
 32235  016670                     l12423:
 32236                           
 32237                           ; BSR set to: 1
 32238                           ;LCD.c: 165: }
 32239                           ;LCD.c: 166: PulseEnablePin();
 32240  016670  EC8E  F006         	call	_PulseEnablePin	;wreg free
 32241                           
 32242                           ;LCD.c: 167: }
 32243  016674  0012               	return	
 32244  016676                     l12425:
 32245                           
 32246                           ;LCD.c: 168: else
 32247                           ;LCD.c: 169: {
 32248                           ;LCD.c: 170: delayUS(20);
 32249  016676  0E14               	movlw	20
 32250  016678  0101               	movlb	1	; () banked
 32251  01667A  6F74               	movwf	delayUS@US& (0+255),b
 32252  01667C  0E00               	movlw	0
 32253  01667E  6F75               	movwf	(delayUS@US+1)& (0+255),b
 32254  016680  0E00               	movlw	0
 32255  016682  6F76               	movwf	(delayUS@US+2)& (0+255),b
 32256  016684  0E00               	movlw	0
 32257  016686  6F77               	movwf	(delayUS@US+3)& (0+255),b
 32258  016688  ECC6  F0BF         	call	_delayUS	;wreg free
 32259  01668C  0012               	return	
 32260  01668E  0012               	return		;funcret
 32261  016690                     __end_of_SendLCDbyte:
 32262                           	opt stack 0
 32263                           tblptru	equ	0xFF8
 32264                           tblptrh	equ	0xFF7
 32265                           tblptrl	equ	0xFF6
 32266                           tablat	equ	0xFF5
 32267                           prodh	equ	0xFF4
 32268                           prodl	equ	0xFF3
 32269                           intcon	equ	0xFF2
 32270                           intcon2	equ	0xFF1
 32271                           indf0	equ	0xFEF
 32272                           postinc0	equ	0xFEE
 32273                           plusw0	equ	0xFEB
 32274                           fsr0h	equ	0xFEA
 32275                           fsr0l	equ	0xFE9
 32276                           wreg	equ	0xFE8
 32277                           indf1	equ	0xFE7
 32278                           postdec1	equ	0xFE5
 32279                           fsr1h	equ	0xFE2
 32280                           fsr1l	equ	0xFE1
 32281                           indf2	equ	0xFDF
 32282                           postinc2	equ	0xFDE
 32283                           postdec2	equ	0xFDD
 32284                           plusw2	equ	0xFDB
 32285                           fsr2h	equ	0xFDA
 32286                           fsr2l	equ	0xFD9
 32287                           status	equ	0xFD8
 32288                           
 32289 ;; *************** function _PulseEnablePin *****************
 32290 ;; Defined at:
 32291 ;;		line 180 in file "LCD.c"
 32292 ;; Parameters:    Size  Location     Type
 32293 ;;		None
 32294 ;; Auto vars:     Size  Location     Type
 32295 ;;		None
 32296 ;; Return value:  Size  Location     Type
 32297 ;;		None               void
 32298 ;; Registers used:
 32299 ;;		wreg, status,2, status,0, cstack
 32300 ;; Tracked objects:
 32301 ;;		On entry : 0/0
 32302 ;;		On exit  : 0/0
 32303 ;;		Unchanged: 0/0
 32304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32309 ;;Total ram usage:        0 bytes
 32310 ;; Hardware stack levels used:    1
 32311 ;; Hardware stack levels required when called:    8
 32312 ;; This function calls:
 32313 ;;		_delayUS
 32314 ;; This function is called by:
 32315 ;;		_init_LCD
 32316 ;;		_SendLCDbyte
 32317 ;; This function uses a non-reentrant model
 32318 ;;
 32319                           
 32320                           	psect	text91
 32321  000D1C                     __ptext91:
 32322                           	opt stack 0
 32323  000D1C                     _PulseEnablePin:
 32324                           	opt stack 20
 32325                           
 32326                           ;LCD.c: 183: LATD |= (0b10000000);
 32327                           
 32328                           ;incstack = 0
 32329  000D1C  8E8C               	bsf	3980,7,c	;volatile
 32330                           
 32331                           ;LCD.c: 184: delayUS(2500);
 32332  000D1E  0EC4               	movlw	196
 32333  000D20  0101               	movlb	1	; () banked
 32334  000D22  6F74               	movwf	delayUS@US& (0+255),b
 32335  000D24  0E09               	movlw	9
 32336  000D26  6F75               	movwf	(delayUS@US+1)& (0+255),b
 32337  000D28  0E00               	movlw	0
 32338  000D2A  6F76               	movwf	(delayUS@US+2)& (0+255),b
 32339  000D2C  0E00               	movlw	0
 32340  000D2E  6F77               	movwf	(delayUS@US+3)& (0+255),b
 32341  000D30  ECC6  F0BF         	call	_delayUS	;wreg free
 32342                           
 32343                           ;LCD.c: 186: LATD &= ~(0b10000000);
 32344  000D34  9E8C               	bcf	3980,7,c	;volatile
 32345                           
 32346                           ;LCD.c: 187: delayUS(2500);
 32347  000D36  0EC4               	movlw	196
 32348  000D38  0101               	movlb	1	; () banked
 32349  000D3A  6F74               	movwf	delayUS@US& (0+255),b
 32350  000D3C  0E09               	movlw	9
 32351  000D3E  6F75               	movwf	(delayUS@US+1)& (0+255),b
 32352  000D40  0E00               	movlw	0
 32353  000D42  6F76               	movwf	(delayUS@US+2)& (0+255),b
 32354  000D44  0E00               	movlw	0
 32355  000D46  6F77               	movwf	(delayUS@US+3)& (0+255),b
 32356  000D48  ECC6  F0BF         	call	_delayUS	;wreg free
 32357  000D4C  0012               	return		;funcret
 32358  000D4E                     __end_of_PulseEnablePin:
 32359                           	opt stack 0
 32360                           tblptru	equ	0xFF8
 32361                           tblptrh	equ	0xFF7
 32362                           tblptrl	equ	0xFF6
 32363                           tablat	equ	0xFF5
 32364                           prodh	equ	0xFF4
 32365                           prodl	equ	0xFF3
 32366                           intcon	equ	0xFF2
 32367                           intcon2	equ	0xFF1
 32368                           indf0	equ	0xFEF
 32369                           postinc0	equ	0xFEE
 32370                           plusw0	equ	0xFEB
 32371                           fsr0h	equ	0xFEA
 32372                           fsr0l	equ	0xFE9
 32373                           wreg	equ	0xFE8
 32374                           indf1	equ	0xFE7
 32375                           postdec1	equ	0xFE5
 32376                           fsr1h	equ	0xFE2
 32377                           fsr1l	equ	0xFE1
 32378                           indf2	equ	0xFDF
 32379                           postinc2	equ	0xFDE
 32380                           postdec2	equ	0xFDD
 32381                           plusw2	equ	0xFDB
 32382                           fsr2h	equ	0xFDA
 32383                           fsr2l	equ	0xFD9
 32384                           status	equ	0xFD8
 32385                           
 32386 ;; *************** function _delayUS *****************
 32387 ;; Defined at:
 32388 ;;		line 57 in file "MISC.c"
 32389 ;; Parameters:    Size  Location     Type
 32390 ;;  US              4   14[BANK1 ] long 
 32391 ;; Auto vars:     Size  Location     Type
 32392 ;;  i               4   19[BANK1 ] long 
 32393 ;;  j               1   23[BANK1 ] unsigned char 
 32394 ;; Return value:  Size  Location     Type
 32395 ;;		None               void
 32396 ;; Registers used:
 32397 ;;		wreg, status,2, status,0
 32398 ;; Tracked objects:
 32399 ;;		On entry : 0/0
 32400 ;;		On exit  : 0/0
 32401 ;;		Unchanged: 0/0
 32402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32403 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32404 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 32405 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32406 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 32407 ;;Total ram usage:       10 bytes
 32408 ;; Hardware stack levels used:    1
 32409 ;; Hardware stack levels required when called:    7
 32410 ;; This function calls:
 32411 ;;		Nothing
 32412 ;; This function is called by:
 32413 ;;		_main
 32414 ;;		_InitApp
 32415 ;;		_UARTstringWAIT
 32416 ;;		_SetBaud
 32417 ;;		_Command
 32418 ;;		_Send_Config1
 32419 ;;		_Zero_Config1
 32420 ;;		_One_Config1
 32421 ;;		_f_Config1
 32422 ;;		_Send_Config2
 32423 ;;		_Zero_Config2
 32424 ;;		_One_Config2
 32425 ;;		_init_LCD
 32426 ;;		_SendLCDbyte
 32427 ;;		_PulseEnablePin
 32428 ;;		_ResetI2C
 32429 ;; This function uses a non-reentrant model
 32430 ;;
 32431                           
 32432                           	psect	text92
 32433  017F8C                     __ptext92:
 32434                           	opt stack 0
 32435  017F8C                     _delayUS:
 32436                           	opt stack 22
 32437                           
 32438                           ;MISC.c: 59: long i;
 32439                           ;MISC.c: 60: unsigned char j;
 32440                           ;MISC.c: 61: for(i=0;i<US;i+=31)
 32441                           
 32442                           ;incstack = 0
 32443  017F8C  0E00               	movlw	0
 32444  017F8E  0101               	movlb	1	; () banked
 32445  017F90  6F79               	movwf	delayUS@i& (0+255),b
 32446  017F92  0E00               	movlw	0
 32447  017F94  6F7A               	movwf	(delayUS@i+1)& (0+255),b
 32448  017F96  0E00               	movlw	0
 32449  017F98  6F7B               	movwf	(delayUS@i+2)& (0+255),b
 32450  017F9A  0E00               	movlw	0
 32451  017F9C  6F7C               	movwf	(delayUS@i+3)& (0+255),b
 32452  017F9E  D013               	goto	l284
 32453  017FA0                     l12147:
 32454                           
 32455                           ; BSR set to: 1
 32456                           ;MISC.c: 62: {
 32457                           ;MISC.c: 63: for(j=0;j<41;j++)
 32458  017FA0  0E00               	movlw	0
 32459  017FA2  0101               	movlb	1	; () banked
 32460  017FA4  6F7D               	movwf	delayUS@j& (0+255),b
 32461  017FA6                     l12149:
 32462                           
 32463                           ; BSR set to: 1
 32464  017FA6  0E28               	movlw	40
 32465  017FA8  0101               	movlb	1	; () banked
 32466  017FAA  657D               	cpfsgt	delayUS@j& (0+255),b
 32467  017FAC  D001               	goto	l286
 32468                           
 32469                           ; BSR set to: 1
 32470  017FAE  D004               	goto	l12157
 32471  017FB0                     l286:
 32472                           
 32473                           ; BSR set to: 1
 32474                           ;MISC.c: 64: {
 32475                           ;MISC.c: 65: __nop();
 32476  017FB0  F000               	nop	
 32477  017FB2  0101               	movlb	1	; () banked
 32478  017FB4  2B7D               	incf	delayUS@j& (0+255),f,b
 32479  017FB6  D7F7               	goto	l12149
 32480  017FB8                     l12157:
 32481                           
 32482                           ; BSR set to: 1
 32483  017FB8  0E1F               	movlw	31
 32484  017FBA  0101               	movlb	1	; () banked
 32485  017FBC  2779               	addwf	delayUS@i& (0+255),f,b
 32486  017FBE  0E00               	movlw	0
 32487  017FC0  237A               	addwfc	(delayUS@i+1)& (0+255),f,b
 32488  017FC2  237B               	addwfc	(delayUS@i+2)& (0+255),f,b
 32489  017FC4  237C               	addwfc	(delayUS@i+3)& (0+255),f,b
 32490  017FC6                     l284:
 32491                           
 32492                           ; BSR set to: 1
 32493  017FC6  0101               	movlb	1	; () banked
 32494  017FC8  5174               	movf	delayUS@US& (0+255),w,b
 32495  017FCA  0101               	movlb	1	; () banked
 32496  017FCC  5D79               	subwf	delayUS@i& (0+255),w,b
 32497  017FCE  0101               	movlb	1	; () banked
 32498  017FD0  5175               	movf	(delayUS@US+1)& (0+255),w,b
 32499  017FD2  0101               	movlb	1	; () banked
 32500  017FD4  597A               	subwfb	(delayUS@i+1)& (0+255),w,b
 32501  017FD6  0101               	movlb	1	; () banked
 32502  017FD8  5176               	movf	(delayUS@US+2)& (0+255),w,b
 32503  017FDA  0101               	movlb	1	; () banked
 32504  017FDC  597B               	subwfb	(delayUS@i+2)& (0+255),w,b
 32505  017FDE  0101               	movlb	1	; () banked
 32506  017FE0  517C               	movf	(delayUS@i+3)& (0+255),w,b
 32507  017FE2  0A80               	xorlw	128
 32508  017FE4  0101               	movlb	1	; () banked
 32509  017FE6  6F78               	movwf	??_delayUS& (0+255),b
 32510  017FE8  0101               	movlb	1	; () banked
 32511  017FEA  5177               	movf	(delayUS@US+3)& (0+255),w,b
 32512  017FEC  0A80               	xorlw	128
 32513  017FEE  0101               	movlb	1	; () banked
 32514  017FF0  5978               	subwfb	??_delayUS& (0+255),w,b
 32515  017FF2  A0D8               	btfss	status,0,c
 32516  017FF4  D7D5               	goto	l12147
 32517                           
 32518                           ; BSR set to: 1
 32519                           
 32520                           ; BSR set to: 1
 32521  017FF6  0012               	return		;funcret
 32522  017FF8                     __end_of_delayUS:
 32523                           	opt stack 0
 32524                           tblptru	equ	0xFF8
 32525                           tblptrh	equ	0xFF7
 32526                           tblptrl	equ	0xFF6
 32527                           tablat	equ	0xFF5
 32528                           prodh	equ	0xFF4
 32529                           prodl	equ	0xFF3
 32530                           intcon	equ	0xFF2
 32531                           intcon2	equ	0xFF1
 32532                           indf0	equ	0xFEF
 32533                           postinc0	equ	0xFEE
 32534                           plusw0	equ	0xFEB
 32535                           fsr0h	equ	0xFEA
 32536                           fsr0l	equ	0xFE9
 32537                           wreg	equ	0xFE8
 32538                           indf1	equ	0xFE7
 32539                           postdec1	equ	0xFE5
 32540                           fsr1h	equ	0xFE2
 32541                           fsr1l	equ	0xFE1
 32542                           indf2	equ	0xFDF
 32543                           postinc2	equ	0xFDE
 32544                           postdec2	equ	0xFDD
 32545                           plusw2	equ	0xFDB
 32546                           fsr2h	equ	0xFDA
 32547                           fsr2l	equ	0xFD9
 32548                           status	equ	0xFD8
 32549                           
 32550 ;; *************** function _LCD_Scroll *****************
 32551 ;; Defined at:
 32552 ;;		line 413 in file "LCD.c"
 32553 ;; Parameters:    Size  Location     Type
 32554 ;;  This            2   29[BANK1 ] PTR const unsigned char 
 32555 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 32556 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 32557 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 32558 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 32559 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 32560 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 32561 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 32562 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 32563 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 32564 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 32565 ;;		 -> STR_68(5), STR_67(9), STR_66(9), 
 32566 ;; Auto vars:     Size  Location     Type
 32567 ;;		None
 32568 ;; Return value:  Size  Location     Type
 32569 ;;		None               void
 32570 ;; Registers used:
 32571 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32572 ;; Tracked objects:
 32573 ;;		On entry : 0/0
 32574 ;;		On exit  : 0/0
 32575 ;;		Unchanged: 0/0
 32576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32577 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 32578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32580 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 32581 ;;Total ram usage:        2 bytes
 32582 ;; Hardware stack levels used:    1
 32583 ;; Hardware stack levels required when called:    9
 32584 ;; This function calls:
 32585 ;;		_BufferCopy
 32586 ;; This function is called by:
 32587 ;;		_Command
 32588 ;; This function uses a non-reentrant model
 32589 ;;
 32590                           
 32591                           	psect	text93
 32592  014E54                     __ptext93:
 32593                           	opt stack 0
 32594  014E54                     _LCD_Scroll:
 32595                           	opt stack 20
 32596                           
 32597                           ;LCD.c: 415: if(!LCDwait)
 32598                           
 32599                           ; BSR set to: 1
 32600                           ;incstack = 0
 32601  014E54  0101               	movlb	1	; () banked
 32602  014E56  5112               	movf	_LCDwait& (0+255),w,b
 32603  014E58  A4D8               	btfss	status,2,c
 32604  014E5A  0012               	return	
 32605                           
 32606                           ; BSR set to: 1
 32607                           ;LCD.c: 416: {
 32608                           ;LCD.c: 417: LCDclearCount = 15000;
 32609  014E5C  0E98               	movlw	152
 32610  014E5E  0101               	movlb	1	; () banked
 32611  014E60  6FC7               	movwf	_LCDclearCount& (0+255),b
 32612  014E62  0E3A               	movlw	58
 32613  014E64  6FC8               	movwf	(_LCDclearCount+1)& (0+255),b
 32614  014E66  0E00               	movlw	0
 32615  014E68  6FC9               	movwf	(_LCDclearCount+2)& (0+255),b
 32616  014E6A  0E00               	movlw	0
 32617  014E6C  6FCA               	movwf	(_LCDclearCount+3)& (0+255),b
 32618                           
 32619                           ; BSR set to: 1
 32620                           ;LCD.c: 418: ScrollFIFOCount++;
 32621  014E6E  0101               	movlb	1	; () banked
 32622  014E70  2B14               	incf	_ScrollFIFOCount& (0+255),f,b
 32623                           
 32624                           ; BSR set to: 1
 32625                           ;LCD.c: 419: if(ScrollFIFOCount == 1)
 32626  014E72  0101               	movlb	1	; () banked
 32627  014E74  0514               	decf	_ScrollFIFOCount& (0+255),w,b
 32628  014E76  A4D8               	btfss	status,2,c
 32629  014E78  D013               	goto	l14129
 32630                           
 32631                           ; BSR set to: 1
 32632                           ;LCD.c: 420: {
 32633                           ;LCD.c: 421: BufferCopy((unsigned char*) This,Scroll_1, 16, 0);
 32634  014E7A  C183  F17C         	movff	LCD_Scroll@This,BufferCopy@from
 32635  014E7E  C184  F17D         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 32636  014E82  0E16               	movlw	low _Scroll_1
 32637  014E84  0101               	movlb	1	; () banked
 32638  014E86  6F7E               	movwf	BufferCopy@to& (0+255),b
 32639  014E88  0E01               	movlw	high _Scroll_1
 32640  014E8A  0101               	movlb	1	; () banked
 32641  014E8C  6F7F               	movwf	(BufferCopy@to+1)& (0+255),b
 32642  014E8E  0E10               	movlw	16
 32643  014E90  0101               	movlb	1	; () banked
 32644  014E92  6F80               	movwf	BufferCopy@count& (0+255),b
 32645  014E94  0E00               	movlw	0
 32646  014E96  0101               	movlb	1	; () banked
 32647  014E98  6F81               	movwf	BufferCopy@shift& (0+255),b
 32648  014E9A  EC6A  F0B7         	call	_BufferCopy	;wreg free
 32649                           
 32650                           ;LCD.c: 422: }
 32651  014E9E  0012               	return	
 32652  014EA0                     l14129:
 32653                           
 32654                           ;LCD.c: 423: else if(ScrollFIFOCount == 2)
 32655  014EA0  0E02               	movlw	2
 32656  014EA2  0101               	movlb	1	; () banked
 32657  014EA4  1914               	xorwf	_ScrollFIFOCount& (0+255),w,b
 32658  014EA6  A4D8               	btfss	status,2,c
 32659  014EA8  D013               	goto	l14133
 32660                           
 32661                           ; BSR set to: 1
 32662                           ;LCD.c: 424: {
 32663                           ;LCD.c: 425: BufferCopy((unsigned char*) This,Scroll_2, 16, 0);
 32664  014EAA  C183  F17C         	movff	LCD_Scroll@This,BufferCopy@from
 32665  014EAE  C184  F17D         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 32666  014EB2  0E26               	movlw	low _Scroll_2
 32667  014EB4  0101               	movlb	1	; () banked
 32668  014EB6  6F7E               	movwf	BufferCopy@to& (0+255),b
 32669  014EB8  0E01               	movlw	high _Scroll_2
 32670  014EBA  0101               	movlb	1	; () banked
 32671  014EBC  6F7F               	movwf	(BufferCopy@to+1)& (0+255),b
 32672  014EBE  0E10               	movlw	16
 32673  014EC0  0101               	movlb	1	; () banked
 32674  014EC2  6F80               	movwf	BufferCopy@count& (0+255),b
 32675  014EC4  0E00               	movlw	0
 32676  014EC6  0101               	movlb	1	; () banked
 32677  014EC8  6F81               	movwf	BufferCopy@shift& (0+255),b
 32678  014ECA  EC6A  F0B7         	call	_BufferCopy	;wreg free
 32679                           
 32680                           ;LCD.c: 426: }
 32681  014ECE  0012               	return	
 32682  014ED0                     l14133:
 32683                           
 32684                           ;LCD.c: 427: else if(ScrollFIFOCount == 3)
 32685  014ED0  0E03               	movlw	3
 32686  014ED2  0101               	movlb	1	; () banked
 32687  014ED4  1914               	xorwf	_ScrollFIFOCount& (0+255),w,b
 32688  014ED6  A4D8               	btfss	status,2,c
 32689  014ED8  D013               	goto	l14137
 32690                           
 32691                           ; BSR set to: 1
 32692                           ;LCD.c: 428: {
 32693                           ;LCD.c: 429: BufferCopy((unsigned char*) This,Scroll_3, 16, 0);
 32694  014EDA  C183  F17C         	movff	LCD_Scroll@This,BufferCopy@from
 32695  014EDE  C184  F17D         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 32696  014EE2  0E36               	movlw	low _Scroll_3
 32697  014EE4  0101               	movlb	1	; () banked
 32698  014EE6  6F7E               	movwf	BufferCopy@to& (0+255),b
 32699  014EE8  0E01               	movlw	high _Scroll_3
 32700  014EEA  0101               	movlb	1	; () banked
 32701  014EEC  6F7F               	movwf	(BufferCopy@to+1)& (0+255),b
 32702  014EEE  0E10               	movlw	16
 32703  014EF0  0101               	movlb	1	; () banked
 32704  014EF2  6F80               	movwf	BufferCopy@count& (0+255),b
 32705  014EF4  0E00               	movlw	0
 32706  014EF6  0101               	movlb	1	; () banked
 32707  014EF8  6F81               	movwf	BufferCopy@shift& (0+255),b
 32708  014EFA  EC6A  F0B7         	call	_BufferCopy	;wreg free
 32709                           
 32710                           ;LCD.c: 430: }
 32711  014EFE  0012               	return	
 32712  014F00                     l14137:
 32713                           
 32714                           ;LCD.c: 431: else if(ScrollFIFOCount == 4)
 32715  014F00  0E04               	movlw	4
 32716  014F02  0101               	movlb	1	; () banked
 32717  014F04  1914               	xorwf	_ScrollFIFOCount& (0+255),w,b
 32718  014F06  A4D8               	btfss	status,2,c
 32719  014F08  D013               	goto	l14141
 32720                           
 32721                           ; BSR set to: 1
 32722                           ;LCD.c: 432: {
 32723                           ;LCD.c: 433: BufferCopy((unsigned char*) This,Scroll_4, 16, 0);
 32724  014F0A  C183  F17C         	movff	LCD_Scroll@This,BufferCopy@from
 32725  014F0E  C184  F17D         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 32726  014F12  0E46               	movlw	low _Scroll_4
 32727  014F14  0101               	movlb	1	; () banked
 32728  014F16  6F7E               	movwf	BufferCopy@to& (0+255),b
 32729  014F18  0E01               	movlw	high _Scroll_4
 32730  014F1A  0101               	movlb	1	; () banked
 32731  014F1C  6F7F               	movwf	(BufferCopy@to+1)& (0+255),b
 32732  014F1E  0E10               	movlw	16
 32733  014F20  0101               	movlb	1	; () banked
 32734  014F22  6F80               	movwf	BufferCopy@count& (0+255),b
 32735  014F24  0E00               	movlw	0
 32736  014F26  0101               	movlb	1	; () banked
 32737  014F28  6F81               	movwf	BufferCopy@shift& (0+255),b
 32738  014F2A  EC6A  F0B7         	call	_BufferCopy	;wreg free
 32739                           
 32740                           ;LCD.c: 434: }
 32741  014F2E  0012               	return	
 32742  014F30                     l14141:
 32743                           
 32744                           ;LCD.c: 435: else if(ScrollFIFOCount == 5)
 32745  014F30  0E05               	movlw	5
 32746  014F32  0101               	movlb	1	; () banked
 32747  014F34  1914               	xorwf	_ScrollFIFOCount& (0+255),w,b
 32748  014F36  A4D8               	btfss	status,2,c
 32749  014F38  D013               	goto	l14145
 32750                           
 32751                           ; BSR set to: 1
 32752                           ;LCD.c: 436: {
 32753                           ;LCD.c: 437: BufferCopy((unsigned char*) This,Scroll_5, 16, 0);
 32754  014F3A  C183  F17C         	movff	LCD_Scroll@This,BufferCopy@from
 32755  014F3E  C184  F17D         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 32756  014F42  0E56               	movlw	low _Scroll_5
 32757  014F44  0101               	movlb	1	; () banked
 32758  014F46  6F7E               	movwf	BufferCopy@to& (0+255),b
 32759  014F48  0E01               	movlw	high _Scroll_5
 32760  014F4A  0101               	movlb	1	; () banked
 32761  014F4C  6F7F               	movwf	(BufferCopy@to+1)& (0+255),b
 32762  014F4E  0E10               	movlw	16
 32763  014F50  0101               	movlb	1	; () banked
 32764  014F52  6F80               	movwf	BufferCopy@count& (0+255),b
 32765  014F54  0E00               	movlw	0
 32766  014F56  0101               	movlb	1	; () banked
 32767  014F58  6F81               	movwf	BufferCopy@shift& (0+255),b
 32768  014F5A  EC6A  F0B7         	call	_BufferCopy	;wreg free
 32769                           
 32770                           ;LCD.c: 438: }
 32771  014F5E  0012               	return	
 32772  014F60                     l14145:
 32773                           
 32774                           ;LCD.c: 439: else if(ScrollFIFOCount == 6)
 32775  014F60  0E06               	movlw	6
 32776  014F62  0101               	movlb	1	; () banked
 32777  014F64  1914               	xorwf	_ScrollFIFOCount& (0+255),w,b
 32778  014F66  A4D8               	btfss	status,2,c
 32779  014F68  D013               	goto	l14149
 32780                           
 32781                           ; BSR set to: 1
 32782                           ;LCD.c: 440: {
 32783                           ;LCD.c: 441: BufferCopy((unsigned char*) This,Scroll_6, 16, 0);
 32784  014F6A  C183  F17C         	movff	LCD_Scroll@This,BufferCopy@from
 32785  014F6E  C184  F17D         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 32786  014F72  0E50               	movlw	low _Scroll_6
 32787  014F74  0101               	movlb	1	; () banked
 32788  014F76  6F7E               	movwf	BufferCopy@to& (0+255),b
 32789  014F78  0E00               	movlw	high _Scroll_6
 32790  014F7A  0101               	movlb	1	; () banked
 32791  014F7C  6F7F               	movwf	(BufferCopy@to+1)& (0+255),b
 32792  014F7E  0E10               	movlw	16
 32793  014F80  0101               	movlb	1	; () banked
 32794  014F82  6F80               	movwf	BufferCopy@count& (0+255),b
 32795  014F84  0E00               	movlw	0
 32796  014F86  0101               	movlb	1	; () banked
 32797  014F88  6F81               	movwf	BufferCopy@shift& (0+255),b
 32798  014F8A  EC6A  F0B7         	call	_BufferCopy	;wreg free
 32799                           
 32800                           ;LCD.c: 442: }
 32801  014F8E  0012               	return	
 32802  014F90                     l14149:
 32803                           
 32804                           ;LCD.c: 443: else if(ScrollFIFOCount == 7)
 32805  014F90  0E07               	movlw	7
 32806  014F92  0101               	movlb	1	; () banked
 32807  014F94  1914               	xorwf	_ScrollFIFOCount& (0+255),w,b
 32808  014F96  A4D8               	btfss	status,2,c
 32809  014F98  D013               	goto	l14153
 32810                           
 32811                           ; BSR set to: 1
 32812                           ;LCD.c: 444: {
 32813                           ;LCD.c: 445: BufferCopy((unsigned char*) This,Scroll_7, 16, 0);
 32814  014F9A  C183  F17C         	movff	LCD_Scroll@This,BufferCopy@from
 32815  014F9E  C184  F17D         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 32816  014FA2  0E67               	movlw	low _Scroll_7
 32817  014FA4  0101               	movlb	1	; () banked
 32818  014FA6  6F7E               	movwf	BufferCopy@to& (0+255),b
 32819  014FA8  0E02               	movlw	high _Scroll_7
 32820  014FAA  0101               	movlb	1	; () banked
 32821  014FAC  6F7F               	movwf	(BufferCopy@to+1)& (0+255),b
 32822  014FAE  0E10               	movlw	16
 32823  014FB0  0101               	movlb	1	; () banked
 32824  014FB2  6F80               	movwf	BufferCopy@count& (0+255),b
 32825  014FB4  0E00               	movlw	0
 32826  014FB6  0101               	movlb	1	; () banked
 32827  014FB8  6F81               	movwf	BufferCopy@shift& (0+255),b
 32828  014FBA  EC6A  F0B7         	call	_BufferCopy	;wreg free
 32829                           
 32830                           ;LCD.c: 446: }
 32831  014FBE  0012               	return	
 32832  014FC0                     l14153:
 32833                           
 32834                           ;LCD.c: 447: else if(ScrollFIFOCount == 8)
 32835  014FC0  0E08               	movlw	8
 32836  014FC2  0101               	movlb	1	; () banked
 32837  014FC4  1914               	xorwf	_ScrollFIFOCount& (0+255),w,b
 32838  014FC6  A4D8               	btfss	status,2,c
 32839  014FC8  D013               	goto	l14157
 32840                           
 32841                           ; BSR set to: 1
 32842                           ;LCD.c: 448: {
 32843                           ;LCD.c: 449: BufferCopy((unsigned char*) This,Scroll_8, 16, 0);
 32844  014FCA  C183  F17C         	movff	LCD_Scroll@This,BufferCopy@from
 32845  014FCE  C184  F17D         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 32846  014FD2  0E74               	movlw	low _Scroll_8
 32847  014FD4  0101               	movlb	1	; () banked
 32848  014FD6  6F7E               	movwf	BufferCopy@to& (0+255),b
 32849  014FD8  0E03               	movlw	high _Scroll_8
 32850  014FDA  0101               	movlb	1	; () banked
 32851  014FDC  6F7F               	movwf	(BufferCopy@to+1)& (0+255),b
 32852  014FDE  0E10               	movlw	16
 32853  014FE0  0101               	movlb	1	; () banked
 32854  014FE2  6F80               	movwf	BufferCopy@count& (0+255),b
 32855  014FE4  0E00               	movlw	0
 32856  014FE6  0101               	movlb	1	; () banked
 32857  014FE8  6F81               	movwf	BufferCopy@shift& (0+255),b
 32858  014FEA  EC6A  F0B7         	call	_BufferCopy	;wreg free
 32859                           
 32860                           ;LCD.c: 450: }
 32861  014FEE  0012               	return	
 32862  014FF0                     l14157:
 32863                           
 32864                           ;LCD.c: 451: else if(ScrollFIFOCount == 9)
 32865  014FF0  0E09               	movlw	9
 32866  014FF2  0101               	movlb	1	; () banked
 32867  014FF4  1914               	xorwf	_ScrollFIFOCount& (0+255),w,b
 32868  014FF6  A4D8               	btfss	status,2,c
 32869  014FF8  D013               	goto	l14161
 32870                           
 32871                           ; BSR set to: 1
 32872                           ;LCD.c: 452: {
 32873                           ;LCD.c: 453: BufferCopy((unsigned char*) This,Scroll_9, 16, 0);
 32874  014FFA  C183  F17C         	movff	LCD_Scroll@This,BufferCopy@from
 32875  014FFE  C184  F17D         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 32876  015002  0E84               	movlw	low _Scroll_9
 32877  015004  0101               	movlb	1	; () banked
 32878  015006  6F7E               	movwf	BufferCopy@to& (0+255),b
 32879  015008  0E03               	movlw	high _Scroll_9
 32880  01500A  0101               	movlb	1	; () banked
 32881  01500C  6F7F               	movwf	(BufferCopy@to+1)& (0+255),b
 32882  01500E  0E10               	movlw	16
 32883  015010  0101               	movlb	1	; () banked
 32884  015012  6F80               	movwf	BufferCopy@count& (0+255),b
 32885  015014  0E00               	movlw	0
 32886  015016  0101               	movlb	1	; () banked
 32887  015018  6F81               	movwf	BufferCopy@shift& (0+255),b
 32888  01501A  EC6A  F0B7         	call	_BufferCopy	;wreg free
 32889                           
 32890                           ;LCD.c: 454: }
 32891  01501E  0012               	return	
 32892  015020                     l14161:
 32893                           
 32894                           ;LCD.c: 455: else if(ScrollFIFOCount == 10)
 32895  015020  0E0A               	movlw	10
 32896  015022  0101               	movlb	1	; () banked
 32897  015024  1914               	xorwf	_ScrollFIFOCount& (0+255),w,b
 32898  015026  A4D8               	btfss	status,2,c
 32899  015028  0012               	return	
 32900                           
 32901                           ; BSR set to: 1
 32902                           ;LCD.c: 456: {
 32903                           ;LCD.c: 457: BufferCopy((unsigned char*) This,Scroll_10, 16, 0);
 32904  01502A  C183  F17C         	movff	LCD_Scroll@This,BufferCopy@from
 32905  01502E  C184  F17D         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 32906  015032  0E64               	movlw	low _Scroll_10
 32907  015034  0101               	movlb	1	; () banked
 32908  015036  6F7E               	movwf	BufferCopy@to& (0+255),b
 32909  015038  0E03               	movlw	high _Scroll_10
 32910  01503A  0101               	movlb	1	; () banked
 32911  01503C  6F7F               	movwf	(BufferCopy@to+1)& (0+255),b
 32912  01503E  0E10               	movlw	16
 32913  015040  0101               	movlb	1	; () banked
 32914  015042  6F80               	movwf	BufferCopy@count& (0+255),b
 32915  015044  0E00               	movlw	0
 32916  015046  0101               	movlb	1	; () banked
 32917  015048  6F81               	movwf	BufferCopy@shift& (0+255),b
 32918  01504A  EC6A  F0B7         	call	_BufferCopy	;wreg free
 32919  01504E  0012               	return	
 32920  015050  0012               	return		;funcret
 32921  015052                     __end_of_LCD_Scroll:
 32922                           	opt stack 0
 32923                           tblptru	equ	0xFF8
 32924                           tblptrh	equ	0xFF7
 32925                           tblptrl	equ	0xFF6
 32926                           tablat	equ	0xFF5
 32927                           prodh	equ	0xFF4
 32928                           prodl	equ	0xFF3
 32929                           intcon	equ	0xFF2
 32930                           intcon2	equ	0xFF1
 32931                           indf0	equ	0xFEF
 32932                           postinc0	equ	0xFEE
 32933                           plusw0	equ	0xFEB
 32934                           fsr0h	equ	0xFEA
 32935                           fsr0l	equ	0xFE9
 32936                           wreg	equ	0xFE8
 32937                           indf1	equ	0xFE7
 32938                           postdec1	equ	0xFE5
 32939                           fsr1h	equ	0xFE2
 32940                           fsr1l	equ	0xFE1
 32941                           indf2	equ	0xFDF
 32942                           postinc2	equ	0xFDE
 32943                           postdec2	equ	0xFDD
 32944                           plusw2	equ	0xFDB
 32945                           fsr2h	equ	0xFDA
 32946                           fsr2l	equ	0xFD9
 32947                           status	equ	0xFD8
 32948                           
 32949 ;; *************** function _BufferCopy *****************
 32950 ;; Defined at:
 32951 ;;		line 103 in file "MISC.c"
 32952 ;; Parameters:    Size  Location     Type
 32953 ;;  from            2   22[BANK1 ] PTR unsigned char 
 32954 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 32955 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 32956 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 32957 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 32958 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 32959 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 32960 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 32961 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 32962 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 32963 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 32964 ;;		 -> STR_68(5), STR_67(9), STR_66(9), StringAddEqual@temp(100), 
 32965 ;;		 -> RemoveSpaces@That(100), low_isr@TEMP_Rxdata(100), 
 32966 ;;  to              2   24[BANK1 ] PTR unsigned char 
 32967 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 32968 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 32969 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 32970 ;;  count           1   26[BANK1 ] unsigned char 
 32971 ;;  shift           1   27[BANK1 ] unsigned char 
 32972 ;; Auto vars:     Size  Location     Type
 32973 ;;  i               1   28[BANK1 ] unsigned char 
 32974 ;; Return value:  Size  Location     Type
 32975 ;;		None               void
 32976 ;; Registers used:
 32977 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32978 ;; Tracked objects:
 32979 ;;		On entry : 0/0
 32980 ;;		On exit  : 0/0
 32981 ;;		Unchanged: 0/0
 32982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32983 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 32984 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32986 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 32987 ;;Total ram usage:        7 bytes
 32988 ;; Hardware stack levels used:    1
 32989 ;; Hardware stack levels required when called:    8
 32990 ;; This function calls:
 32991 ;;		_cleanBuffer
 32992 ;; This function is called by:
 32993 ;;		_RemoveSpaces
 32994 ;;		_StringAddEqual
 32995 ;;		_LCD_Scroll
 32996 ;; This function uses a non-reentrant model
 32997 ;;
 32998                           
 32999                           	psect	text94
 33000  016ED4                     __ptext94:
 33001                           	opt stack 0
 33002  016ED4                     _BufferCopy:
 33003                           	opt stack 20
 33004                           
 33005                           ;MISC.c: 105: unsigned char i=0;
 33006                           
 33007                           ;incstack = 0
 33008  016ED4  0E00               	movlw	0
 33009  016ED6  0101               	movlb	1	; () banked
 33010  016ED8  6F82               	movwf	BufferCopy@i& (0+255),b
 33011                           
 33012                           ; BSR set to: 1
 33013                           ;MISC.c: 106: cleanBuffer(to,count);
 33014  016EDA  C17E  F174         	movff	BufferCopy@to,cleanBuffer@data
 33015  016EDE  C17F  F175         	movff	BufferCopy@to+1,cleanBuffer@data+1
 33016  016EE2  C180  F176         	movff	BufferCopy@count,cleanBuffer@count
 33017  016EE6  0101               	movlb	1	; () banked
 33018  016EE8  6B77               	clrf	(cleanBuffer@count+1)& (0+255),b
 33019  016EEA  ECD3  F003         	call	_cleanBuffer	;wreg free
 33020                           
 33021                           ;MISC.c: 107: for(i = shift; i>0;i--)
 33022  016EEE  C181  F182         	movff	BufferCopy@shift,BufferCopy@i
 33023  016EF2                     l12715:
 33024  016EF2  0101               	movlb	1	; () banked
 33025  016EF4  5182               	movf	BufferCopy@i& (0+255),w,b
 33026  016EF6  0101               	movlb	1	; () banked
 33027  016EF8  B4D8               	btfsc	status,2,c
 33028  016EFA  D02E               	goto	l12735
 33029  016EFC  D001               	goto	l12719
 33030                           
 33031                           ; BSR set to: 1
 33032  016EFE  D02C               	goto	l12735
 33033  016F00                     l12719:
 33034                           
 33035                           ; BSR set to: 1
 33036                           ;MISC.c: 108: {
 33037                           ;MISC.c: 109: *to = ' ';
 33038  016F00  C17E  FFD9         	movff	BufferCopy@to,fsr2l
 33039  016F04  C17F  FFDA         	movff	BufferCopy@to+1,fsr2h
 33040  016F08  0E20               	movlw	32
 33041  016F0A  6EDF               	movwf	indf2,c
 33042                           
 33043                           ; BSR set to: 1
 33044                           ;MISC.c: 110: to++;
 33045  016F0C  0101               	movlb	1	; () banked
 33046  016F0E  4B7E               	infsnz	BufferCopy@to& (0+255),f,b
 33047  016F10  2B7F               	incf	(BufferCopy@to+1)& (0+255),f,b
 33048                           
 33049                           ; BSR set to: 1
 33050  016F12  0101               	movlb	1	; () banked
 33051  016F14  0782               	decf	BufferCopy@i& (0+255),f,b
 33052  016F16  D7ED               	goto	l12715
 33053                           
 33054                           ; BSR set to: 1
 33055                           ;MISC.c: 111: }
 33056                           ;MISC.c: 112: while(*from != 0 && count >0)
 33057                           
 33058                           ; BSR set to: 1
 33059  016F18  D01F               	goto	l12735
 33060  016F1A                     l12727:
 33061                           
 33062                           ; BSR set to: 1
 33063                           ;MISC.c: 113: {
 33064                           ;MISC.c: 114: *to = *from;
 33065  016F1A  C17C  FFF6         	movff	BufferCopy@from,tblptrl
 33066  016F1E  C17D  FFF7         	movff	BufferCopy@from+1,tblptrh
 33067  016F22  0E00               	movlw	low (__mediumconst shr (0+16))
 33068  016F24  6EF8               	movwf	tblptru,c
 33069  016F26  C17E  FFD9         	movff	BufferCopy@to,fsr2l
 33070  016F2A  C17F  FFDA         	movff	BufferCopy@to+1,fsr2h
 33071  016F2E  0E0C               	movlw	(high __ramtop+-1)
 33072  016F30  64F7               	cpfsgt	tblptrh,c
 33073  016F32  D003               	bra	u15667
 33074  016F34  0008               	tblrd		*
 33075  016F36  50F5               	movf	tablat,w,c
 33076  016F38  D005               	bra	u15660
 33077  016F3A                     u15667:
 33078  016F3A  CFF6 FFE9          	movff	tblptrl,fsr0l
 33079  016F3E  CFF7 FFEA          	movff	tblptrh,fsr0h
 33080  016F42  50EF               	movf	indf0,w,c
 33081  016F44                     u15660:
 33082  016F44  6EDF               	movwf	indf2,c
 33083                           
 33084                           ;MISC.c: 115: from++;
 33085  016F46  0101               	movlb	1	; () banked
 33086  016F48  4B7C               	infsnz	BufferCopy@from& (0+255),f,b
 33087  016F4A  2B7D               	incf	(BufferCopy@from+1)& (0+255),f,b
 33088                           
 33089                           ; BSR set to: 1
 33090                           ;MISC.c: 116: to++;
 33091  016F4C  0101               	movlb	1	; () banked
 33092  016F4E  4B7E               	infsnz	BufferCopy@to& (0+255),f,b
 33093  016F50  2B7F               	incf	(BufferCopy@to+1)& (0+255),f,b
 33094                           
 33095                           ; BSR set to: 1
 33096                           ;MISC.c: 117: count--;
 33097  016F52  0101               	movlb	1	; () banked
 33098  016F54  0780               	decf	BufferCopy@count& (0+255),f,b
 33099  016F56  D000               	goto	l12735
 33100  016F58                     l12735:
 33101                           
 33102                           ; BSR set to: 1
 33103  016F58  C17C  FFF6         	movff	BufferCopy@from,tblptrl
 33104  016F5C  C17D  FFF7         	movff	BufferCopy@from+1,tblptrh
 33105  016F60  0E00               	movlw	low (__mediumconst shr (0+16))
 33106  016F62  6EF8               	movwf	tblptru,c
 33107  016F64  0E0C               	movlw	(high __ramtop+-1)
 33108  016F66  64F7               	cpfsgt	tblptrh,c
 33109  016F68  D003               	bra	u15677
 33110  016F6A  0008               	tblrd		*
 33111  016F6C  50F5               	movf	tablat,w,c
 33112  016F6E  D005               	bra	u15670
 33113  016F70                     u15677:
 33114  016F70  CFF6 FFE9          	movff	tblptrl,fsr0l
 33115  016F74  CFF7 FFEA          	movff	tblptrh,fsr0h
 33116  016F78  50EF               	movf	indf0,w,c
 33117  016F7A                     u15670:
 33118  016F7A  0900               	iorlw	0
 33119  016F7C  B4D8               	btfsc	status,2,c
 33120  016F7E  0012               	return	
 33121  016F80  0101               	movlb	1	; () banked
 33122  016F82  5180               	movf	BufferCopy@count& (0+255),w,b
 33123  016F84  0101               	movlb	1	; () banked
 33124  016F86  B4D8               	btfsc	status,2,c
 33125  016F88  0012               	return	
 33126  016F8A  D7C7               	goto	l12727
 33127                           
 33128                           ; BSR set to: 1
 33129  016F8C  0012               	return	
 33130                           
 33131                           ; BSR set to: 1
 33132  016F8E  0012               	return		;funcret
 33133  016F90                     __end_of_BufferCopy:
 33134                           	opt stack 0
 33135                           tblptru	equ	0xFF8
 33136                           tblptrh	equ	0xFF7
 33137                           tblptrl	equ	0xFF6
 33138                           tablat	equ	0xFF5
 33139                           prodh	equ	0xFF4
 33140                           prodl	equ	0xFF3
 33141                           intcon	equ	0xFF2
 33142                           intcon2	equ	0xFF1
 33143                           indf0	equ	0xFEF
 33144                           postinc0	equ	0xFEE
 33145                           plusw0	equ	0xFEB
 33146                           fsr0h	equ	0xFEA
 33147                           fsr0l	equ	0xFE9
 33148                           wreg	equ	0xFE8
 33149                           indf1	equ	0xFE7
 33150                           postdec1	equ	0xFE5
 33151                           fsr1h	equ	0xFE2
 33152                           fsr1l	equ	0xFE1
 33153                           indf2	equ	0xFDF
 33154                           postinc2	equ	0xFDE
 33155                           postdec2	equ	0xFDD
 33156                           plusw2	equ	0xFDB
 33157                           fsr2h	equ	0xFDA
 33158                           fsr2l	equ	0xFD9
 33159                           status	equ	0xFD8
 33160                           
 33161 ;; *************** function _cleanBuffer *****************
 33162 ;; Defined at:
 33163 ;;		line 75 in file "MISC.c"
 33164 ;; Parameters:    Size  Location     Type
 33165 ;;  data            2   14[BANK1 ] PTR unsigned char 
 33166 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 33167 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 33168 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 33169 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 33170 ;;  count           2   16[BANK1 ] int 
 33171 ;; Auto vars:     Size  Location     Type
 33172 ;;  i               1   21[BANK1 ] unsigned char 
 33173 ;; Return value:  Size  Location     Type
 33174 ;;		None               void
 33175 ;; Registers used:
 33176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33177 ;; Tracked objects:
 33178 ;;		On entry : 0/0
 33179 ;;		On exit  : 0/0
 33180 ;;		Unchanged: 0/0
 33181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33182 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33183 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 33184 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 33185 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 33186 ;;Total ram usage:        8 bytes
 33187 ;; Hardware stack levels used:    1
 33188 ;; Hardware stack levels required when called:    7
 33189 ;; This function calls:
 33190 ;;		Nothing
 33191 ;; This function is called by:
 33192 ;;		_main
 33193 ;;		_BufferCopy
 33194 ;;		_RemoveSpaces
 33195 ;;		_StringAddEqual
 33196 ;;		_Command
 33197 ;;		_LCDScreenUpdate
 33198 ;; This function uses a non-reentrant model
 33199 ;;
 33200                           
 33201                           	psect	text95
 33202  0007A6                     __ptext95:
 33203                           	opt stack 0
 33204  0007A6                     _cleanBuffer:
 33205                           	opt stack 23
 33206                           
 33207                           ;MISC.c: 77: unsigned char i=0;
 33208                           
 33209                           ;incstack = 0
 33210  0007A6  0E00               	movlw	0
 33211  0007A8  0101               	movlb	1	; () banked
 33212  0007AA  6F7B               	movwf	cleanBuffer@i& (0+255),b
 33213                           
 33214                           ;MISC.c: 78: for(i=0; i<count;i++)
 33215  0007AC  0E00               	movlw	0
 33216  0007AE  0101               	movlb	1	; () banked
 33217  0007B0  6F7B               	movwf	cleanBuffer@i& (0+255),b
 33218  0007B2  D010               	goto	l12303
 33219  0007B4                     l12299:
 33220                           
 33221                           ; BSR set to: 1
 33222                           ;MISC.c: 79: {
 33223                           ;MISC.c: 80: data[i]= 0;
 33224  0007B4  0101               	movlb	1	; () banked
 33225  0007B6  517B               	movf	cleanBuffer@i& (0+255),w,b
 33226  0007B8  0D01               	mullw	1
 33227  0007BA  50F3               	movf	prodl,w,c
 33228  0007BC  0101               	movlb	1	; () banked
 33229  0007BE  2574               	addwf	cleanBuffer@data& (0+255),w,b
 33230  0007C0  6ED9               	movwf	fsr2l,c
 33231  0007C2  50F4               	movf	prodh,w,c
 33232  0007C4  0101               	movlb	1	; () banked
 33233  0007C6  2175               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 33234  0007C8  6EDA               	movwf	fsr2h,c
 33235  0007CA  0E00               	movlw	0
 33236  0007CC  6EDF               	movwf	indf2,c
 33237                           
 33238                           ; BSR set to: 1
 33239  0007CE  0101               	movlb	1	; () banked
 33240  0007D0  2B7B               	incf	cleanBuffer@i& (0+255),f,b
 33241  0007D2  D000               	goto	l12303
 33242  0007D4                     l12303:
 33243                           
 33244                           ; BSR set to: 1
 33245  0007D4  0101               	movlb	1	; () banked
 33246  0007D6  517B               	movf	cleanBuffer@i& (0+255),w,b
 33247  0007D8  0101               	movlb	1	; () banked
 33248  0007DA  6F78               	movwf	??_cleanBuffer& (0+255),b
 33249  0007DC  6B79               	clrf	(??_cleanBuffer+1)& (0+255),b
 33250  0007DE  0101               	movlb	1	; () banked
 33251  0007E0  5176               	movf	cleanBuffer@count& (0+255),w,b
 33252  0007E2  0101               	movlb	1	; () banked
 33253  0007E4  5D78               	subwf	??_cleanBuffer& (0+255),w,b
 33254  0007E6  0101               	movlb	1	; () banked
 33255  0007E8  5179               	movf	(??_cleanBuffer+1)& (0+255),w,b
 33256  0007EA  0A80               	xorlw	128
 33257  0007EC  0101               	movlb	1	; () banked
 33258  0007EE  6F7A               	movwf	(??_cleanBuffer+2)& (0+255),b
 33259  0007F0  0101               	movlb	1	; () banked
 33260  0007F2  5177               	movf	(cleanBuffer@count+1)& (0+255),w,b
 33261  0007F4  0A80               	xorlw	128
 33262  0007F6  0101               	movlb	1	; () banked
 33263  0007F8  597A               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 33264  0007FA  A0D8               	btfss	status,0,c
 33265  0007FC  D7DB               	goto	l12299
 33266                           
 33267                           ; BSR set to: 1
 33268                           
 33269                           ; BSR set to: 1
 33270  0007FE  0012               	return		;funcret
 33271  000800                     __end_of_cleanBuffer:
 33272                           	opt stack 0
 33273                           tblptru	equ	0xFF8
 33274                           tblptrh	equ	0xFF7
 33275                           tblptrl	equ	0xFF6
 33276                           tablat	equ	0xFF5
 33277                           prodh	equ	0xFF4
 33278                           prodl	equ	0xFF3
 33279                           intcon	equ	0xFF2
 33280                           intcon2	equ	0xFF1
 33281                           indf0	equ	0xFEF
 33282                           postinc0	equ	0xFEE
 33283                           plusw0	equ	0xFEB
 33284                           fsr0h	equ	0xFEA
 33285                           fsr0l	equ	0xFE9
 33286                           wreg	equ	0xFE8
 33287                           indf1	equ	0xFE7
 33288                           postdec1	equ	0xFE5
 33289                           fsr1h	equ	0xFE2
 33290                           fsr1l	equ	0xFE1
 33291                           indf2	equ	0xFDF
 33292                           postinc2	equ	0xFDE
 33293                           postdec2	equ	0xFDD
 33294                           plusw2	equ	0xFDB
 33295                           fsr2h	equ	0xFDA
 33296                           fsr2l	equ	0xFD9
 33297                           status	equ	0xFD8
 33298                           
 33299 ;; *************** function _InternalADC_Read *****************
 33300 ;; Defined at:
 33301 ;;		line 110 in file "ADC.c"
 33302 ;; Parameters:    Size  Location     Type
 33303 ;;  channel         1    wreg     unsigned char 
 33304 ;; Auto vars:     Size  Location     Type
 33305 ;;  channel         1   33[BANK1 ] unsigned char 
 33306 ;; Return value:  Size  Location     Type
 33307 ;;                  2   29[BANK1 ] int 
 33308 ;; Registers used:
 33309 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33310 ;; Tracked objects:
 33311 ;;		On entry : 0/0
 33312 ;;		On exit  : 0/0
 33313 ;;		Unchanged: 0/0
 33314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33315 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 33316 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 33317 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 33318 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 33319 ;;Total ram usage:        5 bytes
 33320 ;; Hardware stack levels used:    1
 33321 ;; Hardware stack levels required when called:   10
 33322 ;; This function calls:
 33323 ;;		_UARTstring
 33324 ;; This function is called by:
 33325 ;;		_Command
 33326 ;;		_RTC_INIT
 33327 ;; This function uses a non-reentrant model
 33328 ;;
 33329                           
 33330                           	psect	text96
 33331  000556                     __ptext96:
 33332                           	opt stack 0
 33333  000556                     _InternalADC_Read:
 33334                           	opt stack 19
 33335                           
 33336                           ; BSR set to: 1
 33337                           ;incstack = 0
 33338                           ;InternalADC_Read@channel stored from wreg
 33339  000556  0101               	movlb	1	; () banked
 33340  000558  6F87               	movwf	InternalADC_Read@channel& (0+255),b
 33341                           
 33342                           ; BSR set to: 1
 33343                           ;ADC.c: 112: ADCON0 =0;
 33344  00055A  0E00               	movlw	0
 33345  00055C  6EC2               	movwf	4034,c	;volatile
 33346                           
 33347                           ; BSR set to: 1
 33348                           ;ADC.c: 113: if(channel > 10)
 33349  00055E  0E0A               	movlw	10
 33350  000560  0101               	movlb	1	; () banked
 33351  000562  6587               	cpfsgt	InternalADC_Read@channel& (0+255),b
 33352  000564  D00E               	goto	l14221
 33353                           
 33354                           ; BSR set to: 1
 33355                           ;ADC.c: 114: {
 33356                           ;ADC.c: 115: UARTstring("ADC Channel Out of Bounds");
 33357  000566  0E95               	movlw	low STR_320
 33358  000568  0101               	movlb	1	; () banked
 33359  00056A  6F7F               	movwf	UARTstring@data& (0+255),b
 33360  00056C  0EF5               	movlw	high STR_320
 33361  00056E  0101               	movlb	1	; () banked
 33362  000570  6F80               	movwf	(UARTstring@data+1)& (0+255),b
 33363  000572  EC24  F0BA         	call	_UARTstring	;wreg free
 33364                           
 33365                           ;ADC.c: 116: return 0;
 33366  000576  0E00               	movlw	0
 33367  000578  0101               	movlb	1	; () banked
 33368  00057A  6F84               	movwf	(?_InternalADC_Read+1)& (0+255),b
 33369  00057C  0E00               	movlw	0
 33370  00057E  6F83               	movwf	?_InternalADC_Read& (0+255),b
 33371                           
 33372                           ; BSR set to: 1
 33373  000580  0012               	return	
 33374  000582                     l14221:
 33375                           
 33376                           ; BSR set to: 1
 33377                           ;ADC.c: 117: }
 33378                           ;ADC.c: 118: ADCON0 |= (channel << 2);
 33379  000582  0101               	movlb	1	; () banked
 33380  000584  4587               	rlncf	InternalADC_Read@channel& (0+255),w,b
 33381  000586  46E8               	rlncf	wreg,f,c
 33382  000588  0BFC               	andlw	252
 33383  00058A  12C2               	iorwf	4034,f,c	;volatile
 33384                           
 33385                           ;ADC.c: 119: ADCON2 |= 0b10100000;
 33386  00058C  0EA0               	movlw	160
 33387  00058E  12C0               	iorwf	4032,f,c	;volatile
 33388                           
 33389                           ;ADC.c: 120: ADCON2 |= 0b00000110;
 33390  000590  0E06               	movlw	6
 33391  000592  12C0               	iorwf	4032,f,c	;volatile
 33392                           
 33393                           ; BSR set to: 1
 33394                           ;ADC.c: 121: ADCON0 |= 0b00000001;
 33395  000594  80C2               	bsf	4034,0,c	;volatile
 33396                           
 33397                           ; BSR set to: 1
 33398                           ;ADC.c: 122: (PIE1bits.ADIE=0);
 33399  000596  9C9D               	bcf	3997,6,c	;volatile
 33400                           
 33401                           ; BSR set to: 1
 33402                           ;ADC.c: 123: ADCON0 |= 0b00000010;
 33403  000598  82C2               	bsf	4034,1,c	;volatile
 33404                           
 33405                           ;ADC.c: 124: while(ADCON0 & 0b00000010);
 33406  00059A  D000               	goto	l980
 33407  00059C                     l980:
 33408                           
 33409                           ; BSR set to: 1
 33410  00059C  B2C2               	btfsc	4034,1,c	;volatile
 33411  00059E  D7FE               	goto	l980
 33412                           
 33413                           ; BSR set to: 1
 33414                           ;ADC.c: 125: return ((ADRESH << 8) + ADRESL);
 33415                           
 33416                           ; BSR set to: 1
 33417  0005A0  50C4               	movf	4036,w,c	;volatile
 33418  0005A2  0101               	movlb	1	; () banked
 33419  0005A4  6F86               	movwf	(??_InternalADC_Read+1)& (0+255),b
 33420  0005A6  6B85               	clrf	??_InternalADC_Read& (0+255),b
 33421  0005A8  50C3               	movf	4035,w,c	;volatile
 33422  0005AA  0101               	movlb	1	; () banked
 33423  0005AC  2585               	addwf	??_InternalADC_Read& (0+255),w,b
 33424  0005AE  0101               	movlb	1	; () banked
 33425  0005B0  6F83               	movwf	?_InternalADC_Read& (0+255),b
 33426  0005B2  0E00               	movlw	0
 33427  0005B4  0101               	movlb	1	; () banked
 33428  0005B6  2186               	addwfc	(??_InternalADC_Read+1)& (0+255),w,b
 33429  0005B8  0101               	movlb	1	; () banked
 33430  0005BA  6F84               	movwf	(?_InternalADC_Read+1)& (0+255),b
 33431  0005BC  0012               	return	
 33432                           
 33433                           ; BSR set to: 1
 33434                           
 33435                           ; BSR set to: 1
 33436  0005BE  0012               	return		;funcret
 33437  0005C0                     __end_of_InternalADC_Read:
 33438                           	opt stack 0
 33439                           tblptru	equ	0xFF8
 33440                           tblptrh	equ	0xFF7
 33441                           tblptrl	equ	0xFF6
 33442                           tablat	equ	0xFF5
 33443                           prodh	equ	0xFF4
 33444                           prodl	equ	0xFF3
 33445                           intcon	equ	0xFF2
 33446                           intcon2	equ	0xFF1
 33447                           indf0	equ	0xFEF
 33448                           postinc0	equ	0xFEE
 33449                           plusw0	equ	0xFEB
 33450                           fsr0h	equ	0xFEA
 33451                           fsr0l	equ	0xFE9
 33452                           wreg	equ	0xFE8
 33453                           indf1	equ	0xFE7
 33454                           postdec1	equ	0xFE5
 33455                           fsr1h	equ	0xFE2
 33456                           fsr1l	equ	0xFE1
 33457                           indf2	equ	0xFDF
 33458                           postinc2	equ	0xFDE
 33459                           postdec2	equ	0xFDD
 33460                           plusw2	equ	0xFDB
 33461                           fsr2h	equ	0xFDA
 33462                           fsr2l	equ	0xFD9
 33463                           status	equ	0xFD8
 33464                           
 33465 ;; *************** function _UARTstring *****************
 33466 ;; Defined at:
 33467 ;;		line 233 in file "UART.c"
 33468 ;; Parameters:    Size  Location     Type
 33469 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 33470 ;;		 -> STR_324(44), STR_320(26), STR_319(3), STR_317(18), 
 33471 ;;		 -> STR_315(18), STR_311(20), STR_288(24), STR_285(3), 
 33472 ;;		 -> STR_283(15), STR_282(22), STR_281(50), STR_280(8), 
 33473 ;;		 -> STR_279(6), STR_278(6), STR_277(11), STR_276(17), 
 33474 ;;		 -> STR_275(12), STR_274(13), STR_273(10), STR_272(12), 
 33475 ;;		 -> STR_267(28), STR_266(68), STR_265(9), STR_264(11), 
 33476 ;;		 -> STR_263(23), STR_261(19), STR_259(20), STR_256(20), 
 33477 ;;		 -> STR_247(21), STR_246(61), STR_245(69), STR_244(7), 
 33478 ;;		 -> STR_243(7), STR_242(10), STR_241(11), STR_240(29), 
 33479 ;;		 -> STR_239(13), STR_238(33), STR_237(25), STR_236(28), 
 33480 ;;		 -> STR_235(3), STR_234(26), STR_233(2), STR_232(34), 
 33481 ;;		 -> STR_231(37), STR_228(24), STR_224(3), STR_214(13), 
 33482 ;;		 -> STR_213(73), STR_212(5), STR_211(12), STR_210(17), 
 33483 ;;		 -> STR_204(28), STR_202(30), STR_200(33), STR_193(42), 
 33484 ;;		 -> STR_192(62), STR_191(26), STR_187(43), STR_185(48), 
 33485 ;;		 -> STR_183(27), STR_176(42), STR_175(66), STR_174(25), 
 33486 ;;		 -> STR_172(49), Command@buf(200), STR_168(33), STR_166(38), 
 33487 ;;		 -> STR_164(27), STR_163(28), STR_153(37), STR_152(68), 
 33488 ;;		 -> STR_151(18), STR_150(15), STR_149(11), STR_148(28), 
 33489 ;;		 -> STR_146(18), STR_144(32), STR_140(31), STR_136(38), 
 33490 ;;		 -> STR_123(24), STR_122(68), STR_121(10), STR_120(6), 
 33491 ;;		 -> STR_119(8), STR_118(11), STR_117(21), STR_115(16), 
 33492 ;;		 -> STR_113(19), STR_110(18), STR_107(16), STR_104(15), 
 33493 ;;		 -> STR_101(22), STR_89(27), STR_88(68), STR_87(7), 
 33494 ;;		 -> STR_86(8), STR_85(11), STR_84(24), STR_82(19), 
 33495 ;;		 -> STR_80(19), STR_77(18), STR_74(25), STR_65(17), 
 33496 ;;		 -> STR_64(68), STR_63(8), STR_62(7), STR_61(11), 
 33497 ;;		 -> STR_60(17), STR_58(12), STR_56(9), STR_53(8), 
 33498 ;;		 -> STR_50(13), STR_47(9), STR_44(8), STR_41(13), 
 33499 ;;		 -> STR_36(4), STR_35(22), STR_29(22), STR_28(3), 
 33500 ;;		 -> SetBaud@buf(50), STR_22(4), STR_21(29), STR_11(12), 
 33501 ;;		 -> STR_8(54), STR_7(3), Version(20), STR_6(19), 
 33502 ;;		 -> STR_5(38), low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), 
 33503 ;;		 -> STR_2(2), STR_1(2), 
 33504 ;; Auto vars:     Size  Location     Type
 33505 ;;		None
 33506 ;; Return value:  Size  Location     Type
 33507 ;;		None               void
 33508 ;; Registers used:
 33509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33510 ;; Tracked objects:
 33511 ;;		On entry : 0/0
 33512 ;;		On exit  : 0/0
 33513 ;;		Unchanged: 0/0
 33514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33515 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 33516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33517 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 33518 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33519 ;;Total ram usage:        4 bytes
 33520 ;; Hardware stack levels used:    1
 33521 ;; Hardware stack levels required when called:    9
 33522 ;; This function calls:
 33523 ;;		_UARTchar
 33524 ;; This function is called by:
 33525 ;;		_main
 33526 ;;		_SetBaud
 33527 ;;		_Command
 33528 ;;		_InternalADC_Read
 33529 ;; This function uses a non-reentrant model
 33530 ;;
 33531                           
 33532                           	psect	text97
 33533  017448                     __ptext97:
 33534                           	opt stack 0
 33535  017448                     _UARTstring:
 33536                           	opt stack 21
 33537  017448                     
 33538                           ;UART.c: 236: {
 33539                           ;UART.c: 237: if(*data != 0)
 33540  017448  C17F  FFF6         	movff	UARTstring@data,tblptrl
 33541  01744C  C180  FFF7         	movff	UARTstring@data+1,tblptrh
 33542  017450  0E00               	movlw	low (__mediumconst shr (0+16))
 33543  017452  6EF8               	movwf	tblptru,c
 33544  017454  0E0C               	movlw	(high __ramtop+-1)
 33545  017456  64F7               	cpfsgt	tblptrh,c
 33546  017458  D003               	bra	u15527
 33547  01745A  0008               	tblrd		*
 33548  01745C  50F5               	movf	tablat,w,c
 33549  01745E  D005               	bra	u15520
 33550  017460                     u15527:
 33551  017460  CFF6 FFE9          	movff	tblptrl,fsr0l
 33552  017464  CFF7 FFEA          	movff	tblptrh,fsr0h
 33553  017468  50EF               	movf	indf0,w,c
 33554  01746A                     u15520:
 33555  01746A  0900               	iorlw	0
 33556  01746C  B4D8               	btfsc	status,2,c
 33557  01746E  D01E               	goto	l12683
 33558                           
 33559                           ;UART.c: 238: {
 33560                           ;UART.c: 239: UARTchar((unsigned char) *data, 0, 0);
 33561  017470  0E00               	movlw	0
 33562  017472  0101               	movlb	1	; () banked
 33563  017474  6F7B               	movwf	UARTchar@NinethBit_override& (0+255),b
 33564  017476  0E00               	movlw	0
 33565  017478  0101               	movlb	1	; () banked
 33566  01747A  6F7C               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 33567  01747C  C17F  FFF6         	movff	UARTstring@data,tblptrl
 33568  017480  C180  FFF7         	movff	UARTstring@data+1,tblptrh
 33569  017484  0E00               	movlw	low (__mediumconst shr (0+16))
 33570  017486  6EF8               	movwf	tblptru,c
 33571  017488  0E0C               	movlw	(high __ramtop+-1)
 33572  01748A  64F7               	cpfsgt	tblptrh,c
 33573  01748C  D003               	bra	u15547
 33574  01748E  0008               	tblrd		*
 33575  017490  50F5               	movf	tablat,w,c
 33576  017492  D005               	bra	u15540
 33577  017494                     u15547:
 33578  017494  CFF6 FFE9          	movff	tblptrl,fsr0l
 33579  017498  CFF7 FFEA          	movff	tblptrh,fsr0h
 33580  01749C  50EF               	movf	indf0,w,c
 33581  01749E                     u15540:
 33582  01749E  EC3A  F0BC         	call	_UARTchar
 33583                           
 33584                           ;UART.c: 240: while((!TXSTAbits.TRMT));
 33585  0174A2  D000               	goto	l523
 33586  0174A4                     l523:
 33587  0174A4  B2AC               	btfsc	4012,1,c	;volatile
 33588  0174A6  D002               	goto	l12683
 33589  0174A8  D7FD               	goto	l523
 33590  0174AA  D000               	goto	l12683
 33591  0174AC                     l12683:
 33592                           
 33593                           ;UART.c: 241: }
 33594                           ;UART.c: 242: } while( *data++);
 33595  0174AC  0101               	movlb	1	; () banked
 33596  0174AE  517F               	movf	UARTstring@data& (0+255),w,b
 33597  0174B0  0101               	movlb	1	; () banked
 33598  0174B2  6F81               	movwf	??_UARTstring& (0+255),b
 33599  0174B4  0101               	movlb	1	; () banked
 33600  0174B6  5180               	movf	(UARTstring@data+1)& (0+255),w,b
 33601  0174B8  0101               	movlb	1	; () banked
 33602  0174BA  6F82               	movwf	(??_UARTstring+1)& (0+255),b
 33603  0174BC  0101               	movlb	1	; () banked
 33604  0174BE  4B7F               	infsnz	UARTstring@data& (0+255),f,b
 33605  0174C0  2B80               	incf	(UARTstring@data+1)& (0+255),f,b
 33606  0174C2  C181  FFF6         	movff	??_UARTstring,tblptrl
 33607  0174C6  C182  FFF7         	movff	??_UARTstring+1,tblptrh
 33608  0174CA  0E00               	movlw	low (__mediumconst shr (0+16))
 33609  0174CC  6EF8               	movwf	tblptru,c
 33610  0174CE  0E0C               	movlw	(high __ramtop+-1)
 33611  0174D0  64F7               	cpfsgt	tblptrh,c
 33612  0174D2  D003               	bra	u15567
 33613  0174D4  0008               	tblrd		*
 33614  0174D6  50F5               	movf	tablat,w,c
 33615  0174D8  D005               	bra	u15560
 33616  0174DA                     u15567:
 33617  0174DA  CFF6 FFE9          	movff	tblptrl,fsr0l
 33618  0174DE  CFF7 FFEA          	movff	tblptrh,fsr0h
 33619  0174E2  50EF               	movf	indf0,w,c
 33620  0174E4                     u15560:
 33621  0174E4  0900               	iorlw	0
 33622  0174E6  A4D8               	btfss	status,2,c
 33623  0174E8  D7AF               	goto	l12679
 33624  0174EA  0012               	return		;funcret
 33625  0174EC                     __end_of_UARTstring:
 33626                           	opt stack 0
 33627                           tblptru	equ	0xFF8
 33628                           tblptrh	equ	0xFF7
 33629                           tblptrl	equ	0xFF6
 33630                           tablat	equ	0xFF5
 33631                           prodh	equ	0xFF4
 33632                           prodl	equ	0xFF3
 33633                           intcon	equ	0xFF2
 33634                           intcon2	equ	0xFF1
 33635                           indf0	equ	0xFEF
 33636                           postinc0	equ	0xFEE
 33637                           plusw0	equ	0xFEB
 33638                           fsr0h	equ	0xFEA
 33639                           fsr0l	equ	0xFE9
 33640                           wreg	equ	0xFE8
 33641                           indf1	equ	0xFE7
 33642                           postdec1	equ	0xFE5
 33643                           fsr1h	equ	0xFE2
 33644                           fsr1l	equ	0xFE1
 33645                           indf2	equ	0xFDF
 33646                           postinc2	equ	0xFDE
 33647                           postdec2	equ	0xFDD
 33648                           plusw2	equ	0xFDB
 33649                           fsr2h	equ	0xFDA
 33650                           fsr2l	equ	0xFD9
 33651                           status	equ	0xFD8
 33652                           
 33653 ;; *************** function _UARTchar *****************
 33654 ;; Defined at:
 33655 ;;		line 194 in file "UART.c"
 33656 ;; Parameters:    Size  Location     Type
 33657 ;;  data            1    wreg     unsigned char 
 33658 ;;  NinethBit_ov    1   21[BANK1 ] unsigned char 
 33659 ;;  NinethBit_ov    1   22[BANK1 ] unsigned char 
 33660 ;; Auto vars:     Size  Location     Type
 33661 ;;  data            1   24[BANK1 ] unsigned char 
 33662 ;; Return value:  Size  Location     Type
 33663 ;;		None               void
 33664 ;; Registers used:
 33665 ;;		wreg, status,2, status,0, cstack
 33666 ;; Tracked objects:
 33667 ;;		On entry : 0/0
 33668 ;;		On exit  : 0/0
 33669 ;;		Unchanged: 0/0
 33670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33671 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 33672 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 33673 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 33674 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33675 ;;Total ram usage:        4 bytes
 33676 ;; Hardware stack levels used:    1
 33677 ;; Hardware stack levels required when called:    8
 33678 ;; This function calls:
 33679 ;;		_CheckSum_byte
 33680 ;; This function is called by:
 33681 ;;		_UARTstring
 33682 ;;		_UARTstringWAIT
 33683 ;; This function uses a non-reentrant model
 33684 ;;
 33685                           
 33686                           	psect	text98
 33687  017874                     __ptext98:
 33688                           	opt stack 0
 33689  017874                     _UARTchar:
 33690                           	opt stack 21
 33691                           
 33692                           ;incstack = 0
 33693                           ;UARTchar@data stored from wreg
 33694  017874  0101               	movlb	1	; () banked
 33695  017876  6F7E               	movwf	UARTchar@data& (0+255),b
 33696                           
 33697                           ; BSR set to: 1
 33698                           ;UART.c: 196: if(TXSTAbits.TX9)
 33699  017878  ACAC               	btfss	4012,6,c	;volatile
 33700  01787A  D03A               	goto	l12293
 33701                           
 33702                           ; BSR set to: 1
 33703                           ;UART.c: 197: {
 33704                           ;UART.c: 199: if(!NinethBit_override)
 33705  01787C  0101               	movlb	1	; () banked
 33706  01787E  517B               	movf	UARTchar@NinethBit_override& (0+255),w,b
 33707  017880  0101               	movlb	1	; () banked
 33708  017882  B4D8               	btfsc	status,2,c
 33709  017884  D01C               	goto	l12289
 33710  017886  D028               	goto	l12291
 33711                           
 33712                           ; BSR set to: 1
 33713                           ;UART.c: 200: {
 33714                           ;UART.c: 202: switch (Global.Parity)
 33715  017888  D01A               	goto	l12289
 33716  01788A                     l12283:
 33717                           
 33718                           ; BSR set to: 1
 33719                           ;UART.c: 205: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 33720  01788A  C17E  F174         	movff	UARTchar@data,CheckSum_byte@This
 33721  01788E  0101               	movlb	1	; () banked
 33722  017890  6B75               	clrf	(CheckSum_byte@This+1)& (0+255),b
 33723  017892  0E03               	movlw	3
 33724  017894  0101               	movlb	1	; () banked
 33725  017896  6F76               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 33726  017898  EC13  F003         	call	_CheckSum_byte	;wreg free
 33727  01789C  D009               	goto	L27
 33728  01789E                     l12285:
 33729                           
 33730                           ; BSR set to: 1
 33731                           ;UART.c: 208: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 33732  01789E  C17E  F174         	movff	UARTchar@data,CheckSum_byte@This
 33733  0178A2  0101               	movlb	1	; () banked
 33734  0178A4  6B75               	clrf	(CheckSum_byte@This+1)& (0+255),b
 33735  0178A6  0E02               	movlw	2
 33736  0178A8  0101               	movlb	1	; () banked
 33737  0178AA  6F76               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 33738  0178AC  EC13  F003         	call	_CheckSum_byte	;wreg free
 33739  0178B0                     L27:
 33740  0178B0  0101               	movlb	1	; () banked
 33741  0178B2  6F7D               	movwf	??_UARTchar& (0+255),b
 33742  0178B4  D016               	goto	L28
 33743  0178B6                     l512:
 33744                           
 33745                           ; BSR set to: 1
 33746                           ;UART.c: 211: TXSTAbits.TX9D = 1;
 33747  0178B6  80AC               	bsf	4012,0,c	;volatile
 33748                           
 33749                           ;UART.c: 212: break;
 33750  0178B8  D01B               	goto	l12293
 33751  0178BA                     l513:
 33752                           
 33753                           ; BSR set to: 1
 33754                           ;UART.c: 214: TXSTAbits.TX9D = 0;
 33755  0178BA  90AC               	bcf	4012,0,c	;volatile
 33756                           
 33757                           ; BSR set to: 1
 33758                           ;UART.c: 216: }
 33759                           
 33760                           ;UART.c: 215: break;
 33761  0178BC  D019               	goto	l12293
 33762  0178BE                     l12289:
 33763                           
 33764                           ; BSR set to: 1
 33765  0178BE  0101               	movlb	1	; () banked
 33766  0178C0  5104               	movf	(_Global+4)& (0+255),w,b
 33767                           
 33768                           ; Switch size 1, requested type "space"
 33769                           ; Number of cases is 3, Range of values is 1 to 3
 33770                           ; switch strategies available:
 33771                           ; Name         Instructions Cycles
 33772                           ; simple_byte           10     6 (average)
 33773                           ;	Chosen strategy is simple_byte
 33774  0178C2  0A01               	xorlw	1	; case 1
 33775  0178C4  B4D8               	btfsc	status,2,c
 33776  0178C6  D7E1               	goto	l12283
 33777  0178C8  0A03               	xorlw	3	; case 2
 33778  0178CA  B4D8               	btfsc	status,2,c
 33779  0178CC  D7E8               	goto	l12285
 33780  0178CE  0A01               	xorlw	1	; case 3
 33781  0178D0  B4D8               	btfsc	status,2,c
 33782  0178D2  D7F1               	goto	l512
 33783  0178D4  D7F2               	goto	l513
 33784                           
 33785                           ; BSR set to: 1
 33786                           ;UART.c: 217: }
 33787  0178D6  D00C               	goto	l12293
 33788  0178D8                     l12291:
 33789                           
 33790                           ; BSR set to: 1
 33791                           ;UART.c: 218: else
 33792                           ;UART.c: 219: {
 33793                           ;UART.c: 220: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 33794  0178D8  C17C  F17D         	movff	UARTchar@NinethBit_override_data,??_UARTchar
 33795  0178DC  0E01               	movlw	1
 33796  0178DE  0101               	movlb	1	; () banked
 33797  0178E0  177D               	andwf	??_UARTchar& (0+255),f,b
 33798  0178E2                     L28:
 33799  0178E2  50AC               	movf	4012,w,c	;volatile
 33800  0178E4  0101               	movlb	1	; () banked
 33801  0178E6  197D               	xorwf	??_UARTchar& (0+255),w,b
 33802  0178E8  0BFE               	andlw	-2
 33803  0178EA  197D               	xorwf	??_UARTchar& (0+255),w,b
 33804  0178EC  6EAC               	movwf	4012,c	;volatile
 33805                           
 33806                           ; BSR set to: 1
 33807  0178EE  D000               	goto	l12293
 33808  0178F0                     l12293:
 33809                           
 33810                           ; BSR set to: 1
 33811                           ;UART.c: 221: }
 33812                           ;UART.c: 222: }
 33813                           ;UART.c: 223: TX_OLD = data;
 33814  0178F0  C17E  F0F2         	movff	UARTchar@data,_TX_OLD
 33815                           
 33816                           ; BSR set to: 1
 33817                           ;UART.c: 224: TXREG = data;
 33818  0178F4  C17E  FFAD         	movff	UARTchar@data,4013	;volatile
 33819                           
 33820                           ;UART.c: 225: while(!TXSTAbits.TRMT);
 33821  0178F8  D000               	goto	l515
 33822  0178FA                     l515:
 33823  0178FA  A2AC               	btfss	4012,1,c	;volatile
 33824  0178FC  D7FE               	goto	l515
 33825  0178FE  0012               	return		;funcret
 33826  017900                     __end_of_UARTchar:
 33827                           	opt stack 0
 33828                           tblptru	equ	0xFF8
 33829                           tblptrh	equ	0xFF7
 33830                           tblptrl	equ	0xFF6
 33831                           tablat	equ	0xFF5
 33832                           prodh	equ	0xFF4
 33833                           prodl	equ	0xFF3
 33834                           intcon	equ	0xFF2
 33835                           intcon2	equ	0xFF1
 33836                           indf0	equ	0xFEF
 33837                           postinc0	equ	0xFEE
 33838                           plusw0	equ	0xFEB
 33839                           fsr0h	equ	0xFEA
 33840                           fsr0l	equ	0xFE9
 33841                           wreg	equ	0xFE8
 33842                           indf1	equ	0xFE7
 33843                           postdec1	equ	0xFE5
 33844                           fsr1h	equ	0xFE2
 33845                           fsr1l	equ	0xFE1
 33846                           indf2	equ	0xFDF
 33847                           postinc2	equ	0xFDE
 33848                           postdec2	equ	0xFDD
 33849                           plusw2	equ	0xFDB
 33850                           fsr2h	equ	0xFDA
 33851                           fsr2l	equ	0xFD9
 33852                           status	equ	0xFD8
 33853                           
 33854 ;; *************** function _CheckSum_byte *****************
 33855 ;; Defined at:
 33856 ;;		line 359 in file "MISC.c"
 33857 ;; Parameters:    Size  Location     Type
 33858 ;;  This            2   14[BANK1 ] unsigned int 
 33859 ;;  Odd_Even        1   16[BANK1 ] unsigned char 
 33860 ;; Auto vars:     Size  Location     Type
 33861 ;;  ThisTemp        2   17[BANK1 ] unsigned int 
 33862 ;;  i               1   20[BANK1 ] unsigned char 
 33863 ;;  Parity          1   19[BANK1 ] unsigned char 
 33864 ;; Return value:  Size  Location     Type
 33865 ;;                  1    wreg      unsigned char 
 33866 ;; Registers used:
 33867 ;;		wreg, status,2, status,0
 33868 ;; Tracked objects:
 33869 ;;		On entry : 0/0
 33870 ;;		On exit  : 0/0
 33871 ;;		Unchanged: 0/0
 33872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33873 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 33874 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33876 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 33877 ;;Total ram usage:        7 bytes
 33878 ;; Hardware stack levels used:    1
 33879 ;; Hardware stack levels required when called:    7
 33880 ;; This function calls:
 33881 ;;		Nothing
 33882 ;; This function is called by:
 33883 ;;		_UARTchar
 33884 ;; This function uses a non-reentrant model
 33885 ;;
 33886                           
 33887                           	psect	text99
 33888  000626                     __ptext99:
 33889                           	opt stack 0
 33890  000626                     _CheckSum_byte:
 33891                           	opt stack 21
 33892                           
 33893                           ;MISC.c: 361: char i = 0;
 33894                           
 33895                           ;incstack = 0
 33896  000626  0E00               	movlw	0
 33897  000628  0101               	movlb	1	; () banked
 33898  00062A  6F7A               	movwf	CheckSum_byte@i& (0+255),b
 33899                           
 33900                           ;MISC.c: 362: unsigned char Parity = 0;
 33901  00062C  0E00               	movlw	0
 33902  00062E  0101               	movlb	1	; () banked
 33903  000630  6F79               	movwf	CheckSum_byte@Parity& (0+255),b
 33904                           
 33905                           ; BSR set to: 1
 33906                           ;MISC.c: 363: unsigned int ThisTemp = This;
 33907  000632  C174  F177         	movff	CheckSum_byte@This,CheckSum_byte@ThisTemp
 33908  000636  C175  F178         	movff	CheckSum_byte@This+1,CheckSum_byte@ThisTemp+1
 33909                           
 33910                           ;MISC.c: 365: for (i =0; i<8; i++)
 33911  00063A  0E00               	movlw	0
 33912  00063C  0101               	movlb	1	; () banked
 33913  00063E  6F7A               	movwf	CheckSum_byte@i& (0+255),b
 33914  000640                     l12163:
 33915                           
 33916                           ; BSR set to: 1
 33917  000640  0E07               	movlw	7
 33918  000642  0101               	movlb	1	; () banked
 33919  000644  657A               	cpfsgt	CheckSum_byte@i& (0+255),b
 33920  000646  D001               	goto	l404
 33921                           
 33922                           ; BSR set to: 1
 33923  000648  D00C               	goto	l12171
 33924  00064A                     l404:
 33925                           
 33926                           ; BSR set to: 1
 33927                           ;MISC.c: 366: {
 33928                           ;MISC.c: 367: if((ThisTemp & 0x01) == 1)
 33929  00064A  0101               	movlb	1	; () banked
 33930  00064C  A177               	btfss	CheckSum_byte@ThisTemp& (0+255),0,b
 33931  00064E  D002               	goto	l406
 33932                           
 33933                           ; BSR set to: 1
 33934                           ;MISC.c: 368: {
 33935                           ;MISC.c: 369: Parity++;
 33936  000650  0101               	movlb	1	; () banked
 33937  000652  2B79               	incf	CheckSum_byte@Parity& (0+255),f,b
 33938  000654                     l406:
 33939                           
 33940                           ; BSR set to: 1
 33941                           ;MISC.c: 370: }
 33942                           ;MISC.c: 371: ThisTemp >>= 1;
 33943  000654  0101               	movlb	1	; () banked
 33944  000656  90D8               	bcf	status,0,c
 33945  000658  3378               	rrcf	(CheckSum_byte@ThisTemp+1)& (0+255),f,b
 33946  00065A  3377               	rrcf	CheckSum_byte@ThisTemp& (0+255),f,b
 33947  00065C  0101               	movlb	1	; () banked
 33948  00065E  2B7A               	incf	CheckSum_byte@i& (0+255),f,b
 33949  000660  D7EF               	goto	l12163
 33950  000662                     l12171:
 33951                           
 33952                           ; BSR set to: 1
 33953                           ;MISC.c: 372: }
 33954                           ;MISC.c: 373: if(Odd_Even == 3)
 33955  000662  0E03               	movlw	3
 33956  000664  0101               	movlb	1	; () banked
 33957  000666  1976               	xorwf	CheckSum_byte@Odd_Even& (0+255),w,b
 33958  000668  A4D8               	btfss	status,2,c
 33959  00066A  D007               	goto	l407
 33960                           
 33961                           ; BSR set to: 1
 33962                           ;MISC.c: 374: {
 33963                           ;MISC.c: 375: if(Parity % 2 == 0)
 33964  00066C  0101               	movlb	1	; () banked
 33965  00066E  B179               	btfsc	CheckSum_byte@Parity& (0+255),0,b
 33966  000670  D002               	goto	l12179
 33967                           
 33968                           ; BSR set to: 1
 33969                           ;MISC.c: 376: {
 33970                           ;MISC.c: 377: return 1;
 33971  000672  0E01               	movlw	1
 33972                           
 33973                           ; BSR set to: 1
 33974  000674  0012               	return	
 33975  000676                     l12179:
 33976                           
 33977                           ; BSR set to: 1
 33978                           ;MISC.c: 378: }
 33979                           ;MISC.c: 379: return 0;
 33980  000676  0E00               	movlw	0
 33981                           
 33982                           ; BSR set to: 1
 33983                           ;MISC.c: 380: }
 33984                           
 33985                           ; BSR set to: 1
 33986  000678  0012               	return	
 33987  00067A                     l407:
 33988                           
 33989                           ; BSR set to: 1
 33990                           ;MISC.c: 381: else
 33991                           ;MISC.c: 382: {
 33992                           ;MISC.c: 383: if(Parity % 2 == 1)
 33993  00067A  0101               	movlb	1	; () banked
 33994  00067C  A179               	btfss	CheckSum_byte@Parity& (0+255),0,b
 33995  00067E  D002               	goto	l12189
 33996                           
 33997                           ; BSR set to: 1
 33998                           ;MISC.c: 384: {
 33999                           ;MISC.c: 385: return 1;
 34000  000680  0E01               	movlw	1
 34001                           
 34002                           ; BSR set to: 1
 34003  000682  0012               	return	
 34004  000684                     l12189:
 34005                           
 34006                           ; BSR set to: 1
 34007                           ;MISC.c: 386: }
 34008                           ;MISC.c: 387: return 0;
 34009  000684  0E00               	movlw	0
 34010                           
 34011                           ; BSR set to: 1
 34012  000686  0012               	return	
 34013                           
 34014                           ; BSR set to: 1
 34015                           
 34016                           ; BSR set to: 1
 34017  000688  0012               	return		;funcret
 34018  00068A                     __end_of_CheckSum_byte:
 34019                           	opt stack 0
 34020                           tblptru	equ	0xFF8
 34021                           tblptrh	equ	0xFF7
 34022                           tblptrl	equ	0xFF6
 34023                           tablat	equ	0xFF5
 34024                           prodh	equ	0xFF4
 34025                           prodl	equ	0xFF3
 34026                           intcon	equ	0xFF2
 34027                           intcon2	equ	0xFF1
 34028                           indf0	equ	0xFEF
 34029                           postinc0	equ	0xFEE
 34030                           plusw0	equ	0xFEB
 34031                           fsr0h	equ	0xFEA
 34032                           fsr0l	equ	0xFE9
 34033                           wreg	equ	0xFE8
 34034                           indf1	equ	0xFE7
 34035                           postdec1	equ	0xFE5
 34036                           fsr1h	equ	0xFE2
 34037                           fsr1l	equ	0xFE1
 34038                           indf2	equ	0xFDF
 34039                           postinc2	equ	0xFDE
 34040                           postdec2	equ	0xFDD
 34041                           plusw2	equ	0xFDB
 34042                           fsr2h	equ	0xFDA
 34043                           fsr2l	equ	0xFD9
 34044                           status	equ	0xFD8
 34045                           
 34046 ;; *************** function _ISNUMBER *****************
 34047 ;; Defined at:
 34048 ;;		line 396 in file "MISC.c"
 34049 ;; Parameters:    Size  Location     Type
 34050 ;;  ascii           1    wreg     unsigned char 
 34051 ;; Auto vars:     Size  Location     Type
 34052 ;;  ascii           1   14[BANK1 ] unsigned char 
 34053 ;; Return value:  Size  Location     Type
 34054 ;;                  1    wreg      unsigned char 
 34055 ;; Registers used:
 34056 ;;		wreg, status,2, status,0
 34057 ;; Tracked objects:
 34058 ;;		On entry : 0/0
 34059 ;;		On exit  : 0/0
 34060 ;;		Unchanged: 0/0
 34061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34063 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 34064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34065 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 34066 ;;Total ram usage:        1 bytes
 34067 ;; Hardware stack levels used:    1
 34068 ;; Hardware stack levels required when called:    7
 34069 ;; This function calls:
 34070 ;;		Nothing
 34071 ;; This function is called by:
 34072 ;;		_Command
 34073 ;; This function uses a non-reentrant model
 34074 ;;
 34075                           
 34076                           	psect	text100
 34077  000FA4                     __ptext100:
 34078                           	opt stack 0
 34079  000FA4                     _ISNUMBER:
 34080                           	opt stack 22
 34081                           
 34082                           ; BSR set to: 1
 34083                           ;incstack = 0
 34084                           ;ISNUMBER@ascii stored from wreg
 34085  000FA4  0101               	movlb	1	; () banked
 34086  000FA6  6F74               	movwf	ISNUMBER@ascii& (0+255),b
 34087                           
 34088                           ; BSR set to: 1
 34089                           ;MISC.c: 398: if(ascii >= '0' && ascii <='9')
 34090  000FA8  0E2F               	movlw	47
 34091  000FAA  0101               	movlb	1	; () banked
 34092  000FAC  6574               	cpfsgt	ISNUMBER@ascii& (0+255),b
 34093  000FAE  D006               	goto	l14047
 34094                           
 34095                           ; BSR set to: 1
 34096  000FB0  0E3A               	movlw	58
 34097  000FB2  0101               	movlb	1	; () banked
 34098  000FB4  6174               	cpfslt	ISNUMBER@ascii& (0+255),b
 34099  000FB6  D002               	goto	l14047
 34100                           
 34101                           ; BSR set to: 1
 34102                           ;MISC.c: 399: {
 34103                           ;MISC.c: 400: return 1;
 34104  000FB8  0E01               	movlw	1
 34105                           
 34106                           ; BSR set to: 1
 34107                           ;MISC.c: 401: }
 34108                           
 34109                           ; BSR set to: 1
 34110  000FBA  0012               	return	
 34111  000FBC                     l14047:
 34112                           
 34113                           ; BSR set to: 1
 34114                           ;MISC.c: 402: else
 34115                           ;MISC.c: 403: {
 34116                           ;MISC.c: 404: return 0;
 34117  000FBC  0E00               	movlw	0
 34118                           
 34119                           ; BSR set to: 1
 34120  000FBE  0012               	return	
 34121                           
 34122                           ; BSR set to: 1
 34123                           
 34124                           ; BSR set to: 1
 34125  000FC0  0012               	return		;funcret
 34126  000FC2                     __end_of_ISNUMBER:
 34127                           	opt stack 0
 34128                           tblptru	equ	0xFF8
 34129                           tblptrh	equ	0xFF7
 34130                           tblptrl	equ	0xFF6
 34131                           tablat	equ	0xFF5
 34132                           prodh	equ	0xFF4
 34133                           prodl	equ	0xFF3
 34134                           intcon	equ	0xFF2
 34135                           intcon2	equ	0xFF1
 34136                           indf0	equ	0xFEF
 34137                           postinc0	equ	0xFEE
 34138                           plusw0	equ	0xFEB
 34139                           fsr0h	equ	0xFEA
 34140                           fsr0l	equ	0xFE9
 34141                           wreg	equ	0xFE8
 34142                           indf1	equ	0xFE7
 34143                           postdec1	equ	0xFE5
 34144                           fsr1h	equ	0xFE2
 34145                           fsr1l	equ	0xFE1
 34146                           indf2	equ	0xFDF
 34147                           postinc2	equ	0xFDE
 34148                           postdec2	equ	0xFDD
 34149                           plusw2	equ	0xFDB
 34150                           fsr2h	equ	0xFDA
 34151                           fsr2l	equ	0xFD9
 34152                           status	equ	0xFD8
 34153                           
 34154 ;; *************** function _GetEnteredNumber *****************
 34155 ;; Defined at:
 34156 ;;		line 216 in file "MISC.c"
 34157 ;; Parameters:    Size  Location     Type
 34158 ;;  This            2   26[BANK1 ] PTR unsigned char 
 34159 ;;		 -> Rxdata(100), 
 34160 ;; Auto vars:     Size  Location     Type
 34161 ;;  temp            4   37[BANK1 ] long 
 34162 ;;  negative        1   36[BANK1 ] unsigned char 
 34163 ;;  i               1   35[BANK1 ] unsigned char 
 34164 ;; Return value:  Size  Location     Type
 34165 ;;                  4   26[BANK1 ] long 
 34166 ;; Registers used:
 34167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34168 ;; Tracked objects:
 34169 ;;		On entry : 0/0
 34170 ;;		On exit  : 0/0
 34171 ;;		Unchanged: 0/0
 34172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34173 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 34174 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 34175 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 34176 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 34177 ;;Total ram usage:       15 bytes
 34178 ;; Hardware stack levels used:    1
 34179 ;; Hardware stack levels required when called:    8
 34180 ;; This function calls:
 34181 ;;		___lmul
 34182 ;; This function is called by:
 34183 ;;		_Command
 34184 ;; This function uses a non-reentrant model
 34185 ;;
 34186                           
 34187                           	psect	text101
 34188  015052                     __ptext101:
 34189                           	opt stack 0
 34190  015052                     _GetEnteredNumber:
 34191                           	opt stack 21
 34192                           
 34193                           ;MISC.c: 218: unsigned char i =0;
 34194                           
 34195                           ; BSR set to: 1
 34196                           ;incstack = 0
 34197  015052  0E00               	movlw	0
 34198  015054  0101               	movlb	1	; () banked
 34199  015056  6F89               	movwf	GetEnteredNumber@i& (0+255),b
 34200                           
 34201                           ;MISC.c: 219: long temp =0;
 34202  015058  0E00               	movlw	0
 34203  01505A  0101               	movlb	1	; () banked
 34204  01505C  6F8B               	movwf	GetEnteredNumber@temp& (0+255),b
 34205  01505E  0E00               	movlw	0
 34206  015060  6F8C               	movwf	(GetEnteredNumber@temp+1)& (0+255),b
 34207  015062  0E00               	movlw	0
 34208  015064  6F8D               	movwf	(GetEnteredNumber@temp+2)& (0+255),b
 34209  015066  0E00               	movlw	0
 34210  015068  6F8E               	movwf	(GetEnteredNumber@temp+3)& (0+255),b
 34211                           
 34212                           ;MISC.c: 220: unsigned char negative =0;
 34213  01506A  0E00               	movlw	0
 34214  01506C  0101               	movlb	1	; () banked
 34215  01506E  6F8A               	movwf	GetEnteredNumber@negative& (0+255),b
 34216                           
 34217                           ;MISC.c: 221: while(*This != '=' && *This != 0)
 34218  015070  D004               	goto	l13895
 34219  015072                     l13893:
 34220                           
 34221                           ; BSR set to: 1
 34222                           ;MISC.c: 222: {
 34223                           ;MISC.c: 223: This++;
 34224  015072  0101               	movlb	1	; () banked
 34225  015074  4B80               	infsnz	GetEnteredNumber@This& (0+255),f,b
 34226  015076  2B81               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 34227  015078  D000               	goto	l13895
 34228  01507A                     l13895:
 34229                           
 34230                           ; BSR set to: 1
 34231  01507A  C180  FFD9         	movff	GetEnteredNumber@This,fsr2l
 34232  01507E  C181  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 34233  015082  0E3D               	movlw	61
 34234  015084  18DE               	xorwf	postinc2,w,c
 34235  015086  B4D8               	btfsc	status,2,c
 34236  015088  D009               	goto	l13899
 34237                           
 34238                           ; BSR set to: 1
 34239  01508A  C180  FFD9         	movff	GetEnteredNumber@This,fsr2l
 34240  01508E  C181  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 34241  015092  50DF               	movf	indf2,w,c
 34242  015094  B4D8               	btfsc	status,2,c
 34243  015096  D002               	goto	l13899
 34244  015098  D7EC               	goto	l13893
 34245                           
 34246                           ; BSR set to: 1
 34247  01509A  D000               	goto	l13899
 34248  01509C                     l13899:
 34249                           
 34250                           ; BSR set to: 1
 34251                           ;MISC.c: 225: }
 34252                           ;MISC.c: 226: if(*This == 0)
 34253  01509C  C180  FFD9         	movff	GetEnteredNumber@This,fsr2l
 34254  0150A0  C181  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 34255  0150A4  50DF               	movf	indf2,w,c
 34256  0150A6  A4D8               	btfss	status,2,c
 34257  0150A8  D00A               	goto	l13905
 34258                           
 34259                           ; BSR set to: 1
 34260                           ;MISC.c: 227: {
 34261                           ;MISC.c: 228: return 2147483647L;
 34262  0150AA  0EFF               	movlw	255
 34263  0150AC  0101               	movlb	1	; () banked
 34264  0150AE  6F80               	movwf	?_GetEnteredNumber& (0+255),b
 34265  0150B0  0EFF               	movlw	255
 34266  0150B2  6F81               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 34267  0150B4  0EFF               	movlw	255
 34268  0150B6  6F82               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 34269  0150B8  0E7F               	movlw	127
 34270  0150BA  6F83               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 34271                           
 34272                           ; BSR set to: 1
 34273  0150BC  0012               	return	
 34274  0150BE                     l13905:
 34275                           
 34276                           ; BSR set to: 1
 34277                           ;MISC.c: 229: }
 34278                           ;MISC.c: 230: This++;
 34279  0150BE  0101               	movlb	1	; () banked
 34280  0150C0  4B80               	infsnz	GetEnteredNumber@This& (0+255),f,b
 34281  0150C2  2B81               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 34282                           
 34283                           ; BSR set to: 1
 34284                           ;MISC.c: 231: if(*This == ' ')
 34285  0150C4  C180  FFD9         	movff	GetEnteredNumber@This,fsr2l
 34286  0150C8  C181  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 34287  0150CC  0E20               	movlw	32
 34288  0150CE  18DE               	xorwf	postinc2,w,c
 34289  0150D0  B4D8               	btfsc	status,2,c
 34290  0150D2  D07E               	goto	l13943
 34291                           
 34292                           ; BSR set to: 1
 34293                           ;MISC.c: 236: else if (*This == '=')
 34294                           
 34295                           ; BSR set to: 1
 34296                           
 34297                           ;MISC.c: 235: }
 34298                           
 34299                           ; BSR set to: 1
 34300                           ;MISC.c: 232: {
 34301                           ;MISC.c: 233: This++;
 34302  0150D4  C180  FFD9         	movff	GetEnteredNumber@This,fsr2l
 34303  0150D8  C181  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 34304  0150DC  0E3D               	movlw	61
 34305  0150DE  18DE               	xorwf	postinc2,w,c
 34306  0150E0  A4D8               	btfss	status,2,c
 34307  0150E2  D00B               	goto	l13919
 34308                           
 34309                           ; BSR set to: 1
 34310                           ;MISC.c: 237: {
 34311                           ;MISC.c: 238: return 2147483646L;
 34312  0150E4  0EFE               	movlw	254
 34313  0150E6  0101               	movlb	1	; () banked
 34314  0150E8  6F80               	movwf	?_GetEnteredNumber& (0+255),b
 34315  0150EA  0EFF               	movlw	255
 34316  0150EC  6F81               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 34317  0150EE  0EFF               	movlw	255
 34318  0150F0  6F82               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 34319  0150F2  0E7F               	movlw	127
 34320  0150F4  6F83               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 34321                           
 34322                           ; BSR set to: 1
 34323  0150F6  0012               	return	
 34324                           
 34325                           ; BSR set to: 1
 34326                           ;MISC.c: 239: }
 34327  0150F8  D06F               	goto	l13945
 34328  0150FA                     l13919:
 34329                           
 34330                           ; BSR set to: 1
 34331                           ;MISC.c: 240: else if(*This == '-')
 34332  0150FA  C180  FFD9         	movff	GetEnteredNumber@This,fsr2l
 34333  0150FE  C181  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 34334  015102  0E2D               	movlw	45
 34335  015104  18DE               	xorwf	postinc2,w,c
 34336  015106  A4D8               	btfss	status,2,c
 34337  015108  D004               	goto	l13925
 34338                           
 34339                           ; BSR set to: 1
 34340                           ;MISC.c: 241: {
 34341                           ;MISC.c: 242: negative = 1;
 34342  01510A  0E01               	movlw	1
 34343  01510C  0101               	movlb	1	; () banked
 34344  01510E  6F8A               	movwf	GetEnteredNumber@negative& (0+255),b
 34345  015110  D05F               	goto	l13943
 34346  015112                     l13925:
 34347                           
 34348                           ; BSR set to: 1
 34349                           ;MISC.c: 246: else if(*This == 0)
 34350  015112  C180  FFD9         	movff	GetEnteredNumber@This,fsr2l
 34351  015116  C181  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 34352  01511A  50DF               	movf	indf2,w,c
 34353  01511C  A4D8               	btfss	status,2,c
 34354  01511E  D05C               	goto	l13945
 34355                           
 34356                           ; BSR set to: 1
 34357                           ;MISC.c: 247: {
 34358                           ;MISC.c: 248: return 2147483645L;
 34359  015120  0EFD               	movlw	253
 34360  015122  D7E1               	goto	L29
 34361                           
 34362                           ; BSR set to: 1
 34363  015124  0012               	return	
 34364                           
 34365                           ; BSR set to: 1
 34366                           ;MISC.c: 249: }
 34367                           ;MISC.c: 250: while(*This >=48 && *This <= 57)
 34368                           
 34369                           ; BSR set to: 1
 34370                           
 34371                           ; BSR set to: 1
 34372                           
 34373                           ; BSR set to: 1
 34374  015126  D058               	goto	l13945
 34375  015128                     l13931:
 34376                           
 34377                           ; BSR set to: 1
 34378                           ;MISC.c: 251: {
 34379                           ;MISC.c: 252: temp = temp * 10;
 34380  015128  C18B  F174         	movff	GetEnteredNumber@temp,___lmul@multiplier
 34381  01512C  C18C  F175         	movff	GetEnteredNumber@temp+1,___lmul@multiplier+1
 34382  015130  C18D  F176         	movff	GetEnteredNumber@temp+2,___lmul@multiplier+2
 34383  015134  C18E  F177         	movff	GetEnteredNumber@temp+3,___lmul@multiplier+3
 34384  015138  0E0A               	movlw	10
 34385  01513A  0101               	movlb	1	; () banked
 34386  01513C  6F78               	movwf	___lmul@multiplicand& (0+255),b
 34387  01513E  0E00               	movlw	0
 34388  015140  6F79               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34389  015142  0E00               	movlw	0
 34390  015144  6F7A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34391  015146  0E00               	movlw	0
 34392  015148  6F7B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34393  01514A  ECF8  F0BD         	call	___lmul	;wreg free
 34394  01514E  C174  F18B         	movff	?___lmul,GetEnteredNumber@temp
 34395  015152  C175  F18C         	movff	?___lmul+1,GetEnteredNumber@temp+1
 34396  015156  C176  F18D         	movff	?___lmul+2,GetEnteredNumber@temp+2
 34397  01515A  C177  F18E         	movff	?___lmul+3,GetEnteredNumber@temp+3
 34398                           
 34399                           ;MISC.c: 253: temp += *This - 48;
 34400  01515E  C180  FFD9         	movff	GetEnteredNumber@This,fsr2l
 34401  015162  C181  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 34402  015166  50DF               	movf	indf2,w,c
 34403  015168  0101               	movlb	1	; () banked
 34404  01516A  6F84               	movwf	??_GetEnteredNumber& (0+255),b
 34405  01516C  0ED0               	movlw	208
 34406  01516E  0101               	movlb	1	; () banked
 34407  015170  2584               	addwf	??_GetEnteredNumber& (0+255),w,b
 34408  015172  0101               	movlb	1	; () banked
 34409  015174  6F85               	movwf	(??_GetEnteredNumber+1)& (0+255),b
 34410  015176  0101               	movlb	1	; () banked
 34411  015178  6B86               	clrf	(??_GetEnteredNumber+2)& (0+255),b
 34412  01517A  0EFF               	movlw	255
 34413  01517C  2386               	addwfc	(??_GetEnteredNumber+2)& (0+255),f,b
 34414  01517E  0101               	movlb	1	; () banked
 34415  015180  6B87               	clrf	(??_GetEnteredNumber+3)& (0+255),b
 34416  015182  0101               	movlb	1	; () banked
 34417  015184  BF86               	btfsc	(??_GetEnteredNumber+2)& (0+255),7,b
 34418  015186  0787               	decf	(??_GetEnteredNumber+3)& (0+255),f,b
 34419  015188  0101               	movlb	1	; () banked
 34420  01518A  5187               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 34421  01518C  0101               	movlb	1	; () banked
 34422  01518E  6F88               	movwf	(??_GetEnteredNumber+4)& (0+255),b
 34423  015190  0101               	movlb	1	; () banked
 34424  015192  5185               	movf	(??_GetEnteredNumber+1)& (0+255),w,b
 34425  015194  0101               	movlb	1	; () banked
 34426  015196  278B               	addwf	GetEnteredNumber@temp& (0+255),f,b
 34427  015198  0101               	movlb	1	; () banked
 34428  01519A  5186               	movf	(??_GetEnteredNumber+2)& (0+255),w,b
 34429  01519C  0101               	movlb	1	; () banked
 34430  01519E  238C               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 34431  0151A0  0101               	movlb	1	; () banked
 34432  0151A2  5187               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 34433  0151A4  0101               	movlb	1	; () banked
 34434  0151A6  238D               	addwfc	(GetEnteredNumber@temp+2)& (0+255),f,b
 34435  0151A8  0101               	movlb	1	; () banked
 34436  0151AA  5188               	movf	(??_GetEnteredNumber+4)& (0+255),w,b
 34437  0151AC  0101               	movlb	1	; () banked
 34438  0151AE  238E               	addwfc	(GetEnteredNumber@temp+3)& (0+255),f,b
 34439                           
 34440                           ; BSR set to: 1
 34441                           ;MISC.c: 254: i++;
 34442  0151B0  0101               	movlb	1	; () banked
 34443  0151B2  2B89               	incf	GetEnteredNumber@i& (0+255),f,b
 34444                           
 34445                           ; BSR set to: 1
 34446                           ;MISC.c: 255: if(i>32)
 34447  0151B4  0E20               	movlw	32
 34448  0151B6  0101               	movlb	1	; () banked
 34449  0151B8  6589               	cpfsgt	GetEnteredNumber@i& (0+255),b
 34450  0151BA  D00A               	goto	l13943
 34451                           
 34452                           ; BSR set to: 1
 34453                           ;MISC.c: 256: {
 34454                           ;MISC.c: 257: return 2147483644L;
 34455  0151BC  0EFC               	movlw	252
 34456  0151BE  0101               	movlb	1	; () banked
 34457  0151C0  6F80               	movwf	?_GetEnteredNumber& (0+255),b
 34458  0151C2  0EFF               	movlw	255
 34459  0151C4  6F81               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 34460  0151C6  0EFF               	movlw	255
 34461  0151C8  6F82               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 34462  0151CA  0E7F               	movlw	127
 34463  0151CC  6F83               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 34464                           
 34465                           ; BSR set to: 1
 34466  0151CE  0012               	return	
 34467  0151D0                     l13943:
 34468                           
 34469                           ; BSR set to: 1
 34470                           ;MISC.c: 258: }
 34471                           ;MISC.c: 259: This++;
 34472  0151D0  0101               	movlb	1	; () banked
 34473  0151D2  4B80               	infsnz	GetEnteredNumber@This& (0+255),f,b
 34474  0151D4  2B81               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 34475  0151D6  D000               	goto	l13945
 34476  0151D8                     l13945:
 34477                           
 34478                           ; BSR set to: 1
 34479  0151D8  C180  FFD9         	movff	GetEnteredNumber@This,fsr2l
 34480  0151DC  C181  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 34481  0151E0  0E2F               	movlw	47
 34482  0151E2  64DF               	cpfsgt	indf2,c
 34483  0151E4  D008               	goto	l13949
 34484                           
 34485                           ; BSR set to: 1
 34486  0151E6  C180  FFD9         	movff	GetEnteredNumber@This,fsr2l
 34487  0151EA  C181  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 34488  0151EE  0E39               	movlw	57
 34489  0151F0  64DF               	cpfsgt	indf2,c
 34490  0151F2  D79A               	goto	l13931
 34491                           
 34492                           ; BSR set to: 1
 34493  0151F4  D000               	goto	l13949
 34494  0151F6                     l13949:
 34495                           
 34496                           ; BSR set to: 1
 34497                           ;MISC.c: 260: }
 34498                           ;MISC.c: 261: if(negative)
 34499  0151F6  0101               	movlb	1	; () banked
 34500  0151F8  518A               	movf	GetEnteredNumber@negative& (0+255),w,b
 34501  0151FA  0101               	movlb	1	; () banked
 34502  0151FC  B4D8               	btfsc	status,2,c
 34503  0151FE  D00A               	goto	l13953
 34504                           
 34505                           ; BSR set to: 1
 34506                           ;MISC.c: 262: {
 34507                           ;MISC.c: 263: temp = (temp * -1);
 34508  015200  0101               	movlb	1	; () banked
 34509  015202  1F8E               	comf	(GetEnteredNumber@temp+3)& (0+255),f,b
 34510  015204  1F8D               	comf	(GetEnteredNumber@temp+2)& (0+255),f,b
 34511  015206  1F8C               	comf	(GetEnteredNumber@temp+1)& (0+255),f,b
 34512  015208  6D8B               	negf	GetEnteredNumber@temp& (0+255),b
 34513  01520A  0E00               	movlw	0
 34514  01520C  238C               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 34515  01520E  238D               	addwfc	(GetEnteredNumber@temp+2)& (0+255),f,b
 34516  015210  238E               	addwfc	(GetEnteredNumber@temp+3)& (0+255),f,b
 34517  015212  D000               	goto	l13953
 34518  015214                     l13953:
 34519                           
 34520                           ; BSR set to: 1
 34521                           ;MISC.c: 264: }
 34522                           ;MISC.c: 265: return temp;
 34523  015214  C18B  F180         	movff	GetEnteredNumber@temp,?_GetEnteredNumber
 34524  015218  C18C  F181         	movff	GetEnteredNumber@temp+1,?_GetEnteredNumber+1
 34525  01521C  C18D  F182         	movff	GetEnteredNumber@temp+2,?_GetEnteredNumber+2
 34526  015220  C18E  F183         	movff	GetEnteredNumber@temp+3,?_GetEnteredNumber+3
 34527  015224  0012               	return	
 34528                           
 34529                           ; BSR set to: 1
 34530                           
 34531                           ; BSR set to: 1
 34532  015226  0012               	return		;funcret
 34533  015228                     __end_of_GetEnteredNumber:
 34534                           	opt stack 0
 34535                           tblptru	equ	0xFF8
 34536                           tblptrh	equ	0xFF7
 34537                           tblptrl	equ	0xFF6
 34538                           tablat	equ	0xFF5
 34539                           prodh	equ	0xFF4
 34540                           prodl	equ	0xFF3
 34541                           intcon	equ	0xFF2
 34542                           intcon2	equ	0xFF1
 34543                           indf0	equ	0xFEF
 34544                           postinc0	equ	0xFEE
 34545                           plusw0	equ	0xFEB
 34546                           fsr0h	equ	0xFEA
 34547                           fsr0l	equ	0xFE9
 34548                           wreg	equ	0xFE8
 34549                           indf1	equ	0xFE7
 34550                           postdec1	equ	0xFE5
 34551                           fsr1h	equ	0xFE2
 34552                           fsr1l	equ	0xFE1
 34553                           indf2	equ	0xFDF
 34554                           postinc2	equ	0xFDE
 34555                           postdec2	equ	0xFDD
 34556                           plusw2	equ	0xFDB
 34557                           fsr2h	equ	0xFDA
 34558                           fsr2l	equ	0xFD9
 34559                           status	equ	0xFD8
 34560                           
 34561 ;; *************** function ___lmul *****************
 34562 ;; Defined at:
 34563 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 34564 ;; Parameters:    Size  Location     Type
 34565 ;;  multiplier      4   14[BANK1 ] unsigned long 
 34566 ;;  multiplicand    4   18[BANK1 ] unsigned long 
 34567 ;; Auto vars:     Size  Location     Type
 34568 ;;  product         4   22[BANK1 ] unsigned long 
 34569 ;; Return value:  Size  Location     Type
 34570 ;;                  4   14[BANK1 ] unsigned long 
 34571 ;; Registers used:
 34572 ;;		wreg, status,2, status,0
 34573 ;; Tracked objects:
 34574 ;;		On entry : 0/0
 34575 ;;		On exit  : 0/0
 34576 ;;		Unchanged: 0/0
 34577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34578 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 34579 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 34580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34581 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 34582 ;;Total ram usage:       12 bytes
 34583 ;; Hardware stack levels used:    1
 34584 ;; Hardware stack levels required when called:    7
 34585 ;; This function calls:
 34586 ;;		Nothing
 34587 ;; This function is called by:
 34588 ;;		_GetEnteredNumber
 34589 ;; This function uses a non-reentrant model
 34590 ;;
 34591                           
 34592                           	psect	text102
 34593  017BF0                     __ptext102:
 34594                           	opt stack 0
 34595  017BF0                     ___lmul:
 34596                           	opt stack 21
 34597                           
 34598                           ; BSR set to: 1
 34599                           ;incstack = 0
 34600  017BF0  0E00               	movlw	0
 34601  017BF2  0101               	movlb	1	; () banked
 34602  017BF4  6F7C               	movwf	___lmul@product& (0+255),b
 34603  017BF6  0E00               	movlw	0
 34604  017BF8  6F7D               	movwf	(___lmul@product+1)& (0+255),b
 34605  017BFA  0E00               	movlw	0
 34606  017BFC  6F7E               	movwf	(___lmul@product+2)& (0+255),b
 34607  017BFE  0E00               	movlw	0
 34608  017C00  6F7F               	movwf	(___lmul@product+3)& (0+255),b
 34609  017C02  D000               	goto	l13437
 34610  017C04                     l13437:
 34611                           
 34612                           ; BSR set to: 1
 34613  017C04  0101               	movlb	1	; () banked
 34614  017C06  A174               	btfss	___lmul@multiplier& (0+255),0,b
 34615  017C08  D011               	goto	l13441
 34616                           
 34617                           ; BSR set to: 1
 34618  017C0A  0101               	movlb	1	; () banked
 34619  017C0C  5178               	movf	___lmul@multiplicand& (0+255),w,b
 34620  017C0E  0101               	movlb	1	; () banked
 34621  017C10  277C               	addwf	___lmul@product& (0+255),f,b
 34622  017C12  0101               	movlb	1	; () banked
 34623  017C14  5179               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 34624  017C16  0101               	movlb	1	; () banked
 34625  017C18  237D               	addwfc	(___lmul@product+1)& (0+255),f,b
 34626  017C1A  0101               	movlb	1	; () banked
 34627  017C1C  517A               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 34628  017C1E  0101               	movlb	1	; () banked
 34629  017C20  237E               	addwfc	(___lmul@product+2)& (0+255),f,b
 34630  017C22  0101               	movlb	1	; () banked
 34631  017C24  517B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 34632  017C26  0101               	movlb	1	; () banked
 34633  017C28  237F               	addwfc	(___lmul@product+3)& (0+255),f,b
 34634  017C2A  D000               	goto	l13441
 34635  017C2C                     l13441:
 34636                           
 34637                           ; BSR set to: 1
 34638  017C2C  0101               	movlb	1	; () banked
 34639  017C2E  90D8               	bcf	status,0,c
 34640  017C30  3778               	rlcf	___lmul@multiplicand& (0+255),f,b
 34641  017C32  3779               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 34642  017C34  377A               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 34643  017C36  377B               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 34644                           
 34645                           ; BSR set to: 1
 34646  017C38  0101               	movlb	1	; () banked
 34647  017C3A  90D8               	bcf	status,0,c
 34648  017C3C  3377               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 34649  017C3E  3376               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 34650  017C40  3375               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 34651  017C42  3374               	rrcf	___lmul@multiplier& (0+255),f,b
 34652  017C44  0101               	movlb	1	; () banked
 34653  017C46  5174               	movf	___lmul@multiplier& (0+255),w,b
 34654  017C48  0101               	movlb	1	; () banked
 34655  017C4A  1175               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 34656  017C4C  0101               	movlb	1	; () banked
 34657  017C4E  1176               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 34658  017C50  0101               	movlb	1	; () banked
 34659  017C52  1177               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 34660  017C54  A4D8               	btfss	status,2,c
 34661  017C56  D7D6               	goto	l13437
 34662                           
 34663                           ; BSR set to: 1
 34664  017C58  C17C  F174         	movff	___lmul@product,?___lmul
 34665  017C5C  C17D  F175         	movff	___lmul@product+1,?___lmul+1
 34666  017C60  C17E  F176         	movff	___lmul@product+2,?___lmul+2
 34667  017C64  C17F  F177         	movff	___lmul@product+3,?___lmul+3
 34668                           
 34669                           ; BSR set to: 1
 34670  017C68  0012               	return		;funcret
 34671  017C6A                     __end_of___lmul:
 34672                           	opt stack 0
 34673                           tblptru	equ	0xFF8
 34674                           tblptrh	equ	0xFF7
 34675                           tblptrl	equ	0xFF6
 34676                           tablat	equ	0xFF5
 34677                           prodh	equ	0xFF4
 34678                           prodl	equ	0xFF3
 34679                           intcon	equ	0xFF2
 34680                           intcon2	equ	0xFF1
 34681                           indf0	equ	0xFEF
 34682                           postinc0	equ	0xFEE
 34683                           plusw0	equ	0xFEB
 34684                           fsr0h	equ	0xFEA
 34685                           fsr0l	equ	0xFE9
 34686                           wreg	equ	0xFE8
 34687                           indf1	equ	0xFE7
 34688                           postdec1	equ	0xFE5
 34689                           fsr1h	equ	0xFE2
 34690                           fsr1l	equ	0xFE1
 34691                           indf2	equ	0xFDF
 34692                           postinc2	equ	0xFDE
 34693                           postdec2	equ	0xFDD
 34694                           plusw2	equ	0xFDB
 34695                           fsr2h	equ	0xFDA
 34696                           fsr2l	equ	0xFD9
 34697                           status	equ	0xFD8
 34698                           
 34699 ;; *************** function _GetBaud *****************
 34700 ;; Defined at:
 34701 ;;		line 387 in file "UART.c"
 34702 ;; Parameters:    Size  Location     Type
 34703 ;;		None
 34704 ;; Auto vars:     Size  Location     Type
 34705 ;;		None
 34706 ;; Return value:  Size  Location     Type
 34707 ;;                  4   14[BANK1 ] unsigned long 
 34708 ;; Registers used:
 34709 ;;		None
 34710 ;; Tracked objects:
 34711 ;;		On entry : 0/0
 34712 ;;		On exit  : 0/0
 34713 ;;		Unchanged: 0/0
 34714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34715 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 34716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34718 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 34719 ;;Total ram usage:        4 bytes
 34720 ;; Hardware stack levels used:    1
 34721 ;; Hardware stack levels required when called:    7
 34722 ;; This function calls:
 34723 ;;		Nothing
 34724 ;; This function is called by:
 34725 ;;		_Command
 34726 ;; This function uses a non-reentrant model
 34727 ;;
 34728                           
 34729                           	psect	text103
 34730  0010BC                     __ptext103:
 34731                           	opt stack 0
 34732  0010BC                     _GetBaud:
 34733                           	opt stack 22
 34734                           
 34735                           ;UART.c: 389: return Global.Baud;
 34736                           
 34737                           ; BSR set to: 1
 34738                           ;incstack = 0
 34739  0010BC  C100  F174         	movff	_Global,?_GetBaud
 34740  0010C0  C101  F175         	movff	_Global+1,?_GetBaud+1
 34741  0010C4  C102  F176         	movff	_Global+2,?_GetBaud+2
 34742  0010C8  C103  F177         	movff	_Global+3,?_GetBaud+3
 34743  0010CC  0012               	return		;funcret
 34744  0010CE                     __end_of_GetBaud:
 34745                           	opt stack 0
 34746                           tblptru	equ	0xFF8
 34747                           tblptrh	equ	0xFF7
 34748                           tblptrl	equ	0xFF6
 34749                           tablat	equ	0xFF5
 34750                           prodh	equ	0xFF4
 34751                           prodl	equ	0xFF3
 34752                           intcon	equ	0xFF2
 34753                           intcon2	equ	0xFF1
 34754                           indf0	equ	0xFEF
 34755                           postinc0	equ	0xFEE
 34756                           plusw0	equ	0xFEB
 34757                           fsr0h	equ	0xFEA
 34758                           fsr0l	equ	0xFE9
 34759                           wreg	equ	0xFE8
 34760                           indf1	equ	0xFE7
 34761                           postdec1	equ	0xFE5
 34762                           fsr1h	equ	0xFE2
 34763                           fsr1l	equ	0xFE1
 34764                           indf2	equ	0xFDF
 34765                           postinc2	equ	0xFDE
 34766                           postdec2	equ	0xFDD
 34767                           plusw2	equ	0xFDB
 34768                           fsr2h	equ	0xFDA
 34769                           fsr2l	equ	0xFD9
 34770                           status	equ	0xFD8
 34771                           
 34772 ;; *************** function _low_isr *****************
 34773 ;; Defined at:
 34774 ;;		line 79 in file "interrupts.c"
 34775 ;; Parameters:    Size  Location     Type
 34776 ;;		None
 34777 ;; Auto vars:     Size  Location     Type
 34778 ;;  TEMP_Rxdata   100   21[BANK0 ] unsigned char [100]
 34779 ;;  LCD_TEMP       16  121[BANK0 ] unsigned char [16]
 34780 ;;  i               2  137[BANK0 ] int 
 34781 ;;  rx              1  141[BANK0 ] unsigned char 
 34782 ;;  j               1  140[BANK0 ] unsigned char 
 34783 ;;  IRpin           1  139[BANK0 ] unsigned char 
 34784 ;; Return value:  Size  Location     Type
 34785 ;;		None               void
 34786 ;; Registers used:
 34787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34788 ;; Tracked objects:
 34789 ;;		On entry : 0/0
 34790 ;;		On exit  : 0/0
 34791 ;;		Unchanged: 0/0
 34792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34794 ;;      Locals:         0     121       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34795 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34796 ;;      Totals:         0     142       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34797 ;;Total ram usage:      142 bytes
 34798 ;; Hardware stack levels used:    1
 34799 ;; Hardware stack levels required when called:    6
 34800 ;; This function calls:
 34801 ;;		_IRrawToNEC
 34802 ;;		_IsPrintableASCII
 34803 ;;		_Reset_Timer0
 34804 ;;		_UseIRCode
 34805 ;;		i1_BufferCopy
 34806 ;;		i1_ClearLCD
 34807 ;;		i1_LCDPrintChar
 34808 ;;		i1_LCDPrintString
 34809 ;;		i1_LCDScreenUpdate
 34810 ;;		i1_ReadIRpin
 34811 ;;		i1_ReadUSART
 34812 ;;		i1_SetLCDcursor
 34813 ;;		i1_UARTchar
 34814 ;;		i1_UARTstring
 34815 ;;		i1_cleanBuffer
 34816 ;;		i1_cleanBuffer16bit
 34817 ;; This function is called by:
 34818 ;;		Interrupt level 1
 34819 ;; This function uses a non-reentrant model
 34820 ;;
 34821                           
 34822                           	psect	intcodelo
 34823  000018                     __pintcodelo:
 34824                           	opt stack 0
 34825  000018                     _low_isr:
 34826                           	opt stack 18
 34827                           
 34828                           ;incstack = 0
 34829  000018  CFD8 F064          	movff	status,??_low_isr+4
 34830  00001C  CFE8 F065          	movff	wreg,??_low_isr+5
 34831  000020  CFE0 F066          	movff	bsr,??_low_isr+6
 34832  000024  CFFA F067          	movff	pclath,??_low_isr+7
 34833  000028  CFFB F068          	movff	pclatu,??_low_isr+8
 34834  00002C  CFE9 F069          	movff	fsr0l,??_low_isr+9
 34835  000030  CFEA F06A          	movff	fsr0h,??_low_isr+10
 34836  000034  CFE1 F06B          	movff	fsr1l,??_low_isr+11
 34837  000038  CFE2 F06C          	movff	fsr1h,??_low_isr+12
 34838  00003C  CFD9 F06D          	movff	fsr2l,??_low_isr+13
 34839  000040  CFDA F06E          	movff	fsr2h,??_low_isr+14
 34840  000044  CFF3 F06F          	movff	prodl,??_low_isr+15
 34841  000048  CFF4 F070          	movff	prodh,??_low_isr+16
 34842  00004C  CFF6 F071          	movff	tblptrl,??_low_isr+17
 34843  000050  CFF7 F072          	movff	tblptrh,??_low_isr+18
 34844  000054  CFF8 F073          	movff	tblptru,??_low_isr+19
 34845  000058  CFF5 F074          	movff	tablat,??_low_isr+20
 34846                           
 34847                           ;interrupts.c: 88: unsigned char rx;
 34848                           ;interrupts.c: 89: unsigned char TEMP_Rxdata[100];
 34849                           ;interrupts.c: 90: unsigned char LCD_TEMP [16];
 34850                           ;interrupts.c: 91: int i;
 34851                           ;interrupts.c: 92: unsigned char j;
 34852                           ;interrupts.c: 93: unsigned char IRpin;
 34853                           ;interrupts.c: 95: INTCONbits.PEIE = 0;
 34854  00005C  9CF2               	bcf	intcon,6,c	;volatile
 34855                           
 34856                           ;interrupts.c: 97: if(PIR1bits.RCIF)
 34857  00005E  AA9E               	btfss	3998,5,c	;volatile
 34858  000060  D150               	goto	i1l74
 34859                           
 34860                           ;interrupts.c: 98: {
 34861                           ;interrupts.c: 100: PIE1bits.RCIE = 0;
 34862  000062  9A9D               	bcf	3997,5,c	;volatile
 34863                           
 34864                           ;interrupts.c: 101: RCSTAbits.CREN = 0;
 34865  000064  98AB               	bcf	4011,4,c	;volatile
 34866                           
 34867                           ;interrupts.c: 102: i=0;
 34868  000066  0E00               	movlw	0
 34869  000068  0100               	movlb	0	; () banked
 34870  00006A  6FEA               	movwf	(low_isr@i+1)& (0+255),b
 34871  00006C  0E00               	movlw	0
 34872  00006E  6FE9               	movwf	low_isr@i& (0+255),b
 34873                           
 34874                           ;interrupts.c: 103: j=0;
 34875  000070  0E00               	movlw	0
 34876  000072  0100               	movlb	0	; () banked
 34877  000074  6FEC               	movwf	low_isr@j& (0+255),b
 34878                           
 34879                           ; BSR set to: 0
 34880                           ;interrupts.c: 104: rx = ReadUSART();
 34881  000076  ECA7  F006         	call	i1_ReadUSART	;wreg free
 34882  00007A  0100               	movlb	0	; () banked
 34883  00007C  6FED               	movwf	low_isr@rx& (0+255),b
 34884                           
 34885                           ; BSR set to: 0
 34886                           ;interrupts.c: 106: if(TX_OLD == '>' && rx == '>' && bufferCount == 0)
 34887  00007E  0E3E               	movlw	62
 34888  000080  0100               	movlb	0	; () banked
 34889  000082  19F2               	xorwf	_TX_OLD& (0+255),w,b
 34890  000084  A4D8               	btfss	status,2,c
 34891  000086  D00B               	goto	i1l15943
 34892                           
 34893                           ; BSR set to: 0
 34894  000088  0E3E               	movlw	62
 34895  00008A  0100               	movlb	0	; () banked
 34896  00008C  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34897  00008E  A4D8               	btfss	status,2,c
 34898  000090  D006               	goto	i1l15943
 34899                           
 34900                           ; BSR set to: 0
 34901  000092  0100               	movlb	0	; () banked
 34902  000094  51F3               	movf	_bufferCount& (0+255),w,b
 34903  000096  A4D8               	btfss	status,2,c
 34904  000098  D002               	goto	i1l15943
 34905                           
 34906                           ; BSR set to: 0
 34907                           ;interrupts.c: 107: {
 34908                           ;interrupts.c: 109: __nop();
 34909  00009A  F000               	nop	
 34910                           
 34911                           ;interrupts.c: 110: }
 34912  00009C  D12E               	goto	i1l16035
 34913  00009E                     i1l15943:
 34914                           
 34915                           ;interrupts.c: 111: else
 34916                           ;interrupts.c: 112: {
 34917                           ;interrupts.c: 114: if(rx != '\n' && rx != '\r')
 34918  00009E  0E0A               	movlw	10
 34919  0000A0  0100               	movlb	0	; () banked
 34920  0000A2  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34921  0000A4  B4D8               	btfsc	status,2,c
 34922  0000A6  D0D1               	goto	i1l16009
 34923                           
 34924                           ; BSR set to: 0
 34925  0000A8  0E0D               	movlw	13
 34926  0000AA  0100               	movlb	0	; () banked
 34927  0000AC  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34928  0000AE  B4D8               	btfsc	status,2,c
 34929  0000B0  D0CC               	goto	i1l16009
 34930                           
 34931                           ; BSR set to: 0
 34932                           ;interrupts.c: 115: {
 34933                           ;interrupts.c: 117: if(rx == 0x7f || rx == 0x08)
 34934  0000B2  0E7F               	movlw	127
 34935  0000B4  0100               	movlb	0	; () banked
 34936  0000B6  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34937  0000B8  B4D8               	btfsc	status,2,c
 34938  0000BA  D005               	goto	i1l15951
 34939                           
 34940                           ; BSR set to: 0
 34941  0000BC  0E08               	movlw	8
 34942  0000BE  0100               	movlb	0	; () banked
 34943  0000C0  19ED               	xorwf	low_isr@rx& (0+255),w,b
 34944  0000C2  A4D8               	btfss	status,2,c
 34945  0000C4  D087               	goto	i1l15989
 34946  0000C6                     i1l15951:
 34947                           
 34948                           ; BSR set to: 0
 34949                           ;interrupts.c: 118: {
 34950                           ;interrupts.c: 120: if(bufferCount !=0)
 34951  0000C6  0100               	movlb	0	; () banked
 34952  0000C8  51F3               	movf	_bufferCount& (0+255),w,b
 34953  0000CA  B4D8               	btfsc	status,2,c
 34954  0000CC  D116               	goto	i1l16035
 34955                           
 34956                           ; BSR set to: 0
 34957                           ;interrupts.c: 121: {
 34958                           ;interrupts.c: 123: UARTstring("\r");
 34959  0000CE  0EFC               	movlw	low STR_1
 34960  0000D0  6E0C               	movwf	i1UARTstring@data,c
 34961  0000D2  0EFF               	movlw	high STR_1
 34962  0000D4  6E0D               	movwf	i1UARTstring@data+1,c
 34963  0000D6  EC5F  F0BB         	call	i1_UARTstring	;wreg free
 34964                           
 34965                           ;interrupts.c: 125: for(i=0;i<=bufferCount;i++)
 34966  0000DA  0E00               	movlw	0
 34967  0000DC  0100               	movlb	0	; () banked
 34968  0000DE  6FEA               	movwf	(low_isr@i+1)& (0+255),b
 34969  0000E0  0E00               	movlw	0
 34970  0000E2  6FE9               	movwf	low_isr@i& (0+255),b
 34971  0000E4  D00A               	goto	i1l15961
 34972  0000E6                     i1l15957:
 34973                           
 34974                           ; BSR set to: 0
 34975                           ;interrupts.c: 126: {
 34976                           ;interrupts.c: 128: UARTstring(" ");
 34977  0000E6  0E4E               	movlw	low (STR_225+15)
 34978  0000E8  6E0C               	movwf	i1UARTstring@data,c
 34979  0000EA  0EF9               	movlw	high (STR_225+15)
 34980  0000EC  6E0D               	movwf	i1UARTstring@data+1,c
 34981  0000EE  EC5F  F0BB         	call	i1_UARTstring	;wreg free
 34982  0000F2  0100               	movlb	0	; () banked
 34983  0000F4  4BE9               	infsnz	low_isr@i& (0+255),f,b
 34984  0000F6  2BEA               	incf	(low_isr@i+1)& (0+255),f,b
 34985  0000F8  D000               	goto	i1l15961
 34986  0000FA                     i1l15961:
 34987                           
 34988                           ; BSR set to: 0
 34989  0000FA  0100               	movlb	0	; () banked
 34990  0000FC  51F3               	movf	_bufferCount& (0+255),w,b
 34991  0000FE  0100               	movlb	0	; () banked
 34992  000100  6F60               	movwf	??_low_isr& (0+255),b
 34993  000102  6B61               	clrf	(??_low_isr+1)& (0+255),b
 34994  000104  0100               	movlb	0	; () banked
 34995  000106  51E9               	movf	low_isr@i& (0+255),w,b
 34996  000108  0100               	movlb	0	; () banked
 34997  00010A  5D60               	subwf	??_low_isr& (0+255),w,b
 34998  00010C  0100               	movlb	0	; () banked
 34999  00010E  5161               	movf	(??_low_isr+1)& (0+255),w,b
 35000  000110  0A80               	xorlw	128
 35001  000112  0100               	movlb	0	; () banked
 35002  000114  6F62               	movwf	(??_low_isr+2)& (0+255),b
 35003  000116  0100               	movlb	0	; () banked
 35004  000118  51EA               	movf	(low_isr@i+1)& (0+255),w,b
 35005  00011A  0A80               	xorlw	128
 35006  00011C  0100               	movlb	0	; () banked
 35007  00011E  5962               	subwfb	(??_low_isr+2)& (0+255),w,b
 35008  000120  B0D8               	btfsc	status,0,c
 35009  000122  D7E1               	goto	i1l15957
 35010                           
 35011                           ; BSR set to: 0
 35012                           ;interrupts.c: 129: }
 35013                           ;interrupts.c: 131: UARTstring("\r");
 35014                           
 35015                           ; BSR set to: 0
 35016  000124  0EFC               	movlw	low STR_1
 35017  000126  6E0C               	movwf	i1UARTstring@data,c
 35018  000128  0EFF               	movlw	high STR_1
 35019  00012A  6E0D               	movwf	i1UARTstring@data+1,c
 35020  00012C  EC5F  F0BB         	call	i1_UARTstring	;wreg free
 35021                           
 35022                           ;interrupts.c: 132: UARTstring(">");
 35023  000130  0ED1               	movlw	low (STR_21+27)
 35024  000132  6E0C               	movwf	i1UARTstring@data,c
 35025  000134  0EF4               	movlw	high (STR_21+27)
 35026  000136  6E0D               	movwf	i1UARTstring@data+1,c
 35027  000138  EC5F  F0BB         	call	i1_UARTstring	;wreg free
 35028                           
 35029                           ;interrupts.c: 133: bufferCount--;
 35030  00013C  0100               	movlb	0	; () banked
 35031  00013E  07F3               	decf	_bufferCount& (0+255),f,b
 35032                           
 35033                           ; BSR set to: 0
 35034                           ;interrupts.c: 134: TEMP_Rxdata[bufferCount] = 0;
 35035  000140  0100               	movlb	0	; () banked
 35036  000142  51F3               	movf	_bufferCount& (0+255),w,b
 35037  000144  0D01               	mullw	1
 35038  000146  0E75               	movlw	low low_isr@TEMP_Rxdata
 35039  000148  24F3               	addwf	prodl,w,c
 35040  00014A  6ED9               	movwf	fsr2l,c
 35041  00014C  0E00               	movlw	high low_isr@TEMP_Rxdata
 35042  00014E  20F4               	addwfc	prodh,w,c
 35043  000150  6EDA               	movwf	fsr2h,c
 35044  000152  0E00               	movlw	0
 35045  000154  6EDF               	movwf	indf2,c
 35046                           
 35047                           ; BSR set to: 0
 35048                           ;interrupts.c: 135: UARTstring(TEMP_Rxdata);
 35049  000156  0E75               	movlw	low low_isr@TEMP_Rxdata
 35050  000158  6E0C               	movwf	i1UARTstring@data,c
 35051  00015A  0E00               	movlw	high low_isr@TEMP_Rxdata
 35052  00015C  6E0D               	movwf	i1UARTstring@data+1,c
 35053  00015E  EC5F  F0BB         	call	i1_UARTstring	;wreg free
 35054                           
 35055                           ;interrupts.c: 136: if(bufferCount < 15)
 35056  000162  0E0F               	movlw	15
 35057  000164  0100               	movlb	0	; () banked
 35058  000166  61F3               	cpfslt	_bufferCount& (0+255),b
 35059  000168  D0C8               	goto	i1l16035
 35060                           
 35061                           ; BSR set to: 0
 35062                           ;interrupts.c: 137: {
 35063                           ;interrupts.c: 139: for(j=0; j<15;j++)
 35064  00016A  0E00               	movlw	0
 35065  00016C  0100               	movlb	0	; () banked
 35066  00016E  6FEC               	movwf	low_isr@j& (0+255),b
 35067  000170                     i1l15975:
 35068                           
 35069                           ; BSR set to: 0
 35070  000170  0E0E               	movlw	14
 35071  000172  0100               	movlb	0	; () banked
 35072  000174  65EC               	cpfsgt	low_isr@j& (0+255),b
 35073  000176  D001               	goto	i1l15979
 35074                           
 35075                           ; BSR set to: 0
 35076  000178  D017               	goto	i1l15985
 35077  00017A                     i1l15979:
 35078                           
 35079                           ; BSR set to: 0
 35080                           ;interrupts.c: 140: {
 35081                           ;interrupts.c: 141: LCD_TEMP[j] = TEMP_Rxdata[j];
 35082  00017A  0100               	movlb	0	; () banked
 35083  00017C  51EC               	movf	low_isr@j& (0+255),w,b
 35084  00017E  0D01               	mullw	1
 35085  000180  0E75               	movlw	low low_isr@TEMP_Rxdata
 35086  000182  24F3               	addwf	prodl,w,c
 35087  000184  6ED9               	movwf	fsr2l,c
 35088  000186  0E00               	movlw	high low_isr@TEMP_Rxdata
 35089  000188  20F4               	addwfc	prodh,w,c
 35090  00018A  6EDA               	movwf	fsr2h,c
 35091  00018C  0100               	movlb	0	; () banked
 35092  00018E  51EC               	movf	low_isr@j& (0+255),w,b
 35093  000190  0D01               	mullw	1
 35094  000192  0ED9               	movlw	low low_isr@LCD_TEMP
 35095  000194  24F3               	addwf	prodl,w,c
 35096  000196  6EE1               	movwf	fsr1l,c
 35097  000198  0E00               	movlw	high low_isr@LCD_TEMP
 35098  00019A  20F4               	addwfc	prodh,w,c
 35099  00019C  6EE2               	movwf	fsr1h,c
 35100  00019E  CFDF FFE7          	movff	indf2,indf1
 35101                           
 35102                           ; BSR set to: 0
 35103  0001A2  0100               	movlb	0	; () banked
 35104  0001A4  2BEC               	incf	low_isr@j& (0+255),f,b
 35105  0001A6  D7E4               	goto	i1l15975
 35106  0001A8                     i1l15985:
 35107                           
 35108                           ; BSR set to: 0
 35109                           ;interrupts.c: 142: }
 35110                           ;interrupts.c: 143: ClearLCD();
 35111  0001A8  EC29  F008         	call	i1_ClearLCD	;wreg free
 35112                           
 35113                           ;interrupts.c: 144: SetLCDcursor(0, 0);
 35114  0001AC  0E00               	movlw	0
 35115  0001AE  6E0F               	movwf	i1SetLCDcursor@Col,c
 35116  0001B0  0E00               	movlw	0
 35117  0001B2  EC20  F007         	call	i1_SetLCDcursor
 35118                           
 35119                           ;interrupts.c: 145: LCDPrintChar('>');
 35120  0001B6  0E3E               	movlw	62
 35121  0001B8  EC1E  F008         	call	i1_LCDPrintChar
 35122                           
 35123                           ;interrupts.c: 146: SetLCDcursor(0, 1);
 35124  0001BC  0E01               	movlw	1
 35125  0001BE  6E0F               	movwf	i1SetLCDcursor@Col,c
 35126  0001C0  0E00               	movlw	0
 35127  0001C2  EC20  F007         	call	i1_SetLCDcursor
 35128                           
 35129                           ;interrupts.c: 147: LCDPrintString(LCD_TEMP);
 35130  0001C6  0ED9               	movlw	low low_isr@LCD_TEMP
 35131  0001C8  6E0F               	movwf	i1LCDPrintString@Text,c
 35132  0001CA  0E00               	movlw	high low_isr@LCD_TEMP
 35133  0001CC  6E10               	movwf	i1LCDPrintString@Text+1,c
 35134  0001CE  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 35135                           
 35136                           ;interrupts.c: 148: }
 35137                           ;interrupts.c: 149: }
 35138                           ;interrupts.c: 150: }
 35139  0001D2  D093               	goto	i1l16035
 35140  0001D4                     i1l15989:
 35141                           
 35142                           ;interrupts.c: 151: else
 35143                           ;interrupts.c: 152: {
 35144                           ;interrupts.c: 155: if(IsPrintableASCII(rx))
 35145  0001D4  0100               	movlb	0	; () banked
 35146  0001D6  51ED               	movf	low_isr@rx& (0+255),w,b
 35147  0001D8  ECFC  F007         	call	_IsPrintableASCII
 35148  0001DC  0900               	iorlw	0
 35149  0001DE  B4D8               	btfsc	status,2,c
 35150  0001E0  D08C               	goto	i1l16035
 35151                           
 35152                           ;interrupts.c: 156: {
 35153                           ;interrupts.c: 158: UARTchar(rx, 0, 0);
 35154  0001E2  0E00               	movlw	0
 35155  0001E4  6E08               	movwf	i1UARTchar@NinethBit_override,c
 35156  0001E6  0E00               	movlw	0
 35157  0001E8  6E09               	movwf	i1UARTchar@NinethBit_override_data,c
 35158  0001EA  0100               	movlb	0	; () banked
 35159  0001EC  51ED               	movf	low_isr@rx& (0+255),w,b
 35160  0001EE  EC71  F0BE         	call	i1_UARTchar
 35161                           
 35162                           ;interrupts.c: 159: if(bufferCount < 15)
 35163  0001F2  0E0F               	movlw	15
 35164  0001F4  0100               	movlb	0	; () banked
 35165  0001F6  61F3               	cpfslt	_bufferCount& (0+255),b
 35166  0001F8  D005               	goto	i1l15997
 35167                           
 35168                           ; BSR set to: 0
 35169                           ;interrupts.c: 160: {
 35170                           ;interrupts.c: 162: LCDPrintChar(rx);
 35171  0001FA  0100               	movlb	0	; () banked
 35172  0001FC  51ED               	movf	low_isr@rx& (0+255),w,b
 35173  0001FE  EC1E  F008         	call	i1_LCDPrintChar
 35174  000202  D000               	goto	i1l15997
 35175  000204                     i1l15997:
 35176                           
 35177                           ;interrupts.c: 163: }
 35178                           ;interrupts.c: 164: TEMP_Rxdata[bufferCount] = rx;
 35179  000204  0100               	movlb	0	; () banked
 35180  000206  51F3               	movf	_bufferCount& (0+255),w,b
 35181  000208  0D01               	mullw	1
 35182  00020A  0E75               	movlw	low low_isr@TEMP_Rxdata
 35183  00020C  24F3               	addwf	prodl,w,c
 35184  00020E  6ED9               	movwf	fsr2l,c
 35185  000210  0E00               	movlw	high low_isr@TEMP_Rxdata
 35186  000212  20F4               	addwfc	prodh,w,c
 35187  000214  6EDA               	movwf	fsr2h,c
 35188  000216  C0ED  FFDF         	movff	low_isr@rx,indf2
 35189                           
 35190                           ; BSR set to: 0
 35191                           ;interrupts.c: 165: bufferCount++;
 35192  00021A  0100               	movlb	0	; () banked
 35193  00021C  2BF3               	incf	_bufferCount& (0+255),f,b
 35194                           
 35195                           ; BSR set to: 0
 35196                           ;interrupts.c: 166: if(bufferCount>=99)
 35197  00021E  0E62               	movlw	98
 35198  000220  0100               	movlb	0	; () banked
 35199  000222  65F3               	cpfsgt	_bufferCount& (0+255),b
 35200  000224  D06A               	goto	i1l16035
 35201                           
 35202                           ; BSR set to: 0
 35203                           ;interrupts.c: 167: {
 35204                           ;interrupts.c: 168: UARTstring("\r\nBuffer overflow! Deleting Buffer \r\n");
 35205  000226  0E80               	movlw	low STR_5
 35206  000228  6E0C               	movwf	i1UARTstring@data,c
 35207  00022A  0EF2               	movlw	high STR_5
 35208  00022C  6E0D               	movwf	i1UARTstring@data+1,c
 35209  00022E  EC5F  F0BB         	call	i1_UARTstring	;wreg free
 35210                           
 35211                           ;interrupts.c: 169: cleanBuffer(TEMP_Rxdata, 100);
 35212  000232  0E75               	movlw	low low_isr@TEMP_Rxdata
 35213  000234  6E01               	movwf	i1cleanBuffer@data,c
 35214  000236  0E00               	movlw	high low_isr@TEMP_Rxdata
 35215  000238  6E02               	movwf	i1cleanBuffer@data+1,c
 35216  00023A  0E00               	movlw	0
 35217  00023C  6E04               	movwf	i1cleanBuffer@count+1,c
 35218  00023E  0E64               	movlw	100
 35219  000240  6E03               	movwf	i1cleanBuffer@count,c
 35220  000242  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 35221  000246  D055               	goto	i1l16033
 35222                           
 35223                           ; BSR set to: 0
 35224                           ;interrupts.c: 176: }
 35225                           ;interrupts.c: 177: }
 35226                           ;interrupts.c: 178: }
 35227                           
 35228                           ; BSR set to: 0
 35229                           
 35230                           ;interrupts.c: 173: else
 35231                           ;interrupts.c: 174: {
 35232                           
 35233                           ; BSR set to: 0
 35234                           
 35235                           ; BSR set to: 0
 35236                           ;interrupts.c: 171: }
 35237                           ;interrupts.c: 172: }
 35238                           
 35239                           ;interrupts.c: 170: bufferCount=0;
 35240  000248  D058               	goto	i1l16035
 35241  00024A                     i1l16009:
 35242                           
 35243                           ; BSR set to: 0
 35244                           ;interrupts.c: 179: else if((rx == '\n' || rx == '\r') && bufferCount == 0)
 35245  00024A  0E0A               	movlw	10
 35246  00024C  0100               	movlb	0	; () banked
 35247  00024E  19ED               	xorwf	low_isr@rx& (0+255),w,b
 35248  000250  B4D8               	btfsc	status,2,c
 35249  000252  D005               	goto	i1l16013
 35250                           
 35251                           ; BSR set to: 0
 35252  000254  0E0D               	movlw	13
 35253  000256  0100               	movlb	0	; () banked
 35254  000258  19ED               	xorwf	low_isr@rx& (0+255),w,b
 35255  00025A  A4D8               	btfss	status,2,c
 35256  00025C  D00F               	goto	i1l16017
 35257  00025E                     i1l16013:
 35258                           
 35259                           ; BSR set to: 0
 35260  00025E  0100               	movlb	0	; () banked
 35261  000260  51F3               	movf	_bufferCount& (0+255),w,b
 35262  000262  A4D8               	btfss	status,2,c
 35263  000264  D00B               	goto	i1l16017
 35264                           
 35265                           ; BSR set to: 0
 35266                           ;interrupts.c: 180: {
 35267                           ;interrupts.c: 182: cleanBuffer(TEMP_Rxdata, 100);
 35268  000266  0E75               	movlw	low low_isr@TEMP_Rxdata
 35269  000268  6E01               	movwf	i1cleanBuffer@data,c
 35270  00026A  0E00               	movlw	high low_isr@TEMP_Rxdata
 35271  00026C  6E02               	movwf	i1cleanBuffer@data+1,c
 35272  00026E  0E00               	movlw	0
 35273  000270  6E04               	movwf	i1cleanBuffer@count+1,c
 35274  000272  0E64               	movlw	100
 35275  000274  6E03               	movwf	i1cleanBuffer@count,c
 35276  000276  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 35277                           
 35278                           ;interrupts.c: 183: }
 35279  00027A  D03F               	goto	i1l16035
 35280  00027C                     i1l16017:
 35281                           
 35282                           ;interrupts.c: 184: else
 35283                           ;interrupts.c: 185: {
 35284                           ;interrupts.c: 187: if(TEMP_Rxdata[0] == 0 && TEMP_Rxdata[1] != 0)
 35285  00027C  0100               	movlb	0	; () banked
 35286  00027E  5175               	movf	low_isr@TEMP_Rxdata& (0+255),w,b
 35287  000280  0100               	movlb	0	; () banked
 35288  000282  A4D8               	btfss	status,2,c
 35289  000284  D013               	goto	i1l16023
 35290                           
 35291                           ; BSR set to: 0
 35292  000286  0100               	movlb	0	; () banked
 35293  000288  5176               	movf	(low_isr@TEMP_Rxdata+1)& (0+255),w,b
 35294  00028A  B4D8               	btfsc	status,2,c
 35295  00028C  D00F               	goto	i1l16023
 35296                           
 35297                           ; BSR set to: 0
 35298                           ;interrupts.c: 188: {
 35299                           ;interrupts.c: 189: BufferCopy(TEMP_Rxdata, Rxdata, 100,1);
 35300  00028E  0E75               	movlw	low low_isr@TEMP_Rxdata
 35301  000290  6E09               	movwf	i1BufferCopy@from,c
 35302  000292  0E00               	movlw	high low_isr@TEMP_Rxdata
 35303  000294  6E0A               	movwf	i1BufferCopy@from+1,c
 35304  000296  0E00               	movlw	low _Rxdata
 35305  000298  6E0B               	movwf	i1BufferCopy@to,c
 35306  00029A  0E03               	movlw	high _Rxdata
 35307  00029C  6E0C               	movwf	i1BufferCopy@to+1,c
 35308  00029E  0E64               	movlw	100
 35309  0002A0  6E0D               	movwf	i1BufferCopy@count,c
 35310  0002A2  0E01               	movlw	1
 35311  0002A4  6E0E               	movwf	i1BufferCopy@shift,c
 35312  0002A6  EC7F  F0B9         	call	i1_BufferCopy	;wreg free
 35313                           
 35314                           ;interrupts.c: 190: }
 35315  0002AA  D00F               	goto	i1l16025
 35316  0002AC                     i1l16023:
 35317                           
 35318                           ;interrupts.c: 191: else
 35319                           ;interrupts.c: 192: {
 35320                           ;interrupts.c: 193: BufferCopy(TEMP_Rxdata, Rxdata, 100,0);
 35321  0002AC  0E75               	movlw	low low_isr@TEMP_Rxdata
 35322  0002AE  6E09               	movwf	i1BufferCopy@from,c
 35323  0002B0  0E00               	movlw	high low_isr@TEMP_Rxdata
 35324  0002B2  6E0A               	movwf	i1BufferCopy@from+1,c
 35325  0002B4  0E00               	movlw	low _Rxdata
 35326  0002B6  6E0B               	movwf	i1BufferCopy@to,c
 35327  0002B8  0E03               	movlw	high _Rxdata
 35328  0002BA  6E0C               	movwf	i1BufferCopy@to+1,c
 35329  0002BC  0E64               	movlw	100
 35330  0002BE  6E0D               	movwf	i1BufferCopy@count,c
 35331  0002C0  0E00               	movlw	0
 35332  0002C2  6E0E               	movwf	i1BufferCopy@shift,c
 35333  0002C4  EC7F  F0B9         	call	i1_BufferCopy	;wreg free
 35334  0002C8  D000               	goto	i1l16025
 35335  0002CA                     i1l16025:
 35336                           
 35337                           ;interrupts.c: 194: }
 35338                           ;interrupts.c: 195: ClearLCD();
 35339  0002CA  EC29  F008         	call	i1_ClearLCD	;wreg free
 35340                           
 35341                           ;interrupts.c: 196: SetLCDcursor(0, 0);
 35342  0002CE  0E00               	movlw	0
 35343  0002D0  6E0F               	movwf	i1SetLCDcursor@Col,c
 35344  0002D2  0E00               	movlw	0
 35345  0002D4  EC20  F007         	call	i1_SetLCDcursor
 35346                           
 35347                           ;interrupts.c: 197: LCDPrintChar('>');
 35348  0002D8  0E3E               	movlw	62
 35349  0002DA  EC1E  F008         	call	i1_LCDPrintChar
 35350                           
 35351                           ;interrupts.c: 198: cleanBuffer(TEMP_Rxdata, 100);
 35352  0002DE  0E75               	movlw	low low_isr@TEMP_Rxdata
 35353  0002E0  6E01               	movwf	i1cleanBuffer@data,c
 35354  0002E2  0E00               	movlw	high low_isr@TEMP_Rxdata
 35355  0002E4  6E02               	movwf	i1cleanBuffer@data+1,c
 35356  0002E6  0E00               	movlw	0
 35357  0002E8  6E04               	movwf	i1cleanBuffer@count+1,c
 35358  0002EA  0E64               	movlw	100
 35359  0002EC  6E03               	movwf	i1cleanBuffer@count,c
 35360  0002EE  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 35361  0002F2                     i1l16033:
 35362                           
 35363                           ;interrupts.c: 199: bufferCount=0;
 35364  0002F2  0E00               	movlw	0
 35365  0002F4  0100               	movlb	0	; () banked
 35366  0002F6  6FF3               	movwf	_bufferCount& (0+255),b
 35367                           
 35368                           ; BSR set to: 0
 35369                           
 35370                           ; BSR set to: 0
 35371  0002F8  D000               	goto	i1l16035
 35372  0002FA                     i1l16035:
 35373                           
 35374                           ;interrupts.c: 200: }
 35375                           ;interrupts.c: 201: }
 35376                           ;interrupts.c: 202: PIR1bits.RCIF = 0;
 35377  0002FA  9A9E               	bcf	3998,5,c	;volatile
 35378                           
 35379                           ;interrupts.c: 203: PIE1bits.RCIE = 1;
 35380  0002FC  8A9D               	bsf	3997,5,c	;volatile
 35381                           
 35382                           ;interrupts.c: 204: RCSTAbits.CREN = 1;
 35383  0002FE  88AB               	bsf	4011,4,c	;volatile
 35384                           
 35385                           ;interrupts.c: 205: }
 35386  000300  D0CF               	goto	i1l100
 35387  000302                     i1l74:
 35388                           
 35389                           ;interrupts.c: 206: else if(INTCONbits.RBIF)
 35390  000302  A0F2               	btfss	intcon,0,c	;volatile
 35391  000304  D0AE               	goto	i1l101
 35392                           
 35393                           ;interrupts.c: 207: {
 35394                           ;interrupts.c: 211: INTCONbits.RBIE = 0;
 35395  000306  96F2               	bcf	intcon,3,c	;volatile
 35396                           
 35397                           ;interrupts.c: 212: __nop();
 35398  000308  F000               	nop	
 35399                           
 35400                           ;interrupts.c: 213: __nop();
 35401  00030A  F000               	nop	
 35402                           
 35403                           ;interrupts.c: 214: IRpin = ReadIRpin();
 35404  00030C  EC85  F008         	call	i1_ReadIRpin	;wreg free
 35405  000310  0100               	movlb	0	; () banked
 35406  000312  6FEB               	movwf	low_isr@IRpin& (0+255),b
 35407                           
 35408                           ; BSR set to: 0
 35409                           ;interrupts.c: 215: IRrawCount = 0;
 35410  000314  0E00               	movlw	0
 35411  000316  0100               	movlb	0	; () banked
 35412  000318  6FEF               	movwf	(_IRrawCount+1)& (0+255),b
 35413  00031A  0E00               	movlw	0
 35414  00031C  6FEE               	movwf	_IRrawCount& (0+255),b
 35415                           
 35416                           ; BSR set to: 0
 35417                           ;interrupts.c: 216: if(IRpin != IRpinOLD)
 35418  00031E  0100               	movlb	0	; () banked
 35419  000320  51F0               	movf	_IRpinOLD& (0+255),w,b
 35420  000322  0100               	movlb	0	; () banked
 35421  000324  19EB               	xorwf	low_isr@IRpin& (0+255),w,b
 35422  000326  B4D8               	btfsc	status,2,c
 35423  000328  D097               	goto	i1l16089
 35424                           
 35425                           ; BSR set to: 0
 35426                           ;interrupts.c: 217: {
 35427                           ;interrupts.c: 218: IRrawCount += TMR0L;
 35428  00032A  50D6               	movf	4054,w,c	;volatile
 35429  00032C  0100               	movlb	0	; () banked
 35430  00032E  27EE               	addwf	_IRrawCount& (0+255),f,b
 35431  000330  0E00               	movlw	0
 35432  000332  23EF               	addwfc	(_IRrawCount+1)& (0+255),f,b
 35433                           
 35434                           ; BSR set to: 0
 35435                           ;interrupts.c: 219: IRrawCount += ((unsigned int)TMR0H << 8);
 35436  000334  50D7               	movf	4055,w,c	;volatile
 35437  000336  0100               	movlb	0	; () banked
 35438  000338  27EF               	addwf	(_IRrawCount+1)& (0+255),f,b
 35439                           
 35440                           ; BSR set to: 0
 35441                           ;interrupts.c: 220: if(IRrawCodeNum < 72)
 35442  00033A  0E48               	movlw	72
 35443  00033C  0100               	movlb	0	; () banked
 35444  00033E  61F1               	cpfslt	_IRrawCodeNum& (0+255),b
 35445  000340  D05F               	goto	i1l16077
 35446                           
 35447                           ; BSR set to: 0
 35448                           ;interrupts.c: 221: {
 35449                           ;interrupts.c: 223: INTCONbits.TMR0IF = 0;
 35450  000342  94F2               	bcf	intcon,2,c	;volatile
 35451                           
 35452                           ;interrupts.c: 224: INTCONbits.TMR0IE = 1;
 35453  000344  8AF2               	bsf	intcon,5,c	;volatile
 35454                           
 35455                           ; BSR set to: 0
 35456                           ;interrupts.c: 225: Reset_Timer0();
 35457  000346  ECA3  F008         	call	_Reset_Timer0	;wreg free
 35458                           
 35459                           ;interrupts.c: 226: if(IRrawCodeNum != 0)
 35460  00034A  0100               	movlb	0	; () banked
 35461  00034C  51F1               	movf	_IRrawCodeNum& (0+255),w,b
 35462  00034E  B4D8               	btfsc	status,2,c
 35463  000350  D024               	goto	i1l16063
 35464                           
 35465                           ; BSR set to: 0
 35466                           ;interrupts.c: 227: {
 35467                           ;interrupts.c: 228: IRRawCode[IRrawCodeNum - 1] = IRrawCount;
 35468  000352  0EFE               	movlw	254
 35469  000354  0100               	movlb	0	; () banked
 35470  000356  6F60               	movwf	??_low_isr& (0+255),b
 35471  000358  0EFF               	movlw	255
 35472  00035A  0100               	movlb	0	; () banked
 35473  00035C  6F61               	movwf	(??_low_isr+1)& (0+255),b
 35474  00035E  0100               	movlb	0	; () banked
 35475  000360  51F1               	movf	_IRrawCodeNum& (0+255),w,b
 35476  000362  0100               	movlb	0	; () banked
 35477  000364  6F62               	movwf	(??_low_isr+2)& (0+255),b
 35478  000366  6B63               	clrf	(??_low_isr+3)& (0+255),b
 35479  000368  90D8               	bcf	status,0,c
 35480  00036A  0100               	movlb	0	; () banked
 35481  00036C  3762               	rlcf	(??_low_isr+2)& (0+255),f,b
 35482  00036E  3763               	rlcf	(??_low_isr+3)& (0+255),f,b
 35483  000370  0100               	movlb	0	; () banked
 35484  000372  5160               	movf	??_low_isr& (0+255),w,b
 35485  000374  0100               	movlb	0	; () banked
 35486  000376  2762               	addwf	(??_low_isr+2)& (0+255),f,b
 35487  000378  0100               	movlb	0	; () banked
 35488  00037A  5161               	movf	(??_low_isr+1)& (0+255),w,b
 35489  00037C  0100               	movlb	0	; () banked
 35490  00037E  2363               	addwfc	(??_low_isr+3)& (0+255),f,b
 35491  000380  0E64               	movlw	low _IRRawCode
 35492  000382  0100               	movlb	0	; () banked
 35493  000384  2562               	addwf	(??_low_isr+2)& (0+255),w,b
 35494  000386  6ED9               	movwf	fsr2l,c
 35495  000388  0E04               	movlw	high _IRRawCode
 35496  00038A  0100               	movlb	0	; () banked
 35497  00038C  2163               	addwfc	(??_low_isr+3)& (0+255),w,b
 35498  00038E  6EDA               	movwf	fsr2h,c
 35499  000390  C0EE  FFDE         	movff	_IRrawCount,postinc2
 35500  000394  C0EF  FFDD         	movff	_IRrawCount+1,postdec2
 35501  000398  D000               	goto	i1l16063
 35502  00039A                     i1l16063:
 35503                           
 35504                           ; BSR set to: 0
 35505                           ;interrupts.c: 229: }
 35506                           ;interrupts.c: 230: if(IRrawCount >= 28800L && IRrawCount <= 32000L )
 35507  00039A  0E80               	movlw	128
 35508  00039C  0100               	movlb	0	; () banked
 35509  00039E  5DEE               	subwf	_IRrawCount& (0+255),w,b
 35510  0003A0  0E70               	movlw	112
 35511  0003A2  0100               	movlb	0	; () banked
 35512  0003A4  59EF               	subwfb	(_IRrawCount+1)& (0+255),w,b
 35513  0003A6  A0D8               	btfss	status,0,c
 35514  0003A8  D028               	goto	i1l16075
 35515                           
 35516                           ; BSR set to: 0
 35517  0003AA  0100               	movlb	0	; () banked
 35518  0003AC  05EE               	decf	_IRrawCount& (0+255),w,b
 35519  0003AE  0E7D               	movlw	125
 35520  0003B0  0100               	movlb	0	; () banked
 35521  0003B2  59EF               	subwfb	(_IRrawCount+1)& (0+255),w,b
 35522  0003B4  B0D8               	btfsc	status,0,c
 35523  0003B6  D021               	goto	i1l16075
 35524                           
 35525                           ; BSR set to: 0
 35526                           ;interrupts.c: 231: {
 35527                           ;interrupts.c: 233: IR_New_Code = 2;
 35528  0003B8  0E02               	movlw	2
 35529  0003BA  0100               	movlb	0	; () banked
 35530  0003BC  6FF8               	movwf	_IR_New_Code& (0+255),b
 35531                           
 35532                           ; BSR set to: 0
 35533                           ;interrupts.c: 234: if(IR_NEC)
 35534  0003BE  0100               	movlb	0	; () banked
 35535  0003C0  51F4               	movf	_IR_NEC& (0+255),w,b
 35536  0003C2  0100               	movlb	0	; () banked
 35537  0003C4  11F5               	iorwf	(_IR_NEC+1)& (0+255),w,b
 35538  0003C6  0100               	movlb	0	; () banked
 35539  0003C8  11F6               	iorwf	(_IR_NEC+2)& (0+255),w,b
 35540  0003CA  0100               	movlb	0	; () banked
 35541  0003CC  11F7               	iorwf	(_IR_NEC+3)& (0+255),w,b
 35542  0003CE  B4D8               	btfsc	status,2,c
 35543  0003D0  D00F               	goto	i1l16073
 35544                           
 35545                           ; BSR set to: 0
 35546                           ;interrupts.c: 235: {
 35547                           ;interrupts.c: 236: UseIRCode(&IR_New_Code,IR_NEC);
 35548  0003D2  0EF8               	movlw	low _IR_New_Code
 35549  0003D4  6E47               	movwf	UseIRCode@Code,c
 35550  0003D6  0E00               	movlw	high _IR_New_Code
 35551  0003D8  6E48               	movwf	UseIRCode@Code+1,c
 35552  0003DA  C0F4  F049         	movff	_IR_NEC,UseIRCode@NEC
 35553  0003DE  C0F5  F04A         	movff	_IR_NEC+1,UseIRCode@NEC+1
 35554  0003E2  C0F6  F04B         	movff	_IR_NEC+2,UseIRCode@NEC+2
 35555  0003E6  C0F7  F04C         	movff	_IR_NEC+3,UseIRCode@NEC+3
 35556  0003EA  ECDE  F0B0         	call	_UseIRCode	;wreg free
 35557  0003EE  D000               	goto	i1l16073
 35558  0003F0                     i1l16073:
 35559                           
 35560                           ;interrupts.c: 237: }
 35561                           ;interrupts.c: 238: IRRawCode[0] = IRrawCount;
 35562  0003F0  C0EE  F464         	movff	_IRrawCount,_IRRawCode
 35563  0003F4  C0EF  F465         	movff	_IRrawCount+1,_IRRawCode+1
 35564  0003F8  D000               	goto	i1l16075
 35565  0003FA                     i1l16075:
 35566                           
 35567                           ;interrupts.c: 239: }
 35568                           ;interrupts.c: 240: IRrawCodeNum++;
 35569  0003FA  0100               	movlb	0	; () banked
 35570  0003FC  2BF1               	incf	_IRrawCodeNum& (0+255),f,b
 35571  0003FE  D000               	goto	i1l16077
 35572  000400                     i1l16077:
 35573                           
 35574                           ; BSR set to: 0
 35575                           ;interrupts.c: 241: }
 35576                           ;interrupts.c: 242: if(IRrawCodeNum == 72)
 35577  000400  0E48               	movlw	72
 35578  000402  0100               	movlb	0	; () banked
 35579  000404  19F1               	xorwf	_IRrawCodeNum& (0+255),w,b
 35580  000406  A4D8               	btfss	status,2,c
 35581  000408  D027               	goto	i1l16089
 35582                           
 35583                           ; BSR set to: 0
 35584                           ;interrupts.c: 243: {
 35585                           ;interrupts.c: 244: INTCONbits.TMR0IF = 0;
 35586  00040A  94F2               	bcf	intcon,2,c	;volatile
 35587                           
 35588                           ;interrupts.c: 245: INTCONbits.TMR0IE = 0;
 35589  00040C  9AF2               	bcf	intcon,5,c	;volatile
 35590                           
 35591                           ; BSR set to: 0
 35592                           ;interrupts.c: 246: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 35593  00040E  0E64               	movlw	low _IRRawCode
 35594  000410  6E01               	movwf	IRrawToNEC@Raw,c
 35595  000412  0E04               	movlw	high _IRRawCode
 35596  000414  6E02               	movwf	IRrawToNEC@Raw+1,c
 35597  000416  0EF4               	movlw	low _IR_NEC
 35598  000418  6E03               	movwf	IRrawToNEC@NEC,c
 35599  00041A  0E00               	movlw	high _IR_NEC
 35600  00041C  6E04               	movwf	IRrawToNEC@NEC+1,c
 35601  00041E  0E01               	movlw	1
 35602  000420  6E05               	movwf	IRrawToNEC@Invert,c
 35603  000422  ECE5  F0A2         	call	_IRrawToNEC	;wreg free
 35604  000426  0100               	movlb	0	; () banked
 35605  000428  6FF8               	movwf	_IR_New_Code& (0+255),b
 35606                           
 35607                           ; BSR set to: 0
 35608                           ;interrupts.c: 247: if(IR_New_Code)
 35609  00042A  0100               	movlb	0	; () banked
 35610  00042C  51F8               	movf	_IR_New_Code& (0+255),w,b
 35611  00042E  B4D8               	btfsc	status,2,c
 35612  000430  D00F               	goto	i1l16087
 35613                           
 35614                           ; BSR set to: 0
 35615                           ;interrupts.c: 248: {
 35616                           ;interrupts.c: 249: UseIRCode(&IR_New_Code,IR_NEC);
 35617  000432  0EF8               	movlw	low _IR_New_Code
 35618  000434  6E47               	movwf	UseIRCode@Code,c
 35619  000436  0E00               	movlw	high _IR_New_Code
 35620  000438  6E48               	movwf	UseIRCode@Code+1,c
 35621  00043A  C0F4  F049         	movff	_IR_NEC,UseIRCode@NEC
 35622  00043E  C0F5  F04A         	movff	_IR_NEC+1,UseIRCode@NEC+1
 35623  000442  C0F6  F04B         	movff	_IR_NEC+2,UseIRCode@NEC+2
 35624  000446  C0F7  F04C         	movff	_IR_NEC+3,UseIRCode@NEC+3
 35625  00044A  ECDE  F0B0         	call	_UseIRCode	;wreg free
 35626  00044E  D000               	goto	i1l16087
 35627  000450                     i1l16087:
 35628                           
 35629                           ;interrupts.c: 250: }
 35630                           ;interrupts.c: 251: IRrawCodeNum = 0;
 35631  000450  0E00               	movlw	0
 35632  000452  0100               	movlb	0	; () banked
 35633  000454  6FF1               	movwf	_IRrawCodeNum& (0+255),b
 35634                           
 35635                           ; BSR set to: 0
 35636  000456  D000               	goto	i1l16089
 35637  000458                     i1l16089:
 35638                           
 35639                           ; BSR set to: 0
 35640                           ;interrupts.c: 252: }
 35641                           ;interrupts.c: 253: }
 35642                           ;interrupts.c: 254: IRpinOLD = IRpin;
 35643  000458  C0EB  F0F0         	movff	low_isr@IRpin,_IRpinOLD
 35644                           
 35645                           ; BSR set to: 0
 35646                           ;interrupts.c: 256: INTCONbits.RBIF = 0;
 35647  00045C  90F2               	bcf	intcon,0,c	;volatile
 35648                           
 35649                           ; BSR set to: 0
 35650                           ;interrupts.c: 258: INTCONbits.RBIE = 1;
 35651  00045E  86F2               	bsf	intcon,3,c	;volatile
 35652                           
 35653                           ;interrupts.c: 259: }
 35654  000460  D01F               	goto	i1l100
 35655  000462                     i1l101:
 35656                           
 35657                           ;interrupts.c: 260: else if (INTCONbits.TMR0IF)
 35658  000462  A4F2               	btfss	intcon,2,c	;volatile
 35659  000464  D00F               	goto	i1l110
 35660                           
 35661                           ;interrupts.c: 261: {
 35662                           ;interrupts.c: 263: cleanBuffer16bit(IRRawCode, IRrawCodeNum);
 35663  000466  0E64               	movlw	low _IRRawCode
 35664  000468  6E01               	movwf	i1cleanBuffer16bit@data,c
 35665  00046A  0E04               	movlw	high _IRRawCode
 35666  00046C  6E02               	movwf	i1cleanBuffer16bit@data+1,c
 35667  00046E  C0F1  F003         	movff	_IRrawCodeNum,i1cleanBuffer16bit@count
 35668  000472  6A04               	clrf	i1cleanBuffer16bit@count+1,c
 35669  000474  EC0E  F005         	call	i1_cleanBuffer16bit	;wreg free
 35670                           
 35671                           ;interrupts.c: 264: IRrawCodeNum = 0;
 35672  000478  0E00               	movlw	0
 35673  00047A  0100               	movlb	0	; () banked
 35674  00047C  6FF1               	movwf	_IRrawCodeNum& (0+255),b
 35675                           
 35676                           ; BSR set to: 0
 35677                           ;interrupts.c: 265: INTCONbits.TMR0IF = 0;
 35678  00047E  94F2               	bcf	intcon,2,c	;volatile
 35679                           
 35680                           ; BSR set to: 0
 35681                           ;interrupts.c: 266: INTCONbits.TMR0IE = 0;
 35682  000480  9AF2               	bcf	intcon,5,c	;volatile
 35683                           
 35684                           ;interrupts.c: 267: }
 35685  000482  D00E               	goto	i1l100
 35686  000484                     i1l110:
 35687                           
 35688                           ;interrupts.c: 268: else if(INTCONbits.INT0IF)
 35689  000484  A2F2               	btfss	intcon,1,c	;volatile
 35690  000486  D003               	goto	i1l112
 35691                           
 35692                           ;interrupts.c: 269: {
 35693                           ;interrupts.c: 271: INTCONbits.INT0IF = 0;
 35694  000488  92F2               	bcf	intcon,1,c	;volatile
 35695                           
 35696                           ;interrupts.c: 272: INTCONbits.INT0IE = 0;
 35697  00048A  98F2               	bcf	intcon,4,c	;volatile
 35698                           
 35699                           ;interrupts.c: 274: }
 35700  00048C  D009               	goto	i1l100
 35701  00048E                     i1l112:
 35702                           
 35703                           ;interrupts.c: 275: else if(PIR1bits.TMR1IF)
 35704  00048E  A09E               	btfss	3998,0,c	;volatile
 35705  000490  D005               	goto	i1l114
 35706                           
 35707                           ;interrupts.c: 276: {
 35708                           ;interrupts.c: 278: LCDScreenUpdate();
 35709  000492  ECF4  F0A0         	call	i1_LCDScreenUpdate	;wreg free
 35710                           
 35711                           ;interrupts.c: 279: PIR1bits.TMR1IF = 0;
 35712  000496  909E               	bcf	3998,0,c	;volatile
 35713                           
 35714                           ;interrupts.c: 280: PIE1bits.TMR1IE = 1;
 35715  000498  809D               	bsf	3997,0,c	;volatile
 35716                           
 35717                           ;interrupts.c: 281: }
 35718  00049A  D002               	goto	i1l100
 35719  00049C                     i1l114:
 35720                           
 35721                           ;interrupts.c: 282: else
 35722                           ;interrupts.c: 283: {
 35723                           ;interrupts.c: 285: __nop();
 35724  00049C  F000               	nop	
 35725  00049E  D000               	goto	i1l100
 35726  0004A0                     i1l100:
 35727                           
 35728                           ;interrupts.c: 286: }
 35729                           ;interrupts.c: 287: INTCONbits.PEIE = 1;
 35730  0004A0  8CF2               	bsf	intcon,6,c	;volatile
 35731  0004A2  C074  FFF5         	movff	??_low_isr+20,tablat
 35732  0004A6  C073  FFF8         	movff	??_low_isr+19,tblptru
 35733  0004AA  C072  FFF7         	movff	??_low_isr+18,tblptrh
 35734  0004AE  C071  FFF6         	movff	??_low_isr+17,tblptrl
 35735  0004B2  C070  FFF4         	movff	??_low_isr+16,prodh
 35736  0004B6  C06F  FFF3         	movff	??_low_isr+15,prodl
 35737  0004BA  C06E  FFDA         	movff	??_low_isr+14,fsr2h
 35738  0004BE  C06D  FFD9         	movff	??_low_isr+13,fsr2l
 35739  0004C2  C06C  FFE2         	movff	??_low_isr+12,fsr1h
 35740  0004C6  C06B  FFE1         	movff	??_low_isr+11,fsr1l
 35741  0004CA  C06A  FFEA         	movff	??_low_isr+10,fsr0h
 35742  0004CE  C069  FFE9         	movff	??_low_isr+9,fsr0l
 35743  0004D2  C068  FFFB         	movff	??_low_isr+8,pclatu
 35744  0004D6  C067  FFFA         	movff	??_low_isr+7,pclath
 35745  0004DA  C066  FFE0         	movff	??_low_isr+6,bsr
 35746  0004DE  C065  FFE8         	movff	??_low_isr+5,wreg
 35747  0004E2  C064  FFD8         	movff	??_low_isr+4,status
 35748  0004E6  0010               	retfie	
 35749  0004E8                     __end_of_low_isr:
 35750                           	opt stack 0
 35751                           pclatu	equ	0xFFB
 35752                           pclath	equ	0xFFA
 35753                           tblptru	equ	0xFF8
 35754                           tblptrh	equ	0xFF7
 35755                           tblptrl	equ	0xFF6
 35756                           tablat	equ	0xFF5
 35757                           prodh	equ	0xFF4
 35758                           prodl	equ	0xFF3
 35759                           intcon	equ	0xFF2
 35760                           intcon2	equ	0xFF1
 35761                           indf0	equ	0xFEF
 35762                           postinc0	equ	0xFEE
 35763                           plusw0	equ	0xFEB
 35764                           fsr0h	equ	0xFEA
 35765                           fsr0l	equ	0xFE9
 35766                           wreg	equ	0xFE8
 35767                           indf1	equ	0xFE7
 35768                           postdec1	equ	0xFE5
 35769                           fsr1h	equ	0xFE2
 35770                           fsr1l	equ	0xFE1
 35771                           bsr	equ	0xFE0
 35772                           indf2	equ	0xFDF
 35773                           postinc2	equ	0xFDE
 35774                           postdec2	equ	0xFDD
 35775                           plusw2	equ	0xFDB
 35776                           fsr2h	equ	0xFDA
 35777                           fsr2l	equ	0xFD9
 35778                           status	equ	0xFD8
 35779                           
 35780 ;; *************** function i1_cleanBuffer16bit *****************
 35781 ;; Defined at:
 35782 ;;		line 89 in file "MISC.c"
 35783 ;; Parameters:    Size  Location     Type
 35784 ;;  data            2    0[COMRAM] PTR unsigned int 
 35785 ;;		 -> IRRawCode(144), 
 35786 ;;  count           2    2[COMRAM] int 
 35787 ;; Auto vars:     Size  Location     Type
 35788 ;;  cleanBuffer1    1    7[COMRAM] unsigned char 
 35789 ;; Return value:  Size  Location     Type
 35790 ;;		None               void
 35791 ;; Registers used:
 35792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35793 ;; Tracked objects:
 35794 ;;		On entry : 0/0
 35795 ;;		On exit  : 0/0
 35796 ;;		Unchanged: 0/0
 35797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35800 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35801 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35802 ;;Total ram usage:        8 bytes
 35803 ;; Hardware stack levels used:    1
 35804 ;; Hardware stack levels required when called:    1
 35805 ;; This function calls:
 35806 ;;		Nothing
 35807 ;; This function is called by:
 35808 ;;		_low_isr
 35809 ;; This function uses a non-reentrant model
 35810 ;;
 35811                           
 35812                           	psect	text105
 35813  000A1C                     __ptext105:
 35814                           	opt stack 0
 35815  000A1C                     i1_cleanBuffer16bit:
 35816                           	opt stack 22
 35817                           
 35818                           ;MISC.c: 91: unsigned char i=0;
 35819                           
 35820                           ;incstack = 0
 35821  000A1C  0E00               	movlw	0
 35822  000A1E  6E08               	movwf	i1cleanBuffer16bit@i,c
 35823                           
 35824                           ;MISC.c: 92: for(i=0; i<count;i++)
 35825  000A20  0E00               	movlw	0
 35826  000A22  6E08               	movwf	i1cleanBuffer16bit@i,c
 35827  000A24  D00E               	goto	i1l11559
 35828  000A26                     i1l11555:
 35829                           
 35830                           ;MISC.c: 93: {
 35831                           ;MISC.c: 94: data[i]= 0;
 35832  000A26  5008               	movf	i1cleanBuffer16bit@i,w,c
 35833  000A28  0D02               	mullw	2
 35834  000A2A  50F3               	movf	prodl,w,c
 35835  000A2C  2401               	addwf	i1cleanBuffer16bit@data,w,c
 35836  000A2E  6ED9               	movwf	fsr2l,c
 35837  000A30  50F4               	movf	prodh,w,c
 35838  000A32  2002               	addwfc	i1cleanBuffer16bit@data+1,w,c
 35839  000A34  6EDA               	movwf	fsr2h,c
 35840  000A36  0E00               	movlw	0
 35841  000A38  6EDE               	movwf	postinc2,c
 35842  000A3A  0E00               	movlw	0
 35843  000A3C  6EDD               	movwf	postdec2,c
 35844  000A3E  2A08               	incf	i1cleanBuffer16bit@i,f,c
 35845  000A40  D000               	goto	i1l11559
 35846  000A42                     i1l11559:
 35847  000A42  5008               	movf	i1cleanBuffer16bit@i,w,c
 35848  000A44  6E05               	movwf	??i1_cleanBuffer16bit& (0+255),c
 35849  000A46  6A06               	clrf	(??i1_cleanBuffer16bit+1)& (0+255),c
 35850  000A48  5003               	movf	i1cleanBuffer16bit@count,w,c
 35851  000A4A  5C05               	subwf	??i1_cleanBuffer16bit,w,c
 35852  000A4C  5006               	movf	??i1_cleanBuffer16bit+1,w,c
 35853  000A4E  0A80               	xorlw	128
 35854  000A50  6E07               	movwf	(??i1_cleanBuffer16bit+2)& (0+255),c
 35855  000A52  5004               	movf	i1cleanBuffer16bit@count+1,w,c
 35856  000A54  0A80               	xorlw	128
 35857  000A56  5807               	subwfb	(??i1_cleanBuffer16bit+2)& (0+255),w,c
 35858  000A58  A0D8               	btfss	status,0,c
 35859  000A5A  D7E5               	goto	i1l11555
 35860  000A5C  0012               	return		;funcret
 35861  000A5E                     __end_ofi1_cleanBuffer16bit:
 35862                           	opt stack 0
 35863                           pclatu	equ	0xFFB
 35864                           pclath	equ	0xFFA
 35865                           tblptru	equ	0xFF8
 35866                           tblptrh	equ	0xFF7
 35867                           tblptrl	equ	0xFF6
 35868                           tablat	equ	0xFF5
 35869                           prodh	equ	0xFF4
 35870                           prodl	equ	0xFF3
 35871                           intcon	equ	0xFF2
 35872                           intcon2	equ	0xFF1
 35873                           indf0	equ	0xFEF
 35874                           postinc0	equ	0xFEE
 35875                           plusw0	equ	0xFEB
 35876                           fsr0h	equ	0xFEA
 35877                           fsr0l	equ	0xFE9
 35878                           wreg	equ	0xFE8
 35879                           indf1	equ	0xFE7
 35880                           postdec1	equ	0xFE5
 35881                           fsr1h	equ	0xFE2
 35882                           fsr1l	equ	0xFE1
 35883                           bsr	equ	0xFE0
 35884                           indf2	equ	0xFDF
 35885                           postinc2	equ	0xFDE
 35886                           postdec2	equ	0xFDD
 35887                           plusw2	equ	0xFDB
 35888                           fsr2h	equ	0xFDA
 35889                           fsr2l	equ	0xFD9
 35890                           status	equ	0xFD8
 35891                           
 35892 ;; *************** function i1_ReadUSART *****************
 35893 ;; Defined at:
 35894 ;;		line 250 in file "UART.c"
 35895 ;; Parameters:    Size  Location     Type
 35896 ;;		None
 35897 ;; Auto vars:     Size  Location     Type
 35898 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 35899 ;; Return value:  Size  Location     Type
 35900 ;;                  1    wreg      unsigned char 
 35901 ;; Registers used:
 35902 ;;		wreg, status,2, status,0
 35903 ;; Tracked objects:
 35904 ;;		On entry : 0/0
 35905 ;;		On exit  : 0/0
 35906 ;;		Unchanged: 0/0
 35907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35911 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35912 ;;Total ram usage:        1 bytes
 35913 ;; Hardware stack levels used:    1
 35914 ;; Hardware stack levels required when called:    1
 35915 ;; This function calls:
 35916 ;;		Nothing
 35917 ;; This function is called by:
 35918 ;;		_low_isr
 35919 ;; This function uses a non-reentrant model
 35920 ;;
 35921                           
 35922                           	psect	text106
 35923  000D4E                     __ptext106:
 35924                           	opt stack 0
 35925  000D4E                     i1_ReadUSART:
 35926                           	opt stack 22
 35927                           
 35928                           ;UART.c: 252: char data;
 35929                           ;UART.c: 254: USART_Status.val &= 0xf2;
 35930                           
 35931                           ;incstack = 0
 35932  000D4E  0EF2               	movlw	242
 35933  000D50  0101               	movlb	1	; () banked
 35934  000D52  1715               	andwf	_USART_Status& (0+255),f,b
 35935                           
 35936                           ; BSR set to: 1
 35937                           ;UART.c: 256: if(RCSTAbits.RX9)
 35938  000D54  ACAB               	btfss	4011,6,c	;volatile
 35939  000D56  D007               	goto	i1l530
 35940                           
 35941                           ; BSR set to: 1
 35942                           ;UART.c: 257: {
 35943                           ;UART.c: 258: USART_Status.RX_NINE = 0;
 35944  000D58  0101               	movlb	1	; () banked
 35945  000D5A  9115               	bcf	_USART_Status& (0+255),0,b
 35946                           
 35947                           ;UART.c: 259: if(RCSTAbits.RX9D)
 35948  000D5C  A0AB               	btfss	4011,0,c	;volatile
 35949  000D5E  D003               	goto	i1l530
 35950                           
 35951                           ; BSR set to: 1
 35952                           ;UART.c: 260: USART_Status.RX_NINE = 1;
 35953  000D60  0101               	movlb	1	; () banked
 35954  000D62  8115               	bsf	_USART_Status& (0+255),0,b
 35955  000D64  D000               	goto	i1l530
 35956  000D66                     i1l530:
 35957                           
 35958                           ; BSR set to: 1
 35959                           ;UART.c: 261: }
 35960                           ;UART.c: 263: if(RCSTAbits.FERR)
 35961  000D66  A4AB               	btfss	4011,2,c	;volatile
 35962  000D68  D002               	goto	i1l532
 35963                           
 35964                           ; BSR set to: 1
 35965                           ;UART.c: 264: USART_Status.FRAME_ERROR = 1;
 35966  000D6A  0101               	movlb	1	; () banked
 35967  000D6C  8515               	bsf	_USART_Status& (0+255),2,b
 35968  000D6E                     i1l532:
 35969                           
 35970                           ; BSR set to: 1
 35971                           ;UART.c: 266: if(RCSTAbits.OERR)
 35972  000D6E  A2AB               	btfss	4011,1,c	;volatile
 35973  000D70  D002               	goto	i1l533
 35974                           
 35975                           ; BSR set to: 1
 35976                           ;UART.c: 267: USART_Status.OVERRUN_ERROR = 1;
 35977  000D72  0101               	movlb	1	; () banked
 35978  000D74  8715               	bsf	_USART_Status& (0+255),3,b
 35979  000D76                     i1l533:
 35980                           
 35981                           ; BSR set to: 1
 35982                           ;UART.c: 269: data = RCREG;
 35983  000D76  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 35984                           
 35985                           ; BSR set to: 1
 35986                           ;UART.c: 271: return (data);
 35987  000D7A  5001               	movf	i1ReadUSART@data,w,c
 35988  000D7C  0012               	return	
 35989                           
 35990                           ; BSR set to: 1
 35991                           
 35992                           ; BSR set to: 1
 35993  000D7E  0012               	return		;funcret
 35994  000D80                     __end_ofi1_ReadUSART:
 35995                           	opt stack 0
 35996                           pclatu	equ	0xFFB
 35997                           pclath	equ	0xFFA
 35998                           tblptru	equ	0xFF8
 35999                           tblptrh	equ	0xFF7
 36000                           tblptrl	equ	0xFF6
 36001                           tablat	equ	0xFF5
 36002                           prodh	equ	0xFF4
 36003                           prodl	equ	0xFF3
 36004                           intcon	equ	0xFF2
 36005                           intcon2	equ	0xFF1
 36006                           indf0	equ	0xFEF
 36007                           postinc0	equ	0xFEE
 36008                           plusw0	equ	0xFEB
 36009                           fsr0h	equ	0xFEA
 36010                           fsr0l	equ	0xFE9
 36011                           wreg	equ	0xFE8
 36012                           indf1	equ	0xFE7
 36013                           postdec1	equ	0xFE5
 36014                           fsr1h	equ	0xFE2
 36015                           fsr1l	equ	0xFE1
 36016                           bsr	equ	0xFE0
 36017                           indf2	equ	0xFDF
 36018                           postinc2	equ	0xFDE
 36019                           postdec2	equ	0xFDD
 36020                           plusw2	equ	0xFDB
 36021                           fsr2h	equ	0xFDA
 36022                           fsr2l	equ	0xFD9
 36023                           status	equ	0xFD8
 36024                           
 36025 ;; *************** function i1_ReadIRpin *****************
 36026 ;; Defined at:
 36027 ;;		line 95 in file "IR.c"
 36028 ;; Parameters:    Size  Location     Type
 36029 ;;		None
 36030 ;; Auto vars:     Size  Location     Type
 36031 ;;		None
 36032 ;; Return value:  Size  Location     Type
 36033 ;;                  1    wreg      unsigned char 
 36034 ;; Registers used:
 36035 ;;		wreg
 36036 ;; Tracked objects:
 36037 ;;		On entry : 0/0
 36038 ;;		On exit  : 0/0
 36039 ;;		Unchanged: 0/0
 36040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36045 ;;Total ram usage:        0 bytes
 36046 ;; Hardware stack levels used:    1
 36047 ;; Hardware stack levels required when called:    1
 36048 ;; This function calls:
 36049 ;;		Nothing
 36050 ;; This function is called by:
 36051 ;;		_low_isr
 36052 ;; This function uses a non-reentrant model
 36053 ;;
 36054                           
 36055                           	psect	text107
 36056  00110A                     __ptext107:
 36057                           	opt stack 0
 36058  00110A                     i1_ReadIRpin:
 36059                           	opt stack 22
 36060                           
 36061                           ;IR.c: 98: if((PORTB & 0b00010000) == 0b00010000)
 36062                           
 36063                           ; BSR set to: 1
 36064                           ;incstack = 0
 36065  00110A  A881               	btfss	3969,4,c	;volatile
 36066  00110C  D002               	goto	i1l11747
 36067                           
 36068                           ;IR.c: 99: {
 36069                           ;IR.c: 100: return (1);
 36070  00110E  0E01               	movlw	1
 36071                           
 36072                           ;IR.c: 101: }
 36073  001110  0012               	return	
 36074  001112                     i1l11747:
 36075                           
 36076                           ;IR.c: 102: else
 36077                           ;IR.c: 103: {
 36078                           ;IR.c: 104: return 0;
 36079  001112  0E00               	movlw	0
 36080  001114  0012               	return	
 36081  001116  0012               	return		;funcret
 36082  001118                     __end_ofi1_ReadIRpin:
 36083                           	opt stack 0
 36084                           pclatu	equ	0xFFB
 36085                           pclath	equ	0xFFA
 36086                           tblptru	equ	0xFF8
 36087                           tblptrh	equ	0xFF7
 36088                           tblptrl	equ	0xFF6
 36089                           tablat	equ	0xFF5
 36090                           prodh	equ	0xFF4
 36091                           prodl	equ	0xFF3
 36092                           intcon	equ	0xFF2
 36093                           intcon2	equ	0xFF1
 36094                           indf0	equ	0xFEF
 36095                           postinc0	equ	0xFEE
 36096                           plusw0	equ	0xFEB
 36097                           fsr0h	equ	0xFEA
 36098                           fsr0l	equ	0xFE9
 36099                           wreg	equ	0xFE8
 36100                           indf1	equ	0xFE7
 36101                           postdec1	equ	0xFE5
 36102                           fsr1h	equ	0xFE2
 36103                           fsr1l	equ	0xFE1
 36104                           bsr	equ	0xFE0
 36105                           indf2	equ	0xFDF
 36106                           postinc2	equ	0xFDE
 36107                           postdec2	equ	0xFDD
 36108                           plusw2	equ	0xFDB
 36109                           fsr2h	equ	0xFDA
 36110                           fsr2l	equ	0xFD9
 36111                           status	equ	0xFD8
 36112                           
 36113 ;; *************** function i1_LCDScreenUpdate *****************
 36114 ;; Defined at:
 36115 ;;		line 282 in file "LCD.c"
 36116 ;; Parameters:    Size  Location     Type
 36117 ;;		None
 36118 ;; Auto vars:     Size  Location     Type
 36119 ;;		None
 36120 ;; Return value:  Size  Location     Type
 36121 ;;		None               void
 36122 ;; Registers used:
 36123 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36124 ;; Tracked objects:
 36125 ;;		On entry : 0/0
 36126 ;;		On exit  : 0/0
 36127 ;;		Unchanged: 0/0
 36128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36133 ;;Total ram usage:        0 bytes
 36134 ;; Hardware stack levels used:    1
 36135 ;; Hardware stack levels required when called:    5
 36136 ;; This function calls:
 36137 ;;		i1_ClearLCD
 36138 ;;		i1_LCDPrintChar
 36139 ;;		i1_LCDPrintString
 36140 ;;		i1_SetLCDcursor
 36141 ;;		i1_cleanBuffer
 36142 ;; This function is called by:
 36143 ;;		_low_isr
 36144 ;; This function uses a non-reentrant model
 36145 ;;
 36146                           
 36147                           	psect	text108
 36148  0141E8                     __ptext108:
 36149                           	opt stack 0
 36150  0141E8                     i1_LCDScreenUpdate:
 36151                           	opt stack 18
 36152                           
 36153                           ;LCD.c: 285: if(LCDclearCount<(25000-1))
 36154                           
 36155                           ;incstack = 0
 36156  0141E8  0101               	movlb	1	; () banked
 36157  0141EA  51CA               	movf	(_LCDclearCount+3)& (0+255),w,b
 36158  0141EC  0101               	movlb	1	; () banked
 36159  0141EE  11C9               	iorwf	(_LCDclearCount+2)& (0+255),w,b
 36160  0141F0  E113               	bnz	i1l15801
 36161  0141F2  0EA7               	movlw	167
 36162  0141F4  0101               	movlb	1	; () banked
 36163  0141F6  5DC7               	subwf	_LCDclearCount& (0+255),w,b
 36164  0141F8  0E61               	movlw	97
 36165  0141FA  0101               	movlb	1	; () banked
 36166  0141FC  59C8               	subwfb	(_LCDclearCount+1)& (0+255),w,b
 36167  0141FE  B0D8               	btfsc	status,0,c
 36168  014200  D00B               	goto	i1l15801
 36169                           
 36170                           ; BSR set to: 1
 36171                           ;LCD.c: 286: {
 36172                           ;LCD.c: 287: LCDclearCount++;
 36173  014202  0E01               	movlw	1
 36174  014204  0101               	movlb	1	; () banked
 36175  014206  27C7               	addwf	_LCDclearCount& (0+255),f,b
 36176  014208  0E00               	movlw	0
 36177  01420A  23C8               	addwfc	(_LCDclearCount+1)& (0+255),f,b
 36178  01420C  23C9               	addwfc	(_LCDclearCount+2)& (0+255),f,b
 36179  01420E  23CA               	addwfc	(_LCDclearCount+3)& (0+255),f,b
 36180                           
 36181                           ; BSR set to: 1
 36182                           ;LCD.c: 288: LCDwait = 1;
 36183  014210  0E01               	movlw	1
 36184  014212  0101               	movlb	1	; () banked
 36185  014214  6F12               	movwf	_LCDwait& (0+255),b
 36186                           
 36187                           ;LCD.c: 289: }
 36188  014216  0012               	return	
 36189  014218                     i1l15801:
 36190                           
 36191                           ; BSR set to: 1
 36192                           ;LCD.c: 290: else if(LCDclearCount == (25000-1))
 36193  014218  0EA7               	movlw	167
 36194  01421A  0101               	movlb	1	; () banked
 36195  01421C  19C7               	xorwf	_LCDclearCount& (0+255),w,b
 36196  01421E  E108               	bnz	i1u2035_21
 36197  014220  0E61               	movlw	97
 36198  014222  0101               	movlb	1	; () banked
 36199  014224  19C8               	xorwf	(_LCDclearCount+1)& (0+255),w,b
 36200  014226  0101               	movlb	1	; () banked
 36201  014228  11C9               	iorwf	(_LCDclearCount+2)& (0+255),w,b
 36202  01422A  0101               	movlb	1	; () banked
 36203  01422C  11CA               	iorwf	(_LCDclearCount+3)& (0+255),w,b
 36204  01422E  A4D8               	btfss	status,2,c
 36205  014230                     i1u2035_21:
 36206  014230  0012               	return	
 36207                           
 36208                           ; BSR set to: 1
 36209                           ;LCD.c: 291: {
 36210                           ;LCD.c: 292: LCDclearCount++;
 36211  014232  0E01               	movlw	1
 36212  014234  0101               	movlb	1	; () banked
 36213  014236  27C7               	addwf	_LCDclearCount& (0+255),f,b
 36214  014238  0E00               	movlw	0
 36215  01423A  23C8               	addwfc	(_LCDclearCount+1)& (0+255),f,b
 36216  01423C  23C9               	addwfc	(_LCDclearCount+2)& (0+255),f,b
 36217  01423E  23CA               	addwfc	(_LCDclearCount+3)& (0+255),f,b
 36218                           
 36219                           ; BSR set to: 1
 36220                           ;LCD.c: 293: LCDwait = 0;
 36221  014240  0E00               	movlw	0
 36222  014242  0101               	movlb	1	; () banked
 36223  014244  6F12               	movwf	_LCDwait& (0+255),b
 36224                           
 36225                           ; BSR set to: 1
 36226                           ;LCD.c: 294: if(ScrollFIFOCount == 0)
 36227  014246  0101               	movlb	1	; () banked
 36228  014248  5114               	movf	_ScrollFIFOCount& (0+255),w,b
 36229  01424A  A4D8               	btfss	status,2,c
 36230  01424C  D00E               	goto	i1l15817
 36231                           
 36232                           ; BSR set to: 1
 36233                           ;LCD.c: 295: {
 36234                           ;LCD.c: 296: ScrollDisplayPosition = 0;
 36235  01424E  0E00               	movlw	0
 36236  014250  0101               	movlb	1	; () banked
 36237  014252  6F13               	movwf	_ScrollDisplayPosition& (0+255),b
 36238                           
 36239                           ; BSR set to: 1
 36240                           ;LCD.c: 297: ClearLCD();
 36241  014254  EC29  F008         	call	i1_ClearLCD	;wreg free
 36242                           
 36243                           ;LCD.c: 298: SetLCDcursor(0, 0);
 36244  014258  0E00               	movlw	0
 36245  01425A  6E0F               	movwf	i1SetLCDcursor@Col,c
 36246  01425C  0E00               	movlw	0
 36247  01425E  EC20  F007         	call	i1_SetLCDcursor
 36248                           
 36249                           ;LCD.c: 299: LCDPrintChar('>');
 36250  014262  0E3E               	movlw	62
 36251  014264  EC1E  F008         	call	i1_LCDPrintChar
 36252                           
 36253                           ;LCD.c: 300: }
 36254  014268  0012               	return	
 36255  01426A                     i1l15817:
 36256                           
 36257                           ;LCD.c: 301: else
 36258                           ;LCD.c: 302: {
 36259                           ;LCD.c: 303: ScrollDisplayPosition++;
 36260  01426A  0101               	movlb	1	; () banked
 36261  01426C  2B13               	incf	_ScrollDisplayPosition& (0+255),f,b
 36262                           
 36263                           ; BSR set to: 1
 36264                           ;LCD.c: 304: if(ScrollDisplayPosition == 1)
 36265  01426E  0101               	movlb	1	; () banked
 36266  014270  0513               	decf	_ScrollDisplayPosition& (0+255),w,b
 36267  014272  A4D8               	btfss	status,2,c
 36268  014274  D00E               	goto	i1l15825
 36269                           
 36270                           ; BSR set to: 1
 36271                           ;LCD.c: 305: {
 36272                           ;LCD.c: 306: ClearLCD();
 36273  014276  EC29  F008         	call	i1_ClearLCD	;wreg free
 36274                           
 36275                           ;LCD.c: 307: SetLCDcursor(1, 0);
 36276  01427A  0E00               	movlw	0
 36277  01427C  6E0F               	movwf	i1SetLCDcursor@Col,c
 36278  01427E  0E01               	movlw	1
 36279  014280  EC20  F007         	call	i1_SetLCDcursor
 36280                           
 36281                           ;LCD.c: 308: LCDPrintString(Scroll_1);
 36282  014284  0E16               	movlw	low _Scroll_1
 36283  014286  6E0F               	movwf	i1LCDPrintString@Text,c
 36284  014288  0E01               	movlw	high _Scroll_1
 36285  01428A  6E10               	movwf	i1LCDPrintString@Text+1,c
 36286  01428C  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36287                           
 36288                           ;LCD.c: 309: }
 36289  014290  D185               	goto	i1l15923
 36290  014292                     i1l15825:
 36291                           
 36292                           ;LCD.c: 310: else if(ScrollDisplayPosition == 2)
 36293  014292  0E02               	movlw	2
 36294  014294  0101               	movlb	1	; () banked
 36295  014296  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 36296  014298  A4D8               	btfss	status,2,c
 36297  01429A  D023               	goto	i1l15835
 36298                           
 36299                           ; BSR set to: 1
 36300                           ;LCD.c: 311: {
 36301                           ;LCD.c: 312: ClearLCD();
 36302  01429C  EC29  F008         	call	i1_ClearLCD	;wreg free
 36303                           
 36304                           ;LCD.c: 313: SetLCDcursor(0, 0);
 36305  0142A0  0E00               	movlw	0
 36306  0142A2  6E0F               	movwf	i1SetLCDcursor@Col,c
 36307  0142A4  0E00               	movlw	0
 36308  0142A6  EC20  F007         	call	i1_SetLCDcursor
 36309                           
 36310                           ;LCD.c: 314: LCDPrintString(Scroll_1);
 36311  0142AA  0E16               	movlw	low _Scroll_1
 36312  0142AC  6E0F               	movwf	i1LCDPrintString@Text,c
 36313  0142AE  0E01               	movlw	high _Scroll_1
 36314  0142B0  6E10               	movwf	i1LCDPrintString@Text+1,c
 36315  0142B2  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36316                           
 36317                           ;LCD.c: 315: SetLCDcursor(1, 0);
 36318  0142B6  0E00               	movlw	0
 36319  0142B8  6E0F               	movwf	i1SetLCDcursor@Col,c
 36320  0142BA  0E01               	movlw	1
 36321  0142BC  EC20  F007         	call	i1_SetLCDcursor
 36322                           
 36323                           ;LCD.c: 316: LCDPrintString(Scroll_2);
 36324  0142C0  0E26               	movlw	low _Scroll_2
 36325  0142C2  6E0F               	movwf	i1LCDPrintString@Text,c
 36326  0142C4  0E01               	movlw	high _Scroll_2
 36327  0142C6  6E10               	movwf	i1LCDPrintString@Text+1,c
 36328  0142C8  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36329                           
 36330                           ;LCD.c: 317: cleanBuffer(Scroll_1, 16);
 36331  0142CC  0E16               	movlw	low _Scroll_1
 36332  0142CE  6E01               	movwf	i1cleanBuffer@data,c
 36333  0142D0  0E01               	movlw	high _Scroll_1
 36334  0142D2  6E02               	movwf	i1cleanBuffer@data+1,c
 36335  0142D4  0E00               	movlw	0
 36336  0142D6  6E04               	movwf	i1cleanBuffer@count+1,c
 36337  0142D8  0E10               	movlw	16
 36338  0142DA  6E03               	movwf	i1cleanBuffer@count,c
 36339  0142DC  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 36340                           
 36341                           ;LCD.c: 318: }
 36342  0142E0  D15D               	goto	i1l15923
 36343  0142E2                     i1l15835:
 36344                           
 36345                           ;LCD.c: 319: else if(ScrollDisplayPosition == 3)
 36346  0142E2  0E03               	movlw	3
 36347  0142E4  0101               	movlb	1	; () banked
 36348  0142E6  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 36349  0142E8  A4D8               	btfss	status,2,c
 36350  0142EA  D023               	goto	i1l15845
 36351                           
 36352                           ; BSR set to: 1
 36353                           ;LCD.c: 320: {
 36354                           ;LCD.c: 321: ClearLCD();
 36355  0142EC  EC29  F008         	call	i1_ClearLCD	;wreg free
 36356                           
 36357                           ;LCD.c: 322: SetLCDcursor(0, 0);
 36358  0142F0  0E00               	movlw	0
 36359  0142F2  6E0F               	movwf	i1SetLCDcursor@Col,c
 36360  0142F4  0E00               	movlw	0
 36361  0142F6  EC20  F007         	call	i1_SetLCDcursor
 36362                           
 36363                           ;LCD.c: 323: LCDPrintString(Scroll_2);
 36364  0142FA  0E26               	movlw	low _Scroll_2
 36365  0142FC  6E0F               	movwf	i1LCDPrintString@Text,c
 36366  0142FE  0E01               	movlw	high _Scroll_2
 36367  014300  6E10               	movwf	i1LCDPrintString@Text+1,c
 36368  014302  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36369                           
 36370                           ;LCD.c: 324: SetLCDcursor(1, 0);
 36371  014306  0E00               	movlw	0
 36372  014308  6E0F               	movwf	i1SetLCDcursor@Col,c
 36373  01430A  0E01               	movlw	1
 36374  01430C  EC20  F007         	call	i1_SetLCDcursor
 36375                           
 36376                           ;LCD.c: 325: LCDPrintString(Scroll_3);
 36377  014310  0E36               	movlw	low _Scroll_3
 36378  014312  6E0F               	movwf	i1LCDPrintString@Text,c
 36379  014314  0E01               	movlw	high _Scroll_3
 36380  014316  6E10               	movwf	i1LCDPrintString@Text+1,c
 36381  014318  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36382                           
 36383                           ;LCD.c: 326: cleanBuffer(Scroll_2, 16);
 36384  01431C  0E26               	movlw	low _Scroll_2
 36385  01431E  6E01               	movwf	i1cleanBuffer@data,c
 36386  014320  0E01               	movlw	high _Scroll_2
 36387  014322  6E02               	movwf	i1cleanBuffer@data+1,c
 36388  014324  0E00               	movlw	0
 36389  014326  6E04               	movwf	i1cleanBuffer@count+1,c
 36390  014328  0E10               	movlw	16
 36391  01432A  6E03               	movwf	i1cleanBuffer@count,c
 36392  01432C  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 36393                           
 36394                           ;LCD.c: 327: }
 36395  014330  D135               	goto	i1l15923
 36396  014332                     i1l15845:
 36397                           
 36398                           ;LCD.c: 328: else if(ScrollDisplayPosition == 4)
 36399  014332  0E04               	movlw	4
 36400  014334  0101               	movlb	1	; () banked
 36401  014336  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 36402  014338  A4D8               	btfss	status,2,c
 36403  01433A  D023               	goto	i1l15855
 36404                           
 36405                           ; BSR set to: 1
 36406                           ;LCD.c: 329: {
 36407                           ;LCD.c: 330: ClearLCD();
 36408  01433C  EC29  F008         	call	i1_ClearLCD	;wreg free
 36409                           
 36410                           ;LCD.c: 331: SetLCDcursor(0, 0);
 36411  014340  0E00               	movlw	0
 36412  014342  6E0F               	movwf	i1SetLCDcursor@Col,c
 36413  014344  0E00               	movlw	0
 36414  014346  EC20  F007         	call	i1_SetLCDcursor
 36415                           
 36416                           ;LCD.c: 332: LCDPrintString(Scroll_3);
 36417  01434A  0E36               	movlw	low _Scroll_3
 36418  01434C  6E0F               	movwf	i1LCDPrintString@Text,c
 36419  01434E  0E01               	movlw	high _Scroll_3
 36420  014350  6E10               	movwf	i1LCDPrintString@Text+1,c
 36421  014352  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36422                           
 36423                           ;LCD.c: 333: SetLCDcursor(1, 0);
 36424  014356  0E00               	movlw	0
 36425  014358  6E0F               	movwf	i1SetLCDcursor@Col,c
 36426  01435A  0E01               	movlw	1
 36427  01435C  EC20  F007         	call	i1_SetLCDcursor
 36428                           
 36429                           ;LCD.c: 334: LCDPrintString(Scroll_4);
 36430  014360  0E46               	movlw	low _Scroll_4
 36431  014362  6E0F               	movwf	i1LCDPrintString@Text,c
 36432  014364  0E01               	movlw	high _Scroll_4
 36433  014366  6E10               	movwf	i1LCDPrintString@Text+1,c
 36434  014368  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36435                           
 36436                           ;LCD.c: 335: cleanBuffer(Scroll_3, 16);
 36437  01436C  0E36               	movlw	low _Scroll_3
 36438  01436E  6E01               	movwf	i1cleanBuffer@data,c
 36439  014370  0E01               	movlw	high _Scroll_3
 36440  014372  6E02               	movwf	i1cleanBuffer@data+1,c
 36441  014374  0E00               	movlw	0
 36442  014376  6E04               	movwf	i1cleanBuffer@count+1,c
 36443  014378  0E10               	movlw	16
 36444  01437A  6E03               	movwf	i1cleanBuffer@count,c
 36445  01437C  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 36446                           
 36447                           ;LCD.c: 336: }
 36448  014380  D10D               	goto	i1l15923
 36449  014382                     i1l15855:
 36450                           
 36451                           ;LCD.c: 337: else if(ScrollDisplayPosition == 5)
 36452  014382  0E05               	movlw	5
 36453  014384  0101               	movlb	1	; () banked
 36454  014386  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 36455  014388  A4D8               	btfss	status,2,c
 36456  01438A  D023               	goto	i1l15865
 36457                           
 36458                           ; BSR set to: 1
 36459                           ;LCD.c: 338: {
 36460                           ;LCD.c: 339: ClearLCD();
 36461  01438C  EC29  F008         	call	i1_ClearLCD	;wreg free
 36462                           
 36463                           ;LCD.c: 340: SetLCDcursor(0, 0);
 36464  014390  0E00               	movlw	0
 36465  014392  6E0F               	movwf	i1SetLCDcursor@Col,c
 36466  014394  0E00               	movlw	0
 36467  014396  EC20  F007         	call	i1_SetLCDcursor
 36468                           
 36469                           ;LCD.c: 341: LCDPrintString(Scroll_4);
 36470  01439A  0E46               	movlw	low _Scroll_4
 36471  01439C  6E0F               	movwf	i1LCDPrintString@Text,c
 36472  01439E  0E01               	movlw	high _Scroll_4
 36473  0143A0  6E10               	movwf	i1LCDPrintString@Text+1,c
 36474  0143A2  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36475                           
 36476                           ;LCD.c: 342: SetLCDcursor(1, 0);
 36477  0143A6  0E00               	movlw	0
 36478  0143A8  6E0F               	movwf	i1SetLCDcursor@Col,c
 36479  0143AA  0E01               	movlw	1
 36480  0143AC  EC20  F007         	call	i1_SetLCDcursor
 36481                           
 36482                           ;LCD.c: 343: LCDPrintString(Scroll_5);
 36483  0143B0  0E56               	movlw	low _Scroll_5
 36484  0143B2  6E0F               	movwf	i1LCDPrintString@Text,c
 36485  0143B4  0E01               	movlw	high _Scroll_5
 36486  0143B6  6E10               	movwf	i1LCDPrintString@Text+1,c
 36487  0143B8  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36488                           
 36489                           ;LCD.c: 344: cleanBuffer(Scroll_4, 16);
 36490  0143BC  0E46               	movlw	low _Scroll_4
 36491  0143BE  6E01               	movwf	i1cleanBuffer@data,c
 36492  0143C0  0E01               	movlw	high _Scroll_4
 36493  0143C2  6E02               	movwf	i1cleanBuffer@data+1,c
 36494  0143C4  0E00               	movlw	0
 36495  0143C6  6E04               	movwf	i1cleanBuffer@count+1,c
 36496  0143C8  0E10               	movlw	16
 36497  0143CA  6E03               	movwf	i1cleanBuffer@count,c
 36498  0143CC  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 36499                           
 36500                           ;LCD.c: 345: }
 36501  0143D0  D0E5               	goto	i1l15923
 36502  0143D2                     i1l15865:
 36503                           
 36504                           ;LCD.c: 346: else if(ScrollDisplayPosition == 6)
 36505  0143D2  0E06               	movlw	6
 36506  0143D4  0101               	movlb	1	; () banked
 36507  0143D6  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 36508  0143D8  A4D8               	btfss	status,2,c
 36509  0143DA  D023               	goto	i1l15875
 36510                           
 36511                           ; BSR set to: 1
 36512                           ;LCD.c: 347: {
 36513                           ;LCD.c: 348: ClearLCD();
 36514  0143DC  EC29  F008         	call	i1_ClearLCD	;wreg free
 36515                           
 36516                           ;LCD.c: 349: SetLCDcursor(0, 0);
 36517  0143E0  0E00               	movlw	0
 36518  0143E2  6E0F               	movwf	i1SetLCDcursor@Col,c
 36519  0143E4  0E00               	movlw	0
 36520  0143E6  EC20  F007         	call	i1_SetLCDcursor
 36521                           
 36522                           ;LCD.c: 350: LCDPrintString(Scroll_5);
 36523  0143EA  0E56               	movlw	low _Scroll_5
 36524  0143EC  6E0F               	movwf	i1LCDPrintString@Text,c
 36525  0143EE  0E01               	movlw	high _Scroll_5
 36526  0143F0  6E10               	movwf	i1LCDPrintString@Text+1,c
 36527  0143F2  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36528                           
 36529                           ;LCD.c: 351: SetLCDcursor(1, 0);
 36530  0143F6  0E00               	movlw	0
 36531  0143F8  6E0F               	movwf	i1SetLCDcursor@Col,c
 36532  0143FA  0E01               	movlw	1
 36533  0143FC  EC20  F007         	call	i1_SetLCDcursor
 36534                           
 36535                           ;LCD.c: 352: LCDPrintString(Scroll_6);
 36536  014400  0E50               	movlw	low _Scroll_6
 36537  014402  6E0F               	movwf	i1LCDPrintString@Text,c
 36538  014404  0E00               	movlw	high _Scroll_6
 36539  014406  6E10               	movwf	i1LCDPrintString@Text+1,c
 36540  014408  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36541                           
 36542                           ;LCD.c: 353: cleanBuffer(Scroll_5, 16);
 36543  01440C  0E56               	movlw	low _Scroll_5
 36544  01440E  6E01               	movwf	i1cleanBuffer@data,c
 36545  014410  0E01               	movlw	high _Scroll_5
 36546  014412  6E02               	movwf	i1cleanBuffer@data+1,c
 36547  014414  0E00               	movlw	0
 36548  014416  6E04               	movwf	i1cleanBuffer@count+1,c
 36549  014418  0E10               	movlw	16
 36550  01441A  6E03               	movwf	i1cleanBuffer@count,c
 36551  01441C  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 36552                           
 36553                           ;LCD.c: 354: }
 36554  014420  D0BD               	goto	i1l15923
 36555  014422                     i1l15875:
 36556                           
 36557                           ;LCD.c: 355: else if(ScrollDisplayPosition == 7)
 36558  014422  0E07               	movlw	7
 36559  014424  0101               	movlb	1	; () banked
 36560  014426  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 36561  014428  A4D8               	btfss	status,2,c
 36562  01442A  D023               	goto	i1l15885
 36563                           
 36564                           ; BSR set to: 1
 36565                           ;LCD.c: 356: {
 36566                           ;LCD.c: 357: ClearLCD();
 36567  01442C  EC29  F008         	call	i1_ClearLCD	;wreg free
 36568                           
 36569                           ;LCD.c: 358: SetLCDcursor(0, 0);
 36570  014430  0E00               	movlw	0
 36571  014432  6E0F               	movwf	i1SetLCDcursor@Col,c
 36572  014434  0E00               	movlw	0
 36573  014436  EC20  F007         	call	i1_SetLCDcursor
 36574                           
 36575                           ;LCD.c: 359: LCDPrintString(Scroll_6);
 36576  01443A  0E50               	movlw	low _Scroll_6
 36577  01443C  6E0F               	movwf	i1LCDPrintString@Text,c
 36578  01443E  0E00               	movlw	high _Scroll_6
 36579  014440  6E10               	movwf	i1LCDPrintString@Text+1,c
 36580  014442  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36581                           
 36582                           ;LCD.c: 360: SetLCDcursor(1, 0);
 36583  014446  0E00               	movlw	0
 36584  014448  6E0F               	movwf	i1SetLCDcursor@Col,c
 36585  01444A  0E01               	movlw	1
 36586  01444C  EC20  F007         	call	i1_SetLCDcursor
 36587                           
 36588                           ;LCD.c: 361: LCDPrintString(Scroll_7);
 36589  014450  0E67               	movlw	low _Scroll_7
 36590  014452  6E0F               	movwf	i1LCDPrintString@Text,c
 36591  014454  0E02               	movlw	high _Scroll_7
 36592  014456  6E10               	movwf	i1LCDPrintString@Text+1,c
 36593  014458  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36594                           
 36595                           ;LCD.c: 362: cleanBuffer(Scroll_6, 16);
 36596  01445C  0E50               	movlw	low _Scroll_6
 36597  01445E  6E01               	movwf	i1cleanBuffer@data,c
 36598  014460  0E00               	movlw	high _Scroll_6
 36599  014462  6E02               	movwf	i1cleanBuffer@data+1,c
 36600  014464  0E00               	movlw	0
 36601  014466  6E04               	movwf	i1cleanBuffer@count+1,c
 36602  014468  0E10               	movlw	16
 36603  01446A  6E03               	movwf	i1cleanBuffer@count,c
 36604  01446C  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 36605                           
 36606                           ;LCD.c: 363: }
 36607  014470  D095               	goto	i1l15923
 36608  014472                     i1l15885:
 36609                           
 36610                           ;LCD.c: 364: else if(ScrollDisplayPosition == 8)
 36611  014472  0E08               	movlw	8
 36612  014474  0101               	movlb	1	; () banked
 36613  014476  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 36614  014478  A4D8               	btfss	status,2,c
 36615  01447A  D023               	goto	i1l15895
 36616                           
 36617                           ; BSR set to: 1
 36618                           ;LCD.c: 365: {
 36619                           ;LCD.c: 366: ClearLCD();
 36620  01447C  EC29  F008         	call	i1_ClearLCD	;wreg free
 36621                           
 36622                           ;LCD.c: 367: SetLCDcursor(0, 0);
 36623  014480  0E00               	movlw	0
 36624  014482  6E0F               	movwf	i1SetLCDcursor@Col,c
 36625  014484  0E00               	movlw	0
 36626  014486  EC20  F007         	call	i1_SetLCDcursor
 36627                           
 36628                           ;LCD.c: 368: LCDPrintString(Scroll_7);
 36629  01448A  0E67               	movlw	low _Scroll_7
 36630  01448C  6E0F               	movwf	i1LCDPrintString@Text,c
 36631  01448E  0E02               	movlw	high _Scroll_7
 36632  014490  6E10               	movwf	i1LCDPrintString@Text+1,c
 36633  014492  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36634                           
 36635                           ;LCD.c: 369: SetLCDcursor(1, 0);
 36636  014496  0E00               	movlw	0
 36637  014498  6E0F               	movwf	i1SetLCDcursor@Col,c
 36638  01449A  0E01               	movlw	1
 36639  01449C  EC20  F007         	call	i1_SetLCDcursor
 36640                           
 36641                           ;LCD.c: 370: LCDPrintString(Scroll_8);
 36642  0144A0  0E74               	movlw	low _Scroll_8
 36643  0144A2  6E0F               	movwf	i1LCDPrintString@Text,c
 36644  0144A4  0E03               	movlw	high _Scroll_8
 36645  0144A6  6E10               	movwf	i1LCDPrintString@Text+1,c
 36646  0144A8  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36647                           
 36648                           ;LCD.c: 371: cleanBuffer(Scroll_7, 16);
 36649  0144AC  0E67               	movlw	low _Scroll_7
 36650  0144AE  6E01               	movwf	i1cleanBuffer@data,c
 36651  0144B0  0E02               	movlw	high _Scroll_7
 36652  0144B2  6E02               	movwf	i1cleanBuffer@data+1,c
 36653  0144B4  0E00               	movlw	0
 36654  0144B6  6E04               	movwf	i1cleanBuffer@count+1,c
 36655  0144B8  0E10               	movlw	16
 36656  0144BA  6E03               	movwf	i1cleanBuffer@count,c
 36657  0144BC  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 36658                           
 36659                           ;LCD.c: 372: }
 36660  0144C0  D06D               	goto	i1l15923
 36661  0144C2                     i1l15895:
 36662                           
 36663                           ;LCD.c: 373: else if(ScrollDisplayPosition == 9)
 36664  0144C2  0E09               	movlw	9
 36665  0144C4  0101               	movlb	1	; () banked
 36666  0144C6  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 36667  0144C8  A4D8               	btfss	status,2,c
 36668  0144CA  D023               	goto	i1l15905
 36669                           
 36670                           ; BSR set to: 1
 36671                           ;LCD.c: 374: {
 36672                           ;LCD.c: 375: ClearLCD();
 36673  0144CC  EC29  F008         	call	i1_ClearLCD	;wreg free
 36674                           
 36675                           ;LCD.c: 376: SetLCDcursor(0, 0);
 36676  0144D0  0E00               	movlw	0
 36677  0144D2  6E0F               	movwf	i1SetLCDcursor@Col,c
 36678  0144D4  0E00               	movlw	0
 36679  0144D6  EC20  F007         	call	i1_SetLCDcursor
 36680                           
 36681                           ;LCD.c: 377: LCDPrintString(Scroll_8);
 36682  0144DA  0E74               	movlw	low _Scroll_8
 36683  0144DC  6E0F               	movwf	i1LCDPrintString@Text,c
 36684  0144DE  0E03               	movlw	high _Scroll_8
 36685  0144E0  6E10               	movwf	i1LCDPrintString@Text+1,c
 36686  0144E2  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36687                           
 36688                           ;LCD.c: 378: SetLCDcursor(1, 0);
 36689  0144E6  0E00               	movlw	0
 36690  0144E8  6E0F               	movwf	i1SetLCDcursor@Col,c
 36691  0144EA  0E01               	movlw	1
 36692  0144EC  EC20  F007         	call	i1_SetLCDcursor
 36693                           
 36694                           ;LCD.c: 379: LCDPrintString(Scroll_9);
 36695  0144F0  0E84               	movlw	low _Scroll_9
 36696  0144F2  6E0F               	movwf	i1LCDPrintString@Text,c
 36697  0144F4  0E03               	movlw	high _Scroll_9
 36698  0144F6  6E10               	movwf	i1LCDPrintString@Text+1,c
 36699  0144F8  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36700                           
 36701                           ;LCD.c: 380: cleanBuffer(Scroll_8, 16);
 36702  0144FC  0E74               	movlw	low _Scroll_8
 36703  0144FE  6E01               	movwf	i1cleanBuffer@data,c
 36704  014500  0E03               	movlw	high _Scroll_8
 36705  014502  6E02               	movwf	i1cleanBuffer@data+1,c
 36706  014504  0E00               	movlw	0
 36707  014506  6E04               	movwf	i1cleanBuffer@count+1,c
 36708  014508  0E10               	movlw	16
 36709  01450A  6E03               	movwf	i1cleanBuffer@count,c
 36710  01450C  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 36711                           
 36712                           ;LCD.c: 381: }
 36713  014510  D045               	goto	i1l15923
 36714  014512                     i1l15905:
 36715                           
 36716                           ;LCD.c: 382: else if(ScrollDisplayPosition == 10)
 36717  014512  0E0A               	movlw	10
 36718  014514  0101               	movlb	1	; () banked
 36719  014516  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 36720  014518  A4D8               	btfss	status,2,c
 36721  01451A  D023               	goto	i1l15915
 36722                           
 36723                           ; BSR set to: 1
 36724                           ;LCD.c: 383: {
 36725                           ;LCD.c: 384: ClearLCD();
 36726  01451C  EC29  F008         	call	i1_ClearLCD	;wreg free
 36727                           
 36728                           ;LCD.c: 385: SetLCDcursor(0, 0);
 36729  014520  0E00               	movlw	0
 36730  014522  6E0F               	movwf	i1SetLCDcursor@Col,c
 36731  014524  0E00               	movlw	0
 36732  014526  EC20  F007         	call	i1_SetLCDcursor
 36733                           
 36734                           ;LCD.c: 386: LCDPrintString(Scroll_9);
 36735  01452A  0E84               	movlw	low _Scroll_9
 36736  01452C  6E0F               	movwf	i1LCDPrintString@Text,c
 36737  01452E  0E03               	movlw	high _Scroll_9
 36738  014530  6E10               	movwf	i1LCDPrintString@Text+1,c
 36739  014532  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36740                           
 36741                           ;LCD.c: 387: SetLCDcursor(1, 0);
 36742  014536  0E00               	movlw	0
 36743  014538  6E0F               	movwf	i1SetLCDcursor@Col,c
 36744  01453A  0E01               	movlw	1
 36745  01453C  EC20  F007         	call	i1_SetLCDcursor
 36746                           
 36747                           ;LCD.c: 388: LCDPrintString(Scroll_10);
 36748  014540  0E64               	movlw	low _Scroll_10
 36749  014542  6E0F               	movwf	i1LCDPrintString@Text,c
 36750  014544  0E03               	movlw	high _Scroll_10
 36751  014546  6E10               	movwf	i1LCDPrintString@Text+1,c
 36752  014548  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36753                           
 36754                           ;LCD.c: 389: cleanBuffer(Scroll_9, 16);
 36755  01454C  0E84               	movlw	low _Scroll_9
 36756  01454E  6E01               	movwf	i1cleanBuffer@data,c
 36757  014550  0E03               	movlw	high _Scroll_9
 36758  014552  6E02               	movwf	i1cleanBuffer@data+1,c
 36759  014554  0E00               	movlw	0
 36760  014556  6E04               	movwf	i1cleanBuffer@count+1,c
 36761  014558  0E10               	movlw	16
 36762  01455A  6E03               	movwf	i1cleanBuffer@count,c
 36763  01455C  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 36764                           
 36765                           ;LCD.c: 390: }
 36766  014560  D01D               	goto	i1l15923
 36767  014562                     i1l15915:
 36768                           
 36769                           ;LCD.c: 391: else if(ScrollDisplayPosition == 11)
 36770  014562  0E0B               	movlw	11
 36771  014564  0101               	movlb	1	; () banked
 36772  014566  1913               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 36773  014568  A4D8               	btfss	status,2,c
 36774  01456A  D018               	goto	i1l15923
 36775                           
 36776                           ; BSR set to: 1
 36777                           ;LCD.c: 392: {
 36778                           ;LCD.c: 393: ClearLCD();
 36779  01456C  EC29  F008         	call	i1_ClearLCD	;wreg free
 36780                           
 36781                           ;LCD.c: 394: SetLCDcursor(0, 0);
 36782  014570  0E00               	movlw	0
 36783  014572  6E0F               	movwf	i1SetLCDcursor@Col,c
 36784  014574  0E00               	movlw	0
 36785  014576  EC20  F007         	call	i1_SetLCDcursor
 36786                           
 36787                           ;LCD.c: 395: LCDPrintString(Scroll_10);
 36788  01457A  0E64               	movlw	low _Scroll_10
 36789  01457C  6E0F               	movwf	i1LCDPrintString@Text,c
 36790  01457E  0E03               	movlw	high _Scroll_10
 36791  014580  6E10               	movwf	i1LCDPrintString@Text+1,c
 36792  014582  EC22  F0BF         	call	i1_LCDPrintString	;wreg free
 36793                           
 36794                           ;LCD.c: 396: cleanBuffer(Scroll_10, 16);
 36795  014586  0E64               	movlw	low _Scroll_10
 36796  014588  6E01               	movwf	i1cleanBuffer@data,c
 36797  01458A  0E03               	movlw	high _Scroll_10
 36798  01458C  6E02               	movwf	i1cleanBuffer@data+1,c
 36799  01458E  0E00               	movlw	0
 36800  014590  6E04               	movwf	i1cleanBuffer@count+1,c
 36801  014592  0E10               	movlw	16
 36802  014594  6E03               	movwf	i1cleanBuffer@count,c
 36803  014596  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 36804  01459A  D000               	goto	i1l15923
 36805  01459C                     i1l15923:
 36806                           
 36807                           ;LCD.c: 397: }
 36808                           ;LCD.c: 398: if(ScrollDisplayPosition > ScrollFIFOCount)
 36809  01459C  0101               	movlb	1	; () banked
 36810  01459E  5113               	movf	_ScrollDisplayPosition& (0+255),w,b
 36811  0145A0  0101               	movlb	1	; () banked
 36812  0145A2  5D14               	subwf	_ScrollFIFOCount& (0+255),w,b
 36813  0145A4  B0D8               	btfsc	status,0,c
 36814  0145A6  D006               	goto	i1l1147
 36815                           
 36816                           ; BSR set to: 1
 36817                           ;LCD.c: 399: {
 36818                           ;LCD.c: 400: ScrollFIFOCount=0;
 36819  0145A8  0E00               	movlw	0
 36820  0145AA  0101               	movlb	1	; () banked
 36821  0145AC  6F14               	movwf	_ScrollFIFOCount& (0+255),b
 36822                           
 36823                           ;LCD.c: 401: ScrollDisplayPosition=0;
 36824  0145AE  0E00               	movlw	0
 36825  0145B0  0101               	movlb	1	; () banked
 36826  0145B2  6F13               	movwf	_ScrollDisplayPosition& (0+255),b
 36827  0145B4                     i1l1147:
 36828                           
 36829                           ; BSR set to: 1
 36830                           ;LCD.c: 402: }
 36831                           ;LCD.c: 403: LCDclearCount = 15000;
 36832  0145B4  0E98               	movlw	152
 36833  0145B6  0101               	movlb	1	; () banked
 36834  0145B8  6FC7               	movwf	_LCDclearCount& (0+255),b
 36835  0145BA  0E3A               	movlw	58
 36836  0145BC  6FC8               	movwf	(_LCDclearCount+1)& (0+255),b
 36837  0145BE  0E00               	movlw	0
 36838  0145C0  6FC9               	movwf	(_LCDclearCount+2)& (0+255),b
 36839  0145C2  0E00               	movlw	0
 36840  0145C4  6FCA               	movwf	(_LCDclearCount+3)& (0+255),b
 36841                           
 36842                           ; BSR set to: 1
 36843                           
 36844                           ; BSR set to: 1
 36845  0145C6  0012               	return	
 36846                           
 36847                           ; BSR set to: 1
 36848  0145C8  0012               	return		;funcret
 36849  0145CA                     __end_ofi1_LCDScreenUpdate:
 36850                           	opt stack 0
 36851                           pclatu	equ	0xFFB
 36852                           pclath	equ	0xFFA
 36853                           tblptru	equ	0xFF8
 36854                           tblptrh	equ	0xFF7
 36855                           tblptrl	equ	0xFF6
 36856                           tablat	equ	0xFF5
 36857                           prodh	equ	0xFF4
 36858                           prodl	equ	0xFF3
 36859                           intcon	equ	0xFF2
 36860                           intcon2	equ	0xFF1
 36861                           indf0	equ	0xFEF
 36862                           postinc0	equ	0xFEE
 36863                           plusw0	equ	0xFEB
 36864                           fsr0h	equ	0xFEA
 36865                           fsr0l	equ	0xFE9
 36866                           wreg	equ	0xFE8
 36867                           indf1	equ	0xFE7
 36868                           postdec1	equ	0xFE5
 36869                           fsr1h	equ	0xFE2
 36870                           fsr1l	equ	0xFE1
 36871                           bsr	equ	0xFE0
 36872                           indf2	equ	0xFDF
 36873                           postinc2	equ	0xFDE
 36874                           postdec2	equ	0xFDD
 36875                           plusw2	equ	0xFDB
 36876                           fsr2h	equ	0xFDA
 36877                           fsr2l	equ	0xFD9
 36878                           status	equ	0xFD8
 36879                           
 36880 ;; *************** function i1_SetLCDcursor *****************
 36881 ;; Defined at:
 36882 ;;		line 195 in file "LCD.c"
 36883 ;; Parameters:    Size  Location     Type
 36884 ;;  Row             1    wreg     unsigned char 
 36885 ;;  Col             1   14[COMRAM] unsigned char 
 36886 ;; Auto vars:     Size  Location     Type
 36887 ;;  Row             1   15[COMRAM] unsigned char 
 36888 ;;  SetLCDcursor    1   16[COMRAM] unsigned char 
 36889 ;; Return value:  Size  Location     Type
 36890 ;;		None               void
 36891 ;; Registers used:
 36892 ;;		wreg, status,2, status,0, cstack
 36893 ;; Tracked objects:
 36894 ;;		On entry : 0/0
 36895 ;;		On exit  : 0/0
 36896 ;;		Unchanged: 0/0
 36897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36898 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36899 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36901 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36902 ;;Total ram usage:        3 bytes
 36903 ;; Hardware stack levels used:    1
 36904 ;; Hardware stack levels required when called:    4
 36905 ;; This function calls:
 36906 ;;		i1_SendLCDbyte
 36907 ;; This function is called by:
 36908 ;;		_low_isr
 36909 ;;		i1_LCDScreenUpdate
 36910 ;; This function uses a non-reentrant model
 36911 ;;
 36912                           
 36913                           	psect	text109
 36914  000E40                     __ptext109:
 36915                           	opt stack 0
 36916  000E40                     i1_SetLCDcursor:
 36917                           	opt stack 19
 36918                           
 36919                           ;incstack = 0
 36920                           ;i1SetLCDcursor@Row stored from wreg
 36921  000E40  6E10               	movwf	i1SetLCDcursor@Row,c
 36922                           
 36923                           ;LCD.c: 197: char address;
 36924                           ;LCD.c: 200: if (Row == 0)
 36925  000E42  5010               	movf	i1SetLCDcursor@Row,w,c
 36926  000E44  A4D8               	btfss	status,2,c
 36927  000E46  D002               	goto	i1l14705
 36928                           
 36929                           ;LCD.c: 201: {
 36930                           ;LCD.c: 202: address = 0;
 36931  000E48  0E00               	movlw	0
 36932  000E4A  D001               	goto	L30
 36933  000E4C                     i1l14705:
 36934                           
 36935                           ;LCD.c: 204: else
 36936                           ;LCD.c: 205: {
 36937                           ;LCD.c: 206: address = 0x40;
 36938  000E4C  0E40               	movlw	64
 36939  000E4E                     L30:
 36940  000E4E  6E11               	movwf	i1SetLCDcursor@address,c
 36941  000E50  D000               	goto	i1l14707
 36942  000E52                     i1l14707:
 36943                           
 36944                           ;LCD.c: 207: }
 36945                           ;LCD.c: 209: address |= Col;
 36946  000E52  500F               	movf	i1SetLCDcursor@Col,w,c
 36947  000E54  1211               	iorwf	i1SetLCDcursor@address,f,c
 36948                           
 36949                           ;LCD.c: 210: if(!LCDwait)
 36950  000E56  0101               	movlb	1	; () banked
 36951  000E58  5112               	movf	_LCDwait& (0+255),w,b
 36952  000E5A  A4D8               	btfss	status,2,c
 36953  000E5C  0012               	return	
 36954                           
 36955                           ; BSR set to: 1
 36956                           ;LCD.c: 211: {
 36957                           ;LCD.c: 212: SendLCDbyte(0x80 | address, 0);
 36958  000E5E  0E00               	movlw	0
 36959  000E60  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 36960  000E62  5011               	movf	i1SetLCDcursor@address,w,c
 36961  000E64  0980               	iorlw	128
 36962  000E66  EC44  F0B6         	call	i1_SendLCDbyte
 36963  000E6A  0012               	return	
 36964  000E6C  0012               	return		;funcret
 36965  000E6E                     __end_ofi1_SetLCDcursor:
 36966                           	opt stack 0
 36967                           pclatu	equ	0xFFB
 36968                           pclath	equ	0xFFA
 36969                           tblptru	equ	0xFF8
 36970                           tblptrh	equ	0xFF7
 36971                           tblptrl	equ	0xFF6
 36972                           tablat	equ	0xFF5
 36973                           prodh	equ	0xFF4
 36974                           prodl	equ	0xFF3
 36975                           intcon	equ	0xFF2
 36976                           intcon2	equ	0xFF1
 36977                           indf0	equ	0xFEF
 36978                           postinc0	equ	0xFEE
 36979                           plusw0	equ	0xFEB
 36980                           fsr0h	equ	0xFEA
 36981                           fsr0l	equ	0xFE9
 36982                           wreg	equ	0xFE8
 36983                           indf1	equ	0xFE7
 36984                           postdec1	equ	0xFE5
 36985                           fsr1h	equ	0xFE2
 36986                           fsr1l	equ	0xFE1
 36987                           bsr	equ	0xFE0
 36988                           indf2	equ	0xFDF
 36989                           postinc2	equ	0xFDE
 36990                           postdec2	equ	0xFDD
 36991                           plusw2	equ	0xFDB
 36992                           fsr2h	equ	0xFDA
 36993                           fsr2l	equ	0xFD9
 36994                           status	equ	0xFD8
 36995                           
 36996 ;; *************** function i1_LCDPrintString *****************
 36997 ;; Defined at:
 36998 ;;		line 236 in file "LCD.c"
 36999 ;; Parameters:    Size  Location     Type
 37000 ;;  Text            2   14[COMRAM] PTR const unsigned char 
 37001 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 37002 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 37003 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 37004 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 37005 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 37006 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 37007 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 37008 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 37009 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 37010 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 37011 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 37012 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 37013 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 37014 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 37015 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 37016 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 37017 ;;		 -> low_isr@LCD_TEMP(16), 
 37018 ;; Auto vars:     Size  Location     Type
 37019 ;;  LCDPrintStri    2   16[COMRAM] PTR unsigned char 
 37020 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 37021 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 37022 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 37023 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 37024 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 37025 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 37026 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 37027 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 37028 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 37029 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 37030 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 37031 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 37032 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 37033 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 37034 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 37035 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 37036 ;;		 -> low_isr@LCD_TEMP(16), 
 37037 ;; Return value:  Size  Location     Type
 37038 ;;		None               void
 37039 ;; Registers used:
 37040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37041 ;; Tracked objects:
 37042 ;;		On entry : 0/0
 37043 ;;		On exit  : 0/0
 37044 ;;		Unchanged: 0/0
 37045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37047 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37050 ;;Total ram usage:        4 bytes
 37051 ;; Hardware stack levels used:    1
 37052 ;; Hardware stack levels required when called:    4
 37053 ;; This function calls:
 37054 ;;		i1_SendLCDbyte
 37055 ;; This function is called by:
 37056 ;;		_low_isr
 37057 ;;		i1_LCDScreenUpdate
 37058 ;; This function uses a non-reentrant model
 37059 ;;
 37060                           
 37061                           	psect	text110
 37062  017E44                     __ptext110:
 37063                           	opt stack 0
 37064  017E44                     i1_LCDPrintString:
 37065                           	opt stack 18
 37066                           
 37067                           ;LCD.c: 238: unsigned char *c;
 37068                           ;LCD.c: 240: c = (unsigned char*)Text;
 37069                           
 37070                           ;incstack = 0
 37071  017E44  C00F  F011         	movff	i1LCDPrintString@Text,i1LCDPrintString@c
 37072  017E48  C010  F012         	movff	i1LCDPrintString@Text+1,i1LCDPrintString@c+1
 37073                           
 37074                           ;LCD.c: 242: while ((c != 0) && (*c != 0))
 37075  017E4C  D018               	goto	i1l14721
 37076  017E4E                     i1l14717:
 37077                           
 37078                           ;LCD.c: 243: {
 37079                           ;LCD.c: 244: SendLCDbyte(*c, 1);
 37080  017E4E  0E01               	movlw	1
 37081  017E50  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 37082  017E52  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 37083  017E56  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 37084  017E5A  0E00               	movlw	low (__mediumconst shr (0+16))
 37085  017E5C  6EF8               	movwf	tblptru,c
 37086  017E5E  0E0C               	movlw	(high __ramtop+-1)
 37087  017E60  64F7               	cpfsgt	tblptrh,c
 37088  017E62  D003               	bra	i1u1891_27
 37089  017E64  0008               	tblrd		*
 37090  017E66  50F5               	movf	tablat,w,c
 37091  017E68  D005               	bra	i1u1891_20
 37092  017E6A                     i1u1891_27:
 37093  017E6A  CFF6 FFE9          	movff	tblptrl,fsr0l
 37094  017E6E  CFF7 FFEA          	movff	tblptrh,fsr0h
 37095  017E72  50EF               	movf	indf0,w,c
 37096  017E74                     i1u1891_20:
 37097  017E74  EC44  F0B6         	call	i1_SendLCDbyte
 37098                           
 37099                           ;LCD.c: 245: c++;
 37100  017E78  4A11               	infsnz	i1LCDPrintString@c,f,c
 37101  017E7A  2A12               	incf	i1LCDPrintString@c+1,f,c
 37102  017E7C  D000               	goto	i1l14721
 37103  017E7E                     i1l14721:
 37104  017E7E  5011               	movf	i1LCDPrintString@c,w,c
 37105  017E80  1012               	iorwf	i1LCDPrintString@c+1,w,c
 37106  017E82  B4D8               	btfsc	status,2,c
 37107  017E84  0012               	return	
 37108  017E86  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 37109  017E8A  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 37110  017E8E  0E00               	movlw	low (__mediumconst shr (0+16))
 37111  017E90  6EF8               	movwf	tblptru,c
 37112  017E92  0E0C               	movlw	(high __ramtop+-1)
 37113  017E94  64F7               	cpfsgt	tblptrh,c
 37114  017E96  D003               	bra	i1u1893_27
 37115  017E98  0008               	tblrd		*
 37116  017E9A  50F5               	movf	tablat,w,c
 37117  017E9C  D005               	bra	i1u1893_20
 37118  017E9E                     i1u1893_27:
 37119  017E9E  CFF6 FFE9          	movff	tblptrl,fsr0l
 37120  017EA2  CFF7 FFEA          	movff	tblptrh,fsr0h
 37121  017EA6  50EF               	movf	indf0,w,c
 37122  017EA8                     i1u1893_20:
 37123  017EA8  0900               	iorlw	0
 37124  017EAA  B4D8               	btfsc	status,2,c
 37125  017EAC  0012               	return	
 37126  017EAE  D7CF               	goto	i1l14717
 37127  017EB0  0012               	return	
 37128  017EB2  0012               	return		;funcret
 37129  017EB4                     __end_ofi1_LCDPrintString:
 37130                           	opt stack 0
 37131                           pclatu	equ	0xFFB
 37132                           pclath	equ	0xFFA
 37133                           tblptru	equ	0xFF8
 37134                           tblptrh	equ	0xFF7
 37135                           tblptrl	equ	0xFF6
 37136                           tablat	equ	0xFF5
 37137                           prodh	equ	0xFF4
 37138                           prodl	equ	0xFF3
 37139                           intcon	equ	0xFF2
 37140                           intcon2	equ	0xFF1
 37141                           indf0	equ	0xFEF
 37142                           postinc0	equ	0xFEE
 37143                           plusw0	equ	0xFEB
 37144                           fsr0h	equ	0xFEA
 37145                           fsr0l	equ	0xFE9
 37146                           wreg	equ	0xFE8
 37147                           indf1	equ	0xFE7
 37148                           postdec1	equ	0xFE5
 37149                           fsr1h	equ	0xFE2
 37150                           fsr1l	equ	0xFE1
 37151                           bsr	equ	0xFE0
 37152                           indf2	equ	0xFDF
 37153                           postinc2	equ	0xFDE
 37154                           postdec2	equ	0xFDD
 37155                           plusw2	equ	0xFDB
 37156                           fsr2h	equ	0xFDA
 37157                           fsr2l	equ	0xFD9
 37158                           status	equ	0xFD8
 37159                           
 37160 ;; *************** function i1_LCDPrintChar *****************
 37161 ;; Defined at:
 37162 ;;		line 269 in file "LCD.c"
 37163 ;; Parameters:    Size  Location     Type
 37164 ;;  character       1    wreg     unsigned char 
 37165 ;; Auto vars:     Size  Location     Type
 37166 ;;  character       1   14[COMRAM] unsigned char 
 37167 ;; Return value:  Size  Location     Type
 37168 ;;		None               void
 37169 ;; Registers used:
 37170 ;;		wreg, status,2, status,0, cstack
 37171 ;; Tracked objects:
 37172 ;;		On entry : 0/0
 37173 ;;		On exit  : 0/0
 37174 ;;		Unchanged: 0/0
 37175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37180 ;;Total ram usage:        1 bytes
 37181 ;; Hardware stack levels used:    1
 37182 ;; Hardware stack levels required when called:    4
 37183 ;; This function calls:
 37184 ;;		i1_Reset_Timer1
 37185 ;;		i1_SendLCDbyte
 37186 ;;		i1_Start_Timer1
 37187 ;; This function is called by:
 37188 ;;		_low_isr
 37189 ;;		i1_LCDScreenUpdate
 37190 ;; This function uses a non-reentrant model
 37191 ;;
 37192                           
 37193                           	psect	text111
 37194  00103C                     __ptext111:
 37195                           	opt stack 0
 37196  00103C                     i1_LCDPrintChar:
 37197                           	opt stack 18
 37198                           
 37199                           ;incstack = 0
 37200                           ;i1LCDPrintChar@character stored from wreg
 37201  00103C  6E0F               	movwf	i1LCDPrintChar@character,c
 37202                           
 37203                           ;LCD.c: 271: SendLCDbyte(character, 1);
 37204  00103E  0E01               	movlw	1
 37205  001040  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 37206  001042  500F               	movf	i1LCDPrintChar@character,w,c
 37207  001044  EC44  F0B6         	call	i1_SendLCDbyte
 37208                           
 37209                           ;LCD.c: 272: Reset_Timer1();
 37210  001048  EC9E  F008         	call	i1_Reset_Timer1	;wreg free
 37211                           
 37212                           ;LCD.c: 273: Start_Timer1();
 37213  00104C  ECAC  F008         	call	i1_Start_Timer1	;wreg free
 37214  001050  0012               	return		;funcret
 37215  001052                     __end_ofi1_LCDPrintChar:
 37216                           	opt stack 0
 37217                           pclatu	equ	0xFFB
 37218                           pclath	equ	0xFFA
 37219                           tblptru	equ	0xFF8
 37220                           tblptrh	equ	0xFF7
 37221                           tblptrl	equ	0xFF6
 37222                           tablat	equ	0xFF5
 37223                           prodh	equ	0xFF4
 37224                           prodl	equ	0xFF3
 37225                           intcon	equ	0xFF2
 37226                           intcon2	equ	0xFF1
 37227                           indf0	equ	0xFEF
 37228                           postinc0	equ	0xFEE
 37229                           plusw0	equ	0xFEB
 37230                           fsr0h	equ	0xFEA
 37231                           fsr0l	equ	0xFE9
 37232                           wreg	equ	0xFE8
 37233                           indf1	equ	0xFE7
 37234                           postdec1	equ	0xFE5
 37235                           fsr1h	equ	0xFE2
 37236                           fsr1l	equ	0xFE1
 37237                           bsr	equ	0xFE0
 37238                           indf2	equ	0xFDF
 37239                           postinc2	equ	0xFDE
 37240                           postdec2	equ	0xFDD
 37241                           plusw2	equ	0xFDB
 37242                           fsr2h	equ	0xFDA
 37243                           fsr2l	equ	0xFD9
 37244                           status	equ	0xFD8
 37245                           
 37246 ;; *************** function i1_Start_Timer1 *****************
 37247 ;; Defined at:
 37248 ;;		line 151 in file "Timer.c"
 37249 ;; Parameters:    Size  Location     Type
 37250 ;;		None
 37251 ;; Auto vars:     Size  Location     Type
 37252 ;;		None
 37253 ;; Return value:  Size  Location     Type
 37254 ;;		None               void
 37255 ;; Registers used:
 37256 ;;		None
 37257 ;; Tracked objects:
 37258 ;;		On entry : 0/0
 37259 ;;		On exit  : 0/0
 37260 ;;		Unchanged: 0/0
 37261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37266 ;;Total ram usage:        0 bytes
 37267 ;; Hardware stack levels used:    1
 37268 ;; Hardware stack levels required when called:    1
 37269 ;; This function calls:
 37270 ;;		Nothing
 37271 ;; This function is called by:
 37272 ;;		i1_LCDPrintChar
 37273 ;; This function uses a non-reentrant model
 37274 ;;
 37275                           
 37276                           	psect	text112
 37277  001158                     __ptext112:
 37278                           	opt stack 0
 37279  001158                     i1_Start_Timer1:
 37280                           	opt stack 20
 37281                           
 37282                           ;Timer.c: 154: T1CONbits.TMR1ON =1;
 37283                           
 37284                           ;incstack = 0
 37285  001158  80CD               	bsf	4045,0,c	;volatile
 37286                           
 37287                           ;Timer.c: 156: PIR1bits.TMR1IF = 0;
 37288  00115A  909E               	bcf	3998,0,c	;volatile
 37289                           
 37290                           ;Timer.c: 157: PIE1bits.TMR1IE = 1;
 37291  00115C  809D               	bsf	3997,0,c	;volatile
 37292  00115E  0012               	return		;funcret
 37293  001160                     __end_ofi1_Start_Timer1:
 37294                           	opt stack 0
 37295                           pclatu	equ	0xFFB
 37296                           pclath	equ	0xFFA
 37297                           tblptru	equ	0xFF8
 37298                           tblptrh	equ	0xFF7
 37299                           tblptrl	equ	0xFF6
 37300                           tablat	equ	0xFF5
 37301                           prodh	equ	0xFF4
 37302                           prodl	equ	0xFF3
 37303                           intcon	equ	0xFF2
 37304                           intcon2	equ	0xFF1
 37305                           indf0	equ	0xFEF
 37306                           postinc0	equ	0xFEE
 37307                           plusw0	equ	0xFEB
 37308                           fsr0h	equ	0xFEA
 37309                           fsr0l	equ	0xFE9
 37310                           wreg	equ	0xFE8
 37311                           indf1	equ	0xFE7
 37312                           postdec1	equ	0xFE5
 37313                           fsr1h	equ	0xFE2
 37314                           fsr1l	equ	0xFE1
 37315                           bsr	equ	0xFE0
 37316                           indf2	equ	0xFDF
 37317                           postinc2	equ	0xFDE
 37318                           postdec2	equ	0xFDD
 37319                           plusw2	equ	0xFDB
 37320                           fsr2h	equ	0xFDA
 37321                           fsr2l	equ	0xFD9
 37322                           status	equ	0xFD8
 37323                           
 37324 ;; *************** function i1_Reset_Timer1 *****************
 37325 ;; Defined at:
 37326 ;;		line 165 in file "Timer.c"
 37327 ;; Parameters:    Size  Location     Type
 37328 ;;		None
 37329 ;; Auto vars:     Size  Location     Type
 37330 ;;		None
 37331 ;; Return value:  Size  Location     Type
 37332 ;;		None               void
 37333 ;; Registers used:
 37334 ;;		wreg, status,2
 37335 ;; Tracked objects:
 37336 ;;		On entry : 0/0
 37337 ;;		On exit  : 0/0
 37338 ;;		Unchanged: 0/0
 37339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37344 ;;Total ram usage:        0 bytes
 37345 ;; Hardware stack levels used:    1
 37346 ;; Hardware stack levels required when called:    1
 37347 ;; This function calls:
 37348 ;;		Nothing
 37349 ;; This function is called by:
 37350 ;;		i1_LCDPrintChar
 37351 ;; This function uses a non-reentrant model
 37352 ;;
 37353                           
 37354                           	psect	text113
 37355  00113C                     __ptext113:
 37356                           	opt stack 0
 37357  00113C                     i1_Reset_Timer1:
 37358                           	opt stack 20
 37359                           
 37360                           ;Timer.c: 171: TMR1H = 0;
 37361                           
 37362                           ;incstack = 0
 37363  00113C  0E00               	movlw	0
 37364  00113E  6ECF               	movwf	4047,c	;volatile
 37365                           
 37366                           ;Timer.c: 172: TMR1L = 2;
 37367  001140  0E02               	movlw	2
 37368  001142  6ECE               	movwf	4046,c	;volatile
 37369  001144  0012               	return		;funcret
 37370  001146                     __end_ofi1_Reset_Timer1:
 37371                           	opt stack 0
 37372                           pclatu	equ	0xFFB
 37373                           pclath	equ	0xFFA
 37374                           tblptru	equ	0xFF8
 37375                           tblptrh	equ	0xFF7
 37376                           tblptrl	equ	0xFF6
 37377                           tablat	equ	0xFF5
 37378                           prodh	equ	0xFF4
 37379                           prodl	equ	0xFF3
 37380                           intcon	equ	0xFF2
 37381                           intcon2	equ	0xFF1
 37382                           indf0	equ	0xFEF
 37383                           postinc0	equ	0xFEE
 37384                           plusw0	equ	0xFEB
 37385                           fsr0h	equ	0xFEA
 37386                           fsr0l	equ	0xFE9
 37387                           wreg	equ	0xFE8
 37388                           indf1	equ	0xFE7
 37389                           postdec1	equ	0xFE5
 37390                           fsr1h	equ	0xFE2
 37391                           fsr1l	equ	0xFE1
 37392                           bsr	equ	0xFE0
 37393                           indf2	equ	0xFDF
 37394                           postinc2	equ	0xFDE
 37395                           postdec2	equ	0xFDD
 37396                           plusw2	equ	0xFDB
 37397                           fsr2h	equ	0xFDA
 37398                           fsr2l	equ	0xFD9
 37399                           status	equ	0xFD8
 37400                           
 37401 ;; *************** function i1_ClearLCD *****************
 37402 ;; Defined at:
 37403 ;;		line 222 in file "LCD.c"
 37404 ;; Parameters:    Size  Location     Type
 37405 ;;		None
 37406 ;; Auto vars:     Size  Location     Type
 37407 ;;		None
 37408 ;; Return value:  Size  Location     Type
 37409 ;;		None               void
 37410 ;; Registers used:
 37411 ;;		wreg, status,2, status,0, cstack
 37412 ;; Tracked objects:
 37413 ;;		On entry : 0/0
 37414 ;;		On exit  : 0/0
 37415 ;;		Unchanged: 0/0
 37416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37421 ;;Total ram usage:        0 bytes
 37422 ;; Hardware stack levels used:    1
 37423 ;; Hardware stack levels required when called:    4
 37424 ;; This function calls:
 37425 ;;		i1_SendLCDbyte
 37426 ;; This function is called by:
 37427 ;;		_low_isr
 37428 ;;		i1_LCDScreenUpdate
 37429 ;; This function uses a non-reentrant model
 37430 ;;
 37431                           
 37432                           	psect	text114
 37433  001052                     __ptext114:
 37434                           	opt stack 0
 37435  001052                     i1_ClearLCD:
 37436                           	opt stack 18
 37437                           
 37438                           ;LCD.c: 227: SendLCDbyte(0x01, 0);
 37439                           
 37440                           ;incstack = 0
 37441  001052  0E00               	movlw	0
 37442  001054  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 37443  001056  0E01               	movlw	1
 37444  001058  EC44  F0B6         	call	i1_SendLCDbyte
 37445                           
 37446                           ;LCD.c: 228: SendLCDbyte(0x02, 0);
 37447  00105C  0E00               	movlw	0
 37448  00105E  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 37449  001060  0E02               	movlw	2
 37450  001062  EC44  F0B6         	call	i1_SendLCDbyte
 37451  001066  0012               	return		;funcret
 37452  001068                     __end_ofi1_ClearLCD:
 37453                           	opt stack 0
 37454                           pclatu	equ	0xFFB
 37455                           pclath	equ	0xFFA
 37456                           tblptru	equ	0xFF8
 37457                           tblptrh	equ	0xFF7
 37458                           tblptrl	equ	0xFF6
 37459                           tablat	equ	0xFF5
 37460                           prodh	equ	0xFF4
 37461                           prodl	equ	0xFF3
 37462                           intcon	equ	0xFF2
 37463                           intcon2	equ	0xFF1
 37464                           indf0	equ	0xFEF
 37465                           postinc0	equ	0xFEE
 37466                           plusw0	equ	0xFEB
 37467                           fsr0h	equ	0xFEA
 37468                           fsr0l	equ	0xFE9
 37469                           wreg	equ	0xFE8
 37470                           indf1	equ	0xFE7
 37471                           postdec1	equ	0xFE5
 37472                           fsr1h	equ	0xFE2
 37473                           fsr1l	equ	0xFE1
 37474                           bsr	equ	0xFE0
 37475                           indf2	equ	0xFDF
 37476                           postinc2	equ	0xFDE
 37477                           postdec2	equ	0xFDD
 37478                           plusw2	equ	0xFDB
 37479                           fsr2h	equ	0xFDA
 37480                           fsr2l	equ	0xFD9
 37481                           status	equ	0xFD8
 37482                           
 37483 ;; *************** function i1_SendLCDbyte *****************
 37484 ;; Defined at:
 37485 ;;		line 109 in file "LCD.c"
 37486 ;; Parameters:    Size  Location     Type
 37487 ;;  data            1    wreg     unsigned char 
 37488 ;;  isCommand       1   10[COMRAM] unsigned char 
 37489 ;; Auto vars:     Size  Location     Type
 37490 ;;  data            1   11[COMRAM] unsigned char 
 37491 ;;  SendLCDbyte     1   13[COMRAM] unsigned char 
 37492 ;;  SendLCDbyte     1   12[COMRAM] unsigned char 
 37493 ;; Return value:  Size  Location     Type
 37494 ;;		None               void
 37495 ;; Registers used:
 37496 ;;		wreg, status,2, status,0, cstack
 37497 ;; Tracked objects:
 37498 ;;		On entry : 0/0
 37499 ;;		On exit  : 0/0
 37500 ;;		Unchanged: 0/0
 37501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37502 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37503 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37505 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37506 ;;Total ram usage:        4 bytes
 37507 ;; Hardware stack levels used:    1
 37508 ;; Hardware stack levels required when called:    3
 37509 ;; This function calls:
 37510 ;;		i1_PulseEnablePin
 37511 ;;		i1_delayUS
 37512 ;; This function is called by:
 37513 ;;		i1_SetLCDcursor
 37514 ;;		i1_ClearLCD
 37515 ;;		i1_LCDPrintString
 37516 ;;		i1_LCDPrintChar
 37517 ;; This function uses a non-reentrant model
 37518 ;;
 37519                           
 37520                           	psect	text115
 37521  016C88                     __ptext115:
 37522                           	opt stack 0
 37523  016C88                     i1_SendLCDbyte:
 37524                           	opt stack 19
 37525                           
 37526                           ;incstack = 0
 37527                           ;i1SendLCDbyte@data stored from wreg
 37528  016C88  6E0C               	movwf	i1SendLCDbyte@data,c
 37529                           
 37530                           ;LCD.c: 111: unsigned char MSB_nibble=0;
 37531  016C8A  0E00               	movlw	0
 37532  016C8C  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 37533                           
 37534                           ;LCD.c: 112: unsigned char LSB_nibble=0;
 37535  016C8E  0E00               	movlw	0
 37536  016C90  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 37537                           
 37538                           ;LCD.c: 114: LATA &= ~(0b00001000+0b00010000+0b00100000);
 37539  016C92  0EC7               	movlw	199
 37540  016C94  1689               	andwf	3977,f,c	;volatile
 37541                           
 37542                           ;LCD.c: 115: LATE &= ~0b00000001;
 37543  016C96  908D               	bcf	3981,0,c	;volatile
 37544                           
 37545                           ;LCD.c: 116: LATD &= ~(0b10000000 + 0b00100000);
 37546  016C98  0E5F               	movlw	95
 37547  016C9A  168C               	andwf	3980,f,c	;volatile
 37548                           
 37549                           ;LCD.c: 117: delayUS(10);
 37550  016C9C  0E0A               	movlw	10
 37551  016C9E  6E01               	movwf	i1delayUS@US,c
 37552  016CA0  0E00               	movlw	0
 37553  016CA2  6E02               	movwf	i1delayUS@US+1,c
 37554  016CA4  0E00               	movlw	0
 37555  016CA6  6E03               	movwf	i1delayUS@US+2,c
 37556  016CA8  0E00               	movlw	0
 37557  016CAA  6E04               	movwf	i1delayUS@US+3,c
 37558  016CAC  EC77  F004         	call	i1_delayUS	;wreg free
 37559                           
 37560                           ;LCD.c: 118: MSB_nibble = (data & 0xF0)>>4;
 37561  016CB0  380C               	swapf	i1SendLCDbyte@data,w,c
 37562  016CB2  0B0F               	andlw	15
 37563  016CB4  0B0F               	andlw	15
 37564  016CB6  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 37565                           
 37566                           ;LCD.c: 119: LSB_nibble = (data & 0x0F);
 37567  016CB8  500C               	movf	i1SendLCDbyte@data,w,c
 37568  016CBA  0B0F               	andlw	15
 37569  016CBC  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 37570                           
 37571                           ;LCD.c: 120: if(!LCDwait)
 37572  016CBE  0101               	movlb	1	; () banked
 37573  016CC0  5112               	movf	_LCDwait& (0+255),w,b
 37574  016CC2  A4D8               	btfss	status,2,c
 37575  016CC4  D039               	goto	i1l13753
 37576                           
 37577                           ; BSR set to: 1
 37578                           ;LCD.c: 121: {
 37579                           ;LCD.c: 122: if(isCommand)
 37580  016CC6  500B               	movf	i1SendLCDbyte@isCommand,w,c
 37581  016CC8  B4D8               	btfsc	status,2,c
 37582  016CCA  D002               	goto	i1l13709
 37583                           
 37584                           ; BSR set to: 1
 37585                           ;LCD.c: 123: {
 37586                           ;LCD.c: 124: LATD |= (0b00100000);
 37587  016CCC  8A8C               	bsf	3980,5,c	;volatile
 37588                           
 37589                           ;LCD.c: 125: }
 37590  016CCE  D002               	goto	i1l13711
 37591  016CD0                     i1l13709:
 37592                           
 37593                           ; BSR set to: 1
 37594                           ;LCD.c: 126: else
 37595                           ;LCD.c: 127: {
 37596                           ;LCD.c: 128: LATD &= ~(0b00100000);
 37597  016CD0  9A8C               	bcf	3980,5,c	;volatile
 37598  016CD2  D000               	goto	i1l13711
 37599  016CD4                     i1l13711:
 37600                           
 37601                           ; BSR set to: 1
 37602                           ;LCD.c: 129: }
 37603                           ;LCD.c: 130: if(MSB_nibble&0b1000)
 37604  016CD4  A60D               	btfss	i1SendLCDbyte@MSB_nibble,3,c
 37605  016CD6  D002               	goto	i1l13715
 37606                           
 37607                           ; BSR set to: 1
 37608                           ;LCD.c: 131: {
 37609                           ;LCD.c: 132: LATA |= 0b00001000;
 37610  016CD8  8689               	bsf	3977,3,c	;volatile
 37611  016CDA  D000               	goto	i1l13715
 37612  016CDC                     i1l13715:
 37613                           
 37614                           ; BSR set to: 1
 37615                           ;LCD.c: 133: }
 37616                           ;LCD.c: 134: if(MSB_nibble&0b0100)
 37617  016CDC  A40D               	btfss	i1SendLCDbyte@MSB_nibble,2,c
 37618  016CDE  D002               	goto	i1l13719
 37619                           
 37620                           ; BSR set to: 1
 37621                           ;LCD.c: 135: {
 37622                           ;LCD.c: 136: LATA |= 0b00010000;
 37623  016CE0  8889               	bsf	3977,4,c	;volatile
 37624  016CE2  D000               	goto	i1l13719
 37625  016CE4                     i1l13719:
 37626                           
 37627                           ; BSR set to: 1
 37628                           ;LCD.c: 137: }
 37629                           ;LCD.c: 138: if(MSB_nibble&0b0010)
 37630  016CE4  A20D               	btfss	i1SendLCDbyte@MSB_nibble,1,c
 37631  016CE6  D002               	goto	i1l13723
 37632                           
 37633                           ; BSR set to: 1
 37634                           ;LCD.c: 139: {
 37635                           ;LCD.c: 140: LATA |= 0b00100000;
 37636  016CE8  8A89               	bsf	3977,5,c	;volatile
 37637  016CEA  D000               	goto	i1l13723
 37638  016CEC                     i1l13723:
 37639                           
 37640                           ; BSR set to: 1
 37641                           ;LCD.c: 141: }
 37642                           ;LCD.c: 142: if(MSB_nibble&0b0001)
 37643  016CEC  A00D               	btfss	i1SendLCDbyte@MSB_nibble,0,c
 37644  016CEE  D002               	goto	i1l13727
 37645                           
 37646                           ; BSR set to: 1
 37647                           ;LCD.c: 143: {
 37648                           ;LCD.c: 144: LATE |= 0b00000001;
 37649  016CF0  808D               	bsf	3981,0,c	;volatile
 37650  016CF2  D000               	goto	i1l13727
 37651  016CF4                     i1l13727:
 37652                           
 37653                           ; BSR set to: 1
 37654                           ;LCD.c: 145: }
 37655                           ;LCD.c: 146: PulseEnablePin();
 37656  016CF4  EC37  F007         	call	i1_PulseEnablePin	;wreg free
 37657                           
 37658                           ;LCD.c: 147: LATA &= ~(0b00001000+0b00010000+0b00100000);
 37659  016CF8  0EC7               	movlw	199
 37660  016CFA  1689               	andwf	3977,f,c	;volatile
 37661                           
 37662                           ;LCD.c: 148: LATE &= ~0b00000001;
 37663  016CFC  908D               	bcf	3981,0,c	;volatile
 37664                           
 37665                           ;LCD.c: 149: delayUS(10);
 37666  016CFE  0E0A               	movlw	10
 37667  016D00  6E01               	movwf	i1delayUS@US,c
 37668  016D02  0E00               	movlw	0
 37669  016D04  6E02               	movwf	i1delayUS@US+1,c
 37670  016D06  0E00               	movlw	0
 37671  016D08  6E03               	movwf	i1delayUS@US+2,c
 37672  016D0A  0E00               	movlw	0
 37673  016D0C  6E04               	movwf	i1delayUS@US+3,c
 37674  016D0E  EC77  F004         	call	i1_delayUS	;wreg free
 37675                           
 37676                           ;LCD.c: 150: if(LSB_nibble&0b1000)
 37677  016D12  A60E               	btfss	i1SendLCDbyte@LSB_nibble,3,c
 37678  016D14  D002               	goto	i1l13739
 37679                           
 37680                           ;LCD.c: 151: {
 37681                           ;LCD.c: 152: LATA |= 0b00001000;
 37682  016D16  8689               	bsf	3977,3,c	;volatile
 37683  016D18  D000               	goto	i1l13739
 37684  016D1A                     i1l13739:
 37685                           
 37686                           ;LCD.c: 153: }
 37687                           ;LCD.c: 154: if(LSB_nibble&0b0100)
 37688  016D1A  A40E               	btfss	i1SendLCDbyte@LSB_nibble,2,c
 37689  016D1C  D002               	goto	i1l13743
 37690                           
 37691                           ;LCD.c: 155: {
 37692                           ;LCD.c: 156: LATA |= 0b00010000;
 37693  016D1E  8889               	bsf	3977,4,c	;volatile
 37694  016D20  D000               	goto	i1l13743
 37695  016D22                     i1l13743:
 37696                           
 37697                           ;LCD.c: 157: }
 37698                           ;LCD.c: 158: if(LSB_nibble&0b0010)
 37699  016D22  A20E               	btfss	i1SendLCDbyte@LSB_nibble,1,c
 37700  016D24  D002               	goto	i1l13747
 37701                           
 37702                           ;LCD.c: 159: {
 37703                           ;LCD.c: 160: LATA |= 0b00100000;
 37704  016D26  8A89               	bsf	3977,5,c	;volatile
 37705  016D28  D000               	goto	i1l13747
 37706  016D2A                     i1l13747:
 37707                           
 37708                           ;LCD.c: 161: }
 37709                           ;LCD.c: 162: if(LSB_nibble&0b0001)
 37710  016D2A  A00E               	btfss	i1SendLCDbyte@LSB_nibble,0,c
 37711  016D2C  D002               	goto	i1l13751
 37712                           
 37713                           ;LCD.c: 163: {
 37714                           ;LCD.c: 164: LATE |= 0b00000001;
 37715  016D2E  808D               	bsf	3981,0,c	;volatile
 37716  016D30  D000               	goto	i1l13751
 37717  016D32                     i1l13751:
 37718                           
 37719                           ;LCD.c: 165: }
 37720                           ;LCD.c: 166: PulseEnablePin();
 37721  016D32  EC37  F007         	call	i1_PulseEnablePin	;wreg free
 37722                           
 37723                           ;LCD.c: 167: }
 37724  016D36  0012               	return	
 37725  016D38                     i1l13753:
 37726                           
 37727                           ;LCD.c: 168: else
 37728                           ;LCD.c: 169: {
 37729                           ;LCD.c: 170: delayUS(20);
 37730  016D38  0E14               	movlw	20
 37731  016D3A  6E01               	movwf	i1delayUS@US,c
 37732  016D3C  0E00               	movlw	0
 37733  016D3E  6E02               	movwf	i1delayUS@US+1,c
 37734  016D40  0E00               	movlw	0
 37735  016D42  6E03               	movwf	i1delayUS@US+2,c
 37736  016D44  0E00               	movlw	0
 37737  016D46  6E04               	movwf	i1delayUS@US+3,c
 37738  016D48  EC77  F004         	call	i1_delayUS	;wreg free
 37739  016D4C  0012               	return	
 37740  016D4E  0012               	return		;funcret
 37741  016D50                     __end_ofi1_SendLCDbyte:
 37742                           	opt stack 0
 37743                           pclatu	equ	0xFFB
 37744                           pclath	equ	0xFFA
 37745                           tblptru	equ	0xFF8
 37746                           tblptrh	equ	0xFF7
 37747                           tblptrl	equ	0xFF6
 37748                           tablat	equ	0xFF5
 37749                           prodh	equ	0xFF4
 37750                           prodl	equ	0xFF3
 37751                           intcon	equ	0xFF2
 37752                           intcon2	equ	0xFF1
 37753                           indf0	equ	0xFEF
 37754                           postinc0	equ	0xFEE
 37755                           plusw0	equ	0xFEB
 37756                           fsr0h	equ	0xFEA
 37757                           fsr0l	equ	0xFE9
 37758                           wreg	equ	0xFE8
 37759                           indf1	equ	0xFE7
 37760                           postdec1	equ	0xFE5
 37761                           fsr1h	equ	0xFE2
 37762                           fsr1l	equ	0xFE1
 37763                           bsr	equ	0xFE0
 37764                           indf2	equ	0xFDF
 37765                           postinc2	equ	0xFDE
 37766                           postdec2	equ	0xFDD
 37767                           plusw2	equ	0xFDB
 37768                           fsr2h	equ	0xFDA
 37769                           fsr2l	equ	0xFD9
 37770                           status	equ	0xFD8
 37771                           
 37772 ;; *************** function i1_PulseEnablePin *****************
 37773 ;; Defined at:
 37774 ;;		line 180 in file "LCD.c"
 37775 ;; Parameters:    Size  Location     Type
 37776 ;;		None
 37777 ;; Auto vars:     Size  Location     Type
 37778 ;;		None
 37779 ;; Return value:  Size  Location     Type
 37780 ;;		None               void
 37781 ;; Registers used:
 37782 ;;		wreg, status,2, status,0, cstack
 37783 ;; Tracked objects:
 37784 ;;		On entry : 0/0
 37785 ;;		On exit  : 0/0
 37786 ;;		Unchanged: 0/0
 37787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37792 ;;Total ram usage:        0 bytes
 37793 ;; Hardware stack levels used:    1
 37794 ;; Hardware stack levels required when called:    2
 37795 ;; This function calls:
 37796 ;;		i1_delayUS
 37797 ;; This function is called by:
 37798 ;;		i1_SendLCDbyte
 37799 ;; This function uses a non-reentrant model
 37800 ;;
 37801                           
 37802                           	psect	text116
 37803  000E6E                     __ptext116:
 37804                           	opt stack 0
 37805  000E6E                     i1_PulseEnablePin:
 37806                           	opt stack 19
 37807                           
 37808                           ;LCD.c: 183: LATD |= (0b10000000);
 37809                           
 37810                           ;incstack = 0
 37811  000E6E  8E8C               	bsf	3980,7,c	;volatile
 37812                           
 37813                           ;LCD.c: 184: delayUS(2500);
 37814  000E70  0EC4               	movlw	196
 37815  000E72  6E01               	movwf	i1delayUS@US,c
 37816  000E74  0E09               	movlw	9
 37817  000E76  6E02               	movwf	i1delayUS@US+1,c
 37818  000E78  0E00               	movlw	0
 37819  000E7A  6E03               	movwf	i1delayUS@US+2,c
 37820  000E7C  0E00               	movlw	0
 37821  000E7E  6E04               	movwf	i1delayUS@US+3,c
 37822  000E80  EC77  F004         	call	i1_delayUS	;wreg free
 37823                           
 37824                           ;LCD.c: 186: LATD &= ~(0b10000000);
 37825  000E84  9E8C               	bcf	3980,7,c	;volatile
 37826                           
 37827                           ;LCD.c: 187: delayUS(2500);
 37828  000E86  0EC4               	movlw	196
 37829  000E88  6E01               	movwf	i1delayUS@US,c
 37830  000E8A  0E09               	movlw	9
 37831  000E8C  6E02               	movwf	i1delayUS@US+1,c
 37832  000E8E  0E00               	movlw	0
 37833  000E90  6E03               	movwf	i1delayUS@US+2,c
 37834  000E92  0E00               	movlw	0
 37835  000E94  6E04               	movwf	i1delayUS@US+3,c
 37836  000E96  EC77  F004         	call	i1_delayUS	;wreg free
 37837  000E9A  0012               	return		;funcret
 37838  000E9C                     __end_ofi1_PulseEnablePin:
 37839                           	opt stack 0
 37840                           pclatu	equ	0xFFB
 37841                           pclath	equ	0xFFA
 37842                           tblptru	equ	0xFF8
 37843                           tblptrh	equ	0xFF7
 37844                           tblptrl	equ	0xFF6
 37845                           tablat	equ	0xFF5
 37846                           prodh	equ	0xFF4
 37847                           prodl	equ	0xFF3
 37848                           intcon	equ	0xFF2
 37849                           intcon2	equ	0xFF1
 37850                           indf0	equ	0xFEF
 37851                           postinc0	equ	0xFEE
 37852                           plusw0	equ	0xFEB
 37853                           fsr0h	equ	0xFEA
 37854                           fsr0l	equ	0xFE9
 37855                           wreg	equ	0xFE8
 37856                           indf1	equ	0xFE7
 37857                           postdec1	equ	0xFE5
 37858                           fsr1h	equ	0xFE2
 37859                           fsr1l	equ	0xFE1
 37860                           bsr	equ	0xFE0
 37861                           indf2	equ	0xFDF
 37862                           postinc2	equ	0xFDE
 37863                           postdec2	equ	0xFDD
 37864                           plusw2	equ	0xFDB
 37865                           fsr2h	equ	0xFDA
 37866                           fsr2l	equ	0xFD9
 37867                           status	equ	0xFD8
 37868                           
 37869 ;; *************** function i1_BufferCopy *****************
 37870 ;; Defined at:
 37871 ;;		line 103 in file "MISC.c"
 37872 ;; Parameters:    Size  Location     Type
 37873 ;;  from            2    8[COMRAM] PTR unsigned char 
 37874 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 37875 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 37876 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 37877 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 37878 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 37879 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 37880 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 37881 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 37882 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 37883 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 37884 ;;		 -> STR_68(5), STR_67(9), STR_66(9), StringAddEqual@temp(100), 
 37885 ;;		 -> RemoveSpaces@That(100), low_isr@TEMP_Rxdata(100), 
 37886 ;;  to              2   10[COMRAM] PTR unsigned char 
 37887 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 37888 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 37889 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 37890 ;;  count           1   12[COMRAM] unsigned char 
 37891 ;;  shift           1   13[COMRAM] unsigned char 
 37892 ;; Auto vars:     Size  Location     Type
 37893 ;;  BufferCopy      1   14[COMRAM] unsigned char 
 37894 ;; Return value:  Size  Location     Type
 37895 ;;		None               void
 37896 ;; Registers used:
 37897 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37898 ;; Tracked objects:
 37899 ;;		On entry : 0/0
 37900 ;;		On exit  : 0/0
 37901 ;;		Unchanged: 0/0
 37902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37903 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37906 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37907 ;;Total ram usage:        7 bytes
 37908 ;; Hardware stack levels used:    1
 37909 ;; Hardware stack levels required when called:    2
 37910 ;; This function calls:
 37911 ;;		i1_cleanBuffer
 37912 ;; This function is called by:
 37913 ;;		_low_isr
 37914 ;; This function uses a non-reentrant model
 37915 ;;
 37916                           
 37917                           	psect	text117
 37918  0172FE                     __ptext117:
 37919                           	opt stack 0
 37920  0172FE                     i1_BufferCopy:
 37921                           	opt stack 21
 37922                           
 37923                           ;MISC.c: 105: unsigned char i=0;
 37924                           
 37925                           ;incstack = 0
 37926  0172FE  0E00               	movlw	0
 37927  017300  6E0F               	movwf	i1BufferCopy@i,c
 37928                           
 37929                           ;MISC.c: 106: cleanBuffer(to,count);
 37930  017302  C00B  F001         	movff	i1BufferCopy@to,i1cleanBuffer@data
 37931  017306  C00C  F002         	movff	i1BufferCopy@to+1,i1cleanBuffer@data+1
 37932  01730A  C00D  F003         	movff	i1BufferCopy@count,i1cleanBuffer@count
 37933  01730E  6A04               	clrf	i1cleanBuffer@count+1,c
 37934  017310  ECAE  F005         	call	i1_cleanBuffer	;wreg free
 37935                           
 37936                           ;MISC.c: 107: for(i = shift; i>0;i--)
 37937  017314  C00E  F00F         	movff	i1BufferCopy@shift,i1BufferCopy@i
 37938  017318                     i1l15771:
 37939  017318  500F               	movf	i1BufferCopy@i,w,c
 37940  01731A  B4D8               	btfsc	status,2,c
 37941  01731C  D029               	goto	i1l15791
 37942  01731E  D001               	goto	i1l15775
 37943  017320  D027               	goto	i1l15791
 37944  017322                     i1l15775:
 37945                           
 37946                           ;MISC.c: 108: {
 37947                           ;MISC.c: 109: *to = ' ';
 37948  017322  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 37949  017326  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 37950  01732A  0E20               	movlw	32
 37951  01732C  6EDF               	movwf	indf2,c
 37952                           
 37953                           ;MISC.c: 110: to++;
 37954  01732E  4A0B               	infsnz	i1BufferCopy@to,f,c
 37955  017330  2A0C               	incf	i1BufferCopy@to+1,f,c
 37956  017332  060F               	decf	i1BufferCopy@i,f,c
 37957  017334  D7F1               	goto	i1l15771
 37958                           
 37959                           ;MISC.c: 111: }
 37960                           ;MISC.c: 112: while(*from != 0 && count >0)
 37961  017336  D01C               	goto	i1l15791
 37962  017338                     i1l15783:
 37963                           
 37964                           ;MISC.c: 113: {
 37965                           ;MISC.c: 114: *to = *from;
 37966  017338  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 37967  01733C  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 37968  017340  0E00               	movlw	low (__mediumconst shr (0+16))
 37969  017342  6EF8               	movwf	tblptru,c
 37970  017344  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 37971  017348  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 37972  01734C  0E0C               	movlw	(high __ramtop+-1)
 37973  01734E  64F7               	cpfsgt	tblptrh,c
 37974  017350  D003               	bra	i1u2030_27
 37975  017352  0008               	tblrd		*
 37976  017354  50F5               	movf	tablat,w,c
 37977  017356  D005               	bra	i1u2030_20
 37978  017358                     i1u2030_27:
 37979  017358  CFF6 FFE9          	movff	tblptrl,fsr0l
 37980  01735C  CFF7 FFEA          	movff	tblptrh,fsr0h
 37981  017360  50EF               	movf	indf0,w,c
 37982  017362                     i1u2030_20:
 37983  017362  6EDF               	movwf	indf2,c
 37984                           
 37985                           ;MISC.c: 115: from++;
 37986  017364  4A09               	infsnz	i1BufferCopy@from,f,c
 37987  017366  2A0A               	incf	i1BufferCopy@from+1,f,c
 37988                           
 37989                           ;MISC.c: 116: to++;
 37990  017368  4A0B               	infsnz	i1BufferCopy@to,f,c
 37991  01736A  2A0C               	incf	i1BufferCopy@to+1,f,c
 37992                           
 37993                           ;MISC.c: 117: count--;
 37994  01736C  060D               	decf	i1BufferCopy@count,f,c
 37995  01736E  D000               	goto	i1l15791
 37996  017370                     i1l15791:
 37997  017370  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 37998  017374  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 37999  017378  0E00               	movlw	low (__mediumconst shr (0+16))
 38000  01737A  6EF8               	movwf	tblptru,c
 38001  01737C  0E0C               	movlw	(high __ramtop+-1)
 38002  01737E  64F7               	cpfsgt	tblptrh,c
 38003  017380  D003               	bra	i1u2031_27
 38004  017382  0008               	tblrd		*
 38005  017384  50F5               	movf	tablat,w,c
 38006  017386  D005               	bra	i1u2031_20
 38007  017388                     i1u2031_27:
 38008  017388  CFF6 FFE9          	movff	tblptrl,fsr0l
 38009  01738C  CFF7 FFEA          	movff	tblptrh,fsr0h
 38010  017390  50EF               	movf	indf0,w,c
 38011  017392                     i1u2031_20:
 38012  017392  0900               	iorlw	0
 38013  017394  B4D8               	btfsc	status,2,c
 38014  017396  0012               	return	
 38015  017398  500D               	movf	i1BufferCopy@count,w,c
 38016  01739A  B4D8               	btfsc	status,2,c
 38017  01739C  0012               	return	
 38018  01739E  D7CC               	goto	i1l15783
 38019  0173A0  0012               	return	
 38020  0173A2  0012               	return		;funcret
 38021  0173A4                     __end_ofi1_BufferCopy:
 38022                           	opt stack 0
 38023                           pclatu	equ	0xFFB
 38024                           pclath	equ	0xFFA
 38025                           tblptru	equ	0xFF8
 38026                           tblptrh	equ	0xFF7
 38027                           tblptrl	equ	0xFF6
 38028                           tablat	equ	0xFF5
 38029                           prodh	equ	0xFF4
 38030                           prodl	equ	0xFF3
 38031                           intcon	equ	0xFF2
 38032                           intcon2	equ	0xFF1
 38033                           indf0	equ	0xFEF
 38034                           postinc0	equ	0xFEE
 38035                           plusw0	equ	0xFEB
 38036                           fsr0h	equ	0xFEA
 38037                           fsr0l	equ	0xFE9
 38038                           wreg	equ	0xFE8
 38039                           indf1	equ	0xFE7
 38040                           postdec1	equ	0xFE5
 38041                           fsr1h	equ	0xFE2
 38042                           fsr1l	equ	0xFE1
 38043                           bsr	equ	0xFE0
 38044                           indf2	equ	0xFDF
 38045                           postinc2	equ	0xFDE
 38046                           postdec2	equ	0xFDD
 38047                           plusw2	equ	0xFDB
 38048                           fsr2h	equ	0xFDA
 38049                           fsr2l	equ	0xFD9
 38050                           status	equ	0xFD8
 38051                           
 38052 ;; *************** function i1_cleanBuffer *****************
 38053 ;; Defined at:
 38054 ;;		line 75 in file "MISC.c"
 38055 ;; Parameters:    Size  Location     Type
 38056 ;;  data            2    0[COMRAM] PTR unsigned char 
 38057 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 38058 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 38059 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 38060 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 38061 ;;  count           2    2[COMRAM] int 
 38062 ;; Auto vars:     Size  Location     Type
 38063 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 38064 ;; Return value:  Size  Location     Type
 38065 ;;		None               void
 38066 ;; Registers used:
 38067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38068 ;; Tracked objects:
 38069 ;;		On entry : 0/0
 38070 ;;		On exit  : 0/0
 38071 ;;		Unchanged: 0/0
 38072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 38073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38075 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38076 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38077 ;;Total ram usage:        8 bytes
 38078 ;; Hardware stack levels used:    1
 38079 ;; Hardware stack levels required when called:    1
 38080 ;; This function calls:
 38081 ;;		Nothing
 38082 ;; This function is called by:
 38083 ;;		_low_isr
 38084 ;;		i1_BufferCopy
 38085 ;;		i1_LCDScreenUpdate
 38086 ;; This function uses a non-reentrant model
 38087 ;;
 38088                           
 38089                           	psect	text118
 38090  000B5C                     __ptext118:
 38091                           	opt stack 0
 38092  000B5C                     i1_cleanBuffer:
 38093                           	opt stack 22
 38094                           
 38095                           ;MISC.c: 77: unsigned char i=0;
 38096                           
 38097                           ;incstack = 0
 38098  000B5C  0E00               	movlw	0
 38099  000B5E  6E08               	movwf	i1cleanBuffer@i,c
 38100                           
 38101                           ;MISC.c: 78: for(i=0; i<count;i++)
 38102  000B60  0E00               	movlw	0
 38103  000B62  6E08               	movwf	i1cleanBuffer@i,c
 38104  000B64  D00C               	goto	i1l14693
 38105  000B66                     i1l14689:
 38106                           
 38107                           ;MISC.c: 79: {
 38108                           ;MISC.c: 80: data[i]= 0;
 38109  000B66  5008               	movf	i1cleanBuffer@i,w,c
 38110  000B68  0D01               	mullw	1
 38111  000B6A  50F3               	movf	prodl,w,c
 38112  000B6C  2401               	addwf	i1cleanBuffer@data,w,c
 38113  000B6E  6ED9               	movwf	fsr2l,c
 38114  000B70  50F4               	movf	prodh,w,c
 38115  000B72  2002               	addwfc	i1cleanBuffer@data+1,w,c
 38116  000B74  6EDA               	movwf	fsr2h,c
 38117  000B76  0E00               	movlw	0
 38118  000B78  6EDF               	movwf	indf2,c
 38119  000B7A  2A08               	incf	i1cleanBuffer@i,f,c
 38120  000B7C  D000               	goto	i1l14693
 38121  000B7E                     i1l14693:
 38122  000B7E  5008               	movf	i1cleanBuffer@i,w,c
 38123  000B80  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 38124  000B82  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 38125  000B84  5003               	movf	i1cleanBuffer@count,w,c
 38126  000B86  5C05               	subwf	??i1_cleanBuffer,w,c
 38127  000B88  5006               	movf	??i1_cleanBuffer+1,w,c
 38128  000B8A  0A80               	xorlw	128
 38129  000B8C  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 38130  000B8E  5004               	movf	i1cleanBuffer@count+1,w,c
 38131  000B90  0A80               	xorlw	128
 38132  000B92  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 38133  000B94  A0D8               	btfss	status,0,c
 38134  000B96  D7E7               	goto	i1l14689
 38135  000B98  0012               	return		;funcret
 38136  000B9A                     __end_ofi1_cleanBuffer:
 38137                           	opt stack 0
 38138                           pclatu	equ	0xFFB
 38139                           pclath	equ	0xFFA
 38140                           tblptru	equ	0xFF8
 38141                           tblptrh	equ	0xFF7
 38142                           tblptrl	equ	0xFF6
 38143                           tablat	equ	0xFF5
 38144                           prodh	equ	0xFF4
 38145                           prodl	equ	0xFF3
 38146                           intcon	equ	0xFF2
 38147                           intcon2	equ	0xFF1
 38148                           indf0	equ	0xFEF
 38149                           postinc0	equ	0xFEE
 38150                           plusw0	equ	0xFEB
 38151                           fsr0h	equ	0xFEA
 38152                           fsr0l	equ	0xFE9
 38153                           wreg	equ	0xFE8
 38154                           indf1	equ	0xFE7
 38155                           postdec1	equ	0xFE5
 38156                           fsr1h	equ	0xFE2
 38157                           fsr1l	equ	0xFE1
 38158                           bsr	equ	0xFE0
 38159                           indf2	equ	0xFDF
 38160                           postinc2	equ	0xFDE
 38161                           postdec2	equ	0xFDD
 38162                           plusw2	equ	0xFDB
 38163                           fsr2h	equ	0xFDA
 38164                           fsr2l	equ	0xFD9
 38165                           status	equ	0xFD8
 38166                           
 38167 ;; *************** function _UseIRCode *****************
 38168 ;; Defined at:
 38169 ;;		line 271 in file "IR.c"
 38170 ;; Parameters:    Size  Location     Type
 38171 ;;  Code            2   70[COMRAM] PTR unsigned char 
 38172 ;;		 -> IR_New_Code(1), 
 38173 ;;  NEC             4   72[COMRAM] unsigned long 
 38174 ;; Auto vars:     Size  Location     Type
 38175 ;;  buf           100    0        unsigned char [100]
 38176 ;;  i               1   77[COMRAM] unsigned char 
 38177 ;; Return value:  Size  Location     Type
 38178 ;;		None               void
 38179 ;; Registers used:
 38180 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38181 ;; Tracked objects:
 38182 ;;		On entry : 0/0
 38183 ;;		On exit  : 0/0
 38184 ;;		Unchanged: 0/0
 38185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 38186 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38188 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38189 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38190 ;;Total ram usage:        8 bytes
 38191 ;; Hardware stack levels used:    1
 38192 ;; Hardware stack levels required when called:    5
 38193 ;; This function calls:
 38194 ;;		_ReadButton1
 38195 ;;		i1_SetEEPROM
 38196 ;;		i1_UARTstring
 38197 ;;		i1_delayUS
 38198 ;; This function is called by:
 38199 ;;		_low_isr
 38200 ;; This function uses a non-reentrant model
 38201 ;;
 38202                           
 38203                           	psect	text119
 38204  0161BC                     __ptext119:
 38205                           	opt stack 0
 38206  0161BC                     _UseIRCode:
 38207                           	opt stack 18
 38208                           
 38209                           ;IR.c: 273: unsigned char buf[100];
 38210                           ;IR.c: 274: unsigned char i;
 38211                           ;IR.c: 276: if(ReadButton1())
 38212                           
 38213                           ;incstack = 0
 38214  0161BC  EC8C  F008         	call	_ReadButton1	;wreg free
 38215  0161C0  0900               	iorlw	0
 38216  0161C2  B4D8               	btfsc	status,2,c
 38217  0161C4  D01C               	goto	i1l14741
 38218                           
 38219                           ;IR.c: 277: {
 38220                           ;IR.c: 278: if(NEC == Global.NEC1)
 38221  0161C6  5049               	movf	UseIRCode@NEC,w,c
 38222  0161C8  0101               	movlb	1	; () banked
 38223  0161CA  1905               	xorwf	(_Global+5)& (0+255),w,b
 38224  0161CC  E16A               	bnz	i1l14769
 38225  0161CE  504A               	movf	UseIRCode@NEC+1,w,c
 38226  0161D0  0101               	movlb	1	; () banked
 38227  0161D2  1906               	xorwf	(_Global+6)& (0+255),w,b
 38228  0161D4  E166               	bnz	i1l14769
 38229  0161D6  504B               	movf	UseIRCode@NEC+2,w,c
 38230  0161D8  0101               	movlb	1	; () banked
 38231  0161DA  1907               	xorwf	(_Global+7)& (0+255),w,b
 38232  0161DC  E162               	bnz	i1l14769
 38233  0161DE  504C               	movf	UseIRCode@NEC+3,w,c
 38234  0161E0  0101               	movlb	1	; () banked
 38235  0161E2  1908               	xorwf	(_Global+8)& (0+255),w,b
 38236  0161E4  A4D8               	btfss	status,2,c
 38237  0161E6  D05D               	goto	i1l14769
 38238                           
 38239                           ; BSR set to: 1
 38240                           ;IR.c: 279: {
 38241                           ;IR.c: 280: if(*Code == 1)
 38242  0161E8  C047  FFD9         	movff	UseIRCode@Code,fsr2l
 38243  0161EC  C048  FFDA         	movff	UseIRCode@Code+1,fsr2h
 38244  0161F0  04DE               	decf	postinc2,w,c
 38245  0161F2  A4D8               	btfss	status,2,c
 38246  0161F4  D002               	goto	i1l14739
 38247                           
 38248                           ; BSR set to: 1
 38249                           ;IR.c: 281: {
 38250                           ;IR.c: 282: LATD |= 0b00000010;
 38251  0161F6  828C               	bsf	3980,1,c	;volatile
 38252                           
 38253                           ;IR.c: 283: }
 38254  0161F8  D054               	goto	i1l14769
 38255  0161FA                     i1l14739:
 38256                           
 38257                           ; BSR set to: 1
 38258                           ;IR.c: 284: else
 38259                           ;IR.c: 285: {
 38260                           ;IR.c: 286: LATD |= 0b00000100;
 38261  0161FA  848C               	bsf	3980,2,c	;volatile
 38262                           
 38263                           ; BSR set to: 1
 38264                           ;IR.c: 287: }
 38265                           ;IR.c: 288: }
 38266                           ;IR.c: 289: }
 38267                           
 38268                           ; BSR set to: 1
 38269  0161FC  D052               	goto	i1l14769
 38270  0161FE                     i1l14741:
 38271                           
 38272                           ;IR.c: 290: else
 38273                           ;IR.c: 291: {
 38274                           ;IR.c: 292: if(*Code == 1)
 38275  0161FE  C047  FFD9         	movff	UseIRCode@Code,fsr2l
 38276  016202  C048  FFDA         	movff	UseIRCode@Code+1,fsr2h
 38277  016206  04DE               	decf	postinc2,w,c
 38278  016208  A4D8               	btfss	status,2,c
 38279  01620A  D04B               	goto	i1l14769
 38280                           
 38281                           ;IR.c: 293: {
 38282                           ;IR.c: 294: Global.NEC1 = NEC;
 38283  01620C  C049  F105         	movff	UseIRCode@NEC,_Global+5
 38284  016210  C04A  F106         	movff	UseIRCode@NEC+1,_Global+6
 38285  016214  C04B  F107         	movff	UseIRCode@NEC+2,_Global+7
 38286  016218  C04C  F108         	movff	UseIRCode@NEC+3,_Global+8
 38287                           
 38288                           ;IR.c: 295: if(SetEEPROM(Global, 0x04))
 38289  01621C  EE21  F000         	lfsr	2,_Global
 38290  016220  EE00  F036         	lfsr	0,i1SetEEPROM@Temp
 38291  016224  0E08               	movlw	8
 38292  016226                     i1u1899_21:
 38293  016226  CFDB FFEB          	movff	plusw2,plusw0
 38294  01622A  06E8               	decf	wreg,f,c
 38295  01622C  E2FC               	bc	i1u1899_21
 38296  01622E  0E04               	movlw	4
 38297  016230  6E3F               	movwf	i1SetEEPROM@burn,c
 38298  016232  0E00               	movlw	0
 38299  016234  6E40               	movwf	i1SetEEPROM@burn+1,c
 38300  016236  0E00               	movlw	0
 38301  016238  6E41               	movwf	i1SetEEPROM@burn+2,c
 38302  01623A  0E00               	movlw	0
 38303  01623C  6E42               	movwf	i1SetEEPROM@burn+3,c
 38304  01623E  EC76  F0BA         	call	i1_SetEEPROM	;wreg free
 38305  016242  5036               	movf	?i1_SetEEPROM,w,c
 38306  016244  1037               	iorwf	?i1_SetEEPROM+1,w,c
 38307  016246  1038               	iorwf	?i1_SetEEPROM+2,w,c
 38308  016248  1039               	iorwf	?i1_SetEEPROM+3,w,c
 38309  01624A  B4D8               	btfsc	status,2,c
 38310  01624C  D007               	goto	i1l14749
 38311                           
 38312                           ;IR.c: 296: {
 38313                           ;IR.c: 298: UARTstring("Error: Could not burn IR Code into Memory\r\n");
 38314  01624E  0EB3               	movlw	low STR_324
 38315  016250  6E0C               	movwf	i1UARTstring@data,c
 38316  016252  0EF1               	movlw	high STR_324
 38317  016254  6E0D               	movwf	i1UARTstring@data+1,c
 38318  016256  EC5F  F0BB         	call	i1_UARTstring	;wreg free
 38319  01625A  D000               	goto	i1l14749
 38320  01625C                     i1l14749:
 38321                           
 38322                           ;IR.c: 299: }
 38323                           ;IR.c: 300: for(i =0; i <10;i++)
 38324  01625C  0E00               	movlw	0
 38325  01625E  6E4E               	movwf	UseIRCode@i,c
 38326  016260                     i1l14751:
 38327  016260  0E09               	movlw	9
 38328  016262  644E               	cpfsgt	UseIRCode@i,c
 38329  016264  D001               	goto	i1l14755
 38330  016266  D01A               	goto	i1l14767
 38331  016268                     i1l14755:
 38332                           
 38333                           ;IR.c: 301: {
 38334                           ;IR.c: 302: LATD |= 0b00000010;
 38335  016268  828C               	bsf	3980,1,c	;volatile
 38336                           
 38337                           ;IR.c: 303: LATD &= ~0b00000100;
 38338  01626A  948C               	bcf	3980,2,c	;volatile
 38339                           
 38340                           ;IR.c: 304: delayUS(50000);
 38341  01626C  0E50               	movlw	80
 38342  01626E  6E01               	movwf	i1delayUS@US,c
 38343  016270  0EC3               	movlw	195
 38344  016272  6E02               	movwf	i1delayUS@US+1,c
 38345  016274  0E00               	movlw	0
 38346  016276  6E03               	movwf	i1delayUS@US+2,c
 38347  016278  0E00               	movlw	0
 38348  01627A  6E04               	movwf	i1delayUS@US+3,c
 38349  01627C  EC77  F004         	call	i1_delayUS	;wreg free
 38350                           
 38351                           ;IR.c: 305: LATD |= 0b00000100;
 38352  016280  848C               	bsf	3980,2,c	;volatile
 38353                           
 38354                           ;IR.c: 306: LATD &= ~0b00000010;
 38355  016282  928C               	bcf	3980,1,c	;volatile
 38356                           
 38357                           ;IR.c: 307: delayUS(50000);
 38358  016284  0E50               	movlw	80
 38359  016286  6E01               	movwf	i1delayUS@US,c
 38360  016288  0EC3               	movlw	195
 38361  01628A  6E02               	movwf	i1delayUS@US+1,c
 38362  01628C  0E00               	movlw	0
 38363  01628E  6E03               	movwf	i1delayUS@US+2,c
 38364  016290  0E00               	movlw	0
 38365  016292  6E04               	movwf	i1delayUS@US+3,c
 38366  016294  EC77  F004         	call	i1_delayUS	;wreg free
 38367  016298  2A4E               	incf	UseIRCode@i,f,c
 38368  01629A  D7E2               	goto	i1l14751
 38369  01629C                     i1l14767:
 38370                           
 38371                           ;IR.c: 308: }
 38372                           ;IR.c: 309: LATD &= ~0b00000010;
 38373  01629C  928C               	bcf	3980,1,c	;volatile
 38374                           
 38375                           ;IR.c: 310: LATD &= ~0b00000100;
 38376  01629E  948C               	bcf	3980,2,c	;volatile
 38377  0162A0  D000               	goto	i1l14769
 38378  0162A2                     i1l14769:
 38379                           
 38380                           ;IR.c: 311: }
 38381                           ;IR.c: 312: }
 38382                           ;IR.c: 313: *Code = 0;
 38383  0162A2  C047  FFD9         	movff	UseIRCode@Code,fsr2l
 38384  0162A6  C048  FFDA         	movff	UseIRCode@Code+1,fsr2h
 38385  0162AA  0E00               	movlw	0
 38386  0162AC  6EDF               	movwf	indf2,c
 38387                           
 38388                           ;IR.c: 314: BlueLEDcount = 0;
 38389  0162AE  0E00               	movlw	0
 38390  0162B0  0101               	movlb	1	; () banked
 38391  0162B2  6FCC               	movwf	(_BlueLEDcount+1)& (0+255),b
 38392  0162B4  0E00               	movlw	0
 38393  0162B6  6FCB               	movwf	_BlueLEDcount& (0+255),b
 38394                           
 38395                           ; BSR set to: 1
 38396  0162B8  0012               	return		;funcret
 38397  0162BA                     __end_of_UseIRCode:
 38398                           	opt stack 0
 38399                           pclatu	equ	0xFFB
 38400                           pclath	equ	0xFFA
 38401                           tblptru	equ	0xFF8
 38402                           tblptrh	equ	0xFF7
 38403                           tblptrl	equ	0xFF6
 38404                           tablat	equ	0xFF5
 38405                           prodh	equ	0xFF4
 38406                           prodl	equ	0xFF3
 38407                           intcon	equ	0xFF2
 38408                           intcon2	equ	0xFF1
 38409                           indf0	equ	0xFEF
 38410                           postinc0	equ	0xFEE
 38411                           plusw0	equ	0xFEB
 38412                           fsr0h	equ	0xFEA
 38413                           fsr0l	equ	0xFE9
 38414                           wreg	equ	0xFE8
 38415                           indf1	equ	0xFE7
 38416                           postdec1	equ	0xFE5
 38417                           fsr1h	equ	0xFE2
 38418                           fsr1l	equ	0xFE1
 38419                           bsr	equ	0xFE0
 38420                           indf2	equ	0xFDF
 38421                           postinc2	equ	0xFDE
 38422                           postdec2	equ	0xFDD
 38423                           plusw2	equ	0xFDB
 38424                           fsr2h	equ	0xFDA
 38425                           fsr2l	equ	0xFD9
 38426                           status	equ	0xFD8
 38427                           
 38428 ;; *************** function i1_delayUS *****************
 38429 ;; Defined at:
 38430 ;;		line 57 in file "MISC.c"
 38431 ;; Parameters:    Size  Location     Type
 38432 ;;  US              4    0[COMRAM] long 
 38433 ;; Auto vars:     Size  Location     Type
 38434 ;;  delayUS         4    5[COMRAM] long 
 38435 ;;  delayUS         1    9[COMRAM] unsigned char 
 38436 ;; Return value:  Size  Location     Type
 38437 ;;		None               void
 38438 ;; Registers used:
 38439 ;;		wreg, status,2, status,0
 38440 ;; Tracked objects:
 38441 ;;		On entry : 0/0
 38442 ;;		On exit  : 0/0
 38443 ;;		Unchanged: 0/0
 38444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 38445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38446 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38448 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38449 ;;Total ram usage:       10 bytes
 38450 ;; Hardware stack levels used:    1
 38451 ;; Hardware stack levels required when called:    1
 38452 ;; This function calls:
 38453 ;;		Nothing
 38454 ;; This function is called by:
 38455 ;;		_UseIRCode
 38456 ;;		i1_SendLCDbyte
 38457 ;;		i1_PulseEnablePin
 38458 ;; This function uses a non-reentrant model
 38459 ;;
 38460                           
 38461                           	psect	text120
 38462  0008EE                     __ptext120:
 38463                           	opt stack 0
 38464  0008EE                     i1_delayUS:
 38465                           	opt stack 20
 38466                           
 38467                           ;MISC.c: 59: long i;
 38468                           ;MISC.c: 60: unsigned char j;
 38469                           ;MISC.c: 61: for(i=0;i<US;i+=31)
 38470                           
 38471                           ; BSR set to: 1
 38472                           ;incstack = 0
 38473  0008EE  0E00               	movlw	0
 38474  0008F0  6E06               	movwf	i1delayUS@i,c
 38475  0008F2  0E00               	movlw	0
 38476  0008F4  6E07               	movwf	i1delayUS@i+1,c
 38477  0008F6  0E00               	movlw	0
 38478  0008F8  6E08               	movwf	i1delayUS@i+2,c
 38479  0008FA  0E00               	movlw	0
 38480  0008FC  6E09               	movwf	i1delayUS@i+3,c
 38481  0008FE  D00F               	goto	i1l284
 38482  000900                     i1l12249:
 38483                           
 38484                           ;MISC.c: 62: {
 38485                           ;MISC.c: 63: for(j=0;j<41;j++)
 38486  000900  0E00               	movlw	0
 38487  000902  6E0A               	movwf	i1delayUS@j,c
 38488  000904                     i1l12251:
 38489  000904  0E28               	movlw	40
 38490  000906  640A               	cpfsgt	i1delayUS@j,c
 38491  000908  D001               	goto	i1l286
 38492  00090A  D003               	goto	i1l12259
 38493  00090C                     i1l286:
 38494                           
 38495                           ;MISC.c: 64: {
 38496                           ;MISC.c: 65: __nop();
 38497  00090C  F000               	nop	
 38498  00090E  2A0A               	incf	i1delayUS@j,f,c
 38499  000910  D7F9               	goto	i1l12251
 38500  000912                     i1l12259:
 38501  000912  0E1F               	movlw	31
 38502  000914  2606               	addwf	i1delayUS@i,f,c
 38503  000916  0E00               	movlw	0
 38504  000918  2207               	addwfc	i1delayUS@i+1,f,c
 38505  00091A  2208               	addwfc	i1delayUS@i+2,f,c
 38506  00091C  2209               	addwfc	i1delayUS@i+3,f,c
 38507  00091E                     i1l284:
 38508  00091E  5001               	movf	i1delayUS@US,w,c
 38509  000920  5C06               	subwf	i1delayUS@i,w,c
 38510  000922  5002               	movf	i1delayUS@US+1,w,c
 38511  000924  5807               	subwfb	i1delayUS@i+1,w,c
 38512  000926  5003               	movf	i1delayUS@US+2,w,c
 38513  000928  5808               	subwfb	i1delayUS@i+2,w,c
 38514  00092A  5009               	movf	i1delayUS@i+3,w,c
 38515  00092C  0A80               	xorlw	128
 38516  00092E  6E05               	movwf	??i1_delayUS& (0+255),c
 38517  000930  5004               	movf	i1delayUS@US+3,w,c
 38518  000932  0A80               	xorlw	128
 38519  000934  5805               	subwfb	??i1_delayUS& (0+255),w,c
 38520  000936  A0D8               	btfss	status,0,c
 38521  000938  D7E3               	goto	i1l12249
 38522  00093A  0012               	return		;funcret
 38523  00093C                     __end_ofi1_delayUS:
 38524                           	opt stack 0
 38525                           pclatu	equ	0xFFB
 38526                           pclath	equ	0xFFA
 38527                           tblptru	equ	0xFF8
 38528                           tblptrh	equ	0xFF7
 38529                           tblptrl	equ	0xFF6
 38530                           tablat	equ	0xFF5
 38531                           prodh	equ	0xFF4
 38532                           prodl	equ	0xFF3
 38533                           intcon	equ	0xFF2
 38534                           intcon2	equ	0xFF1
 38535                           indf0	equ	0xFEF
 38536                           postinc0	equ	0xFEE
 38537                           plusw0	equ	0xFEB
 38538                           fsr0h	equ	0xFEA
 38539                           fsr0l	equ	0xFE9
 38540                           wreg	equ	0xFE8
 38541                           indf1	equ	0xFE7
 38542                           postdec1	equ	0xFE5
 38543                           fsr1h	equ	0xFE2
 38544                           fsr1l	equ	0xFE1
 38545                           bsr	equ	0xFE0
 38546                           indf2	equ	0xFDF
 38547                           postinc2	equ	0xFDE
 38548                           postdec2	equ	0xFDD
 38549                           plusw2	equ	0xFDB
 38550                           fsr2h	equ	0xFDA
 38551                           fsr2l	equ	0xFD9
 38552                           status	equ	0xFD8
 38553                           
 38554 ;; *************** function i1_UARTstring *****************
 38555 ;; Defined at:
 38556 ;;		line 233 in file "UART.c"
 38557 ;; Parameters:    Size  Location     Type
 38558 ;;  data            2   11[COMRAM] PTR const unsigned char 
 38559 ;;		 -> STR_324(44), STR_320(26), STR_319(3), STR_317(18), 
 38560 ;;		 -> STR_315(18), STR_311(20), STR_288(24), STR_285(3), 
 38561 ;;		 -> STR_283(15), STR_282(22), STR_281(50), STR_280(8), 
 38562 ;;		 -> STR_279(6), STR_278(6), STR_277(11), STR_276(17), 
 38563 ;;		 -> STR_275(12), STR_274(13), STR_273(10), STR_272(12), 
 38564 ;;		 -> STR_267(28), STR_266(68), STR_265(9), STR_264(11), 
 38565 ;;		 -> STR_263(23), STR_261(19), STR_259(20), STR_256(20), 
 38566 ;;		 -> STR_247(21), STR_246(61), STR_245(69), STR_244(7), 
 38567 ;;		 -> STR_243(7), STR_242(10), STR_241(11), STR_240(29), 
 38568 ;;		 -> STR_239(13), STR_238(33), STR_237(25), STR_236(28), 
 38569 ;;		 -> STR_235(3), STR_234(26), STR_233(2), STR_232(34), 
 38570 ;;		 -> STR_231(37), STR_228(24), STR_224(3), STR_214(13), 
 38571 ;;		 -> STR_213(73), STR_212(5), STR_211(12), STR_210(17), 
 38572 ;;		 -> STR_204(28), STR_202(30), STR_200(33), STR_193(42), 
 38573 ;;		 -> STR_192(62), STR_191(26), STR_187(43), STR_185(48), 
 38574 ;;		 -> STR_183(27), STR_176(42), STR_175(66), STR_174(25), 
 38575 ;;		 -> STR_172(49), Command@buf(200), STR_168(33), STR_166(38), 
 38576 ;;		 -> STR_164(27), STR_163(28), STR_153(37), STR_152(68), 
 38577 ;;		 -> STR_151(18), STR_150(15), STR_149(11), STR_148(28), 
 38578 ;;		 -> STR_146(18), STR_144(32), STR_140(31), STR_136(38), 
 38579 ;;		 -> STR_123(24), STR_122(68), STR_121(10), STR_120(6), 
 38580 ;;		 -> STR_119(8), STR_118(11), STR_117(21), STR_115(16), 
 38581 ;;		 -> STR_113(19), STR_110(18), STR_107(16), STR_104(15), 
 38582 ;;		 -> STR_101(22), STR_89(27), STR_88(68), STR_87(7), 
 38583 ;;		 -> STR_86(8), STR_85(11), STR_84(24), STR_82(19), 
 38584 ;;		 -> STR_80(19), STR_77(18), STR_74(25), STR_65(17), 
 38585 ;;		 -> STR_64(68), STR_63(8), STR_62(7), STR_61(11), 
 38586 ;;		 -> STR_60(17), STR_58(12), STR_56(9), STR_53(8), 
 38587 ;;		 -> STR_50(13), STR_47(9), STR_44(8), STR_41(13), 
 38588 ;;		 -> STR_36(4), STR_35(22), STR_29(22), STR_28(3), 
 38589 ;;		 -> SetBaud@buf(50), STR_22(4), STR_21(29), STR_11(12), 
 38590 ;;		 -> STR_8(54), STR_7(3), Version(20), STR_6(19), 
 38591 ;;		 -> STR_5(38), low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), 
 38592 ;;		 -> STR_2(2), STR_1(2), 
 38593 ;; Auto vars:     Size  Location     Type
 38594 ;;		None
 38595 ;; Return value:  Size  Location     Type
 38596 ;;		None               void
 38597 ;; Registers used:
 38598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38599 ;; Tracked objects:
 38600 ;;		On entry : 0/0
 38601 ;;		On exit  : 0/0
 38602 ;;		Unchanged: 0/0
 38603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 38604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38608 ;;Total ram usage:        4 bytes
 38609 ;; Hardware stack levels used:    1
 38610 ;; Hardware stack levels required when called:    3
 38611 ;; This function calls:
 38612 ;;		i1_UARTchar
 38613 ;; This function is called by:
 38614 ;;		_low_isr
 38615 ;;		_UseIRCode
 38616 ;; This function uses a non-reentrant model
 38617 ;;
 38618                           
 38619                           	psect	text121
 38620  0176BE                     __ptext121:
 38621                           	opt stack 0
 38622  0176BE                     i1_UARTstring:
 38623                           	opt stack 20
 38624  0176BE                     
 38625                           ;UART.c: 236: {
 38626                           ;UART.c: 237: if(*data != 0)
 38627  0176BE  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 38628  0176C2  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 38629  0176C6  0E00               	movlw	low (__mediumconst shr (0+16))
 38630  0176C8  6EF8               	movwf	tblptru,c
 38631  0176CA  0E0C               	movlw	(high __ramtop+-1)
 38632  0176CC  64F7               	cpfsgt	tblptrh,c
 38633  0176CE  D003               	bra	i1u1883_27
 38634  0176D0  0008               	tblrd		*
 38635  0176D2  50F5               	movf	tablat,w,c
 38636  0176D4  D005               	bra	i1u1883_20
 38637  0176D6                     i1u1883_27:
 38638  0176D6  CFF6 FFE9          	movff	tblptrl,fsr0l
 38639  0176DA  CFF7 FFEA          	movff	tblptrh,fsr0h
 38640  0176DE  50EF               	movf	indf0,w,c
 38641  0176E0                     i1u1883_20:
 38642  0176E0  0900               	iorlw	0
 38643  0176E2  B4D8               	btfsc	status,2,c
 38644  0176E4  D01C               	goto	i1l14699
 38645                           
 38646                           ;UART.c: 238: {
 38647                           ;UART.c: 239: UARTchar((unsigned char) *data, 0, 0);
 38648  0176E6  0E00               	movlw	0
 38649  0176E8  6E08               	movwf	i1UARTchar@NinethBit_override,c
 38650  0176EA  0E00               	movlw	0
 38651  0176EC  6E09               	movwf	i1UARTchar@NinethBit_override_data,c
 38652  0176EE  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 38653  0176F2  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 38654  0176F6  0E00               	movlw	low (__mediumconst shr (0+16))
 38655  0176F8  6EF8               	movwf	tblptru,c
 38656  0176FA  0E0C               	movlw	(high __ramtop+-1)
 38657  0176FC  64F7               	cpfsgt	tblptrh,c
 38658  0176FE  D003               	bra	i1u1885_27
 38659  017700  0008               	tblrd		*
 38660  017702  50F5               	movf	tablat,w,c
 38661  017704  D005               	bra	i1u1885_20
 38662  017706                     i1u1885_27:
 38663  017706  CFF6 FFE9          	movff	tblptrl,fsr0l
 38664  01770A  CFF7 FFEA          	movff	tblptrh,fsr0h
 38665  01770E  50EF               	movf	indf0,w,c
 38666  017710                     i1u1885_20:
 38667  017710  EC71  F0BE         	call	i1_UARTchar
 38668                           
 38669                           ;UART.c: 240: while((!TXSTAbits.TRMT));
 38670  017714  D000               	goto	i1l523
 38671  017716                     i1l523:
 38672  017716  B2AC               	btfsc	4012,1,c	;volatile
 38673  017718  D002               	goto	i1l14699
 38674  01771A  D7FD               	goto	i1l523
 38675  01771C  D000               	goto	i1l14699
 38676  01771E                     i1l14699:
 38677                           
 38678                           ;UART.c: 241: }
 38679                           ;UART.c: 242: } while( *data++);
 38680  01771E  500C               	movf	i1UARTstring@data,w,c
 38681  017720  6E0E               	movwf	??i1_UARTstring& (0+255),c
 38682  017722  500D               	movf	i1UARTstring@data+1,w,c
 38683  017724  6E0F               	movwf	(??i1_UARTstring+1)& (0+255),c
 38684  017726  4A0C               	infsnz	i1UARTstring@data,f,c
 38685  017728  2A0D               	incf	i1UARTstring@data+1,f,c
 38686  01772A  C00E  FFF6         	movff	??i1_UARTstring,tblptrl
 38687  01772E  C00F  FFF7         	movff	??i1_UARTstring+1,tblptrh
 38688  017732  0E00               	movlw	low (__mediumconst shr (0+16))
 38689  017734  6EF8               	movwf	tblptru,c
 38690  017736  0E0C               	movlw	(high __ramtop+-1)
 38691  017738  64F7               	cpfsgt	tblptrh,c
 38692  01773A  D003               	bra	i1u1887_27
 38693  01773C  0008               	tblrd		*
 38694  01773E  50F5               	movf	tablat,w,c
 38695  017740  D005               	bra	i1u1887_20
 38696  017742                     i1u1887_27:
 38697  017742  CFF6 FFE9          	movff	tblptrl,fsr0l
 38698  017746  CFF7 FFEA          	movff	tblptrh,fsr0h
 38699  01774A  50EF               	movf	indf0,w,c
 38700  01774C                     i1u1887_20:
 38701  01774C  0900               	iorlw	0
 38702  01774E  A4D8               	btfss	status,2,c
 38703  017750  D7B6               	goto	i1l14695
 38704  017752  0012               	return		;funcret
 38705  017754                     __end_ofi1_UARTstring:
 38706                           	opt stack 0
 38707                           pclatu	equ	0xFFB
 38708                           pclath	equ	0xFFA
 38709                           tblptru	equ	0xFF8
 38710                           tblptrh	equ	0xFF7
 38711                           tblptrl	equ	0xFF6
 38712                           tablat	equ	0xFF5
 38713                           prodh	equ	0xFF4
 38714                           prodl	equ	0xFF3
 38715                           intcon	equ	0xFF2
 38716                           intcon2	equ	0xFF1
 38717                           indf0	equ	0xFEF
 38718                           postinc0	equ	0xFEE
 38719                           plusw0	equ	0xFEB
 38720                           fsr0h	equ	0xFEA
 38721                           fsr0l	equ	0xFE9
 38722                           wreg	equ	0xFE8
 38723                           indf1	equ	0xFE7
 38724                           postdec1	equ	0xFE5
 38725                           fsr1h	equ	0xFE2
 38726                           fsr1l	equ	0xFE1
 38727                           bsr	equ	0xFE0
 38728                           indf2	equ	0xFDF
 38729                           postinc2	equ	0xFDE
 38730                           postdec2	equ	0xFDD
 38731                           plusw2	equ	0xFDB
 38732                           fsr2h	equ	0xFDA
 38733                           fsr2l	equ	0xFD9
 38734                           status	equ	0xFD8
 38735                           
 38736 ;; *************** function i1_UARTchar *****************
 38737 ;; Defined at:
 38738 ;;		line 194 in file "UART.c"
 38739 ;; Parameters:    Size  Location     Type
 38740 ;;  data            1    wreg     unsigned char 
 38741 ;;  NinethBit_ov    1    7[COMRAM] unsigned char 
 38742 ;;  NinethBit_ov    1    8[COMRAM] unsigned char 
 38743 ;; Auto vars:     Size  Location     Type
 38744 ;;  data            1   10[COMRAM] unsigned char 
 38745 ;; Return value:  Size  Location     Type
 38746 ;;		None               void
 38747 ;; Registers used:
 38748 ;;		wreg, status,2, status,0, cstack
 38749 ;; Tracked objects:
 38750 ;;		On entry : 0/0
 38751 ;;		On exit  : 0/0
 38752 ;;		Unchanged: 0/0
 38753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 38754 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38757 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38758 ;;Total ram usage:        4 bytes
 38759 ;; Hardware stack levels used:    1
 38760 ;; Hardware stack levels required when called:    2
 38761 ;; This function calls:
 38762 ;;		i1_CheckSum_byte
 38763 ;; This function is called by:
 38764 ;;		_low_isr
 38765 ;;		i1_UARTstring
 38766 ;; This function uses a non-reentrant model
 38767 ;;
 38768                           
 38769                           	psect	text122
 38770  017CE2                     __ptext122:
 38771                           	opt stack 0
 38772  017CE2                     i1_UARTchar:
 38773                           	opt stack 20
 38774                           
 38775                           ;incstack = 0
 38776                           ;i1UARTchar@data stored from wreg
 38777  017CE2  6E0B               	movwf	i1UARTchar@data,c
 38778                           
 38779                           ;UART.c: 196: if(TXSTAbits.TX9)
 38780  017CE4  ACAC               	btfss	4012,6,c	;volatile
 38781  017CE6  D031               	goto	i1l13685
 38782                           
 38783                           ;UART.c: 197: {
 38784                           ;UART.c: 199: if(!NinethBit_override)
 38785  017CE8  5008               	movf	i1UARTchar@NinethBit_override,w,c
 38786  017CEA  B4D8               	btfsc	status,2,c
 38787  017CEC  D017               	goto	i1l13681
 38788  017CEE  D023               	goto	i1l13683
 38789                           
 38790                           ;UART.c: 200: {
 38791                           ;UART.c: 202: switch (Global.Parity)
 38792  017CF0  D015               	goto	i1l13681
 38793  017CF2                     i1l13675:
 38794                           
 38795                           ;UART.c: 205: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 38796  017CF2  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 38797  017CF6  6A02               	clrf	i1CheckSum_byte@This+1,c
 38798  017CF8  0E03               	movlw	3
 38799  017CFA  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 38800  017CFC  ECC4  F004         	call	i1_CheckSum_byte	;wreg free
 38801  017D00  D007               	goto	L31
 38802  017D02                     i1l13677:
 38803                           
 38804                           ;UART.c: 208: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 38805  017D02  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 38806  017D06  6A02               	clrf	i1CheckSum_byte@This+1,c
 38807  017D08  0E02               	movlw	2
 38808  017D0A  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 38809  017D0C  ECC4  F004         	call	i1_CheckSum_byte	;wreg free
 38810  017D10                     L31:
 38811  017D10  6E0A               	movwf	??i1_UARTchar& (0+255),c
 38812  017D12  D015               	goto	L32
 38813  017D14                     i1l512:
 38814                           
 38815                           ; BSR set to: 1
 38816                           ;UART.c: 211: TXSTAbits.TX9D = 1;
 38817  017D14  80AC               	bsf	4012,0,c	;volatile
 38818                           
 38819                           ;UART.c: 212: break;
 38820  017D16  D019               	goto	i1l13685
 38821  017D18                     i1l513:
 38822                           
 38823                           ; BSR set to: 1
 38824                           ;UART.c: 214: TXSTAbits.TX9D = 0;
 38825  017D18  90AC               	bcf	4012,0,c	;volatile
 38826                           
 38827                           ; BSR set to: 1
 38828                           ;UART.c: 216: }
 38829                           
 38830                           ;UART.c: 215: break;
 38831  017D1A  D017               	goto	i1l13685
 38832  017D1C                     i1l13681:
 38833  017D1C  0101               	movlb	1	; () banked
 38834  017D1E  5104               	movf	(_Global+4)& (0+255),w,b
 38835                           
 38836                           ; Switch size 1, requested type "space"
 38837                           ; Number of cases is 3, Range of values is 1 to 3
 38838                           ; switch strategies available:
 38839                           ; Name         Instructions Cycles
 38840                           ; simple_byte           10     6 (average)
 38841                           ;	Chosen strategy is simple_byte
 38842  017D20  0A01               	xorlw	1	; case 1
 38843  017D22  B4D8               	btfsc	status,2,c
 38844  017D24  D7E6               	goto	i1l13675
 38845  017D26  0A03               	xorlw	3	; case 2
 38846  017D28  B4D8               	btfsc	status,2,c
 38847  017D2A  D7EB               	goto	i1l13677
 38848  017D2C  0A01               	xorlw	1	; case 3
 38849  017D2E  B4D8               	btfsc	status,2,c
 38850  017D30  D7F1               	goto	i1l512
 38851  017D32  D7F2               	goto	i1l513
 38852                           
 38853                           ; BSR set to: 1
 38854                           ;UART.c: 217: }
 38855  017D34  D00A               	goto	i1l13685
 38856  017D36                     i1l13683:
 38857                           
 38858                           ;UART.c: 218: else
 38859                           ;UART.c: 219: {
 38860                           ;UART.c: 220: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 38861  017D36  C009  F00A         	movff	i1UARTchar@NinethBit_override_data,??i1_UARTchar
 38862  017D3A  0E01               	movlw	1
 38863  017D3C  160A               	andwf	??i1_UARTchar,f,c
 38864  017D3E                     L32:
 38865  017D3E  50AC               	movf	4012,w,c	;volatile
 38866  017D40  180A               	xorwf	??i1_UARTchar,w,c
 38867  017D42  0BFE               	andlw	-2
 38868  017D44  180A               	xorwf	??i1_UARTchar,w,c
 38869  017D46  6EAC               	movwf	4012,c	;volatile
 38870  017D48  D000               	goto	i1l13685
 38871  017D4A                     i1l13685:
 38872                           
 38873                           ;UART.c: 221: }
 38874                           ;UART.c: 222: }
 38875                           ;UART.c: 223: TX_OLD = data;
 38876  017D4A  C00B  F0F2         	movff	i1UARTchar@data,_TX_OLD
 38877                           
 38878                           ;UART.c: 224: TXREG = data;
 38879  017D4E  C00B  FFAD         	movff	i1UARTchar@data,4013	;volatile
 38880                           
 38881                           ;UART.c: 225: while(!TXSTAbits.TRMT);
 38882  017D52  D000               	goto	i1l515
 38883  017D54                     i1l515:
 38884  017D54  A2AC               	btfss	4012,1,c	;volatile
 38885  017D56  D7FE               	goto	i1l515
 38886  017D58  0012               	return		;funcret
 38887  017D5A                     __end_ofi1_UARTchar:
 38888                           	opt stack 0
 38889                           pclatu	equ	0xFFB
 38890                           pclath	equ	0xFFA
 38891                           tblptru	equ	0xFF8
 38892                           tblptrh	equ	0xFF7
 38893                           tblptrl	equ	0xFF6
 38894                           tablat	equ	0xFF5
 38895                           prodh	equ	0xFF4
 38896                           prodl	equ	0xFF3
 38897                           intcon	equ	0xFF2
 38898                           intcon2	equ	0xFF1
 38899                           indf0	equ	0xFEF
 38900                           postinc0	equ	0xFEE
 38901                           plusw0	equ	0xFEB
 38902                           fsr0h	equ	0xFEA
 38903                           fsr0l	equ	0xFE9
 38904                           wreg	equ	0xFE8
 38905                           indf1	equ	0xFE7
 38906                           postdec1	equ	0xFE5
 38907                           fsr1h	equ	0xFE2
 38908                           fsr1l	equ	0xFE1
 38909                           bsr	equ	0xFE0
 38910                           indf2	equ	0xFDF
 38911                           postinc2	equ	0xFDE
 38912                           postdec2	equ	0xFDD
 38913                           plusw2	equ	0xFDB
 38914                           fsr2h	equ	0xFDA
 38915                           fsr2l	equ	0xFD9
 38916                           status	equ	0xFD8
 38917                           
 38918 ;; *************** function i1_CheckSum_byte *****************
 38919 ;; Defined at:
 38920 ;;		line 359 in file "MISC.c"
 38921 ;; Parameters:    Size  Location     Type
 38922 ;;  This            2    0[COMRAM] unsigned int 
 38923 ;;  Odd_Even        1    2[COMRAM] unsigned char 
 38924 ;; Auto vars:     Size  Location     Type
 38925 ;;  CheckSum_byt    2    3[COMRAM] unsigned int 
 38926 ;;  CheckSum_byt    1    6[COMRAM] unsigned char 
 38927 ;;  CheckSum_byt    1    5[COMRAM] unsigned char 
 38928 ;; Return value:  Size  Location     Type
 38929 ;;                  1    wreg      unsigned char 
 38930 ;; Registers used:
 38931 ;;		wreg, status,2, status,0
 38932 ;; Tracked objects:
 38933 ;;		On entry : 0/0
 38934 ;;		On exit  : 0/0
 38935 ;;		Unchanged: 0/0
 38936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 38937 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38938 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38940 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 38941 ;;Total ram usage:        7 bytes
 38942 ;; Hardware stack levels used:    1
 38943 ;; Hardware stack levels required when called:    1
 38944 ;; This function calls:
 38945 ;;		Nothing
 38946 ;; This function is called by:
 38947 ;;		i1_UARTchar
 38948 ;; This function uses a non-reentrant model
 38949 ;;
 38950                           
 38951                           	psect	text123
 38952  000988                     __ptext123:
 38953                           	opt stack 0
 38954  000988                     i1_CheckSum_byte:
 38955                           	opt stack 20
 38956                           
 38957                           ;MISC.c: 361: char i = 0;
 38958                           
 38959                           ;incstack = 0
 38960  000988  0E00               	movlw	0
 38961  00098A  6E07               	movwf	i1CheckSum_byte@i,c
 38962                           
 38963                           ;MISC.c: 362: unsigned char Parity = 0;
 38964  00098C  0E00               	movlw	0
 38965  00098E  6E06               	movwf	i1CheckSum_byte@Parity,c
 38966                           
 38967                           ;MISC.c: 363: unsigned int ThisTemp = This;
 38968  000990  C001  F004         	movff	i1CheckSum_byte@This,i1CheckSum_byte@ThisTemp
 38969  000994  C002  F005         	movff	i1CheckSum_byte@This+1,i1CheckSum_byte@ThisTemp+1
 38970                           
 38971                           ;MISC.c: 365: for (i =0; i<8; i++)
 38972  000998  0E00               	movlw	0
 38973  00099A  6E07               	movwf	i1CheckSum_byte@i,c
 38974  00099C                     i1l12643:
 38975  00099C  0E07               	movlw	7
 38976  00099E  6407               	cpfsgt	i1CheckSum_byte@i,c
 38977  0009A0  D001               	goto	i1l404
 38978  0009A2  D007               	goto	i1l12651
 38979  0009A4                     i1l404:
 38980                           
 38981                           ;MISC.c: 366: {
 38982                           ;MISC.c: 367: if((ThisTemp & 0x01) == 1)
 38983  0009A4  B004               	btfsc	i1CheckSum_byte@ThisTemp,0,c
 38984                           
 38985                           ;MISC.c: 368: {
 38986                           ;MISC.c: 369: Parity++;
 38987  0009A6  2A06               	incf	i1CheckSum_byte@Parity,f,c
 38988                           
 38989                           ;MISC.c: 370: }
 38990                           ;MISC.c: 371: ThisTemp >>= 1;
 38991  0009A8  90D8               	bcf	status,0,c
 38992  0009AA  3205               	rrcf	i1CheckSum_byte@ThisTemp+1,f,c
 38993  0009AC  3204               	rrcf	i1CheckSum_byte@ThisTemp,f,c
 38994  0009AE  2A07               	incf	i1CheckSum_byte@i,f,c
 38995  0009B0  D7F5               	goto	i1l12643
 38996  0009B2                     i1l12651:
 38997                           
 38998                           ;MISC.c: 372: }
 38999                           ;MISC.c: 373: if(Odd_Even == 3)
 39000  0009B2  0E03               	movlw	3
 39001  0009B4  1803               	xorwf	i1CheckSum_byte@Odd_Even,w,c
 39002  0009B6  A4D8               	btfss	status,2,c
 39003  0009B8  D006               	goto	i1l407
 39004                           
 39005                           ;MISC.c: 374: {
 39006                           ;MISC.c: 375: if(Parity % 2 == 0)
 39007  0009BA  B006               	btfsc	i1CheckSum_byte@Parity,0,c
 39008  0009BC  D002               	goto	i1l12659
 39009                           
 39010                           ;MISC.c: 376: {
 39011                           ;MISC.c: 377: return 1;
 39012  0009BE  0E01               	movlw	1
 39013  0009C0  0012               	return	
 39014  0009C2                     i1l12659:
 39015                           
 39016                           ;MISC.c: 378: }
 39017                           ;MISC.c: 379: return 0;
 39018  0009C2  0E00               	movlw	0
 39019                           
 39020                           ;MISC.c: 380: }
 39021  0009C4  0012               	return	
 39022  0009C6                     i1l407:
 39023                           
 39024                           ;MISC.c: 381: else
 39025                           ;MISC.c: 382: {
 39026                           ;MISC.c: 383: if(Parity % 2 == 1)
 39027  0009C6  A006               	btfss	i1CheckSum_byte@Parity,0,c
 39028  0009C8  D002               	goto	i1l12669
 39029                           
 39030                           ;MISC.c: 384: {
 39031                           ;MISC.c: 385: return 1;
 39032  0009CA  0E01               	movlw	1
 39033  0009CC  0012               	return	
 39034  0009CE                     i1l12669:
 39035                           
 39036                           ;MISC.c: 386: }
 39037                           ;MISC.c: 387: return 0;
 39038  0009CE  0E00               	movlw	0
 39039  0009D0  0012               	return	
 39040  0009D2  0012               	return		;funcret
 39041  0009D4                     __end_ofi1_CheckSum_byte:
 39042                           	opt stack 0
 39043                           pclatu	equ	0xFFB
 39044                           pclath	equ	0xFFA
 39045                           tblptru	equ	0xFF8
 39046                           tblptrh	equ	0xFF7
 39047                           tblptrl	equ	0xFF6
 39048                           tablat	equ	0xFF5
 39049                           prodh	equ	0xFF4
 39050                           prodl	equ	0xFF3
 39051                           intcon	equ	0xFF2
 39052                           intcon2	equ	0xFF1
 39053                           indf0	equ	0xFEF
 39054                           postinc0	equ	0xFEE
 39055                           plusw0	equ	0xFEB
 39056                           fsr0h	equ	0xFEA
 39057                           fsr0l	equ	0xFE9
 39058                           wreg	equ	0xFE8
 39059                           indf1	equ	0xFE7
 39060                           postdec1	equ	0xFE5
 39061                           fsr1h	equ	0xFE2
 39062                           fsr1l	equ	0xFE1
 39063                           bsr	equ	0xFE0
 39064                           indf2	equ	0xFDF
 39065                           postinc2	equ	0xFDE
 39066                           postdec2	equ	0xFDD
 39067                           plusw2	equ	0xFDB
 39068                           fsr2h	equ	0xFDA
 39069                           fsr2l	equ	0xFD9
 39070                           status	equ	0xFD8
 39071                           
 39072 ;; *************** function i1_SetEEPROM *****************
 39073 ;; Defined at:
 39074 ;;		line 225 in file "EEPROM.c"
 39075 ;; Parameters:    Size  Location     Type
 39076 ;;  Temp            9   53[COMRAM] struct EEdata
 39077 ;;  burn            4   62[COMRAM] unsigned long 
 39078 ;; Auto vars:     Size  Location     Type
 39079 ;;  SetEEPROM       4   66[COMRAM] unsigned long 
 39080 ;; Return value:  Size  Location     Type
 39081 ;;                  4   53[COMRAM] unsigned long 
 39082 ;; Registers used:
 39083 ;;		wreg, status,2, status,0, cstack
 39084 ;; Tracked objects:
 39085 ;;		On entry : 0/0
 39086 ;;		On exit  : 0/0
 39087 ;;		Unchanged: 0/0
 39088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39089 ;;      Params:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39090 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39092 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39093 ;;Total ram usage:       17 bytes
 39094 ;; Hardware stack levels used:    1
 39095 ;; Hardware stack levels required when called:    4
 39096 ;; This function calls:
 39097 ;;		i1_SetMemoryBaud
 39098 ;;		i1_SetMemoryLong
 39099 ;;		i1_SetMemoryParity
 39100 ;; This function is called by:
 39101 ;;		_UseIRCode
 39102 ;; This function uses a non-reentrant model
 39103 ;;
 39104                           
 39105                           	psect	text124
 39106  0174EC                     __ptext124:
 39107                           	opt stack 0
 39108  0174EC                     i1_SetEEPROM:
 39109                           	opt stack 18
 39110                           
 39111                           ;EEPROM.c: 227: unsigned long fail = 0;
 39112                           
 39113                           ;incstack = 0
 39114  0174EC  0E00               	movlw	0
 39115  0174EE  6E43               	movwf	i1SetEEPROM@fail,c
 39116  0174F0  0E00               	movlw	0
 39117  0174F2  6E44               	movwf	i1SetEEPROM@fail+1,c
 39118  0174F4  0E00               	movlw	0
 39119  0174F6  6E45               	movwf	i1SetEEPROM@fail+2,c
 39120  0174F8  0E00               	movlw	0
 39121  0174FA  6E46               	movwf	i1SetEEPROM@fail+3,c
 39122                           
 39123                           ;EEPROM.c: 228: if(burn & 0x00000001)
 39124  0174FC  A03F               	btfss	i1SetEEPROM@burn,0,c
 39125  0174FE  D014               	goto	i1l10275
 39126                           
 39127                           ;EEPROM.c: 229: {
 39128                           ;EEPROM.c: 230: if(!SetMemoryBaud(Temp.Baud))
 39129  017500  C036  F024         	movff	i1SetEEPROM@Temp,i1SetMemoryBaud@Baud
 39130  017504  C037  F025         	movff	i1SetEEPROM@Temp+1,i1SetMemoryBaud@Baud+1
 39131  017508  C038  F026         	movff	i1SetEEPROM@Temp+2,i1SetMemoryBaud@Baud+2
 39132  01750C  C039  F027         	movff	i1SetEEPROM@Temp+3,i1SetMemoryBaud@Baud+3
 39133  017510  EC7B  F0B8         	call	i1_SetMemoryBaud	;wreg free
 39134  017514  0900               	iorlw	0
 39135  017516  A4D8               	btfss	status,2,c
 39136  017518  D007               	goto	i1l10275
 39137                           
 39138                           ;EEPROM.c: 231: {
 39139                           ;EEPROM.c: 233: fail += 0x00000001;
 39140  01751A  0E01               	movlw	1
 39141  01751C  2643               	addwf	i1SetEEPROM@fail,f,c
 39142  01751E  0E00               	movlw	0
 39143  017520  2244               	addwfc	i1SetEEPROM@fail+1,f,c
 39144  017522  2245               	addwfc	i1SetEEPROM@fail+2,f,c
 39145  017524  2246               	addwfc	i1SetEEPROM@fail+3,f,c
 39146  017526  D000               	goto	i1l10275
 39147  017528                     i1l10275:
 39148                           
 39149                           ;EEPROM.c: 234: }
 39150                           ;EEPROM.c: 235: }
 39151                           ;EEPROM.c: 236: if(burn & 0x00000002)
 39152  017528  A23F               	btfss	i1SetEEPROM@burn,1,c
 39153  01752A  D00D               	goto	i1l10281
 39154                           
 39155                           ;EEPROM.c: 237: {
 39156                           ;EEPROM.c: 238: if(!SetMemoryParity(Temp.Parity))
 39157  01752C  503A               	movf	i1SetEEPROM@Temp+4,w,c
 39158  01752E  EC79  F007         	call	i1_SetMemoryParity
 39159  017532  0900               	iorlw	0
 39160  017534  A4D8               	btfss	status,2,c
 39161  017536  D007               	goto	i1l10281
 39162                           
 39163                           ;EEPROM.c: 239: {
 39164                           ;EEPROM.c: 241: fail += 0x00000002;
 39165  017538  0E02               	movlw	2
 39166  01753A  2643               	addwf	i1SetEEPROM@fail,f,c
 39167  01753C  0E00               	movlw	0
 39168  01753E  2244               	addwfc	i1SetEEPROM@fail+1,f,c
 39169  017540  2245               	addwfc	i1SetEEPROM@fail+2,f,c
 39170  017542  2246               	addwfc	i1SetEEPROM@fail+3,f,c
 39171  017544  D000               	goto	i1l10281
 39172  017546                     i1l10281:
 39173                           
 39174                           ;EEPROM.c: 242: }
 39175                           ;EEPROM.c: 243: }
 39176                           ;EEPROM.c: 244: if(burn & 0x00000004)
 39177  017546  A43F               	btfss	i1SetEEPROM@burn,2,c
 39178  017548  D016               	goto	i1l10287
 39179                           
 39180                           ;EEPROM.c: 245: {
 39181                           ;EEPROM.c: 246: if(!SetMemoryLong(Temp.NEC1,5))
 39182  01754A  C03B  F025         	movff	i1SetEEPROM@Temp+5,i1SetMemoryLong@Data
 39183  01754E  C03C  F026         	movff	i1SetEEPROM@Temp+6,i1SetMemoryLong@Data+1
 39184  017552  C03D  F027         	movff	i1SetEEPROM@Temp+7,i1SetMemoryLong@Data+2
 39185  017556  C03E  F028         	movff	i1SetEEPROM@Temp+8,i1SetMemoryLong@Data+3
 39186  01755A  0E05               	movlw	5
 39187  01755C  6E29               	movwf	i1SetMemoryLong@AddressFirst,c
 39188  01755E  EC0B  F0B7         	call	i1_SetMemoryLong	;wreg free
 39189  017562  0900               	iorlw	0
 39190  017564  A4D8               	btfss	status,2,c
 39191  017566  D007               	goto	i1l10287
 39192                           
 39193                           ;EEPROM.c: 247: {
 39194                           ;EEPROM.c: 249: fail += 0x00000004;
 39195  017568  0E04               	movlw	4
 39196  01756A  2643               	addwf	i1SetEEPROM@fail,f,c
 39197  01756C  0E00               	movlw	0
 39198  01756E  2244               	addwfc	i1SetEEPROM@fail+1,f,c
 39199  017570  2245               	addwfc	i1SetEEPROM@fail+2,f,c
 39200  017572  2246               	addwfc	i1SetEEPROM@fail+3,f,c
 39201  017574  D000               	goto	i1l10287
 39202  017576                     i1l10287:
 39203                           
 39204                           ;EEPROM.c: 250: }
 39205                           ;EEPROM.c: 251: }
 39206                           ;EEPROM.c: 252: return fail;
 39207  017576  C043  F036         	movff	i1SetEEPROM@fail,?i1_SetEEPROM
 39208  01757A  C044  F037         	movff	i1SetEEPROM@fail+1,?i1_SetEEPROM+1
 39209  01757E  C045  F038         	movff	i1SetEEPROM@fail+2,?i1_SetEEPROM+2
 39210  017582  C046  F039         	movff	i1SetEEPROM@fail+3,?i1_SetEEPROM+3
 39211  017586  0012               	return	
 39212  017588  0012               	return		;funcret
 39213  01758A                     __end_ofi1_SetEEPROM:
 39214                           	opt stack 0
 39215                           pclatu	equ	0xFFB
 39216                           pclath	equ	0xFFA
 39217                           tblptru	equ	0xFF8
 39218                           tblptrh	equ	0xFF7
 39219                           tblptrl	equ	0xFF6
 39220                           tablat	equ	0xFF5
 39221                           prodh	equ	0xFF4
 39222                           prodl	equ	0xFF3
 39223                           intcon	equ	0xFF2
 39224                           intcon2	equ	0xFF1
 39225                           indf0	equ	0xFEF
 39226                           postinc0	equ	0xFEE
 39227                           plusw0	equ	0xFEB
 39228                           fsr0h	equ	0xFEA
 39229                           fsr0l	equ	0xFE9
 39230                           wreg	equ	0xFE8
 39231                           indf1	equ	0xFE7
 39232                           postdec1	equ	0xFE5
 39233                           fsr1h	equ	0xFE2
 39234                           fsr1l	equ	0xFE1
 39235                           bsr	equ	0xFE0
 39236                           indf2	equ	0xFDF
 39237                           postinc2	equ	0xFDE
 39238                           postdec2	equ	0xFDD
 39239                           plusw2	equ	0xFDB
 39240                           fsr2h	equ	0xFDA
 39241                           fsr2l	equ	0xFD9
 39242                           status	equ	0xFD8
 39243                           
 39244 ;; *************** function i1_SetMemoryParity *****************
 39245 ;; Defined at:
 39246 ;;		line 190 in file "EEPROM.c"
 39247 ;; Parameters:    Size  Location     Type
 39248 ;;  Parity          1    wreg     unsigned char 
 39249 ;; Auto vars:     Size  Location     Type
 39250 ;;  Parity          1    5[COMRAM] unsigned char 
 39251 ;;  SetMemoryPar    1    4[COMRAM] unsigned char 
 39252 ;; Return value:  Size  Location     Type
 39253 ;;                  1    wreg      unsigned char 
 39254 ;; Registers used:
 39255 ;;		wreg, status,2, status,0, cstack
 39256 ;; Tracked objects:
 39257 ;;		On entry : 0/0
 39258 ;;		On exit  : 0/0
 39259 ;;		Unchanged: 0/0
 39260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39265 ;;Total ram usage:        2 bytes
 39266 ;; Hardware stack levels used:    1
 39267 ;; Hardware stack levels required when called:    3
 39268 ;; This function calls:
 39269 ;;		i1_GetMemoryParity
 39270 ;;		i1_WriteEEPROM_1Byte
 39271 ;; This function is called by:
 39272 ;;		i1_SetEEPROM
 39273 ;; This function uses a non-reentrant model
 39274 ;;
 39275                           
 39276                           	psect	text125
 39277  000EF2                     __ptext125:
 39278                           	opt stack 0
 39279  000EF2                     i1_SetMemoryParity:
 39280                           	opt stack 18
 39281                           
 39282                           ;incstack = 0
 39283                           ;i1SetMemoryParity@Parity stored from wreg
 39284  000EF2  6E06               	movwf	i1SetMemoryParity@Parity,c
 39285                           
 39286                           ;EEPROM.c: 192: unsigned char Test;
 39287                           ;EEPROM.c: 194: WriteEEPROM_1Byte(4, Parity);
 39288  000EF4  0E00               	movlw	0
 39289  000EF6  6E02               	movwf	i1WriteEEPROM_1Byte@address+1,c
 39290  000EF8  0E04               	movlw	4
 39291  000EFA  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 39292  000EFC  C006  F003         	movff	i1SetMemoryParity@Parity,i1WriteEEPROM_1Byte@data
 39293  000F00  EC23  F006         	call	i1_WriteEEPROM_1Byte	;wreg free
 39294                           
 39295                           ;EEPROM.c: 197: Test = GetMemoryParity();
 39296  000F04  EC34  F008         	call	i1_GetMemoryParity	;wreg free
 39297  000F08  6E05               	movwf	i1SetMemoryParity@Test,c
 39298                           
 39299                           ;EEPROM.c: 199: if(Test == Parity)
 39300  000F0A  5006               	movf	i1SetMemoryParity@Parity,w,c
 39301  000F0C  1805               	xorwf	i1SetMemoryParity@Test,w,c
 39302  000F0E  A4D8               	btfss	status,2,c
 39303  000F10  D002               	goto	i1l9201
 39304                           
 39305                           ;EEPROM.c: 200: {
 39306                           ;EEPROM.c: 201: return 1;
 39307  000F12  0E01               	movlw	1
 39308  000F14  0012               	return	
 39309  000F16                     i1l9201:
 39310                           
 39311                           ;EEPROM.c: 202: }
 39312                           ;EEPROM.c: 203: return 0;
 39313  000F16  0E00               	movlw	0
 39314  000F18  0012               	return	
 39315  000F1A  0012               	return		;funcret
 39316  000F1C                     __end_ofi1_SetMemoryParity:
 39317                           	opt stack 0
 39318                           pclatu	equ	0xFFB
 39319                           pclath	equ	0xFFA
 39320                           tblptru	equ	0xFF8
 39321                           tblptrh	equ	0xFF7
 39322                           tblptrl	equ	0xFF6
 39323                           tablat	equ	0xFF5
 39324                           prodh	equ	0xFF4
 39325                           prodl	equ	0xFF3
 39326                           intcon	equ	0xFF2
 39327                           intcon2	equ	0xFF1
 39328                           indf0	equ	0xFEF
 39329                           postinc0	equ	0xFEE
 39330                           plusw0	equ	0xFEB
 39331                           fsr0h	equ	0xFEA
 39332                           fsr0l	equ	0xFE9
 39333                           wreg	equ	0xFE8
 39334                           indf1	equ	0xFE7
 39335                           postdec1	equ	0xFE5
 39336                           fsr1h	equ	0xFE2
 39337                           fsr1l	equ	0xFE1
 39338                           bsr	equ	0xFE0
 39339                           indf2	equ	0xFDF
 39340                           postinc2	equ	0xFDE
 39341                           postdec2	equ	0xFDD
 39342                           plusw2	equ	0xFDB
 39343                           fsr2h	equ	0xFDA
 39344                           fsr2l	equ	0xFD9
 39345                           status	equ	0xFD8
 39346                           
 39347 ;; *************** function i1_GetMemoryParity *****************
 39348 ;; Defined at:
 39349 ;;		line 176 in file "EEPROM.c"
 39350 ;; Parameters:    Size  Location     Type
 39351 ;;		None
 39352 ;; Auto vars:     Size  Location     Type
 39353 ;;  GetMemoryPar    1    3[COMRAM] unsigned char 
 39354 ;; Return value:  Size  Location     Type
 39355 ;;                  1    wreg      unsigned char 
 39356 ;; Registers used:
 39357 ;;		wreg, status,2, status,0, cstack
 39358 ;; Tracked objects:
 39359 ;;		On entry : 0/0
 39360 ;;		On exit  : 0/0
 39361 ;;		Unchanged: 0/0
 39362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39367 ;;Total ram usage:        1 bytes
 39368 ;; Hardware stack levels used:    1
 39369 ;; Hardware stack levels required when called:    2
 39370 ;; This function calls:
 39371 ;;		i1_ReadEEPROM_1Byte
 39372 ;; This function is called by:
 39373 ;;		i1_SetMemoryParity
 39374 ;; This function uses a non-reentrant model
 39375 ;;
 39376                           
 39377                           	psect	text126
 39378  001068                     __ptext126:
 39379                           	opt stack 0
 39380  001068                     i1_GetMemoryParity:
 39381                           	opt stack 18
 39382                           
 39383                           ;EEPROM.c: 178: unsigned char Parity;
 39384                           ;EEPROM.c: 180: Parity = ReadEEPROM_1Byte(4);
 39385                           
 39386                           ;incstack = 0
 39387  001068  0E00               	movlw	0
 39388  00106A  6E02               	movwf	i1ReadEEPROM_1Byte@address+1,c
 39389  00106C  0E04               	movlw	4
 39390  00106E  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 39391  001070  ECC0  F006         	call	i1_ReadEEPROM_1Byte	;wreg free
 39392  001074  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 39393  001076  6E04               	movwf	i1GetMemoryParity@Parity,c
 39394                           
 39395                           ;EEPROM.c: 182: return (Parity);
 39396  001078  5004               	movf	i1GetMemoryParity@Parity,w,c
 39397  00107A  0012               	return	
 39398  00107C  0012               	return		;funcret
 39399  00107E                     __end_ofi1_GetMemoryParity:
 39400                           	opt stack 0
 39401                           pclatu	equ	0xFFB
 39402                           pclath	equ	0xFFA
 39403                           tblptru	equ	0xFF8
 39404                           tblptrh	equ	0xFF7
 39405                           tblptrl	equ	0xFF6
 39406                           tablat	equ	0xFF5
 39407                           prodh	equ	0xFF4
 39408                           prodl	equ	0xFF3
 39409                           intcon	equ	0xFF2
 39410                           intcon2	equ	0xFF1
 39411                           indf0	equ	0xFEF
 39412                           postinc0	equ	0xFEE
 39413                           plusw0	equ	0xFEB
 39414                           fsr0h	equ	0xFEA
 39415                           fsr0l	equ	0xFE9
 39416                           wreg	equ	0xFE8
 39417                           indf1	equ	0xFE7
 39418                           postdec1	equ	0xFE5
 39419                           fsr1h	equ	0xFE2
 39420                           fsr1l	equ	0xFE1
 39421                           bsr	equ	0xFE0
 39422                           indf2	equ	0xFDF
 39423                           postinc2	equ	0xFDE
 39424                           postdec2	equ	0xFDD
 39425                           plusw2	equ	0xFDB
 39426                           fsr2h	equ	0xFDA
 39427                           fsr2l	equ	0xFD9
 39428                           status	equ	0xFD8
 39429                           
 39430 ;; *************** function i1_SetMemoryLong *****************
 39431 ;; Defined at:
 39432 ;;		line 300 in file "EEPROM.c"
 39433 ;; Parameters:    Size  Location     Type
 39434 ;;  Data            4   36[COMRAM] unsigned long 
 39435 ;;  AddressFirst    1   40[COMRAM] unsigned char 
 39436 ;; Auto vars:     Size  Location     Type
 39437 ;;  SetMemoryLon    4   45[COMRAM] unsigned long 
 39438 ;;  SetMemoryLon    1   52[COMRAM] unsigned char 
 39439 ;;  SetMemoryLon    1   51[COMRAM] unsigned char 
 39440 ;;  SetMemoryLon    1   50[COMRAM] unsigned char 
 39441 ;;  SetMemoryLon    1   49[COMRAM] unsigned char 
 39442 ;; Return value:  Size  Location     Type
 39443 ;;                  1    wreg      unsigned char 
 39444 ;; Registers used:
 39445 ;;		wreg, status,2, status,0, cstack
 39446 ;; Tracked objects:
 39447 ;;		On entry : 0/0
 39448 ;;		On exit  : 0/0
 39449 ;;		Unchanged: 0/0
 39450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39451 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39452 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39453 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39454 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39455 ;;Total ram usage:       17 bytes
 39456 ;; Hardware stack levels used:    1
 39457 ;; Hardware stack levels required when called:    3
 39458 ;; This function calls:
 39459 ;;		i1_GetMemoryLong
 39460 ;;		i1_WriteEEPROM_1Byte
 39461 ;; This function is called by:
 39462 ;;		i1_SetEEPROM
 39463 ;; This function uses a non-reentrant model
 39464 ;;
 39465                           
 39466                           	psect	text127
 39467  016E16                     __ptext127:
 39468                           	opt stack 0
 39469  016E16                     i1_SetMemoryLong:
 39470                           	opt stack 18
 39471                           
 39472                           ;EEPROM.c: 302: unsigned char H;
 39473                           ;EEPROM.c: 303: unsigned char MH;
 39474                           ;EEPROM.c: 304: unsigned char ML;
 39475                           ;EEPROM.c: 305: unsigned char L;
 39476                           ;EEPROM.c: 306: unsigned long Test;
 39477                           ;EEPROM.c: 308: H = (unsigned char) ((Data & 0XFF000000) >> 24);
 39478                           
 39479                           ;incstack = 0
 39480  016E16  0E00               	movlw	0
 39481  016E18  1425               	andwf	i1SetMemoryLong@Data,w,c
 39482  016E1A  6E2A               	movwf	??i1_SetMemoryLong& (0+255),c
 39483  016E1C  0E00               	movlw	0
 39484  016E1E  1426               	andwf	i1SetMemoryLong@Data+1,w,c
 39485  016E20  6E2B               	movwf	(??i1_SetMemoryLong+1)& (0+255),c
 39486  016E22  0E00               	movlw	0
 39487  016E24  1427               	andwf	i1SetMemoryLong@Data+2,w,c
 39488  016E26  6E2C               	movwf	(??i1_SetMemoryLong+2)& (0+255),c
 39489  016E28  0EFF               	movlw	255
 39490  016E2A  1428               	andwf	i1SetMemoryLong@Data+3,w,c
 39491  016E2C  6E2D               	movwf	(??i1_SetMemoryLong+3)& (0+255),c
 39492  016E2E  0E19               	movlw	25
 39493  016E30  D005               	goto	i1u1053_20
 39494  016E32                     i1u1053_25:
 39495  016E32  90D8               	bcf	status,0,c
 39496  016E34  322D               	rrcf	??i1_SetMemoryLong+3,f,c
 39497  016E36  322C               	rrcf	??i1_SetMemoryLong+2,f,c
 39498  016E38  322B               	rrcf	??i1_SetMemoryLong+1,f,c
 39499  016E3A  322A               	rrcf	??i1_SetMemoryLong,f,c
 39500  016E3C                     i1u1053_20:
 39501  016E3C  2EE8               	decfsz	wreg,f,c
 39502  016E3E  D7F9               	goto	i1u1053_25
 39503  016E40  502A               	movf	??i1_SetMemoryLong,w,c
 39504  016E42  6E32               	movwf	i1SetMemoryLong@H,c
 39505                           
 39506                           ;EEPROM.c: 309: MH = (unsigned char) ((Data & 0X00FF0000) >> 16);
 39507  016E44  C027  F033         	movff	i1SetMemoryLong@Data+2,i1SetMemoryLong@MH
 39508                           
 39509                           ;EEPROM.c: 310: ML = (unsigned char) ((Data & 0X0000FF00) >> 8);
 39510  016E48  C026  F034         	movff	i1SetMemoryLong@Data+1,i1SetMemoryLong@ML
 39511                           
 39512                           ;EEPROM.c: 311: L = (unsigned char) (Data & 0X000000FF);
 39513  016E4C  C025  F035         	movff	i1SetMemoryLong@Data,i1SetMemoryLong@L
 39514                           
 39515                           ;EEPROM.c: 314: WriteEEPROM_1Byte(AddressFirst, H);
 39516  016E50  C029  F001         	movff	i1SetMemoryLong@AddressFirst,i1WriteEEPROM_1Byte@address
 39517  016E54  6A02               	clrf	i1WriteEEPROM_1Byte@address+1,c
 39518  016E56  C032  F003         	movff	i1SetMemoryLong@H,i1WriteEEPROM_1Byte@data
 39519  016E5A  EC23  F006         	call	i1_WriteEEPROM_1Byte	;wreg free
 39520                           
 39521                           ;EEPROM.c: 315: WriteEEPROM_1Byte((AddressFirst + 1), MH);
 39522  016E5E  0E01               	movlw	1
 39523  016E60  2429               	addwf	i1SetMemoryLong@AddressFirst,w,c
 39524  016E62  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 39525  016E64  6A02               	clrf	i1WriteEEPROM_1Byte@address+1,c
 39526  016E66  0E00               	movlw	0
 39527  016E68  2202               	addwfc	i1WriteEEPROM_1Byte@address+1,f,c
 39528  016E6A  C033  F003         	movff	i1SetMemoryLong@MH,i1WriteEEPROM_1Byte@data
 39529  016E6E  EC23  F006         	call	i1_WriteEEPROM_1Byte	;wreg free
 39530                           
 39531                           ;EEPROM.c: 316: WriteEEPROM_1Byte((AddressFirst + 2), ML);
 39532  016E72  0E02               	movlw	2
 39533  016E74  2429               	addwf	i1SetMemoryLong@AddressFirst,w,c
 39534  016E76  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 39535  016E78  6A02               	clrf	i1WriteEEPROM_1Byte@address+1,c
 39536  016E7A  0E00               	movlw	0
 39537  016E7C  2202               	addwfc	i1WriteEEPROM_1Byte@address+1,f,c
 39538  016E7E  C034  F003         	movff	i1SetMemoryLong@ML,i1WriteEEPROM_1Byte@data
 39539  016E82  EC23  F006         	call	i1_WriteEEPROM_1Byte	;wreg free
 39540                           
 39541                           ;EEPROM.c: 317: WriteEEPROM_1Byte((AddressFirst + 3), L);
 39542  016E86  0E03               	movlw	3
 39543  016E88  2429               	addwf	i1SetMemoryLong@AddressFirst,w,c
 39544  016E8A  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 39545  016E8C  6A02               	clrf	i1WriteEEPROM_1Byte@address+1,c
 39546  016E8E  0E00               	movlw	0
 39547  016E90  2202               	addwfc	i1WriteEEPROM_1Byte@address+1,f,c
 39548  016E92  C035  F003         	movff	i1SetMemoryLong@L,i1WriteEEPROM_1Byte@data
 39549  016E96  EC23  F006         	call	i1_WriteEEPROM_1Byte	;wreg free
 39550                           
 39551                           ;EEPROM.c: 320: Test = GetMemoryLong(AddressFirst);
 39552  016E9A  5029               	movf	i1SetMemoryLong@AddressFirst,w,c
 39553  016E9C  ECDA  F0B1         	call	i1_GetMemoryLong
 39554  016EA0  C004  F02E         	movff	?i1_GetMemoryLong,i1SetMemoryLong@Test
 39555  016EA4  C005  F02F         	movff	?i1_GetMemoryLong+1,i1SetMemoryLong@Test+1
 39556  016EA8  C006  F030         	movff	?i1_GetMemoryLong+2,i1SetMemoryLong@Test+2
 39557  016EAC  C007  F031         	movff	?i1_GetMemoryLong+3,i1SetMemoryLong@Test+3
 39558                           
 39559                           ;EEPROM.c: 322: if(Test == Data)
 39560  016EB0  5025               	movf	i1SetMemoryLong@Data,w,c
 39561  016EB2  182E               	xorwf	i1SetMemoryLong@Test,w,c
 39562  016EB4  E10C               	bnz	i1l9229
 39563  016EB6  5026               	movf	i1SetMemoryLong@Data+1,w,c
 39564  016EB8  182F               	xorwf	i1SetMemoryLong@Test+1,w,c
 39565  016EBA  E109               	bnz	i1l9229
 39566  016EBC  5027               	movf	i1SetMemoryLong@Data+2,w,c
 39567  016EBE  1830               	xorwf	i1SetMemoryLong@Test+2,w,c
 39568  016EC0  E106               	bnz	i1l9229
 39569  016EC2  5028               	movf	i1SetMemoryLong@Data+3,w,c
 39570  016EC4  1831               	xorwf	i1SetMemoryLong@Test+3,w,c
 39571  016EC6  A4D8               	btfss	status,2,c
 39572  016EC8  D002               	goto	i1l9229
 39573                           
 39574                           ;EEPROM.c: 323: {
 39575                           ;EEPROM.c: 324: return 1;
 39576  016ECA  0E01               	movlw	1
 39577  016ECC  0012               	return	
 39578  016ECE                     i1l9229:
 39579                           
 39580                           ;EEPROM.c: 325: }
 39581                           ;EEPROM.c: 326: return 0;
 39582  016ECE  0E00               	movlw	0
 39583  016ED0  0012               	return	
 39584  016ED2  0012               	return		;funcret
 39585  016ED4                     __end_ofi1_SetMemoryLong:
 39586                           	opt stack 0
 39587                           pclatu	equ	0xFFB
 39588                           pclath	equ	0xFFA
 39589                           tblptru	equ	0xFF8
 39590                           tblptrh	equ	0xFF7
 39591                           tblptrl	equ	0xFF6
 39592                           tablat	equ	0xFF5
 39593                           prodh	equ	0xFF4
 39594                           prodl	equ	0xFF3
 39595                           intcon	equ	0xFF2
 39596                           intcon2	equ	0xFF1
 39597                           indf0	equ	0xFEF
 39598                           postinc0	equ	0xFEE
 39599                           plusw0	equ	0xFEB
 39600                           fsr0h	equ	0xFEA
 39601                           fsr0l	equ	0xFE9
 39602                           wreg	equ	0xFE8
 39603                           indf1	equ	0xFE7
 39604                           postdec1	equ	0xFE5
 39605                           fsr1h	equ	0xFE2
 39606                           fsr1l	equ	0xFE1
 39607                           bsr	equ	0xFE0
 39608                           indf2	equ	0xFDF
 39609                           postinc2	equ	0xFDE
 39610                           postdec2	equ	0xFDD
 39611                           plusw2	equ	0xFDB
 39612                           fsr2h	equ	0xFDA
 39613                           fsr2l	equ	0xFD9
 39614                           status	equ	0xFD8
 39615                           
 39616 ;; *************** function i1_GetMemoryLong *****************
 39617 ;; Defined at:
 39618 ;;		line 277 in file "EEPROM.c"
 39619 ;; Parameters:    Size  Location     Type
 39620 ;;  AddressFirst    1    wreg     unsigned char 
 39621 ;; Auto vars:     Size  Location     Type
 39622 ;;  AddressFirst    1   35[COMRAM] unsigned char 
 39623 ;;  GetMemoryLon    4   27[COMRAM] unsigned long 
 39624 ;;  GetMemoryLon    1   34[COMRAM] unsigned char 
 39625 ;;  GetMemoryLon    1   33[COMRAM] unsigned char 
 39626 ;;  GetMemoryLon    1   32[COMRAM] unsigned char 
 39627 ;;  GetMemoryLon    1   31[COMRAM] unsigned char 
 39628 ;; Return value:  Size  Location     Type
 39629 ;;                  4    3[COMRAM] unsigned long 
 39630 ;; Registers used:
 39631 ;;		wreg, status,2, status,0, cstack
 39632 ;; Tracked objects:
 39633 ;;		On entry : 0/0
 39634 ;;		On exit  : 0/0
 39635 ;;		Unchanged: 0/0
 39636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39638 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39639 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39640 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39641 ;;Total ram usage:       33 bytes
 39642 ;; Hardware stack levels used:    1
 39643 ;; Hardware stack levels required when called:    2
 39644 ;; This function calls:
 39645 ;;		i1_ReadEEPROM_1Byte
 39646 ;; This function is called by:
 39647 ;;		i1_SetMemoryLong
 39648 ;; This function uses a non-reentrant model
 39649 ;;
 39650                           
 39651                           	psect	text128
 39652  0163B4                     __ptext128:
 39653                           	opt stack 0
 39654  0163B4                     i1_GetMemoryLong:
 39655                           	opt stack 18
 39656                           
 39657                           ;incstack = 0
 39658                           ;i1GetMemoryLong@AddressFirst stored from wreg
 39659  0163B4  6E24               	movwf	i1GetMemoryLong@AddressFirst,c
 39660                           
 39661                           ;EEPROM.c: 279: unsigned char H;
 39662                           ;EEPROM.c: 280: unsigned char MH;
 39663                           ;EEPROM.c: 281: unsigned char ML;
 39664                           ;EEPROM.c: 282: unsigned char L;
 39665                           ;EEPROM.c: 283: unsigned long temp =0;
 39666  0163B6  0E00               	movlw	0
 39667  0163B8  6E1C               	movwf	i1GetMemoryLong@temp,c
 39668  0163BA  0E00               	movlw	0
 39669  0163BC  6E1D               	movwf	i1GetMemoryLong@temp+1,c
 39670  0163BE  0E00               	movlw	0
 39671  0163C0  6E1E               	movwf	i1GetMemoryLong@temp+2,c
 39672  0163C2  0E00               	movlw	0
 39673  0163C4  6E1F               	movwf	i1GetMemoryLong@temp+3,c
 39674                           
 39675                           ;EEPROM.c: 285: H = ReadEEPROM_1Byte(AddressFirst);
 39676  0163C6  C024  F001         	movff	i1GetMemoryLong@AddressFirst,i1ReadEEPROM_1Byte@address
 39677  0163CA  6A02               	clrf	i1ReadEEPROM_1Byte@address+1,c
 39678  0163CC  ECC0  F006         	call	i1_ReadEEPROM_1Byte	;wreg free
 39679  0163D0  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 39680  0163D2  6E20               	movwf	i1GetMemoryLong@H,c
 39681                           
 39682                           ;EEPROM.c: 286: MH = ReadEEPROM_1Byte(AddressFirst + 1);
 39683  0163D4  0E01               	movlw	1
 39684  0163D6  2424               	addwf	i1GetMemoryLong@AddressFirst,w,c
 39685  0163D8  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 39686  0163DA  6A02               	clrf	i1ReadEEPROM_1Byte@address+1,c
 39687  0163DC  0E00               	movlw	0
 39688  0163DE  2202               	addwfc	i1ReadEEPROM_1Byte@address+1,f,c
 39689  0163E0  ECC0  F006         	call	i1_ReadEEPROM_1Byte	;wreg free
 39690  0163E4  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 39691  0163E6  6E21               	movwf	i1GetMemoryLong@MH,c
 39692                           
 39693                           ;EEPROM.c: 287: ML = ReadEEPROM_1Byte(AddressFirst + 2);
 39694  0163E8  0E02               	movlw	2
 39695  0163EA  2424               	addwf	i1GetMemoryLong@AddressFirst,w,c
 39696  0163EC  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 39697  0163EE  6A02               	clrf	i1ReadEEPROM_1Byte@address+1,c
 39698  0163F0  0E00               	movlw	0
 39699  0163F2  2202               	addwfc	i1ReadEEPROM_1Byte@address+1,f,c
 39700  0163F4  ECC0  F006         	call	i1_ReadEEPROM_1Byte	;wreg free
 39701  0163F8  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 39702  0163FA  6E22               	movwf	i1GetMemoryLong@ML,c
 39703                           
 39704                           ;EEPROM.c: 288: L = ReadEEPROM_1Byte(AddressFirst + 3);
 39705  0163FC  0E03               	movlw	3
 39706  0163FE  2424               	addwf	i1GetMemoryLong@AddressFirst,w,c
 39707  016400  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 39708  016402  6A02               	clrf	i1ReadEEPROM_1Byte@address+1,c
 39709  016404  0E00               	movlw	0
 39710  016406  2202               	addwfc	i1ReadEEPROM_1Byte@address+1,f,c
 39711  016408  ECC0  F006         	call	i1_ReadEEPROM_1Byte	;wreg free
 39712  01640C  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 39713  01640E  6E23               	movwf	i1GetMemoryLong@L,c
 39714                           
 39715                           ;EEPROM.c: 290: temp = (((unsigned long) H << 24) + ((unsigned long)MH << 16)
 39716                           ;EEPROM.c: 291: + ((unsigned long)ML << 8) + (unsigned long)L);
 39717  016410  C022  F008         	movff	i1GetMemoryLong@ML,??i1_GetMemoryLong
 39718  016414  6A09               	clrf	(??i1_GetMemoryLong+1)& (0+255),c
 39719  016416  6A0A               	clrf	(??i1_GetMemoryLong+2)& (0+255),c
 39720  016418  6A0B               	clrf	(??i1_GetMemoryLong+3)& (0+255),c
 39721  01641A  C00A  F00B         	movff	??i1_GetMemoryLong+2,??i1_GetMemoryLong+3
 39722  01641E  C009  F00A         	movff	??i1_GetMemoryLong+1,??i1_GetMemoryLong+2
 39723  016422  C008  F009         	movff	??i1_GetMemoryLong,??i1_GetMemoryLong+1
 39724  016426  6A08               	clrf	??i1_GetMemoryLong,c
 39725  016428  C021  F00C         	movff	i1GetMemoryLong@MH,??i1_GetMemoryLong+4
 39726  01642C  6A0D               	clrf	(??i1_GetMemoryLong+5)& (0+255),c
 39727  01642E  6A0E               	clrf	(??i1_GetMemoryLong+6)& (0+255),c
 39728  016430  6A0F               	clrf	(??i1_GetMemoryLong+7)& (0+255),c
 39729  016432  C00D  F00F         	movff	??i1_GetMemoryLong+5,??i1_GetMemoryLong+7
 39730  016436  C00C  F00E         	movff	??i1_GetMemoryLong+4,??i1_GetMemoryLong+6
 39731  01643A  6A0D               	clrf	??i1_GetMemoryLong+5,c
 39732  01643C  6A0C               	clrf	??i1_GetMemoryLong+4,c
 39733  01643E  C020  F010         	movff	i1GetMemoryLong@H,??i1_GetMemoryLong+8
 39734  016442  6A11               	clrf	(??i1_GetMemoryLong+9)& (0+255),c
 39735  016444  6A12               	clrf	(??i1_GetMemoryLong+10)& (0+255),c
 39736  016446  6A13               	clrf	(??i1_GetMemoryLong+11)& (0+255),c
 39737  016448  C010  F013         	movff	??i1_GetMemoryLong+8,??i1_GetMemoryLong+11
 39738  01644C  6A12               	clrf	??i1_GetMemoryLong+10,c
 39739  01644E  6A11               	clrf	??i1_GetMemoryLong+9,c
 39740  016450  6A10               	clrf	??i1_GetMemoryLong+8,c
 39741  016452  500C               	movf	??i1_GetMemoryLong+4,w,c
 39742  016454  2410               	addwf	??i1_GetMemoryLong+8,w,c
 39743  016456  6E14               	movwf	(??i1_GetMemoryLong+12)& (0+255),c
 39744  016458  500D               	movf	??i1_GetMemoryLong+5,w,c
 39745  01645A  2011               	addwfc	??i1_GetMemoryLong+9,w,c
 39746  01645C  6E15               	movwf	(??i1_GetMemoryLong+13)& (0+255),c
 39747  01645E  500E               	movf	??i1_GetMemoryLong+6,w,c
 39748  016460  2012               	addwfc	??i1_GetMemoryLong+10,w,c
 39749  016462  6E16               	movwf	(??i1_GetMemoryLong+14)& (0+255),c
 39750  016464  500F               	movf	??i1_GetMemoryLong+7,w,c
 39751  016466  2013               	addwfc	??i1_GetMemoryLong+11,w,c
 39752  016468  6E17               	movwf	(??i1_GetMemoryLong+15)& (0+255),c
 39753  01646A  5008               	movf	??i1_GetMemoryLong,w,c
 39754  01646C  2414               	addwf	??i1_GetMemoryLong+12,w,c
 39755  01646E  6E18               	movwf	(??i1_GetMemoryLong+16)& (0+255),c
 39756  016470  5009               	movf	??i1_GetMemoryLong+1,w,c
 39757  016472  2015               	addwfc	??i1_GetMemoryLong+13,w,c
 39758  016474  6E19               	movwf	(??i1_GetMemoryLong+17)& (0+255),c
 39759  016476  500A               	movf	??i1_GetMemoryLong+2,w,c
 39760  016478  2016               	addwfc	??i1_GetMemoryLong+14,w,c
 39761  01647A  6E1A               	movwf	(??i1_GetMemoryLong+18)& (0+255),c
 39762  01647C  500B               	movf	??i1_GetMemoryLong+3,w,c
 39763  01647E  2017               	addwfc	??i1_GetMemoryLong+15,w,c
 39764  016480  6E1B               	movwf	(??i1_GetMemoryLong+19)& (0+255),c
 39765  016482  5023               	movf	i1GetMemoryLong@L,w,c
 39766  016484  2418               	addwf	??i1_GetMemoryLong+16,w,c
 39767  016486  6E1C               	movwf	i1GetMemoryLong@temp,c
 39768  016488  0E00               	movlw	0
 39769  01648A  2019               	addwfc	??i1_GetMemoryLong+17,w,c
 39770  01648C  6E1D               	movwf	i1GetMemoryLong@temp+1,c
 39771  01648E  0E00               	movlw	0
 39772  016490  201A               	addwfc	??i1_GetMemoryLong+18,w,c
 39773  016492  6E1E               	movwf	i1GetMemoryLong@temp+2,c
 39774  016494  0E00               	movlw	0
 39775  016496  201B               	addwfc	??i1_GetMemoryLong+19,w,c
 39776  016498  6E1F               	movwf	i1GetMemoryLong@temp+3,c
 39777                           
 39778                           ;EEPROM.c: 292: return temp;
 39779  01649A  C01C  F004         	movff	i1GetMemoryLong@temp,?i1_GetMemoryLong
 39780  01649E  C01D  F005         	movff	i1GetMemoryLong@temp+1,?i1_GetMemoryLong+1
 39781  0164A2  C01E  F006         	movff	i1GetMemoryLong@temp+2,?i1_GetMemoryLong+2
 39782  0164A6  C01F  F007         	movff	i1GetMemoryLong@temp+3,?i1_GetMemoryLong+3
 39783  0164AA  0012               	return	
 39784  0164AC  0012               	return		;funcret
 39785  0164AE                     __end_ofi1_GetMemoryLong:
 39786                           	opt stack 0
 39787                           pclatu	equ	0xFFB
 39788                           pclath	equ	0xFFA
 39789                           tblptru	equ	0xFF8
 39790                           tblptrh	equ	0xFF7
 39791                           tblptrl	equ	0xFF6
 39792                           tablat	equ	0xFF5
 39793                           prodh	equ	0xFF4
 39794                           prodl	equ	0xFF3
 39795                           intcon	equ	0xFF2
 39796                           intcon2	equ	0xFF1
 39797                           indf0	equ	0xFEF
 39798                           postinc0	equ	0xFEE
 39799                           plusw0	equ	0xFEB
 39800                           fsr0h	equ	0xFEA
 39801                           fsr0l	equ	0xFE9
 39802                           wreg	equ	0xFE8
 39803                           indf1	equ	0xFE7
 39804                           postdec1	equ	0xFE5
 39805                           fsr1h	equ	0xFE2
 39806                           fsr1l	equ	0xFE1
 39807                           bsr	equ	0xFE0
 39808                           indf2	equ	0xFDF
 39809                           postinc2	equ	0xFDE
 39810                           postdec2	equ	0xFDD
 39811                           plusw2	equ	0xFDB
 39812                           fsr2h	equ	0xFDA
 39813                           fsr2l	equ	0xFD9
 39814                           status	equ	0xFD8
 39815                           
 39816 ;; *************** function i1_SetMemoryBaud *****************
 39817 ;; Defined at:
 39818 ;;		line 142 in file "EEPROM.c"
 39819 ;; Parameters:    Size  Location     Type
 39820 ;;  Baud            4   35[COMRAM] unsigned long 
 39821 ;; Auto vars:     Size  Location     Type
 39822 ;;  SetMemoryBau    4   43[COMRAM] unsigned long 
 39823 ;;  SetMemoryBau    1   50[COMRAM] unsigned char 
 39824 ;;  SetMemoryBau    1   49[COMRAM] unsigned char 
 39825 ;;  SetMemoryBau    1   48[COMRAM] unsigned char 
 39826 ;;  SetMemoryBau    1   47[COMRAM] unsigned char 
 39827 ;; Return value:  Size  Location     Type
 39828 ;;                  1    wreg      unsigned char 
 39829 ;; Registers used:
 39830 ;;		wreg, status,2, status,0, cstack
 39831 ;; Tracked objects:
 39832 ;;		On entry : 0/0
 39833 ;;		On exit  : 0/0
 39834 ;;		Unchanged: 0/0
 39835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 39836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39837 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39838 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39839 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 39840 ;;Total ram usage:       16 bytes
 39841 ;; Hardware stack levels used:    1
 39842 ;; Hardware stack levels required when called:    3
 39843 ;; This function calls:
 39844 ;;		i1_GetMemoryBaud
 39845 ;;		i1_WriteEEPROM_1Byte
 39846 ;; This function is called by:
 39847 ;;		i1_SetEEPROM
 39848 ;; This function uses a non-reentrant model
 39849 ;;
 39850                           
 39851                           	psect	text129
 39852  0170F6                     __ptext129:
 39853                           	opt stack 0
 39854  0170F6                     i1_SetMemoryBaud:
 39855                           	opt stack 18
 39856                           
 39857                           ;EEPROM.c: 144: unsigned char BaudTempH;
 39858                           ;EEPROM.c: 145: unsigned char BaudTempMH;
 39859                           ;EEPROM.c: 146: unsigned char BaudTempML;
 39860                           ;EEPROM.c: 147: unsigned char BaudTempL;
 39861                           ;EEPROM.c: 148: unsigned long Test;
 39862                           ;EEPROM.c: 150: BaudTempH = (unsigned char) ((Baud & 0XFF000000) >> 24);
 39863                           
 39864                           ;incstack = 0
 39865  0170F6  0E00               	movlw	0
 39866  0170F8  1424               	andwf	i1SetMemoryBaud@Baud,w,c
 39867  0170FA  6E28               	movwf	??i1_SetMemoryBaud& (0+255),c
 39868  0170FC  0E00               	movlw	0
 39869  0170FE  1425               	andwf	i1SetMemoryBaud@Baud+1,w,c
 39870  017100  6E29               	movwf	(??i1_SetMemoryBaud+1)& (0+255),c
 39871  017102  0E00               	movlw	0
 39872  017104  1426               	andwf	i1SetMemoryBaud@Baud+2,w,c
 39873  017106  6E2A               	movwf	(??i1_SetMemoryBaud+2)& (0+255),c
 39874  017108  0EFF               	movlw	255
 39875  01710A  1427               	andwf	i1SetMemoryBaud@Baud+3,w,c
 39876  01710C  6E2B               	movwf	(??i1_SetMemoryBaud+3)& (0+255),c
 39877  01710E  0E19               	movlw	25
 39878  017110  D005               	goto	i1u1050_20
 39879  017112                     i1u1050_25:
 39880  017112  90D8               	bcf	status,0,c
 39881  017114  322B               	rrcf	??i1_SetMemoryBaud+3,f,c
 39882  017116  322A               	rrcf	??i1_SetMemoryBaud+2,f,c
 39883  017118  3229               	rrcf	??i1_SetMemoryBaud+1,f,c
 39884  01711A  3228               	rrcf	??i1_SetMemoryBaud,f,c
 39885  01711C                     i1u1050_20:
 39886  01711C  2EE8               	decfsz	wreg,f,c
 39887  01711E  D7F9               	goto	i1u1050_25
 39888  017120  5028               	movf	??i1_SetMemoryBaud,w,c
 39889  017122  6E30               	movwf	i1SetMemoryBaud@BaudTempH,c
 39890                           
 39891                           ;EEPROM.c: 151: BaudTempMH = (unsigned char) ((Baud & 0X00FF0000) >> 16);
 39892  017124  C026  F031         	movff	i1SetMemoryBaud@Baud+2,i1SetMemoryBaud@BaudTempMH
 39893                           
 39894                           ;EEPROM.c: 152: BaudTempML = (unsigned char) ((Baud & 0X0000FF00) >> 8);
 39895  017128  C025  F032         	movff	i1SetMemoryBaud@Baud+1,i1SetMemoryBaud@BaudTempML
 39896                           
 39897                           ;EEPROM.c: 153: BaudTempL = (unsigned char) (Baud & 0X000000FF);
 39898  01712C  C024  F033         	movff	i1SetMemoryBaud@Baud,i1SetMemoryBaud@BaudTempL
 39899                           
 39900                           ;EEPROM.c: 156: WriteEEPROM_1Byte(0, BaudTempH);
 39901  017130  0E00               	movlw	0
 39902  017132  6E02               	movwf	i1WriteEEPROM_1Byte@address+1,c
 39903  017134  0E00               	movlw	0
 39904  017136  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 39905  017138  C030  F003         	movff	i1SetMemoryBaud@BaudTempH,i1WriteEEPROM_1Byte@data
 39906  01713C  EC23  F006         	call	i1_WriteEEPROM_1Byte	;wreg free
 39907                           
 39908                           ;EEPROM.c: 157: WriteEEPROM_1Byte(1, BaudTempMH);
 39909  017140  0E00               	movlw	0
 39910  017142  6E02               	movwf	i1WriteEEPROM_1Byte@address+1,c
 39911  017144  0E01               	movlw	1
 39912  017146  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 39913  017148  C031  F003         	movff	i1SetMemoryBaud@BaudTempMH,i1WriteEEPROM_1Byte@data
 39914  01714C  EC23  F006         	call	i1_WriteEEPROM_1Byte	;wreg free
 39915                           
 39916                           ;EEPROM.c: 158: WriteEEPROM_1Byte(2, BaudTempML);
 39917  017150  0E00               	movlw	0
 39918  017152  6E02               	movwf	i1WriteEEPROM_1Byte@address+1,c
 39919  017154  0E02               	movlw	2
 39920  017156  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 39921  017158  C032  F003         	movff	i1SetMemoryBaud@BaudTempML,i1WriteEEPROM_1Byte@data
 39922  01715C  EC23  F006         	call	i1_WriteEEPROM_1Byte	;wreg free
 39923                           
 39924                           ;EEPROM.c: 159: WriteEEPROM_1Byte(3, BaudTempL);
 39925  017160  0E00               	movlw	0
 39926  017162  6E02               	movwf	i1WriteEEPROM_1Byte@address+1,c
 39927  017164  0E03               	movlw	3
 39928  017166  6E01               	movwf	i1WriteEEPROM_1Byte@address,c
 39929  017168  C033  F003         	movff	i1SetMemoryBaud@BaudTempL,i1WriteEEPROM_1Byte@data
 39930  01716C  EC23  F006         	call	i1_WriteEEPROM_1Byte	;wreg free
 39931                           
 39932                           ;EEPROM.c: 162: Test = GetMemoryBaud();
 39933  017170  EC48  F0B3         	call	i1_GetMemoryBaud	;wreg free
 39934  017174  C004  F02C         	movff	?i1_GetMemoryBaud,i1SetMemoryBaud@Test
 39935  017178  C005  F02D         	movff	?i1_GetMemoryBaud+1,i1SetMemoryBaud@Test+1
 39936  01717C  C006  F02E         	movff	?i1_GetMemoryBaud+2,i1SetMemoryBaud@Test+2
 39937  017180  C007  F02F         	movff	?i1_GetMemoryBaud+3,i1SetMemoryBaud@Test+3
 39938                           
 39939                           ;EEPROM.c: 164: if(Test == Baud)
 39940  017184  5024               	movf	i1SetMemoryBaud@Baud,w,c
 39941  017186  182C               	xorwf	i1SetMemoryBaud@Test,w,c
 39942  017188  E10C               	bnz	i1l9189
 39943  01718A  5025               	movf	i1SetMemoryBaud@Baud+1,w,c
 39944  01718C  182D               	xorwf	i1SetMemoryBaud@Test+1,w,c
 39945  01718E  E109               	bnz	i1l9189
 39946  017190  5026               	movf	i1SetMemoryBaud@Baud+2,w,c
 39947  017192  182E               	xorwf	i1SetMemoryBaud@Test+2,w,c
 39948  017194  E106               	bnz	i1l9189
 39949  017196  5027               	movf	i1SetMemoryBaud@Baud+3,w,c
 39950  017198  182F               	xorwf	i1SetMemoryBaud@Test+3,w,c
 39951  01719A  A4D8               	btfss	status,2,c
 39952  01719C  D002               	goto	i1l9189
 39953                           
 39954                           ;EEPROM.c: 165: {
 39955                           ;EEPROM.c: 166: return 1;
 39956  01719E  0E01               	movlw	1
 39957  0171A0  0012               	return	
 39958  0171A2                     i1l9189:
 39959                           
 39960                           ;EEPROM.c: 167: }
 39961                           ;EEPROM.c: 168: return 0;
 39962  0171A2  0E00               	movlw	0
 39963  0171A4  0012               	return	
 39964  0171A6  0012               	return		;funcret
 39965  0171A8                     __end_ofi1_SetMemoryBaud:
 39966                           	opt stack 0
 39967                           pclatu	equ	0xFFB
 39968                           pclath	equ	0xFFA
 39969                           tblptru	equ	0xFF8
 39970                           tblptrh	equ	0xFF7
 39971                           tblptrl	equ	0xFF6
 39972                           tablat	equ	0xFF5
 39973                           prodh	equ	0xFF4
 39974                           prodl	equ	0xFF3
 39975                           intcon	equ	0xFF2
 39976                           intcon2	equ	0xFF1
 39977                           indf0	equ	0xFEF
 39978                           postinc0	equ	0xFEE
 39979                           plusw0	equ	0xFEB
 39980                           fsr0h	equ	0xFEA
 39981                           fsr0l	equ	0xFE9
 39982                           wreg	equ	0xFE8
 39983                           indf1	equ	0xFE7
 39984                           postdec1	equ	0xFE5
 39985                           fsr1h	equ	0xFE2
 39986                           fsr1l	equ	0xFE1
 39987                           bsr	equ	0xFE0
 39988                           indf2	equ	0xFDF
 39989                           postinc2	equ	0xFDE
 39990                           postdec2	equ	0xFDD
 39991                           plusw2	equ	0xFDB
 39992                           fsr2h	equ	0xFDA
 39993                           fsr2l	equ	0xFD9
 39994                           status	equ	0xFD8
 39995                           
 39996 ;; *************** function i1_WriteEEPROM_1Byte *****************
 39997 ;; Defined at:
 39998 ;;		line 94 in file "EEPROM.c"
 39999 ;; Parameters:    Size  Location     Type
 40000 ;;  address         2    0[COMRAM] unsigned int 
 40001 ;;  data            1    2[COMRAM] unsigned char 
 40002 ;; Auto vars:     Size  Location     Type
 40003 ;;  WriteEEPROM_    1    3[COMRAM] unsigned char 
 40004 ;; Return value:  Size  Location     Type
 40005 ;;		None               void
 40006 ;; Registers used:
 40007 ;;		wreg, status,2, status,0, cstack
 40008 ;; Tracked objects:
 40009 ;;		On entry : 0/0
 40010 ;;		On exit  : 0/0
 40011 ;;		Unchanged: 0/0
 40012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 40013 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40017 ;;Total ram usage:        4 bytes
 40018 ;; Hardware stack levels used:    1
 40019 ;; Hardware stack levels required when called:    2
 40020 ;; This function calls:
 40021 ;;		i1_EEPROM_UNLOCK
 40022 ;; This function is called by:
 40023 ;;		i1_SetMemoryBaud
 40024 ;;		i1_SetMemoryParity
 40025 ;;		i1_SetMemoryLong
 40026 ;; This function uses a non-reentrant model
 40027 ;;
 40028                           
 40029                           	psect	text130
 40030  000C46                     __ptext130:
 40031                           	opt stack 0
 40032  000C46                     i1_WriteEEPROM_1Byte:
 40033                           	opt stack 18
 40034                           
 40035                           ;EEPROM.c: 96: unsigned char GIEstatus = INTCONbits.GIE;
 40036                           
 40037                           ;incstack = 0
 40038  000C46  0E00               	movlw	0
 40039  000C48  BEF2               	btfsc	intcon,7,c	;volatile
 40040  000C4A  0E01               	movlw	1
 40041  000C4C  6E04               	movwf	i1WriteEEPROM_1Byte@GIEstatus,c
 40042                           
 40043                           ;EEPROM.c: 97: EEADRH = (unsigned char)((address & 0x300) >> 8);
 40044  000C4E  5002               	movf	i1WriteEEPROM_1Byte@address+1,w,c
 40045  000C50  0B03               	andlw	3
 40046  000C52  6EAA               	movwf	4010,c	;volatile
 40047                           
 40048                           ;EEPROM.c: 98: EEADR = (unsigned char)(address & 0xFF);
 40049  000C54  C001  FFA9         	movff	i1WriteEEPROM_1Byte@address,4009	;volatile
 40050                           
 40051                           ;EEPROM.c: 99: EEDATA = data;
 40052  000C58  C003  FFA8         	movff	i1WriteEEPROM_1Byte@data,4008	;volatile
 40053                           
 40054                           ;EEPROM.c: 100: EECON1bits.EEPGD = 0;
 40055  000C5C  9EA6               	bcf	4006,7,c	;volatile
 40056                           
 40057                           ;EEPROM.c: 101: EECON1bits.CFGS = 0;
 40058  000C5E  9CA6               	bcf	4006,6,c	;volatile
 40059                           
 40060                           ;EEPROM.c: 102: EECON1bits.WREN =1;
 40061  000C60  84A6               	bsf	4006,2,c	;volatile
 40062                           
 40063                           ;EEPROM.c: 103: INTCONbits.GIE =0;
 40064  000C62  9EF2               	bcf	intcon,7,c	;volatile
 40065                           
 40066                           ;EEPROM.c: 104: EEPROM_UNLOCK();
 40067  000C64  EC3F  F008         	call	i1_EEPROM_UNLOCK	;wreg free
 40068                           
 40069                           ;EEPROM.c: 105: EECON1bits.WR =1;
 40070  000C68  82A6               	bsf	4006,1,c	;volatile
 40071                           
 40072                           ;EEPROM.c: 106: while(EECON1bits.WR);
 40073  000C6A  D000               	goto	i1l1586
 40074  000C6C                     i1l1586:
 40075  000C6C  B2A6               	btfsc	4006,1,c	;volatile
 40076  000C6E  D7FE               	goto	i1l1586
 40077                           
 40078                           ;EEPROM.c: 107: EECON1bits.WREN =0;
 40079  000C70  94A6               	bcf	4006,2,c	;volatile
 40080                           
 40081                           ;EEPROM.c: 108: if(GIEstatus)
 40082  000C72  5004               	movf	i1WriteEEPROM_1Byte@GIEstatus,w,c
 40083  000C74  B4D8               	btfsc	status,2,c
 40084  000C76  0012               	return	
 40085                           
 40086                           ;EEPROM.c: 109: {
 40087                           ;EEPROM.c: 110: INTCONbits.GIE =1;
 40088  000C78  8EF2               	bsf	intcon,7,c	;volatile
 40089  000C7A  0012               	return	
 40090  000C7C  0012               	return		;funcret
 40091  000C7E                     __end_ofi1_WriteEEPROM_1Byte:
 40092                           	opt stack 0
 40093                           pclatu	equ	0xFFB
 40094                           pclath	equ	0xFFA
 40095                           tblptru	equ	0xFF8
 40096                           tblptrh	equ	0xFF7
 40097                           tblptrl	equ	0xFF6
 40098                           tablat	equ	0xFF5
 40099                           prodh	equ	0xFF4
 40100                           prodl	equ	0xFF3
 40101                           intcon	equ	0xFF2
 40102                           intcon2	equ	0xFF1
 40103                           indf0	equ	0xFEF
 40104                           postinc0	equ	0xFEE
 40105                           plusw0	equ	0xFEB
 40106                           fsr0h	equ	0xFEA
 40107                           fsr0l	equ	0xFE9
 40108                           wreg	equ	0xFE8
 40109                           indf1	equ	0xFE7
 40110                           postdec1	equ	0xFE5
 40111                           fsr1h	equ	0xFE2
 40112                           fsr1l	equ	0xFE1
 40113                           bsr	equ	0xFE0
 40114                           indf2	equ	0xFDF
 40115                           postinc2	equ	0xFDE
 40116                           postdec2	equ	0xFDD
 40117                           plusw2	equ	0xFDB
 40118                           fsr2h	equ	0xFDA
 40119                           fsr2l	equ	0xFD9
 40120                           status	equ	0xFD8
 40121                           
 40122 ;; *************** function i1_EEPROM_UNLOCK *****************
 40123 ;; Defined at:
 40124 ;;		line 79 in file "EEPROM.c"
 40125 ;; Parameters:    Size  Location     Type
 40126 ;;		None
 40127 ;; Auto vars:     Size  Location     Type
 40128 ;;		None
 40129 ;; Return value:  Size  Location     Type
 40130 ;;		None               void
 40131 ;; Registers used:
 40132 ;;		wreg, status,2
 40133 ;; Tracked objects:
 40134 ;;		On entry : 0/0
 40135 ;;		On exit  : 0/0
 40136 ;;		Unchanged: 0/0
 40137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 40138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40142 ;;Total ram usage:        0 bytes
 40143 ;; Hardware stack levels used:    1
 40144 ;; Hardware stack levels required when called:    1
 40145 ;; This function calls:
 40146 ;;		Nothing
 40147 ;; This function is called by:
 40148 ;;		i1_WriteEEPROM_1Byte
 40149 ;; This function uses a non-reentrant model
 40150 ;;
 40151                           
 40152                           	psect	text131
 40153  00107E                     __ptext131:
 40154                           	opt stack 0
 40155  00107E                     i1_EEPROM_UNLOCK:
 40156                           	opt stack 18
 40157                           
 40158                           ;EEPROM.c: 81: EECON2 = 0x55;
 40159                           
 40160                           ;incstack = 0
 40161  00107E  0E55               	movlw	85
 40162  001080  6EA7               	movwf	4007,c	;volatile
 40163                           
 40164                           ;EEPROM.c: 82: EECON2 = 0xAA;
 40165  001082  0EAA               	movlw	170
 40166  001084  6EA7               	movwf	4007,c	;volatile
 40167                           
 40168                           ;EEPROM.c: 83: EECON1bits.WR =1;
 40169  001086  82A6               	bsf	4006,1,c	;volatile
 40170                           
 40171                           ;EEPROM.c: 84: while(EECON1bits.WR);
 40172  001088  D000               	goto	i1l1580
 40173  00108A                     i1l1580:
 40174  00108A  B2A6               	btfsc	4006,1,c	;volatile
 40175  00108C  D7FE               	goto	i1l1580
 40176                           
 40177                           ;EEPROM.c: 85: __nop();
 40178  00108E  F000               	nop	
 40179                           
 40180                           ;EEPROM.c: 86: __nop();
 40181  001090  F000               	nop	
 40182  001092  0012               	return		;funcret
 40183  001094                     __end_ofi1_EEPROM_UNLOCK:
 40184                           	opt stack 0
 40185                           pclatu	equ	0xFFB
 40186                           pclath	equ	0xFFA
 40187                           tblptru	equ	0xFF8
 40188                           tblptrh	equ	0xFF7
 40189                           tblptrl	equ	0xFF6
 40190                           tablat	equ	0xFF5
 40191                           prodh	equ	0xFF4
 40192                           prodl	equ	0xFF3
 40193                           intcon	equ	0xFF2
 40194                           intcon2	equ	0xFF1
 40195                           indf0	equ	0xFEF
 40196                           postinc0	equ	0xFEE
 40197                           plusw0	equ	0xFEB
 40198                           fsr0h	equ	0xFEA
 40199                           fsr0l	equ	0xFE9
 40200                           wreg	equ	0xFE8
 40201                           indf1	equ	0xFE7
 40202                           postdec1	equ	0xFE5
 40203                           fsr1h	equ	0xFE2
 40204                           fsr1l	equ	0xFE1
 40205                           bsr	equ	0xFE0
 40206                           indf2	equ	0xFDF
 40207                           postinc2	equ	0xFDE
 40208                           postdec2	equ	0xFDD
 40209                           plusw2	equ	0xFDB
 40210                           fsr2h	equ	0xFDA
 40211                           fsr2l	equ	0xFD9
 40212                           status	equ	0xFD8
 40213                           
 40214 ;; *************** function i1_GetMemoryBaud *****************
 40215 ;; Defined at:
 40216 ;;		line 119 in file "EEPROM.c"
 40217 ;; Parameters:    Size  Location     Type
 40218 ;;		None
 40219 ;; Auto vars:     Size  Location     Type
 40220 ;;  GetMemoryBau    4   27[COMRAM] unsigned long 
 40221 ;;  GetMemoryBau    1   34[COMRAM] unsigned char 
 40222 ;;  GetMemoryBau    1   33[COMRAM] unsigned char 
 40223 ;;  GetMemoryBau    1   32[COMRAM] unsigned char 
 40224 ;;  GetMemoryBau    1   31[COMRAM] unsigned char 
 40225 ;; Return value:  Size  Location     Type
 40226 ;;                  4    3[COMRAM] unsigned long 
 40227 ;; Registers used:
 40228 ;;		wreg, status,2, status,0, cstack
 40229 ;; Tracked objects:
 40230 ;;		On entry : 0/0
 40231 ;;		On exit  : 0/0
 40232 ;;		Unchanged: 0/0
 40233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 40234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40235 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40236 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40237 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40238 ;;Total ram usage:       32 bytes
 40239 ;; Hardware stack levels used:    1
 40240 ;; Hardware stack levels required when called:    2
 40241 ;; This function calls:
 40242 ;;		i1_ReadEEPROM_1Byte
 40243 ;; This function is called by:
 40244 ;;		i1_SetMemoryBaud
 40245 ;; This function uses a non-reentrant model
 40246 ;;
 40247                           
 40248                           	psect	text132
 40249  016690                     __ptext132:
 40250                           	opt stack 0
 40251  016690                     i1_GetMemoryBaud:
 40252                           	opt stack 18
 40253                           
 40254                           ;EEPROM.c: 121: unsigned char BaudTempH;
 40255                           ;EEPROM.c: 122: unsigned char BaudTempMH;
 40256                           ;EEPROM.c: 123: unsigned char BaudTempML;
 40257                           ;EEPROM.c: 124: unsigned char BaudTempL;
 40258                           ;EEPROM.c: 125: unsigned long baud =0;
 40259                           
 40260                           ;incstack = 0
 40261  016690  0E00               	movlw	0
 40262  016692  6E1C               	movwf	i1GetMemoryBaud@baud,c
 40263  016694  0E00               	movlw	0
 40264  016696  6E1D               	movwf	i1GetMemoryBaud@baud+1,c
 40265  016698  0E00               	movlw	0
 40266  01669A  6E1E               	movwf	i1GetMemoryBaud@baud+2,c
 40267  01669C  0E00               	movlw	0
 40268  01669E  6E1F               	movwf	i1GetMemoryBaud@baud+3,c
 40269                           
 40270                           ;EEPROM.c: 127: BaudTempH = ReadEEPROM_1Byte(0);
 40271  0166A0  0E00               	movlw	0
 40272  0166A2  6E02               	movwf	i1ReadEEPROM_1Byte@address+1,c
 40273  0166A4  0E00               	movlw	0
 40274  0166A6  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 40275  0166A8  ECC0  F006         	call	i1_ReadEEPROM_1Byte	;wreg free
 40276  0166AC  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 40277  0166AE  6E20               	movwf	i1GetMemoryBaud@BaudTempH,c
 40278                           
 40279                           ;EEPROM.c: 128: BaudTempMH = ReadEEPROM_1Byte(1);
 40280  0166B0  0E00               	movlw	0
 40281  0166B2  6E02               	movwf	i1ReadEEPROM_1Byte@address+1,c
 40282  0166B4  0E01               	movlw	1
 40283  0166B6  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 40284  0166B8  ECC0  F006         	call	i1_ReadEEPROM_1Byte	;wreg free
 40285  0166BC  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 40286  0166BE  6E21               	movwf	i1GetMemoryBaud@BaudTempMH,c
 40287                           
 40288                           ;EEPROM.c: 129: BaudTempML = ReadEEPROM_1Byte(2);
 40289  0166C0  0E00               	movlw	0
 40290  0166C2  6E02               	movwf	i1ReadEEPROM_1Byte@address+1,c
 40291  0166C4  0E02               	movlw	2
 40292  0166C6  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 40293  0166C8  ECC0  F006         	call	i1_ReadEEPROM_1Byte	;wreg free
 40294  0166CC  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 40295  0166CE  6E22               	movwf	i1GetMemoryBaud@BaudTempML,c
 40296                           
 40297                           ;EEPROM.c: 130: BaudTempL = ReadEEPROM_1Byte(3);
 40298  0166D0  0E00               	movlw	0
 40299  0166D2  6E02               	movwf	i1ReadEEPROM_1Byte@address+1,c
 40300  0166D4  0E03               	movlw	3
 40301  0166D6  6E01               	movwf	i1ReadEEPROM_1Byte@address,c
 40302  0166D8  ECC0  F006         	call	i1_ReadEEPROM_1Byte	;wreg free
 40303  0166DC  5001               	movf	?i1_ReadEEPROM_1Byte,w,c
 40304  0166DE  6E23               	movwf	i1GetMemoryBaud@BaudTempL,c
 40305                           
 40306                           ;EEPROM.c: 132: baud = (((unsigned long) BaudTempH << 24) + ((unsigned long)BaudTempMH <
      +                          < 16)
 40307                           ;EEPROM.c: 133: + ((unsigned long)BaudTempML << 8) + (unsigned long)BaudTempL);
 40308  0166E0  C022  F008         	movff	i1GetMemoryBaud@BaudTempML,??i1_GetMemoryBaud
 40309  0166E4  6A09               	clrf	(??i1_GetMemoryBaud+1)& (0+255),c
 40310  0166E6  6A0A               	clrf	(??i1_GetMemoryBaud+2)& (0+255),c
 40311  0166E8  6A0B               	clrf	(??i1_GetMemoryBaud+3)& (0+255),c
 40312  0166EA  C00A  F00B         	movff	??i1_GetMemoryBaud+2,??i1_GetMemoryBaud+3
 40313  0166EE  C009  F00A         	movff	??i1_GetMemoryBaud+1,??i1_GetMemoryBaud+2
 40314  0166F2  C008  F009         	movff	??i1_GetMemoryBaud,??i1_GetMemoryBaud+1
 40315  0166F6  6A08               	clrf	??i1_GetMemoryBaud,c
 40316  0166F8  C021  F00C         	movff	i1GetMemoryBaud@BaudTempMH,??i1_GetMemoryBaud+4
 40317  0166FC  6A0D               	clrf	(??i1_GetMemoryBaud+5)& (0+255),c
 40318  0166FE  6A0E               	clrf	(??i1_GetMemoryBaud+6)& (0+255),c
 40319  016700  6A0F               	clrf	(??i1_GetMemoryBaud+7)& (0+255),c
 40320  016702  C00D  F00F         	movff	??i1_GetMemoryBaud+5,??i1_GetMemoryBaud+7
 40321  016706  C00C  F00E         	movff	??i1_GetMemoryBaud+4,??i1_GetMemoryBaud+6
 40322  01670A  6A0D               	clrf	??i1_GetMemoryBaud+5,c
 40323  01670C  6A0C               	clrf	??i1_GetMemoryBaud+4,c
 40324  01670E  C020  F010         	movff	i1GetMemoryBaud@BaudTempH,??i1_GetMemoryBaud+8
 40325  016712  6A11               	clrf	(??i1_GetMemoryBaud+9)& (0+255),c
 40326  016714  6A12               	clrf	(??i1_GetMemoryBaud+10)& (0+255),c
 40327  016716  6A13               	clrf	(??i1_GetMemoryBaud+11)& (0+255),c
 40328  016718  C010  F013         	movff	??i1_GetMemoryBaud+8,??i1_GetMemoryBaud+11
 40329  01671C  6A12               	clrf	??i1_GetMemoryBaud+10,c
 40330  01671E  6A11               	clrf	??i1_GetMemoryBaud+9,c
 40331  016720  6A10               	clrf	??i1_GetMemoryBaud+8,c
 40332  016722  500C               	movf	??i1_GetMemoryBaud+4,w,c
 40333  016724  2410               	addwf	??i1_GetMemoryBaud+8,w,c
 40334  016726  6E14               	movwf	(??i1_GetMemoryBaud+12)& (0+255),c
 40335  016728  500D               	movf	??i1_GetMemoryBaud+5,w,c
 40336  01672A  2011               	addwfc	??i1_GetMemoryBaud+9,w,c
 40337  01672C  6E15               	movwf	(??i1_GetMemoryBaud+13)& (0+255),c
 40338  01672E  500E               	movf	??i1_GetMemoryBaud+6,w,c
 40339  016730  2012               	addwfc	??i1_GetMemoryBaud+10,w,c
 40340  016732  6E16               	movwf	(??i1_GetMemoryBaud+14)& (0+255),c
 40341  016734  500F               	movf	??i1_GetMemoryBaud+7,w,c
 40342  016736  2013               	addwfc	??i1_GetMemoryBaud+11,w,c
 40343  016738  6E17               	movwf	(??i1_GetMemoryBaud+15)& (0+255),c
 40344  01673A  5008               	movf	??i1_GetMemoryBaud,w,c
 40345  01673C  2414               	addwf	??i1_GetMemoryBaud+12,w,c
 40346  01673E  6E18               	movwf	(??i1_GetMemoryBaud+16)& (0+255),c
 40347  016740  5009               	movf	??i1_GetMemoryBaud+1,w,c
 40348  016742  2015               	addwfc	??i1_GetMemoryBaud+13,w,c
 40349  016744  6E19               	movwf	(??i1_GetMemoryBaud+17)& (0+255),c
 40350  016746  500A               	movf	??i1_GetMemoryBaud+2,w,c
 40351  016748  2016               	addwfc	??i1_GetMemoryBaud+14,w,c
 40352  01674A  6E1A               	movwf	(??i1_GetMemoryBaud+18)& (0+255),c
 40353  01674C  500B               	movf	??i1_GetMemoryBaud+3,w,c
 40354  01674E  2017               	addwfc	??i1_GetMemoryBaud+15,w,c
 40355  016750  6E1B               	movwf	(??i1_GetMemoryBaud+19)& (0+255),c
 40356  016752  5023               	movf	i1GetMemoryBaud@BaudTempL,w,c
 40357  016754  2418               	addwf	??i1_GetMemoryBaud+16,w,c
 40358  016756  6E1C               	movwf	i1GetMemoryBaud@baud,c
 40359  016758  0E00               	movlw	0
 40360  01675A  2019               	addwfc	??i1_GetMemoryBaud+17,w,c
 40361  01675C  6E1D               	movwf	i1GetMemoryBaud@baud+1,c
 40362  01675E  0E00               	movlw	0
 40363  016760  201A               	addwfc	??i1_GetMemoryBaud+18,w,c
 40364  016762  6E1E               	movwf	i1GetMemoryBaud@baud+2,c
 40365  016764  0E00               	movlw	0
 40366  016766  201B               	addwfc	??i1_GetMemoryBaud+19,w,c
 40367  016768  6E1F               	movwf	i1GetMemoryBaud@baud+3,c
 40368                           
 40369                           ;EEPROM.c: 134: return baud;
 40370  01676A  C01C  F004         	movff	i1GetMemoryBaud@baud,?i1_GetMemoryBaud
 40371  01676E  C01D  F005         	movff	i1GetMemoryBaud@baud+1,?i1_GetMemoryBaud+1
 40372  016772  C01E  F006         	movff	i1GetMemoryBaud@baud+2,?i1_GetMemoryBaud+2
 40373  016776  C01F  F007         	movff	i1GetMemoryBaud@baud+3,?i1_GetMemoryBaud+3
 40374  01677A  0012               	return	
 40375  01677C  0012               	return		;funcret
 40376  01677E                     __end_ofi1_GetMemoryBaud:
 40377                           	opt stack 0
 40378                           pclatu	equ	0xFFB
 40379                           pclath	equ	0xFFA
 40380                           tblptru	equ	0xFF8
 40381                           tblptrh	equ	0xFF7
 40382                           tblptrl	equ	0xFF6
 40383                           tablat	equ	0xFF5
 40384                           prodh	equ	0xFF4
 40385                           prodl	equ	0xFF3
 40386                           intcon	equ	0xFF2
 40387                           intcon2	equ	0xFF1
 40388                           indf0	equ	0xFEF
 40389                           postinc0	equ	0xFEE
 40390                           plusw0	equ	0xFEB
 40391                           fsr0h	equ	0xFEA
 40392                           fsr0l	equ	0xFE9
 40393                           wreg	equ	0xFE8
 40394                           indf1	equ	0xFE7
 40395                           postdec1	equ	0xFE5
 40396                           fsr1h	equ	0xFE2
 40397                           fsr1l	equ	0xFE1
 40398                           bsr	equ	0xFE0
 40399                           indf2	equ	0xFDF
 40400                           postinc2	equ	0xFDE
 40401                           postdec2	equ	0xFDD
 40402                           plusw2	equ	0xFDB
 40403                           fsr2h	equ	0xFDA
 40404                           fsr2l	equ	0xFD9
 40405                           status	equ	0xFD8
 40406                           
 40407 ;; *************** function i1_ReadEEPROM_1Byte *****************
 40408 ;; Defined at:
 40409 ;;		line 54 in file "EEPROM.c"
 40410 ;; Parameters:    Size  Location     Type
 40411 ;;  address         2    0[COMRAM] unsigned int 
 40412 ;; Auto vars:     Size  Location     Type
 40413 ;;  ReadEEPROM_1    1    2[COMRAM] unsigned char 
 40414 ;; Return value:  Size  Location     Type
 40415 ;;                  2    0[COMRAM] unsigned int 
 40416 ;; Registers used:
 40417 ;;		wreg, status,2, status,0
 40418 ;; Tracked objects:
 40419 ;;		On entry : 0/0
 40420 ;;		On exit  : 0/0
 40421 ;;		Unchanged: 0/0
 40422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 40423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40426 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40427 ;;Total ram usage:        3 bytes
 40428 ;; Hardware stack levels used:    1
 40429 ;; Hardware stack levels required when called:    1
 40430 ;; This function calls:
 40431 ;;		Nothing
 40432 ;; This function is called by:
 40433 ;;		i1_GetMemoryBaud
 40434 ;;		i1_GetMemoryParity
 40435 ;;		i1_GetMemoryLong
 40436 ;; This function uses a non-reentrant model
 40437 ;;
 40438                           
 40439                           	psect	text133
 40440  000D80                     __ptext133:
 40441                           	opt stack 0
 40442  000D80                     i1_ReadEEPROM_1Byte:
 40443                           	opt stack 18
 40444                           
 40445                           ;EEPROM.c: 56: unsigned char GIEstatus = INTCONbits.GIE;
 40446                           
 40447                           ;incstack = 0
 40448  000D80  0E00               	movlw	0
 40449  000D82  BEF2               	btfsc	intcon,7,c	;volatile
 40450  000D84  0E01               	movlw	1
 40451  000D86  6E03               	movwf	i1ReadEEPROM_1Byte@GIEstatus,c
 40452                           
 40453                           ;EEPROM.c: 57: EECON1bits.EEPGD = 0;
 40454  000D88  9EA6               	bcf	4006,7,c	;volatile
 40455                           
 40456                           ;EEPROM.c: 58: EECON1bits.CFGS = 0;
 40457  000D8A  9CA6               	bcf	4006,6,c	;volatile
 40458                           
 40459                           ;EEPROM.c: 59: EEADRH = (unsigned char)((address & 0x300) >> 8);
 40460  000D8C  5002               	movf	i1ReadEEPROM_1Byte@address+1,w,c
 40461  000D8E  0B03               	andlw	3
 40462  000D90  6EAA               	movwf	4010,c	;volatile
 40463                           
 40464                           ;EEPROM.c: 60: EEADR = (unsigned char)(address & 0xFF);
 40465  000D92  C001  FFA9         	movff	i1ReadEEPROM_1Byte@address,4009	;volatile
 40466                           
 40467                           ;EEPROM.c: 61: INTCONbits.GIE =0;
 40468  000D96  9EF2               	bcf	intcon,7,c	;volatile
 40469                           
 40470                           ;EEPROM.c: 62: EECON1bits.RD = 1;
 40471  000D98  80A6               	bsf	4006,0,c	;volatile
 40472                           
 40473                           ;EEPROM.c: 63: while(EECON1bits.RD);
 40474  000D9A  D000               	goto	i1l1573
 40475  000D9C                     i1l1573:
 40476  000D9C  B0A6               	btfsc	4006,0,c	;volatile
 40477  000D9E  D7FE               	goto	i1l1573
 40478                           
 40479                           ;EEPROM.c: 64: __nop();
 40480  000DA0  F000               	nop	
 40481                           
 40482                           ;EEPROM.c: 65: __nop();
 40483  000DA2  F000               	nop	
 40484                           
 40485                           ;EEPROM.c: 66: if(GIEstatus)
 40486  000DA4  5003               	movf	i1ReadEEPROM_1Byte@GIEstatus,w,c
 40487  000DA6  A4D8               	btfss	status,2,c
 40488                           
 40489                           ;EEPROM.c: 67: {
 40490                           ;EEPROM.c: 68: INTCONbits.GIE =1;
 40491  000DA8  8EF2               	bsf	intcon,7,c	;volatile
 40492                           
 40493                           ;EEPROM.c: 69: }
 40494                           ;EEPROM.c: 70: return (EEDATA);
 40495  000DAA  CFA8 F001          	movff	4008,?i1_ReadEEPROM_1Byte	;volatile
 40496  000DAE  6A02               	clrf	?i1_ReadEEPROM_1Byte+1,c
 40497  000DB0  0012               	return		;funcret
 40498  000DB2                     __end_ofi1_ReadEEPROM_1Byte:
 40499                           	opt stack 0
 40500                           pclatu	equ	0xFFB
 40501                           pclath	equ	0xFFA
 40502                           tblptru	equ	0xFF8
 40503                           tblptrh	equ	0xFF7
 40504                           tblptrl	equ	0xFF6
 40505                           tablat	equ	0xFF5
 40506                           prodh	equ	0xFF4
 40507                           prodl	equ	0xFF3
 40508                           intcon	equ	0xFF2
 40509                           intcon2	equ	0xFF1
 40510                           indf0	equ	0xFEF
 40511                           postinc0	equ	0xFEE
 40512                           plusw0	equ	0xFEB
 40513                           fsr0h	equ	0xFEA
 40514                           fsr0l	equ	0xFE9
 40515                           wreg	equ	0xFE8
 40516                           indf1	equ	0xFE7
 40517                           postdec1	equ	0xFE5
 40518                           fsr1h	equ	0xFE2
 40519                           fsr1l	equ	0xFE1
 40520                           bsr	equ	0xFE0
 40521                           indf2	equ	0xFDF
 40522                           postinc2	equ	0xFDE
 40523                           postdec2	equ	0xFDD
 40524                           plusw2	equ	0xFDB
 40525                           fsr2h	equ	0xFDA
 40526                           fsr2l	equ	0xFD9
 40527                           status	equ	0xFD8
 40528                           
 40529 ;; *************** function _ReadButton1 *****************
 40530 ;; Defined at:
 40531 ;;		line 64 in file "Button.c"
 40532 ;; Parameters:    Size  Location     Type
 40533 ;;		None
 40534 ;; Auto vars:     Size  Location     Type
 40535 ;;		None
 40536 ;; Return value:  Size  Location     Type
 40537 ;;                  1    wreg      unsigned char 
 40538 ;; Registers used:
 40539 ;;		wreg
 40540 ;; Tracked objects:
 40541 ;;		On entry : 0/0
 40542 ;;		On exit  : 0/0
 40543 ;;		Unchanged: 0/0
 40544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 40545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40549 ;;Total ram usage:        0 bytes
 40550 ;; Hardware stack levels used:    1
 40551 ;; Hardware stack levels required when called:    1
 40552 ;; This function calls:
 40553 ;;		Nothing
 40554 ;; This function is called by:
 40555 ;;		_UseIRCode
 40556 ;; This function uses a non-reentrant model
 40557 ;;
 40558                           
 40559                           	psect	text134
 40560  001118                     __ptext134:
 40561                           	opt stack 0
 40562  001118                     _ReadButton1:
 40563                           	opt stack 21
 40564                           
 40565                           ;Button.c: 67: if((PORTB & 0b00000001) == 0b00000001)
 40566                           
 40567                           ;incstack = 0
 40568  001118  A081               	btfss	3969,0,c	;volatile
 40569  00111A  D002               	goto	i1l10199
 40570                           
 40571                           ;Button.c: 68: {
 40572                           ;Button.c: 69: return (1);
 40573  00111C  0E01               	movlw	1
 40574                           
 40575                           ;Button.c: 70: }
 40576  00111E  0012               	return	
 40577  001120                     i1l10199:
 40578                           
 40579                           ;Button.c: 71: else
 40580                           ;Button.c: 72: {
 40581                           ;Button.c: 73: return 0;
 40582  001120  0E00               	movlw	0
 40583  001122  0012               	return	
 40584  001124  0012               	return		;funcret
 40585  001126                     __end_of_ReadButton1:
 40586                           	opt stack 0
 40587                           pclatu	equ	0xFFB
 40588                           pclath	equ	0xFFA
 40589                           tblptru	equ	0xFF8
 40590                           tblptrh	equ	0xFF7
 40591                           tblptrl	equ	0xFF6
 40592                           tablat	equ	0xFF5
 40593                           prodh	equ	0xFF4
 40594                           prodl	equ	0xFF3
 40595                           intcon	equ	0xFF2
 40596                           intcon2	equ	0xFF1
 40597                           indf0	equ	0xFEF
 40598                           postinc0	equ	0xFEE
 40599                           plusw0	equ	0xFEB
 40600                           fsr0h	equ	0xFEA
 40601                           fsr0l	equ	0xFE9
 40602                           wreg	equ	0xFE8
 40603                           indf1	equ	0xFE7
 40604                           postdec1	equ	0xFE5
 40605                           fsr1h	equ	0xFE2
 40606                           fsr1l	equ	0xFE1
 40607                           bsr	equ	0xFE0
 40608                           indf2	equ	0xFDF
 40609                           postinc2	equ	0xFDE
 40610                           postdec2	equ	0xFDD
 40611                           plusw2	equ	0xFDB
 40612                           fsr2h	equ	0xFDA
 40613                           fsr2l	equ	0xFD9
 40614                           status	equ	0xFD8
 40615                           
 40616 ;; *************** function _Reset_Timer0 *****************
 40617 ;; Defined at:
 40618 ;;		line 103 in file "Timer.c"
 40619 ;; Parameters:    Size  Location     Type
 40620 ;;		None
 40621 ;; Auto vars:     Size  Location     Type
 40622 ;;		None
 40623 ;; Return value:  Size  Location     Type
 40624 ;;		None               void
 40625 ;; Registers used:
 40626 ;;		wreg, status,2
 40627 ;; Tracked objects:
 40628 ;;		On entry : 0/0
 40629 ;;		On exit  : 0/0
 40630 ;;		Unchanged: 0/0
 40631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 40632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40636 ;;Total ram usage:        0 bytes
 40637 ;; Hardware stack levels used:    1
 40638 ;; Hardware stack levels required when called:    1
 40639 ;; This function calls:
 40640 ;;		Nothing
 40641 ;; This function is called by:
 40642 ;;		_low_isr
 40643 ;; This function uses a non-reentrant model
 40644 ;;
 40645                           
 40646                           	psect	text135
 40647  001146                     __ptext135:
 40648                           	opt stack 0
 40649  001146                     _Reset_Timer0:
 40650                           	opt stack 22
 40651                           
 40652                           ;Timer.c: 109: TMR0H = 0;
 40653                           
 40654                           ;incstack = 0
 40655  001146  0E00               	movlw	0
 40656  001148  6ED7               	movwf	4055,c	;volatile
 40657                           
 40658                           ;Timer.c: 110: TMR0L = 2;
 40659  00114A  0E02               	movlw	2
 40660  00114C  6ED6               	movwf	4054,c	;volatile
 40661  00114E  0012               	return		;funcret
 40662  001150                     __end_of_Reset_Timer0:
 40663                           	opt stack 0
 40664                           pclatu	equ	0xFFB
 40665                           pclath	equ	0xFFA
 40666                           tblptru	equ	0xFF8
 40667                           tblptrh	equ	0xFF7
 40668                           tblptrl	equ	0xFF6
 40669                           tablat	equ	0xFF5
 40670                           prodh	equ	0xFF4
 40671                           prodl	equ	0xFF3
 40672                           intcon	equ	0xFF2
 40673                           intcon2	equ	0xFF1
 40674                           indf0	equ	0xFEF
 40675                           postinc0	equ	0xFEE
 40676                           plusw0	equ	0xFEB
 40677                           fsr0h	equ	0xFEA
 40678                           fsr0l	equ	0xFE9
 40679                           wreg	equ	0xFE8
 40680                           indf1	equ	0xFE7
 40681                           postdec1	equ	0xFE5
 40682                           fsr1h	equ	0xFE2
 40683                           fsr1l	equ	0xFE1
 40684                           bsr	equ	0xFE0
 40685                           indf2	equ	0xFDF
 40686                           postinc2	equ	0xFDE
 40687                           postdec2	equ	0xFDD
 40688                           plusw2	equ	0xFDB
 40689                           fsr2h	equ	0xFDA
 40690                           fsr2l	equ	0xFD9
 40691                           status	equ	0xFD8
 40692                           
 40693 ;; *************** function _IsPrintableASCII *****************
 40694 ;; Defined at:
 40695 ;;		line 413 in file "MISC.c"
 40696 ;; Parameters:    Size  Location     Type
 40697 ;;  data            1    wreg     unsigned char 
 40698 ;; Auto vars:     Size  Location     Type
 40699 ;;  data            1    0[COMRAM] unsigned char 
 40700 ;; Return value:  Size  Location     Type
 40701 ;;                  1    wreg      unsigned char 
 40702 ;; Registers used:
 40703 ;;		wreg, status,2, status,0
 40704 ;; Tracked objects:
 40705 ;;		On entry : 0/0
 40706 ;;		On exit  : 0/0
 40707 ;;		Unchanged: 0/0
 40708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 40709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40713 ;;Total ram usage:        1 bytes
 40714 ;; Hardware stack levels used:    1
 40715 ;; Hardware stack levels required when called:    1
 40716 ;; This function calls:
 40717 ;;		Nothing
 40718 ;; This function is called by:
 40719 ;;		_low_isr
 40720 ;; This function uses a non-reentrant model
 40721 ;;
 40722                           
 40723                           	psect	text136
 40724  000FF8                     __ptext136:
 40725                           	opt stack 0
 40726  000FF8                     _IsPrintableASCII:
 40727                           	opt stack 22
 40728                           
 40729                           ;incstack = 0
 40730                           ;IsPrintableASCII@data stored from wreg
 40731  000FF8  6E01               	movwf	IsPrintableASCII@data,c
 40732                           
 40733                           ;MISC.c: 415: if(data >= 0x20 && data < 0x7F)
 40734  000FFA  0E1F               	movlw	31
 40735  000FFC  6401               	cpfsgt	IsPrintableASCII@data,c
 40736  000FFE  D005               	goto	i1l10299
 40737  001000  0E7F               	movlw	127
 40738  001002  6001               	cpfslt	IsPrintableASCII@data,c
 40739  001004  D002               	goto	i1l10299
 40740                           
 40741                           ;MISC.c: 416: {
 40742                           ;MISC.c: 417: return 1;
 40743  001006  0E01               	movlw	1
 40744  001008  0012               	return	
 40745  00100A                     i1l10299:
 40746                           
 40747                           ;MISC.c: 418: }
 40748                           ;MISC.c: 419: return 0;
 40749  00100A  0E00               	movlw	0
 40750  00100C  0012               	return	
 40751  00100E  0012               	return		;funcret
 40752  001010                     __end_of_IsPrintableASCII:
 40753                           	opt stack 0
 40754                           pclatu	equ	0xFFB
 40755                           pclath	equ	0xFFA
 40756                           tblptru	equ	0xFF8
 40757                           tblptrh	equ	0xFF7
 40758                           tblptrl	equ	0xFF6
 40759                           tablat	equ	0xFF5
 40760                           prodh	equ	0xFF4
 40761                           prodl	equ	0xFF3
 40762                           intcon	equ	0xFF2
 40763                           intcon2	equ	0xFF1
 40764                           indf0	equ	0xFEF
 40765                           postinc0	equ	0xFEE
 40766                           plusw0	equ	0xFEB
 40767                           fsr0h	equ	0xFEA
 40768                           fsr0l	equ	0xFE9
 40769                           wreg	equ	0xFE8
 40770                           indf1	equ	0xFE7
 40771                           postdec1	equ	0xFE5
 40772                           fsr1h	equ	0xFE2
 40773                           fsr1l	equ	0xFE1
 40774                           bsr	equ	0xFE0
 40775                           indf2	equ	0xFDF
 40776                           postinc2	equ	0xFDE
 40777                           postdec2	equ	0xFDD
 40778                           plusw2	equ	0xFDB
 40779                           fsr2h	equ	0xFDA
 40780                           fsr2l	equ	0xFD9
 40781                           status	equ	0xFD8
 40782                           
 40783 ;; *************** function _IRrawToNEC *****************
 40784 ;; Defined at:
 40785 ;;		line 113 in file "IR.c"
 40786 ;; Parameters:    Size  Location     Type
 40787 ;;  Raw             2    0[COMRAM] PTR unsigned int 
 40788 ;;		 -> IRRawCode(144), 
 40789 ;;  NEC             2    2[COMRAM] PTR unsigned long 
 40790 ;;		 -> IR_NEC(4), 
 40791 ;;  Invert          1    4[COMRAM] unsigned char 
 40792 ;; Auto vars:     Size  Location     Type
 40793 ;;  NECtemp         4    7[COMRAM] unsigned long 
 40794 ;;  StartBit        1   14[COMRAM] unsigned char 
 40795 ;;  i               1   13[COMRAM] unsigned char 
 40796 ;;  first           1   12[COMRAM] unsigned char 
 40797 ;;  Pause           1   11[COMRAM] unsigned char 
 40798 ;; Return value:  Size  Location     Type
 40799 ;;                  1    wreg      unsigned char 
 40800 ;; Registers used:
 40801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40802 ;; Tracked objects:
 40803 ;;		On entry : 0/0
 40804 ;;		On exit  : 0/0
 40805 ;;		Unchanged: 0/0
 40806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 40807 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40808 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40810 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 40811 ;;Total ram usage:       15 bytes
 40812 ;; Hardware stack levels used:    1
 40813 ;; Hardware stack levels required when called:    1
 40814 ;; This function calls:
 40815 ;;		Nothing
 40816 ;; This function is called by:
 40817 ;;		_low_isr
 40818 ;; This function uses a non-reentrant model
 40819 ;;
 40820                           
 40821                           	psect	text137
 40822  0145CA                     __ptext137:
 40823                           	opt stack 0
 40824  0145CA                     _IRrawToNEC:
 40825                           	opt stack 22
 40826                           
 40827                           ;IR.c: 141: unsigned char i;
 40828                           ;IR.c: 142: unsigned char Pause =0;
 40829                           
 40830                           ;incstack = 0
 40831  0145CA  0E00               	movlw	0
 40832  0145CC  6E0C               	movwf	IRrawToNEC@Pause,c
 40833                           
 40834                           ;IR.c: 143: unsigned char first =0;
 40835  0145CE  0E00               	movlw	0
 40836  0145D0  6E0D               	movwf	IRrawToNEC@first,c
 40837                           
 40838                           ;IR.c: 144: unsigned char StartBit=72;
 40839  0145D2  0E48               	movlw	72
 40840  0145D4  6E0F               	movwf	IRrawToNEC@StartBit,c
 40841                           
 40842                           ;IR.c: 145: unsigned long NECtemp = 0;
 40843  0145D6  0E00               	movlw	0
 40844  0145D8  6E08               	movwf	IRrawToNEC@NECtemp,c
 40845  0145DA  0E00               	movlw	0
 40846  0145DC  6E09               	movwf	IRrawToNEC@NECtemp+1,c
 40847  0145DE  0E00               	movlw	0
 40848  0145E0  6E0A               	movwf	IRrawToNEC@NECtemp+2,c
 40849  0145E2  0E00               	movlw	0
 40850  0145E4  6E0B               	movwf	IRrawToNEC@NECtemp+3,c
 40851                           
 40852                           ;IR.c: 148: for (i =0; i < 72; i++)
 40853  0145E6  0E00               	movlw	0
 40854  0145E8  6E0E               	movwf	IRrawToNEC@i,c
 40855  0145EA                     i1l10349:
 40856  0145EA  0E47               	movlw	71
 40857  0145EC  640E               	cpfsgt	IRrawToNEC@i,c
 40858  0145EE  D001               	goto	i1l10353
 40859  0145F0  D03F               	goto	i1l10373
 40860  0145F2                     i1l10353:
 40861                           
 40862                           ;IR.c: 149: {
 40863                           ;IR.c: 150: if(Raw[i] >= 28800L && Raw[i] <= 32000L )
 40864  0145F2  500E               	movf	IRrawToNEC@i,w,c
 40865  0145F4  0D02               	mullw	2
 40866  0145F6  50F3               	movf	prodl,w,c
 40867  0145F8  2401               	addwf	IRrawToNEC@Raw,w,c
 40868  0145FA  6ED9               	movwf	fsr2l,c
 40869  0145FC  50F4               	movf	prodh,w,c
 40870  0145FE  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40871  014600  6EDA               	movwf	fsr2h,c
 40872  014602  0E80               	movlw	128
 40873  014604  5CDE               	subwf	postinc2,w,c
 40874  014606  0E70               	movlw	112
 40875  014608  58DE               	subwfb	postinc2,w,c
 40876  01460A  A0D8               	btfss	status,0,c
 40877  01460C  D010               	goto	i1l10363
 40878  01460E  500E               	movf	IRrawToNEC@i,w,c
 40879  014610  0D02               	mullw	2
 40880  014612  50F3               	movf	prodl,w,c
 40881  014614  2401               	addwf	IRrawToNEC@Raw,w,c
 40882  014616  6ED9               	movwf	fsr2l,c
 40883  014618  50F4               	movf	prodh,w,c
 40884  01461A  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40885  01461C  6EDA               	movwf	fsr2h,c
 40886  01461E  04DE               	decf	postinc2,w,c
 40887  014620  0E7D               	movlw	125
 40888  014622  58DE               	subwfb	postinc2,w,c
 40889  014624  B0D8               	btfsc	status,0,c
 40890  014626  D003               	goto	i1l10363
 40891                           
 40892                           ;IR.c: 151: {
 40893                           ;IR.c: 153: return 2;
 40894  014628  0E02               	movlw	2
 40895  01462A  0012               	return	
 40896                           
 40897                           ;IR.c: 154: }
 40898  01462C  D01F               	goto	i1l10369
 40899  01462E                     i1l10363:
 40900                           
 40901                           ;IR.c: 155: else if(Raw[i] >= 2560 && Raw[i] <= 3200 )
 40902  01462E  500E               	movf	IRrawToNEC@i,w,c
 40903  014630  0D02               	mullw	2
 40904  014632  50F3               	movf	prodl,w,c
 40905  014634  2401               	addwf	IRrawToNEC@Raw,w,c
 40906  014636  6ED9               	movwf	fsr2l,c
 40907  014638  50F4               	movf	prodh,w,c
 40908  01463A  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40909  01463C  6EDA               	movwf	fsr2h,c
 40910  01463E  52DE               	movf	postinc2,f,c
 40911  014640  0E0A               	movlw	10
 40912  014642  5CDE               	subwf	postinc2,w,c
 40913  014644  A0D8               	btfss	status,0,c
 40914  014646  D012               	goto	i1l10369
 40915  014648  500E               	movf	IRrawToNEC@i,w,c
 40916  01464A  0D02               	mullw	2
 40917  01464C  50F3               	movf	prodl,w,c
 40918  01464E  2401               	addwf	IRrawToNEC@Raw,w,c
 40919  014650  6ED9               	movwf	fsr2l,c
 40920  014652  50F4               	movf	prodh,w,c
 40921  014654  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40922  014656  6EDA               	movwf	fsr2h,c
 40923  014658  0E81               	movlw	129
 40924  01465A  5CDE               	subwf	postinc2,w,c
 40925  01465C  0E0C               	movlw	12
 40926  01465E  58DE               	subwfb	postinc2,w,c
 40927  014660  B0D8               	btfsc	status,0,c
 40928  014662  D004               	goto	i1l10369
 40929                           
 40930                           ;IR.c: 156: {
 40931                           ;IR.c: 158: StartBit = i;
 40932  014664  C00E  F00F         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 40933                           
 40934                           ;IR.c: 159: break;
 40935  014668  D003               	goto	i1l10373
 40936  01466A  D000               	goto	i1l10369
 40937  01466C                     i1l10369:
 40938  01466C  2A0E               	incf	IRrawToNEC@i,f,c
 40939  01466E  D7BD               	goto	i1l10349
 40940  014670                     i1l10373:
 40941                           
 40942                           ;IR.c: 160: }
 40943                           ;IR.c: 161: }
 40944                           ;IR.c: 162: if(72 - StartBit < 72)
 40945  014670  500F               	movf	IRrawToNEC@StartBit,w,c
 40946  014672  6E06               	movwf	??_IRrawToNEC& (0+255),c
 40947  014674  6A07               	clrf	(??_IRrawToNEC+1)& (0+255),c
 40948  014676  1E06               	comf	??_IRrawToNEC,f,c
 40949  014678  1E07               	comf	??_IRrawToNEC+1,f,c
 40950  01467A  4A06               	infsnz	??_IRrawToNEC,f,c
 40951  01467C  2A07               	incf	??_IRrawToNEC+1,f,c
 40952  01467E  0E48               	movlw	72
 40953  014680  2606               	addwf	??_IRrawToNEC,f,c
 40954  014682  0E00               	movlw	0
 40955  014684  2207               	addwfc	??_IRrawToNEC+1,f,c
 40956  014686  BE07               	btfsc	??_IRrawToNEC+1,7,c
 40957  014688  D006               	goto	i1l10375
 40958  01468A  5007               	movf	??_IRrawToNEC+1,w,c
 40959  01468C  E106               	bnz	i1l10379
 40960  01468E  0E48               	movlw	72
 40961  014690  5C06               	subwf	??_IRrawToNEC,w,c
 40962  014692  B0D8               	btfsc	status,0,c
 40963  014694  D002               	goto	i1l10379
 40964  014696                     i1l10375:
 40965                           
 40966                           ;IR.c: 163: {
 40967                           ;IR.c: 165: return 0;
 40968  014696  0E00               	movlw	0
 40969  014698  0012               	return	
 40970  01469A                     i1l10379:
 40971                           
 40972                           ;IR.c: 166: }
 40973                           ;IR.c: 168: StartBit++;
 40974  01469A  2A0F               	incf	IRrawToNEC@StartBit,f,c
 40975                           
 40976                           ;IR.c: 169: if(Raw[StartBit] < 1120 || Raw[StartBit] > 1760 )
 40977  01469C  500F               	movf	IRrawToNEC@StartBit,w,c
 40978  01469E  0D02               	mullw	2
 40979  0146A0  50F3               	movf	prodl,w,c
 40980  0146A2  2401               	addwf	IRrawToNEC@Raw,w,c
 40981  0146A4  6ED9               	movwf	fsr2l,c
 40982  0146A6  50F4               	movf	prodh,w,c
 40983  0146A8  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40984  0146AA  6EDA               	movwf	fsr2h,c
 40985  0146AC  0E60               	movlw	96
 40986  0146AE  5CDE               	subwf	postinc2,w,c
 40987  0146B0  0E04               	movlw	4
 40988  0146B2  58DE               	subwfb	postinc2,w,c
 40989  0146B4  A0D8               	btfss	status,0,c
 40990  0146B6  D00E               	goto	i1l10385
 40991  0146B8  500F               	movf	IRrawToNEC@StartBit,w,c
 40992  0146BA  0D02               	mullw	2
 40993  0146BC  50F3               	movf	prodl,w,c
 40994  0146BE  2401               	addwf	IRrawToNEC@Raw,w,c
 40995  0146C0  6ED9               	movwf	fsr2l,c
 40996  0146C2  50F4               	movf	prodh,w,c
 40997  0146C4  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 40998  0146C6  6EDA               	movwf	fsr2h,c
 40999  0146C8  0EE1               	movlw	225
 41000  0146CA  5CDE               	subwf	postinc2,w,c
 41001  0146CC  0E06               	movlw	6
 41002  0146CE  58DE               	subwfb	postinc2,w,c
 41003  0146D0  A0D8               	btfss	status,0,c
 41004  0146D2  D002               	goto	i1l10389
 41005  0146D4                     i1l10385:
 41006                           
 41007                           ;IR.c: 170: {
 41008                           ;IR.c: 172: return 0;
 41009  0146D4  0E00               	movlw	0
 41010  0146D6  0012               	return	
 41011  0146D8                     i1l10389:
 41012                           
 41013                           ;IR.c: 173: }
 41014                           ;IR.c: 176: StartBit++;
 41015  0146D8  2A0F               	incf	IRrawToNEC@StartBit,f,c
 41016                           
 41017                           ;IR.c: 177: for(i = StartBit; i < 72;i++)
 41018  0146DA  C00F  F00E         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 41019  0146DE                     i1l10393:
 41020  0146DE  0E47               	movlw	71
 41021  0146E0  640E               	cpfsgt	IRrawToNEC@i,c
 41022  0146E2  D001               	goto	i1l10397
 41023  0146E4  D11E               	goto	i1l10493
 41024  0146E6                     i1l10397:
 41025                           
 41026                           ;IR.c: 178: {
 41027                           ;IR.c: 179: if(Raw[StartBit] >= 80 && Raw[StartBit] <= 384 )
 41028  0146E6  500F               	movf	IRrawToNEC@StartBit,w,c
 41029  0146E8  0D02               	mullw	2
 41030  0146EA  50F3               	movf	prodl,w,c
 41031  0146EC  2401               	addwf	IRrawToNEC@Raw,w,c
 41032  0146EE  6ED9               	movwf	fsr2l,c
 41033  0146F0  50F4               	movf	prodh,w,c
 41034  0146F2  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41035  0146F4  6EDA               	movwf	fsr2h,c
 41036  0146F6  0E01               	movlw	1
 41037  0146F8  50DB               	movf	plusw2,w,c
 41038  0146FA  E104               	bnz	i1u1229_20
 41039  0146FC  0E50               	movlw	80
 41040  0146FE  5CDE               	subwf	postinc2,w,c
 41041  014700  A0D8               	btfss	status,0,c
 41042  014702  D037               	goto	i1l10421
 41043  014704                     i1u1229_20:
 41044  014704  500F               	movf	IRrawToNEC@StartBit,w,c
 41045  014706  0D02               	mullw	2
 41046  014708  50F3               	movf	prodl,w,c
 41047  01470A  2401               	addwf	IRrawToNEC@Raw,w,c
 41048  01470C  6ED9               	movwf	fsr2l,c
 41049  01470E  50F4               	movf	prodh,w,c
 41050  014710  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41051  014712  6EDA               	movwf	fsr2h,c
 41052  014714  0E81               	movlw	129
 41053  014716  5CDE               	subwf	postinc2,w,c
 41054  014718  0E01               	movlw	1
 41055  01471A  58DE               	subwfb	postinc2,w,c
 41056  01471C  B0D8               	btfsc	status,0,c
 41057  01471E  D029               	goto	i1l10421
 41058                           
 41059                           ;IR.c: 180: {
 41060                           ;IR.c: 181: if(Pause != 3)
 41061  014720  0E03               	movlw	3
 41062  014722  180C               	xorwf	IRrawToNEC@Pause,w,c
 41063  014724  B4D8               	btfsc	status,2,c
 41064  014726  D016               	goto	i1l10415
 41065                           
 41066                           ;IR.c: 182: {
 41067                           ;IR.c: 183: if(!first)
 41068  014728  500D               	movf	IRrawToNEC@first,w,c
 41069  01472A  A4D8               	btfss	status,2,c
 41070  01472C  D002               	goto	i1l10407
 41071                           
 41072                           ;IR.c: 184: {
 41073                           ;IR.c: 186: first = 1;
 41074  01472E  0E01               	movlw	1
 41075  014730  D04F               	goto	L33
 41076  014732                     i1l10407:
 41077                           
 41078                           ;IR.c: 188: else
 41079                           ;IR.c: 189: {
 41080                           ;IR.c: 190: first = 0;
 41081  014732  0E00               	movlw	0
 41082  014734  6E0D               	movwf	IRrawToNEC@first,c
 41083                           
 41084                           ;IR.c: 191: NECtemp <<= 1;
 41085  014736  90D8               	bcf	status,0,c
 41086  014738  3608               	rlcf	IRrawToNEC@NECtemp,f,c
 41087  01473A  3609               	rlcf	IRrawToNEC@NECtemp+1,f,c
 41088  01473C  360A               	rlcf	IRrawToNEC@NECtemp+2,f,c
 41089  01473E  360B               	rlcf	IRrawToNEC@NECtemp+3,f,c
 41090                           
 41091                           ;IR.c: 192: if(!Invert)
 41092  014740  5005               	movf	IRrawToNEC@Invert,w,c
 41093  014742  A4D8               	btfss	status,2,c
 41094  014744  D0EB               	goto	i1l10489
 41095                           
 41096                           ;IR.c: 193: {
 41097                           ;IR.c: 194: NECtemp++;
 41098  014746  0E01               	movlw	1
 41099  014748  2608               	addwf	IRrawToNEC@NECtemp,f,c
 41100  01474A  0E00               	movlw	0
 41101  01474C  2209               	addwfc	IRrawToNEC@NECtemp+1,f,c
 41102  01474E  220A               	addwfc	IRrawToNEC@NECtemp+2,f,c
 41103  014750  220B               	addwfc	IRrawToNEC@NECtemp+3,f,c
 41104                           
 41105                           ;IR.c: 195: }
 41106                           ;IR.c: 197: }
 41107                           ;IR.c: 198: }
 41108  014752  D0E4               	goto	i1l10489
 41109  014754                     i1l10415:
 41110                           
 41111                           ;IR.c: 199: else
 41112                           ;IR.c: 200: {
 41113                           ;IR.c: 202: *NEC = NECtemp;
 41114  014754  C003  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 41115  014758  C004  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 41116  01475C  C008  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 41117  014760  C009  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 41118  014764  C00A  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 41119  014768  C00B  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 41120  01476C  D046               	goto	i1l10445
 41121                           
 41122                           ;IR.c: 203: return 1;
 41123  01476E  0012               	return	
 41124                           
 41125                           ;IR.c: 204: }
 41126                           ;IR.c: 205: }
 41127  014770  D0D5               	goto	i1l10489
 41128  014772                     i1l10421:
 41129                           
 41130                           ;IR.c: 206: else if(Raw[StartBit] >= 448 && Raw[StartBit] <= 608)
 41131  014772  500F               	movf	IRrawToNEC@StartBit,w,c
 41132  014774  0D02               	mullw	2
 41133  014776  50F3               	movf	prodl,w,c
 41134  014778  2401               	addwf	IRrawToNEC@Raw,w,c
 41135  01477A  6ED9               	movwf	fsr2l,c
 41136  01477C  50F4               	movf	prodh,w,c
 41137  01477E  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41138  014780  6EDA               	movwf	fsr2h,c
 41139  014782  0EC0               	movlw	192
 41140  014784  5CDE               	subwf	postinc2,w,c
 41141  014786  0E01               	movlw	1
 41142  014788  58DE               	subwfb	postinc2,w,c
 41143  01478A  A0D8               	btfss	status,0,c
 41144  01478C  D026               	goto	i1l10439
 41145  01478E  500F               	movf	IRrawToNEC@StartBit,w,c
 41146  014790  0D02               	mullw	2
 41147  014792  50F3               	movf	prodl,w,c
 41148  014794  2401               	addwf	IRrawToNEC@Raw,w,c
 41149  014796  6ED9               	movwf	fsr2l,c
 41150  014798  50F4               	movf	prodh,w,c
 41151  01479A  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41152  01479C  6EDA               	movwf	fsr2h,c
 41153  01479E  0E61               	movlw	97
 41154  0147A0  5CDE               	subwf	postinc2,w,c
 41155  0147A2  0E02               	movlw	2
 41156  0147A4  58DE               	subwfb	postinc2,w,c
 41157  0147A6  B0D8               	btfsc	status,0,c
 41158  0147A8  D018               	goto	i1l10439
 41159                           
 41160                           ;IR.c: 207: {
 41161                           ;IR.c: 208: if(first)
 41162  0147AA  500D               	movf	IRrawToNEC@first,w,c
 41163  0147AC  B4D8               	btfsc	status,2,c
 41164  0147AE  D012               	goto	i1l10435
 41165                           
 41166                           ;IR.c: 209: {
 41167                           ;IR.c: 211: NECtemp <<= 1;
 41168  0147B0  90D8               	bcf	status,0,c
 41169  0147B2  3608               	rlcf	IRrawToNEC@NECtemp,f,c
 41170  0147B4  3609               	rlcf	IRrawToNEC@NECtemp+1,f,c
 41171  0147B6  360A               	rlcf	IRrawToNEC@NECtemp+2,f,c
 41172  0147B8  360B               	rlcf	IRrawToNEC@NECtemp+3,f,c
 41173                           
 41174                           ;IR.c: 212: if(Invert)
 41175  0147BA  5005               	movf	IRrawToNEC@Invert,w,c
 41176  0147BC  B4D8               	btfsc	status,2,c
 41177  0147BE  D007               	goto	i1l10433
 41178                           
 41179                           ;IR.c: 213: {
 41180                           ;IR.c: 214: NECtemp++;
 41181  0147C0  0E01               	movlw	1
 41182  0147C2  2608               	addwf	IRrawToNEC@NECtemp,f,c
 41183  0147C4  0E00               	movlw	0
 41184  0147C6  2209               	addwfc	IRrawToNEC@NECtemp+1,f,c
 41185  0147C8  220A               	addwfc	IRrawToNEC@NECtemp+2,f,c
 41186  0147CA  220B               	addwfc	IRrawToNEC@NECtemp+3,f,c
 41187  0147CC  D000               	goto	i1l10433
 41188  0147CE                     i1l10433:
 41189                           
 41190                           ;IR.c: 215: }
 41191                           ;IR.c: 216: first = 0;
 41192  0147CE  0E00               	movlw	0
 41193  0147D0                     L33:
 41194  0147D0  6E0D               	movwf	IRrawToNEC@first,c
 41195                           
 41196                           ;IR.c: 217: }
 41197  0147D2  D0A4               	goto	i1l10489
 41198  0147D4                     i1l10435:
 41199                           
 41200                           ;IR.c: 218: else
 41201                           ;IR.c: 219: {
 41202                           ;IR.c: 221: return 0;
 41203  0147D4  0E00               	movlw	0
 41204  0147D6  0012               	return	
 41205                           
 41206                           ;IR.c: 222: }
 41207                           ;IR.c: 223: }
 41208  0147D8  D0A1               	goto	i1l10489
 41209  0147DA                     i1l10439:
 41210                           
 41211                           ;IR.c: 224: else if(Raw[StartBit] == 0 && first == 1)
 41212  0147DA  500F               	movf	IRrawToNEC@StartBit,w,c
 41213  0147DC  0D02               	mullw	2
 41214  0147DE  50F3               	movf	prodl,w,c
 41215  0147E0  2401               	addwf	IRrawToNEC@Raw,w,c
 41216  0147E2  6ED9               	movwf	fsr2l,c
 41217  0147E4  50F4               	movf	prodh,w,c
 41218  0147E6  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41219  0147E8  6EDA               	movwf	fsr2h,c
 41220  0147EA  50DE               	movf	postinc2,w,c
 41221  0147EC  10DE               	iorwf	postinc2,w,c
 41222  0147EE  A4D8               	btfss	status,2,c
 41223  0147F0  D007               	goto	i1l10451
 41224  0147F2  040D               	decf	IRrawToNEC@first,w,c
 41225  0147F4  A4D8               	btfss	status,2,c
 41226  0147F6  D004               	goto	i1l10451
 41227  0147F8  D7AD               	goto	i1l10415
 41228  0147FA                     i1l10445:
 41229                           
 41230                           ;IR.c: 231: return 1;
 41231  0147FA  0E01               	movlw	1
 41232  0147FC  0012               	return	
 41233                           
 41234                           ;IR.c: 232: }
 41235  0147FE  D08E               	goto	i1l10489
 41236  014800                     i1l10451:
 41237                           
 41238                           ;IR.c: 233: else if(Raw[StartBit] >= 12160 && Raw[StartBit] <= 13440)
 41239  014800  500F               	movf	IRrawToNEC@StartBit,w,c
 41240  014802  0D02               	mullw	2
 41241  014804  50F3               	movf	prodl,w,c
 41242  014806  2401               	addwf	IRrawToNEC@Raw,w,c
 41243  014808  6ED9               	movwf	fsr2l,c
 41244  01480A  50F4               	movf	prodh,w,c
 41245  01480C  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41246  01480E  6EDA               	movwf	fsr2h,c
 41247  014810  0E80               	movlw	128
 41248  014812  5CDE               	subwf	postinc2,w,c
 41249  014814  0E2F               	movlw	47
 41250  014816  58DE               	subwfb	postinc2,w,c
 41251  014818  A0D8               	btfss	status,0,c
 41252  01481A  D010               	goto	i1l10457
 41253  01481C  500F               	movf	IRrawToNEC@StartBit,w,c
 41254  01481E  0D02               	mullw	2
 41255  014820  50F3               	movf	prodl,w,c
 41256  014822  2401               	addwf	IRrawToNEC@Raw,w,c
 41257  014824  6ED9               	movwf	fsr2l,c
 41258  014826  50F4               	movf	prodh,w,c
 41259  014828  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41260  01482A  6EDA               	movwf	fsr2h,c
 41261  01482C  0E81               	movlw	129
 41262  01482E  5CDE               	subwf	postinc2,w,c
 41263  014830  0E34               	movlw	52
 41264  014832  58DE               	subwfb	postinc2,w,c
 41265  014834  B0D8               	btfsc	status,0,c
 41266  014836  D002               	goto	i1l10457
 41267                           
 41268                           ;IR.c: 234: {
 41269                           ;IR.c: 236: Pause = 1;
 41270  014838  0E01               	movlw	1
 41271  01483A  D041               	goto	L35
 41272  01483C                     i1l10457:
 41273                           
 41274                           ;IR.c: 238: else if(Pause == 1 && Raw[StartBit] >= 2560 && Raw[StartBit] <= 3200)
 41275  01483C  040C               	decf	IRrawToNEC@Pause,w,c
 41276  01483E  A4D8               	btfss	status,2,c
 41277  014840  D01D               	goto	i1l10465
 41278  014842  500F               	movf	IRrawToNEC@StartBit,w,c
 41279  014844  0D02               	mullw	2
 41280  014846  50F3               	movf	prodl,w,c
 41281  014848  2401               	addwf	IRrawToNEC@Raw,w,c
 41282  01484A  6ED9               	movwf	fsr2l,c
 41283  01484C  50F4               	movf	prodh,w,c
 41284  01484E  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41285  014850  6EDA               	movwf	fsr2h,c
 41286  014852  52DE               	movf	postinc2,f,c
 41287  014854  0E0A               	movlw	10
 41288  014856  5CDE               	subwf	postinc2,w,c
 41289  014858  A0D8               	btfss	status,0,c
 41290  01485A  D010               	goto	i1l10465
 41291  01485C  500F               	movf	IRrawToNEC@StartBit,w,c
 41292  01485E  0D02               	mullw	2
 41293  014860  50F3               	movf	prodl,w,c
 41294  014862  2401               	addwf	IRrawToNEC@Raw,w,c
 41295  014864  6ED9               	movwf	fsr2l,c
 41296  014866  50F4               	movf	prodh,w,c
 41297  014868  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41298  01486A  6EDA               	movwf	fsr2h,c
 41299  01486C  0E81               	movlw	129
 41300  01486E  5CDE               	subwf	postinc2,w,c
 41301  014870  0E0C               	movlw	12
 41302  014872  58DE               	subwfb	postinc2,w,c
 41303  014874  B0D8               	btfsc	status,0,c
 41304  014876  D002               	goto	i1l10465
 41305                           
 41306                           ;IR.c: 239: {
 41307                           ;IR.c: 241: Pause = 2;
 41308  014878  0E02               	movlw	2
 41309  01487A  D021               	goto	L35
 41310  01487C                     i1l10465:
 41311                           
 41312                           ;IR.c: 243: else if(Pause == 2 && Raw[StartBit] >= 592 && Raw[StartBit] <= 800)
 41313  01487C  0E02               	movlw	2
 41314  01487E  180C               	xorwf	IRrawToNEC@Pause,w,c
 41315  014880  A4D8               	btfss	status,2,c
 41316  014882  D01F               	goto	i1l10473
 41317  014884  500F               	movf	IRrawToNEC@StartBit,w,c
 41318  014886  0D02               	mullw	2
 41319  014888  50F3               	movf	prodl,w,c
 41320  01488A  2401               	addwf	IRrawToNEC@Raw,w,c
 41321  01488C  6ED9               	movwf	fsr2l,c
 41322  01488E  50F4               	movf	prodh,w,c
 41323  014890  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41324  014892  6EDA               	movwf	fsr2h,c
 41325  014894  0E50               	movlw	80
 41326  014896  5CDE               	subwf	postinc2,w,c
 41327  014898  0E02               	movlw	2
 41328  01489A  58DE               	subwfb	postinc2,w,c
 41329  01489C  A0D8               	btfss	status,0,c
 41330  01489E  D011               	goto	i1l10473
 41331  0148A0  500F               	movf	IRrawToNEC@StartBit,w,c
 41332  0148A2  0D02               	mullw	2
 41333  0148A4  50F3               	movf	prodl,w,c
 41334  0148A6  2401               	addwf	IRrawToNEC@Raw,w,c
 41335  0148A8  6ED9               	movwf	fsr2l,c
 41336  0148AA  50F4               	movf	prodh,w,c
 41337  0148AC  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41338  0148AE  6EDA               	movwf	fsr2h,c
 41339  0148B0  0E21               	movlw	33
 41340  0148B2  5CDE               	subwf	postinc2,w,c
 41341  0148B4  0E03               	movlw	3
 41342  0148B6  58DE               	subwfb	postinc2,w,c
 41343  0148B8  B0D8               	btfsc	status,0,c
 41344  0148BA  D003               	goto	i1l10473
 41345                           
 41346                           ;IR.c: 244: {
 41347                           ;IR.c: 247: Pause = 3;
 41348  0148BC  0E03               	movlw	3
 41349  0148BE                     L35:
 41350  0148BE  6E0C               	movwf	IRrawToNEC@Pause,c
 41351                           
 41352                           ;IR.c: 248: }
 41353  0148C0  D02D               	goto	i1l10489
 41354  0148C2                     i1l10473:
 41355                           
 41356                           ;IR.c: 249: else if(Raw[StartBit] >= 28800L && Raw[StartBit] <= 32000L)
 41357  0148C2  500F               	movf	IRrawToNEC@StartBit,w,c
 41358  0148C4  0D02               	mullw	2
 41359  0148C6  50F3               	movf	prodl,w,c
 41360  0148C8  2401               	addwf	IRrawToNEC@Raw,w,c
 41361  0148CA  6ED9               	movwf	fsr2l,c
 41362  0148CC  50F4               	movf	prodh,w,c
 41363  0148CE  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41364  0148D0  6EDA               	movwf	fsr2h,c
 41365  0148D2  0E80               	movlw	128
 41366  0148D4  5CDE               	subwf	postinc2,w,c
 41367  0148D6  0E70               	movlw	112
 41368  0148D8  58DE               	subwfb	postinc2,w,c
 41369  0148DA  A0D8               	btfss	status,0,c
 41370  0148DC  D01C               	goto	i1l10485
 41371  0148DE  500F               	movf	IRrawToNEC@StartBit,w,c
 41372  0148E0  0D02               	mullw	2
 41373  0148E2  50F3               	movf	prodl,w,c
 41374  0148E4  2401               	addwf	IRrawToNEC@Raw,w,c
 41375  0148E6  6ED9               	movwf	fsr2l,c
 41376  0148E8  50F4               	movf	prodh,w,c
 41377  0148EA  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 41378  0148EC  6EDA               	movwf	fsr2h,c
 41379  0148EE  04DE               	decf	postinc2,w,c
 41380  0148F0  0E7D               	movlw	125
 41381  0148F2  58DE               	subwfb	postinc2,w,c
 41382  0148F4  B0D8               	btfsc	status,0,c
 41383  0148F6  D00F               	goto	i1l10485
 41384                           
 41385                           ;IR.c: 250: {
 41386                           ;IR.c: 252: *NEC = NECtemp;
 41387  0148F8  C003  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 41388  0148FC  C004  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 41389  014900  C008  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 41390  014904  C009  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 41391  014908  C00A  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 41392  01490C  C00B  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 41393                           
 41394                           ;IR.c: 253: return 2;
 41395  014910  0E02               	movlw	2
 41396  014912  0012               	return	
 41397                           
 41398                           ;IR.c: 254: }
 41399  014914  D003               	goto	i1l10489
 41400  014916                     i1l10485:
 41401                           
 41402                           ;IR.c: 255: else
 41403                           ;IR.c: 256: {
 41404                           ;IR.c: 257: return 0;
 41405  014916  0E00               	movlw	0
 41406  014918  0012               	return	
 41407  01491A  D000               	goto	i1l10489
 41408  01491C                     i1l10489:
 41409                           
 41410                           ;IR.c: 258: }
 41411                           ;IR.c: 259: StartBit++;
 41412  01491C  2A0F               	incf	IRrawToNEC@StartBit,f,c
 41413  01491E  2A0E               	incf	IRrawToNEC@i,f,c
 41414  014920  D6DE               	goto	i1l10393
 41415  014922                     i1l10493:
 41416                           
 41417                           ;IR.c: 260: }
 41418                           ;IR.c: 262: return 0;
 41419  014922  0E00               	movlw	0
 41420  014924  0012               	return	
 41421  014926  0012               	return		;funcret
 41422  014928                     __end_of_IRrawToNEC:
 41423                           	opt stack 0
 41424                           pclatu	equ	0xFFB
 41425                           pclath	equ	0xFFA
 41426                           tblptru	equ	0xFF8
 41427                           tblptrh	equ	0xFF7
 41428                           tblptrl	equ	0xFF6
 41429                           tablat	equ	0xFF5
 41430                           prodh	equ	0xFF4
 41431                           prodl	equ	0xFF3
 41432                           intcon	equ	0xFF2
 41433                           intcon2	equ	0xFF1
 41434                           indf0	equ	0xFEF
 41435                           postinc0	equ	0xFEE
 41436                           plusw0	equ	0xFEB
 41437                           fsr0h	equ	0xFEA
 41438                           fsr0l	equ	0xFE9
 41439                           wreg	equ	0xFE8
 41440                           indf1	equ	0xFE7
 41441                           postdec1	equ	0xFE5
 41442                           fsr1h	equ	0xFE2
 41443                           fsr1l	equ	0xFE1
 41444                           bsr	equ	0xFE0
 41445                           indf2	equ	0xFDF
 41446                           postinc2	equ	0xFDE
 41447                           postdec2	equ	0xFDD
 41448                           plusw2	equ	0xFDB
 41449                           fsr2h	equ	0xFDA
 41450                           fsr2l	equ	0xFD9
 41451                           status	equ	0xFD8
 41452                           
 41453 ;; *************** function _high_isr *****************
 41454 ;; Defined at:
 41455 ;;		line 62 in file "interrupts.c"
 41456 ;; Parameters:    Size  Location     Type
 41457 ;;		None
 41458 ;; Auto vars:     Size  Location     Type
 41459 ;;		None
 41460 ;; Return value:  Size  Location     Type
 41461 ;;		None               void
 41462 ;; Registers used:
 41463 ;;		None
 41464 ;; Tracked objects:
 41465 ;;		On entry : 0/0
 41466 ;;		On exit  : 0/0
 41467 ;;		Unchanged: 0/0
 41468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 41469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 41470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 41471 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 41472 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 41473 ;;Total ram usage:       14 bytes
 41474 ;; Hardware stack levels used:    1
 41475 ;; This function calls:
 41476 ;;		Nothing
 41477 ;; This function is called by:
 41478 ;;		Interrupt level 2
 41479 ;; This function uses a non-reentrant model
 41480 ;;
 41481                           
 41482                           	psect	intcode
 41483  000008                     __pintcode:
 41484                           	opt stack 0
 41485  000008                     _high_isr:
 41486                           	opt stack 18
 41487                           
 41488                           ;incstack = 0
 41489  000008  CFFA F166          	movff	pclath,??_high_isr
 41490  00000C  CFFB F167          	movff	pclatu,??_high_isr+1
 41491  000010  CFE9 F168          	movff	fsr0l,??_high_isr+2
 41492  000014  EFE0  F002         	goto	int_func
 41493                           pclatu	equ	0xFFB
 41494                           pclath	equ	0xFFA
 41495                           tblptru	equ	0xFF8
 41496                           tblptrh	equ	0xFF7
 41497                           tblptrl	equ	0xFF6
 41498                           tablat	equ	0xFF5
 41499                           prodh	equ	0xFF4
 41500                           prodl	equ	0xFF3
 41501                           intcon	equ	0xFF2
 41502                           intcon2	equ	0xFF1
 41503                           indf0	equ	0xFEF
 41504                           postinc0	equ	0xFEE
 41505                           plusw0	equ	0xFEB
 41506                           fsr0h	equ	0xFEA
 41507                           fsr0l	equ	0xFE9
 41508                           wreg	equ	0xFE8
 41509                           indf1	equ	0xFE7
 41510                           postdec1	equ	0xFE5
 41511                           fsr1h	equ	0xFE2
 41512                           fsr1l	equ	0xFE1
 41513                           bsr	equ	0xFE0
 41514                           indf2	equ	0xFDF
 41515                           postinc2	equ	0xFDE
 41516                           postdec2	equ	0xFDD
 41517                           plusw2	equ	0xFDB
 41518                           fsr2h	equ	0xFDA
 41519                           fsr2l	equ	0xFD9
 41520                           status	equ	0xFD8
 41521                           
 41522                           	psect	intcode_body
 41523  0005C0                     __pintcode_body:
 41524                           	opt stack 18
 41525  0005C0                     int_func:
 41526                           	opt stack 18
 41527  0005C0  CFEA F169          	movff	fsr0h,??_high_isr+3
 41528  0005C4  CFE1 F16A          	movff	fsr1l,??_high_isr+4
 41529  0005C8  CFE2 F16B          	movff	fsr1h,??_high_isr+5
 41530  0005CC  CFD9 F16C          	movff	fsr2l,??_high_isr+6
 41531  0005D0  CFDA F16D          	movff	fsr2h,??_high_isr+7
 41532  0005D4  CFF3 F16E          	movff	prodl,??_high_isr+8
 41533  0005D8  CFF4 F16F          	movff	prodh,??_high_isr+9
 41534  0005DC  CFF6 F170          	movff	tblptrl,??_high_isr+10
 41535  0005E0  CFF7 F171          	movff	tblptrh,??_high_isr+11
 41536  0005E4  CFF8 F172          	movff	tblptru,??_high_isr+12
 41537  0005E8  CFF5 F173          	movff	tablat,??_high_isr+13
 41538  0005EC  C173  FFF5         	movff	??_high_isr+13,tablat
 41539  0005F0  C172  FFF8         	movff	??_high_isr+12,tblptru
 41540  0005F4  C171  FFF7         	movff	??_high_isr+11,tblptrh
 41541  0005F8  C170  FFF6         	movff	??_high_isr+10,tblptrl
 41542  0005FC  C16F  FFF4         	movff	??_high_isr+9,prodh
 41543  000600  C16E  FFF3         	movff	??_high_isr+8,prodl
 41544  000604  C16D  FFDA         	movff	??_high_isr+7,fsr2h
 41545  000608  C16C  FFD9         	movff	??_high_isr+6,fsr2l
 41546  00060C  C16B  FFE2         	movff	??_high_isr+5,fsr1h
 41547  000610  C16A  FFE1         	movff	??_high_isr+4,fsr1l
 41548  000614  C169  FFEA         	movff	??_high_isr+3,fsr0h
 41549  000618  C168  FFE9         	movff	??_high_isr+2,fsr0l
 41550  00061C  C167  FFFB         	movff	??_high_isr+1,pclatu
 41551  000620  C166  FFFA         	movff	??_high_isr,pclath
 41552  000624  0011               	retfie		f
 41553  000626                     __end_of_high_isr:
 41554                           	opt stack 0
 41555                           pclatu	equ	0xFFB
 41556                           pclath	equ	0xFFA
 41557                           tblptru	equ	0xFF8
 41558                           tblptrh	equ	0xFF7
 41559                           tblptrl	equ	0xFF6
 41560                           tablat	equ	0xFF5
 41561                           prodh	equ	0xFF4
 41562                           prodl	equ	0xFF3
 41563                           intcon	equ	0xFF2
 41564                           intcon2	equ	0xFF1
 41565                           indf0	equ	0xFEF
 41566                           postinc0	equ	0xFEE
 41567                           plusw0	equ	0xFEB
 41568                           fsr0h	equ	0xFEA
 41569                           fsr0l	equ	0xFE9
 41570                           wreg	equ	0xFE8
 41571                           indf1	equ	0xFE7
 41572                           postdec1	equ	0xFE5
 41573                           fsr1h	equ	0xFE2
 41574                           fsr1l	equ	0xFE1
 41575                           bsr	equ	0xFE0
 41576                           indf2	equ	0xFDF
 41577                           postinc2	equ	0xFDE
 41578                           postdec2	equ	0xFDD
 41579                           plusw2	equ	0xFDB
 41580                           fsr2h	equ	0xFDA
 41581                           fsr2l	equ	0xFD9
 41582                           status	equ	0xFD8
 41583                           pclatu	equ	0xFFB
 41584                           pclath	equ	0xFFA
 41585                           tblptru	equ	0xFF8
 41586                           tblptrh	equ	0xFF7
 41587                           tblptrl	equ	0xFF6
 41588                           tablat	equ	0xFF5
 41589                           prodh	equ	0xFF4
 41590                           prodl	equ	0xFF3
 41591                           intcon	equ	0xFF2
 41592                           intcon2	equ	0xFF1
 41593                           indf0	equ	0xFEF
 41594                           postinc0	equ	0xFEE
 41595                           plusw0	equ	0xFEB
 41596                           fsr0h	equ	0xFEA
 41597                           fsr0l	equ	0xFE9
 41598                           wreg	equ	0xFE8
 41599                           indf1	equ	0xFE7
 41600                           postdec1	equ	0xFE5
 41601                           fsr1h	equ	0xFE2
 41602                           fsr1l	equ	0xFE1
 41603                           bsr	equ	0xFE0
 41604                           indf2	equ	0xFDF
 41605                           postinc2	equ	0xFDE
 41606                           postdec2	equ	0xFDD
 41607                           plusw2	equ	0xFDB
 41608                           fsr2h	equ	0xFDA
 41609                           fsr2l	equ	0xFD9
 41610                           status	equ	0xFD8
 41611                           
 41612                           	psect	param1
 41613  0000                     pclatu	equ	0xFFB
 41614                           pclath	equ	0xFFA
 41615                           tblptru	equ	0xFF8
 41616                           tblptrh	equ	0xFF7
 41617                           tblptrl	equ	0xFF6
 41618                           tablat	equ	0xFF5
 41619                           prodh	equ	0xFF4
 41620                           prodl	equ	0xFF3
 41621                           intcon	equ	0xFF2
 41622                           intcon2	equ	0xFF1
 41623                           indf0	equ	0xFEF
 41624                           postinc0	equ	0xFEE
 41625                           plusw0	equ	0xFEB
 41626                           fsr0h	equ	0xFEA
 41627                           fsr0l	equ	0xFE9
 41628                           wreg	equ	0xFE8
 41629                           indf1	equ	0xFE7
 41630                           postdec1	equ	0xFE5
 41631                           fsr1h	equ	0xFE2
 41632                           fsr1l	equ	0xFE1
 41633                           bsr	equ	0xFE0
 41634                           indf2	equ	0xFDF
 41635                           postinc2	equ	0xFDE
 41636                           postdec2	equ	0xFDD
 41637                           plusw2	equ	0xFDB
 41638                           fsr2h	equ	0xFDA
 41639                           fsr2l	equ	0xFD9
 41640                           status	equ	0xFD8


Data Sizes:
    Strings     4513
    Constant    412
    Data        26
    BSS         638
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     78      95
    BANK0           160    142     153
    BANK1           256     97     205
    BANK2           256    103     119
    BANK3           256      0     168
    BANK4           256      0     244
    BANK5           256      0     100
    BANK6           256    226     226
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sprintf$3083	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_326(CODE[17]), STR_325(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_323(CODE[32]), STR_322(CODE[35]), STR_321(CODE[35]), STR_300(CODE[10]), 
		 -> STR_287(CODE[23]), STR_286(CODE[23]), STR_227(CODE[23]), STR_226(CODE[23]), 
		 -> STR_222(CODE[16]), STR_221(CODE[36]), STR_209(CODE[13]), STR_208(CODE[20]), 
		 -> STR_207(CODE[17]), STR_206(CODE[29]), STR_190(CODE[15]), STR_189(CODE[32]), 
		 -> STR_171(CODE[15]), STR_170(CODE[22]), STR_30(CODE[19]), STR_27(CODE[52]), 
		 -> STR_26(CODE[48]), STR_25(CODE[47]), STR_24(CODE[54]), STR_23(CODE[53]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK6[200]), SetBaud@buf(BANK2[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK4[144]), 

    Multiple_I2C_Read@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    I2C_Read_Sequential@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    Parse_Time@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    SprintDate@ReturnBuf	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK6[200]), 

    LCD_Scroll@This	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_298(CODE[6]), STR_297(CODE[5]), STR_296(CODE[5]), STR_295(CODE[10]), 
		 -> STR_294(CODE[16]), STR_293(CODE[11]), STR_292(CODE[12]), STR_291(CODE[9]), 
		 -> STR_290(CODE[14]), STR_270(CODE[6]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_252(CODE[4]), STR_251(CODE[5]), STR_250(CODE[8]), STR_249(CODE[10]), 
		 -> STR_248(CODE[9]), STR_217(CODE[2]), STR_216(CODE[10]), STR_215(CODE[9]), 
		 -> STR_196(CODE[10]), STR_195(CODE[10]), STR_194(CODE[13]), STR_179(CODE[10]), 
		 -> STR_178(CODE[10]), STR_177(CODE[17]), STR_157(CODE[6]), STR_156(CODE[6]), 
		 -> STR_155(CODE[9]), STR_154(CODE[10]), STR_129(CODE[7]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[9]), STR_125(CODE[13]), STR_94(CODE[4]), 
		 -> STR_93(CODE[6]), STR_92(CODE[9]), STR_91(CODE[14]), STR_69(CODE[5]), 
		 -> STR_68(CODE[5]), STR_67(CODE[9]), STR_66(CODE[9]), 

    LCDdisplayFeedback@Text	PTR const unsigned char  size(2) Largest target is 200
		 -> STR_318(CODE[16]), STR_316(CODE[16]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_205(CODE[16]), STR_203(CODE[16]), STR_201(CODE[13]), 
		 -> STR_188(CODE[14]), STR_186(CODE[16]), STR_184(CODE[15]), STR_173(CODE[16]), 
		 -> Command@buf(BANK6[200]), STR_169(CODE[14]), STR_167(CODE[16]), STR_165(CODE[15]), 
		 -> STR_147(CODE[13]), STR_145(CODE[15]), STR_141(CODE[14]), STR_137(CODE[16]), 
		 -> STR_124(CODE[16]), STR_116(CODE[16]), STR_114(CODE[16]), STR_111(CODE[15]), 
		 -> STR_108(CODE[15]), STR_105(CODE[14]), STR_102(CODE[16]), STR_90(CODE[16]), 
		 -> STR_83(CODE[16]), STR_81(CODE[15]), STR_78(CODE[14]), STR_75(CODE[16]), 
		 -> STR_59(CODE[12]), STR_57(CODE[9]), STR_54(CODE[8]), STR_51(CODE[13]), 
		 -> STR_48(CODE[9]), STR_45(CODE[8]), STR_42(CODE[13]), 

    LCDPrintString@Text	PTR const unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK3[16]), Scroll_9(BANK3[16]), Scroll_8(BANK3[16]), Scroll_7(BANK2[16]), 
		 -> Scroll_6(COMRAM[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_318(CODE[16]), STR_316(CODE[16]), 
		 -> STR_289(CODE[17]), STR_284(CODE[10]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_229(CODE[17]), STR_225(CODE[17]), STR_205(CODE[16]), 
		 -> STR_203(CODE[16]), STR_201(CODE[13]), STR_188(CODE[14]), STR_186(CODE[16]), 
		 -> STR_184(CODE[15]), STR_173(CODE[16]), Command@buf(BANK6[200]), STR_169(CODE[14]), 
		 -> STR_167(CODE[16]), STR_165(CODE[15]), STR_147(CODE[13]), STR_145(CODE[15]), 
		 -> STR_141(CODE[14]), STR_137(CODE[16]), STR_124(CODE[16]), STR_116(CODE[16]), 
		 -> STR_114(CODE[16]), STR_111(CODE[15]), STR_108(CODE[15]), STR_105(CODE[14]), 
		 -> STR_102(CODE[16]), STR_90(CODE[16]), STR_83(CODE[16]), STR_81(CODE[15]), 
		 -> STR_78(CODE[14]), STR_75(CODE[16]), STR_59(CODE[12]), STR_57(CODE[9]), 
		 -> STR_54(CODE[8]), STR_51(CODE[13]), STR_48(CODE[9]), STR_45(CODE[8]), 
		 -> STR_42(CODE[13]), STR_20(CODE[10]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[12]), 
		 -> STR_13(CODE[11]), STR_12(CODE[10]), STR_10(CODE[9]), STR_9(CODE[14]), 
		 -> low_isr@LCD_TEMP(BANK0[16]), 

    LCDPrintString@c	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK3[16]), Scroll_9(BANK3[16]), Scroll_8(BANK3[16]), Scroll_7(BANK2[16]), 
		 -> Scroll_6(COMRAM[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_318(CODE[16]), STR_316(CODE[16]), 
		 -> STR_289(CODE[17]), STR_284(CODE[10]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_229(CODE[17]), STR_225(CODE[17]), STR_205(CODE[16]), 
		 -> STR_203(CODE[16]), STR_201(CODE[13]), STR_188(CODE[14]), STR_186(CODE[16]), 
		 -> STR_184(CODE[15]), STR_173(CODE[16]), Command@buf(BANK6[200]), STR_169(CODE[14]), 
		 -> STR_167(CODE[16]), STR_165(CODE[15]), STR_147(CODE[13]), STR_145(CODE[15]), 
		 -> STR_141(CODE[14]), STR_137(CODE[16]), STR_124(CODE[16]), STR_116(CODE[16]), 
		 -> STR_114(CODE[16]), STR_111(CODE[15]), STR_108(CODE[15]), STR_105(CODE[14]), 
		 -> STR_102(CODE[16]), STR_90(CODE[16]), STR_83(CODE[16]), STR_81(CODE[15]), 
		 -> STR_78(CODE[14]), STR_75(CODE[16]), STR_59(CODE[12]), STR_57(CODE[9]), 
		 -> STR_54(CODE[8]), STR_51(CODE[13]), STR_48(CODE[9]), STR_45(CODE[8]), 
		 -> STR_42(CODE[13]), STR_20(CODE[10]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[12]), 
		 -> STR_13(CODE[11]), STR_12(CODE[10]), STR_10(CODE[9]), STR_9(CODE[14]), 
		 -> low_isr@LCD_TEMP(BANK0[16]), 

    Send_Config2@data	PTR const unsigned char  size(2) Largest target is 16
		 -> SubLightOFF(CODE[16]), SubLightON(CODE[16]), Aux2OFF(CODE[16]), Aux2ON(CODE[16]), 
		 -> BedOFF(CODE[16]), BedON(CODE[16]), AuxOFF(CODE[16]), AuxON(CODE[16]), 
		 -> fanOFF(CODE[16]), fanON(CODE[16]), 

    Send_Config1@data	PTR const unsigned char  size(2) Largest target is 12
		 -> TXdataF(CODE[12]), TXdataE(CODE[12]), TXdataD(CODE[12]), 

    Command@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    UARTstringWAIT@data	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_34(CODE[18]), STR_33(CODE[17]), STR_32(CODE[24]), STR_31(CODE[23]), 

    UARTstring@data	PTR const unsigned char  size(2) Largest target is 200
		 -> STR_324(CODE[44]), STR_320(CODE[26]), STR_319(CODE[3]), STR_317(CODE[18]), 
		 -> STR_315(CODE[18]), STR_311(CODE[20]), STR_288(CODE[24]), STR_285(CODE[3]), 
		 -> STR_283(CODE[15]), STR_282(CODE[22]), STR_281(CODE[50]), STR_280(CODE[8]), 
		 -> STR_279(CODE[6]), STR_278(CODE[6]), STR_277(CODE[11]), STR_276(CODE[17]), 
		 -> STR_275(CODE[12]), STR_274(CODE[13]), STR_273(CODE[10]), STR_272(CODE[12]), 
		 -> STR_267(CODE[28]), STR_266(CODE[68]), STR_265(CODE[9]), STR_264(CODE[11]), 
		 -> STR_263(CODE[23]), STR_261(CODE[19]), STR_259(CODE[20]), STR_256(CODE[20]), 
		 -> STR_247(CODE[21]), STR_246(CODE[61]), STR_245(CODE[69]), STR_244(CODE[7]), 
		 -> STR_243(CODE[7]), STR_242(CODE[10]), STR_241(CODE[11]), STR_240(CODE[29]), 
		 -> STR_239(CODE[13]), STR_238(CODE[33]), STR_237(CODE[25]), STR_236(CODE[28]), 
		 -> STR_235(CODE[3]), STR_234(CODE[26]), STR_233(CODE[2]), STR_232(CODE[34]), 
		 -> STR_231(CODE[37]), STR_228(CODE[24]), STR_224(CODE[3]), STR_214(CODE[13]), 
		 -> STR_213(CODE[73]), STR_212(CODE[5]), STR_211(CODE[12]), STR_210(CODE[17]), 
		 -> STR_204(CODE[28]), STR_202(CODE[30]), STR_200(CODE[33]), STR_193(CODE[42]), 
		 -> STR_192(CODE[62]), STR_191(CODE[26]), STR_187(CODE[43]), STR_185(CODE[48]), 
		 -> STR_183(CODE[27]), STR_176(CODE[42]), STR_175(CODE[66]), STR_174(CODE[25]), 
		 -> STR_172(CODE[49]), Command@buf(BANK6[200]), STR_168(CODE[33]), STR_166(CODE[38]), 
		 -> STR_164(CODE[27]), STR_163(CODE[28]), STR_153(CODE[37]), STR_152(CODE[68]), 
		 -> STR_151(CODE[18]), STR_150(CODE[15]), STR_149(CODE[11]), STR_148(CODE[28]), 
		 -> STR_146(CODE[18]), STR_144(CODE[32]), STR_140(CODE[31]), STR_136(CODE[38]), 
		 -> STR_123(CODE[24]), STR_122(CODE[68]), STR_121(CODE[10]), STR_120(CODE[6]), 
		 -> STR_119(CODE[8]), STR_118(CODE[11]), STR_117(CODE[21]), STR_115(CODE[16]), 
		 -> STR_113(CODE[19]), STR_110(CODE[18]), STR_107(CODE[16]), STR_104(CODE[15]), 
		 -> STR_101(CODE[22]), STR_89(CODE[27]), STR_88(CODE[68]), STR_87(CODE[7]), 
		 -> STR_86(CODE[8]), STR_85(CODE[11]), STR_84(CODE[24]), STR_82(CODE[19]), 
		 -> STR_80(CODE[19]), STR_77(CODE[18]), STR_74(CODE[25]), STR_65(CODE[17]), 
		 -> STR_64(CODE[68]), STR_63(CODE[8]), STR_62(CODE[7]), STR_61(CODE[11]), 
		 -> STR_60(CODE[17]), STR_58(CODE[12]), STR_56(CODE[9]), STR_53(CODE[8]), 
		 -> STR_50(CODE[13]), STR_47(CODE[9]), STR_44(CODE[8]), STR_41(CODE[13]), 
		 -> STR_36(CODE[4]), STR_35(CODE[22]), STR_29(CODE[22]), STR_28(CODE[3]), 
		 -> SetBaud@buf(BANK2[50]), STR_22(CODE[4]), STR_21(CODE[29]), STR_11(CODE[12]), 
		 -> STR_8(CODE[54]), STR_7(CODE[3]), Version(BANK3[20]), STR_6(CODE[19]), 
		 -> STR_5(CODE[38]), low_isr@TEMP_Rxdata(BANK0[100]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    lowercase@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@address	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    GetEnteredNumber@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StartsWith@That	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_253(CODE[4]), STR_218(CODE[4]), STR_197(CODE[4]), STR_180(CODE[9]), 
		 -> STR_161(CODE[17]), STR_160(CODE[7]), STR_158(CODE[4]), STR_95(CODE[8]), 
		 -> STR_70(CODE[11]), STR_38(CODE[4]), 

    StartsWith@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_314(CODE[2]), STR_313(CODE[14]), STR_312(CODE[7]), STR_310(CODE[13]), 
		 -> STR_309(CODE[12]), STR_308(CODE[18]), STR_307(CODE[17]), STR_306(CODE[16]), 
		 -> STR_305(CODE[2]), STR_304(CODE[11]), STR_303(CODE[8]), STR_302(CODE[8]), 
		 -> STR_301(CODE[16]), STR_254(CODE[2]), STR_230(CODE[4]), STR_223(CODE[5]), 
		 -> STR_220(CODE[8]), STR_219(CODE[2]), STR_199(CODE[2]), STR_198(CODE[2]), 
		 -> STR_182(CODE[2]), STR_181(CODE[2]), STR_162(CODE[2]), STR_159(CODE[2]), 
		 -> STR_143(CODE[5]), STR_142(CODE[6]), STR_139(CODE[4]), STR_138(CODE[6]), 
		 -> STR_135(CODE[2]), STR_134(CODE[6]), STR_133(CODE[2]), STR_132(CODE[10]), 
		 -> STR_131(CODE[6]), STR_130(CODE[6]), STR_98(CODE[4]), STR_97(CODE[6]), 
		 -> STR_96(CODE[2]), STR_71(CODE[2]), STR_39(CODE[2]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_299(CODE[6]), STR_271(CODE[2]), STR_258(CODE[18]), STR_255(CODE[17]), 
		 -> STR_112(CODE[18]), STR_109(CODE[17]), STR_106(CODE[15]), STR_103(CODE[14]), 
		 -> STR_100(CODE[17]), STR_99(CODE[16]), STR_79(CODE[18]), STR_76(CODE[17]), 
		 -> STR_73(CODE[20]), STR_72(CODE[19]), STR_55(CODE[9]), STR_52(CODE[8]), 
		 -> STR_49(CODE[5]), STR_46(CODE[9]), STR_43(CODE[8]), STR_40(CODE[5]), 
		 -> STR_37(CODE[2]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 100
		 -> STR_298(CODE[6]), STR_297(CODE[5]), STR_296(CODE[5]), STR_295(CODE[10]), 
		 -> STR_294(CODE[16]), STR_293(CODE[11]), STR_292(CODE[12]), STR_291(CODE[9]), 
		 -> STR_290(CODE[14]), STR_270(CODE[6]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_252(CODE[4]), STR_251(CODE[5]), STR_250(CODE[8]), STR_249(CODE[10]), 
		 -> STR_248(CODE[9]), STR_217(CODE[2]), STR_216(CODE[10]), STR_215(CODE[9]), 
		 -> STR_196(CODE[10]), STR_195(CODE[10]), STR_194(CODE[13]), STR_179(CODE[10]), 
		 -> STR_178(CODE[10]), STR_177(CODE[17]), STR_157(CODE[6]), STR_156(CODE[6]), 
		 -> STR_155(CODE[9]), STR_154(CODE[10]), STR_129(CODE[7]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[9]), STR_125(CODE[13]), STR_94(CODE[4]), 
		 -> STR_93(CODE[6]), STR_92(CODE[9]), STR_91(CODE[14]), STR_69(CODE[5]), 
		 -> STR_68(CODE[5]), STR_67(CODE[9]), STR_66(CODE[9]), StringAddEqual@temp(BANK2[100]), 
		 -> RemoveSpaces@That(BANK2[100]), low_isr@TEMP_Rxdata(BANK0[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK3[16]), Scroll_9(BANK3[16]), Scroll_8(BANK3[16]), Scroll_7(BANK2[16]), 
		 -> Scroll_6(COMRAM[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), Rxdata(BANK3[100]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK4[144]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK3[16]), Scroll_9(BANK3[16]), Scroll_8(BANK3[16]), Scroll_7(BANK2[16]), 
		 -> Scroll_6(COMRAM[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), StringAddEqual@temp(BANK2[100]), RemoveSpaces@That(BANK2[100]), 
		 -> Rxdata(BANK3[100]), low_isr@TEMP_Rxdata(BANK0[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->_UseIRCode
    i1_LCDScreenUpdate->i1_LCDPrintString
    i1_SetLCDcursor->i1_SendLCDbyte
    i1_LCDPrintString->i1_SendLCDbyte
    i1_LCDPrintChar->i1_SendLCDbyte
    i1_ClearLCD->i1_SendLCDbyte
    i1_SendLCDbyte->i1_delayUS
    i1_PulseEnablePin->i1_delayUS
    i1_BufferCopy->i1_cleanBuffer
    _UseIRCode->i1_SetEEPROM
    i1_UARTstring->i1_UARTchar
    i1_UARTchar->i1_CheckSum_byte
    i1_SetEEPROM->i1_SetMemoryLong
    i1_SetMemoryParity->i1_GetMemoryParity
    i1_SetMemoryParity->i1_WriteEEPROM_1Byte
    i1_GetMemoryParity->i1_ReadEEPROM_1Byte
    i1_SetMemoryLong->i1_GetMemoryLong
    i1_GetMemoryLong->i1_ReadEEPROM_1Byte
    i1_SetMemoryBaud->i1_GetMemoryBaud
    i1_GetMemoryBaud->i1_ReadEEPROM_1Byte

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Command
    _init_LCD->_SendLCDbyte
    _init_IR->_cleanBuffer16bit
    _SyncEEPROMandGLOBAL->_GetEEPROM
    _GetEEPROM->_GetMemoryLong
    _GetMemoryChar->_ReadEEPROM_1Byte
    _SetEEPROM->_SetMemoryLong
    _SetMemoryLong->_GetMemoryLong
    _GetMemoryLong->_ReadEEPROM_1Byte
    _RTC_INIT->_InternalADC_Read
    _I2C_Read_At_Address->_WriteI2C
    _PWM_init->_SetDuty
    _SetFreq->___aldiv
    ___aldiv->___wmul
    _LCDScreenUpdate->_LCDPrintString
    _LCDPrintChar->_SendLCDbyte
    _InitApp->_delayUS
    _ContrastPWM_init->_SetDuty
    _Command->_SprintDate
    ___lwtoft->___ftpack
    _StringAddEqual->_BufferCopy
    _SprintDate->_sprintf
    _SetDuty->___fttol
    _SetContrast->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lbtoft
    _SetBaud->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _UARTstringWAIT->_UARTchar
    _SetMemoryParity->_GetMemoryParity
    _SetMemoryParity->_WriteEEPROM_1Byte
    _GetMemoryParity->_ReadEEPROM_1Byte
    _SetMemoryBaud->_GetMemoryBaud
    _GetMemoryBaud->_ReadEEPROM_1Byte
    _InitUART->___lldiv
    _Send_Config2->_One_Config2
    _Send_Config2->_Zero_Config2
    _Zero_Config2->_delayUS
    _One_Config2->_delayUS
    _Send_Config1->_One_Config1
    _Send_Config1->_Zero_Config1
    _Send_Config1->_f_Config1
    _f_Config1->_delayUS
    _Zero_Config1->_delayUS
    _One_Config1->_delayUS
    _SET_RTC_TIME->___awdiv
    _I2C_Write_At_Address->_WriteI2C
    _RemoveSpaces->_BufferCopy
    _ResetI2C->_delayUS
    _Init_I2C_Master->_OpenI2C
    _I2C_Read_Sequential->_Multiple_I2C_Read
    _WriteI2C->_IdleI2C
    _LCDdisplayFeedback->_LCDPrintString
    _SetLCDcursor->_SendLCDbyte
    _LCDPrintString->_SendLCDbyte
    _ClearLCD->_SendLCDbyte
    _SendLCDbyte->_delayUS
    _PulseEnablePin->_delayUS
    _LCD_Scroll->_BufferCopy
    _BufferCopy->_cleanBuffer
    _InternalADC_Read->_UARTstring
    _UARTstring->_UARTchar
    _UARTchar->_CheckSum_byte
    _GetEnteredNumber->___lmul

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _Command->_RemoveSpaces
    _Command->_StringAddEqual

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    _main->_Command

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  534332
                                             94 BANK1      3     3      0
                           _ClearLCD
                            _Command
                _ConfigureOscillator
                   _ContrastPWM_init
                  _EnableInternalADC
                            _InitApp
                           _InitUART
                    _Init_I2C_Master
                       _LCDPrintChar
                     _LCDPrintString
                    _LCDScreenUpdate
                           _PWM_init
                           _RTC_INIT
                          _ReadUSART
                        _SetContrast
                            _SetDuty
                          _SetEEPROM
                       _SetLCDcursor
                _SyncEEPROMandGLOBAL
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _init_IR
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             0     0      0   28976
                           _ClearLCD
                     _PulseEnablePin
                        _SendLCDbyte
                            _delayUS
                        _init_Timer1
 ---------------------------------------------------------------------------------
 (2) _init_Timer1                                          0     0      0       0
                       _Start_Timer1
 ---------------------------------------------------------------------------------
 (1) _init_IR                                              0     0      0     295
                          _ReadIRpin
                       _Start_Timer0
                   _cleanBuffer16bit
                        _init_Timer0
 ---------------------------------------------------------------------------------
 (2) _init_Timer0                                          0     0      0       0
                        _Stop_Timer0
 ---------------------------------------------------------------------------------
 (3) _Stop_Timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cleanBuffer16bit                                     8     4      4     295
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Start_Timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SyncEEPROMandGLOBAL                                  9     9      0    3805
                                             68 BANK1      9     9      0
                          _GetEEPROM
 ---------------------------------------------------------------------------------
 (2) _GetEEPROM                                           18     9      9    3703
                                             50 BANK1     18     9      9
                      _GetMemoryBaud
                      _GetMemoryChar
                      _GetMemoryLong
 ---------------------------------------------------------------------------------
 (3) _GetMemoryChar                                        6     2      4    1085
                                             17 BANK1      6     2      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (1) _SetEEPROM                                           17     4     13   11177
                                             67 BANK1     17     4     13
                      _SetMemoryBaud
                      _SetMemoryLong
                    _SetMemoryParity
 ---------------------------------------------------------------------------------
 (2) _SetMemoryLong                                       17    12      5    3926
                                             50 BANK1     17    12      5
                      _GetMemoryLong
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (3) _GetMemoryLong                                       33    29      4    1317
                                             17 BANK1     33    29      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (1) _RTC_INIT                                             0     0      0   25768
                   _InternalADC_Read
                   _RTC_Clock_Enable
               _RTC_TIME_NONMilitary
 ---------------------------------------------------------------------------------
 (2) _RTC_TIME_NONMilitary                                 5     5      0    6934
                                             24 BANK1      5     5      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (2) _RTC_Clock_Enable                                     3     3      0    6866
                                             24 BANK1      3     3      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_At_Address                                  3     1      2     432
                                             16 BANK1      3     1      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0   11941
                            _SetDuty
                            _SetFreq
 ---------------------------------------------------------------------------------
 (2) _SetFreq                                              3     1      2    1267
                                             34 BANK1      3     1      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     428
                                             20 BANK1     14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDScreenUpdate                                      0     0      0   49341
                           _ClearLCD
                       _LCDPrintChar
                     _LCDPrintString
                       _SetLCDcursor
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _LCDPrintChar                                         1     1      0   10064
                                             28 BANK1      1     1      0
                       _Reset_Timer1
                        _SendLCDbyte
                       _Start_Timer1
 ---------------------------------------------------------------------------------
 (3) _Start_Timer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Reset_Timer1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0    4455
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _EnableInternalADC                                    2     2      0     254
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ContrastPWM_init                                     0     0      0   10674
                            _SetDuty
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Command                                            228   226      2  298161
                                             92 BANK1      2     0      2
                                              0 BANK6    226   226      0
                            _GetBaud
                   _GetEnteredNumber
                           _ISNUMBER
                   _InternalADC_Read
                     _LCDPrintString
                         _LCD_Scroll
                 _LCDdisplayFeedback
                         _Parse_Time
                      _READ_RTC_TIME
                       _RemoveSpaces
                       _SET_RTC_TIME
                       _Send_Config1
                       _Send_Config2
                            _SetBaud
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                         _SprintDate
                         _StartsWith
                     _StringAddEqual
                     _StringContains
                        _StringMatch
                         _UARTstring
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwmod
                           ___lwtoft
                        _cleanBuffer
                            _delayUS
                          _lowercase
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercase                                            4     2      2     439
                                             14 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2649
                                             22 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4    3395
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       5     1      4    6170
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     107   105      2   11060
                                             29 BANK1      4     2      2
                                              0 BANK2    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _StartsWith                                           5     1      4    1732
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _SprintDate                                          12     0     12   11386
                                             80 BANK1     12     0     12
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetDuty                                              8     8      0   10674
                                             71 BANK1      8     8      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) _SetContrast                                          8     8      0   10742
                                             71 BANK1      8     8      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2495
                                             22 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     679
                                             56 BANK1     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3682
                                             41 BANK1     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3614
                                             26 BANK1     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2464
                                             14 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _SetBaud                                             56    51      5   41929
                                             80 BANK1      5     0      5
                                              0 BANK2     51    51      0
                           _InitUART
                      _SetMemoryBaud
                    _SetMemoryParity
                         _UARTstring
                     _UARTstringWAIT
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             48    32     16    9932
                                             36 BANK1     44    28     16
                            _GetBaud (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     694
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     386
                                             27 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UARTstringWAIT                                       2     0      2    5980
                                             25 BANK1      2     0      2
                           _UARTchar
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SetMemoryParity                                      2     2      0    3125
                                             18 BANK1      2     2      0
                    _GetMemoryParity
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (3) _GetMemoryParity                                      1     1      0    1054
                                             17 BANK1      1     1      0
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (2) _SetMemoryBaud                                       16    12      4    3647
                                             49 BANK1     16    12      4
                      _GetMemoryBaud
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (3) _WriteEEPROM_1Byte                                    4     1      3    1975
                                             14 BANK1      4     1      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (4) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetMemoryBaud                                       32    28      4    1193
                                             17 BANK1     32    28      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (4) _ReadEEPROM_1Byte                                     3     1      2    1020
                                             14 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitUART                                            17    12      5    1882
                                             27 BANK1     17    12      5
                          _OpenUSART
                          _ReadUSART
                            ___lldiv
                          _baudUSART
 ---------------------------------------------------------------------------------
 (2) _baudUSART                                            1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     857
                                             14 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (1) _ReadUSART                                            1     1      0      34
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     387
                                             14 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Send_Config2                                         6     4      2   20029
                                             25 BANK1      6     4      2
                        _One_Config2
                       _Zero_Config2
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config2                                         1     1      0    4517
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config2                                          1     1      0    4517
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _Send_Config1                                         6     4      2   20159
                                             25 BANK1      6     4      2
                        _One_Config1
                       _Zero_Config1
                            _delayUS
                          _f_Config1
 ---------------------------------------------------------------------------------
 (3) _f_Config1                                            1     1      0    4579
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config1                                         1     1      0    4579
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config1                                          1     1      0    4579
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SET_RTC_TIME                                        21    12      9    5638
                                             22 BANK1     21    12      9
               _I2C_Write_At_Address
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1357
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1369
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_At_Address                                 5     3      2    1664
                                             16 BANK1      5     3      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _RemoveSpaces                                       106   104      2   10151
                                             29 BANK1      3     1      2
                                              0 BANK2    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _READ_RTC_TIME                                        8     8      0    5938
                                             24 BANK1      8     8      0
                _I2C_Read_Sequential
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _ResetI2C                                             0     0      0    4696
                    _Init_I2C_Master
                            _delayUS
 ---------------------------------------------------------------------------------
 (4) _Init_I2C_Master                                      2     2      0     241
                                             16 BANK1      2     2      0
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (5) _OpenI2C                                              2     1      1     139
                                             14 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Sequential                                  5     1      4     667
                                             17 BANK1      5     1      4
                            _IdleI2C
                  _Multiple_I2C_Read
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             1     1      0      31
                                             15 BANK1      1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Multiple_I2C_Read                                    3     0      3     250
                                             14 BANK1      3     0      3
                            _readI2C
 ---------------------------------------------------------------------------------
 (5) _readI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Parse_Time                                          13    11      2    2693
                                             14 BANK1     13    11      2
 ---------------------------------------------------------------------------------
 (2) _LCDdisplayFeedback                                   2     0      2   40001
                                             32 BANK1      2     0      2
                           _ClearLCD
                     _LCDPrintString
                       _SetLCDcursor
 ---------------------------------------------------------------------------------
 (1) _SetLCDcursor                                         3     2      1   13418
                                             28 BANK1      3     2      1
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _LCDPrintString                                       4     2      2   13131
                                             28 BANK1      4     2      2
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _ClearLCD                                             0     0      0   10033
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _SendLCDbyte                                          4     3      1   10033
                                             24 BANK1      4     3      1
                     _PulseEnablePin
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _PulseEnablePin                                       0     0      0    4455
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _delayUS                                             10     6      4    4455
                                             14 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Scroll                                           2     0      2   10679
                                             29 BANK1      2     0      2
                         _BufferCopy
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    7058
                                             22 BANK1      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    2695
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     5     3      2   11968
                                             29 BANK1      5     3      2
                         _UARTstring
 ---------------------------------------------------------------------------------
 (1) _UARTstring                                           4     2      2   11906
                                             25 BANK1      4     2      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (2) _UARTchar                                             4     2      2    1124
                                             21 BANK1      4     2      2
                      _CheckSum_byte
 ---------------------------------------------------------------------------------
 (3) _CheckSum_byte                                        7     4      3     546
                                             14 BANK1      7     4      3
 ---------------------------------------------------------------------------------
 (2) _ISNUMBER                                             1     1      0      62
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetEnteredNumber                                    15    11      4    1293
                                             26 BANK1     15    11      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             14 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _GetBaud                                              4     0      4       0
                                             14 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                            142   142      0   28263
                                              0 BANK0    142   142      0
                         _IRrawToNEC
                   _IsPrintableASCII
                       _Reset_Timer0
                          _UseIRCode
                       i1_BufferCopy
                         i1_ClearLCD
                     i1_LCDPrintChar
                   i1_LCDPrintString
                  i1_LCDScreenUpdate
                        i1_ReadIRpin
                        i1_ReadUSART
                     i1_SetLCDcursor
                         i1_UARTchar
                       i1_UARTstring
                      i1_cleanBuffer
                 i1_cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (8) i1_cleanBuffer16bit                                   8     4      4     143
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_ReadUSART                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadIRpin                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_LCDScreenUpdate                                    0     0      0    8111
                         i1_ClearLCD
                     i1_LCDPrintChar
                   i1_LCDPrintString
                     i1_SetLCDcursor
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_SetLCDcursor                                       3     2      1    2232
                                             14 COMRAM     3     2      1
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (9) i1_LCDPrintString                                     4     2      2    2155
                                             14 COMRAM     4     2      2
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (9) i1_LCDPrintChar                                       1     1      0    1321
                                             14 COMRAM     1     1      0
                     i1_Reset_Timer1
                      i1_SendLCDbyte
                     i1_Start_Timer1
 ---------------------------------------------------------------------------------
 (10) i1_Start_Timer1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_Reset_Timer1                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_ClearLCD                                           0     0      0    1290
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (9) i1_SendLCDbyte                                        4     3      1    1290
                                             10 COMRAM     4     3      1
                   i1_PulseEnablePin
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_PulseEnablePin                                    0     0      0     381
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (8) i1_BufferCopy                                         7     1      6    1724
                                              8 COMRAM     7     1      6
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_cleanBuffer                                        8     4      4    1113
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _UseIRCode                                          108   102      6    5786
                                             70 COMRAM     8     2      6
                        _ReadButton1
                        i1_SetEEPROM
                       i1_UARTstring
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_delayUS                                          10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) i1_UARTstring                                         4     2      2    1042
                                             11 COMRAM     4     2      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (9) i1_UARTchar                                           4     2      2     704
                                              7 COMRAM     4     2      2
                    i1_CheckSum_byte
 ---------------------------------------------------------------------------------
 (10) i1_CheckSum_byte                                     7     4      3     378
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (9) i1_SetEEPROM                                         17     4     13    3832
                                             53 COMRAM    17     4     13
                    i1_SetMemoryBaud
                    i1_SetMemoryLong
                  i1_SetMemoryParity
 ---------------------------------------------------------------------------------
 (10) i1_SetMemoryParity                                   2     2      0     948
                                              4 COMRAM     2     2      0
                  i1_GetMemoryParity
                i1_WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (11) i1_GetMemoryParity                                   1     1      0     324
                                              3 COMRAM     1     1      0
                 i1_ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (10) i1_SetMemoryLong                                    17    12      5    1449
                                             36 COMRAM    17    12      5
                    i1_GetMemoryLong
                i1_WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (11) i1_GetMemoryLong                                    33    29      4     505
                                              3 COMRAM    33    29      4
                 i1_ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (10) i1_SetMemoryBaud                                    16    12      4    1225
                                             35 COMRAM    16    12      4
                    i1_GetMemoryBaud
                i1_WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (11) i1_WriteEEPROM_1Byte                                 4     1      3     557
                                              0 COMRAM     4     1      3
                    i1_EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (12) i1_EEPROM_UNLOCK                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_GetMemoryBaud                                    32    28      4     417
                                              3 COMRAM    32    28      4
                 i1_ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (12) i1_ReadEEPROM_1Byte                                  3     1      2     301
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (9) _ReadButton1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Reset_Timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IsPrintableASCII                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _IRrawToNEC                                          15    10      5    1512
                                              0 COMRAM    15    10      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _high_isr                                           14    14      0       0
                                              0 BANK1     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _Command
     _GetBaud
     _GetEnteredNumber
       ___lmul
     _ISNUMBER
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCD_Scroll
       _BufferCopy
         _cleanBuffer
     _LCDdisplayFeedback
       _ClearLCD
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _LCDPrintString
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _SetLCDcursor
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
     _Parse_Time
     _READ_RTC_TIME
       _I2C_Read_Sequential
         _IdleI2C
         _Multiple_I2C_Read
           _readI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RemoveSpaces
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _SET_RTC_TIME
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       ___awdiv
       ___awmod
     _Send_Config1
       _One_Config1
         _delayUS
       _Zero_Config1
         _delayUS
       _delayUS
       _f_Config1
         _delayUS
     _Send_Config2
       _One_Config2
         _delayUS
       _Zero_Config2
         _delayUS
       _delayUS
     _SetBaud
       _InitUART
         _OpenUSART
         _ReadUSART
         ___lldiv
         _baudUSART
       _SetMemoryBaud
         _GetMemoryBaud
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _SetMemoryParity
         _GetMemoryParity
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _UARTstring
         _UARTchar
           _CheckSum_byte
       _UARTstringWAIT
         _UARTchar
           _CheckSum_byte
         _delayUS
       _delayUS
       _sprintf
         _GetBaud (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _SetContrast
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SprintDate
       _sprintf
         _GetBaud (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _StartsWith
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringMatch
     _UARTstring
       _UARTchar
         _CheckSum_byte
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwmod
     ___lwtoft
       ___ftpack
     _cleanBuffer
     _delayUS
     _lowercase
     _sprintf
       _GetBaud (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
   _ConfigureOscillator
   _ContrastPWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
   _EnableInternalADC
   _InitApp
     _delayUS
   _InitUART
     _OpenUSART
     _ReadUSART
     ___lldiv
     _baudUSART
   _Init_I2C_Master
     _OpenI2C
   _LCDPrintChar
     _Reset_Timer1
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
     _Start_Timer1
   _LCDPrintString
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDScreenUpdate
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintChar
       _Reset_Timer1
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
       _Start_Timer1
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _cleanBuffer
   _PWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetFreq
       ___aldiv
         ___wmul (ARG)
       ___wmul
   _RTC_INIT
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _RTC_Clock_Enable
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RTC_TIME_NONMilitary
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
   _ReadUSART
   _SetContrast
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetDuty
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetEEPROM
     _SetMemoryBaud
       _GetMemoryBaud
         _ReadEEPROM_1Byte
       _WriteEEPROM_1Byte
         _EEPROM_UNLOCK
     _SetMemoryLong
       _GetMemoryLong
         _ReadEEPROM_1Byte
       _WriteEEPROM_1Byte
         _EEPROM_UNLOCK
     _SetMemoryParity
       _GetMemoryParity
         _ReadEEPROM_1Byte
       _WriteEEPROM_1Byte
         _EEPROM_UNLOCK
   _SetLCDcursor
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _SyncEEPROMandGLOBAL
     _GetEEPROM
       _GetMemoryBaud
         _ReadEEPROM_1Byte
       _GetMemoryChar
         _ReadEEPROM_1Byte
       _GetMemoryLong
         _ReadEEPROM_1Byte
   _UARTstring
     _UARTchar
       _CheckSum_byte
   _cleanBuffer
   _delayUS
   _init_IR
     _ReadIRpin
     _Start_Timer0
     _cleanBuffer16bit
     _init_Timer0
       _Stop_Timer0
   _init_LCD
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _PulseEnablePin
       _delayUS
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
     _delayUS
     _init_Timer1
       _Start_Timer1

 _low_isr (ROOT)
   _IRrawToNEC
   _IsPrintableASCII
   _Reset_Timer0
   _UseIRCode
     _ReadButton1
     i1_SetEEPROM
       i1_SetMemoryBaud
         i1_GetMemoryBaud
           i1_ReadEEPROM_1Byte
         i1_WriteEEPROM_1Byte
           i1_EEPROM_UNLOCK
       i1_SetMemoryLong
         i1_GetMemoryLong
           i1_ReadEEPROM_1Byte
         i1_WriteEEPROM_1Byte
           i1_EEPROM_UNLOCK
       i1_SetMemoryParity
         i1_GetMemoryParity
           i1_ReadEEPROM_1Byte
         i1_WriteEEPROM_1Byte
           i1_EEPROM_UNLOCK
     i1_UARTstring
       i1_UARTchar
         i1_CheckSum_byte
     i1_delayUS
   i1_BufferCopy
     i1_cleanBuffer
   i1_ClearLCD
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintChar
     i1_Reset_Timer1
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
     i1_Start_Timer1
   i1_LCDPrintString
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDScreenUpdate
     i1_ClearLCD
       i1_SendLCDbyte
         i1_PulseEnablePin
           i1_delayUS
         i1_delayUS
     i1_LCDPrintChar
       i1_Reset_Timer1
       i1_SendLCDbyte
         i1_PulseEnablePin
           i1_delayUS
         i1_delayUS
       i1_Start_Timer1
     i1_LCDPrintString
       i1_SendLCDbyte
         i1_PulseEnablePin
           i1_delayUS
         i1_delayUS
     i1_SetLCDcursor
       i1_SendLCDbyte
         i1_PulseEnablePin
           i1_delayUS
         i1_delayUS
     i1_cleanBuffer
   i1_ReadIRpin
   i1_ReadUSART
   i1_SetLCDcursor
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_UARTchar
     i1_CheckSum_byte
   i1_UARTstring
     i1_UARTchar
       i1_CheckSum_byte
   i1_cleanBuffer
   i1_cleanBuffer16bit

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100     E2      E2      17       88.3%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      64      15       39.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      F4      13       95.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      A8      11       65.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100     67      77       9       46.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     61      CD       7       80.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      99       5       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4E      5F       1      100.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     51E      20        0.0%
DATA                 0      0     51E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Mar 13 14:57:27 2015

                      BufferCopy@shift 0181               __size_of_GetMemoryParity 001E  
                    i1LCDPrintString@c 0011                       ?i1_EEPROM_UNLOCK 0001  
              __size_of_StringContains 0080                           _Zero_Config1 7AFC  
                         _Zero_Config2 0A9E                            _SSPSTATbits 000FC7  
                          ?_LCD_Scroll 0183                    ??i1_GetMemoryParity 0004  
                         ___awdiv@sign 0179                                     bsr 000FE0  
                  ___wmul@multiplicand 0176                            __CFG_BORV$3 000000  
                         __CFG_CP0$OFF 000000                           __CFG_CP1$OFF 000000  
                         __CFG_CP2$OFF 000000                           __CFG_CP3$OFF 000000  
                         __CFG_CP4$OFF 000000                           __CFG_CP5$OFF 000000  
                                  l404 064A                                    l500 7DB2  
                                  l501 7DBE                                    l406 0654  
                                  l502 7DC0                                    l407 067A  
                                  l512 78B6                                    l513 78BA  
                                  l249 1152                                    l530 0D00  
                                  l515 78FA                                    l523 74A4  
                                  l284 7FC6                                    l532 0D08  
                                  l533 0D10                                    l286 7FB0  
                                  l542 7E1E                                    l390 52AE  
                                  l721 07C0                                    l706 03D0  
                                  l485 56F0                                    l557 4D0E  
                                  l821 22C4                                    l495 7D90  
                                  l499 7DB0                                    l685 26F8  
                                  l980 059C                           __CFG_CPB$OFF 000000  
                                  _PR2 000FCB                           __CFG_CPD$OFF 000000  
                   _TXToiletMyBathroom ED45                   i1LCDPrintString@Text 000F  
                                  _buf 0400                             _IRrawToNEC 45CA  
                           _IRrawCount 00EE                           ___awmod@sign 0179  
                       i1_Start_Timer1 1158                                    prod 000FF3  
          __size_ofi1_ReadEEPROM_1Byte 0032                                    wreg 000FE8  
                      _LCDScreenUpdate 3D50                SyncEEPROMandGLOBAL@Temp 01AA  
                     ??i1_SetLCDcursor 0010                         SetContrast@LSB 01B1  
                       SetContrast@MSB 01B0                          Send_Config1@i 0183  
                        Send_Config2@i 0184                           __CFG_LVP$OFF 000000  
                         ___ftdiv@cntr 0189                        ??i1_SendLCDbyte 000C  
                         ___ftdiv@sign 018E                           __CFG_WDT$OFF 000000  
                                 l1007 0DDA                                   l1400 6BAE  
                                 l1250 39E6                                   l1242 3938  
                                 l1218 4A74                                   l1147 41D2  
                                 l1420 5C8C                                   l1501 616E  
                                 l1421 5C7C                                   l1414 5D3E  
                                 l1406 5C26                                   l1271 3BD8  
                                 l1263 3B2A                                   l1415 5C66  
                                 l1520 61AC                                   l1512 6190  
                                 l1504 6176                                   l1440 5CE2  
                                 l1432 5CD0                                   l1424 5D1C  
                                 l1416 5C56                                   l1433 5CC0  
                                 l1425 5C94                                   l1409 5C2E  
                RTC_Clock_Enable@Error 0180                                   l1258 3A80  
                                 l1507 617E                                   l1443 5CEA  
                                 l1419 5D2A                                   l1516 619E  
                                 l1380 6B68                                   l2500 7F16  
                                 l1436 5D06                                   l1428 5C9C  
                                 l1349 7F48                                   l1381 6B60  
                                 l1437 5CD8                                   l1358 7F72  
                                 l1470 60C8                                   l1390 6B8C  
                                 l1374 6BA2                                   l1366 6AFE  
                                 l2350 5BE0                                   l1462 5D2E  
                                 l1454 5D0A                                   l1446 5CF2  
                                 l1279 3C72                                   l1527 06A2  
                                 l1375 6B4A                                   l1199 0540  
                                 l1544 0F78                                   l1536 06D2  
                                 l1480 61A8                                   l1384 6B88  
                                 l1376 6B42                                   l1289 3D2E  
                                 l1545 0F7C                                   l1481 6112  
                                 l1369 6B06                                   l1449 5CFA  
                                 l1482 610A                                   l1394 6B9A  
                                 l1386 6B7E                                   l1458 5D20  
                                 l1467 60C0                                   l1379 6B96  
                                 l2427 6E04                                   l1492 6142  
                                 l1476 60F4                                   l1580 1032  
                                 l1493 613A                                   l1485 619A  
                                 l1477 60EC                                   l1397 6BA6  
                                 l1573 0BBA                                   l2437 7436  
                                 l1486 611A                                   l2286 607A  
                                 l1496 618C                                   l1497 6160  
                                 l1489 6122                                   l1498 6166  
                                 l1586 0A88                                   l1861 2976  
                                 l1837 27A0                                   l1935 307A  
                                 l1919 2F4C                                   l1880 2BA0  
                                 l9251 10F6                                   l9261 071E  
                                 l9257 06FA                                   l8831 5DBC  
                                 l8833 5DCE                                   l8825 5D8E  
                                 l8851 5E60                                   l8843 5E2E  
                                 l8835 5DD8                                   l8819 5D6E  
                                 l8847 5E42                                   STR_1 FFFC  
                                 STR_2 F94E                                   STR_3 FFFC  
                                 STR_4 F4D1                                   STR_5 F280  
                                 STR_6 F813                                   STR_7 F6CE  
                                 STR_8 F022                                   STR_9 FCC5  
              EnableInternalADC@config 0174                  ??_I2C_Read_At_Address 0178  
                                 _LATA 000F89                                   _LATC 000F8B  
                                 _LATD 000F8C                                   _LATE 000F8D  
                                 _PIE1 000F9D                                   i1l74 0302  
                  _SyncEEPROMandGLOBAL 0BD6              __end_ofi1_GetMemoryParity 107E  
                         __CFG_PWRT$ON 000000                             i1delayUS@i 0006  
                           i1delayUS@j 000A                          ?_LCDPrintChar 0001  
           WriteEEPROM_1Byte@GIEstatus 0177                                   _main 33AC  
                   UARTstringWAIT@data 017F                           ___ftpack@arg 0174  
                         ___ftpack@exp 0177                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   indf0 000FEF  
                                 fsr0l 000FE9                                   fsr2h 000FDA  
                                 indf1 000FE7                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                     ??_PulseEnablePin 017E                    baudUSART@baudconfig 0174  
                                 pclat 000FFA                __end_of_Init_I2C_Master 08EE  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 04E8                    i1_WriteEEPROM_1Byte 0C46  
                      __end_of_Aux2OFF EDA9                          __CFG_IESO$OFF 000000  
                      Command@BAUDtemp 06CE                        __end_of_IdleI2C 10BC  
                      __end_of_GetBaud 10CE                      ?_GetEnteredNumber 0180  
                         _sprintf$3083 01A5                           _sprintf$3076 01A1  
                         _sprintf$3077 01A3             __size_of_Multiple_I2C_Read 0062  
                        __CFG_MCLRE$ON 000000                           ___ftmul@cntr 019C  
                      __end_of_Command 270E                         UARTstring@data 017F  
                          ?i1_UARTchar 0008                           ___param_bank 000001  
                         ___ftmul@sign 019D                        __end_of_TXdataD EE45  
                      __end_of_TXdataE EE51                        __end_of_TXdataF EE5D  
                        ??_ReadButton1 0001                        __end_of_InitApp 07A6  
                   ??_GetEnteredNumber 0184                        SetContrast@Duty 01B4  
                      __end_of_OpenI2C 0F64               I2C_Write_At_Address@data 0177  
                      __end_of_SetBaud 4E54                           ___fttol@exp1 01AC  
               __size_of_READ_RTC_TIME 00EA                           ___fttol@lval 01A8  
                      __end_of_SetFreq 0852                        __end_of_SetDuty 70F6  
                 ?_SyncEEPROMandGLOBAL 0001                        SetContrast@temp 01B2  
                         f_Config1@pin 017E      i1UARTchar@NinethBit_override_data 0009  
      UARTchar@NinethBit_override_data 017C                           ?_init_Timer0 0001  
                         ?_init_Timer1 0001                      IRrawToNEC@NECtemp 0008  
                       _LCDPrintString 7C6A               i1GetMemoryBaud@BaudTempH 0020  
             i1GetMemoryBaud@BaudTempL 0023                                  l13001 2DA4  
                                l12213 10AA                                  l13021 2E6A  
                                l13013 2E12                                  l12303 07D4  
                                l12311 08D0                                  l13015 2E1E  
                                l13007 2DDA                                  l10711 72D2  
                                l10703 72B4                                  l12313 08DC  
                                l13121 3242                                  l13113 314C  
                                l13041 2F44                                  l13033 2F06  
                                l14001 52BA                                  l10721 72F8  
                                l12171 0662                                  l12163 0640  
                                l12147 7FA0                                  l12411 6652  
                                l12331 7D86                                  l12323 7D70  
                                l13123 3250                                  l13115 31D0  
                                l13131 3304                                  l13107 312C  
                                l13035 2F12                                  l13027 2EC2  
                                l14003 52D6                                  l10715 72E0  
                                l10707 72C4                                  l12157 7FB8  
                                l12149 7FA6                                  l13301 6B14  
                                l13133 3310                                  l13125 327E  
                                l13109 3138                                  l13029 2ECE  
                                l14013 531E                                  l12423 6670  
                                l12415 665C                                  l12343 7DA6  
                                l12335 7D94                                  l12327 7D7C  
                                l13135 3318                                  l13047 2F60  
                                l13063 2FD4                                  l13071 300A  
                                l14103 4E10                                  l14023 534E  
                                l14007 52E4                                  l10719 72F2  
                                l12425 6676                                  l14201 7954  
                                l13129 32E4                                  l13081 3046  
                                l13065 2FE0                                  l13057 2FB8  
                                l13145 3376                                  l14105 4E2A  
                                l14033 53B2                                  l14009 52EC  
                                l12179 0676                                  l12283 788A  
                                l12291 78D8                                  l12419 6666  
                                l12451 7F56                                  l14203 795E  
                                l12611 6D9A                                  l13139 334C  
                                l13091 3090                                  l13075 301C  
                                l13059 2FC4                                  l13147 339C  
                                l14107 4E3C                                  l14019 5344  
                                l10691 728A                                  l10683 726E  
                                l13243 5C36                                  l12189 0684  
                                l12285 789E                                  l12293 78F0  
                                l14221 0582                                  l14141 4F30  
                                l14133 4ED0                                  l12381 65FC  
                                l12701 7C74                                  l14301 3934  
                                l12437 7F30                                  l13085 3072  
                                l14061 4C6A                                  l14029 53AC  
                                l15101 0208                                  l14047 0FBC  
                                l12391 6614                                  l12383 6600  
                                l12455 7F5A                                  l14207 7964  
                                l12607 6D7E                                  l13175 6942  
                                l12631 73DC                                  l14055 4BE0  
                                l13503 55BE                                  l10695 7298  
                                l10687 727C                                  l13247 5C40  
                                l13441 7C2C                                  l12289 78BE  
                                l14161 5020                                  l14153 4FC0  
                                l14145 4F60                                  l14137 4F00  
                                l14129 4EA0                                  l12705 7CA8  
                                l14321 398C                                  l14313 3958  
                                l12473 7F86                                  l13409 61B6  
                                l13361 60D6                                  l13337 6BBA  
                                l13601 6FE2                                  l12609 6D90  
                                l13097 30D4                                  l12801 2754  
                                l14057 4C0E                                  l14065 4C98  
                                l13521 562E                                  l15201 0866  
                                l15033 71EA                                  l12299 07B4  
                                l12715 6EF2                                  l12395 661E  
                                l12387 660A                                  l14403 3B12  
                                l12491 06C2                                  l13355 60D0  
                                l14251 685A                                  l13603 6FEC  
                                l13611 7022                                  l14171 6962  
                                l12619 6DF0                                  l13187 0CE2  
                                l12635 7422                                  l12627 73C0  
                                l12555 0E34                                  l12803 275A  
                                l12811 2774                                  l14059 4C3C  
                                l14067 4CB2                                  l13451 5B02  
                                l13531 5672                                  l10699 72A6  
                                l13267 5CAC                                  l13437 7C04  
                                l14157 4FF0                                  l14149 4F90  
                                l14325 3990                                  l14309 3954  
                                l12469 7F82                                  l14253 6860  
                                l14181 69E0                                  l12629 73D2  
                                l12901 2A86                                  l12805 2760  
                                l14093 4DC8                                  l14085 4D7E  
                                l14069 4CE0                                  l12581 6028  
                                l12573 5FC4                                  l13525 564A  
                                l13517 560E                                  l15213 093C  
                                l15117 0290                                  l15109 024C  
                                l15045 7244                                  l12727 6F1A  
                                l12735 6F58                                  l12719 6F00  
                                l12399 6628                                  l14431 3B82  
                                l14415 3B46                                  l14407 3B26  
                                l14351 3A06                                  l14335 39CE  
                                l12487 06AE                                  l12479 068C  
                                l12495 06DA                                  l13615 7038  
                                l13607 7012                                  l14175 699C  
                                l14167 6958                                  l12815 27AC  
                                l12807 2766                                  l14095 4DDA  
                                l12591 6086                                  l12583 605A  
                                l12575 5FD4                                  l13535 568E  
                                l13527 5652                                  l14263 650A  
                                l15119 02B4                                  l13279 5D0E  
                                l15039 720E                                  l14441 3BC0  
                                l13561 6A84                                  l13553 6A58  
                                l14185 69E6                                  l14193 7910  
                                l12905 2AA0                                  l12913 2AC0  
                                l14097 4DEC                                  l12585 606A  
                                l12577 6006                                  l12569 5FAE  
                                l13457 5B3C                                  l13625 59B0  
                                l14265 6554                                  l15401 1476  
                                l15313 0FE8                                  l15225 0A24  
                                l15145 0476                                  l15129 0358  
                                l15065 00B8                                  l12683 74AC  
                                l12691 0B30                                  l14515 3CF8  
                                l14427 3B7E                                  l14419 3B4A  
                                l14363 3A3E                                  l14347 3A02  
                                l14339 39E2                                  l14283 38DE  
                                l14275 38AA                                  l13571 6AC0  
                                l13563 6A8E                                  l13547 6A40  
                                l14179 69D6                                  l12923 2B58  
                                l12915 2B16                                  l12835 288A  
                                l12819 27D0                                  l12827 2852  
                                l14099 4DFE                                  l13643 5A44  
                                l13811 7A42                                  l15315 100C  
                                l15251 0BF6                                  l15171 0658  
                                l12693 0B38                                  l14453 3BF4  
                                l14445 3BD4                                  l14381 3A9C  
                                l14373 3A7C                                  l13397 6194  
                                l14197 791A                                  l12941 2BEC  
                                l12909 2AB8                                  l12861 2972  
                                l12853 293A                                  l12597 60A4  
                                l13477 5B9E                                  l13661 5AB4  
                                l13653 5A76                                  l15405 14A0  
                                l15341 1194                                  l15333 1128  
                                l15325 10B0                                  l15237 0AFA  
                                l15157 054C                                  l15181 070C  
                                l15093 01C2                                  l15085 017E  
                                l15077 013A                                  l16141 3478  
                                l12679 7448                                  l14527 3D2A  
                                l14359 3A3A                                  l14287 38E2  
                                l13559 6A76                                  l13575 6AD0  
                                l13591 6FAE                                  l12759 56EC  
                                l12783 7DD0                                  l12927 2B80  
                                l12863 297C                                  l12847 28E2  
                                l12855 2956                                  l13487 5BF2  
                                l13655 5A88                                  l13647 5A58  
                                l13815 7A46                                  l13807 7A06  
                                l15431 15E0                                  l15415 1514  
                                l15423 1578                                  l15263 0CCA  
                                l16135 341C                                  l13905 50BE  
                                l14465 3C2C                                  l14457 3BF8  
                                l14393 3AD4                                  l14297 3920  
                                l12961 2C72                                  l12953 2C2A  
                                l12937 2BC2                                  l12873 29CC  
                                l12857 2966                                  l12849 28EE  
                                l12793 271E                                  l13497 5584  
                                l13657 5A96                                  l13841 79AE  
                                l13833 7988                                  l13817 7A54  
                                l15505 1A4C                                  l15353 1220  
                                l15345 11A4                                  l15337 1158  
                                l15249 0BD2                                  l15169 0634  
                                l16233 3798                                  l16153 34CA  
                                l13931 5128                                  l13579 6AE6  
                                l13595 6FC0                                  l14571 4A9A  
                                l14555 49F6                                  l14547 4992  
                                l12971 2CC6                                  l12963 2C78  
                                l12947 2C16                                  l12883 29F6  
                                l12891 2A32                                  l12875 29D8  
                                l12859 296C                                  l13851 79F0  
                                l13827 7A7C                                  l15523 1B26  
                                l15451 16CC                                  l15443 166E  
                                l15435 161C                                  l14803 3E02  
                                l16243 37CC                                  l13925 5112  
                                l14469 3C30                                  l14389 3AD0  
                                l12789 7E26                                  l12981 2CE2  
                                l12957 2C6A                                  l12949 2C1C  
                                l12885 2A10                                  l12869 29A6  
                                l15525 1B6C                                  l15357 124A  
                                l15349 11E6                                  l15285 0E24  
                                l15269 0D24                                  l15189 0784  
                                l14813 3E64                                  l14901 41BA  
                                l14629 0548                                  l16237 37A6  
                                l16157 34D4                                  l13943 51D0  
                                l13919 50FA                                  l14495 3CB8  
                                l14487 3C8E                                  l14479 3C6E  
                                l13599 6FD4                                  l12975 2CCE  
                                l12967 2C86                                  l12991 2D2A  
                                l12895 2A54                                  l12879 29E2  
                                l12799 273E                                  l13847 79C2  
                                l14671 7EC8                                  l15711 2560  
                                l15703 251C                                  l15607 1FF6  
                                l15447 1698                                  l15439 162C  
                                l15367 12BE                                  l14823 3EC6  
                                l14663 63AE                                  l13953 5214  
                                l13945 51D8                                  l12985 2D22  
                                l12977 2CD4                                  l12993 2D4A  
                                l13873 779E                                  l14673 7ED6  
                                l15721 25C6                                  l15609 2018  
                                l15617 209A                                  l15561 1CC8  
                                l15545 1C20                                  l15529 1B8A  
                                l15537 1BBA                                  l15393 13FA  
                                l15385 13AE                                  l15369 12E2  
                                l15377 1346                                  l14833 3F28  
                                l16265 3814                                  l16169 350E  
                                l14499 3CBE                                  l13963 764E  
                                l13971 768A                                  l14595 4BC6  
                                l14587 4B62                                  l14579 4AFE  
                                l12899 2A68                                  l13859 7756  
                                l13875 77AC                                  l14675 7EE0  
                                l15715 2582                                  l15707 253E  
                                l15723 25D8                                  l15643 2298  
                                l15563 1CDC                                  l15459 1744  
                                l15475 17EA                                  l15483 186E  
                                l15299 0F06                                  l14843 3F8A  
                                l16267 381A                                  l16259 37F8  
                                l16187 358A                                  l13949 51F6  
                                l13893 5072                                  l12997 2D72  
                                l13869 7798                                  l15717 2596  
                                l15637 2234                                  l15565 1D06  
                                l15397 143C                                  l15389 13EA  
                                l14853 3FEC                                  l16277 385E  
                                l13895 507A                                  l13887 77E2  
                                l14679 7F06                                  l13983 7844  
                                l15743 26B0                                  l15639 227A  
                                l15567 1D1A                                  l14863 404E  
                                l13969 7682                                  l13993 5256  
                                l13977 77F0                                  l13985 784A  
                                l15745 26B4                                  l15737 2654  
                                l14873 40B0                                  l14961 0DD6  
                                l13899 509C                                  l15747 26D6  
                                l15667 2360                                  l15595 1F10  
                                l15579 1DEE                                  l14883 4112  
                                l14795 3DD4                                  l14779 3D80  
                                l13997 5290                                  l15685 245C  
                                l15677 23E4                                  l15669 2374  
                                l14893 4174                                  l13999 52B4  
                                l15689 2488                                  l15699 24FA  
                      __end_of___aldiv 5E74                                  ?_main 0001  
             __size_ofi1_CheckSum_byte 004C                 __size_ofi1_cleanBuffer 003E  
                      __end_of___awdiv 6AF2                                  _EEADR 000FA9  
                          ?i1_ClearLCD 0001                                  STR_10 FEE9  
                                STR_11 FDAB                                  STR_12 FE7C  
                                STR_20 FE72                                  STR_13 FDF9  
                                STR_21 F4B6                                  STR_14 FDAB  
                                STR_22 F4CF                                  STR_30 F800  
                                STR_31 F076                                  STR_15 FD62  
                                STR_23 F058                                  STR_32 F00A  
                                STR_40 FFBD                                  STR_16 FCB7  
                                STR_24 EFEC                                  STR_33 F1A2  
                                STR_41 FD21                                  STR_17 FC1C  
                                STR_25 F184                 __end_ofi1_Start_Timer1 1160  
                                STR_34 F172                                  STR_42 FD21  
                                STR_50 FD2E                                  STR_18 FB49  
                                STR_26 F154                                  STR_35 F0AB  
                                STR_51 FD2E                                  STR_43 FF2A  
                                STR_19 F9D8                                  STR_27 F08D  
                                STR_36 EEE7                                  STR_28 F6CE  
                                STR_52 FF32                                  STR_44 FF1A  
                                STR_60 F8FB                        __end_of___awmod 7044  
                                STR_37 F4D1                                  STR_45 FF1A  
                                STR_53 FF22                                  STR_61 FDB7  
                                STR_29 F6FD                                  STR_38 FF71  
                                STR_54 FF22                                  STR_62 FF60  
                                STR_46 FEB3                                  STR_70 FDEE  
                                STR_71 FA17                                  STR_39 FA17  
                                STR_63 FEF2                                  STR_55 FEBC  
                                STR_47 FEA1                                  STR_48 FEA1  
                                STR_56 FEAA                                  STR_72 F7ED  
                                STR_80 F7C7                                  STR_64 EEEB  
                                STR_57 FEAA                                  STR_49 FFC7  
                                STR_81 FBA4                                  STR_65 F92E  
                                STR_73 F779                                  STR_58 FA3D  
                                STR_66 FEE0                                  STR_90 FB29  
                                STR_82 F7A1                                  STR_74 F615  
                                STR_59 FA3D                                  STR_67 FE8F  
                                STR_91 FCA9                                  STR_75 FA79  
                                STR_83 FA09                                  STR_92 FE8F  
                                STR_68 FFB8                                  STR_76 F972  
                                STR_84 F62E                                  STR_85 FDB7  
                                STR_69 FFC2                                  STR_93 FFA7  
                                STR_77 F892                                  STR_94 FFEC  
                                STR_86 FF02                                  STR_78 FC71  
                                STR_87 FF52                                  STR_95 FF12  
                                STR_79 F85C                                  STR_88 EEEB  
                                STR_96 FA17                                  STR_97 FFAD  
                                STR_89 F57A                                  STR_98 FFF0  
                                STR_99 FB09                        __end_of___ftdiv 5C1A  
                     __end_of_ISNUMBER 0FC2                        __end_of___lldiv 6E16  
                      __end_of___ftmul 56B6                                  u20140 24BE  
                      ___awdiv@divisor 0176                                  u20061 21B4  
                                u20151 24D6                        __end_of___llmod 7448  
                                u20260 2690                        __end_of___fttol 5AC8  
                                _T2CON 000FCA                ReadEEPROM_1Byte@address 0174  
                                u20820 33FE                                  u20841 343E  
                                u16301 3108                                  u16150 2EB6  
                                u17111 5560                                  u15520 746A  
                                u15600 7C9C                                  u17131 559A  
                                u15540 749E                                  u15620 7CD6  
                                u17061 5ADE                                  u15710 5762  
                                u17310 59D6                                  u15527 7460  
                                u15607 7C92                                  u15560 74E4  
                                u17081 5B18                                  u15547 7494  
                                u15627 7CCC                                  u15715 5756  
                                u17315 59CC                                  u15660 6F44  
                                u16380 68A0                                  u15670 6F7A  
                                u15567 74DA                                  u16385 6894  
                                u19041 3D98                                  u15667 6F3A  
                                u17291 598C                                  u15677 6F70  
                                u19181 0BE0                                  i1l100 04A0  
                                i1l101 0462                                  i1l110 0484  
                                i1l112 048E                                  u18665 4A00  
                                u18761 0894                                  i1l114 049C  
                                u18770 62F2                                  u18775 62E6  
                                u19760 1452                                  u19680 11FC  
                                u19921 1A8A                                  i1l404 09A4  
                                i1l407 09C6                                  i1l512 7D14  
                                i1l513 7D18                        __end_of___lwmod 7F20  
                                i1l530 0D66                                  i1l515 7D54  
                                i1l523 7716                                  u19971 1C56  
                                i1l284 091E                                  i1l532 0D6E  
                                i1l533 0D76                                  i1l286 090C  
                                u19991 1C92                        ___awdiv@counter 0178  
                                _RCREG 000FAE                   ?i1_WriteEEPROM_1Byte 0001  
                                _RCSTA 000FAB                                  _TMR0H 000FD7  
                                _TMR1H 000FCF                                  _TMR0L 000FD6  
                                _TMR1L 000FCE                                  _SPBRG 000FAF  
                           _BufferCopy 6ED4                                  _PORTB 000F81  
                                _BedON EDE9                           InitUART@Baud 0181  
                                _TXREG 000FAD                                  _TXSTA 000FAC  
                        ??_One_Config1 017E                          ??_One_Config2 017E  
                  _ConfigureOscillator 1150                        __end_of_delayUS 7FF8  
                     _InternalADC_Read 0556                                  _AuxON EDC9  
                        __CFG_WRT0$OFF 000000                            i1delayUS@US 0001  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                  ___lmul@multiplicand 0178                          __CFG_WRT3$OFF 000000  
                        __CFG_WRT4$OFF 000000                          __CFG_WRT5$OFF 000000  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                       __CFG_EBTR3$OFF 000000                         __CFG_EBTR4$OFF 000000  
                       __CFG_EBTR5$OFF 000000                           InitUART@temp 018E  
                         _IRrawCodeNum 00F1                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                                _fanON EE29                       __end_of_UARTchar 7900  
                      __end_of_readI2C 0F86                             SetBaud@buf 0200  
                       __CFG_EBTRB$OFF 000000                        __end_of_init_IR 0A1C  
                      __end_of_dpowers ED19                       __end_of_RTC_INIT 10EE  
                      __end_of_isdigit 0E40               i1SetMemoryBaud@BaudTempH 0030  
             i1SetMemoryBaud@BaudTempL 0033                          ___ftpack@sign 0178  
                     Command@ADC_Value 06C8                         ??_LCDPrintChar 0182  
                        ??_SendLCDbyte 017F                        __end_of_low_isr 04E8  
            i1ReadEEPROM_1Byte@address 0001            I2C_Read_At_Address@Register 0176  
                                tablat 000FF5                          ?_SetLCDcursor 0182  
                  __size_of_LCD_Scroll 01FE                                  plusw0 000FEB  
                                plusw2 000FDB                       __end_of_PWM_init 0DE2  
                          ?_UARTstring 017F                InternalADC_Read@channel 0187  
                                status 000FD8                        __end_of_sprintf 33AC  
                     __end_of_ClearLCD 0FF8                   __size_of_cleanBuffer 005A  
                __end_of_GetMemoryBaud 5976                  __end_of_GetMemoryChar 0EF2  
                       __CFG_PBADEN$ON 000000                   ?_ConfigureOscillator 0001  
                __end_of_GetMemoryLong 554A                     StringContains@That 0176  
                   StringContains@This 0174                     __size_ofi1_delayUS 004E  
                           SetDuty@LSB 01B2                             SetDuty@MSB 01B1  
                      __initialization 758A                     StringAddEqual@temp 0200  
                  _I2C_Read_Sequential 60B4                  __end_of_EEPROM_UNLOCK 103C  
                   __size_of_GetEEPROM 004E                           __end_of_main 387E  
                     __end_of_InitUART 5820                       ??_UARTstringWAIT 0181  
                        ??_SetContrast 01AD                 __end_of_LCDPrintString 7CE2  
                ??_SyncEEPROMandGLOBAL 01AA                         __CFG_OSC$HSPLL 000000  
              __end_of_LCDScreenUpdate 41E8              __size_of_ContrastPWM_init 000C  
                        _LCDclearCount 01C7                                 ??_main 01C4  
                    ??_GetMemoryParity 0177                          ___fttol@sign1 01A7  
                       SetDuty@tempPR2 01AE                        Send_Config1@pin 0184  
                  __end_of_ReadButton1 1126                        Send_Config2@pin 0183  
                     __end_of_ResetI2C 0F40                        ?i1_Start_Timer1 0001  
                      SendLCDbyte@data 017F                  ??i1_WriteEEPROM_1Byte 0004  
                        __activetblptr 000003                            ?_IRrawToNEC 0001  
               Multiple_I2C_Read@rdptr 0174                             _Parse_Time 387E  
             __size_ofi1_SetMemoryBaud 00B2                        low_isr@LCD_TEMP 00D9  
             __size_ofi1_SetMemoryLong 00BE                   ?_I2C_Read_Sequential 0177  
                     i1CheckSum_byte@i 0007                             UseIRCode@i 004E  
                       _StringAddEqual 5228                                 _ADCON0 000FC2  
                               _ADCON1 000FC1                                 _ADCON2 000FC0  
                  __size_ofi1_UARTchar 0078                       ___llmod@dividend 0181  
                               STR_100 F950                                 STR_101 F6E7  
                               STR_102 FA89                                 STR_110 F8A4  
                               STR_103 FC8D                                 STR_111 FBD1  
                               STR_120 FF89                                 STR_104 FBE0  
                               STR_112 F86E                                 STR_200 F3BE  
                               STR_121 FE04                                 STR_201 FCFA  
                               STR_105 FC7F                                 STR_113 F7DA  
                               STR_122 EEEB                                 STR_130 FFA1  
                               STR_106 FBC2                                 STR_114 FAC9  
                               STR_210 F8EA                                 STR_202 F45E  
                               _ADRESH 000FC4                                 STR_131 FF9B  
                               STR_211 FD7B                                 STR_203 FAF9  
                               STR_107 FAD9                                 STR_115 FA19  
                               STR_123 F65E                                 STR_116 FA19  
                               STR_212 FFB3                                 STR_220 FF4A  
                               STR_132 FE54                                 STR_300 FE4A  
                               STR_108 FBB3                                 STR_124 FA29  
                               STR_204 F4EF                                 STR_140 F43F  
                               _EEADRH 000FAA                                 STR_133 FA17  
                               STR_125 FD55                                 STR_141 FC63  
                               STR_301 FB19                                 STR_205 FAB9  
                               STR_109 F983                                 STR_117 F713  
                               STR_221 F2F0                                 STR_213 EE5D  
                               STR_118 FDB7                                 STR_126 FE8F  
                               STR_142 FF9B                                 STR_134 FFA1  
                               STR_230 FFF8                                 STR_302 FF3A  
                               STR_310 FD3B                                 STR_214 FCD3  
                               STR_150 FB68                                 STR_222 FA99  
                               STR_206 F499                                 _ADRESL 000FC3  
                               STR_119 FF02                                 STR_135 FD05  
                               STR_143 FEB7                                 STR_127 FFA7  
                               STR_223 FFDB                                 STR_303 FF0A  
                               STR_215 FECE                                 STR_207 F90C  
                               STR_151 F826                                 STR_311 F73D  
                               STR_231 F2CB                     _LCDdisplayFeedback 0C7E  
                               STR_224 F6CE                                 STR_152 EEEB  
                               STR_216 FE36                                 STR_128 FFEC  
                               STR_312 FF7C                                 STR_160 FF6E  
                               STR_304 FDE3                                 STR_208 F751  
                               STR_320 F595                                 STR_240 F47C  
                               STR_144 F41F                                 STR_232 F35A  
                               STR_136 F25A                                 STR_217 FC37  
                               STR_305 FD05                                 STR_233 F4D1  
                               STR_129 FF75                                 STR_241 FDC2  
                               STR_209 FD14                                 STR_313 FC55  
                               STR_145 FB95                                 STR_137 FA69  
                               STR_161 F9A5                                 STR_225 F93F  
                               STR_321 F314                                 STR_153 F2A6  
                               STR_314 FD05                                 STR_162 FD05  
                               STR_138 FF9B                                 STR_218 FFE4  
                               STR_250 FF42                                 STR_154 FE5E  
                               STR_242 FE18                                 STR_306 FB39  
                               STR_146 F84A                                 STR_170 F6D1  
                               STR_226 F6A4                                 STR_234 F5C9  
                               STR_322 F337                                 STR_235 F6CE  
                               STR_155 FE8F                                 STR_219 FA17  
                               STR_139 FF2E                                 STR_251 FFD6  
                               STR_243 FF67                                 STR_147 FD07  
                               STR_171 FB86                                 STR_307 F9B6  
                               STR_315 F838                                 STR_227 F68D  
                               STR_163 F50B                                 STR_323 F3DF  
                               STR_156 FF9B                                 STR_252 FFF4  
                               STR_244 FF59                                 STR_180 FEC5  
                               STR_260 FAE9                                 STR_316 FAA9  
                               STR_308 F8B6                                 STR_228 F646  
                               STR_164 F55F                                 STR_236 F543  
                               STR_148 F4D3                                 STR_324 F1B3  
                               STR_172 F0F3                                 STR_149 FDB7  
                               STR_317 F838                                 STR_181 FA17  
                               STR_157 FFA1                                 STR_253 FFE8  
                               STR_309 FD9F                                 STR_165 FC0D  
                               STR_173 FA39                                 STR_229 F961  
                               STR_325 F8C8                                 STR_261 F7B4  
                               STR_237 F5FC                                 STR_245 EEA6  
                               _EEDATA 000FA8                                 STR_182 FD05  
                               STR_254 FA17                                 STR_158 F4B2  
                               STR_318 FAA9                                 STR_270 FFA7  
                               STR_190 FB77                                 STR_262 FA49  
                               STR_326 F8D9                                 STR_174 F5E3  
                               STR_238 F39D                                 STR_166 F234  
                               STR_246 EFAF                                 STR_319 F6CE  
                               STR_183 F55F                                 STR_271 FA17  
                               STR_159 FA17                                 STR_239 FCED  
                               STR_167 F9F9                                 STR_255 F994  
                               STR_247 F728                                 STR_263 F676  
                               STR_191 F5AF                                 STR_175 EF2F  
                               STR_264 FDB7                                 STR_280 FEFA  
                               STR_248 FED7                                 STR_272 FD6F  
                               STR_184 FBFE                                 STR_256 F78D  
                               STR_168 F37C                                 STR_176 F20A  
                               STR_192 EF71                                 STR_193 F20A  
                               STR_249 FE36                                 STR_265 FE86  
                               STR_273 FE0E                                 STR_169 FC39  
                               STR_257 FBEF                                 STR_177 F9C7  
                               STR_185 F124                                 STR_281 F0C1  
                               STR_266 EEEB                                 STR_178 FE36  
                               STR_194 FD48                                 STR_274 FCE0  
                               STR_290 FC47                                 STR_186 F9E9  
                               STR_258 F880                                 STR_282 F6BB  
                               STR_195 FE36                                 STR_291 FE98  
                               STR_179 FE22                                 STR_275 FD87  
                               STR_283 FB59                                 STR_259 F765  
                               STR_267 F527                                 STR_187 F1DF  
                               STR_284 FE68                                 STR_196 FE2C  
                               STR_292 FD93                                 STR_268 FC9B  
                               STR_188 FC2B                                 STR_276 F91D  
                               STR_285 F6CE                                 STR_269 FE8F  
                               STR_197 FFE0                                 STR_293 FDD8  
                               STR_277 FDCD                                 STR_189 F3FF  
                               STR_198 FA17                                 STR_286 F6A4  
                               STR_278 FF83                                 STR_294 FA59  
                               _CCPR1L 000FBE                                 STR_279 F658  
                               STR_199 FD05                                 STR_287 F68D  
                               STR_295 FE40                                 STR_288 F646  
                               STR_296 FFCC                                 STR_289 F961  
                               STR_297 FFD1                                 STR_298 FF8F  
                               STR_299 FF95                                 _EECON2 000FA7  
                     ___awdiv@dividend 0174                          _READ_RTC_TIME 677E  
                     __end_of_WriteI2C 7F8C                        __CFG_BBSIZ$1024 000000  
                     __end_of___ftpack 60B4                       __end_of___lbtoft 0E12  
                       ??_SetLCDcursor 0183                        _ScrollFIFOCount 0114  
                               i1l1147 45B4              __size_ofi1_LCDPrintString 0070  
                          OpenI2C@slew 0174                                 i1l1580 108A  
                               i1l1573 0D9C                                 i1l1586 0C6C  
           __size_ofi1_GetMemoryParity 0016                    __end_of_One_Config1 7BF0  
                  __end_of_One_Config2 0B1E                                 i1l9201 0F16  
                               i1l9229 6ECE                                 i1l9189 71A2  
                     __end_of___lwtoft 0EC8                              ??_IdleI2C 0174  
                            ??_GetBaud 0178                     __size_of_ReadUSART 0034  
                               _OSCCON 000FD3                                 _IR_NEC 00F4  
                   __size_of_ReadIRpin 000E              __size_of_IsPrintableASCII 0018  
                               _SPBRGH 000FB0                          i1_cleanBuffer 0B5C  
                       SetMemoryLong@H 01A5                         SetMemoryLong@L 01A8  
                               _BedOFF EDD9                i1WriteEEPROM_1Byte@data 0003  
                               _SSPADD 000FC8                     __size_of_SetEEPROM 00B0  
                               _SSPBUF 000FC9                              ??_Command 01C4  
                  ?_LCDdisplayFeedback 0186                                 _Aux2ON EDA9  
                            ??_InitApp 017E                  ??_ConfigureOscillator 0174  
                               _TX_OLD 00F2                    __size_ofi1_ClearLCD 0016  
                               _AuxOFF EDB9                       ?_Init_I2C_Master 0001  
 Command@RTC_Battery_Value_LOW_decimal 06D2                              ??_OpenI2C 0175  
                               _Global 0100                              ??_SetBaud 01BB  
                            ??_SetFreq 018A                              ??_SetDuty 01AD  
                  __end_of_SendLCDbyte 6690                         __CFG_XINST$OFF 000000  
                        InitUART@spbrg 018A                            SetBaud@Baud 01B6  
                     __end_of_high_isr 0626                                 _Rxdata 0300  
                   __size_of_OpenUSART 0076                         _StringContains 7984  
                           _SubLightON EE09                                 _Txdata 0500  
                               ___lmul 7BF0                                 _fanOFF EE19  
                            ??___aldiv 0182                        Command@contrast 06D8  
                               ___wmul 0C0E                              ??___awdiv 0178  
             __end_ofi1_PulseEnablePin 0E9C                         __CFG_STVREN$ON 000000  
                            ??___awmod 0178                              ??___ftdiv 0186  
                            ??___lldiv 017C                              ??___ftmul 0195  
                            ??___llmod 0189                              ??___fttol 01A2  
                      ?_LCDPrintString 0182                      cleanBuffer16bit@i 017B  
                     __end_of_init_LCD 5F94                              ??___lwmod 0178  
              i1cleanBuffer16bit@count 0003                           ?i1_ReadUSART 0001  
                               clear_0 7590                                 clear_1 759C  
                               clear_2 75A8                                 clear_3 75B4  
                               clear_4 75C0                                 clear_5 75CC  
                               clear_6 75D8                           ?i1_ReadIRpin 0001  
                     ___awdiv@quotient 017A                              ??_delayUS 0178  
                      ___awmod@divisor 0176                     __size_of_UseIRCode 00FE  
                     ??i1_Reset_Timer1 0001                           ?i1_SetEEPROM 0036  
                      ___awmod@counter 0178          __size_of_I2C_Write_At_Address 00CE  
                               main@ii 01C5                        Command@tempLONG 06DE  
                  SprintDate@ReturnBuf 01B6                   ??_LCDdisplayFeedback 0188  
                ___ftmul@f3_as_product 0199                              ??_readI2C 0174  
                  __size_of_UARTstring 00A4                          ?_Send_Config1 017F  
                        ?_Send_Config2 017F                        __CFG_BOREN$BOHW 000000  
                            ??_init_IR 017C                            ?_BufferCopy 017C  
                  __end_of_SetContrast 6C88                      ?_cleanBuffer16bit 0174  
                            ??_isdigit 0174                  ??_I2C_Read_Sequential 017B  
               __end_of_StringAddEqual 53DA                           __mediumconst ECC0  
                     i1GetMemoryLong@H 0020                       i1GetMemoryLong@L 0023  
                    __end_ofi1_delayUS 093C                              ??_low_isr 0060  
                      Zero_Config1@pin 017E                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                      Zero_Config2@pin 017E                     ??_cleanBuffer16bit 0178  
               __size_of_CheckSum_byte 0064                     IRrawToNEC@StartBit 000F  
                    ??i1_CheckSum_byte 0004                      __end_of_GetEEPROM 08A0  
                       ?_READ_RTC_TIME 0001                           _BlueLEDcount 01CB  
                    i1_SetMemoryParity 0EF2                              ??_sprintf 019A  
                   __size_of_f_Config1 007A                             _StartsWith 7754  
         i1WriteEEPROM_1Byte@GIEstatus 0004                     ?i1_SetMemoryParity 0001  
                       ?i1_cleanBuffer 0001                             _SprintDate 64AE  
                          SetFreq@freq 0188                             __accesstop 0060  
              __end_of__initialization 761E                            SetFreq@temp 018A  
             __size_of_SetMemoryParity 0034                          ___rparam_used 000000  
                  StringAddEqual@Input 0183                             ___ftdiv@f1 0180  
                           ___ftdiv@f2 0183                             ___ftdiv@f3 018A  
                            ?_ISNUMBER 0001                 __end_of_StringContains 7A04  
                  ??i1_SetMemoryParity 0005                     __size_of_baudUSART 000E  
                        __end_of_BedON EDF9                             ___lbtoft@c 017F  
            __size_of_ReadEEPROM_1Byte 003C                    __size_of_IRrawToNEC 035E  
                          SetDuty@Duty 01AD                             ___ftmul@f1 018F  
                           ___ftmul@f2 0192                          __end_of_AuxON EDD9  
                           ___fttol@f1 019E              __size_of_RTC_Clock_Enable 004C  
                       __pcstackCOMRAM 0001                            SetDuty@temp 01B3  
                         __pidataBANK1 1160                           __pidataBANK3 1094  
                          _ReadButton1 1118                          __end_of_fanON EE39  
                            ?_UARTchar 017B                           ??_LCD_Scroll 0185  
                   InitUART@baudconfig 018C                              ?_RTC_INIT 0001  
                 __end_of_LCDPrintChar 0FDE                       ?_LCDScreenUpdate 0001  
                    __end_of_ReadUSART 0D1C                      __end_of_ReadIRpin 10FC  
                        ?i1_UARTstring 000C                             ___lwtoft@c 017C  
                       ??_Send_Config1 0181                         ??_Send_Config2 0181  
                  __end_of_SubLightOFF EE09                      __end_of_SetEEPROM 7258  
          __size_ofi1_cleanBuffer16bit 0042                   __size_of_init_Timer0 0016  
                 __size_of_init_Timer1 0010                              ?_PWM_init 0001  
                   LCDPrintString@Text 0182                            ?_Parse_Time 0174  
                            ?_ClearLCD 0001                          ?_Reset_Timer0 0001  
                        ?_Reset_Timer1 0001              __end_ofi1_SetMemoryParity 0F1C  
                      ?_StringAddEqual 0183                            _One_Config1 7B76  
                          _One_Config2 0ADE                          ?_RemoveSpaces 0183  
                        ReadUSART@data 0174                         One_Config1@pin 017E  
                       One_Config2@pin 017E                      __end_of_OpenUSART 7DD0  
                     Send_Config1@data 017F                          ??_Stop_Timer0 0174  
                     Send_Config2@data 017F                           sprintf@width 01B1  
               __size_of_SetMemoryBaud 00E0                             __pbssBANK0 00EE  
                           __pbssBANK1 0100                             __pbssBANK2 0267  
                           __pbssBANK3 0300                             __pbssBANK4 0400  
                           __pbssBANK5 0500                 __size_of_SetMemoryLong 00FA  
                    ??i1_SetMemoryBaud 0028                              ?_InitUART 0181  
                          _SendLCDbyte 65A0                      ??i1_SetMemoryLong 002A  
                    __end_of_UseIRCode 62BA                    SET_RTC_TIME@SetTime 017C  
          RTC_Clock_Enable@tempSeconds 017E                Multiple_I2C_Read@length 0176  
                   __end_of_LCD_Scroll 5052                          ??_StringMatch 0178  
                  SetLCDcursor@address 0184                             ??_ISNUMBER 0174  
                            ?_ResetI2C 0001                  WriteEEPROM_1Byte@data 0176  
                      ?_StringContains 0174            __end_of_TXdataBedroomCLOSED ED5D  
             __end_of_InternalADC_Read 05C0                    __size_of_BufferCopy 00BC  
        __size_of_RTC_TIME_NONMilitary 006A                          _CheckSum_byte 0626  
                         ??i1_UARTchar 000A            __end_of_TXdataBedroomOPENED ED69  
                        RemoveSpaces@i 0266                                ?___lmul 0174  
                  i1CheckSum_byte@This 0001                                ?___wmul 0174  
                    __end_of_f_Config1 7AFC                      Command@PARITYtemp 06D4  
                           ??_UARTchar 017D                            _SetContrast 6BC0  
       I2C_Write_At_Address@I2Caddress 017A                             ??_RTC_INIT 0188  
                              _CCP1CON 000FBD                                _BAUDCON 000FB8  
                 __end_of_SetLCDcursor 0B5C                         ___lmul@product 017C  
                     _ContrastPWM_init 1126                                _ECCPR1L 000FBB  
                       ??i1_UARTstring 000E                              ?_WriteI2C 0001  
                            ?___ftpack 0174                              ?___lbtoft 017C  
             __size_ofi1_GetMemoryBaud 00EE                     __size_of_lowercase 008C  
                cleanBuffer16bit@count 0176               __size_ofi1_GetMemoryLong 00FA  
                         ??i1_ClearLCD 000F             __end_ofi1_ReadEEPROM_1Byte 0DB2  
                i1CheckSum_byte@Parity 0006                              ?___lwtoft 017C  
                           ??_PWM_init 01B5                                i1l10421 4772  
                              i1l10407 4732                                i1l10415 4754  
                              i1l10433 47CE                                i1l10353 45F2  
             __size_ofi1_EEPROM_UNLOCK 0016                                i1l10281 7546  
                              i1l10451 4800                                i1l10435 47D4  
                              i1l10363 462E                                i1l10275 7528  
                              i1l10445 47FA                                i1l10373 4670  
                              i1l10349 45EA                                i1l10439 47DA  
                              i1l10375 4696                                i1l10199 1120  
                              i1l10287 7576                                i1l10473 48C2  
                              i1l10465 487C                                i1l10457 483C  
                              i1l10393 46DE                                i1l10385 46D4  
                              i1l10369 466C                                i1l10379 469A  
                              i1l10299 100A                                i1l12251 0904  
                              i1l10485 4916                                i1l10493 4922  
                              i1l10397 46E6                                i1l10389 46D8  
                              i1l10489 491C                                i1l12249 0900  
                              i1l12259 0912                                i1l11555 0A26  
                              i1l11559 0A42                                i1l12651 09B2  
                              i1l12643 099C                                i1l11747 1112  
                              i1l16013 025E                                i1l13711 6CD4  
                              i1l16023 02AC                                i1l16033 02F2  
                              i1l16025 02CA                                i1l16017 027C  
                              i1l16009 024A                                i1l12659 09C2  
                              i1l13723 6CEC                                i1l13715 6CDC  
                              i1l16035 02FA                                i1l12669 09CE  
                              i1l13709 6CD0                                i1l13751 6D32  
                              i1l13743 6D22                                i1l13727 6CF4  
                              i1l13719 6CE4                                i1l16063 039A  
                              i1l13681 7D1C                                i1l13753 6D38  
                              i1l14721 7E7E                                i1l14705 0E4C  
                              i1l16073 03F0                                i1l13675 7CF2  
                              i1l13683 7D36                                i1l13747 6D2A  
                              i1l13739 6D1A                                i1l14707 0E52  
                              i1l16075 03FA                                i1l13677 7D02  
                              i1l13685 7D4A                                i1l14741 61FE  
                              i1l14717 7E4E                                i1l16077 0400  
                              i1l14751 6260                                i1l16087 0450  
                              i1l15801 4218                                i1l16089 0458  
                              i1l14755 6268                                i1l14739 61FA  
                              i1l14749 625C                                i1l14693 0B7E  
                              i1l14695 76BE                                i1l14767 629C  
                              i1l14769 62A2                                i1l14689 0B66  
                              i1l15905 4512                                i1l15825 4292  
                              i1l15817 426A                         ??_Reset_Timer0 0001  
                              i1l14699 771E                                i1l15771 7318  
                              i1l15915 4562                                i1l15835 42E2  
                              i1l15923 459C                         ??_Reset_Timer1 0174  
                              i1l15845 4332                                i1l15783 7338  
                              i1l15791 7370                                i1l15775 7322  
                              i1l15855 4382                                i1l15951 00C6  
                              i1l15943 009E                                i1l15865 43D2  
                              i1l15961 00FA                                i1l15875 4422  
                              i1l15885 4472                                i1l15957 00E6  
                              i1l15895 44C2                                i1l15975 0170  
                              i1l15985 01A8                                i1l15979 017A  
                              i1l15997 0204                                i1l15989 01D4  
            __size_of_GetEnteredNumber 01D6                         ??_RemoveSpaces 0185  
                           ??_ClearLCD 0182               Command@RTC_Battery_Value 06CA  
                       StartsWith@That 0176                         StartsWith@This 0174  
                     i1UARTstring@data 000C            __end_of_I2C_Read_At_Address 5D48  
                        UseIRCode@Code 0047                                _LCDwait 0112  
                      ??_READ_RTC_TIME 017E                      __end_of_baudUSART 110A  
                  Init_I2C_Master@baud 0176                 GetMemoryBaud@BaudTempH 0193  
               GetMemoryBaud@BaudTempL 0196                         lowercase@Input 0174  
                      SetMemoryLong@MH 01A6                        SetMemoryLong@ML 01A7  
                              _SSPCON1 000FC6                                _SSPCON2 000FC5  
                      ??i1_cleanBuffer 0005                              ?_high_isr 0001  
                              _SSPSTAT 000FC7                     __end_ofi1_UARTchar 7D5A  
                              _IRfault 004F                            ?_StartsWith 0174  
                     i1_LCDPrintString 7E44               GetEnteredNumber@negative 018A  
                           ??_InitUART 0186                                _Aux2OFF ED99  
                          ?_SprintDate 01B6                  __end_ofi1_SendLCDbyte 6D50  
                              _IdleI2C 10A8                                _GetBaud 10BC  
                            ?_init_LCD 0001                       _IsPrintableASCII 0FF8  
                         ??_UARTstring 0181                                _Command 0000  
                              _TXdataD EE39                                _TXdataE EE45  
                              _TXdataF EE51                 SetMemoryBaud@BaudTempH 01A3  
               SetMemoryBaud@BaudTempL 01A6                                _InitApp 074A  
                  __end_of_Stop_Timer0 116A                          ?i1_BufferCopy 0009  
                      SetLCDcursor@Col 0182                __size_ofi1_LCDPrintChar 0016  
                           ??_ResetI2C 017E                                _OpenI2C 0F40  
                      SetLCDcursor@Row 0183                                _SetBaud 4BCC  
                   __end_ofi1_ClearLCD 1068                         InitUART@config 018D  
                       ?_CheckSum_byte 0174                                __Hparam 0000  
                              _SetFreq 0800                        _GetMemoryParity 0F86  
                              _SetDuty 7044                                __Lparam 0000  
                              _NowTime 0109                          ?_SET_RTC_TIME 017C  
                  __size_of_Parse_Time 04D2                         InitUART@parity 0185  
              i1CheckSum_byte@Odd_Even 0003                      ??_SetMemoryParity 0178  
                    i1cleanBuffer@data 0001                                _Version 0394  
                              ___aldiv 5D48                            _SubLightOFF EDF9  
                              ___awdiv 6A22                       ??i1_Start_Timer1 0001  
                      __size_of___lmul 007A                                ___awmod 6F90  
                              ___ftdiv 5AC8                                ___lldiv 6D50  
                  __end_of_StringMatch 7A82                        __size_of___wmul 0038  
                              ___ftmul 554A                                ___llmod 73A4  
                              ___fttol 5976                          _SetMemoryBaud 6868  
                              ___lwmod 7EB4                        LCDPrintString@c 0184  
                        _SetMemoryLong 62BA                                __pcinit 758A  
                           ??_WriteI2C 0175                                _delayUS 7F8C  
                           ??___ftpack 0179                             ??___lbtoft 017F  
                              __ramtop 0D00                      SetMemoryBaud@Baud 0197  
                              __ptext0 33AC                                __ptext1 5E74  
                              __ptext2 10CE                                __ptext3 09D4  
                              __ptext4 1010                                __ptext5 1166  
                              __ptext6 06EC                                __ptext7 116A  
                              __ptext8 10EE                                __ptext9 0BD6  
                    SetMemoryBaud@Test 019F                             ??___lwtoft 017F  
                            _T0CONbits 000FD5                      GetMemoryBaud@baud 018F  
                              _readI2C 0F64                   __size_ofi1_ReadUSART 0032  
                    __end_of_hexpowers ED39                              _T1CONbits 000FCD  
                 __size_ofi1_ReadIRpin 000E                i1SendLCDbyte@LSB_nibble 000E  
                              _init_IR 09D4                                _dpowers ECF1  
                         ??_IRrawToNEC 0006                     __end_of_UARTstring 74EC  
              i1CheckSum_byte@ThisTemp 0004                                _isdigit 0E12  
                 __size_ofi1_SetEEPROM 009E                       ___awmod@dividend 0174  
                     ___aldiv@dividend 017A             __size_ofi1_SetMemoryParity 002A  
            GetMemoryLong@AddressFirst 0197                                _low_isr 0018  
              i1SendLCDbyte@MSB_nibble 000D                          SetEEPROM@Temp 01A9  
                        SetEEPROM@fail 01B6                          SetEEPROM@burn 01B2  
                              _sprintf 270E                             ??_high_isr 0166  
                       __pintcode_body 05C0                   end_of_initialization 761E  
                    __end_of_octpowers ECF1                          ??_cleanBuffer 0178  
                i1SetMemoryParity@Test 0005                             ??_init_LCD 0182  
                      i1ReadUSART@data 0001                              i1u1050_20 711C  
                            i1u1050_25 7112                              i1u1053_20 6E3C  
                            i1u1053_25 6E32                              i1u2030_20 7362  
                            i1u2030_27 7358                              i1u2031_20 7392  
                            i1u2031_27 7388                      __end_of_lowercase 7874  
                            i1u2035_21 4230                              i1u1229_20 4704  
                              int_func 05C0                         ??i1_BufferCopy 000F  
                 __end_of_Send_Config1 6A22                   __end_of_Send_Config2 7984  
                            i1u1883_20 76E0                              i1u1891_20 7E74  
                            i1u1883_27 76D6                              i1u1891_27 7E6A  
                            i1u1885_20 7710                              i1u1893_20 7EA8  
                            i1u1885_27 7706                              i1u1893_27 7E9E  
                            i1u1887_20 774C                              i1u1887_27 7742  
                            i1u1899_21 6226                   GetEnteredNumber@This 0180  
              __size_ofi1_SetLCDcursor 002E            __end_of_SyncEEPROMandGLOBAL 0C0E  
                     ??_LCDPrintString 0184                        ___lldiv@divisor 0178  
                       ??_SET_RTC_TIME 0185                   GetEnteredNumber@temp 018B  
                    i1GetMemoryLong@MH 0021                      i1GetMemoryLong@ML 0022  
        I2C_Read_Sequential@I2Caddress 017B                       _ReadEEPROM_1Byte 0B9A  
                      ___lldiv@counter 0180                       _RTC_Clock_Enable 093C  
                __size_of_LCDPrintChar 001C                     __end_of_IRrawToNEC 4928  
                            _RCSTAbits 000FAB                       ___aldiv@quotient 0184  
                              postdec1 000FE5                                postdec2 000FDD  
                       ?_SetMemoryBaud 0197                                postinc0 000FEE  
                              postinc2 000FDE            __end_ofi1_WriteEEPROM_1Byte 0C7E  
                        i1BufferCopy@i 000F                         ?_SetMemoryLong 0198  
                    ?i1_PulseEnablePin 0001                     Parse_Time@TempTime 0178  
                            _IRRawCode 0464                __size_of_PulseEnablePin 0032  
                      i1_CheckSum_byte 0988                       i1SetMemoryLong@H 0032  
                     i1SetMemoryLong@L 0035                    __size_of_StartsWith 0094  
                   ??i1_PulseEnablePin 000B                      SetMemoryLong@Data 0198  
              i1LCDPrintChar@character 000F                    __size_of_SprintDate 00F2  
                        ?_Start_Timer0 0001                          ?_Start_Timer1 0001  
                    SetMemoryLong@Test 01A1                      GetMemoryLong@temp 018F  
                         ??_BufferCopy 0182                 __size_of_GetMemoryBaud 0156  
               __size_of_GetMemoryChar 002A                              _TRISAbits 000F92  
                            _TRISBbits 000F93                              _TRISCbits 000F94  
                            _TRISDbits 000F95                              _TRISEbits 000F96  
                       BufferCopy@from 017C                 __size_of_GetMemoryLong 0170  
                    ??i1_GetMemoryBaud 0008                     low_isr@TEMP_Rxdata 0075  
                    ??i1_GetMemoryLong 0008                 __size_of_EEPROM_UNLOCK 0016  
                    ??i1_EEPROM_UNLOCK 0001            __end_of_ConfigureOscillator 1158  
                          _Stop_Timer0 1166                              i1_delayUS 08EE  
              __end_of_GetMemoryParity 0FA4           __end_of_I2C_Write_At_Address 6BC0  
                            _GetEEPROM 0852                           _LCDPrintChar 0FC2  
                 __end_ofi1_UARTstring 7754                            ___ftdiv@exp 018D  
                      ??_CheckSum_byte 0177                              _TXSTAbits 000FAC  
            __size_of_cleanBuffer16bit 005E                         __end_of_BedOFF EDE9  
                          _StringMatch 7A04            i1GetMemoryLong@AddressFirst 0024  
                 __end_of_Reset_Timer0 1150                   __end_of_Reset_Timer1 113C  
                  __end_of_cleanBuffer 0800                         __end_of_Aux2ON EDB9  
                 __end_of_RemoveSpaces 76BE                         __end_of_AuxOFF EDC9  
                __size_of_SetLCDcursor 003E                     __end_of_BufferCopy 6F90  
                          ___ftmul@exp 0198                      __size_of_ISNUMBER 001E  
                         ?_ReadButton1 0001                    RemoveSpaces@address 0264  
                        ?_Zero_Config1 0001                          ?_Zero_Config2 0001  
                CheckSum_byte@Odd_Even 0176                         __end_of___lmul 7C6A  
                       __end_of_fanOFF EE29               __size_of_Init_I2C_Master 004E  
                       __end_of___wmul 0C46            __end_of_I2C_Read_Sequential 61BC  
                       ??_Start_Timer0 0174                         ??_Start_Timer1 0174  
                     ??_StringAddEqual 0185                      _EnableInternalADC 7258  
                    __size_of_UARTchar 008C                       IRrawToNEC@Invert 0005  
                    __size_of_RTC_INIT 0010            __size_of_LCDdisplayFeedback 0036  
                    GetEnteredNumber@i 0189                        i1_SetMemoryBaud 70F6  
                   ?_EnableInternalADC 0001                       _GetEnteredNumber 5052  
                      i1_SetMemoryLong 6E16                           ??_Parse_Time 0176  
                  start_initialization 758A                           ?_One_Config1 0001  
                         ?_One_Config2 0001                              _ReadUSART 0CE8  
                            _ReadIRpin 10EE                __size_of_UARTstringWAIT 0074  
                SendLCDbyte@LSB_nibble 0181                      __size_of_PWM_init 0030  
                            _SetEEPROM 71A8                  CheckSum_byte@ThisTemp 0177  
                    __size_of_ClearLCD 001A                       WriteI2C@data_out 0175  
                SendLCDbyte@MSB_nibble 0180                    ??_EnableInternalADC 0174  
                  i1cleanBuffer16bit@i 0008                             ?i1_delayUS 0001  
         __end_of_TXToiletAlexBathroom ED45                           ?_SendLCDbyte 017E  
                     ??_StringContains 0178               __end_of_ContrastPWM_init 1132  
                         _SetLCDcursor 0B1E                             ?_GetEEPROM 0198  
                            _OpenUSART 7D5A                        i1SetEEPROM@Temp 0036  
                      i1SetEEPROM@fail 0043                        i1SetEEPROM@burn 003F  
                      ___llmod@divisor 0185                      __size_of_InitUART 016A  
                      ___llmod@counter 0189                      i1BufferCopy@count 000D  
                       i1_LCDPrintChar 103C                      i1BufferCopy@shift 000E  
                       Command@channel 06DA                              _UseIRCode 61BC  
                        _GetMemoryBaud 5820                              _Scroll_10 0364  
                        _GetMemoryChar 0EC8                __end_ofi1_CheckSum_byte 09D4  
                   SprintDate@Military 01C1                        ??_SetMemoryBaud 019B  
            StringAddEqual@firstnumber 0264                          _GetMemoryLong 53DA  
                    ?_InternalADC_Read 0183                        ??_SetMemoryLong 019D  
                   __end_of_Parse_Time 3D50                 i1cleanBuffer16bit@data 0001  
                    __size_of_ResetI2C 0024                         ??_Zero_Config1 017E  
                       ??_Zero_Config2 017E                               ??___lmul 017C  
                        _EEPROM_UNLOCK 1026                               ??___wmul 0178  
                   ??_InternalADC_Read 0185              __end_of_EnableInternalADC 72FE  
                         ?_SetContrast 0001                            __pdataBANK1 01C7  
                          __pdataBANK3 0394                          ??_init_Timer0 0174  
                        ??_init_Timer1 0174                       __CFG_LPT1OSC$OFF 000000  
           __end_ofi1_cleanBuffer16bit 0A5E               __end_ofi1_LCDPrintString 7EB4  
             __end_of_IsPrintableASCII 1010               WriteEEPROM_1Byte@address 0174  
                            _f_Config1 7A82                      i1_LCDScreenUpdate 41E8  
                    __size_of_WriteI2C 006C                     SetContrast@tempPR2 01AD  
                    __size_of___ftpack 0120                      __size_of___lbtoft 0030  
                 __end_ofi1_BufferCopy 73A4              SetMemoryLong@AddressFirst 019C  
                LCDPrintChar@character 0182                       cleanBuffer@count 0176  
         __end_of_RTC_TIME_NONMilitary 0556                            __pbssCOMRAM 004F  
                           ?_ReadUSART 0001                     ?i1_LCDScreenUpdate 0001  
                    __size_of___lwtoft 002C                             ?_ReadIRpin 0001  
                        __pcstackBANK0 0060                          __pcstackBANK1 0166  
                        __pcstackBANK2 0200                          __pcstackBANK6 0600  
                 __end_of_SET_RTC_TIME 4BCC                             ?_SetEEPROM 01A9  
             __size_of_LCDScreenUpdate 0498                           _isdigit$3362 0175  
              __size_ofi1_Reset_Timer1 000A                  __size_of_Send_Config1 00DA  
                __size_of_Send_Config2 0084                           ??_StartsWith 0178  
                            _baudUSART 10FC                     __end_of_SubLightON EE19  
                  ??i1_LCDScreenUpdate 0013                     i1_ReadEEPROM_1Byte 0D80  
                         ??_SprintDate 01C2                        _SetMemoryParity 0CB4  
                          _cleanBuffer 07A6                               ?_IdleI2C 0001  
                     ?_GetMemoryParity 0001                               ?_GetBaud 0174  
               __end_ofi1_LCDPrintChar 1052                             ?_OpenUSART 0174  
                       LCD_Scroll@This 0183                      __size_of_high_isr 061E  
                          sprintf@flag 01B4                            sprintf@prec 01AF  
                             ?_Command 01C2                         i1_SetLCDcursor 0E40  
        I2C_Read_At_Address@I2Caddress 0178                               ?_InitApp 0001  
                    __size_of_init_LCD 0120                         ?_GetMemoryBaud 0177  
                       ?_GetMemoryChar 0177                               ?_OpenI2C 0174  
                             ?_SetBaud 01B6                         ?_GetMemoryLong 0177  
                  ?i1_ReadEEPROM_1Byte 0001                               ?_SetFreq 0188  
                           ?_UseIRCode 0047                               ?_SetDuty 0001  
                SprintDate@DisplayTime 01B8             i1WriteEEPROM_1Byte@address 0001  
                       ?_EEPROM_UNLOCK 0001                              __pintcode 0008  
                        __pmediumconst ECC0                               ?___aldiv 017A  
                             ?___awdiv 0174                              __ptext100 0FA4  
                            __ptext101 5052                              __ptext110 7E44  
                            __ptext102 7BF0                              __ptext111 103C  
                            __ptext103 10BC                              __ptext120 08EE  
                            __ptext112 1158                              __ptext121 76BE  
                            __ptext113 113C                              __ptext105 0A1C  
                            __ptext130 0C46                              __ptext122 7CE2  
                            __ptext114 1052                              __ptext106 0D4E  
                            __ptext131 107E                              __ptext123 0988  
                            __ptext115 6C88                              __ptext107 110A  
                            __ptext132 6690                              __ptext124 74EC  
                            __ptext116 0E6E                              __ptext108 41E8  
                            __ptext133 0D80                              __ptext125 0EF2  
                            __ptext117 72FE                              __ptext109 0E40  
                            __ptext134 1118                              __ptext126 1068  
                            __ptext118 0B5C                              __ptext135 1146  
                            __ptext127 6E16                              __ptext119 61BC  
                            __ptext136 0FF8                              __ptext128 63B4  
                            __ptext137 45CA                              __ptext129 70F6  
                          IRrawToNEC@i 000E                               ?___awmod 0174  
                      _TXdataLabCLOSED ED81                               ?___ftdiv 0180  
                 cleanBuffer16bit@data 0174                __end_ofi1_SetMemoryBaud 71A8  
                             ?___lldiv 0174                               ?___ftmul 018F  
                             ?___llmod 0181                               ?___fttol 019E  
              __end_ofi1_SetMemoryLong 6ED4                               ?___lwmod 0174  
                       _PulseEnablePin 0D1C                        _TXdataLabOPENED ED8D  
                         UseIRCode@NEC 0049                            __pintcodelo 0018  
            __end_ofi1_LCDScreenUpdate 45CA                               ?_delayUS 0174  
                   __end_of_StartsWith 77E8                   _I2C_Write_At_Address 6AF2  
                           ?_f_Config1 0001                     __end_of_SprintDate 65A0  
                             ?_readI2C 0001                       RemoveSpaces@That 0200  
             I2C_Read_Sequential@rdptr 0178                       RemoveSpaces@This 0183  
                             ?_init_IR 0001                               _ECCP1CON 000FBA  
                        IRrawToNEC@NEC 0003                           _Send_Config1 6948  
                         _Send_Config2 7900                      _WriteEEPROM_1Byte 0A5E  
                             ?_isdigit 0001                   ??i1_ReadEEPROM_1Byte 0003  
                        IRrawToNEC@Raw 0001                      ??_Init_I2C_Master 0176  
                  __end_of_init_Timer0 1026                    __end_of_init_Timer1 10DE  
             __end_of_ReadEEPROM_1Byte 0BD6                               ?_low_isr 0001  
                   ?_WriteEEPROM_1Byte 0174               __end_of_RTC_Clock_Enable 0988  
                            _hexpowers ED19                  __end_of_READ_RTC_TIME 6868  
                __size_ofi1_UARTstring 0096                               ?_sprintf 018A  
           UARTchar@NinethBit_override 017B                             ?_baudUSART 0001  
                          ??i1_delayUS 0005                             lowercase@i 0177  
                            delayUS@US 0174                  __end_ofi1_cleanBuffer 0B9A  
               __end_ofi1_SetLCDcursor 0E6E                  __size_of_Reset_Timer0 000A  
                __size_of_Reset_Timer1 000A           __size_of_I2C_Read_At_Address 012E  
                      ___aldiv@divisor 017E                            ??_GetEEPROM 01A1  
                      ?i1_LCDPrintChar 0001                         Parse_Time@This 0174  
                __size_of_RemoveSpaces 009A                    ??_WriteEEPROM_1Byte 0177  
                      ___aldiv@counter 0182                   __end_of_Start_Timer0 116E  
                 __end_of_Start_Timer1 8000                         ___wmul@product 0178  
                       Parse_Time@temp 0177                       _cleanBuffer16bit 06EC  
          i1SetMemoryLong@AddressFirst 0029                              _octpowers ECC1  
                             _IPR1bits 000F9F                               _PIE1bits 000F9D  
                         cleanBuffer@i 017B                            _bufferCount 00F3  
                             _ISNUMBER 0FA4             __end_of_TXToiletMyBathroom ED51  
                            _lowercase 77E8                               _PIR1bits 000F9E  
                             _PIR2bits 000FA1                GetMemoryBaud@BaudTempMH 0194  
              GetMemoryBaud@BaudTempML 0195                       ?i1_CheckSum_byte 0001  
               __end_of_PulseEnablePin 0D4E                               _RCONbits 000FD0  
                     __CFG_WDTPS$32768 000000             __size_of_EnableInternalADC 00A6  
                             _UARTchar 7874                        i1_GetMemoryBaud 6690  
                             _RTC_INIT 10DE                          ??i1_ReadUSART 0001  
                        ??i1_ReadIRpin 0001                      i1SendLCDbyte@data 000C  
                      i1_GetMemoryLong 63B4                   __size_of_ReadButton1 000E  
                        ??i1_SetEEPROM 0043              ReadEEPROM_1Byte@GIEstatus 0176  
                ?_I2C_Write_At_Address 0176                   _TXToiletAlexBathroom ED39  
            __end_of_WriteEEPROM_1Byte 0A9E                        i1_EEPROM_UNLOCK 107E  
               __size_ofi1_SendLCDbyte 00C8                      ___wmul@multiplier 0174  
                         i1_UARTstring 76BE                               _IRpinOLD 00F0  
            i1GetMemoryBaud@BaudTempMH 0021              i1GetMemoryBaud@BaudTempML 0022  
                             _PWM_init 0DB2              EnableInternalADC@channels 0175  
                            main@count 01C6                               _ClearLCD 0FDE  
                       _UARTstringWAIT 7DD0                            ??_ReadUSART 0174  
                          ??_ReadIRpin 0174                __end_of_SetMemoryParity 0CE8  
                         _Reset_Timer0 1146                           _Reset_Timer1 1132  
                      StringAddEqual@i 0265                        StringAddEqual@j 0266  
                         _RemoveSpaces 7624                i1GetMemoryParity@Parity 0004  
                          ??_SetEEPROM 01B6                   __size_of_One_Config1 007A  
                 __size_of_One_Config2 0040              __size_ofi1_PulseEnablePin 002E  
                 __end_of_Zero_Config1 7B76                   __end_of_Zero_Config2 0ADE  
                    ___lmul@multiplier 0174                            _INTCON2bits 000FF1  
                            copy_data0 75F2                           ?_Stop_Timer0 0001  
                            copy_data1 7612                           low_isr@IRpin 00EB  
                      IRrawToNEC@Pause 000C                i1SetMemoryParity@Parity 0006  
                             _InitUART 56B6                SetMemoryBaud@BaudTempMH 01A4  
              SetMemoryBaud@BaudTempML 01A5                       OpenI2C@sync_mode 0175  
                      ?i1_SetLCDcursor 000F                            ??_OpenUSART 0176  
                      IRrawToNEC@first 000D                    i1SetMemoryBaud@Baud 0024  
                      ??_GetMemoryBaud 017B                        ??_GetMemoryChar 017B  
                    ??_LCDScreenUpdate 0186                       __size_of_IdleI2C 0014  
                     __size_of_GetBaud 0012                    i1SetMemoryBaud@Test 002C  
                      OpenUSART@config 0176                  i1SetLCDcursor@address 0011  
                  i1GetMemoryBaud@baud 001C                        ??_GetMemoryLong 017B  
                 __size_of_SendLCDbyte 00F0                             _EECON1bits 000FA6  
              __end_of_TXdataLabCLOSED ED8D                               __Hparam1 0000  
                         ?_StringMatch 0174                       __size_of_Command 270E  
             __end_of_GetEnteredNumber 5228                        ??_EEPROM_UNLOCK 0174  
                             _ResetI2C 0F1C                       i1BufferCopy@from 0009  
                     __size_of_InitApp 005C                               __Lparam1 0000  
                          ??_UseIRCode 004D                __end_of_TXdataLabOPENED ED99  
                           ?_lowercase 0174                       __size_of_OpenI2C 0024  
                 _RTC_TIME_NONMilitary 04EC                               _Scroll_1 0116  
                             _Scroll_2 0126                               _Scroll_3 0136  
                             _Scroll_4 0146                               _Scroll_5 0156  
                             _Scroll_6 0050                               _Scroll_7 0267  
                             _Scroll_8 0374                               _Scroll_9 0384  
                     __size_of_SetBaud 0288                         i1cleanBuffer@i 0008  
                     __size_of_SetFreq 0052                       __size_of_SetDuty 00B2  
                      ?_PulseEnablePin 0001              i1SetMemoryBaud@BaudTempMH 0031  
            i1SetMemoryBaud@BaudTempML 0032                       ?i1_SetMemoryBaud 0024  
                     __size_of___aldiv 012C                     i1cleanBuffer@count 0003  
                        GetEEPROM@Temp 01A1                       __size_of___awdiv 00D0  
                     ?i1_SetMemoryLong 0025                  __size_ofi1_BufferCopy 00A6  
                     __size_of___awmod 00B4                       __size_of___ftdiv 0152  
                      cleanBuffer@data 0174           __size_of_SyncEEPROMandGLOBAL 0038  
                     __size_of___lldiv 00C6                       __size_of___ftmul 016C  
                     __size_of___llmod 00A4                       __size_of___fttol 0152  
           __size_ofi1_LCDScreenUpdate 03E2                            _init_Timer0 1010  
                          _init_Timer1 10CE                       __size_of___lwmod 006C  
          I2C_Read_Sequential@Register 0177                               _WriteI2C 7F20  
                        SetBaud@Parity 01BA                               ___ftpack 5F94  
                             ___lbtoft 0DE2                  __size_of_SET_RTC_TIME 02A4  
                 __size_of_SetContrast 00C8                       __size_of_delayUS 006C  
                          ??_f_Config1 017E                 __end_of_UARTstringWAIT 7E44  
                             ___lwtoft 0E9C           __size_ofi1_WriteEEPROM_1Byte 0038  
                           sprintf@idx 019E                             sprintf@len 01A7  
                           sprintf@val 01AB                       __size_of_readI2C 0022  
                    SET_RTC_TIME@Error 0190                       __size_of_init_IR 0048  
                  __end_ofi1_ReadUSART 0D80                    __end_ofi1_ReadIRpin 1118  
              __size_ofi1_Start_Timer1 0008                       __size_of_isdigit 002E  
                  __end_ofi1_SetEEPROM 758A                       __size_of_low_isr 04D0  
                        ISNUMBER@ascii 0174                               __ptext10 0852  
                             __ptext11 0EC8                               __ptext20 0800  
                             __ptext12 71A8                               __ptext21 5D48  
                             __ptext13 62BA                 LCDdisplayFeedback@Text 0186  
                             __ptext30 0000                               __ptext22 3D50  
                             __ptext14 53DA                               __ptext31 77E8  
                             __ptext23 0FC2                               __ptext15 10DE  
                             __ptext40 6BC0                               __ptext32 0E9C  
                             __ptext24 7FF8                               __ptext16 04EC  
                             __ptext41 0DE2                               __ptext33 7EB4  
                             __ptext25 1132                               __ptext17 093C  
                             __ptext50 73A4                               __ptext42 5976  
                             __ptext34 7A04                               __ptext26 074A  
                             __ptext18 5C1A                               __ptext51 7DD0  
                             __ptext43 554A                               __ptext35 7984  
                             __ptext27 7258                               __ptext19 0DB2  
                             __ptext60 10FC                               __ptext52 0CB4  
                             __ptext44 5AC8                               __ptext36 5228  
                             __ptext28 1126                               __ptext61 6D50  
                             __ptext53 0F86                               __ptext45 5F94  
                             __ptext37 7754                               __ptext29 1150  
                             __ptext70 7B76                               __ptext62 0CE8  
                             __ptext54 6868                               __ptext46 4BCC  
                             __ptext38 64AE                               __ptext71 4928  
                             __ptext63 7D5A                               __ptext55 0A5E  
                             __ptext47 270E                               __ptext39 7044  
                             __ptext80 60B4                               __ptext72 6F90  
                             __ptext64 7900                               __ptext56 1026  
                             __ptext48 0E12                               __ptext81 7F20  
                             __ptext73 6A22                               __ptext65 0A9E  
                             __ptext57 5820                               __ptext49 0C0E  
                   READ_RTC_TIME@Error 0185                               __ptext90 65A0  
                             __ptext82 10A8                               __ptext74 6AF2  
                             __ptext66 0ADE                               __ptext58 0B9A  
                             __ptext91 0D1C                               __ptext83 068A  
                             __ptext75 7624                               __ptext67 6948  
                             __ptext59 56B6                               __ptext92 7F8C  
                             __ptext84 0F64                               __ptext76 677E  
                             __ptext68 7A82                               __ptext93 4E54  
                             __ptext85 387E                               __ptext77 0F1C  
                             __ptext69 7AFC                               __ptext94 6ED4  
                             __ptext86 0C7E                               __ptext78 08A0  
                             __ptext95 07A6                               __ptext87 0B1E  
                             __ptext79 0F40                               __ptext96 0556  
                             __ptext88 7C6A                               __ptext97 7448  
                             __ptext89 0FDE                               __ptext98 7874  
                             __ptext99 0626                          SetBaud@status 0232  
                       i1_Reset_Timer1 113C                               _high_isr 0008  
                          ??_baudUSART 0174                       __size_of_sprintf 0C9E  
                 IsPrintableASCII@data 0001            i1ReadEEPROM_1Byte@GIEstatus 0003  
                            low_isr@rx 00ED                               _init_LCD 5E74  
                  i1SetMemoryLong@Data 0025                      ?_ContrastPWM_init 0001  
                        i1_SendLCDbyte 6C88          RTC_TIME_NONMilitary@temphours 0181  
                        __size_of_main 04D2                    i1SetMemoryLong@Test 002E  
                             delayUS@i 0179                               delayUS@j 017D  
                  i1GetMemoryLong@temp 001C              GetMemoryChar@AddressFirst 017B  
                   ??_ContrastPWM_init 01B5                           i1_BufferCopy 72FE  
         __size_of_ConfigureOscillator 0008                __end_ofi1_GetMemoryBaud 677E  
                __end_of_CheckSum_byte 068A                  ?_RTC_TIME_NONMilitary 0001  
              __end_ofi1_GetMemoryLong 64AE                           _SET_RTC_TIME 4928  
              __end_ofi1_EEPROM_UNLOCK 1094                        GetMemoryLong@MH 0194  
                      GetMemoryLong@ML 0195                         CheckSum_byte@i 017A  
                    _Multiple_I2C_Read 068A                           BufferCopy@to 017E  
               ??_I2C_Write_At_Address 0178                             _LCD_Scroll 4E54  
           __end_of_LCDdisplayFeedback 0CB4                     ?_Multiple_I2C_Read 0174  
                    ?i1_LCDPrintString 000F                     main@MemoryBurnflag 01C4  
           __size_of_WriteEEPROM_1Byte 0040                __size_of_LCDPrintString 0078  
         I2C_Write_At_Address@Register 0176                      ?_IsPrintableASCII 0001  
                      ?_UARTstringWAIT 017F                    CheckSum_byte@Parity 0179  
                   ??i1_LCDPrintString 0011                           Command@Input 01C2  
                           _INTCONbits 000FF2                     ??_IsPrintableASCII 0001  
            __size_of_InternalADC_Read 006A                 __end_ofi1_Reset_Timer1 1146  
                  ??_Multiple_I2C_Read 0177                         OpenUSART@spbrg 0174  
                     ?_SetMemoryParity 0001           __size_of_I2C_Read_Sequential 0108  
                         UARTchar@data 017E                        StringMatch@That 0176  
                      StringMatch@This 0174           i1UARTchar@NinethBit_override 0008  
                             isdigit@c 0176  Command@RTC_Battery_Value_HIGH_decimal 06CC  
                   i1_cleanBuffer16bit 0A1C                  __size_of_Start_Timer0 0004  
                __size_of_Start_Timer1 0008                  GetMemoryParity@Parity 0177  
                             intlevel1 0000                               intlevel2 0000  
               i1SendLCDbyte@isCommand 000B                              sprintf@ap 01A9  
                            sprintf@cp 019F                              sprintf@sp 018A  
                         ?_cleanBuffer 0174                         ?i1_SendLCDbyte 000B  
                  _TXdataBedroomCLOSED ED51                       ___lwmod@dividend 0174  
                     SET_RTC_TIME@temp 0189                       ___lldiv@dividend 0174  
                    _TXdataFrontCLOSED ED69                  SetMemoryParity@Parity 0179  
                  ?i1_cleanBuffer16bit 0001                    _TXdataBedroomOPENED ED5D  
                    READ_RTC_TIME@temp 017E                               low_isr@i 00E9  
                             low_isr@j 00EC                      _TXdataFrontOPENED ED75  
                       GetMemoryChar@H 017C                            _IR_New_Code 00F8  
                          ??_lowercase 0176              __end_of_Multiple_I2C_Read 06EC  
                           i1_UARTchar 7CE2                         GetMemoryLong@H 0193  
                       GetMemoryLong@L 0196                            BufferCopy@i 0182  
                __end_of_SetMemoryBaud 6948                        _Init_I2C_Master 08A0  
                __end_of_SetMemoryLong 63B4                            i1_ReadUSART 0D4E  
                          i1_ReadIRpin 110A                    _I2C_Read_At_Address 5C1A  
                       i1BufferCopy@to 000B                            Command@duty 06DC  
                          i1_SetEEPROM 74EC                   ??i1_cleanBuffer16bit 0005  
                           i1_ClearLCD 1052                           _Start_Timer0 116A  
                         _Start_Timer1 7FF8                               sprintf@c 01B3  
             __end_of_cleanBuffer16bit 074A                               sprintf@f 018C  
            RTC_TIME_NONMilitary@Error 017F                       ___lldiv@quotient 017C  
                __size_of_Zero_Config1 007A                  __size_of_Zero_Config2 0040  
                      ___lwmod@divisor 0176                      i1SetMemoryLong@MH 0033  
                    i1SetMemoryLong@ML 0034                        ___lwmod@counter 0178  
                      ?i1_Reset_Timer1 0001                           ___aldiv@sign 0183  
                    ?_ReadEEPROM_1Byte 0174              I2C_Read_Sequential@length 017A  
                          _SSPCON1bits 000FC6                       ??i1_LCDPrintChar 000F  
                          _SSPCON2bits 000FC5                  _ScrollDisplayPosition 0113  
                    ?_RTC_Clock_Enable 0001                       i1_PulseEnablePin 0E6E  
                    CheckSum_byte@This 0174                __size_of_StringAddEqual 01B2  
                       i1UARTchar@data 000B                             Command@buf 0600  
                   ??_ReadEEPROM_1Byte 0176              __end_of_TXdataFrontCLOSED ED75  
                   ??_RTC_Clock_Enable 017E                    SetMemoryParity@Test 0178  
                 ?_I2C_Read_At_Address 0176                   SendLCDbyte@isCommand 017E  
            __end_of_TXdataFrontOPENED ED81                   __size_of_Stop_Timer0 0004  
                    i1SetLCDcursor@Col 000F                             _UARTstring 7448  
                    i1SetLCDcursor@Row 0010                      i1_GetMemoryParity 1068  
               ??_RTC_TIME_NONMilitary 017E                           _USART_Status 0115  
                   ?i1_GetMemoryParity 0001                       ?i1_GetMemoryBaud 0004  
                     ?i1_GetMemoryLong 0004                        BufferCopy@count 0180  
                 __size_of_StringMatch 007E  
