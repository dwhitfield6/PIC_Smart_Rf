

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jan 23 16:59:07 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4685
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    14                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   112                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   114                           	psect	param1,global,class=BANK1,space=1,delta=1
   115  0000                     
   116                           	psect	idataBANK1
   117  0170BC                     __pidataBANK1:
   118                           	opt stack 0
   119                           
   120                           ;initializer for _BAUD
   121  0170BC  2580               	dw	9600
   122  0170BE  0000               	dw	0
   123                           
   124                           ;initializer for _LCDclearCount
   125  0170C0  61A8               	dw	25000
   126  0170C2  0000               	dw	0
   127                           
   128                           	psect	mediumconst
   129  00EF8E                     __pmediumconst:
   130                           	opt stack 0
   131  00EF8E  00                 	db	0
   132  00EF8F                     _TXToiletAlexBathroom:
   133                           	opt stack 0
   134  00EF8F  00                 	db	0
   135  00EF90  00                 	db	0
   136  00EF91  00                 	db	0
   137  00EF92  00                 	db	0
   138  00EF93  00                 	db	0
   139  00EF94  00                 	db	0
   140  00EF95  00                 	db	0
   141  00EF96  00                 	db	0
   142  00EF97  00                 	db	0
   143  00EF98  00                 	db	0
   144  00EF99  00                 	db	0
   145  00EF9A  02                 	db	2
   146  00EF9B                     __end_of_TXToiletAlexBathroom:
   147                           	opt stack 0
   148  00EF9B                     _TXToiletMyBathroom:
   149                           	opt stack 0
   150  00EF9B  00                 	db	0
   151  00EF9C  00                 	db	0
   152  00EF9D  00                 	db	0
   153  00EF9E  00                 	db	0
   154  00EF9F  00                 	db	0
   155  00EFA0  00                 	db	0
   156  00EFA1  00                 	db	0
   157  00EFA2  00                 	db	0
   158  00EFA3  00                 	db	0
   159  00EFA4  00                 	db	0
   160  00EFA5  00                 	db	0
   161  00EFA6  01                 	db	1
   162  00EFA7                     __end_of_TXToiletMyBathroom:
   163                           	opt stack 0
   164  00EFA7                     _TXdataBedroomCLOSED:
   165                           	opt stack 0
   166  00EFA7  00                 	db	0
   167  00EFA8  00                 	db	0
   168  00EFA9  00                 	db	0
   169  00EFAA  00                 	db	0
   170  00EFAB  00                 	db	0
   171  00EFAC  00                 	db	0
   172  00EFAD  00                 	db	0
   173  00EFAE  00                 	db	0
   174  00EFAF  00                 	db	0
   175  00EFB0  01                 	db	1
   176  00EFB1  00                 	db	0
   177  00EFB2  00                 	db	0
   178  00EFB3                     __end_of_TXdataBedroomCLOSED:
   179                           	opt stack 0
   180  00EFB3                     _TXdataBedroomOPENED:
   181                           	opt stack 0
   182  00EFB3  00                 	db	0
   183  00EFB4  00                 	db	0
   184  00EFB5  00                 	db	0
   185  00EFB6  00                 	db	0
   186  00EFB7  00                 	db	0
   187  00EFB8  00                 	db	0
   188  00EFB9  00                 	db	0
   189  00EFBA  00                 	db	0
   190  00EFBB  00                 	db	0
   191  00EFBC  02                 	db	2
   192  00EFBD  00                 	db	0
   193  00EFBE  00                 	db	0
   194  00EFBF                     __end_of_TXdataBedroomOPENED:
   195                           	opt stack 0
   196  00EFBF                     _TXdataFrontCLOSED:
   197                           	opt stack 0
   198  00EFBF  00                 	db	0
   199  00EFC0  00                 	db	0
   200  00EFC1  00                 	db	0
   201  00EFC2  00                 	db	0
   202  00EFC3  00                 	db	0
   203  00EFC4  00                 	db	0
   204  00EFC5  00                 	db	0
   205  00EFC6  00                 	db	0
   206  00EFC7  00                 	db	0
   207  00EFC8  00                 	db	0
   208  00EFC9  02                 	db	2
   209  00EFCA  00                 	db	0
   210  00EFCB                     __end_of_TXdataFrontCLOSED:
   211                           	opt stack 0
   212  00EFCB                     _TXdataFrontOPENED:
   213                           	opt stack 0
   214  00EFCB  00                 	db	0
   215  00EFCC  00                 	db	0
   216  00EFCD  00                 	db	0
   217  00EFCE  00                 	db	0
   218  00EFCF  00                 	db	0
   219  00EFD0  00                 	db	0
   220  00EFD1  00                 	db	0
   221  00EFD2  00                 	db	0
   222  00EFD3  00                 	db	0
   223  00EFD4  00                 	db	0
   224  00EFD5  01                 	db	1
   225  00EFD6  00                 	db	0
   226  00EFD7                     __end_of_TXdataFrontOPENED:
   227                           	opt stack 0
   228  00EFD7                     _TXdataLabCLOSED:
   229                           	opt stack 0
   230  00EFD7  00                 	db	0
   231  00EFD8  00                 	db	0
   232  00EFD9  00                 	db	0
   233  00EFDA  00                 	db	0
   234  00EFDB  00                 	db	0
   235  00EFDC  00                 	db	0
   236  00EFDD  00                 	db	0
   237  00EFDE  00                 	db	0
   238  00EFDF  02                 	db	2
   239  00EFE0  00                 	db	0
   240  00EFE1  00                 	db	0
   241  00EFE2  00                 	db	0
   242  00EFE3                     __end_of_TXdataLabCLOSED:
   243                           	opt stack 0
   244  00EFE3                     _TXdataLabOPENED:
   245                           	opt stack 0
   246  00EFE3  00                 	db	0
   247  00EFE4  00                 	db	0
   248  00EFE5  00                 	db	0
   249  00EFE6  00                 	db	0
   250  00EFE7  00                 	db	0
   251  00EFE8  00                 	db	0
   252  00EFE9  00                 	db	0
   253  00EFEA  00                 	db	0
   254  00EFEB  01                 	db	1
   255  00EFEC  00                 	db	0
   256  00EFED  00                 	db	0
   257  00EFEE  00                 	db	0
   258  00EFEF                     __end_of_TXdataLabOPENED:
   259                           	opt stack 0
   260  00EFEF                     _octpowers:
   261                           	opt stack 0
   262  00EFEF  0001               	dw	1
   263  00EFF1  0008               	dw	8
   264  00EFF3  0040               	dw	64
   265  00EFF5  0200               	dw	512
   266  00EFF7  1000               	dw	4096
   267  00EFF9  8000               	dw	32768
   268  00EFFB                     __end_of_octpowers:
   269                           	opt stack 0
   270  00EFFB                     _dpowers:
   271                           	opt stack 0
   272  00EFFB  0001               	dw	1
   273  00EFFD  000A               	dw	10
   274  00EFFF  0064               	dw	100
   275  00F001  03E8               	dw	1000
   276  00F003  2710               	dw	10000
   277  00F005                     __end_of_dpowers:
   278                           	opt stack 0
   279  00F005                     _hexpowers:
   280                           	opt stack 0
   281  00F005  0001               	dw	1
   282  00F007  0010               	dw	16
   283  00F009  0100               	dw	256
   284  00F00B  1000               	dw	4096
   285  00F00D                     __end_of_hexpowers:
   286                           	opt stack 0
   287  00F00D                     _Aux2OFF:
   288                           	opt stack 0
   289  00F00D  00                 	db	0
   290  00F00E  01                 	db	1
   291  00F00F  01                 	db	1
   292  00F010  00                 	db	0
   293  00F011  01                 	db	1
   294  00F012  00                 	db	0
   295  00F013  00                 	db	0
   296  00F014  00                 	db	0
   297  00F015  00                 	db	0
   298  00F016  00                 	db	0
   299  00F017  00                 	db	0
   300  00F018  01                 	db	1
   301  00F019  00                 	db	0
   302  00F01A  00                 	db	0
   303  00F01B  00                 	db	0
   304  00F01C  01                 	db	1
   305  00F01D                     __end_of_Aux2OFF:
   306                           	opt stack 0
   307  00F01D                     _Aux2ON:
   308                           	opt stack 0
   309  00F01D  00                 	db	0
   310  00F01E  01                 	db	1
   311  00F01F  01                 	db	1
   312  00F020  00                 	db	0
   313  00F021  01                 	db	1
   314  00F022  00                 	db	0
   315  00F023  00                 	db	0
   316  00F024  00                 	db	0
   317  00F025  00                 	db	0
   318  00F026  00                 	db	0
   319  00F027  01                 	db	1
   320  00F028  00                 	db	0
   321  00F029  00                 	db	0
   322  00F02A  00                 	db	0
   323  00F02B  00                 	db	0
   324  00F02C  01                 	db	1
   325  00F02D                     __end_of_Aux2ON:
   326                           	opt stack 0
   327  00F02D                     _AuxOFF:
   328                           	opt stack 0
   329  00F02D  00                 	db	0
   330  00F02E  01                 	db	1
   331  00F02F  01                 	db	1
   332  00F030  00                 	db	0
   333  00F031  01                 	db	1
   334  00F032  00                 	db	0
   335  00F033  01                 	db	1
   336  00F034  00                 	db	0
   337  00F035  00                 	db	0
   338  00F036  00                 	db	0
   339  00F037  00                 	db	0
   340  00F038  00                 	db	0
   341  00F039  00                 	db	0
   342  00F03A  00                 	db	0
   343  00F03B  00                 	db	0
   344  00F03C  00                 	db	0
   345  00F03D                     __end_of_AuxOFF:
   346                           	opt stack 0
   347  00F03D                     _AuxON:
   348                           	opt stack 0
   349  00F03D  00                 	db	0
   350  00F03E  01                 	db	1
   351  00F03F  01                 	db	1
   352  00F040  00                 	db	0
   353  00F041  01                 	db	1
   354  00F042  00                 	db	0
   355  00F043  00                 	db	0
   356  00F044  01                 	db	1
   357  00F045  00                 	db	0
   358  00F046  00                 	db	0
   359  00F047  00                 	db	0
   360  00F048  00                 	db	0
   361  00F049  00                 	db	0
   362  00F04A  00                 	db	0
   363  00F04B  00                 	db	0
   364  00F04C  00                 	db	0
   365  00F04D                     __end_of_AuxON:
   366                           	opt stack 0
   367  00F04D                     _BedOFF:
   368                           	opt stack 0
   369  00F04D  00                 	db	0
   370  00F04E  01                 	db	1
   371  00F04F  01                 	db	1
   372  00F050  00                 	db	0
   373  00F051  01                 	db	1
   374  00F052  00                 	db	0
   375  00F053  00                 	db	0
   376  00F054  00                 	db	0
   377  00F055  00                 	db	0
   378  00F056  01                 	db	1
   379  00F057  00                 	db	0
   380  00F058  00                 	db	0
   381  00F059  00                 	db	0
   382  00F05A  00                 	db	0
   383  00F05B  00                 	db	0
   384  00F05C  00                 	db	0
   385  00F05D                     __end_of_BedOFF:
   386                           	opt stack 0
   387  00F05D                     _BedON:
   388                           	opt stack 0
   389  00F05D  00                 	db	0
   390  00F05E  01                 	db	1
   391  00F05F  01                 	db	1
   392  00F060  00                 	db	0
   393  00F061  01                 	db	1
   394  00F062  00                 	db	0
   395  00F063  00                 	db	0
   396  00F064  00                 	db	0
   397  00F065  01                 	db	1
   398  00F066  00                 	db	0
   399  00F067  00                 	db	0
   400  00F068  00                 	db	0
   401  00F069  00                 	db	0
   402  00F06A  00                 	db	0
   403  00F06B  00                 	db	0
   404  00F06C  00                 	db	0
   405  00F06D                     __end_of_BedON:
   406                           	opt stack 0
   407  00F06D                     _SubLightOFF:
   408                           	opt stack 0
   409  00F06D  00                 	db	0
   410  00F06E  01                 	db	1
   411  00F06F  01                 	db	1
   412  00F070  00                 	db	0
   413  00F071  01                 	db	1
   414  00F072  00                 	db	0
   415  00F073  00                 	db	0
   416  00F074  00                 	db	0
   417  00F075  00                 	db	0
   418  00F076  00                 	db	0
   419  00F077  00                 	db	0
   420  00F078  01                 	db	1
   421  00F079  00                 	db	0
   422  00F07A  01                 	db	1
   423  00F07B  00                 	db	0
   424  00F07C  00                 	db	0
   425  00F07D                     __end_of_SubLightOFF:
   426                           	opt stack 0
   427  00F07D                     _SubLightON:
   428                           	opt stack 0
   429  00F07D  00                 	db	0
   430  00F07E  01                 	db	1
   431  00F07F  01                 	db	1
   432  00F080  00                 	db	0
   433  00F081  01                 	db	1
   434  00F082  00                 	db	0
   435  00F083  00                 	db	0
   436  00F084  00                 	db	0
   437  00F085  00                 	db	0
   438  00F086  00                 	db	0
   439  00F087  01                 	db	1
   440  00F088  00                 	db	0
   441  00F089  00                 	db	0
   442  00F08A  01                 	db	1
   443  00F08B  00                 	db	0
   444  00F08C  00                 	db	0
   445  00F08D                     __end_of_SubLightON:
   446                           	opt stack 0
   447  00F08D                     _fanOFF:
   448                           	opt stack 0
   449  00F08D  00                 	db	0
   450  00F08E  01                 	db	1
   451  00F08F  01                 	db	1
   452  00F090  00                 	db	0
   453  00F091  01                 	db	1
   454  00F092  00                 	db	0
   455  00F093  00                 	db	0
   456  00F094  00                 	db	0
   457  00F095  00                 	db	0
   458  00F096  00                 	db	0
   459  00F097  00                 	db	0
   460  00F098  01                 	db	1
   461  00F099  00                 	db	0
   462  00F09A  00                 	db	0
   463  00F09B  00                 	db	0
   464  00F09C  00                 	db	0
   465  00F09D                     __end_of_fanOFF:
   466                           	opt stack 0
   467  00F09D                     _fanON:
   468                           	opt stack 0
   469  00F09D  00                 	db	0
   470  00F09E  01                 	db	1
   471  00F09F  01                 	db	1
   472  00F0A0  00                 	db	0
   473  00F0A1  01                 	db	1
   474  00F0A2  00                 	db	0
   475  00F0A3  00                 	db	0
   476  00F0A4  00                 	db	0
   477  00F0A5  00                 	db	0
   478  00F0A6  00                 	db	0
   479  00F0A7  01                 	db	1
   480  00F0A8  00                 	db	0
   481  00F0A9  00                 	db	0
   482  00F0AA  00                 	db	0
   483  00F0AB  00                 	db	0
   484  00F0AC  00                 	db	0
   485  00F0AD                     __end_of_fanON:
   486                           	opt stack 0
   487  00F0AD                     _TXdataD:
   488                           	opt stack 0
   489  00F0AD  02                 	db	2
   490  00F0AE  02                 	db	2
   491  00F0AF  02                 	db	2
   492  00F0B0  02                 	db	2
   493  00F0B1  02                 	db	2
   494  00F0B2  02                 	db	2
   495  00F0B3  00                 	db	0
   496  00F0B4  00                 	db	0
   497  00F0B5  01                 	db	1
   498  00F0B6  00                 	db	0
   499  00F0B7  00                 	db	0
   500  00F0B8  00                 	db	0
   501  00F0B9                     __end_of_TXdataD:
   502                           	opt stack 0
   503  00F0B9                     _TXdataE:
   504                           	opt stack 0
   505  00F0B9  00                 	db	0
   506  00F0BA  02                 	db	2
   507  00F0BB  02                 	db	2
   508  00F0BC  02                 	db	2
   509  00F0BD  02                 	db	2
   510  00F0BE  02                 	db	2
   511  00F0BF  00                 	db	0
   512  00F0C0  00                 	db	0
   513  00F0C1  01                 	db	1
   514  00F0C2  00                 	db	0
   515  00F0C3  00                 	db	0
   516  00F0C4  00                 	db	0
   517  00F0C5                     __end_of_TXdataE:
   518                           	opt stack 0
   519  00F0C5                     _TXdataF:
   520                           	opt stack 0
   521  00F0C5  02                 	db	2
   522  00F0C6  00                 	db	0
   523  00F0C7  02                 	db	2
   524  00F0C8  02                 	db	2
   525  00F0C9  02                 	db	2
   526  00F0CA  02                 	db	2
   527  00F0CB  00                 	db	0
   528  00F0CC  00                 	db	0
   529  00F0CD  01                 	db	1
   530  00F0CE  00                 	db	0
   531  00F0CF  00                 	db	0
   532  00F0D0  00                 	db	0
   533  00F0D1                     __end_of_TXdataF:
   534                           	opt stack 0
   535  0000                     _ADCON0	set	4034
   536  0000                     _ADCON1	set	4033
   537  0000                     _ADCON2	set	4032
   538  0000                     _ADRESH	set	4036
   539  0000                     _ADRESL	set	4035
   540  0000                     _BAUDCON	set	4024
   541  0000                     _CCP1CON	set	4029
   542  0000                     _CCPR1L	set	4030
   543  0000                     _ECCP1CON	set	4026
   544  0000                     _ECCPR1L	set	4027
   545  0000                     _INTCONbits	set	4082
   546  0000                     _IPR1bits	set	3999
   547  0000                     _LATA	set	3977
   548  0000                     _LATC	set	3979
   549  0000                     _LATD	set	3980
   550  0000                     _LATE	set	3981
   551  0000                     _OSCCON	set	4051
   552  0000                     _PIE1	set	3997
   553  0000                     _PIE1bits	set	3997
   554  0000                     _PIR1bits	set	3998
   555  0000                     _PIR2bits	set	4001
   556  0000                     _PR2	set	4043
   557  0000                     _RCONbits	set	4048
   558  0000                     _RCREG	set	4014
   559  0000                     _RCSTA	set	4011
   560  0000                     _RCSTAbits	set	4011
   561  0000                     _SPBRG	set	4015
   562  0000                     _SPBRGH	set	4016
   563  0000                     _SSPADD	set	4040
   564  0000                     _SSPBUF	set	4041
   565  0000                     _SSPCON1	set	4038
   566  0000                     _SSPCON1bits	set	4038
   567  0000                     _SSPCON2	set	4037
   568  0000                     _SSPCON2bits	set	4037
   569  0000                     _SSPSTAT	set	4039
   570  0000                     _SSPSTATbits	set	4039
   571  0000                     _T2CON	set	4042
   572  0000                     _TRISAbits	set	3986
   573  0000                     _TRISCbits	set	3988
   574  0000                     _TRISDbits	set	3989
   575  0000                     _TRISEbits	set	3990
   576  0000                     _TXREG	set	4013
   577  0000                     _TXSTA	set	4012
   578  0000                     _TXSTAbits	set	4012
   579  00F0D1                     __stringdata:
   580                           	opt stack 0
   581  00F0D1                     STR_194:
   582  00F0D1  54                 	db	84	;'T'
   583  00F0D2  6F                 	db	111	;'o'
   584  00F0D3  20                 	db	32
   585  00F0D4  72                 	db	114	;'r'
   586  00F0D5  65                 	db	101	;'e'
   587  00F0D6  61                 	db	97	;'a'
   588  00F0D7  64                 	db	100	;'d'
   589  00F0D8  20                 	db	32
   590  00F0D9  61                 	db	97	;'a'
   591  00F0DA  6E                 	db	110	;'n'
   592  00F0DB  64                 	db	100	;'d'
   593  00F0DC  20                 	db	32
   594  00F0DD  61                 	db	97	;'a'
   595  00F0DE  64                 	db	100	;'d'
   596  00F0DF  63                 	db	99	;'c'
   597  00F0E0  20                 	db	32
   598  00F0E1  63                 	db	99	;'c'
   599  00F0E2  68                 	db	104	;'h'
   600  00F0E3  61                 	db	97	;'a'
   601  00F0E4  6E                 	db	110	;'n'
   602  00F0E5  6E                 	db	110	;'n'
   603  00F0E6  65                 	db	101	;'e'
   604  00F0E7  6C                 	db	108	;'l'
   605  00F0E8  2C                 	db	44
   606  00F0E9  20                 	db	32
   607  00F0EA  74                 	db	116	;'t'
   608  00F0EB  79                 	db	121	;'y'
   609  00F0EC  70                 	db	112	;'p'
   610  00F0ED  65                 	db	101	;'e'
   611  00F0EE  20                 	db	32
   612  00F0EF  74                 	db	116	;'t'
   613  00F0F0  68                 	db	104	;'h'
   614  00F0F1  65                 	db	101	;'e'
   615  00F0F2  20                 	db	32
   616  00F0F3  63                 	db	99	;'c'
   617  00F0F4  6F                 	db	111	;'o'
   618  00F0F5  6D                 	db	109	;'m'
   619  00F0F6  6D                 	db	109	;'m'
   620  00F0F7  61                 	db	97	;'a'
   621  00F0F8  6E                 	db	110	;'n'
   622  00F0F9  64                 	db	100	;'d'
   623  00F0FA  0D                 	db	13
   624  00F0FB  0A                 	db	10
   625  00F0FC  20                 	db	32
   626  00F0FD  41                 	db	65	;'A'
   627  00F0FE  44                 	db	68	;'D'
   628  00F0FF  43                 	db	67	;'C'
   629  00F100  20                 	db	32
   630  00F101  66                 	db	102	;'f'
   631  00F102  6F                 	db	111	;'o'
   632  00F103  6C                 	db	108	;'l'
   633  00F104  6C                 	db	108	;'l'
   634  00F105  6F                 	db	111	;'o'
   635  00F106  77                 	db	119	;'w'
   636  00F107  65                 	db	101	;'e'
   637  00F108  64                 	db	100	;'d'
   638  00F109  20                 	db	32
   639  00F10A  62                 	db	98	;'b'
   640  00F10B  79                 	db	121	;'y'
   641  00F10C  20                 	db	32
   642  00F10D  27                 	db	39
   643  00F10E  43                 	db	67	;'C'
   644  00F10F  68                 	db	104	;'h'
   645  00F110  61                 	db	97	;'a'
   646  00F111  6E                 	db	110	;'n'
   647  00F112  6E                 	db	110	;'n'
   648  00F113  65                 	db	101	;'e'
   649  00F114  6C                 	db	108	;'l'
   650  00F115  27                 	db	39
   651  00F116  20                 	db	32
   652  00F117  0D                 	db	13
   653  00F118  0A                 	db	10
   654  00F119  00                 	db	0
   655  00F11A                     STR_226:
   656  00F11A  54                 	db	84	;'T'
   657  00F11B  6F                 	db	111	;'o'
   658  00F11C  20                 	db	32
   659  00F11D  63                 	db	99	;'c'
   660  00F11E  6F                 	db	111	;'o'
   661  00F11F  6D                 	db	109	;'m'
   662  00F120  6D                 	db	109	;'m'
   663  00F121  61                 	db	97	;'a'
   664  00F122  6E                 	db	110	;'n'
   665  00F123  64                 	db	100	;'d'
   666  00F124  20                 	db	32
   667  00F125  74                 	db	116	;'t'
   668  00F126  68                 	db	104	;'h'
   669  00F127  65                 	db	101	;'e'
   670  00F128  20                 	db	32
   671  00F129  52                 	db	82	;'R'
   672  00F12A  54                 	db	84	;'T'
   673  00F12B  43                 	db	67	;'C'
   674  00F12C  2C                 	db	44
   675  00F12D  20                 	db	32
   676  00F12E  74                 	db	116	;'t'
   677  00F12F  79                 	db	121	;'y'
   678  00F130  70                 	db	112	;'p'
   679  00F131  65                 	db	101	;'e'
   680  00F132  20                 	db	32
   681  00F133  74                 	db	116	;'t'
   682  00F134  68                 	db	104	;'h'
   683  00F135  65                 	db	101	;'e'
   684  00F136  20                 	db	32
   685  00F137  61                 	db	97	;'a'
   686  00F138  63                 	db	99	;'c'
   687  00F139  74                 	db	116	;'t'
   688  00F13A  69                 	db	105	;'i'
   689  00F13B  6F                 	db	111	;'o'
   690  00F13C  6E                 	db	110	;'n'
   691  00F13D  0D                 	db	13
   692  00F13E  0A                 	db	10
   693  00F13F  20                 	db	32
   694  00F140  66                 	db	102	;'f'
   695  00F141  6F                 	db	111	;'o'
   696  00F142  6C                 	db	108	;'l'
   697  00F143  6C                 	db	108	;'l'
   698  00F144  6F                 	db	111	;'o'
   699  00F145  77                 	db	119	;'w'
   700  00F146  65                 	db	101	;'e'
   701  00F147  64                 	db	100	;'d'
   702  00F148  20                 	db	32
   703  00F149  62                 	db	98	;'b'
   704  00F14A  79                 	db	121	;'y'
   705  00F14B  20                 	db	32
   706  00F14C  74                 	db	116	;'t'
   707  00F14D  68                 	db	104	;'h'
   708  00F14E  65                 	db	101	;'e'
   709  00F14F  20                 	db	32
   710  00F150  70                 	db	112	;'p'
   711  00F151  61                 	db	97	;'a'
   712  00F152  72                 	db	114	;'r'
   713  00F153  61                 	db	97	;'a'
   714  00F154  6D                 	db	109	;'m'
   715  00F155  65                 	db	101	;'e'
   716  00F156  74                 	db	116	;'t'
   717  00F157  65                 	db	101	;'e'
   718  00F158  72                 	db	114	;'r'
   719  00F159  73                 	db	115	;'s'
   720  00F15A  20                 	db	32
   721  00F15B  0D                 	db	13
   722  00F15C  0A                 	db	10
   723  00F15D  0A                 	db	10
   724  00F15E  00                 	db	0
   725  00F15F                     STR_45:
   726  00F15F  54                 	db	84	;'T'
   727  00F160  6F                 	db	111	;'o'
   728  00F161  20                 	db	32
   729  00F162  63                 	db	99	;'c'
   730  00F163  6F                 	db	111	;'o'
   731  00F164  6E                 	db	110	;'n'
   732  00F165  74                 	db	116	;'t'
   733  00F166  72                 	db	114	;'r'
   734  00F167  6F                 	db	111	;'o'
   735  00F168  6C                 	db	108	;'l'
   736  00F169  20                 	db	32
   737  00F16A  61                 	db	97	;'a'
   738  00F16B  20                 	db	32
   739  00F16C  64                 	db	100	;'d'
   740  00F16D  65                 	db	101	;'e'
   741  00F16E  76                 	db	118	;'v'
   742  00F16F  69                 	db	105	;'i'
   743  00F170  63                 	db	99	;'c'
   744  00F171  65                 	db	101	;'e'
   745  00F172  20                 	db	32
   746  00F173  65                 	db	101	;'e'
   747  00F174  6E                 	db	110	;'n'
   748  00F175  74                 	db	116	;'t'
   749  00F176  65                 	db	101	;'e'
   750  00F177  72                 	db	114	;'r'
   751  00F178  20                 	db	32
   752  00F179  74                 	db	116	;'t'
   753  00F17A  68                 	db	104	;'h'
   754  00F17B  65                 	db	101	;'e'
   755  00F17C  20                 	db	32
   756  00F17D  64                 	db	100	;'d'
   757  00F17E  65                 	db	101	;'e'
   758  00F17F  76                 	db	118	;'v'
   759  00F180  69                 	db	105	;'i'
   760  00F181  63                 	db	99	;'c'
   761  00F182  65                 	db	101	;'e'
   762  00F183  20                 	db	32
   763  00F184  66                 	db	102	;'f'
   764  00F185  6F                 	db	111	;'o'
   765  00F186  6C                 	db	108	;'l'
   766  00F187  6C                 	db	108	;'l'
   767  00F188  6F                 	db	111	;'o'
   768  00F189  77                 	db	119	;'w'
   769  00F18A  65                 	db	101	;'e'
   770  00F18B  64                 	db	100	;'d'
   771  00F18C  20                 	db	32
   772  00F18D  62                 	db	98	;'b'
   773  00F18E  79                 	db	121	;'y'
   774  00F18F  20                 	db	32
   775  00F190  27                 	db	39
   776  00F191  3D                 	db	61	;'='
   777  00F192  27                 	db	39
   778  00F193  20                 	db	32
   779  00F194  61                 	db	97	;'a'
   780  00F195  6E                 	db	110	;'n'
   781  00F196  64                 	db	100	;'d'
   782  00F197  20                 	db	32
   783  00F198  27                 	db	39
   784  00F199  4F                 	db	79	;'O'
   785  00F19A  6E                 	db	110	;'n'
   786  00F19B  2F                 	db	47
   787  00F19C  4F                 	db	79	;'O'
   788  00F19D  66                 	db	102	;'f'
   789  00F19E  66                 	db	102	;'f'
   790  00F19F  27                 	db	39
   791  00F1A0  0D                 	db	13
   792  00F1A1  0A                 	db	10
   793  00F1A2  00                 	db	0
   794  00F1A3                     STR_156:
   795  00F1A3  54                 	db	84	;'T'
   796  00F1A4  6F                 	db	111	;'o'
   797  00F1A5  20                 	db	32
   798  00F1A6  73                 	db	115	;'s'
   799  00F1A7  65                 	db	101	;'e'
   800  00F1A8  74                 	db	116	;'t'
   801  00F1A9  20                 	db	32
   802  00F1AA  74                 	db	116	;'t'
   803  00F1AB  65                 	db	101	;'e'
   804  00F1AC  20                 	db	32
   805  00F1AD  50                 	db	80	;'P'
   806  00F1AE  57                 	db	87	;'W'
   807  00F1AF  4D                 	db	77	;'M'
   808  00F1B0  20                 	db	32
   809  00F1B1  62                 	db	98	;'b'
   810  00F1B2  72                 	db	114	;'r'
   811  00F1B3  69                 	db	105	;'i'
   812  00F1B4  67                 	db	103	;'g'
   813  00F1B5  68                 	db	104	;'h'
   814  00F1B6  74                 	db	116	;'t'
   815  00F1B7  6E                 	db	110	;'n'
   816  00F1B8  65                 	db	101	;'e'
   817  00F1B9  73                 	db	115	;'s'
   818  00F1BA  73                 	db	115	;'s'
   819  00F1BB  20                 	db	32
   820  00F1BC  65                 	db	101	;'e'
   821  00F1BD  6E                 	db	110	;'n'
   822  00F1BE  74                 	db	116	;'t'
   823  00F1BF  65                 	db	101	;'e'
   824  00F1C0  72                 	db	114	;'r'
   825  00F1C1  20                 	db	32
   826  00F1C2  27                 	db	39
   827  00F1C3  52                 	db	82	;'R'
   828  00F1C4  65                 	db	101	;'e'
   829  00F1C5  64                 	db	100	;'d'
   830  00F1C6  20                 	db	32
   831  00F1C7  4C                 	db	76	;'L'
   832  00F1C8  45                 	db	69	;'E'
   833  00F1C9  44                 	db	68	;'D'
   834  00F1CA  20                 	db	32
   835  00F1CB  62                 	db	98	;'b'
   836  00F1CC  72                 	db	114	;'r'
   837  00F1CD  69                 	db	105	;'i'
   838  00F1CE  67                 	db	103	;'g'
   839  00F1CF  68                 	db	104	;'h'
   840  00F1D0  74                 	db	116	;'t'
   841  00F1D1  6E                 	db	110	;'n'
   842  00F1D2  65                 	db	101	;'e'
   843  00F1D3  73                 	db	115	;'s'
   844  00F1D4  73                 	db	115	;'s'
   845  00F1D5  20                 	db	32
   846  00F1D6  3D                 	db	61	;'='
   847  00F1D7  20                 	db	32
   848  00F1D8  64                 	db	100	;'d'
   849  00F1D9  75                 	db	117	;'u'
   850  00F1DA  74                 	db	116	;'t'
   851  00F1DB  79                 	db	121	;'y'
   852  00F1DC  63                 	db	99	;'c'
   853  00F1DD  79                 	db	121	;'y'
   854  00F1DE  63                 	db	99	;'c'
   855  00F1DF  6C                 	db	108	;'l'
   856  00F1E0  65                 	db	101	;'e'
   857  00F1E1  27                 	db	39
   858  00F1E2  0D                 	db	13
   859  00F1E3  0A                 	db	10
   860  00F1E4  00                 	db	0
   861  00F1E5                     STR_173:
   862  00F1E5  54                 	db	84	;'T'
   863  00F1E6  6F                 	db	111	;'o'
   864  00F1E7  20                 	db	32
   865  00F1E8  73                 	db	115	;'s'
   866  00F1E9  65                 	db	101	;'e'
   867  00F1EA  74                 	db	116	;'t'
   868  00F1EB  20                 	db	32
   869  00F1EC  43                 	db	67	;'C'
   870  00F1ED  6F                 	db	111	;'o'
   871  00F1EE  6E                 	db	110	;'n'
   872  00F1EF  74                 	db	116	;'t'
   873  00F1F0  72                 	db	114	;'r'
   874  00F1F1  61                 	db	97	;'a'
   875  00F1F2  73                 	db	115	;'s'
   876  00F1F3  74                 	db	116	;'t'
   877  00F1F4  20                 	db	32
   878  00F1F5  50                 	db	80	;'P'
   879  00F1F6  57                 	db	87	;'W'
   880  00F1F7  4D                 	db	77	;'M'
   881  00F1F8  20                 	db	32
   882  00F1F9  62                 	db	98	;'b'
   883  00F1FA  72                 	db	114	;'r'
   884  00F1FB  69                 	db	105	;'i'
   885  00F1FC  67                 	db	103	;'g'
   886  00F1FD  68                 	db	104	;'h'
   887  00F1FE  74                 	db	116	;'t'
   888  00F1FF  6E                 	db	110	;'n'
   889  00F200  65                 	db	101	;'e'
   890  00F201  73                 	db	115	;'s'
   891  00F202  73                 	db	115	;'s'
   892  00F203  20                 	db	32
   893  00F204  65                 	db	101	;'e'
   894  00F205  6E                 	db	110	;'n'
   895  00F206  74                 	db	116	;'t'
   896  00F207  65                 	db	101	;'e'
   897  00F208  72                 	db	114	;'r'
   898  00F209  20                 	db	32
   899  00F20A  27                 	db	39
   900  00F20B  43                 	db	67	;'C'
   901  00F20C  6F                 	db	111	;'o'
   902  00F20D  6E                 	db	110	;'n'
   903  00F20E  74                 	db	116	;'t'
   904  00F20F  72                 	db	114	;'r'
   905  00F210  61                 	db	97	;'a'
   906  00F211  73                 	db	115	;'s'
   907  00F212  74                 	db	116	;'t'
   908  00F213  20                 	db	32
   909  00F214  3D                 	db	61	;'='
   910  00F215  20                 	db	32
   911  00F216  64                 	db	100	;'d'
   912  00F217  75                 	db	117	;'u'
   913  00F218  74                 	db	116	;'t'
   914  00F219  79                 	db	121	;'y'
   915  00F21A  63                 	db	99	;'c'
   916  00F21B  79                 	db	121	;'y'
   917  00F21C  63                 	db	99	;'c'
   918  00F21D  6C                 	db	108	;'l'
   919  00F21E  65                 	db	101	;'e'
   920  00F21F  27                 	db	39
   921  00F220  0D                 	db	13
   922  00F221  0A                 	db	10
   923  00F222  00                 	db	0
   924  00F223                     STR_227:
   925  00F223  66                 	db	102	;'f'
   926  00F224  75                 	db	117	;'u'
   927  00F225  72                 	db	114	;'r'
   928  00F226  74                 	db	116	;'t'
   929  00F227  68                 	db	104	;'h'
   930  00F228  65                 	db	101	;'e'
   931  00F229  72                 	db	114	;'r'
   932  00F22A  20                 	db	32
   933  00F22B  73                 	db	115	;'s'
   934  00F22C  75                 	db	117	;'u'
   935  00F22D  62                 	db	98	;'b'
   936  00F22E  20                 	db	32
   937  00F22F  6D                 	db	109	;'m'
   938  00F230  65                 	db	101	;'e'
   939  00F231  6E                 	db	110	;'n'
   940  00F232  75                 	db	117	;'u'
   941  00F233  73                 	db	115	;'s'
   942  00F234  20                 	db	32
   943  00F235  61                 	db	97	;'a'
   944  00F236  76                 	db	118	;'v'
   945  00F237  61                 	db	97	;'a'
   946  00F238  69                 	db	105	;'i'
   947  00F239  6C                 	db	108	;'l'
   948  00F23A  61                 	db	97	;'a'
   949  00F23B  62                 	db	98	;'b'
   950  00F23C  6C                 	db	108	;'l'
   951  00F23D  65                 	db	101	;'e'
   952  00F23E  20                 	db	32
   953  00F23F  62                 	db	98	;'b'
   954  00F240  79                 	db	121	;'y'
   955  00F241  20                 	db	32
   956  00F242  65                 	db	101	;'e'
   957  00F243  6E                 	db	110	;'n'
   958  00F244  74                 	db	116	;'t'
   959  00F245  65                 	db	101	;'e'
   960  00F246  72                 	db	114	;'r'
   961  00F247  69                 	db	105	;'i'
   962  00F248  6E                 	db	110	;'n'
   963  00F249  67                 	db	103	;'g'
   964  00F24A  20                 	db	32
   965  00F24B  74                 	db	116	;'t'
   966  00F24C  68                 	db	104	;'h'
   967  00F24D  65                 	db	101	;'e'
   968  00F24E  20                 	db	32
   969  00F24F  61                 	db	97	;'a'
   970  00F250  63                 	db	99	;'c'
   971  00F251  74                 	db	116	;'t'
   972  00F252  69                 	db	105	;'i'
   973  00F253  6F                 	db	111	;'o'
   974  00F254  6E                 	db	110	;'n'
   975  00F255  20                 	db	32
   976  00F256  61                 	db	97	;'a'
   977  00F257  6E                 	db	110	;'n'
   978  00F258  64                 	db	100	;'d'
   979  00F259  20                 	db	32
   980  00F25A  61                 	db	97	;'a'
   981  00F25B  20                 	db	32
   982  00F25C  27                 	db	39
   983  00F25D  3F                 	db	63	;'?'
   984  00F25E  27                 	db	39
   985  00F25F  00                 	db	0
   986  00F260                     STR_261:
   987  00F260  46                 	db	70	;'F'
   988  00F261  6F                 	db	111	;'o'
   989  00F262  72                 	db	114	;'r'
   990  00F263  20                 	db	32
   991  00F264  44                 	db	68	;'D'
   992  00F265  65                 	db	101	;'e'
   993  00F266  76                 	db	118	;'v'
   994  00F267  69                 	db	105	;'i'
   995  00F268  63                 	db	99	;'c'
   996  00F269  65                 	db	101	;'e'
   997  00F26A  20                 	db	32
   998  00F26B  68                 	db	104	;'h'
   999  00F26C  65                 	db	101	;'e'
  1000  00F26D  6C                 	db	108	;'l'
  1001  00F26E  70                 	db	112	;'p'
  1002  00F26F  20                 	db	32
  1003  00F270  65                 	db	101	;'e'
  1004  00F271  6E                 	db	110	;'n'
  1005  00F272  74                 	db	116	;'t'
  1006  00F273  65                 	db	101	;'e'
  1007  00F274  72                 	db	114	;'r'
  1008  00F275  20                 	db	32
  1009  00F276  64                 	db	100	;'d'
  1010  00F277  65                 	db	101	;'e'
  1011  00F278  76                 	db	118	;'v'
  1012  00F279  69                 	db	105	;'i'
  1013  00F27A  63                 	db	99	;'c'
  1014  00F27B  65                 	db	101	;'e'
  1015  00F27C  20                 	db	32
  1016  00F27D  66                 	db	102	;'f'
  1017  00F27E  6F                 	db	111	;'o'
  1018  00F27F  6C                 	db	108	;'l'
  1019  00F280  6C                 	db	108	;'l'
  1020  00F281  6F                 	db	111	;'o'
  1021  00F282  77                 	db	119	;'w'
  1022  00F283  65                 	db	101	;'e'
  1023  00F284  64                 	db	100	;'d'
  1024  00F285  20                 	db	32
  1025  00F286  62                 	db	98	;'b'
  1026  00F287  79                 	db	121	;'y'
  1027  00F288  20                 	db	32
  1028  00F289  61                 	db	97	;'a'
  1029  00F28A  20                 	db	32
  1030  00F28B  27                 	db	39
  1031  00F28C  3F                 	db	63	;'?'
  1032  00F28D  27                 	db	39
  1033  00F28E  20                 	db	32
  1034  00F28F  0D                 	db	13
  1035  00F290  0A                 	db	10
  1036  00F291  00                 	db	0
  1037  00F292                     STR_153:
  1038  00F292  72                 	db	114	;'r'
  1039  00F293  65                 	db	101	;'e'
  1040  00F294  64                 	db	100	;'d'
  1041  00F295  6C                 	db	108	;'l'
  1042  00F296  65                 	db	101	;'e'
  1043  00F297  64                 	db	100	;'d'
  1044  00F298  20                 	db	32
  1045  00F299  77                 	db	119	;'w'
  1046  00F29A  68                 	db	104	;'h'
  1047  00F29B  61                 	db	97	;'a'
  1048  00F29C  74                 	db	116	;'t'
  1049  00F29D  3F                 	db	63	;'?'
  1050  00F29E  3F                 	db	63	;'?'
  1051  00F29F  3F                 	db	63	;'?'
  1052  00F2A0  20                 	db	32
  1053  00F2A1  44                 	db	68	;'D'
  1054  00F2A2  6F                 	db	111	;'o'
  1055  00F2A3  20                 	db	32
  1056  00F2A4  79                 	db	121	;'y'
  1057  00F2A5  6F                 	db	111	;'o'
  1058  00F2A6  75                 	db	117	;'u'
  1059  00F2A7  20                 	db	32
  1060  00F2A8  6D                 	db	109	;'m'
  1061  00F2A9  65                 	db	101	;'e'
  1062  00F2AA  61                 	db	97	;'a'
  1063  00F2AB  6E                 	db	110	;'n'
  1064  00F2AC  20                 	db	32
  1065  00F2AD  52                 	db	82	;'R'
  1066  00F2AE  65                 	db	101	;'e'
  1067  00F2AF  64                 	db	100	;'d'
  1068  00F2B0  20                 	db	32
  1069  00F2B1  4C                 	db	76	;'L'
  1070  00F2B2  65                 	db	101	;'e'
  1071  00F2B3  64                 	db	100	;'d'
  1072  00F2B4  20                 	db	32
  1073  00F2B5  42                 	db	66	;'B'
  1074  00F2B6  72                 	db	114	;'r'
  1075  00F2B7  69                 	db	105	;'i'
  1076  00F2B8  67                 	db	103	;'g'
  1077  00F2B9  68                 	db	104	;'h'
  1078  00F2BA  74                 	db	116	;'t'
  1079  00F2BB  6E                 	db	110	;'n'
  1080  00F2BC  65                 	db	101	;'e'
  1081  00F2BD  73                 	db	115	;'s'
  1082  00F2BE  73                 	db	115	;'s'
  1083  00F2BF  3F                 	db	63	;'?'
  1084  00F2C0  3F                 	db	63	;'?'
  1085  00F2C1  3F                 	db	63	;'?'
  1086  00F2C2  00                 	db	0
  1087  00F2C3                     STR_166:
  1088  00F2C3  49                 	db	73	;'I'
  1089  00F2C4  6E                 	db	110	;'n'
  1090  00F2C5  76                 	db	118	;'v'
  1091  00F2C6  61                 	db	97	;'a'
  1092  00F2C7  6C                 	db	108	;'l'
  1093  00F2C8  69                 	db	105	;'i'
  1094  00F2C9  64                 	db	100	;'d'
  1095  00F2CA  20                 	db	32
  1096  00F2CB  43                 	db	67	;'C'
  1097  00F2CC  6F                 	db	111	;'o'
  1098  00F2CD  6E                 	db	110	;'n'
  1099  00F2CE  74                 	db	116	;'t'
  1100  00F2CF  72                 	db	114	;'r'
  1101  00F2D0  61                 	db	97	;'a'
  1102  00F2D1  73                 	db	115	;'s'
  1103  00F2D2  74                 	db	116	;'t'
  1104  00F2D3  20                 	db	32
  1105  00F2D4  44                 	db	68	;'D'
  1106  00F2D5  75                 	db	117	;'u'
  1107  00F2D6  74                 	db	116	;'t'
  1108  00F2D7  79                 	db	121	;'y'
  1109  00F2D8  20                 	db	32
  1110  00F2D9  63                 	db	99	;'c'
  1111  00F2DA  79                 	db	121	;'y'
  1112  00F2DB  63                 	db	99	;'c'
  1113  00F2DC  6C                 	db	108	;'l'
  1114  00F2DD  65                 	db	101	;'e'
  1115  00F2DE  3A                 	db	58	;':'
  1116  00F2DF  20                 	db	32
  1117  00F2E0  47                 	db	71	;'G'
  1118  00F2E1  72                 	db	114	;'r'
  1119  00F2E2  65                 	db	101	;'e'
  1120  00F2E3  61                 	db	97	;'a'
  1121  00F2E4  74                 	db	116	;'t'
  1122  00F2E5  65                 	db	101	;'e'
  1123  00F2E6  72                 	db	114	;'r'
  1124  00F2E7  20                 	db	32
  1125  00F2E8  74                 	db	116	;'t'
  1126  00F2E9  68                 	db	104	;'h'
  1127  00F2EA  61                 	db	97	;'a'
  1128  00F2EB  6E                 	db	110	;'n'
  1129  00F2EC  20                 	db	32
  1130  00F2ED  31                 	db	49	;'1'
  1131  00F2EE  30                 	db	48	;'0'
  1132  00F2EF  30                 	db	48	;'0'
  1133  00F2F0  0D                 	db	13
  1134  00F2F1  0A                 	db	10
  1135  00F2F2  00                 	db	0
  1136  00F2F3                     STR_168:
  1137  00F2F3  49                 	db	73	;'I'
  1138  00F2F4  6E                 	db	110	;'n'
  1139  00F2F5  76                 	db	118	;'v'
  1140  00F2F6  61                 	db	97	;'a'
  1141  00F2F7  6C                 	db	108	;'l'
  1142  00F2F8  69                 	db	105	;'i'
  1143  00F2F9  64                 	db	100	;'d'
  1144  00F2FA  20                 	db	32
  1145  00F2FB  43                 	db	67	;'C'
  1146  00F2FC  6F                 	db	111	;'o'
  1147  00F2FD  6E                 	db	110	;'n'
  1148  00F2FE  74                 	db	116	;'t'
  1149  00F2FF  72                 	db	114	;'r'
  1150  00F300  61                 	db	97	;'a'
  1151  00F301  73                 	db	115	;'s'
  1152  00F302  74                 	db	116	;'t'
  1153  00F303  20                 	db	32
  1154  00F304  44                 	db	68	;'D'
  1155  00F305  75                 	db	117	;'u'
  1156  00F306  74                 	db	116	;'t'
  1157  00F307  79                 	db	121	;'y'
  1158  00F308  20                 	db	32
  1159  00F309  43                 	db	67	;'C'
  1160  00F30A  79                 	db	121	;'y'
  1161  00F30B  63                 	db	99	;'c'
  1162  00F30C  6C                 	db	108	;'l'
  1163  00F30D  65                 	db	101	;'e'
  1164  00F30E  3A                 	db	58	;':'
  1165  00F30F  20                 	db	32
  1166  00F310  4C                 	db	76	;'L'
  1167  00F311  65                 	db	101	;'e'
  1168  00F312  73                 	db	115	;'s'
  1169  00F313  73                 	db	115	;'s'
  1170  00F314  20                 	db	32
  1171  00F315  74                 	db	116	;'t'
  1172  00F316  68                 	db	104	;'h'
  1173  00F317  61                 	db	97	;'a'
  1174  00F318  6E                 	db	110	;'n'
  1175  00F319  20                 	db	32
  1176  00F31A  30                 	db	48	;'0'
  1177  00F31B  0D                 	db	13
  1178  00F31C  0A                 	db	10
  1179  00F31D  00                 	db	0
  1180  00F31E                     STR_157:
  1181  00F31E  77                 	db	119	;'w'
  1182  00F31F  68                 	db	104	;'h'
  1183  00F320  65                 	db	101	;'e'
  1184  00F321  72                 	db	114	;'r'
  1185  00F322  65                 	db	101	;'e'
  1186  00F323  20                 	db	32
  1187  00F324  74                 	db	116	;'t'
  1188  00F325  68                 	db	104	;'h'
  1189  00F326  65                 	db	101	;'e'
  1190  00F327  20                 	db	32
  1191  00F328  64                 	db	100	;'d'
  1192  00F329  75                 	db	117	;'u'
  1193  00F32A  74                 	db	116	;'t'
  1194  00F32B  79                 	db	121	;'y'
  1195  00F32C  63                 	db	99	;'c'
  1196  00F32D  79                 	db	121	;'y'
  1197  00F32E  63                 	db	99	;'c'
  1198  00F32F  6C                 	db	108	;'l'
  1199  00F330  65                 	db	101	;'e'
  1200  00F331  20                 	db	32
  1201  00F332  69                 	db	105	;'i'
  1202  00F333  73                 	db	115	;'s'
  1203  00F334  20                 	db	32
  1204  00F335  61                 	db	97	;'a'
  1205  00F336  20                 	db	32
  1206  00F337  6E                 	db	110	;'n'
  1207  00F338  75                 	db	117	;'u'
  1208  00F339  6D                 	db	109	;'m'
  1209  00F33A  62                 	db	98	;'b'
  1210  00F33B  65                 	db	101	;'e'
  1211  00F33C  72                 	db	114	;'r'
  1212  00F33D  20                 	db	32
  1213  00F33E  30                 	db	48	;'0'
  1214  00F33F  20                 	db	32
  1215  00F340  2D                 	db	45
  1216  00F341  20                 	db	32
  1217  00F342  31                 	db	49	;'1'
  1218  00F343  30                 	db	48	;'0'
  1219  00F344  30                 	db	48	;'0'
  1220  00F345  0D                 	db	13
  1221  00F346  0A                 	db	10
  1222  00F347  00                 	db	0
  1223  00F348                     STR_147:
  1224  00F348  49                 	db	73	;'I'
  1225  00F349  6E                 	db	110	;'n'
  1226  00F34A  76                 	db	118	;'v'
  1227  00F34B  61                 	db	97	;'a'
  1228  00F34C  6C                 	db	108	;'l'
  1229  00F34D  69                 	db	105	;'i'
  1230  00F34E  64                 	db	100	;'d'
  1231  00F34F  20                 	db	32
  1232  00F350  44                 	db	68	;'D'
  1233  00F351  75                 	db	117	;'u'
  1234  00F352  74                 	db	116	;'t'
  1235  00F353  79                 	db	121	;'y'
  1236  00F354  63                 	db	99	;'c'
  1237  00F355  79                 	db	121	;'y'
  1238  00F356  63                 	db	99	;'c'
  1239  00F357  6C                 	db	108	;'l'
  1240  00F358  65                 	db	101	;'e'
  1241  00F359  3A                 	db	58	;':'
  1242  00F35A  20                 	db	32
  1243  00F35B  47                 	db	71	;'G'
  1244  00F35C  72                 	db	114	;'r'
  1245  00F35D  65                 	db	101	;'e'
  1246  00F35E  61                 	db	97	;'a'
  1247  00F35F  74                 	db	116	;'t'
  1248  00F360  65                 	db	101	;'e'
  1249  00F361  72                 	db	114	;'r'
  1250  00F362  20                 	db	32
  1251  00F363  74                 	db	116	;'t'
  1252  00F364  68                 	db	104	;'h'
  1253  00F365  61                 	db	97	;'a'
  1254  00F366  6E                 	db	110	;'n'
  1255  00F367  20                 	db	32
  1256  00F368  31                 	db	49	;'1'
  1257  00F369  30                 	db	48	;'0'
  1258  00F36A  30                 	db	48	;'0'
  1259  00F36B  0D                 	db	13
  1260  00F36C  0A                 	db	10
  1261  00F36D  00                 	db	0
  1262  00F36E                     STR_117:
  1263  00F36E  43                 	db	67	;'C'
  1264  00F36F  68                 	db	104	;'h'
  1265  00F370  72                 	db	114	;'r'
  1266  00F371  69                 	db	105	;'i'
  1267  00F372  73                 	db	115	;'s'
  1268  00F373  74                 	db	116	;'t'
  1269  00F374  6D                 	db	109	;'m'
  1270  00F375  61                 	db	97	;'a'
  1271  00F376  73                 	db	115	;'s'
  1272  00F377  20                 	db	32
  1273  00F378  54                 	db	84	;'T'
  1274  00F379  72                 	db	114	;'r'
  1275  00F37A  65                 	db	101	;'e'
  1276  00F37B  65                 	db	101	;'e'
  1277  00F37C  20                 	db	32
  1278  00F37D  43                 	db	67	;'C'
  1279  00F37E  6F                 	db	111	;'o'
  1280  00F37F  6C                 	db	108	;'l'
  1281  00F380  6F                 	db	111	;'o'
  1282  00F381  72                 	db	114	;'r'
  1283  00F382  65                 	db	101	;'e'
  1284  00F383  64                 	db	100	;'d'
  1285  00F384  20                 	db	32
  1286  00F385  4C                 	db	76	;'L'
  1287  00F386  69                 	db	105	;'i'
  1288  00F387  67                 	db	103	;'g'
  1289  00F388  68                 	db	104	;'h'
  1290  00F389  74                 	db	116	;'t'
  1291  00F38A  73                 	db	115	;'s'
  1292  00F38B  20                 	db	32
  1293  00F38C  54                 	db	84	;'T'
  1294  00F38D  6F                 	db	111	;'o'
  1295  00F38E  67                 	db	103	;'g'
  1296  00F38F  67                 	db	103	;'g'
  1297  00F390  6C                 	db	108	;'l'
  1298  00F391  65                 	db	101	;'e'
  1299  00F392  64                 	db	100	;'d'
  1300  00F393  00                 	db	0
  1301  00F394                     STR_5:
  1302  00F394  0D                 	db	13
  1303  00F395  0A                 	db	10
  1304  00F396  42                 	db	66	;'B'
  1305  00F397  75                 	db	117	;'u'
  1306  00F398  66                 	db	102	;'f'
  1307  00F399  66                 	db	102	;'f'
  1308  00F39A  65                 	db	101	;'e'
  1309  00F39B  72                 	db	114	;'r'
  1310  00F39C  20                 	db	32
  1311  00F39D  6F                 	db	111	;'o'
  1312  00F39E  76                 	db	118	;'v'
  1313  00F39F  65                 	db	101	;'e'
  1314  00F3A0  72                 	db	114	;'r'
  1315  00F3A1  66                 	db	102	;'f'
  1316  00F3A2  6C                 	db	108	;'l'
  1317  00F3A3  6F                 	db	111	;'o'
  1318  00F3A4  77                 	db	119	;'w'
  1319  00F3A5  21                 	db	33
  1320  00F3A6  20                 	db	32
  1321  00F3A7  44                 	db	68	;'D'
  1322  00F3A8  65                 	db	101	;'e'
  1323  00F3A9  6C                 	db	108	;'l'
  1324  00F3AA  65                 	db	101	;'e'
  1325  00F3AB  74                 	db	116	;'t'
  1326  00F3AC  69                 	db	105	;'i'
  1327  00F3AD  6E                 	db	110	;'n'
  1328  00F3AE  67                 	db	103	;'g'
  1329  00F3AF  20                 	db	32
  1330  00F3B0  42                 	db	66	;'B'
  1331  00F3B1  75                 	db	117	;'u'
  1332  00F3B2  66                 	db	102	;'f'
  1333  00F3B3  66                 	db	102	;'f'
  1334  00F3B4  65                 	db	101	;'e'
  1335  00F3B5  72                 	db	114	;'r'
  1336  00F3B6  20                 	db	32
  1337  00F3B7  0D                 	db	13
  1338  00F3B8  0A                 	db	10
  1339  00F3B9  00                 	db	0
  1340  00F3BA                     STR_134:
  1341  00F3BA  69                 	db	105	;'i'
  1342  00F3BB  2E                 	db	46
  1343  00F3BC  65                 	db	101	;'e'
  1344  00F3BD  2E                 	db	46
  1345  00F3BE  20                 	db	32
  1346  00F3BF  43                 	db	67	;'C'
  1347  00F3C0  68                 	db	104	;'h'
  1348  00F3C1  72                 	db	114	;'r'
  1349  00F3C2  69                 	db	105	;'i'
  1350  00F3C3  73                 	db	115	;'s'
  1351  00F3C4  74                 	db	116	;'t'
  1352  00F3C5  6D                 	db	109	;'m'
  1353  00F3C6  61                 	db	97	;'a'
  1354  00F3C7  73                 	db	115	;'s'
  1355  00F3C8  20                 	db	32
  1356  00F3C9  43                 	db	67	;'C'
  1357  00F3CA  6F                 	db	111	;'o'
  1358  00F3CB  6C                 	db	108	;'l'
  1359  00F3CC  6F                 	db	111	;'o'
  1360  00F3CD  72                 	db	114	;'r'
  1361  00F3CE  65                 	db	101	;'e'
  1362  00F3CF  64                 	db	100	;'d'
  1363  00F3D0  20                 	db	32
  1364  00F3D1  6C                 	db	108	;'l'
  1365  00F3D2  69                 	db	105	;'i'
  1366  00F3D3  67                 	db	103	;'g'
  1367  00F3D4  68                 	db	104	;'h'
  1368  00F3D5  74                 	db	116	;'t'
  1369  00F3D6  73                 	db	115	;'s'
  1370  00F3D7  20                 	db	32
  1371  00F3D8  3D                 	db	61	;'='
  1372  00F3D9  20                 	db	32
  1373  00F3DA  4F                 	db	79	;'O'
  1374  00F3DB  6E                 	db	110	;'n'
  1375  00F3DC  0D                 	db	13
  1376  00F3DD  0A                 	db	10
  1377  00F3DE  00                 	db	0
  1378  00F3DF                     STR_212:
  1379  00F3DF  45                 	db	69	;'E'
  1380  00F3E0  6E                 	db	110	;'n'
  1381  00F3E1  74                 	db	116	;'t'
  1382  00F3E2  65                 	db	101	;'e'
  1383  00F3E3  72                 	db	114	;'r'
  1384  00F3E4  20                 	db	32
  1385  00F3E5  54                 	db	84	;'T'
  1386  00F3E6  69                 	db	105	;'i'
  1387  00F3E7  6D                 	db	109	;'m'
  1388  00F3E8  65                 	db	101	;'e'
  1389  00F3E9  20                 	db	32
  1390  00F3EA  4D                 	db	77	;'M'
  1391  00F3EB  4D                 	db	77	;'M'
  1392  00F3EC  2F                 	db	47
  1393  00F3ED  44                 	db	68	;'D'
  1394  00F3EE  44                 	db	68	;'D'
  1395  00F3EF  2F                 	db	47
  1396  00F3F0  59                 	db	89	;'Y'
  1397  00F3F1  59                 	db	89	;'Y'
  1398  00F3F2  20                 	db	32
  1399  00F3F3  48                 	db	72	;'H'
  1400  00F3F4  48                 	db	72	;'H'
  1401  00F3F5  3A                 	db	58	;':'
  1402  00F3F6  4D                 	db	77	;'M'
  1403  00F3F7  4D                 	db	77	;'M'
  1404  00F3F8  3A                 	db	58	;':'
  1405  00F3F9  53                 	db	83	;'S'
  1406  00F3FA  53                 	db	83	;'S'
  1407  00F3FB  20                 	db	32
  1408  00F3FC  41                 	db	65	;'A'
  1409  00F3FD  4D                 	db	77	;'M'
  1410  00F3FE  20                 	db	32
  1411  00F3FF  6F                 	db	111	;'o'
  1412  00F400  72                 	db	114	;'r'
  1413  00F401  0D                 	db	13
  1414  00F402  0A                 	db	10
  1415  00F403  00                 	db	0
  1416  00F404                     STR_202:
  1417  00F404  20                 	db	32
  1418  00F405  33                 	db	51	;'3'
  1419  00F406  20                 	db	32
  1420  00F407  56                 	db	86	;'V'
  1421  00F408  6F                 	db	111	;'o'
  1422  00F409  6C                 	db	108	;'l'
  1423  00F40A  74                 	db	116	;'t'
  1424  00F40B  20                 	db	32
  1425  00F40C  52                 	db	82	;'R'
  1426  00F40D  54                 	db	84	;'T'
  1427  00F40E  43                 	db	67	;'C'
  1428  00F40F  20                 	db	32
  1429  00F410  42                 	db	66	;'B'
  1430  00F411  61                 	db	97	;'a'
  1431  00F412  74                 	db	116	;'t'
  1432  00F413  74                 	db	116	;'t'
  1433  00F414  65                 	db	101	;'e'
  1434  00F415  72                 	db	114	;'r'
  1435  00F416  79                 	db	121	;'y'
  1436  00F417  20                 	db	32
  1437  00F418  56                 	db	86	;'V'
  1438  00F419  6F                 	db	111	;'o'
  1439  00F41A  6C                 	db	108	;'l'
  1440  00F41B  74                 	db	116	;'t'
  1441  00F41C  61                 	db	97	;'a'
  1442  00F41D  67                 	db	103	;'g'
  1443  00F41E  65                 	db	101	;'e'
  1444  00F41F  20                 	db	32
  1445  00F420  3D                 	db	61	;'='
  1446  00F421  20                 	db	32
  1447  00F422  25                 	db	37
  1448  00F423  64                 	db	100	;'d'
  1449  00F424  2E                 	db	46
  1450  00F425  25                 	db	37
  1451  00F426  64                 	db	100	;'d'
  1452  00F427  00                 	db	0
  1453  00F428                     STR_282:
  1454  00F428  25                 	db	37
  1455  00F429  30                 	db	48	;'0'
  1456  00F42A  32                 	db	50	;'2'
  1457  00F42B  64                 	db	100	;'d'
  1458  00F42C  2F                 	db	47
  1459  00F42D  25                 	db	37
  1460  00F42E  30                 	db	48	;'0'
  1461  00F42F  32                 	db	50	;'2'
  1462  00F430  64                 	db	100	;'d'
  1463  00F431  2F                 	db	47
  1464  00F432  32                 	db	50	;'2'
  1465  00F433  30                 	db	48	;'0'
  1466  00F434  25                 	db	37
  1467  00F435  30                 	db	48	;'0'
  1468  00F436  32                 	db	50	;'2'
  1469  00F437  64                 	db	100	;'d'
  1470  00F438  20                 	db	32
  1471  00F439  25                 	db	37
  1472  00F43A  30                 	db	48	;'0'
  1473  00F43B  32                 	db	50	;'2'
  1474  00F43C  64                 	db	100	;'d'
  1475  00F43D  3A                 	db	58	;':'
  1476  00F43E  25                 	db	37
  1477  00F43F  30                 	db	48	;'0'
  1478  00F440  32                 	db	50	;'2'
  1479  00F441  64                 	db	100	;'d'
  1480  00F442  3A                 	db	58	;':'
  1481  00F443  25                 	db	37
  1482  00F444  30                 	db	48	;'0'
  1483  00F445  32                 	db	50	;'2'
  1484  00F446  64                 	db	100	;'d'
  1485  00F447  20                 	db	32
  1486  00F448  41                 	db	65	;'A'
  1487  00F449  4D                 	db	77	;'M'
  1488  00F44A  00                 	db	0
  1489  00F44B                     STR_283:
  1490  00F44B  25                 	db	37
  1491  00F44C  30                 	db	48	;'0'
  1492  00F44D  32                 	db	50	;'2'
  1493  00F44E  64                 	db	100	;'d'
  1494  00F44F  2F                 	db	47
  1495  00F450  25                 	db	37
  1496  00F451  30                 	db	48	;'0'
  1497  00F452  32                 	db	50	;'2'
  1498  00F453  64                 	db	100	;'d'
  1499  00F454  2F                 	db	47
  1500  00F455  32                 	db	50	;'2'
  1501  00F456  30                 	db	48	;'0'
  1502  00F457  25                 	db	37
  1503  00F458  30                 	db	48	;'0'
  1504  00F459  32                 	db	50	;'2'
  1505  00F45A  64                 	db	100	;'d'
  1506  00F45B  20                 	db	32
  1507  00F45C  25                 	db	37
  1508  00F45D  30                 	db	48	;'0'
  1509  00F45E  32                 	db	50	;'2'
  1510  00F45F  64                 	db	100	;'d'
  1511  00F460  3A                 	db	58	;':'
  1512  00F461  25                 	db	37
  1513  00F462  30                 	db	48	;'0'
  1514  00F463  32                 	db	50	;'2'
  1515  00F464  64                 	db	100	;'d'
  1516  00F465  3A                 	db	58	;':'
  1517  00F466  25                 	db	37
  1518  00F467  30                 	db	48	;'0'
  1519  00F468  32                 	db	50	;'2'
  1520  00F469  64                 	db	100	;'d'
  1521  00F46A  20                 	db	32
  1522  00F46B  50                 	db	80	;'P'
  1523  00F46C  4D                 	db	77	;'M'
  1524  00F46D  00                 	db	0
  1525  00F46E                     STR_213:
  1526  00F46E  45                 	db	69	;'E'
  1527  00F46F  6E                 	db	110	;'n'
  1528  00F470  74                 	db	116	;'t'
  1529  00F471  65                 	db	101	;'e'
  1530  00F472  72                 	db	114	;'r'
  1531  00F473  20                 	db	32
  1532  00F474  54                 	db	84	;'T'
  1533  00F475  69                 	db	105	;'i'
  1534  00F476  6D                 	db	109	;'m'
  1535  00F477  65                 	db	101	;'e'
  1536  00F478  20                 	db	32
  1537  00F479  4D                 	db	77	;'M'
  1538  00F47A  4D                 	db	77	;'M'
  1539  00F47B  2F                 	db	47
  1540  00F47C  44                 	db	68	;'D'
  1541  00F47D  44                 	db	68	;'D'
  1542  00F47E  2F                 	db	47
  1543  00F47F  59                 	db	89	;'Y'
  1544  00F480  59                 	db	89	;'Y'
  1545  00F481  20                 	db	32
  1546  00F482  48                 	db	72	;'H'
  1547  00F483  48                 	db	72	;'H'
  1548  00F484  3A                 	db	58	;':'
  1549  00F485  4D                 	db	77	;'M'
  1550  00F486  4D                 	db	77	;'M'
  1551  00F487  3A                 	db	58	;':'
  1552  00F488  53                 	db	83	;'S'
  1553  00F489  53                 	db	83	;'S'
  1554  00F48A  20                 	db	32
  1555  00F48B  50                 	db	80	;'P'
  1556  00F48C  4D                 	db	77	;'M'
  1557  00F48D  0D                 	db	13
  1558  00F48E  0A                 	db	10
  1559  00F48F  00                 	db	0
  1560  00F490                     STR_149:
  1561  00F490  49                 	db	73	;'I'
  1562  00F491  6E                 	db	110	;'n'
  1563  00F492  76                 	db	118	;'v'
  1564  00F493  61                 	db	97	;'a'
  1565  00F494  6C                 	db	108	;'l'
  1566  00F495  69                 	db	105	;'i'
  1567  00F496  64                 	db	100	;'d'
  1568  00F497  20                 	db	32
  1569  00F498  44                 	db	68	;'D'
  1570  00F499  75                 	db	117	;'u'
  1571  00F49A  74                 	db	116	;'t'
  1572  00F49B  79                 	db	121	;'y'
  1573  00F49C  63                 	db	99	;'c'
  1574  00F49D  79                 	db	121	;'y'
  1575  00F49E  63                 	db	99	;'c'
  1576  00F49F  6C                 	db	108	;'l'
  1577  00F4A0  65                 	db	101	;'e'
  1578  00F4A1  3A                 	db	58	;':'
  1579  00F4A2  20                 	db	32
  1580  00F4A3  4C                 	db	76	;'L'
  1581  00F4A4  65                 	db	101	;'e'
  1582  00F4A5  73                 	db	115	;'s'
  1583  00F4A6  73                 	db	115	;'s'
  1584  00F4A7  20                 	db	32
  1585  00F4A8  74                 	db	116	;'t'
  1586  00F4A9  68                 	db	104	;'h'
  1587  00F4AA  61                 	db	97	;'a'
  1588  00F4AB  6E                 	db	110	;'n'
  1589  00F4AC  20                 	db	32
  1590  00F4AD  30                 	db	48	;'0'
  1591  00F4AE  0D                 	db	13
  1592  00F4AF  0A                 	db	10
  1593  00F4B0  00                 	db	0
  1594  00F4B1                     STR_219:
  1595  00F4B1  46                 	db	70	;'F'
  1596  00F4B2  6F                 	db	111	;'o'
  1597  00F4B3  72                 	db	114	;'r'
  1598  00F4B4  6D                 	db	109	;'m'
  1599  00F4B5  61                 	db	97	;'a'
  1600  00F4B6  74                 	db	116	;'t'
  1601  00F4B7  20                 	db	32
  1602  00F4B8  69                 	db	105	;'i'
  1603  00F4B9  73                 	db	115	;'s'
  1604  00F4BA  20                 	db	32
  1605  00F4BB  4D                 	db	77	;'M'
  1606  00F4BC  4D                 	db	77	;'M'
  1607  00F4BD  2F                 	db	47
  1608  00F4BE  44                 	db	68	;'D'
  1609  00F4BF  44                 	db	68	;'D'
  1610  00F4C0  2F                 	db	47
  1611  00F4C1  59                 	db	89	;'Y'
  1612  00F4C2  59                 	db	89	;'Y'
  1613  00F4C3  20                 	db	32
  1614  00F4C4  48                 	db	72	;'H'
  1615  00F4C5  48                 	db	72	;'H'
  1616  00F4C6  3A                 	db	58	;':'
  1617  00F4C7  4D                 	db	77	;'M'
  1618  00F4C8  4D                 	db	77	;'M'
  1619  00F4C9  3A                 	db	58	;':'
  1620  00F4CA  53                 	db	83	;'S'
  1621  00F4CB  53                 	db	83	;'S'
  1622  00F4CC  20                 	db	32
  1623  00F4CD  41                 	db	65	;'A'
  1624  00F4CE  4D                 	db	77	;'M'
  1625  00F4CF  0D                 	db	13
  1626  00F4D0  0A                 	db	10
  1627  00F4D1  00                 	db	0
  1628  00F4D2                     STR_181:
  1629  00F4D2  45                 	db	69	;'E'
  1630  00F4D3  72                 	db	114	;'r'
  1631  00F4D4  72                 	db	114	;'r'
  1632  00F4D5  6F                 	db	111	;'o'
  1633  00F4D6  72                 	db	114	;'r'
  1634  00F4D7  3A                 	db	58	;':'
  1635  00F4D8  20                 	db	32
  1636  00F4D9  6F                 	db	111	;'o'
  1637  00F4DA  6E                 	db	110	;'n'
  1638  00F4DB  6C                 	db	108	;'l'
  1639  00F4DC  79                 	db	121	;'y'
  1640  00F4DD  20                 	db	32
  1641  00F4DE  75                 	db	117	;'u'
  1642  00F4DF  73                 	db	115	;'s'
  1643  00F4E0  65                 	db	101	;'e'
  1644  00F4E1  20                 	db	32
  1645  00F4E2  6F                 	db	111	;'o'
  1646  00F4E3  6E                 	db	110	;'n'
  1647  00F4E4  65                 	db	101	;'e'
  1648  00F4E5  20                 	db	32
  1649  00F4E6  65                 	db	101	;'e'
  1650  00F4E7  71                 	db	113	;'q'
  1651  00F4E8  75                 	db	117	;'u'
  1652  00F4E9  61                 	db	97	;'a'
  1653  00F4EA  6C                 	db	108	;'l'
  1654  00F4EB  20                 	db	32
  1655  00F4EC  73                 	db	115	;'s'
  1656  00F4ED  69                 	db	105	;'i'
  1657  00F4EE  67                 	db	103	;'g'
  1658  00F4EF  6E                 	db	110	;'n'
  1659  00F4F0  0D                 	db	13
  1660  00F4F1  0A                 	db	10
  1661  00F4F2  00                 	db	0
  1662  00F4F3                     STR_284:
  1663  00F4F3  25                 	db	37
  1664  00F4F4  30                 	db	48	;'0'
  1665  00F4F5  32                 	db	50	;'2'
  1666  00F4F6  64                 	db	100	;'d'
  1667  00F4F7  2F                 	db	47
  1668  00F4F8  25                 	db	37
  1669  00F4F9  30                 	db	48	;'0'
  1670  00F4FA  32                 	db	50	;'2'
  1671  00F4FB  64                 	db	100	;'d'
  1672  00F4FC  2F                 	db	47
  1673  00F4FD  32                 	db	50	;'2'
  1674  00F4FE  30                 	db	48	;'0'
  1675  00F4FF  25                 	db	37
  1676  00F500  30                 	db	48	;'0'
  1677  00F501  32                 	db	50	;'2'
  1678  00F502  64                 	db	100	;'d'
  1679  00F503  20                 	db	32
  1680  00F504  25                 	db	37
  1681  00F505  30                 	db	48	;'0'
  1682  00F506  32                 	db	50	;'2'
  1683  00F507  64                 	db	100	;'d'
  1684  00F508  3A                 	db	58	;':'
  1685  00F509  25                 	db	37
  1686  00F50A  30                 	db	48	;'0'
  1687  00F50B  32                 	db	50	;'2'
  1688  00F50C  64                 	db	100	;'d'
  1689  00F50D  3A                 	db	58	;':'
  1690  00F50E  25                 	db	37
  1691  00F50F  30                 	db	48	;'0'
  1692  00F510  32                 	db	50	;'2'
  1693  00F511  64                 	db	100	;'d'
  1694  00F512  00                 	db	0
  1695  00F513                     STR_170:
  1696  00F513  43                 	db	67	;'C'
  1697  00F514  6F                 	db	111	;'o'
  1698  00F515  6E                 	db	110	;'n'
  1699  00F516  74                 	db	116	;'t'
  1700  00F517  72                 	db	114	;'r'
  1701  00F518  61                 	db	97	;'a'
  1702  00F519  73                 	db	115	;'s'
  1703  00F51A  74                 	db	116	;'t'
  1704  00F51B  20                 	db	32
  1705  00F51C  44                 	db	68	;'D'
  1706  00F51D  75                 	db	117	;'u'
  1707  00F51E  74                 	db	116	;'t'
  1708  00F51F  79                 	db	121	;'y'
  1709  00F520  20                 	db	32
  1710  00F521  43                 	db	67	;'C'
  1711  00F522  79                 	db	121	;'y'
  1712  00F523  63                 	db	99	;'c'
  1713  00F524  6C                 	db	108	;'l'
  1714  00F525  65                 	db	101	;'e'
  1715  00F526  20                 	db	32
  1716  00F527  73                 	db	115	;'s'
  1717  00F528  65                 	db	101	;'e'
  1718  00F529  74                 	db	116	;'t'
  1719  00F52A  20                 	db	32
  1720  00F52B  74                 	db	116	;'t'
  1721  00F52C  6F                 	db	111	;'o'
  1722  00F52D  20                 	db	32
  1723  00F52E  25                 	db	37
  1724  00F52F  64                 	db	100	;'d'
  1725  00F530  0D                 	db	13
  1726  00F531  0A                 	db	10
  1727  00F532  00                 	db	0
  1728  00F533                     STR_125:
  1729  00F533  43                 	db	67	;'C'
  1730  00F534  68                 	db	104	;'h'
  1731  00F535  72                 	db	114	;'r'
  1732  00F536  69                 	db	105	;'i'
  1733  00F537  73                 	db	115	;'s'
  1734  00F538  74                 	db	116	;'t'
  1735  00F539  6D                 	db	109	;'m'
  1736  00F53A  61                 	db	97	;'a'
  1737  00F53B  73                 	db	115	;'s'
  1738  00F53C  20                 	db	32
  1739  00F53D  54                 	db	84	;'T'
  1740  00F53E  72                 	db	114	;'r'
  1741  00F53F  65                 	db	101	;'e'
  1742  00F540  65                 	db	101	;'e'
  1743  00F541  20                 	db	32
  1744  00F542  57                 	db	87	;'W'
  1745  00F543  68                 	db	104	;'h'
  1746  00F544  69                 	db	105	;'i'
  1747  00F545  74                 	db	116	;'t'
  1748  00F546  65                 	db	101	;'e'
  1749  00F547  20                 	db	32
  1750  00F548  4C                 	db	76	;'L'
  1751  00F549  69                 	db	105	;'i'
  1752  00F54A  67                 	db	103	;'g'
  1753  00F54B  68                 	db	104	;'h'
  1754  00F54C  74                 	db	116	;'t'
  1755  00F54D  73                 	db	115	;'s'
  1756  00F54E  20                 	db	32
  1757  00F54F  4F                 	db	79	;'O'
  1758  00F550  66                 	db	102	;'f'
  1759  00F551  66                 	db	102	;'f'
  1760  00F552  00                 	db	0
  1761  00F553                     STR_121:
  1762  00F553  43                 	db	67	;'C'
  1763  00F554  68                 	db	104	;'h'
  1764  00F555  72                 	db	114	;'r'
  1765  00F556  69                 	db	105	;'i'
  1766  00F557  73                 	db	115	;'s'
  1767  00F558  74                 	db	116	;'t'
  1768  00F559  6D                 	db	109	;'m'
  1769  00F55A  61                 	db	97	;'a'
  1770  00F55B  73                 	db	115	;'s'
  1771  00F55C  20                 	db	32
  1772  00F55D  54                 	db	84	;'T'
  1773  00F55E  72                 	db	114	;'r'
  1774  00F55F  65                 	db	101	;'e'
  1775  00F560  65                 	db	101	;'e'
  1776  00F561  20                 	db	32
  1777  00F562  57                 	db	87	;'W'
  1778  00F563  68                 	db	104	;'h'
  1779  00F564  69                 	db	105	;'i'
  1780  00F565  74                 	db	116	;'t'
  1781  00F566  65                 	db	101	;'e'
  1782  00F567  20                 	db	32
  1783  00F568  4C                 	db	76	;'L'
  1784  00F569  69                 	db	105	;'i'
  1785  00F56A  67                 	db	103	;'g'
  1786  00F56B  68                 	db	104	;'h'
  1787  00F56C  74                 	db	116	;'t'
  1788  00F56D  73                 	db	115	;'s'
  1789  00F56E  20                 	db	32
  1790  00F56F  4F                 	db	79	;'O'
  1791  00F570  6E                 	db	110	;'n'
  1792  00F571  00                 	db	0
  1793  00F572                     STR_183:
  1794  00F572  45                 	db	69	;'E'
  1795  00F573  72                 	db	114	;'r'
  1796  00F574  72                 	db	114	;'r'
  1797  00F575  6F                 	db	111	;'o'
  1798  00F576  72                 	db	114	;'r'
  1799  00F577  3A                 	db	58	;':'
  1800  00F578  20                 	db	32
  1801  00F579  4E                 	db	78	;'N'
  1802  00F57A  6F                 	db	111	;'o'
  1803  00F57B  20                 	db	32
  1804  00F57C  6E                 	db	110	;'n'
  1805  00F57D  65                 	db	101	;'e'
  1806  00F57E  67                 	db	103	;'g'
  1807  00F57F  61                 	db	97	;'a'
  1808  00F580  74                 	db	116	;'t'
  1809  00F581  69                 	db	105	;'i'
  1810  00F582  76                 	db	118	;'v'
  1811  00F583  65                 	db	101	;'e'
  1812  00F584  20                 	db	32
  1813  00F585  63                 	db	99	;'c'
  1814  00F586  68                 	db	104	;'h'
  1815  00F587  61                 	db	97	;'a'
  1816  00F588  6E                 	db	110	;'n'
  1817  00F589  6E                 	db	110	;'n'
  1818  00F58A  65                 	db	101	;'e'
  1819  00F58B  6C                 	db	108	;'l'
  1820  00F58C  73                 	db	115	;'s'
  1821  00F58D  0D                 	db	13
  1822  00F58E  0A                 	db	10
  1823  00F58F  00                 	db	0
  1824  00F590                     STR_221:
  1825  00F590  52                 	db	82	;'R'
  1826  00F591  65                 	db	101	;'e'
  1827  00F592  61                 	db	97	;'a'
  1828  00F593  6C                 	db	108	;'l'
  1829  00F594  20                 	db	32
  1830  00F595  54                 	db	84	;'T'
  1831  00F596  69                 	db	105	;'i'
  1832  00F597  6D                 	db	109	;'m'
  1833  00F598  65                 	db	101	;'e'
  1834  00F599  20                 	db	32
  1835  00F59A  43                 	db	67	;'C'
  1836  00F59B  6C                 	db	108	;'l'
  1837  00F59C  6F                 	db	111	;'o'
  1838  00F59D  63                 	db	99	;'c'
  1839  00F59E  6B                 	db	107	;'k'
  1840  00F59F  20                 	db	32
  1841  00F5A0  48                 	db	72	;'H'
  1842  00F5A1  65                 	db	101	;'e'
  1843  00F5A2  6C                 	db	108	;'l'
  1844  00F5A3  70                 	db	112	;'p'
  1845  00F5A4  20                 	db	32
  1846  00F5A5  4D                 	db	77	;'M'
  1847  00F5A6  65                 	db	101	;'e'
  1848  00F5A7  6E                 	db	110	;'n'
  1849  00F5A8  75                 	db	117	;'u'
  1850  00F5A9  0D                 	db	13
  1851  00F5AA  0A                 	db	10
  1852  00F5AB  0A                 	db	10
  1853  00F5AC  00                 	db	0
  1854  00F5AD                     STR_187:
  1855  00F5AD  43                 	db	67	;'C'
  1856  00F5AE  68                 	db	104	;'h'
  1857  00F5AF  61                 	db	97	;'a'
  1858  00F5B0  6E                 	db	110	;'n'
  1859  00F5B1  6E                 	db	110	;'n'
  1860  00F5B2  65                 	db	101	;'e'
  1861  00F5B3  6C                 	db	108	;'l'
  1862  00F5B4  20                 	db	32
  1863  00F5B5  25                 	db	37
  1864  00F5B6  64                 	db	100	;'d'
  1865  00F5B7  20                 	db	32
  1866  00F5B8  69                 	db	105	;'i'
  1867  00F5B9  73                 	db	115	;'s'
  1868  00F5BA  20                 	db	32
  1869  00F5BB  6E                 	db	110	;'n'
  1870  00F5BC  6F                 	db	111	;'o'
  1871  00F5BD  74                 	db	116	;'t'
  1872  00F5BE  20                 	db	32
  1873  00F5BF  63                 	db	99	;'c'
  1874  00F5C0  6F                 	db	111	;'o'
  1875  00F5C1  6E                 	db	110	;'n'
  1876  00F5C2  66                 	db	102	;'f'
  1877  00F5C3  69                 	db	105	;'i'
  1878  00F5C4  67                 	db	103	;'g'
  1879  00F5C5  75                 	db	117	;'u'
  1880  00F5C6  72                 	db	114	;'r'
  1881  00F5C7  65                 	db	101	;'e'
  1882  00F5C8  64                 	db	100	;'d'
  1883  00F5C9  00                 	db	0
  1884  00F5CA                     STR_16:
  1885  00F5CA  0D                 	db	13
  1886  00F5CB  0A                 	db	10
  1887  00F5CC  45                 	db	69	;'E'
  1888  00F5CD  6E                 	db	110	;'n'
  1889  00F5CE  74                 	db	116	;'t'
  1890  00F5CF  65                 	db	101	;'e'
  1891  00F5D0  72                 	db	114	;'r'
  1892  00F5D1  20                 	db	32
  1893  00F5D2  27                 	db	39
  1894  00F5D3  3F                 	db	63	;'?'
  1895  00F5D4  27                 	db	39
  1896  00F5D5  20                 	db	32
  1897  00F5D6  66                 	db	102	;'f'
  1898  00F5D7  6F                 	db	111	;'o'
  1899  00F5D8  72                 	db	114	;'r'
  1900  00F5D9  20                 	db	32
  1901  00F5DA  48                 	db	72	;'H'
  1902  00F5DB  65                 	db	101	;'e'
  1903  00F5DC  6C                 	db	108	;'l'
  1904  00F5DD  70                 	db	112	;'p'
  1905  00F5DE  20                 	db	32
  1906  00F5DF  4D                 	db	77	;'M'
  1907  00F5E0  65                 	db	101	;'e'
  1908  00F5E1  6E                 	db	110	;'n'
  1909  00F5E2  75                 	db	117	;'u'
  1910  00F5E3  0D                 	db	13
  1911  00F5E4  0A                 	db	10
  1912  00F5E5  3E                 	db	62	;'>'
  1913  00F5E6  00                 	db	0
  1914  00F5E7                     STR_129:
  1915  00F5E7  43                 	db	67	;'C'
  1916  00F5E8  68                 	db	104	;'h'
  1917  00F5E9  72                 	db	114	;'r'
  1918  00F5EA  69                 	db	105	;'i'
  1919  00F5EB  73                 	db	115	;'s'
  1920  00F5EC  74                 	db	116	;'t'
  1921  00F5ED  6D                 	db	109	;'m'
  1922  00F5EE  61                 	db	97	;'a'
  1923  00F5EF  73                 	db	115	;'s'
  1924  00F5F0  20                 	db	32
  1925  00F5F1  74                 	db	116	;'t'
  1926  00F5F2  72                 	db	114	;'r'
  1927  00F5F3  65                 	db	101	;'e'
  1928  00F5F4  65                 	db	101	;'e'
  1929  00F5F5  20                 	db	32
  1930  00F5F6  48                 	db	72	;'H'
  1931  00F5F7  65                 	db	101	;'e'
  1932  00F5F8  6C                 	db	108	;'l'
  1933  00F5F9  70                 	db	112	;'p'
  1934  00F5FA  20                 	db	32
  1935  00F5FB  4D                 	db	77	;'M'
  1936  00F5FC  65                 	db	101	;'e'
  1937  00F5FD  6E                 	db	110	;'n'
  1938  00F5FE  75                 	db	117	;'u'
  1939  00F5FF  0D                 	db	13
  1940  00F600  0A                 	db	10
  1941  00F601  0A                 	db	10
  1942  00F602  00                 	db	0
  1943  00F603                     STR_185:
  1944  00F603  45                 	db	69	;'E'
  1945  00F604  72                 	db	114	;'r'
  1946  00F605  72                 	db	114	;'r'
  1947  00F606  6F                 	db	111	;'o'
  1948  00F607  72                 	db	114	;'r'
  1949  00F608  3A                 	db	58	;':'
  1950  00F609  20                 	db	32
  1951  00F60A  69                 	db	105	;'i'
  1952  00F60B  6E                 	db	110	;'n'
  1953  00F60C  20                 	db	32
  1954  00F60D  70                 	db	112	;'p'
  1955  00F60E  61                 	db	97	;'a'
  1956  00F60F  72                 	db	114	;'r'
  1957  00F610  73                 	db	115	;'s'
  1958  00F611  69                 	db	105	;'i'
  1959  00F612  6E                 	db	110	;'n'
  1960  00F613  67                 	db	103	;'g'
  1961  00F614  20                 	db	32
  1962  00F615  63                 	db	99	;'c'
  1963  00F616  6F                 	db	111	;'o'
  1964  00F617  6D                 	db	109	;'m'
  1965  00F618  6D                 	db	109	;'m'
  1966  00F619  61                 	db	97	;'a'
  1967  00F61A  6E                 	db	110	;'n'
  1968  00F61B  64                 	db	100	;'d'
  1969  00F61C  0D                 	db	13
  1970  00F61D  0A                 	db	10
  1971  00F61E  00                 	db	0
  1972  00F61F                     STR_144:
  1973  00F61F  74                 	db	116	;'t'
  1974  00F620  68                 	db	104	;'h'
  1975  00F621  65                 	db	101	;'e'
  1976  00F622  72                 	db	114	;'r'
  1977  00F623  65                 	db	101	;'e'
  1978  00F624  20                 	db	32
  1979  00F625  69                 	db	105	;'i'
  1980  00F626  73                 	db	115	;'s'
  1981  00F627  20                 	db	32
  1982  00F628  6E                 	db	110	;'n'
  1983  00F629  6F                 	db	111	;'o'
  1984  00F62A  20                 	db	32
  1985  00F62B  71                 	db	113	;'q'
  1986  00F62C  75                 	db	117	;'u'
  1987  00F62D  65                 	db	101	;'e'
  1988  00F62E  73                 	db	115	;'s'
  1989  00F62F  74                 	db	116	;'t'
  1990  00F630  69                 	db	105	;'i'
  1991  00F631  6F                 	db	111	;'o'
  1992  00F632  6E                 	db	110	;'n'
  1993  00F633  20                 	db	32
  1994  00F634  6D                 	db	109	;'m'
  1995  00F635  61                 	db	97	;'a'
  1996  00F636  72                 	db	114	;'r'
  1997  00F637  6B                 	db	107	;'k'
  1998  00F638  0D                 	db	13
  1999  00F639  0A                 	db	10
  2000  00F63A  00                 	db	0
  2001  00F63B                     STR_248:
  2002  00F63B  69                 	db	105	;'i'
  2003  00F63C  2E                 	db	46
  2004  00F63D  65                 	db	101	;'e'
  2005  00F63E  2E                 	db	46
  2006  00F63F  20                 	db	32
  2007  00F640  4A                 	db	74	;'J'
  2008  00F641  6F                 	db	111	;'o'
  2009  00F642  65                 	db	101	;'e'
  2010  00F643  73                 	db	115	;'s'
  2011  00F644  20                 	db	32
  2012  00F645  72                 	db	114	;'r'
  2013  00F646  6F                 	db	111	;'o'
  2014  00F647  6F                 	db	111	;'o'
  2015  00F648  6D                 	db	109	;'m'
  2016  00F649  20                 	db	32
  2017  00F64A  6C                 	db	108	;'l'
  2018  00F64B  69                 	db	105	;'i'
  2019  00F64C  67                 	db	103	;'g'
  2020  00F64D  68                 	db	104	;'h'
  2021  00F64E  74                 	db	116	;'t'
  2022  00F64F  20                 	db	32
  2023  00F650  3D                 	db	61	;'='
  2024  00F651  20                 	db	32
  2025  00F652  4F                 	db	79	;'O'
  2026  00F653  6E                 	db	110	;'n'
  2027  00F654  0D                 	db	13
  2028  00F655  0A                 	db	10
  2029  00F656  00                 	db	0
  2030  00F657                     STR_217:
  2031  00F657  0D                 	db	13
  2032  00F658  0A                 	db	10
  2033  00F659  54                 	db	84	;'T'
  2034  00F65A  69                 	db	105	;'i'
  2035  00F65B  6D                 	db	109	;'m'
  2036  00F65C  65                 	db	101	;'e'
  2037  00F65D  20                 	db	32
  2038  00F65E  4E                 	db	78	;'N'
  2039  00F65F  6F                 	db	111	;'o'
  2040  00F660  74                 	db	116	;'t'
  2041  00F661  20                 	db	32
  2042  00F662  53                 	db	83	;'S'
  2043  00F663  65                 	db	101	;'e'
  2044  00F664  74                 	db	116	;'t'
  2045  00F665  20                 	db	32
  2046  00F666  53                 	db	83	;'S'
  2047  00F667  75                 	db	117	;'u'
  2048  00F668  63                 	db	99	;'c'
  2049  00F669  63                 	db	99	;'c'
  2050  00F66A  65                 	db	101	;'e'
  2051  00F66B  73                 	db	115	;'s'
  2052  00F66C  73                 	db	115	;'s'
  2053  00F66D  66                 	db	102	;'f'
  2054  00F66E  75                 	db	117	;'u'
  2055  00F66F  6C                 	db	108	;'l'
  2056  00F670  6C                 	db	108	;'l'
  2057  00F671  79                 	db	121	;'y'
  2058  00F672  00                 	db	0
  2059  00F673                     STR_145:
  2060  00F673  45                 	db	69	;'E'
  2061  00F674  72                 	db	114	;'r'
  2062  00F675  72                 	db	114	;'r'
  2063  00F676  6F                 	db	111	;'o'
  2064  00F677  72                 	db	114	;'r'
  2065  00F678  3A                 	db	58	;':'
  2066  00F679  20                 	db	32
  2067  00F67A  4E                 	db	78	;'N'
  2068  00F67B  6F                 	db	111	;'o'
  2069  00F67C  20                 	db	32
  2070  00F67D  6E                 	db	110	;'n'
  2071  00F67E  75                 	db	117	;'u'
  2072  00F67F  6D                 	db	109	;'m'
  2073  00F680  62                 	db	98	;'b'
  2074  00F681  65                 	db	101	;'e'
  2075  00F682  72                 	db	114	;'r'
  2076  00F683  20                 	db	32
  2077  00F684  65                 	db	101	;'e'
  2078  00F685  6E                 	db	110	;'n'
  2079  00F686  74                 	db	116	;'t'
  2080  00F687  65                 	db	101	;'e'
  2081  00F688  72                 	db	114	;'r'
  2082  00F689  65                 	db	101	;'e'
  2083  00F68A  64                 	db	100	;'d'
  2084  00F68B  0D                 	db	13
  2085  00F68C  0A                 	db	10
  2086  00F68D  00                 	db	0
  2087  00F68E                     STR_70:
  2088  00F68E  69                 	db	105	;'i'
  2089  00F68F  2E                 	db	46
  2090  00F690  65                 	db	101	;'e'
  2091  00F691  2E                 	db	46
  2092  00F692  20                 	db	32
  2093  00F693  4C                 	db	76	;'L'
  2094  00F694  69                 	db	105	;'i'
  2095  00F695  76                 	db	118	;'v'
  2096  00F696  69                 	db	105	;'i'
  2097  00F697  6E                 	db	110	;'n'
  2098  00F698  67                 	db	103	;'g'
  2099  00F699  72                 	db	114	;'r'
  2100  00F69A  6F                 	db	111	;'o'
  2101  00F69B  6F                 	db	111	;'o'
  2102  00F69C  6D                 	db	109	;'m'
  2103  00F69D  20                 	db	32
  2104  00F69E  66                 	db	102	;'f'
  2105  00F69F  61                 	db	97	;'a'
  2106  00F6A0  6E                 	db	110	;'n'
  2107  00F6A1  20                 	db	32
  2108  00F6A2  3D                 	db	61	;'='
  2109  00F6A3  20                 	db	32
  2110  00F6A4  4F                 	db	79	;'O'
  2111  00F6A5  6E                 	db	110	;'n'
  2112  00F6A6  0D                 	db	13
  2113  00F6A7  0A                 	db	10
  2114  00F6A8  00                 	db	0
  2115  00F6A9                     STR_281:
  2116  00F6A9  41                 	db	65	;'A'
  2117  00F6AA  44                 	db	68	;'D'
  2118  00F6AB  43                 	db	67	;'C'
  2119  00F6AC  20                 	db	32
  2120  00F6AD  43                 	db	67	;'C'
  2121  00F6AE  68                 	db	104	;'h'
  2122  00F6AF  61                 	db	97	;'a'
  2123  00F6B0  6E                 	db	110	;'n'
  2124  00F6B1  6E                 	db	110	;'n'
  2125  00F6B2  65                 	db	101	;'e'
  2126  00F6B3  6C                 	db	108	;'l'
  2127  00F6B4  20                 	db	32
  2128  00F6B5  4F                 	db	79	;'O'
  2129  00F6B6  75                 	db	117	;'u'
  2130  00F6B7  74                 	db	116	;'t'
  2131  00F6B8  20                 	db	32
  2132  00F6B9  6F                 	db	111	;'o'
  2133  00F6BA  66                 	db	102	;'f'
  2134  00F6BB  20                 	db	32
  2135  00F6BC  42                 	db	66	;'B'
  2136  00F6BD  6F                 	db	111	;'o'
  2137  00F6BE  75                 	db	117	;'u'
  2138  00F6BF  6E                 	db	110	;'n'
  2139  00F6C0  64                 	db	100	;'d'
  2140  00F6C1  73                 	db	115	;'s'
  2141  00F6C2  00                 	db	0
  2142  00F6C3                     STR_172:
  2143  00F6C3  43                 	db	67	;'C'
  2144  00F6C4  6F                 	db	111	;'o'
  2145  00F6C5  6E                 	db	110	;'n'
  2146  00F6C6  74                 	db	116	;'t'
  2147  00F6C7  72                 	db	114	;'r'
  2148  00F6C8  61                 	db	97	;'a'
  2149  00F6C9  73                 	db	115	;'s'
  2150  00F6CA  74                 	db	116	;'t'
  2151  00F6CB  20                 	db	32
  2152  00F6CC  50                 	db	80	;'P'
  2153  00F6CD  57                 	db	87	;'W'
  2154  00F6CE  4D                 	db	77	;'M'
  2155  00F6CF  20                 	db	32
  2156  00F6D0  48                 	db	72	;'H'
  2157  00F6D1  65                 	db	101	;'e'
  2158  00F6D2  6C                 	db	108	;'l'
  2159  00F6D3  70                 	db	112	;'p'
  2160  00F6D4  20                 	db	32
  2161  00F6D5  4D                 	db	77	;'M'
  2162  00F6D6  65                 	db	101	;'e'
  2163  00F6D7  6E                 	db	110	;'n'
  2164  00F6D8  75                 	db	117	;'u'
  2165  00F6D9  0D                 	db	13
  2166  00F6DA  0A                 	db	10
  2167  00F6DB  0A                 	db	10
  2168  00F6DC  00                 	db	0
  2169  00F6DD                     STR_215:
  2170  00F6DD  0D                 	db	13
  2171  00F6DE  0A                 	db	10
  2172  00F6DF  54                 	db	84	;'T'
  2173  00F6E0  69                 	db	105	;'i'
  2174  00F6E1  6D                 	db	109	;'m'
  2175  00F6E2  65                 	db	101	;'e'
  2176  00F6E3  20                 	db	32
  2177  00F6E4  53                 	db	83	;'S'
  2178  00F6E5  65                 	db	101	;'e'
  2179  00F6E6  74                 	db	116	;'t'
  2180  00F6E7  20                 	db	32
  2181  00F6E8  53                 	db	83	;'S'
  2182  00F6E9  75                 	db	117	;'u'
  2183  00F6EA  63                 	db	99	;'c'
  2184  00F6EB  63                 	db	99	;'c'
  2185  00F6EC  65                 	db	101	;'e'
  2186  00F6ED  73                 	db	115	;'s'
  2187  00F6EE  73                 	db	115	;'s'
  2188  00F6EF  66                 	db	102	;'f'
  2189  00F6F0  75                 	db	117	;'u'
  2190  00F6F1  6C                 	db	108	;'l'
  2191  00F6F2  6C                 	db	108	;'l'
  2192  00F6F3  79                 	db	121	;'y'
  2193  00F6F4  0D                 	db	13
  2194  00F6F5  0A                 	db	10
  2195  00F6F6  00                 	db	0
  2196  00F6F7                     STR_155:
  2197  00F6F7  52                 	db	82	;'R'
  2198  00F6F8  65                 	db	101	;'e'
  2199  00F6F9  64                 	db	100	;'d'
  2200  00F6FA  20                 	db	32
  2201  00F6FB  4C                 	db	76	;'L'
  2202  00F6FC  45                 	db	69	;'E'
  2203  00F6FD  44                 	db	68	;'D'
  2204  00F6FE  20                 	db	32
  2205  00F6FF  50                 	db	80	;'P'
  2206  00F700  57                 	db	87	;'W'
  2207  00F701  4D                 	db	77	;'M'
  2208  00F702  20                 	db	32
  2209  00F703  48                 	db	72	;'H'
  2210  00F704  65                 	db	101	;'e'
  2211  00F705  6C                 	db	108	;'l'
  2212  00F706  70                 	db	112	;'p'
  2213  00F707  20                 	db	32
  2214  00F708  4D                 	db	77	;'M'
  2215  00F709  65                 	db	101	;'e'
  2216  00F70A  6E                 	db	110	;'n'
  2217  00F70B  75                 	db	117	;'u'
  2218  00F70C  0D                 	db	13
  2219  00F70D  0A                 	db	10
  2220  00F70E  0A                 	db	10
  2221  00F70F  00                 	db	0
  2222  00F710                     STR_218:
  2223  00F710  0D                 	db	13
  2224  00F711  0A                 	db	10
  2225  00F712  49                 	db	73	;'I'
  2226  00F713  6E                 	db	110	;'n'
  2227  00F714  76                 	db	118	;'v'
  2228  00F715  61                 	db	97	;'a'
  2229  00F716  6C                 	db	108	;'l'
  2230  00F717  69                 	db	105	;'i'
  2231  00F718  64                 	db	100	;'d'
  2232  00F719  20                 	db	32
  2233  00F71A  54                 	db	84	;'T'
  2234  00F71B  69                 	db	105	;'i'
  2235  00F71C  6D                 	db	109	;'m'
  2236  00F71D  65                 	db	101	;'e'
  2237  00F71E  20                 	db	32
  2238  00F71F  45                 	db	69	;'E'
  2239  00F720  6E                 	db	110	;'n'
  2240  00F721  74                 	db	116	;'t'
  2241  00F722  65                 	db	101	;'e'
  2242  00F723  72                 	db	114	;'r'
  2243  00F724  65                 	db	101	;'e'
  2244  00F725  64                 	db	100	;'d'
  2245  00F726  0D                 	db	13
  2246  00F727  0A                 	db	10
  2247  00F728  00                 	db	0
  2248  00F729                     STR_55:
  2249  00F729  4C                 	db	76	;'L'
  2250  00F72A  69                 	db	105	;'i'
  2251  00F72B  76                 	db	118	;'v'
  2252  00F72C  69                 	db	105	;'i'
  2253  00F72D  6E                 	db	110	;'n'
  2254  00F72E  67                 	db	103	;'g'
  2255  00F72F  72                 	db	114	;'r'
  2256  00F730  6F                 	db	111	;'o'
  2257  00F731  6F                 	db	111	;'o'
  2258  00F732  6D                 	db	109	;'m'
  2259  00F733  20                 	db	32
  2260  00F734  4C                 	db	76	;'L'
  2261  00F735  69                 	db	105	;'i'
  2262  00F736  67                 	db	103	;'g'
  2263  00F737  68                 	db	104	;'h'
  2264  00F738  74                 	db	116	;'t'
  2265  00F739  20                 	db	32
  2266  00F73A  54                 	db	84	;'T'
  2267  00F73B  6F                 	db	111	;'o'
  2268  00F73C  67                 	db	103	;'g'
  2269  00F73D  67                 	db	103	;'g'
  2270  00F73E  6C                 	db	108	;'l'
  2271  00F73F  65                 	db	101	;'e'
  2272  00F740  64                 	db	100	;'d'
  2273  00F741  00                 	db	0
  2274  00F742                     STR_65:
  2275  00F742  4C                 	db	76	;'L'
  2276  00F743  69                 	db	105	;'i'
  2277  00F744  76                 	db	118	;'v'
  2278  00F745  69                 	db	105	;'i'
  2279  00F746  6E                 	db	110	;'n'
  2280  00F747  67                 	db	103	;'g'
  2281  00F748  72                 	db	114	;'r'
  2282  00F749  6F                 	db	111	;'o'
  2283  00F74A  6F                 	db	111	;'o'
  2284  00F74B  6D                 	db	109	;'m'
  2285  00F74C  20                 	db	32
  2286  00F74D  48                 	db	72	;'H'
  2287  00F74E  65                 	db	101	;'e'
  2288  00F74F  6C                 	db	108	;'l'
  2289  00F750  70                 	db	112	;'p'
  2290  00F751  20                 	db	32
  2291  00F752  4D                 	db	77	;'M'
  2292  00F753  65                 	db	101	;'e'
  2293  00F754  6E                 	db	110	;'n'
  2294  00F755  75                 	db	117	;'u'
  2295  00F756  0D                 	db	13
  2296  00F757  0A                 	db	10
  2297  00F758  0A                 	db	10
  2298  00F759  00                 	db	0
  2299  00F75A                     STR_209:
  2300  00F75A  45                 	db	69	;'E'
  2301  00F75B  52                 	db	82	;'R'
  2302  00F75C  52                 	db	82	;'R'
  2303  00F75D  4F                 	db	79	;'O'
  2304  00F75E  52                 	db	82	;'R'
  2305  00F75F  3A                 	db	58	;':'
  2306  00F760  20                 	db	32
  2307  00F761  43                 	db	67	;'C'
  2308  00F762  61                 	db	97	;'a'
  2309  00F763  6E                 	db	110	;'n'
  2310  00F764  27                 	db	39
  2311  00F765  74                 	db	116	;'t'
  2312  00F766  20                 	db	32
  2313  00F767  52                 	db	82	;'R'
  2314  00F768  65                 	db	101	;'e'
  2315  00F769  61                 	db	97	;'a'
  2316  00F76A  64                 	db	100	;'d'
  2317  00F76B  20                 	db	32
  2318  00F76C  52                 	db	82	;'R'
  2319  00F76D  54                 	db	84	;'T'
  2320  00F76E  43                 	db	67	;'C'
  2321  00F76F  0D                 	db	13
  2322  00F770  0A                 	db	10
  2323  00F771  00                 	db	0
  2324  00F772                     STR_104:
  2325  00F772  69                 	db	105	;'i'
  2326  00F773  2E                 	db	46
  2327  00F774  65                 	db	101	;'e'
  2328  00F775  2E                 	db	46
  2329  00F776  20                 	db	32
  2330  00F777  42                 	db	66	;'B'
  2331  00F778  65                 	db	101	;'e'
  2332  00F779  64                 	db	100	;'d'
  2333  00F77A  72                 	db	114	;'r'
  2334  00F77B  6F                 	db	111	;'o'
  2335  00F77C  6F                 	db	111	;'o'
  2336  00F77D  6D                 	db	109	;'m'
  2337  00F77E  20                 	db	32
  2338  00F77F  66                 	db	102	;'f'
  2339  00F780  61                 	db	97	;'a'
  2340  00F781  6E                 	db	110	;'n'
  2341  00F782  20                 	db	32
  2342  00F783  3D                 	db	61	;'='
  2343  00F784  20                 	db	32
  2344  00F785  4F                 	db	79	;'O'
  2345  00F786  6E                 	db	110	;'n'
  2346  00F787  0D                 	db	13
  2347  00F788  0A                 	db	10
  2348  00F789  00                 	db	0
  2349  00F78A                     STR_244:
  2350  00F78A  4A                 	db	74	;'J'
  2351  00F78B  6F                 	db	111	;'o'
  2352  00F78C  65                 	db	101	;'e'
  2353  00F78D  73                 	db	115	;'s'
  2354  00F78E  20                 	db	32
  2355  00F78F  52                 	db	82	;'R'
  2356  00F790  6F                 	db	111	;'o'
  2357  00F791  6F                 	db	111	;'o'
  2358  00F792  6D                 	db	109	;'m'
  2359  00F793  20                 	db	32
  2360  00F794  48                 	db	72	;'H'
  2361  00F795  65                 	db	101	;'e'
  2362  00F796  6C                 	db	108	;'l'
  2363  00F797  70                 	db	112	;'p'
  2364  00F798  20                 	db	32
  2365  00F799  4D                 	db	77	;'M'
  2366  00F79A  65                 	db	101	;'e'
  2367  00F79B  6E                 	db	110	;'n'
  2368  00F79C  75                 	db	117	;'u'
  2369  00F79D  0D                 	db	13
  2370  00F79E  0A                 	db	10
  2371  00F79F  0A                 	db	10
  2372  00F7A0  00                 	db	0
  2373  00F7A1                     STR_208:
  2374  00F7A1  25                 	db	37
  2375  00F7A2  30                 	db	48	;'0'
  2376  00F7A3  32                 	db	50	;'2'
  2377  00F7A4  64                 	db	100	;'d'
  2378  00F7A5  2F                 	db	47
  2379  00F7A6  25                 	db	37
  2380  00F7A7  30                 	db	48	;'0'
  2381  00F7A8  32                 	db	50	;'2'
  2382  00F7A9  64                 	db	100	;'d'
  2383  00F7AA  20                 	db	32
  2384  00F7AB  25                 	db	37
  2385  00F7AC  30                 	db	48	;'0'
  2386  00F7AD  32                 	db	50	;'2'
  2387  00F7AE  64                 	db	100	;'d'
  2388  00F7AF  3A                 	db	58	;':'
  2389  00F7B0  25                 	db	37
  2390  00F7B1  30                 	db	48	;'0'
  2391  00F7B2  32                 	db	50	;'2'
  2392  00F7B3  64                 	db	100	;'d'
  2393  00F7B4  20                 	db	32
  2394  00F7B5  41                 	db	65	;'A'
  2395  00F7B6  4D                 	db	77	;'M'
  2396  00F7B7  00                 	db	0
  2397  00F7B8                     STR_207:
  2398  00F7B8  25                 	db	37
  2399  00F7B9  30                 	db	48	;'0'
  2400  00F7BA  32                 	db	50	;'2'
  2401  00F7BB  64                 	db	100	;'d'
  2402  00F7BC  2F                 	db	47
  2403  00F7BD  25                 	db	37
  2404  00F7BE  30                 	db	48	;'0'
  2405  00F7BF  32                 	db	50	;'2'
  2406  00F7C0  64                 	db	100	;'d'
  2407  00F7C1  20                 	db	32
  2408  00F7C2  25                 	db	37
  2409  00F7C3  30                 	db	48	;'0'
  2410  00F7C4  32                 	db	50	;'2'
  2411  00F7C5  64                 	db	100	;'d'
  2412  00F7C6  3A                 	db	58	;':'
  2413  00F7C7  25                 	db	37
  2414  00F7C8  30                 	db	48	;'0'
  2415  00F7C9  32                 	db	50	;'2'
  2416  00F7CA  64                 	db	100	;'d'
  2417  00F7CB  20                 	db	32
  2418  00F7CC  50                 	db	80	;'P'
  2419  00F7CD  4D                 	db	77	;'M'
  2420  00F7CE  00                 	db	0
  2421  00F7CF                     STR_262:
  2422  00F7CF  69                 	db	105	;'i'
  2423  00F7D0  2E                 	db	46
  2424  00F7D1  65                 	db	101	;'e'
  2425  00F7D2  2E                 	db	46
  2426  00F7D3  20                 	db	32
  2427  00F7D4  20                 	db	32
  2428  00F7D5  4C                 	db	76	;'L'
  2429  00F7D6  69                 	db	105	;'i'
  2430  00F7D7  76                 	db	118	;'v'
  2431  00F7D8  69                 	db	105	;'i'
  2432  00F7D9  6E                 	db	110	;'n'
  2433  00F7DA  67                 	db	103	;'g'
  2434  00F7DB  72                 	db	114	;'r'
  2435  00F7DC  6F                 	db	111	;'o'
  2436  00F7DD  6F                 	db	111	;'o'
  2437  00F7DE  6D                 	db	109	;'m'
  2438  00F7DF  3F                 	db	63	;'?'
  2439  00F7E0  0D                 	db	13
  2440  00F7E1  0A                 	db	10
  2441  00F7E2  0D                 	db	13
  2442  00F7E3  0A                 	db	10
  2443  00F7E4  00                 	db	0
  2444  00F7E5                     STR_151:
  2445  00F7E5  44                 	db	68	;'D'
  2446  00F7E6  75                 	db	117	;'u'
  2447  00F7E7  74                 	db	116	;'t'
  2448  00F7E8  79                 	db	121	;'y'
  2449  00F7E9  63                 	db	99	;'c'
  2450  00F7EA  79                 	db	121	;'y'
  2451  00F7EB  63                 	db	99	;'c'
  2452  00F7EC  6C                 	db	108	;'l'
  2453  00F7ED  65                 	db	101	;'e'
  2454  00F7EE  20                 	db	32
  2455  00F7EF  73                 	db	115	;'s'
  2456  00F7F0  65                 	db	101	;'e'
  2457  00F7F1  74                 	db	116	;'t'
  2458  00F7F2  20                 	db	32
  2459  00F7F3  74                 	db	116	;'t'
  2460  00F7F4  6F                 	db	111	;'o'
  2461  00F7F5  20                 	db	32
  2462  00F7F6  25                 	db	37
  2463  00F7F7  64                 	db	100	;'d'
  2464  00F7F8  0D                 	db	13
  2465  00F7F9  0A                 	db	10
  2466  00F7FA  00                 	db	0
  2467  00F7FB                     STR_82:
  2468  00F7FB  42                 	db	66	;'B'
  2469  00F7FC  65                 	db	101	;'e'
  2470  00F7FD  64                 	db	100	;'d'
  2471  00F7FE  72                 	db	114	;'r'
  2472  00F7FF  6F                 	db	111	;'o'
  2473  00F800  6F                 	db	111	;'o'
  2474  00F801  6D                 	db	109	;'m'
  2475  00F802  20                 	db	32
  2476  00F803  4C                 	db	76	;'L'
  2477  00F804  69                 	db	105	;'i'
  2478  00F805  67                 	db	103	;'g'
  2479  00F806  68                 	db	104	;'h'
  2480  00F807  74                 	db	116	;'t'
  2481  00F808  20                 	db	32
  2482  00F809  54                 	db	84	;'T'
  2483  00F80A  6F                 	db	111	;'o'
  2484  00F80B  67                 	db	103	;'g'
  2485  00F80C  67                 	db	103	;'g'
  2486  00F80D  6C                 	db	108	;'l'
  2487  00F80E  65                 	db	101	;'e'
  2488  00F80F  64                 	db	100	;'d'
  2489  00F810  00                 	db	0
  2490  00F811                     STR_98:
  2491  00F811  42                 	db	66	;'B'
  2492  00F812  65                 	db	101	;'e'
  2493  00F813  64                 	db	100	;'d'
  2494  00F814  72                 	db	114	;'r'
  2495  00F815  6F                 	db	111	;'o'
  2496  00F816  6F                 	db	111	;'o'
  2497  00F817  6D                 	db	109	;'m'
  2498  00F818  20                 	db	32
  2499  00F819  48                 	db	72	;'H'
  2500  00F81A  65                 	db	101	;'e'
  2501  00F81B  6C                 	db	108	;'l'
  2502  00F81C  70                 	db	112	;'p'
  2503  00F81D  20                 	db	32
  2504  00F81E  4D                 	db	77	;'M'
  2505  00F81F  65                 	db	101	;'e'
  2506  00F820  6E                 	db	110	;'n'
  2507  00F821  75                 	db	117	;'u'
  2508  00F822  0D                 	db	13
  2509  00F823  0A                 	db	10
  2510  00F824  0A                 	db	10
  2511  00F825  00                 	db	0
  2512  00F826                     STR_228:
  2513  00F826  69                 	db	105	;'i'
  2514  00F827  2E                 	db	46
  2515  00F828  65                 	db	101	;'e'
  2516  00F829  2E                 	db	46
  2517  00F82A  20                 	db	32
  2518  00F82B  52                 	db	82	;'R'
  2519  00F82C  54                 	db	84	;'T'
  2520  00F82D  43                 	db	67	;'C'
  2521  00F82E  20                 	db	32
  2522  00F82F  53                 	db	83	;'S'
  2523  00F830  65                 	db	101	;'e'
  2524  00F831  74                 	db	116	;'t'
  2525  00F832  20                 	db	32
  2526  00F833  54                 	db	84	;'T'
  2527  00F834  69                 	db	105	;'i'
  2528  00F835  6D                 	db	109	;'m'
  2529  00F836  65                 	db	101	;'e'
  2530  00F837  3F                 	db	63	;'?'
  2531  00F838  0D                 	db	13
  2532  00F839  0A                 	db	10
  2533  00F83A  00                 	db	0
  2534  00F83B                     STR_189:
  2535  00F83B  41                 	db	65	;'A'
  2536  00F83C  44                 	db	68	;'D'
  2537  00F83D  43                 	db	67	;'C'
  2538  00F83E  20                 	db	32
  2539  00F83F  63                 	db	99	;'c'
  2540  00F840  68                 	db	104	;'h'
  2541  00F841  61                 	db	97	;'a'
  2542  00F842  6E                 	db	110	;'n'
  2543  00F843  6E                 	db	110	;'n'
  2544  00F844  65                 	db	101	;'e'
  2545  00F845  6C                 	db	108	;'l'
  2546  00F846  20                 	db	32
  2547  00F847  25                 	db	37
  2548  00F848  64                 	db	100	;'d'
  2549  00F849  20                 	db	32
  2550  00F84A  3D                 	db	61	;'='
  2551  00F84B  20                 	db	32
  2552  00F84C  25                 	db	37
  2553  00F84D  64                 	db	100	;'d'
  2554  00F84E  00                 	db	0
  2555  00F84F                     STR_240:
  2556  00F84F  4A                 	db	74	;'J'
  2557  00F850  6F                 	db	111	;'o'
  2558  00F851  65                 	db	101	;'e'
  2559  00F852  73                 	db	115	;'s'
  2560  00F853  20                 	db	32
  2561  00F854  72                 	db	114	;'r'
  2562  00F855  6F                 	db	111	;'o'
  2563  00F856  6F                 	db	111	;'o'
  2564  00F857  6D                 	db	109	;'m'
  2565  00F858  20                 	db	32
  2566  00F859  6C                 	db	108	;'l'
  2567  00F85A  69                 	db	105	;'i'
  2568  00F85B  67                 	db	103	;'g'
  2569  00F85C  68                 	db	104	;'h'
  2570  00F85D  74                 	db	116	;'t'
  2571  00F85E  20                 	db	32
  2572  00F85F  4F                 	db	79	;'O'
  2573  00F860  66                 	db	102	;'f'
  2574  00F861  66                 	db	102	;'f'
  2575  00F862  00                 	db	0
  2576  00F863                     STR_54:
  2577  00F863  6C                 	db	108	;'l'
  2578  00F864  69                 	db	105	;'i'
  2579  00F865  76                 	db	118	;'v'
  2580  00F866  69                 	db	105	;'i'
  2581  00F867  6E                 	db	110	;'n'
  2582  00F868  67                 	db	103	;'g'
  2583  00F869  72                 	db	114	;'r'
  2584  00F86A  6F                 	db	111	;'o'
  2585  00F86B  6F                 	db	111	;'o'
  2586  00F86C  6D                 	db	109	;'m'
  2587  00F86D  6C                 	db	108	;'l'
  2588  00F86E  69                 	db	105	;'i'
  2589  00F86F  67                 	db	103	;'g'
  2590  00F870  68                 	db	104	;'h'
  2591  00F871  74                 	db	116	;'t'
  2592  00F872  3D                 	db	61	;'='
  2593  00F873  6F                 	db	111	;'o'
  2594  00F874  66                 	db	102	;'f'
  2595  00F875  66                 	db	102	;'f'
  2596  00F876  00                 	db	0
  2597  00F877                     STR_237:
  2598  00F877  4A                 	db	74	;'J'
  2599  00F878  6F                 	db	111	;'o'
  2600  00F879  65                 	db	101	;'e'
  2601  00F87A  27                 	db	39
  2602  00F87B  73                 	db	115	;'s'
  2603  00F87C  20                 	db	32
  2604  00F87D  72                 	db	114	;'r'
  2605  00F87E  6F                 	db	111	;'o'
  2606  00F87F  6F                 	db	111	;'o'
  2607  00F880  6D                 	db	109	;'m'
  2608  00F881  20                 	db	32
  2609  00F882  6C                 	db	108	;'l'
  2610  00F883  69                 	db	105	;'i'
  2611  00F884  67                 	db	103	;'g'
  2612  00F885  68                 	db	104	;'h'
  2613  00F886  74                 	db	116	;'t'
  2614  00F887  20                 	db	32
  2615  00F888  4F                 	db	79	;'O'
  2616  00F889  6E                 	db	110	;'n'
  2617  00F88A  00                 	db	0
  2618  00F88B                     STR_63:
  2619  00F88B  4C                 	db	76	;'L'
  2620  00F88C  69                 	db	105	;'i'
  2621  00F88D  76                 	db	118	;'v'
  2622  00F88E  69                 	db	105	;'i'
  2623  00F88F  6E                 	db	110	;'n'
  2624  00F890  67                 	db	103	;'g'
  2625  00F891  72                 	db	114	;'r'
  2626  00F892  6F                 	db	111	;'o'
  2627  00F893  6F                 	db	111	;'o'
  2628  00F894  6D                 	db	109	;'m'
  2629  00F895  20                 	db	32
  2630  00F896  54                 	db	84	;'T'
  2631  00F897  61                 	db	97	;'a'
  2632  00F898  73                 	db	115	;'s'
  2633  00F899  6B                 	db	107	;'k'
  2634  00F89A  3F                 	db	63	;'?'
  2635  00F89B  3F                 	db	63	;'?'
  2636  00F89C  3F                 	db	63	;'?'
  2637  00F89D  00                 	db	0
  2638  00F89E                     STR_242:
  2639  00F89E  4A                 	db	74	;'J'
  2640  00F89F  6F                 	db	111	;'o'
  2641  00F8A0  65                 	db	101	;'e'
  2642  00F8A1  27                 	db	39
  2643  00F8A2  73                 	db	115	;'s'
  2644  00F8A3  20                 	db	32
  2645  00F8A4  72                 	db	114	;'r'
  2646  00F8A5  6F                 	db	111	;'o'
  2647  00F8A6  6F                 	db	111	;'o'
  2648  00F8A7  6D                 	db	109	;'m'
  2649  00F8A8  20                 	db	32
  2650  00F8A9  77                 	db	119	;'w'
  2651  00F8AA  68                 	db	104	;'h'
  2652  00F8AB  61                 	db	97	;'a'
  2653  00F8AC  74                 	db	116	;'t'
  2654  00F8AD  3F                 	db	63	;'?'
  2655  00F8AE  3F                 	db	63	;'?'
  2656  00F8AF  3F                 	db	63	;'?'
  2657  00F8B0  00                 	db	0
  2658  00F8B1                     STR_61:
  2659  00F8B1  4C                 	db	76	;'L'
  2660  00F8B2  69                 	db	105	;'i'
  2661  00F8B3  76                 	db	118	;'v'
  2662  00F8B4  69                 	db	105	;'i'
  2663  00F8B5  6E                 	db	110	;'n'
  2664  00F8B6  67                 	db	103	;'g'
  2665  00F8B7  72                 	db	114	;'r'
  2666  00F8B8  6F                 	db	111	;'o'
  2667  00F8B9  6F                 	db	111	;'o'
  2668  00F8BA  6D                 	db	109	;'m'
  2669  00F8BB  20                 	db	32
  2670  00F8BC  46                 	db	70	;'F'
  2671  00F8BD  61                 	db	97	;'a'
  2672  00F8BE  6E                 	db	110	;'n'
  2673  00F8BF  20                 	db	32
  2674  00F8C0  4F                 	db	79	;'O'
  2675  00F8C1  66                 	db	102	;'f'
  2676  00F8C2  66                 	db	102	;'f'
  2677  00F8C3  00                 	db	0
  2678  00F8C4                     STR_94:
  2679  00F8C4  42                 	db	66	;'B'
  2680  00F8C5  65                 	db	101	;'e'
  2681  00F8C6  64                 	db	100	;'d'
  2682  00F8C7  72                 	db	114	;'r'
  2683  00F8C8  6F                 	db	111	;'o'
  2684  00F8C9  6F                 	db	111	;'o'
  2685  00F8CA  6D                 	db	109	;'m'
  2686  00F8CB  20                 	db	32
  2687  00F8CC  53                 	db	83	;'S'
  2688  00F8CD  68                 	db	104	;'h'
  2689  00F8CE  61                 	db	97	;'a'
  2690  00F8CF  6B                 	db	107	;'k'
  2691  00F8D0  65                 	db	101	;'e'
  2692  00F8D1  72                 	db	114	;'r'
  2693  00F8D2  20                 	db	32
  2694  00F8D3  4F                 	db	79	;'O'
  2695  00F8D4  66                 	db	102	;'f'
  2696  00F8D5  66                 	db	102	;'f'
  2697  00F8D6  00                 	db	0
  2698  00F8D7                     STR_53:
  2699  00F8D7  6C                 	db	108	;'l'
  2700  00F8D8  69                 	db	105	;'i'
  2701  00F8D9  76                 	db	118	;'v'
  2702  00F8DA  69                 	db	105	;'i'
  2703  00F8DB  6E                 	db	110	;'n'
  2704  00F8DC  67                 	db	103	;'g'
  2705  00F8DD  72                 	db	114	;'r'
  2706  00F8DE  6F                 	db	111	;'o'
  2707  00F8DF  6F                 	db	111	;'o'
  2708  00F8E0  6D                 	db	109	;'m'
  2709  00F8E1  6C                 	db	108	;'l'
  2710  00F8E2  69                 	db	105	;'i'
  2711  00F8E3  67                 	db	103	;'g'
  2712  00F8E4  68                 	db	104	;'h'
  2713  00F8E5  74                 	db	116	;'t'
  2714  00F8E6  3D                 	db	61	;'='
  2715  00F8E7  6F                 	db	111	;'o'
  2716  00F8E8  6E                 	db	110	;'n'
  2717  00F8E9  00                 	db	0
  2718  00F8EA                     STR_132:
  2719  00F8EA  63                 	db	99	;'c'
  2720  00F8EB  6F                 	db	111	;'o'
  2721  00F8EC  6C                 	db	108	;'l'
  2722  00F8ED  6F                 	db	111	;'o'
  2723  00F8EE  72                 	db	114	;'r'
  2724  00F8EF  65                 	db	101	;'e'
  2725  00F8F0  64                 	db	100	;'d'
  2726  00F8F1  20                 	db	32
  2727  00F8F2  6C                 	db	108	;'l'
  2728  00F8F3  69                 	db	105	;'i'
  2729  00F8F4  67                 	db	103	;'g'
  2730  00F8F5  68                 	db	104	;'h'
  2731  00F8F6  74                 	db	116	;'t'
  2732  00F8F7  73                 	db	115	;'s'
  2733  00F8F8  0D                 	db	13
  2734  00F8F9  0A                 	db	10
  2735  00F8FA  0A                 	db	10
  2736  00F8FB  00                 	db	0
  2737  00F8FC                     STR_127:
  2738  00F8FC  43                 	db	67	;'C'
  2739  00F8FD  68                 	db	104	;'h'
  2740  00F8FE  72                 	db	114	;'r'
  2741  00F8FF  69                 	db	105	;'i'
  2742  00F900  73                 	db	115	;'s'
  2743  00F901  74                 	db	116	;'t'
  2744  00F902  6D                 	db	109	;'m'
  2745  00F903  61                 	db	97	;'a'
  2746  00F904  73                 	db	115	;'s'
  2747  00F905  20                 	db	32
  2748  00F906  57                 	db	87	;'W'
  2749  00F907  68                 	db	104	;'h'
  2750  00F908  61                 	db	97	;'a'
  2751  00F909  74                 	db	116	;'t'
  2752  00F90A  3F                 	db	63	;'?'
  2753  00F90B  3F                 	db	63	;'?'
  2754  00F90C  3F                 	db	63	;'?'
  2755  00F90D  00                 	db	0
  2756  00F90E                     STR_60:
  2757  00F90E  6C                 	db	108	;'l'
  2758  00F90F  69                 	db	105	;'i'
  2759  00F910  76                 	db	118	;'v'
  2760  00F911  69                 	db	105	;'i'
  2761  00F912  6E                 	db	110	;'n'
  2762  00F913  67                 	db	103	;'g'
  2763  00F914  72                 	db	114	;'r'
  2764  00F915  6F                 	db	111	;'o'
  2765  00F916  6F                 	db	111	;'o'
  2766  00F917  6D                 	db	109	;'m'
  2767  00F918  66                 	db	102	;'f'
  2768  00F919  61                 	db	97	;'a'
  2769  00F91A  6E                 	db	110	;'n'
  2770  00F91B  3D                 	db	61	;'='
  2771  00F91C  6F                 	db	111	;'o'
  2772  00F91D  66                 	db	102	;'f'
  2773  00F91E  66                 	db	102	;'f'
  2774  00F91F  00                 	db	0
  2775  00F920                     STR_93:
  2776  00F920  62                 	db	98	;'b'
  2777  00F921  65                 	db	101	;'e'
  2778  00F922  64                 	db	100	;'d'
  2779  00F923  72                 	db	114	;'r'
  2780  00F924  6F                 	db	111	;'o'
  2781  00F925  6F                 	db	111	;'o'
  2782  00F926  6D                 	db	109	;'m'
  2783  00F927  73                 	db	115	;'s'
  2784  00F928  68                 	db	104	;'h'
  2785  00F929  61                 	db	97	;'a'
  2786  00F92A  6B                 	db	107	;'k'
  2787  00F92B  65                 	db	101	;'e'
  2788  00F92C  72                 	db	114	;'r'
  2789  00F92D  3D                 	db	61	;'='
  2790  00F92E  6F                 	db	111	;'o'
  2791  00F92F  66                 	db	102	;'f'
  2792  00F930  66                 	db	102	;'f'
  2793  00F931  00                 	db	0
  2794  00F932                     STR_239:
  2795  00F932  6A                 	db	106	;'j'
  2796  00F933  6F                 	db	111	;'o'
  2797  00F934  65                 	db	101	;'e'
  2798  00F935  73                 	db	115	;'s'
  2799  00F936  72                 	db	114	;'r'
  2800  00F937  6F                 	db	111	;'o'
  2801  00F938  6F                 	db	111	;'o'
  2802  00F939  6D                 	db	109	;'m'
  2803  00F93A  6C                 	db	108	;'l'
  2804  00F93B  69                 	db	105	;'i'
  2805  00F93C  67                 	db	103	;'g'
  2806  00F93D  68                 	db	104	;'h'
  2807  00F93E  74                 	db	116	;'t'
  2808  00F93F  3D                 	db	61	;'='
  2809  00F940  6F                 	db	111	;'o'
  2810  00F941  66                 	db	102	;'f'
  2811  00F942  66                 	db	102	;'f'
  2812  00F943  00                 	db	0
  2813  00F944                     STR_58:
  2814  00F944  4C                 	db	76	;'L'
  2815  00F945  69                 	db	105	;'i'
  2816  00F946  76                 	db	118	;'v'
  2817  00F947  69                 	db	105	;'i'
  2818  00F948  6E                 	db	110	;'n'
  2819  00F949  67                 	db	103	;'g'
  2820  00F94A  72                 	db	114	;'r'
  2821  00F94B  6F                 	db	111	;'o'
  2822  00F94C  6F                 	db	111	;'o'
  2823  00F94D  6D                 	db	109	;'m'
  2824  00F94E  20                 	db	32
  2825  00F94F  46                 	db	70	;'F'
  2826  00F950  61                 	db	97	;'a'
  2827  00F951  6E                 	db	110	;'n'
  2828  00F952  20                 	db	32
  2829  00F953  4F                 	db	79	;'O'
  2830  00F954  6E                 	db	110	;'n'
  2831  00F955  00                 	db	0
  2832  00F956                     STR_91:
  2833  00F956  42                 	db	66	;'B'
  2834  00F957  65                 	db	101	;'e'
  2835  00F958  64                 	db	100	;'d'
  2836  00F959  72                 	db	114	;'r'
  2837  00F95A  6F                 	db	111	;'o'
  2838  00F95B  6F                 	db	111	;'o'
  2839  00F95C  6D                 	db	109	;'m'
  2840  00F95D  20                 	db	32
  2841  00F95E  53                 	db	83	;'S'
  2842  00F95F  68                 	db	104	;'h'
  2843  00F960  61                 	db	97	;'a'
  2844  00F961  6B                 	db	107	;'k'
  2845  00F962  65                 	db	101	;'e'
  2846  00F963  72                 	db	114	;'r'
  2847  00F964  20                 	db	32
  2848  00F965  4F                 	db	79	;'O'
  2849  00F966  6E                 	db	110	;'n'
  2850  00F967  00                 	db	0
  2851  00F968                     STR_285:
  2852  00F968  30                 	db	48	;'0'
  2853  00F969  31                 	db	49	;'1'
  2854  00F96A  32                 	db	50	;'2'
  2855  00F96B  33                 	db	51	;'3'
  2856  00F96C  34                 	db	52	;'4'
  2857  00F96D  35                 	db	53	;'5'
  2858  00F96E  36                 	db	54	;'6'
  2859  00F96F  37                 	db	55	;'7'
  2860  00F970  38                 	db	56	;'8'
  2861  00F971  39                 	db	57	;'9'
  2862  00F972  41                 	db	65	;'A'
  2863  00F973  42                 	db	66	;'B'
  2864  00F974  43                 	db	67	;'C'
  2865  00F975  44                 	db	68	;'D'
  2866  00F976  45                 	db	69	;'E'
  2867  00F977  46                 	db	70	;'F'
  2868  00F978  00                 	db	0
  2869  00F979                     STR_286:
  2870  00F979  30                 	db	48	;'0'
  2871  00F97A  31                 	db	49	;'1'
  2872  00F97B  32                 	db	50	;'2'
  2873  00F97C  33                 	db	51	;'3'
  2874  00F97D  34                 	db	52	;'4'
  2875  00F97E  35                 	db	53	;'5'
  2876  00F97F  36                 	db	54	;'6'
  2877  00F980  37                 	db	55	;'7'
  2878  00F981  38                 	db	56	;'8'
  2879  00F982  39                 	db	57	;'9'
  2880  00F983  61                 	db	97	;'a'
  2881  00F984  62                 	db	98	;'b'
  2882  00F985  63                 	db	99	;'c'
  2883  00F986  64                 	db	100	;'d'
  2884  00F987  65                 	db	101	;'e'
  2885  00F988  66                 	db	102	;'f'
  2886  00F989  00                 	db	0
  2887  00F98A                     STR_191:
  2888  00F98A  41                 	db	65	;'A'
  2889  00F98B  44                 	db	68	;'D'
  2890  00F98C  43                 	db	67	;'C'
  2891  00F98D  20                 	db	32
  2892  00F98E  48                 	db	72	;'H'
  2893  00F98F  65                 	db	101	;'e'
  2894  00F990  6C                 	db	108	;'l'
  2895  00F991  70                 	db	112	;'p'
  2896  00F992  20                 	db	32
  2897  00F993  4D                 	db	77	;'M'
  2898  00F994  65                 	db	101	;'e'
  2899  00F995  6E                 	db	110	;'n'
  2900  00F996  75                 	db	117	;'u'
  2901  00F997  0D                 	db	13
  2902  00F998  0A                 	db	10
  2903  00F999  0A                 	db	10
  2904  00F99A  00                 	db	0
  2905  00F99B                     STR_41:
  2906  00F99B  4C                 	db	76	;'L'
  2907  00F99C  45                 	db	69	;'E'
  2908  00F99D  44                 	db	68	;'D'
  2909  00F99E  20                 	db	32
  2910  00F99F  48                 	db	72	;'H'
  2911  00F9A0  65                 	db	101	;'e'
  2912  00F9A1  6C                 	db	108	;'l'
  2913  00F9A2  70                 	db	112	;'p'
  2914  00F9A3  20                 	db	32
  2915  00F9A4  4D                 	db	77	;'M'
  2916  00F9A5  65                 	db	101	;'e'
  2917  00F9A6  6E                 	db	110	;'n'
  2918  00F9A7  75                 	db	117	;'u'
  2919  00F9A8  0D                 	db	13
  2920  00F9A9  0A                 	db	10
  2921  00F9AA  0A                 	db	10
  2922  00F9AB  00                 	db	0
  2923  00F9AC                     STR_188:
  2924  00F9AC  43                 	db	67	;'C'
  2925  00F9AD  68                 	db	104	;'h'
  2926  00F9AE  6E                 	db	110	;'n'
  2927  00F9AF  6C                 	db	108	;'l'
  2928  00F9B0  20                 	db	32
  2929  00F9B1  73                 	db	115	;'s'
  2930  00F9B2  65                 	db	101	;'e'
  2931  00F9B3  74                 	db	116	;'t'
  2932  00F9B4  20                 	db	32
  2933  00F9B5  74                 	db	116	;'t'
  2934  00F9B6  6F                 	db	111	;'o'
  2935  00F9B7  20                 	db	32
  2936  00F9B8  25                 	db	37
  2937  00F9B9  64                 	db	100	;'d'
  2938  00F9BA  0D                 	db	13
  2939  00F9BB  0A                 	db	10
  2940  00F9BC  00                 	db	0
  2941  00F9BD                     STR_257:
  2942  00F9BD  43                 	db	67	;'C'
  2943  00F9BE  68                 	db	104	;'h'
  2944  00F9BF  72                 	db	114	;'r'
  2945  00F9C0  69                 	db	105	;'i'
  2946  00F9C1  73                 	db	115	;'s'
  2947  00F9C2  74                 	db	116	;'t'
  2948  00F9C3  6D                 	db	109	;'m'
  2949  00F9C4  61                 	db	97	;'a'
  2950  00F9C5  73                 	db	115	;'s'
  2951  00F9C6  20                 	db	32
  2952  00F9C7  54                 	db	84	;'T'
  2953  00F9C8  72                 	db	114	;'r'
  2954  00F9C9  65                 	db	101	;'e'
  2955  00F9CA  65                 	db	101	;'e'
  2956  00F9CB  0D                 	db	13
  2957  00F9CC  0A                 	db	10
  2958  00F9CD  00                 	db	0
  2959  00F9CE                     STR_46:
  2960  00F9CE  69                 	db	105	;'i'
  2961  00F9CF  2E                 	db	46
  2962  00F9D0  65                 	db	101	;'e'
  2963  00F9D1  2E                 	db	46
  2964  00F9D2  20                 	db	32
  2965  00F9D3  4C                 	db	76	;'L'
  2966  00F9D4  45                 	db	69	;'E'
  2967  00F9D5  44                 	db	68	;'D'
  2968  00F9D6  31                 	db	49	;'1'
  2969  00F9D7  20                 	db	32
  2970  00F9D8  3D                 	db	61	;'='
  2971  00F9D9  20                 	db	32
  2972  00F9DA  4F                 	db	79	;'O'
  2973  00F9DB  6E                 	db	110	;'n'
  2974  00F9DC  0D                 	db	13
  2975  00F9DD  0A                 	db	10
  2976  00F9DE  00                 	db	0
  2977  00F9DF                     STR_206:
  2978  00F9DF  52                 	db	82	;'R'
  2979  00F9E0  54                 	db	84	;'T'
  2980  00F9E1  43                 	db	67	;'C'
  2981  00F9E2  20                 	db	32
  2982  00F9E3  54                 	db	84	;'T'
  2983  00F9E4  69                 	db	105	;'i'
  2984  00F9E5  6D                 	db	109	;'m'
  2985  00F9E6  65                 	db	101	;'e'
  2986  00F9E7  20                 	db	32
  2987  00F9E8  69                 	db	105	;'i'
  2988  00F9E9  73                 	db	115	;'s'
  2989  00F9EA  3A                 	db	58	;':'
  2990  00F9EB  20                 	db	32
  2991  00F9EC  20                 	db	32
  2992  00F9ED  20                 	db	32
  2993  00F9EE  20                 	db	32
  2994  00F9EF  00                 	db	0
  2995  00F9F0                     STR_81:
  2996  00F9F0  62                 	db	98	;'b'
  2997  00F9F1  65                 	db	101	;'e'
  2998  00F9F2  64                 	db	100	;'d'
  2999  00F9F3  72                 	db	114	;'r'
  3000  00F9F4  6F                 	db	111	;'o'
  3001  00F9F5  6F                 	db	111	;'o'
  3002  00F9F6  6D                 	db	109	;'m'
  3003  00F9F7  6C                 	db	108	;'l'
  3004  00F9F8  69                 	db	105	;'i'
  3005  00F9F9  67                 	db	103	;'g'
  3006  00F9FA  68                 	db	104	;'h'
  3007  00F9FB  74                 	db	116	;'t'
  3008  00F9FC  3D                 	db	61	;'='
  3009  00F9FD  6F                 	db	111	;'o'
  3010  00F9FE  66                 	db	102	;'f'
  3011  00F9FF  66                 	db	102	;'f'
  3012  00FA00  00                 	db	0
  3013  00FA01                     STR_210:
  3014  00FA01  52                 	db	82	;'R'
  3015  00FA02  54                 	db	84	;'T'
  3016  00FA03  43                 	db	67	;'C'
  3017  00FA04  20                 	db	32
  3018  00FA05  69                 	db	105	;'i'
  3019  00FA06  73                 	db	115	;'s'
  3020  00FA07  6E                 	db	110	;'n'
  3021  00FA08  74                 	db	116	;'t'
  3022  00FA09  20                 	db	32
  3023  00FA0A  77                 	db	119	;'w'
  3024  00FA0B  6F                 	db	111	;'o'
  3025  00FA0C  72                 	db	114	;'r'
  3026  00FA0D  6B                 	db	107	;'k'
  3027  00FA0E  69                 	db	105	;'i'
  3028  00FA0F  6E                 	db	110	;'n'
  3029  00FA10  67                 	db	103	;'g'
  3030  00FA11  00                 	db	0
  3031  00FA12                     STR_57:
  3032  00FA12  6C                 	db	108	;'l'
  3033  00FA13  69                 	db	105	;'i'
  3034  00FA14  76                 	db	118	;'v'
  3035  00FA15  69                 	db	105	;'i'
  3036  00FA16  6E                 	db	110	;'n'
  3037  00FA17  67                 	db	103	;'g'
  3038  00FA18  72                 	db	114	;'r'
  3039  00FA19  6F                 	db	111	;'o'
  3040  00FA1A  6F                 	db	111	;'o'
  3041  00FA1B  6D                 	db	109	;'m'
  3042  00FA1C  66                 	db	102	;'f'
  3043  00FA1D  61                 	db	97	;'a'
  3044  00FA1E  6E                 	db	110	;'n'
  3045  00FA1F  3D                 	db	61	;'='
  3046  00FA20  6F                 	db	111	;'o'
  3047  00FA21  6E                 	db	110	;'n'
  3048  00FA22  00                 	db	0
  3049  00FA23                     STR_90:
  3050  00FA23  62                 	db	98	;'b'
  3051  00FA24  65                 	db	101	;'e'
  3052  00FA25  64                 	db	100	;'d'
  3053  00FA26  72                 	db	114	;'r'
  3054  00FA27  6F                 	db	111	;'o'
  3055  00FA28  6F                 	db	111	;'o'
  3056  00FA29  6D                 	db	109	;'m'
  3057  00FA2A  73                 	db	115	;'s'
  3058  00FA2B  68                 	db	104	;'h'
  3059  00FA2C  61                 	db	97	;'a'
  3060  00FA2D  6B                 	db	107	;'k'
  3061  00FA2E  65                 	db	101	;'e'
  3062  00FA2F  72                 	db	114	;'r'
  3063  00FA30  3D                 	db	61	;'='
  3064  00FA31  6F                 	db	111	;'o'
  3065  00FA32  6E                 	db	110	;'n'
  3066  00FA33  00                 	db	0
  3067  00FA34                     STR_236:
  3068  00FA34  6A                 	db	106	;'j'
  3069  00FA35  6F                 	db	111	;'o'
  3070  00FA36  65                 	db	101	;'e'
  3071  00FA37  73                 	db	115	;'s'
  3072  00FA38  72                 	db	114	;'r'
  3073  00FA39  6F                 	db	111	;'o'
  3074  00FA3A  6F                 	db	111	;'o'
  3075  00FA3B  6D                 	db	109	;'m'
  3076  00FA3C  6C                 	db	108	;'l'
  3077  00FA3D  69                 	db	105	;'i'
  3078  00FA3E  67                 	db	103	;'g'
  3079  00FA3F  68                 	db	104	;'h'
  3080  00FA40  74                 	db	116	;'t'
  3081  00FA41  3D                 	db	61	;'='
  3082  00FA42  6F                 	db	111	;'o'
  3083  00FA43  6E                 	db	110	;'n'
  3084  00FA44  00                 	db	0
  3085  00FA45                     STR_142:
  3086  00FA45  72                 	db	114	;'r'
  3087  00FA46  65                 	db	101	;'e'
  3088  00FA47  64                 	db	100	;'d'
  3089  00FA48  6C                 	db	108	;'l'
  3090  00FA49  65                 	db	101	;'e'
  3091  00FA4A  64                 	db	100	;'d'
  3092  00FA4B  62                 	db	98	;'b'
  3093  00FA4C  72                 	db	114	;'r'
  3094  00FA4D  69                 	db	105	;'i'
  3095  00FA4E  67                 	db	103	;'g'
  3096  00FA4F  68                 	db	104	;'h'
  3097  00FA50  74                 	db	116	;'t'
  3098  00FA51  6E                 	db	110	;'n'
  3099  00FA52  65                 	db	101	;'e'
  3100  00FA53  73                 	db	115	;'s'
  3101  00FA54  73                 	db	115	;'s'
  3102  00FA55  00                 	db	0
  3103  00FA56                     STR_158:
  3104  00FA56  52                 	db	82	;'R'
  3105  00FA57  65                 	db	101	;'e'
  3106  00FA58  64                 	db	100	;'d'
  3107  00FA59  20                 	db	32
  3108  00FA5A  4C                 	db	76	;'L'
  3109  00FA5B  45                 	db	69	;'E'
  3110  00FA5C  44                 	db	68	;'D'
  3111  00FA5D  20                 	db	32
  3112  00FA5E  43                 	db	67	;'C'
  3113  00FA5F  6F                 	db	111	;'o'
  3114  00FA60  6E                 	db	110	;'n'
  3115  00FA61  74                 	db	116	;'t'
  3116  00FA62  72                 	db	114	;'r'
  3117  00FA63  61                 	db	97	;'a'
  3118  00FA64  73                 	db	115	;'s'
  3119  00FA65  74                 	db	116	;'t'
  3120  00FA66  00                 	db	0
  3121  00FA67                     STR_14:
  3122  00FA67  53                 	db	83	;'S'
  3123  00FA68  74                 	db	116	;'t'
  3124  00FA69  61                 	db	97	;'a'
  3125  00FA6A  72                 	db	114	;'r'
  3126  00FA6B  74                 	db	116	;'t'
  3127  00FA6C  69                 	db	105	;'i'
  3128  00FA6D  6E                 	db	110	;'n'
  3129  00FA6E  67                 	db	103	;'g'
  3130  00FA6F  2E                 	db	46
  3131  00FA70  2E                 	db	46
  3132  00FA71  2E                 	db	46
  3133  00FA72  2E                 	db	46
  3134  00FA73  2E                 	db	46
  3135  00FA74  2E                 	db	46
  3136  00FA75  2E                 	db	46
  3137  00FA76  2E                 	db	46
  3138  00FA77  00                 	db	0
  3139  00FA78                     STR_167:
  3140  00FA78  45                 	db	69	;'E'
  3141  00FA79  52                 	db	82	;'R'
  3142  00FA7A  52                 	db	82	;'R'
  3143  00FA7B  3A                 	db	58	;':'
  3144  00FA7C  20                 	db	32
  3145  00FA7D  43                 	db	67	;'C'
  3146  00FA7E  4E                 	db	78	;'N'
  3147  00FA7F  53                 	db	83	;'S'
  3148  00FA80  54                 	db	84	;'T'
  3149  00FA81  20                 	db	32
  3150  00FA82  3E                 	db	62	;'>'
  3151  00FA83  20                 	db	32
  3152  00FA84  31                 	db	49	;'1'
  3153  00FA85  30                 	db	48	;'0'
  3154  00FA86  30                 	db	48	;'0'
  3155  00FA87  00                 	db	0
  3156  00FA88                     STR_148:
  3157  00FA88  45                 	db	69	;'E'
  3158  00FA89  52                 	db	82	;'R'
  3159  00FA8A  52                 	db	82	;'R'
  3160  00FA8B  3A                 	db	58	;':'
  3161  00FA8C  20                 	db	32
  3162  00FA8D  44                 	db	68	;'D'
  3163  00FA8E  75                 	db	117	;'u'
  3164  00FA8F  74                 	db	116	;'t'
  3165  00FA90  79                 	db	121	;'y'
  3166  00FA91  20                 	db	32
  3167  00FA92  3E                 	db	62	;'>'
  3168  00FA93  20                 	db	32
  3169  00FA94  31                 	db	49	;'1'
  3170  00FA95  30                 	db	48	;'0'
  3171  00FA96  30                 	db	48	;'0'
  3172  00FA97  00                 	db	0
  3173  00FA98                     STR_64:
  3174  00FA98  4C                 	db	76	;'L'
  3175  00FA99  56                 	db	86	;'V'
  3176  00FA9A  4E                 	db	78	;'N'
  3177  00FA9B  47                 	db	71	;'G'
  3178  00FA9C  20                 	db	32
  3179  00FA9D  52                 	db	82	;'R'
  3180  00FA9E  6D                 	db	109	;'m'
  3181  00FA9F  20                 	db	32
  3182  00FAA0  54                 	db	84	;'T'
  3183  00FAA1  61                 	db	97	;'a'
  3184  00FAA2  73                 	db	115	;'s'
  3185  00FAA3  6B                 	db	107	;'k'
  3186  00FAA4  3F                 	db	63	;'?'
  3187  00FAA5  3F                 	db	63	;'?'
  3188  00FAA6  3F                 	db	63	;'?'
  3189  00FAA7  00                 	db	0
  3190  00FAA8                     STR_96:
  3191  00FAA8  42                 	db	66	;'B'
  3192  00FAA9  65                 	db	101	;'e'
  3193  00FAAA  64                 	db	100	;'d'
  3194  00FAAB  72                 	db	114	;'r'
  3195  00FAAC  6F                 	db	111	;'o'
  3196  00FAAD  6F                 	db	111	;'o'
  3197  00FAAE  6D                 	db	109	;'m'
  3198  00FAAF  20                 	db	32
  3199  00FAB0  54                 	db	84	;'T'
  3200  00FAB1  61                 	db	97	;'a'
  3201  00FAB2  73                 	db	115	;'s'
  3202  00FAB3  6B                 	db	107	;'k'
  3203  00FAB4  3F                 	db	63	;'?'
  3204  00FAB5  3F                 	db	63	;'?'
  3205  00FAB6  3F                 	db	63	;'?'
  3206  00FAB7  00                 	db	0
  3207  00FAB8                     STR_105:
  3208  00FAB8  42                 	db	66	;'B'
  3209  00FAB9  65                 	db	101	;'e'
  3210  00FABA  64                 	db	100	;'d'
  3211  00FABB  72                 	db	114	;'r'
  3212  00FABC  6F                 	db	111	;'o'
  3213  00FABD  6F                 	db	111	;'o'
  3214  00FABE  6D                 	db	109	;'m'
  3215  00FABF  20                 	db	32
  3216  00FAC0  48                 	db	72	;'H'
  3217  00FAC1  65                 	db	101	;'e'
  3218  00FAC2  6C                 	db	108	;'l'
  3219  00FAC3  70                 	db	112	;'p'
  3220  00FAC4  3F                 	db	63	;'?'
  3221  00FAC5  3F                 	db	63	;'?'
  3222  00FAC6  3F                 	db	63	;'?'
  3223  00FAC7  00                 	db	0
  3224  00FAC8                     STR_154:
  3225  00FAC8  52                 	db	82	;'R'
  3226  00FAC9  65                 	db	101	;'e'
  3227  00FACA  64                 	db	100	;'d'
  3228  00FACB  20                 	db	32
  3229  00FACC  4C                 	db	76	;'L'
  3230  00FACD  45                 	db	69	;'E'
  3231  00FACE  44                 	db	68	;'D'
  3232  00FACF  20                 	db	32
  3233  00FAD0  57                 	db	87	;'W'
  3234  00FAD1  68                 	db	104	;'h'
  3235  00FAD2  61                 	db	97	;'a'
  3236  00FAD3  74                 	db	116	;'t'
  3237  00FAD4  3F                 	db	63	;'?'
  3238  00FAD5  3F                 	db	63	;'?'
  3239  00FAD6  3F                 	db	63	;'?'
  3240  00FAD7  00                 	db	0
  3241  00FAD8                     STR_243:
  3242  00FAD8  4A                 	db	74	;'J'
  3243  00FAD9  6F                 	db	111	;'o'
  3244  00FADA  65                 	db	101	;'e'
  3245  00FADB  20                 	db	32
  3246  00FADC  72                 	db	114	;'r'
  3247  00FADD  6F                 	db	111	;'o'
  3248  00FADE  6F                 	db	111	;'o'
  3249  00FADF  6D                 	db	109	;'m'
  3250  00FAE0  20                 	db	32
  3251  00FAE1  77                 	db	119	;'w'
  3252  00FAE2  68                 	db	104	;'h'
  3253  00FAE3  61                 	db	97	;'a'
  3254  00FAE4  74                 	db	116	;'t'
  3255  00FAE5  3F                 	db	63	;'?'
  3256  00FAE6  3F                 	db	63	;'?'
  3257  00FAE7  00                 	db	0
  3258  00FAE8                     STR_272:
  3259  00FAE8  43                 	db	67	;'C'
  3260  00FAE9  68                 	db	104	;'h'
  3261  00FAEA  72                 	db	114	;'r'
  3262  00FAEB  69                 	db	105	;'i'
  3263  00FAEC  73                 	db	115	;'s'
  3264  00FAED  74                 	db	116	;'t'
  3265  00FAEE  6D                 	db	109	;'m'
  3266  00FAEF  61                 	db	97	;'a'
  3267  00FAF0  73                 	db	115	;'s'
  3268  00FAF1  20                 	db	32
  3269  00FAF2  54                 	db	84	;'T'
  3270  00FAF3  72                 	db	114	;'r'
  3271  00FAF4  65                 	db	101	;'e'
  3272  00FAF5  65                 	db	101	;'e'
  3273  00FAF6  3F                 	db	63	;'?'
  3274  00FAF7  00                 	db	0
  3275  00FAF8                     STR_118:
  3276  00FAF8  58                 	db	88	;'X'
  3277  00FAF9  4D                 	db	77	;'M'
  3278  00FAFA  41                 	db	65	;'A'
  3279  00FAFB  53                 	db	83	;'S'
  3280  00FAFC  20                 	db	32
  3281  00FAFD  43                 	db	67	;'C'
  3282  00FAFE  6F                 	db	111	;'o'
  3283  00FAFF  6C                 	db	108	;'l'
  3284  00FB00  6F                 	db	111	;'o'
  3285  00FB01  72                 	db	114	;'r'
  3286  00FB02  20                 	db	32
  3287  00FB03  54                 	db	84	;'T'
  3288  00FB04  47                 	db	71	;'G'
  3289  00FB05  4C                 	db	76	;'L'
  3290  00FB06  44                 	db	68	;'D'
  3291  00FB07  00                 	db	0
  3292  00FB08                     STR_56:
  3293  00FB08  4C                 	db	76	;'L'
  3294  00FB09  56                 	db	86	;'V'
  3295  00FB0A  4E                 	db	78	;'N'
  3296  00FB0B  47                 	db	71	;'G'
  3297  00FB0C  20                 	db	32
  3298  00FB0D  52                 	db	82	;'R'
  3299  00FB0E  6D                 	db	109	;'m'
  3300  00FB0F  20                 	db	32
  3301  00FB10  4C                 	db	76	;'L'
  3302  00FB11  74                 	db	116	;'t'
  3303  00FB12  20                 	db	32
  3304  00FB13  54                 	db	84	;'T'
  3305  00FB14  47                 	db	71	;'G'
  3306  00FB15  4C                 	db	76	;'L'
  3307  00FB16  44                 	db	68	;'D'
  3308  00FB17  00                 	db	0
  3309  00FB18                     STR_83:
  3310  00FB18  42                 	db	66	;'B'
  3311  00FB19  65                 	db	101	;'e'
  3312  00FB1A  64                 	db	100	;'d'
  3313  00FB1B  72                 	db	114	;'r'
  3314  00FB1C  6F                 	db	111	;'o'
  3315  00FB1D  6F                 	db	111	;'o'
  3316  00FB1E  6D                 	db	109	;'m'
  3317  00FB1F  20                 	db	32
  3318  00FB20  4C                 	db	76	;'L'
  3319  00FB21  74                 	db	116	;'t'
  3320  00FB22  20                 	db	32
  3321  00FB23  54                 	db	84	;'T'
  3322  00FB24  47                 	db	71	;'G'
  3323  00FB25  4C                 	db	76	;'L'
  3324  00FB26  44                 	db	68	;'D'
  3325  00FB27  00                 	db	0
  3326  00FB28                     STR_203:
  3327  00FB28  52                 	db	82	;'R'
  3328  00FB29  54                 	db	84	;'T'
  3329  00FB2A  43                 	db	67	;'C'
  3330  00FB2B  20                 	db	32
  3331  00FB2C  42                 	db	66	;'B'
  3332  00FB2D  74                 	db	116	;'t'
  3333  00FB2E  79                 	db	121	;'y'
  3334  00FB2F  20                 	db	32
  3335  00FB30  3D                 	db	61	;'='
  3336  00FB31  20                 	db	32
  3337  00FB32  25                 	db	37
  3338  00FB33  64                 	db	100	;'d'
  3339  00FB34  2E                 	db	46
  3340  00FB35  25                 	db	37
  3341  00FB36  64                 	db	100	;'d'
  3342  00FB37  00                 	db	0
  3343  00FB38                     STR_278:
  3344  00FB38  49                 	db	73	;'I'
  3345  00FB39  6E                 	db	110	;'n'
  3346  00FB3A  76                 	db	118	;'v'
  3347  00FB3B  61                 	db	97	;'a'
  3348  00FB3C  6C                 	db	108	;'l'
  3349  00FB3D  69                 	db	105	;'i'
  3350  00FB3E  64                 	db	100	;'d'
  3351  00FB3F  20                 	db	32
  3352  00FB40  43                 	db	67	;'C'
  3353  00FB41  6F                 	db	111	;'o'
  3354  00FB42  6D                 	db	109	;'m'
  3355  00FB43  6D                 	db	109	;'m'
  3356  00FB44  61                 	db	97	;'a'
  3357  00FB45  6E                 	db	110	;'n'
  3358  00FB46  64                 	db	100	;'d'
  3359  00FB47  00                 	db	0
  3360  00FB48                     STR_186:
  3361  00FB48  45                 	db	69	;'E'
  3362  00FB49  52                 	db	82	;'R'
  3363  00FB4A  52                 	db	82	;'R'
  3364  00FB4B  3A                 	db	58	;':'
  3365  00FB4C  20                 	db	32
  3366  00FB4D  43                 	db	67	;'C'
  3367  00FB4E  61                 	db	97	;'a'
  3368  00FB4F  6E                 	db	110	;'n'
  3369  00FB50  74                 	db	116	;'t'
  3370  00FB51  20                 	db	32
  3371  00FB52  70                 	db	112	;'p'
  3372  00FB53  61                 	db	97	;'a'
  3373  00FB54  72                 	db	114	;'r'
  3374  00FB55  73                 	db	115	;'s'
  3375  00FB56  65                 	db	101	;'e'
  3376  00FB57  00                 	db	0
  3377  00FB58                     STR_95:
  3378  00FB58  42                 	db	66	;'B'
  3379  00FB59  65                 	db	101	;'e'
  3380  00FB5A  64                 	db	100	;'d'
  3381  00FB5B  72                 	db	114	;'r'
  3382  00FB5C  6F                 	db	111	;'o'
  3383  00FB5D  6F                 	db	111	;'o'
  3384  00FB5E  6D                 	db	109	;'m'
  3385  00FB5F  20                 	db	32
  3386  00FB60  53                 	db	83	;'S'
  3387  00FB61  4B                 	db	75	;'K'
  3388  00FB62  52                 	db	82	;'R'
  3389  00FB63  20                 	db	32
  3390  00FB64  4F                 	db	79	;'O'
  3391  00FB65  66                 	db	102	;'f'
  3392  00FB66  66                 	db	102	;'f'
  3393  00FB67  00                 	db	0
  3394  00FB68                     STR_88:
  3395  00FB68  42                 	db	66	;'B'
  3396  00FB69  65                 	db	101	;'e'
  3397  00FB6A  64                 	db	100	;'d'
  3398  00FB6B  72                 	db	114	;'r'
  3399  00FB6C  6F                 	db	111	;'o'
  3400  00FB6D  6F                 	db	111	;'o'
  3401  00FB6E  6D                 	db	109	;'m'
  3402  00FB6F  20                 	db	32
  3403  00FB70  46                 	db	70	;'F'
  3404  00FB71  61                 	db	97	;'a'
  3405  00FB72  6E                 	db	110	;'n'
  3406  00FB73  20                 	db	32
  3407  00FB74  4F                 	db	79	;'O'
  3408  00FB75  66                 	db	102	;'f'
  3409  00FB76  66                 	db	102	;'f'
  3410  00FB77  00                 	db	0
  3411  00FB78                     STR_241:
  3412  00FB78  4A                 	db	74	;'J'
  3413  00FB79  6F                 	db	111	;'o'
  3414  00FB7A  65                 	db	101	;'e'
  3415  00FB7B  20                 	db	32
  3416  00FB7C  72                 	db	114	;'r'
  3417  00FB7D  6F                 	db	111	;'o'
  3418  00FB7E  6F                 	db	111	;'o'
  3419  00FB7F  6D                 	db	109	;'m'
  3420  00FB80  20                 	db	32
  3421  00FB81  6C                 	db	108	;'l'
  3422  00FB82  74                 	db	116	;'t'
  3423  00FB83  20                 	db	32
  3424  00FB84  4F                 	db	79	;'O'
  3425  00FB85  66                 	db	102	;'f'
  3426  00FB86  66                 	db	102	;'f'
  3427  00FB87  00                 	db	0
  3428  00FB88                     STR_184:
  3429  00FB88  45                 	db	69	;'E'
  3430  00FB89  52                 	db	82	;'R'
  3431  00FB8A  52                 	db	82	;'R'
  3432  00FB8B  3A                 	db	58	;':'
  3433  00FB8C  20                 	db	32
  3434  00FB8D  55                 	db	85	;'U'
  3435  00FB8E  73                 	db	115	;'s'
  3436  00FB8F  65                 	db	101	;'e'
  3437  00FB90  20                 	db	32
  3438  00FB91  2B                 	db	43
  3439  00FB92  20                 	db	32
  3440  00FB93  43                 	db	67	;'C'
  3441  00FB94  68                 	db	104	;'h'
  3442  00FB95  6E                 	db	110	;'n'
  3443  00FB96  6C                 	db	108	;'l'
  3444  00FB97  00                 	db	0
  3445  00FB98                     STR_80:
  3446  00FB98  62                 	db	98	;'b'
  3447  00FB99  65                 	db	101	;'e'
  3448  00FB9A  64                 	db	100	;'d'
  3449  00FB9B  72                 	db	114	;'r'
  3450  00FB9C  6F                 	db	111	;'o'
  3451  00FB9D  6F                 	db	111	;'o'
  3452  00FB9E  6D                 	db	109	;'m'
  3453  00FB9F  6C                 	db	108	;'l'
  3454  00FBA0  69                 	db	105	;'i'
  3455  00FBA1  67                 	db	103	;'g'
  3456  00FBA2  68                 	db	104	;'h'
  3457  00FBA3  74                 	db	116	;'t'
  3458  00FBA4  3D                 	db	61	;'='
  3459  00FBA5  6F                 	db	111	;'o'
  3460  00FBA6  6E                 	db	110	;'n'
  3461  00FBA7  00                 	db	0
  3462  00FBA8                     STR_71:
  3463  00FBA8  4C                 	db	76	;'L'
  3464  00FBA9  56                 	db	86	;'V'
  3465  00FBAA  4E                 	db	78	;'N'
  3466  00FBAB  47                 	db	71	;'G'
  3467  00FBAC  20                 	db	32
  3468  00FBAD  52                 	db	82	;'R'
  3469  00FBAE  6D                 	db	109	;'m'
  3470  00FBAF  20                 	db	32
  3471  00FBB0  4C                 	db	76	;'L'
  3472  00FBB1  74                 	db	116	;'t'
  3473  00FBB2  20                 	db	32
  3474  00FBB3  68                 	db	104	;'h'
  3475  00FBB4  65                 	db	101	;'e'
  3476  00FBB5  6C                 	db	108	;'l'
  3477  00FBB6  70                 	db	112	;'p'
  3478  00FBB7  00                 	db	0
  3479  00FBB8                     STR_13:
  3480  00FBB8  53                 	db	83	;'S'
  3481  00FBB9  74                 	db	116	;'t'
  3482  00FBBA  61                 	db	97	;'a'
  3483  00FBBB  72                 	db	114	;'r'
  3484  00FBBC  74                 	db	116	;'t'
  3485  00FBBD  69                 	db	105	;'i'
  3486  00FBBE  6E                 	db	110	;'n'
  3487  00FBBF  67                 	db	103	;'g'
  3488  00FBC0  2E                 	db	46
  3489  00FBC1  2E                 	db	46
  3490  00FBC2  2E                 	db	46
  3491  00FBC3  2E                 	db	46
  3492  00FBC4  2E                 	db	46
  3493  00FBC5  2E                 	db	46
  3494  00FBC6  2E                 	db	46
  3495  00FBC7  00                 	db	0
  3496  00FBC8                     STR_263:
  3497  00FBC8  43                 	db	67	;'C'
  3498  00FBC9  75                 	db	117	;'u'
  3499  00FBCA  72                 	db	114	;'r'
  3500  00FBCB  72                 	db	114	;'r'
  3501  00FBCC  65                 	db	101	;'e'
  3502  00FBCD  6E                 	db	110	;'n'
  3503  00FBCE  74                 	db	116	;'t'
  3504  00FBCF  20                 	db	32
  3505  00FBD0  54                 	db	84	;'T'
  3506  00FBD1  69                 	db	105	;'i'
  3507  00FBD2  6D                 	db	109	;'m'
  3508  00FBD3  65                 	db	101	;'e'
  3509  00FBD4  0D                 	db	13
  3510  00FBD5  0A                 	db	10
  3511  00FBD6  00                 	db	0
  3512  00FBD7                     STR_131:
  3513  00FBD7  77                 	db	119	;'w'
  3514  00FBD8  68                 	db	104	;'h'
  3515  00FBD9  69                 	db	105	;'i'
  3516  00FBDA  74                 	db	116	;'t'
  3517  00FBDB  65                 	db	101	;'e'
  3518  00FBDC  20                 	db	32
  3519  00FBDD  6C                 	db	108	;'l'
  3520  00FBDE  69                 	db	105	;'i'
  3521  00FBDF  67                 	db	103	;'g'
  3522  00FBE0  68                 	db	104	;'h'
  3523  00FBE1  74                 	db	116	;'t'
  3524  00FBE2  73                 	db	115	;'s'
  3525  00FBE3  0D                 	db	13
  3526  00FBE4  0A                 	db	10
  3527  00FBE5  00                 	db	0
  3528  00FBE6                     STR_171:
  3529  00FBE6  43                 	db	67	;'C'
  3530  00FBE7  4E                 	db	78	;'N'
  3531  00FBE8  53                 	db	83	;'S'
  3532  00FBE9  54                 	db	84	;'T'
  3533  00FBEA  20                 	db	32
  3534  00FBEB  73                 	db	115	;'s'
  3535  00FBEC  65                 	db	101	;'e'
  3536  00FBED  74                 	db	116	;'t'
  3537  00FBEE  20                 	db	32
  3538  00FBEF  74                 	db	116	;'t'
  3539  00FBF0  6F                 	db	111	;'o'
  3540  00FBF1  20                 	db	32
  3541  00FBF2  25                 	db	37
  3542  00FBF3  64                 	db	100	;'d'
  3543  00FBF4  00                 	db	0
  3544  00FBF5                     STR_152:
  3545  00FBF5  44                 	db	68	;'D'
  3546  00FBF6  75                 	db	117	;'u'
  3547  00FBF7  74                 	db	116	;'t'
  3548  00FBF8  79                 	db	121	;'y'
  3549  00FBF9  20                 	db	32
  3550  00FBFA  73                 	db	115	;'s'
  3551  00FBFB  65                 	db	101	;'e'
  3552  00FBFC  74                 	db	116	;'t'
  3553  00FBFD  20                 	db	32
  3554  00FBFE  74                 	db	116	;'t'
  3555  00FBFF  6F                 	db	111	;'o'
  3556  00FC00  20                 	db	32
  3557  00FC01  25                 	db	37
  3558  00FC02  64                 	db	100	;'d'
  3559  00FC03  00                 	db	0
  3560  00FC04                     STR_126:
  3561  00FC04  58                 	db	88	;'X'
  3562  00FC05  4D                 	db	77	;'M'
  3563  00FC06  41                 	db	65	;'A'
  3564  00FC07  53                 	db	83	;'S'
  3565  00FC08  20                 	db	32
  3566  00FC09  57                 	db	87	;'W'
  3567  00FC0A  68                 	db	104	;'h'
  3568  00FC0B  69                 	db	105	;'i'
  3569  00FC0C  74                 	db	116	;'t'
  3570  00FC0D  65                 	db	101	;'e'
  3571  00FC0E  20                 	db	32
  3572  00FC0F  4F                 	db	79	;'O'
  3573  00FC10  66                 	db	102	;'f'
  3574  00FC11  66                 	db	102	;'f'
  3575  00FC12  00                 	db	0
  3576  00FC13                     STR_62:
  3577  00FC13  4C                 	db	76	;'L'
  3578  00FC14  56                 	db	86	;'V'
  3579  00FC15  4E                 	db	78	;'N'
  3580  00FC16  47                 	db	71	;'G'
  3581  00FC17  20                 	db	32
  3582  00FC18  52                 	db	82	;'R'
  3583  00FC19  6D                 	db	109	;'m'
  3584  00FC1A  20                 	db	32
  3585  00FC1B  4C                 	db	76	;'L'
  3586  00FC1C  74                 	db	116	;'t'
  3587  00FC1D  20                 	db	32
  3588  00FC1E  4F                 	db	79	;'O'
  3589  00FC1F  66                 	db	102	;'f'
  3590  00FC20  66                 	db	102	;'f'
  3591  00FC21  00                 	db	0
  3592  00FC22                     STR_89:
  3593  00FC22  42                 	db	66	;'B'
  3594  00FC23  65                 	db	101	;'e'
  3595  00FC24  64                 	db	100	;'d'
  3596  00FC25  72                 	db	114	;'r'
  3597  00FC26  6F                 	db	111	;'o'
  3598  00FC27  6F                 	db	111	;'o'
  3599  00FC28  6D                 	db	109	;'m'
  3600  00FC29  20                 	db	32
  3601  00FC2A  4C                 	db	76	;'L'
  3602  00FC2B  74                 	db	116	;'t'
  3603  00FC2C  20                 	db	32
  3604  00FC2D  4F                 	db	79	;'O'
  3605  00FC2E  66                 	db	102	;'f'
  3606  00FC2F  66                 	db	102	;'f'
  3607  00FC30  00                 	db	0
  3608  00FC31                     STR_87:
  3609  00FC31  62                 	db	98	;'b'
  3610  00FC32  65                 	db	101	;'e'
  3611  00FC33  64                 	db	100	;'d'
  3612  00FC34  72                 	db	114	;'r'
  3613  00FC35  6F                 	db	111	;'o'
  3614  00FC36  6F                 	db	111	;'o'
  3615  00FC37  6D                 	db	109	;'m'
  3616  00FC38  66                 	db	102	;'f'
  3617  00FC39  61                 	db	97	;'a'
  3618  00FC3A  6E                 	db	110	;'n'
  3619  00FC3B  3D                 	db	61	;'='
  3620  00FC3C  6F                 	db	111	;'o'
  3621  00FC3D  66                 	db	102	;'f'
  3622  00FC3E  66                 	db	102	;'f'
  3623  00FC3F  00                 	db	0
  3624  00FC40                     STR_92:
  3625  00FC40  42                 	db	66	;'B'
  3626  00FC41  65                 	db	101	;'e'
  3627  00FC42  64                 	db	100	;'d'
  3628  00FC43  72                 	db	114	;'r'
  3629  00FC44  6F                 	db	111	;'o'
  3630  00FC45  6F                 	db	111	;'o'
  3631  00FC46  6D                 	db	109	;'m'
  3632  00FC47  20                 	db	32
  3633  00FC48  53                 	db	83	;'S'
  3634  00FC49  4B                 	db	75	;'K'
  3635  00FC4A  52                 	db	82	;'R'
  3636  00FC4B  20                 	db	32
  3637  00FC4C  4F                 	db	79	;'O'
  3638  00FC4D  6E                 	db	110	;'n'
  3639  00FC4E  00                 	db	0
  3640  00FC4F                     STR_85:
  3641  00FC4F  42                 	db	66	;'B'
  3642  00FC50  65                 	db	101	;'e'
  3643  00FC51  64                 	db	100	;'d'
  3644  00FC52  72                 	db	114	;'r'
  3645  00FC53  6F                 	db	111	;'o'
  3646  00FC54  6F                 	db	111	;'o'
  3647  00FC55  6D                 	db	109	;'m'
  3648  00FC56  20                 	db	32
  3649  00FC57  46                 	db	70	;'F'
  3650  00FC58  61                 	db	97	;'a'
  3651  00FC59  6E                 	db	110	;'n'
  3652  00FC5A  20                 	db	32
  3653  00FC5B  4F                 	db	79	;'O'
  3654  00FC5C  6E                 	db	110	;'n'
  3655  00FC5D  00                 	db	0
  3656  00FC5E                     STR_238:
  3657  00FC5E  4A                 	db	74	;'J'
  3658  00FC5F  6F                 	db	111	;'o'
  3659  00FC60  65                 	db	101	;'e'
  3660  00FC61  20                 	db	32
  3661  00FC62  72                 	db	114	;'r'
  3662  00FC63  6F                 	db	111	;'o'
  3663  00FC64  6F                 	db	111	;'o'
  3664  00FC65  6D                 	db	109	;'m'
  3665  00FC66  20                 	db	32
  3666  00FC67  6C                 	db	108	;'l'
  3667  00FC68  74                 	db	116	;'t'
  3668  00FC69  20                 	db	32
  3669  00FC6A  4F                 	db	79	;'O'
  3670  00FC6B  6E                 	db	110	;'n'
  3671  00FC6C  00                 	db	0
  3672  00FC6D                     STR_165:
  3673  00FC6D  45                 	db	69	;'E'
  3674  00FC6E  52                 	db	82	;'R'
  3675  00FC6F  52                 	db	82	;'R'
  3676  00FC70  3A                 	db	58	;':'
  3677  00FC71  20                 	db	32
  3678  00FC72  4E                 	db	78	;'N'
  3679  00FC73  6F                 	db	111	;'o'
  3680  00FC74  20                 	db	32
  3681  00FC75  6E                 	db	110	;'n'
  3682  00FC76  75                 	db	117	;'u'
  3683  00FC77  6D                 	db	109	;'m'
  3684  00FC78  62                 	db	98	;'b'
  3685  00FC79  65                 	db	101	;'e'
  3686  00FC7A  72                 	db	114	;'r'
  3687  00FC7B  00                 	db	0
  3688  00FC7C                     STR_146:
  3689  00FC7C  45                 	db	69	;'E'
  3690  00FC7D  52                 	db	82	;'R'
  3691  00FC7E  52                 	db	82	;'R'
  3692  00FC7F  3A                 	db	58	;':'
  3693  00FC80  20                 	db	32
  3694  00FC81  6E                 	db	110	;'n'
  3695  00FC82  6F                 	db	111	;'o'
  3696  00FC83  20                 	db	32
  3697  00FC84  6E                 	db	110	;'n'
  3698  00FC85  75                 	db	117	;'u'
  3699  00FC86  6D                 	db	109	;'m'
  3700  00FC87  62                 	db	98	;'b'
  3701  00FC88  65                 	db	101	;'e'
  3702  00FC89  72                 	db	114	;'r'
  3703  00FC8A  00                 	db	0
  3704  00FC8B                     STR_12:
  3705  00FC8B  53                 	db	83	;'S'
  3706  00FC8C  74                 	db	116	;'t'
  3707  00FC8D  61                 	db	97	;'a'
  3708  00FC8E  72                 	db	114	;'r'
  3709  00FC8F  74                 	db	116	;'t'
  3710  00FC90  69                 	db	105	;'i'
  3711  00FC91  6E                 	db	110	;'n'
  3712  00FC92  67                 	db	103	;'g'
  3713  00FC93  2E                 	db	46
  3714  00FC94  2E                 	db	46
  3715  00FC95  2E                 	db	46
  3716  00FC96  2E                 	db	46
  3717  00FC97  2E                 	db	46
  3718  00FC98  2E                 	db	46
  3719  00FC99  00                 	db	0
  3720  00FC9A                     STR_169:
  3721  00FC9A  45                 	db	69	;'E'
  3722  00FC9B  52                 	db	82	;'R'
  3723  00FC9C  52                 	db	82	;'R'
  3724  00FC9D  3A                 	db	58	;':'
  3725  00FC9E  20                 	db	32
  3726  00FC9F  43                 	db	67	;'C'
  3727  00FCA0  4E                 	db	78	;'N'
  3728  00FCA1  53                 	db	83	;'S'
  3729  00FCA2  54                 	db	84	;'T'
  3730  00FCA3  20                 	db	32
  3731  00FCA4  3C                 	db	60	;'<'
  3732  00FCA5  20                 	db	32
  3733  00FCA6  30                 	db	48	;'0'
  3734  00FCA7  00                 	db	0
  3735  00FCA8                     STR_150:
  3736  00FCA8  45                 	db	69	;'E'
  3737  00FCA9  52                 	db	82	;'R'
  3738  00FCAA  52                 	db	82	;'R'
  3739  00FCAB  3A                 	db	58	;':'
  3740  00FCAC  20                 	db	32
  3741  00FCAD  44                 	db	68	;'D'
  3742  00FCAE  75                 	db	117	;'u'
  3743  00FCAF  74                 	db	116	;'t'
  3744  00FCB0  79                 	db	121	;'y'
  3745  00FCB1  20                 	db	32
  3746  00FCB2  3C                 	db	60	;'<'
  3747  00FCB3  20                 	db	32
  3748  00FCB4  30                 	db	48	;'0'
  3749  00FCB5  00                 	db	0
  3750  00FCB6                     STR_268:
  3751  00FCB6  44                 	db	68	;'D'
  3752  00FCB7  65                 	db	101	;'e'
  3753  00FCB8  76                 	db	118	;'v'
  3754  00FCB9  69                 	db	105	;'i'
  3755  00FCBA  63                 	db	99	;'c'
  3756  00FCBB  65                 	db	101	;'e'
  3757  00FCBC  20                 	db	32
  3758  00FCBD  4D                 	db	77	;'M'
  3759  00FCBE  65                 	db	101	;'e'
  3760  00FCBF  6E                 	db	110	;'n'
  3761  00FCC0  75                 	db	117	;'u'
  3762  00FCC1  73                 	db	115	;'s'
  3763  00FCC2  3A                 	db	58	;':'
  3764  00FCC3  00                 	db	0
  3765  00FCC4                     STR_122:
  3766  00FCC4  58                 	db	88	;'X'
  3767  00FCC5  4D                 	db	77	;'M'
  3768  00FCC6  41                 	db	65	;'A'
  3769  00FCC7  53                 	db	83	;'S'
  3770  00FCC8  20                 	db	32
  3771  00FCC9  57                 	db	87	;'W'
  3772  00FCCA  68                 	db	104	;'h'
  3773  00FCCB  69                 	db	105	;'i'
  3774  00FCCC  74                 	db	116	;'t'
  3775  00FCCD  65                 	db	101	;'e'
  3776  00FCCE  20                 	db	32
  3777  00FCCF  4F                 	db	79	;'O'
  3778  00FCD0  6E                 	db	110	;'n'
  3779  00FCD1  00                 	db	0
  3780  00FCD2                     STR_59:
  3781  00FCD2  4C                 	db	76	;'L'
  3782  00FCD3  56                 	db	86	;'V'
  3783  00FCD4  4E                 	db	78	;'N'
  3784  00FCD5  47                 	db	71	;'G'
  3785  00FCD6  20                 	db	32
  3786  00FCD7  52                 	db	82	;'R'
  3787  00FCD8  6D                 	db	109	;'m'
  3788  00FCD9  20                 	db	32
  3789  00FCDA  4C                 	db	76	;'L'
  3790  00FCDB  74                 	db	116	;'t'
  3791  00FCDC  20                 	db	32
  3792  00FCDD  4F                 	db	79	;'O'
  3793  00FCDE  6E                 	db	110	;'n'
  3794  00FCDF  00                 	db	0
  3795  00FCE0                     STR_86:
  3796  00FCE0  42                 	db	66	;'B'
  3797  00FCE1  65                 	db	101	;'e'
  3798  00FCE2  64                 	db	100	;'d'
  3799  00FCE3  72                 	db	114	;'r'
  3800  00FCE4  6F                 	db	111	;'o'
  3801  00FCE5  6F                 	db	111	;'o'
  3802  00FCE6  6D                 	db	109	;'m'
  3803  00FCE7  20                 	db	32
  3804  00FCE8  4C                 	db	76	;'L'
  3805  00FCE9  74                 	db	116	;'t'
  3806  00FCEA  20                 	db	32
  3807  00FCEB  4F                 	db	79	;'O'
  3808  00FCEC  6E                 	db	110	;'n'
  3809  00FCED  00                 	db	0
  3810  00FCEE                     STR_84:
  3811  00FCEE  62                 	db	98	;'b'
  3812  00FCEF  65                 	db	101	;'e'
  3813  00FCF0  64                 	db	100	;'d'
  3814  00FCF1  72                 	db	114	;'r'
  3815  00FCF2  6F                 	db	111	;'o'
  3816  00FCF3  6F                 	db	111	;'o'
  3817  00FCF4  6D                 	db	109	;'m'
  3818  00FCF5  66                 	db	102	;'f'
  3819  00FCF6  61                 	db	97	;'a'
  3820  00FCF7  6E                 	db	110	;'n'
  3821  00FCF8  3D                 	db	61	;'='
  3822  00FCF9  6F                 	db	111	;'o'
  3823  00FCFA  6E                 	db	110	;'n'
  3824  00FCFB  00                 	db	0
  3825  00FCFC                     STR_249:
  3826  00FCFC  4A                 	db	74	;'J'
  3827  00FCFD  6F                 	db	111	;'o'
  3828  00FCFE  65                 	db	101	;'e'
  3829  00FCFF  20                 	db	32
  3830  00FD00  72                 	db	114	;'r'
  3831  00FD01  6F                 	db	111	;'o'
  3832  00FD02  6F                 	db	111	;'o'
  3833  00FD03  6D                 	db	109	;'m'
  3834  00FD04  20                 	db	32
  3835  00FD05  4D                 	db	77	;'M'
  3836  00FD06  65                 	db	101	;'e'
  3837  00FD07  6E                 	db	110	;'n'
  3838  00FD08  75                 	db	117	;'u'
  3839  00FD09  00                 	db	0
  3840  00FD0A                     STR_72:
  3841  00FD0A  4C                 	db	76	;'L'
  3842  00FD0B  56                 	db	86	;'V'
  3843  00FD0C  4E                 	db	78	;'N'
  3844  00FD0D  47                 	db	71	;'G'
  3845  00FD0E  72                 	db	114	;'r'
  3846  00FD0F  6F                 	db	111	;'o'
  3847  00FD10  6F                 	db	111	;'o'
  3848  00FD11  6D                 	db	109	;'m'
  3849  00FD12  20                 	db	32
  3850  00FD13  4D                 	db	77	;'M'
  3851  00FD14  65                 	db	101	;'e'
  3852  00FD15  6E                 	db	110	;'n'
  3853  00FD16  75                 	db	117	;'u'
  3854  00FD17  00                 	db	0
  3855  00FD18                     STR_11:
  3856  00FD18  53                 	db	83	;'S'
  3857  00FD19  74                 	db	116	;'t'
  3858  00FD1A  61                 	db	97	;'a'
  3859  00FD1B  72                 	db	114	;'r'
  3860  00FD1C  74                 	db	116	;'t'
  3861  00FD1D  69                 	db	105	;'i'
  3862  00FD1E  6E                 	db	110	;'n'
  3863  00FD1F  67                 	db	103	;'g'
  3864  00FD20  2E                 	db	46
  3865  00FD21  2E                 	db	46
  3866  00FD22  2E                 	db	46
  3867  00FD23  2E                 	db	46
  3868  00FD24  2E                 	db	46
  3869  00FD25  00                 	db	0
  3870  00FD26                     STR_195:
  3871  00FD26  69                 	db	105	;'i'
  3872  00FD27  2E                 	db	46
  3873  00FD28  65                 	db	101	;'e'
  3874  00FD29  2E                 	db	46
  3875  00FD2A  20                 	db	32
  3876  00FD2B  41                 	db	65	;'A'
  3877  00FD2C  44                 	db	68	;'D'
  3878  00FD2D  43                 	db	67	;'C'
  3879  00FD2E  20                 	db	32
  3880  00FD2F  30                 	db	48	;'0'
  3881  00FD30  0D                 	db	13
  3882  00FD31  0A                 	db	10
  3883  00FD32  00                 	db	0
  3884  00FD33                     STR_255:
  3885  00FD33  4C                 	db	76	;'L'
  3886  00FD34  69                 	db	105	;'i'
  3887  00FD35  76                 	db	118	;'v'
  3888  00FD36  69                 	db	105	;'i'
  3889  00FD37  6E                 	db	110	;'n'
  3890  00FD38  67                 	db	103	;'g'
  3891  00FD39  72                 	db	114	;'r'
  3892  00FD3A  6F                 	db	111	;'o'
  3893  00FD3B  6F                 	db	111	;'o'
  3894  00FD3C  6D                 	db	109	;'m'
  3895  00FD3D  0D                 	db	13
  3896  00FD3E  0A                 	db	10
  3897  00FD3F  00                 	db	0
  3898  00FD40                     STR_220:
  3899  00FD40  52                 	db	82	;'R'
  3900  00FD41  54                 	db	84	;'T'
  3901  00FD42  43                 	db	67	;'C'
  3902  00FD43  20                 	db	32
  3903  00FD44  57                 	db	87	;'W'
  3904  00FD45  68                 	db	104	;'h'
  3905  00FD46  61                 	db	97	;'a'
  3906  00FD47  74                 	db	116	;'t'
  3907  00FD48  3F                 	db	63	;'?'
  3908  00FD49  3F                 	db	63	;'?'
  3909  00FD4A  3F                 	db	63	;'?'
  3910  00FD4B  0A                 	db	10
  3911  00FD4C  00                 	db	0
  3912  00FD4D                     STR_182:
  3913  00FD4D  45                 	db	69	;'E'
  3914  00FD4E  52                 	db	82	;'R'
  3915  00FD4F  52                 	db	82	;'R'
  3916  00FD50  3A                 	db	58	;':'
  3917  00FD51  20                 	db	32
  3918  00FD52  55                 	db	85	;'U'
  3919  00FD53  73                 	db	115	;'s'
  3920  00FD54  65                 	db	101	;'e'
  3921  00FD55  20                 	db	32
  3922  00FD56  31                 	db	49	;'1'
  3923  00FD57  20                 	db	32
  3924  00FD58  3D                 	db	61	;'='
  3925  00FD59  00                 	db	0
  3926  00FD5A                     STR_128:
  3927  00FD5A  58                 	db	88	;'X'
  3928  00FD5B  4D                 	db	77	;'M'
  3929  00FD5C  41                 	db	65	;'A'
  3930  00FD5D  53                 	db	83	;'S'
  3931  00FD5E  20                 	db	32
  3932  00FD5F  57                 	db	87	;'W'
  3933  00FD60  68                 	db	104	;'h'
  3934  00FD61  61                 	db	97	;'a'
  3935  00FD62  74                 	db	116	;'t'
  3936  00FD63  3F                 	db	63	;'?'
  3937  00FD64  3F                 	db	63	;'?'
  3938  00FD65  3F                 	db	63	;'?'
  3939  00FD66  00                 	db	0
  3940  00FD67                     STR_190:
  3941  00FD67  43                 	db	67	;'C'
  3942  00FD68  68                 	db	104	;'h'
  3943  00FD69  6E                 	db	110	;'n'
  3944  00FD6A  6C                 	db	108	;'l'
  3945  00FD6B  20                 	db	32
  3946  00FD6C  25                 	db	37
  3947  00FD6D  64                 	db	100	;'d'
  3948  00FD6E  20                 	db	32
  3949  00FD6F  3D                 	db	61	;'='
  3950  00FD70  20                 	db	32
  3951  00FD71  25                 	db	37
  3952  00FD72  64                 	db	100	;'d'
  3953  00FD73  00                 	db	0
  3954  00FD74                     STR_22:
  3955  00FD74  4C                 	db	76	;'L'
  3956  00FD75  45                 	db	69	;'E'
  3957  00FD76  44                 	db	68	;'D'
  3958  00FD77  30                 	db	48	;'0'
  3959  00FD78  20                 	db	32
  3960  00FD79  54                 	db	84	;'T'
  3961  00FD7A  6F                 	db	111	;'o'
  3962  00FD7B  67                 	db	103	;'g'
  3963  00FD7C  67                 	db	103	;'g'
  3964  00FD7D  6C                 	db	108	;'l'
  3965  00FD7E  65                 	db	101	;'e'
  3966  00FD7F  64                 	db	100	;'d'
  3967  00FD80  00                 	db	0
  3968  00FD81                     STR_31:
  3969  00FD81  4C                 	db	76	;'L'
  3970  00FD82  45                 	db	69	;'E'
  3971  00FD83  44                 	db	68	;'D'
  3972  00FD84  31                 	db	49	;'1'
  3973  00FD85  20                 	db	32
  3974  00FD86  54                 	db	84	;'T'
  3975  00FD87  6F                 	db	111	;'o'
  3976  00FD88  67                 	db	103	;'g'
  3977  00FD89  67                 	db	103	;'g'
  3978  00FD8A  6C                 	db	108	;'l'
  3979  00FD8B  65                 	db	101	;'e'
  3980  00FD8C  64                 	db	100	;'d'
  3981  00FD8D  00                 	db	0
  3982  00FD8E                     STR_175:
  3983  00FD8E  4C                 	db	76	;'L'
  3984  00FD8F  43                 	db	67	;'C'
  3985  00FD90  44                 	db	68	;'D'
  3986  00FD91  20                 	db	32
  3987  00FD92  43                 	db	67	;'C'
  3988  00FD93  6F                 	db	111	;'o'
  3989  00FD94  6E                 	db	110	;'n'
  3990  00FD95  74                 	db	116	;'t'
  3991  00FD96  72                 	db	114	;'r'
  3992  00FD97  61                 	db	97	;'a'
  3993  00FD98  73                 	db	115	;'s'
  3994  00FD99  74                 	db	116	;'t'
  3995  00FD9A  00                 	db	0
  3996  00FD9B                     STR_106:
  3997  00FD9B  42                 	db	66	;'B'
  3998  00FD9C  65                 	db	101	;'e'
  3999  00FD9D  64                 	db	100	;'d'
  4000  00FD9E  72                 	db	114	;'r'
  4001  00FD9F  6F                 	db	111	;'o'
  4002  00FDA0  6F                 	db	111	;'o'
  4003  00FDA1  6D                 	db	109	;'m'
  4004  00FDA2  20                 	db	32
  4005  00FDA3  4D                 	db	77	;'M'
  4006  00FDA4  65                 	db	101	;'e'
  4007  00FDA5  6E                 	db	110	;'n'
  4008  00FDA6  75                 	db	117	;'u'
  4009  00FDA7  00                 	db	0
  4010  00FDA8                     STR_10:
  4011  00FDA8  53                 	db	83	;'S'
  4012  00FDA9  74                 	db	116	;'t'
  4013  00FDAA  61                 	db	97	;'a'
  4014  00FDAB  72                 	db	114	;'r'
  4015  00FDAC  74                 	db	116	;'t'
  4016  00FDAD  69                 	db	105	;'i'
  4017  00FDAE  6E                 	db	110	;'n'
  4018  00FDAF  67                 	db	103	;'g'
  4019  00FDB0  2E                 	db	46
  4020  00FDB1  2E                 	db	46
  4021  00FDB2  2E                 	db	46
  4022  00FDB3  2E                 	db	46
  4023  00FDB4  00                 	db	0
  4024  00FDB5                     STR_253:
  4025  00FDB5  44                 	db	68	;'D'
  4026  00FDB6  65                 	db	101	;'e'
  4027  00FDB7  76                 	db	118	;'v'
  4028  00FDB8  69                 	db	105	;'i'
  4029  00FDB9  63                 	db	99	;'c'
  4030  00FDBA  65                 	db	101	;'e'
  4031  00FDBB  73                 	db	115	;'s'
  4032  00FDBC  3A                 	db	58	;':'
  4033  00FDBD  0D                 	db	13
  4034  00FDBE  0A                 	db	10
  4035  00FDBF  0A                 	db	10
  4036  00FDC0  00                 	db	0
  4037  00FDC1                     STR_192:
  4038  00FDC1  43                 	db	67	;'C'
  4039  00FDC2  68                 	db	104	;'h'
  4040  00FDC3  61                 	db	97	;'a'
  4041  00FDC4  6E                 	db	110	;'n'
  4042  00FDC5  6E                 	db	110	;'n'
  4043  00FDC6  65                 	db	101	;'e'
  4044  00FDC7  6C                 	db	108	;'l'
  4045  00FDC8  73                 	db	115	;'s'
  4046  00FDC9  3A                 	db	58	;':'
  4047  00FDCA  0D                 	db	13
  4048  00FDCB  0A                 	db	10
  4049  00FDCC  00                 	db	0
  4050  00FDCD                     STR_256:
  4051  00FDCD  4A                 	db	74	;'J'
  4052  00FDCE  6F                 	db	111	;'o'
  4053  00FDCF  65                 	db	101	;'e'
  4054  00FDD0  73                 	db	115	;'s'
  4055  00FDD1  20                 	db	32
  4056  00FDD2  72                 	db	114	;'r'
  4057  00FDD3  6F                 	db	111	;'o'
  4058  00FDD4  6F                 	db	111	;'o'
  4059  00FDD5  6D                 	db	109	;'m'
  4060  00FDD6  0D                 	db	13
  4061  00FDD7  0A                 	db	10
  4062  00FDD8  00                 	db	0
  4063  00FDD9                     STR_270:
  4064  00FDD9  4C                 	db	76	;'L'
  4065  00FDDA  69                 	db	105	;'i'
  4066  00FDDB  76                 	db	118	;'v'
  4067  00FDDC  69                 	db	105	;'i'
  4068  00FDDD  6E                 	db	110	;'n'
  4069  00FDDE  67                 	db	103	;'g'
  4070  00FDDF  72                 	db	114	;'r'
  4071  00FDE0  6F                 	db	111	;'o'
  4072  00FDE1  6F                 	db	111	;'o'
  4073  00FDE2  6D                 	db	109	;'m'
  4074  00FDE3  3F                 	db	63	;'?'
  4075  00FDE4  00                 	db	0
  4076  00FDE5                     STR_9:
  4077  00FDE5  53                 	db	83	;'S'
  4078  00FDE6  74                 	db	116	;'t'
  4079  00FDE7  61                 	db	97	;'a'
  4080  00FDE8  72                 	db	114	;'r'
  4081  00FDE9  74                 	db	116	;'t'
  4082  00FDEA  69                 	db	105	;'i'
  4083  00FDEB  6E                 	db	110	;'n'
  4084  00FDEC  67                 	db	103	;'g'
  4085  00FDED  2E                 	db	46
  4086  00FDEE  2E                 	db	46
  4087  00FDEF  2E                 	db	46
  4088  00FDF0  00                 	db	0
  4089  00FDF1                     STR_42:
  4090  00FDF1  44                 	db	68	;'D'
  4091  00FDF2  65                 	db	101	;'e'
  4092  00FDF3  76                 	db	118	;'v'
  4093  00FDF4  69                 	db	105	;'i'
  4094  00FDF5  63                 	db	99	;'c'
  4095  00FDF6  65                 	db	101	;'e'
  4096  00FDF7  73                 	db	115	;'s'
  4097  00FDF8  3A                 	db	58	;':'
  4098  00FDF9  0D                 	db	13
  4099  00FDFA  0A                 	db	10
  4100  00FDFB  00                 	db	0
  4101  00FDFC                     STR_222:
  4102  00FDFC  41                 	db	65	;'A'
  4103  00FDFD  63                 	db	99	;'c'
  4104  00FDFE  74                 	db	116	;'t'
  4105  00FDFF  69                 	db	105	;'i'
  4106  00FE00  6F                 	db	111	;'o'
  4107  00FE01  6E                 	db	110	;'n'
  4108  00FE02  73                 	db	115	;'s'
  4109  00FE03  3A                 	db	58	;':'
  4110  00FE04  0D                 	db	13
  4111  00FE05  0A                 	db	10
  4112  00FE06  00                 	db	0
  4113  00FE07                     STR_258:
  4114  00FE07  43                 	db	67	;'C'
  4115  00FE08  6F                 	db	111	;'o'
  4116  00FE09  6E                 	db	110	;'n'
  4117  00FE0A  74                 	db	116	;'t'
  4118  00FE0B  72                 	db	114	;'r'
  4119  00FE0C  61                 	db	97	;'a'
  4120  00FE0D  73                 	db	115	;'s'
  4121  00FE0E  74                 	db	116	;'t'
  4122  00FE0F  0D                 	db	13
  4123  00FE10  0A                 	db	10
  4124  00FE11  00                 	db	0
  4125  00FE12                     STR_271:
  4126  00FE12  4A                 	db	74	;'J'
  4127  00FE13  6F                 	db	111	;'o'
  4128  00FE14  65                 	db	101	;'e'
  4129  00FE15  73                 	db	115	;'s'
  4130  00FE16  20                 	db	32
  4131  00FE17  52                 	db	82	;'R'
  4132  00FE18  6F                 	db	111	;'o'
  4133  00FE19  6F                 	db	111	;'o'
  4134  00FE1A  6D                 	db	109	;'m'
  4135  00FE1B  3F                 	db	63	;'?'
  4136  00FE1C  00                 	db	0
  4137  00FE1D                     STR_51:
  4138  00FE1D  6C                 	db	108	;'l'
  4139  00FE1E  69                 	db	105	;'i'
  4140  00FE1F  76                 	db	118	;'v'
  4141  00FE20  69                 	db	105	;'i'
  4142  00FE21  6E                 	db	110	;'n'
  4143  00FE22  67                 	db	103	;'g'
  4144  00FE23  72                 	db	114	;'r'
  4145  00FE24  6F                 	db	111	;'o'
  4146  00FE25  6F                 	db	111	;'o'
  4147  00FE26  6D                 	db	109	;'m'
  4148  00FE27  00                 	db	0
  4149  00FE28                     STR_8:
  4150  00FE28  53                 	db	83	;'S'
  4151  00FE29  74                 	db	116	;'t'
  4152  00FE2A  61                 	db	97	;'a'
  4153  00FE2B  72                 	db	114	;'r'
  4154  00FE2C  74                 	db	116	;'t'
  4155  00FE2D  69                 	db	105	;'i'
  4156  00FE2E  6E                 	db	110	;'n'
  4157  00FE2F  67                 	db	103	;'g'
  4158  00FE30  2E                 	db	46
  4159  00FE31  2E                 	db	46
  4160  00FE32  00                 	db	0
  4161  00FE33                     STR_102:
  4162  00FE33  73                 	db	115	;'s'
  4163  00FE34  68                 	db	104	;'h'
  4164  00FE35  61                 	db	97	;'a'
  4165  00FE36  6B                 	db	107	;'k'
  4166  00FE37  65                 	db	101	;'e'
  4167  00FE38  72                 	db	114	;'r'
  4168  00FE39  0D                 	db	13
  4169  00FE3A  0A                 	db	10
  4170  00FE3B  0A                 	db	10
  4171  00FE3C  00                 	db	0
  4172  00FE3D                     STR_254:
  4173  00FE3D  42                 	db	66	;'B'
  4174  00FE3E  65                 	db	101	;'e'
  4175  00FE3F  64                 	db	100	;'d'
  4176  00FE40  72                 	db	114	;'r'
  4177  00FE41  6F                 	db	111	;'o'
  4178  00FE42  6F                 	db	111	;'o'
  4179  00FE43  6D                 	db	109	;'m'
  4180  00FE44  0D                 	db	13
  4181  00FE45  0A                 	db	10
  4182  00FE46  00                 	db	0
  4183  00FE47                     STR_223:
  4184  00FE47  42                 	db	66	;'B'
  4185  00FE48  61                 	db	97	;'a'
  4186  00FE49  74                 	db	116	;'t'
  4187  00FE4A  74                 	db	116	;'t'
  4188  00FE4B  65                 	db	101	;'e'
  4189  00FE4C  72                 	db	114	;'r'
  4190  00FE4D  79                 	db	121	;'y'
  4191  00FE4E  0D                 	db	13
  4192  00FE4F  0A                 	db	10
  4193  00FE50  00                 	db	0
  4194  00FE51                     STR_160:
  4195  00FE51  52                 	db	82	;'R'
  4196  00FE52  65                 	db	101	;'e'
  4197  00FE53  64                 	db	100	;'d'
  4198  00FE54  20                 	db	32
  4199  00FE55  4C                 	db	76	;'L'
  4200  00FE56  45                 	db	69	;'E'
  4201  00FE57  44                 	db	68	;'D'
  4202  00FE58  3D                 	db	61	;'='
  4203  00FE59  23                 	db	35
  4204  00FE5A  00                 	db	0
  4205  00FE5B                     STR_177:
  4206  00FE5B  43                 	db	67	;'C'
  4207  00FE5C  6F                 	db	111	;'o'
  4208  00FE5D  6E                 	db	110	;'n'
  4209  00FE5E  74                 	db	116	;'t'
  4210  00FE5F  72                 	db	114	;'r'
  4211  00FE60  61                 	db	97	;'a'
  4212  00FE61  73                 	db	115	;'s'
  4213  00FE62  74                 	db	116	;'t'
  4214  00FE63  23                 	db	35
  4215  00FE64  00                 	db	0
  4216  00FE65                     STR_159:
  4217  00FE65  43                 	db	67	;'C'
  4218  00FE66  6F                 	db	111	;'o'
  4219  00FE67  6D                 	db	109	;'m'
  4220  00FE68  6D                 	db	109	;'m'
  4221  00FE69  61                 	db	97	;'a'
  4222  00FE6A  6E                 	db	110	;'n'
  4223  00FE6B  64                 	db	100	;'d'
  4224  00FE6C  73                 	db	115	;'s'
  4225  00FE6D  3A                 	db	58	;':'
  4226  00FE6E  00                 	db	0
  4227  00FE6F                     STR_273:
  4228  00FE6F  43                 	db	67	;'C'
  4229  00FE70  6F                 	db	111	;'o'
  4230  00FE71  6E                 	db	110	;'n'
  4231  00FE72  74                 	db	116	;'t'
  4232  00FE73  72                 	db	114	;'r'
  4233  00FE74  61                 	db	97	;'a'
  4234  00FE75  73                 	db	115	;'s'
  4235  00FE76  74                 	db	116	;'t'
  4236  00FE77  3F                 	db	63	;'?'
  4237  00FE78  00                 	db	0
  4238  00FE79                     STR_113:
  4239  00FE79  63                 	db	99	;'c'
  4240  00FE7A  68                 	db	104	;'h'
  4241  00FE7B  72                 	db	114	;'r'
  4242  00FE7C  69                 	db	105	;'i'
  4243  00FE7D  73                 	db	115	;'s'
  4244  00FE7E  74                 	db	116	;'t'
  4245  00FE7F  6D                 	db	109	;'m'
  4246  00FE80  61                 	db	97	;'a'
  4247  00FE81  73                 	db	115	;'s'
  4248  00FE82  00                 	db	0
  4249  00FE83                     STR_135:
  4250  00FE83  58                 	db	88	;'X'
  4251  00FE84  4D                 	db	77	;'M'
  4252  00FE85  41                 	db	65	;'A'
  4253  00FE86  53                 	db	83	;'S'
  4254  00FE87  20                 	db	32
  4255  00FE88  4D                 	db	77	;'M'
  4256  00FE89  65                 	db	101	;'e'
  4257  00FE8A  6E                 	db	110	;'n'
  4258  00FE8B  75                 	db	117	;'u'
  4259  00FE8C  00                 	db	0
  4260  00FE8D                     STR_264:
  4261  00FE8D  48                 	db	72	;'H'
  4262  00FE8E  65                 	db	101	;'e'
  4263  00FE8F  6C                 	db	108	;'l'
  4264  00FE90  70                 	db	112	;'p'
  4265  00FE91  20                 	db	32
  4266  00FE92  4D                 	db	77	;'M'
  4267  00FE93  65                 	db	101	;'e'
  4268  00FE94  6E                 	db	110	;'n'
  4269  00FE95  75                 	db	117	;'u'
  4270  00FE96  00                 	db	0
  4271  00FE97                     STR_15:
  4272  00FE97  45                 	db	69	;'E'
  4273  00FE98  6E                 	db	110	;'n'
  4274  00FE99  74                 	db	116	;'t'
  4275  00FE9A  65                 	db	101	;'e'
  4276  00FE9B  72                 	db	114	;'r'
  4277  00FE9C  20                 	db	32
  4278  00FE9D  27                 	db	39
  4279  00FE9E  3F                 	db	63	;'?'
  4280  00FE9F  27                 	db	39
  4281  00FEA0  00                 	db	0
  4282  00FEA1                     STR_7:
  4283  00FEA1  53                 	db	83	;'S'
  4284  00FEA2  74                 	db	116	;'t'
  4285  00FEA3  61                 	db	97	;'a'
  4286  00FEA4  72                 	db	114	;'r'
  4287  00FEA5  74                 	db	116	;'t'
  4288  00FEA6  69                 	db	105	;'i'
  4289  00FEA7  6E                 	db	110	;'n'
  4290  00FEA8  67                 	db	103	;'g'
  4291  00FEA9  2E                 	db	46
  4292  00FEAA  00                 	db	0
  4293  00FEAB                     STR_246:
  4294  00FEAB  4C                 	db	76	;'L'
  4295  00FEAC  69                 	db	105	;'i'
  4296  00FEAD  67                 	db	103	;'g'
  4297  00FEAE  68                 	db	104	;'h'
  4298  00FEAF  74                 	db	116	;'t'
  4299  00FEB0  0D                 	db	13
  4300  00FEB1  0A                 	db	10
  4301  00FEB2  0A                 	db	10
  4302  00FEB3  00                 	db	0
  4303  00FEB4                     STR_48:
  4304  00FEB4  44                 	db	68	;'D'
  4305  00FEB5  65                 	db	101	;'e'
  4306  00FEB6  76                 	db	118	;'v'
  4307  00FEB7  69                 	db	105	;'i'
  4308  00FEB8  63                 	db	99	;'c'
  4309  00FEB9  65                 	db	101	;'e'
  4310  00FEBA  73                 	db	115	;'s'
  4311  00FEBB  3A                 	db	58	;':'
  4312  00FEBC  00                 	db	0
  4313  00FEBD                     STR_269:
  4314  00FEBD  42                 	db	66	;'B'
  4315  00FEBE  65                 	db	101	;'e'
  4316  00FEBF  64                 	db	100	;'d'
  4317  00FEC0  72                 	db	114	;'r'
  4318  00FEC1  6F                 	db	111	;'o'
  4319  00FEC2  6F                 	db	111	;'o'
  4320  00FEC3  6D                 	db	109	;'m'
  4321  00FEC4  3F                 	db	63	;'?'
  4322  00FEC5  00                 	db	0
  4323  00FEC6                     STR_28:
  4324  00FEC6  4C                 	db	76	;'L'
  4325  00FEC7  45                 	db	69	;'E'
  4326  00FEC8  44                 	db	68	;'D'
  4327  00FEC9  30                 	db	48	;'0'
  4328  00FECA  20                 	db	32
  4329  00FECB  4F                 	db	79	;'O'
  4330  00FECC  66                 	db	102	;'f'
  4331  00FECD  66                 	db	102	;'f'
  4332  00FECE  00                 	db	0
  4333  00FECF                     STR_37:
  4334  00FECF  4C                 	db	76	;'L'
  4335  00FED0  45                 	db	69	;'E'
  4336  00FED1  44                 	db	68	;'D'
  4337  00FED2  31                 	db	49	;'1'
  4338  00FED3  20                 	db	32
  4339  00FED4  4F                 	db	79	;'O'
  4340  00FED5  66                 	db	102	;'f'
  4341  00FED6  66                 	db	102	;'f'
  4342  00FED7  00                 	db	0
  4343  00FED8                     STR_27:
  4344  00FED8  6C                 	db	108	;'l'
  4345  00FED9  65                 	db	101	;'e'
  4346  00FEDA  64                 	db	100	;'d'
  4347  00FEDB  30                 	db	48	;'0'
  4348  00FEDC  3D                 	db	61	;'='
  4349  00FEDD  6F                 	db	111	;'o'
  4350  00FEDE  66                 	db	102	;'f'
  4351  00FEDF  66                 	db	102	;'f'
  4352  00FEE0  00                 	db	0
  4353  00FEE1                     STR_36:
  4354  00FEE1  6C                 	db	108	;'l'
  4355  00FEE2  65                 	db	101	;'e'
  4356  00FEE3  64                 	db	100	;'d'
  4357  00FEE4  31                 	db	49	;'1'
  4358  00FEE5  3D                 	db	61	;'='
  4359  00FEE6  6F                 	db	111	;'o'
  4360  00FEE7  66                 	db	102	;'f'
  4361  00FEE8  66                 	db	102	;'f'
  4362  00FEE9  00                 	db	0
  4363  00FEEA                     STR_161:
  4364  00FEEA  63                 	db	99	;'c'
  4365  00FEEB  6F                 	db	111	;'o'
  4366  00FEEC  6E                 	db	110	;'n'
  4367  00FEED  74                 	db	116	;'t'
  4368  00FEEE  72                 	db	114	;'r'
  4369  00FEEF  61                 	db	97	;'a'
  4370  00FEF0  73                 	db	115	;'s'
  4371  00FEF1  74                 	db	116	;'t'
  4372  00FEF2  00                 	db	0
  4373  00FEF3                     STR_196:
  4374  00FEF3  41                 	db	65	;'A'
  4375  00FEF4  44                 	db	68	;'D'
  4376  00FEF5  43                 	db	67	;'C'
  4377  00FEF6  20                 	db	32
  4378  00FEF7  4D                 	db	77	;'M'
  4379  00FEF8  65                 	db	101	;'e'
  4380  00FEF9  6E                 	db	110	;'n'
  4381  00FEFA  75                 	db	117	;'u'
  4382  00FEFB  00                 	db	0
  4383  00FEFC                     STR_229:
  4384  00FEFC  52                 	db	82	;'R'
  4385  00FEFD  54                 	db	84	;'T'
  4386  00FEFE  43                 	db	67	;'C'
  4387  00FEFF  20                 	db	32
  4388  00FF00  4D                 	db	77	;'M'
  4389  00FF01  65                 	db	101	;'e'
  4390  00FF02  6E                 	db	110	;'n'
  4391  00FF03  75                 	db	117	;'u'
  4392  00FF04  00                 	db	0
  4393  00FF05                     STR_47:
  4394  00FF05  4C                 	db	76	;'L'
  4395  00FF06  45                 	db	69	;'E'
  4396  00FF07  44                 	db	68	;'D'
  4397  00FF08  20                 	db	32
  4398  00FF09  4D                 	db	77	;'M'
  4399  00FF0A  65                 	db	101	;'e'
  4400  00FF0B  6E                 	db	110	;'n'
  4401  00FF0C  75                 	db	117	;'u'
  4402  00FF0D  00                 	db	0
  4403  00FF0E                     STR_6:
  4404  00FF0E  53                 	db	83	;'S'
  4405  00FF0F  74                 	db	116	;'t'
  4406  00FF10  61                 	db	97	;'a'
  4407  00FF11  72                 	db	114	;'r'
  4408  00FF12  74                 	db	116	;'t'
  4409  00FF13  69                 	db	105	;'i'
  4410  00FF14  6E                 	db	110	;'n'
  4411  00FF15  67                 	db	103	;'g'
  4412  00FF16  00                 	db	0
  4413  00FF17                     STR_44:
  4414  00FF17  4C                 	db	76	;'L'
  4415  00FF18  45                 	db	69	;'E'
  4416  00FF19  44                 	db	68	;'D'
  4417  00FF1A  31                 	db	49	;'1'
  4418  00FF1B  0D                 	db	13
  4419  00FF1C  0A                 	db	10
  4420  00FF1D  0A                 	db	10
  4421  00FF1E  00                 	db	0
  4422  00FF1F                     STR_67:
  4423  00FF1F  6C                 	db	108	;'l'
  4424  00FF20  69                 	db	105	;'i'
  4425  00FF21  67                 	db	103	;'g'
  4426  00FF22  68                 	db	104	;'h'
  4427  00FF23  74                 	db	116	;'t'
  4428  00FF24  0D                 	db	13
  4429  00FF25  0A                 	db	10
  4430  00FF26  00                 	db	0
  4431  00FF27                     STR_76:
  4432  00FF27  62                 	db	98	;'b'
  4433  00FF28  65                 	db	101	;'e'
  4434  00FF29  64                 	db	100	;'d'
  4435  00FF2A  72                 	db	114	;'r'
  4436  00FF2B  6F                 	db	111	;'o'
  4437  00FF2C  6F                 	db	111	;'o'
  4438  00FF2D  6D                 	db	109	;'m'
  4439  00FF2E  00                 	db	0
  4440  00FF2F                     STR_25:
  4441  00FF2F  4C                 	db	76	;'L'
  4442  00FF30  45                 	db	69	;'E'
  4443  00FF31  44                 	db	68	;'D'
  4444  00FF32  30                 	db	48	;'0'
  4445  00FF33  20                 	db	32
  4446  00FF34  4F                 	db	79	;'O'
  4447  00FF35  6E                 	db	110	;'n'
  4448  00FF36  00                 	db	0
  4449  00FF37                     STR_34:
  4450  00FF37  4C                 	db	76	;'L'
  4451  00FF38  45                 	db	69	;'E'
  4452  00FF39  44                 	db	68	;'D'
  4453  00FF3A  31                 	db	49	;'1'
  4454  00FF3B  20                 	db	32
  4455  00FF3C  4F                 	db	79	;'O'
  4456  00FF3D  6E                 	db	110	;'n'
  4457  00FF3E  00                 	db	0
  4458  00FF3F                     STR_24:
  4459  00FF3F  6C                 	db	108	;'l'
  4460  00FF40  65                 	db	101	;'e'
  4461  00FF41  64                 	db	100	;'d'
  4462  00FF42  30                 	db	48	;'0'
  4463  00FF43  3D                 	db	61	;'='
  4464  00FF44  6F                 	db	111	;'o'
  4465  00FF45  6E                 	db	110	;'n'
  4466  00FF46  00                 	db	0
  4467  00FF47                     STR_33:
  4468  00FF47  6C                 	db	108	;'l'
  4469  00FF48  65                 	db	101	;'e'
  4470  00FF49  64                 	db	100	;'d'
  4471  00FF4A  31                 	db	49	;'1'
  4472  00FF4B  3D                 	db	61	;'='
  4473  00FF4C  6F                 	db	111	;'o'
  4474  00FF4D  6E                 	db	110	;'n'
  4475  00FF4E  00                 	db	0
  4476  00FF4F                     STR_231:
  4477  00FF4F  42                 	db	66	;'B'
  4478  00FF50  61                 	db	97	;'a'
  4479  00FF51  74                 	db	116	;'t'
  4480  00FF52  74                 	db	116	;'t'
  4481  00FF53  65                 	db	101	;'e'
  4482  00FF54  72                 	db	114	;'r'
  4483  00FF55  79                 	db	121	;'y'
  4484  00FF56  00                 	db	0
  4485  00FF57                     STR_201:
  4486  00FF57  62                 	db	98	;'b'
  4487  00FF58  61                 	db	97	;'a'
  4488  00FF59  74                 	db	116	;'t'
  4489  00FF5A  74                 	db	116	;'t'
  4490  00FF5B  65                 	db	101	;'e'
  4491  00FF5C  72                 	db	114	;'r'
  4492  00FF5D  79                 	db	121	;'y'
  4493  00FF5E  00                 	db	0
  4494  00FF5F                     STR_260:
  4495  00FF5F  52                 	db	82	;'R'
  4496  00FF60  54                 	db	84	;'T'
  4497  00FF61  43                 	db	67	;'C'
  4498  00FF62  0D                 	db	13
  4499  00FF63  0A                 	db	10
  4500  00FF64  0A                 	db	10
  4501  00FF65  00                 	db	0
  4502  00FF66                     STR_68:
  4503  00FF66  66                 	db	102	;'f'
  4504  00FF67  61                 	db	97	;'a'
  4505  00FF68  6E                 	db	110	;'n'
  4506  00FF69  0D                 	db	13
  4507  00FF6A  0A                 	db	10
  4508  00FF6B  0A                 	db	10
  4509  00FF6C  00                 	db	0
  4510  00FF6D                     STR_225:
  4511  00FF6D  53                 	db	83	;'S'
  4512  00FF6E  65                 	db	101	;'e'
  4513  00FF6F  74                 	db	116	;'t'
  4514  00FF70  0D                 	db	13
  4515  00FF71  0A                 	db	10
  4516  00FF72  0A                 	db	10
  4517  00FF73  00                 	db	0
  4518  00FF74                     STR_43:
  4519  00FF74  4C                 	db	76	;'L'
  4520  00FF75  45                 	db	69	;'E'
  4521  00FF76  44                 	db	68	;'D'
  4522  00FF77  30                 	db	48	;'0'
  4523  00FF78  0D                 	db	13
  4524  00FF79  0A                 	db	10
  4525  00FF7A  00                 	db	0
  4526  00FF7B                     STR_224:
  4527  00FF7B  52                 	db	82	;'R'
  4528  00FF7C  65                 	db	101	;'e'
  4529  00FF7D  61                 	db	97	;'a'
  4530  00FF7E  64                 	db	100	;'d'
  4531  00FF7F  0D                 	db	13
  4532  00FF80  0A                 	db	10
  4533  00FF81  00                 	db	0
  4534  00FF82                     STR_141:
  4535  00FF82  72                 	db	114	;'r'
  4536  00FF83  65                 	db	101	;'e'
  4537  00FF84  64                 	db	100	;'d'
  4538  00FF85  6C                 	db	108	;'l'
  4539  00FF86  65                 	db	101	;'e'
  4540  00FF87  64                 	db	100	;'d'
  4541  00FF88  00                 	db	0
  4542  00FF89                     STR_110:
  4543  00FF89  53                 	db	83	;'S'
  4544  00FF8A  68                 	db	104	;'h'
  4545  00FF8B  61                 	db	97	;'a'
  4546  00FF8C  6B                 	db	107	;'k'
  4547  00FF8D  65                 	db	101	;'e'
  4548  00FF8E  72                 	db	114	;'r'
  4549  00FF8F  00                 	db	0
  4550  00FF90                     STR_259:
  4551  00FF90  41                 	db	65	;'A'
  4552  00FF91  44                 	db	68	;'D'
  4553  00FF92  43                 	db	67	;'C'
  4554  00FF93  0D                 	db	13
  4555  00FF94  0A                 	db	10
  4556  00FF95  00                 	db	0
  4557  00FF96                     STR_101:
  4558  00FF96  66                 	db	102	;'f'
  4559  00FF97  61                 	db	97	;'a'
  4560  00FF98  6E                 	db	110	;'n'
  4561  00FF99  0D                 	db	13
  4562  00FF9A  0A                 	db	10
  4563  00FF9B  00                 	db	0
  4564  00FF9C                     STR_112:
  4565  00FF9C  77                 	db	119	;'w'
  4566  00FF9D  68                 	db	104	;'h'
  4567  00FF9E  69                 	db	105	;'i'
  4568  00FF9F  74                 	db	116	;'t'
  4569  00FFA0  65                 	db	101	;'e'
  4570  00FFA1  00                 	db	0
  4571  00FFA2                     STR_111:
  4572  00FFA2  63                 	db	99	;'c'
  4573  00FFA3  6F                 	db	111	;'o'
  4574  00FFA4  6C                 	db	108	;'l'
  4575  00FFA5  6F                 	db	111	;'o'
  4576  00FFA6  72                 	db	114	;'r'
  4577  00FFA7  00                 	db	0
  4578  00FFA8                     STR_74:
  4579  00FFA8  4C                 	db	76	;'L'
  4580  00FFA9  69                 	db	105	;'i'
  4581  00FFAA  67                 	db	103	;'g'
  4582  00FFAB  68                 	db	104	;'h'
  4583  00FFAC  74                 	db	116	;'t'
  4584  00FFAD  00                 	db	0
  4585  00FFAE                     STR_78:
  4586  00FFAE  6C                 	db	108	;'l'
  4587  00FFAF  69                 	db	105	;'i'
  4588  00FFB0  67                 	db	103	;'g'
  4589  00FFB1  68                 	db	104	;'h'
  4590  00FFB2  74                 	db	116	;'t'
  4591  00FFB3  00                 	db	0
  4592  00FFB4                     STR_193:
  4593  00FFB4  30                 	db	48	;'0'
  4594  00FFB5  0D                 	db	13
  4595  00FFB6  0A                 	db	10
  4596  00FFB7  0A                 	db	10
  4597  00FFB8  00                 	db	0
  4598  00FFB9                     STR_49:
  4599  00FFB9  4C                 	db	76	;'L'
  4600  00FFBA  45                 	db	69	;'E'
  4601  00FFBB  44                 	db	68	;'D'
  4602  00FFBC  30                 	db	48	;'0'
  4603  00FFBD  00                 	db	0
  4604  00FFBE                     STR_21:
  4605  00FFBE  6C                 	db	108	;'l'
  4606  00FFBF  65                 	db	101	;'e'
  4607  00FFC0  64                 	db	100	;'d'
  4608  00FFC1  30                 	db	48	;'0'
  4609  00FFC2  00                 	db	0
  4610  00FFC3                     STR_50:
  4611  00FFC3  4C                 	db	76	;'L'
  4612  00FFC4  45                 	db	69	;'E'
  4613  00FFC5  44                 	db	68	;'D'
  4614  00FFC6  31                 	db	49	;'1'
  4615  00FFC7  00                 	db	0
  4616  00FFC8                     STR_30:
  4617  00FFC8  6C                 	db	108	;'l'
  4618  00FFC9  65                 	db	101	;'e'
  4619  00FFCA  64                 	db	100	;'d'
  4620  00FFCB  31                 	db	49	;'1'
  4621  00FFCC  00                 	db	0
  4622  00FFCD                     STR_274:
  4623  00FFCD  41                 	db	65	;'A'
  4624  00FFCE  44                 	db	68	;'D'
  4625  00FFCF  43                 	db	67	;'C'
  4626  00FFD0  3F                 	db	63	;'?'
  4627  00FFD1  00                 	db	0
  4628  00FFD2                     STR_275:
  4629  00FFD2  52                 	db	82	;'R'
  4630  00FFD3  54                 	db	84	;'T'
  4631  00FFD4  43                 	db	67	;'C'
  4632  00FFD5  3F                 	db	63	;'?'
  4633  00FFD6  00                 	db	0
  4634  00FFD7                     STR_232:
  4635  00FFD7  52                 	db	82	;'R'
  4636  00FFD8  65                 	db	101	;'e'
  4637  00FFD9  61                 	db	97	;'a'
  4638  00FFDA  64                 	db	100	;'d'
  4639  00FFDB  00                 	db	0
  4640  00FFDC                     STR_204:
  4641  00FFDC  72                 	db	114	;'r'
  4642  00FFDD  65                 	db	101	;'e'
  4643  00FFDE  61                 	db	97	;'a'
  4644  00FFDF  64                 	db	100	;'d'
  4645  00FFE0  00                 	db	0
  4646  00FFE1                     STR_178:
  4647  00FFE1  61                 	db	97	;'a'
  4648  00FFE2  64                 	db	100	;'d'
  4649  00FFE3  63                 	db	99	;'c'
  4650  00FFE4  00                 	db	0
  4651  00FFE5                     STR_199:
  4652  00FFE5  72                 	db	114	;'r'
  4653  00FFE6  74                 	db	116	;'t'
  4654  00FFE7  63                 	db	99	;'c'
  4655  00FFE8  00                 	db	0
  4656  00FFE9                     STR_234:
  4657  00FFE9  6A                 	db	106	;'j'
  4658  00FFEA  6F                 	db	111	;'o'
  4659  00FFEB  65                 	db	101	;'e'
  4660  00FFEC  00                 	db	0
  4661  00FFED                     STR_75:
  4662  00FFED  46                 	db	70	;'F'
  4663  00FFEE  61                 	db	97	;'a'
  4664  00FFEF  6E                 	db	110	;'n'
  4665  00FFF0  00                 	db	0
  4666  00FFF1                     STR_79:
  4667  00FFF1  66                 	db	102	;'f'
  4668  00FFF2  61                 	db	97	;'a'
  4669  00FFF3  6E                 	db	110	;'n'
  4670  00FFF4  00                 	db	0
  4671  00FFF5                     STR_233:
  4672  00FFF5  53                 	db	83	;'S'
  4673  00FFF6  65                 	db	101	;'e'
  4674  00FFF7  74                 	db	116	;'t'
  4675  00FFF8  00                 	db	0
  4676  00FFF9                     STR_211:
  4677  00FFF9  73                 	db	115	;'s'
  4678  00FFFA  65                 	db	101	;'e'
  4679  00FFFB  74                 	db	116	;'t'
  4680  00FFFC  00                 	db	0
  4681  00FFFD                     STR_1:
  4682  00FFFD  0D                 	db	13
  4683  00FFFE  00                 	db	0
  4684  00FFFF                     __end_of__stringdata:
  4685                           	opt stack 0
  4686                           
  4687                           ; #config settings
  4688  00FFFF  00                 	db	0	; dummy byte at the end
  4689  0000                     
  4690                           	psect	cinit
  4691  016978                     __pcinit:
  4692                           	opt stack 0
  4693  016978                     start_initialization:
  4694                           	opt stack 0
  4695  016978                     __initialization:
  4696                           	opt stack 0
  4697                           
  4698                           ; Clear objects allocated to BANK4 (100 bytes)
  4699  016978  EE04  F000         	lfsr	0,__pbssBANK4
  4700  01697C  0E64               	movlw	100
  4701  01697E                     clear_0:
  4702  01697E  6AEE               	clrf	postinc0,c
  4703  016980  06E8               	decf	wreg,f,c
  4704  016982  E1FD               	bnz	clear_0
  4705                           
  4706                           ; Clear objects allocated to BANK3 (200 bytes)
  4707  016984  EE03  F000         	lfsr	0,__pbssBANK3
  4708  016988  0EC8               	movlw	200
  4709  01698A                     clear_1:
  4710  01698A  6AEE               	clrf	postinc0,c
  4711  01698C  06E8               	decf	wreg,f,c
  4712  01698E  E1FD               	bnz	clear_1
  4713                           
  4714                           ; Clear objects allocated to BANK1 (110 bytes)
  4715  016990  EE01  F000         	lfsr	0,__pbssBANK1
  4716  016994  0E6E               	movlw	110
  4717  016996                     clear_2:
  4718  016996  6AEE               	clrf	postinc0,c
  4719  016998  06E8               	decf	wreg,f,c
  4720  01699A  E1FD               	bnz	clear_2
  4721                           
  4722                           ; Clear objects allocated to BANK0 (33 bytes)
  4723  01699C  EE00  F0D8         	lfsr	0,__pbssBANK0
  4724  0169A0  0E21               	movlw	33
  4725  0169A2                     clear_3:
  4726  0169A2  6AEE               	clrf	postinc0,c
  4727  0169A4  06E8               	decf	wreg,f,c
  4728  0169A6  E1FD               	bnz	clear_3
  4729                           
  4730                           ; Clear objects allocated to COMRAM (32 bytes)
  4731  0169A8  EE00  F027         	lfsr	0,__pbssCOMRAM
  4732  0169AC  0E20               	movlw	32
  4733  0169AE                     clear_4:
  4734  0169AE  6AEE               	clrf	postinc0,c
  4735  0169B0  06E8               	decf	wreg,f,c
  4736  0169B2  E1FD               	bnz	clear_4
  4737                           
  4738                           ; Initialize objects allocated to BANK1 (8 bytes)
  4739                           ; load TBLPTR registers with __pidataBANK1
  4740  0169B4  0EBC               	movlw	low __pidataBANK1
  4741  0169B6  6EF6               	movwf	tblptrl,c
  4742  0169B8  0E70               	movlw	high __pidataBANK1
  4743  0169BA  6EF7               	movwf	tblptrh,c
  4744  0169BC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  4745  0169BE  6EF8               	movwf	tblptru,c
  4746  0169C0  EE01  F0C9         	lfsr	0,__pdataBANK1
  4747  0169C4  EE10 F008          	lfsr	1,8
  4748  0169C8                     copy_data0:
  4749  0169C8  0009               	tblrd		*+
  4750  0169CA  CFF5 FFEE          	movff	tablat,postinc0
  4751  0169CE  50E5               	movf	postdec1,w,c
  4752  0169D0  50E1               	movf	fsr1l,w,c
  4753  0169D2  E1FA               	bnz	copy_data0
  4754  0169D4                     end_of_initialization:
  4755                           	opt stack 0
  4756  0169D4                     __end_of__initialization:
  4757                           	opt stack 0
  4758  0169D4  0100               	movlb	0
  4759  0169D6  EF00  F09D         	goto	_main	;jump to C main() function
  4760                           tblptru	equ	0xFF8
  4761                           tblptrh	equ	0xFF7
  4762                           tblptrl	equ	0xFF6
  4763                           tablat	equ	0xFF5
  4764                           postinc0	equ	0xFEE
  4765                           wreg	equ	0xFE8
  4766                           postdec1	equ	0xFE5
  4767                           fsr1l	equ	0xFE1
  4768                           
  4769                           	psect	bssCOMRAM
  4770  000027                     __pbssCOMRAM:
  4771                           	opt stack 0
  4772  000027                     _Scroll_7:
  4773                           	opt stack 0
  4774  000027                     	ds	16
  4775  000037                     _Scroll_8:
  4776                           	opt stack 0
  4777  000037                     	ds	16
  4778                           tblptru	equ	0xFF8
  4779                           tblptrh	equ	0xFF7
  4780                           tblptrl	equ	0xFF6
  4781                           tablat	equ	0xFF5
  4782                           postinc0	equ	0xFEE
  4783                           wreg	equ	0xFE8
  4784                           postdec1	equ	0xFE5
  4785                           fsr1l	equ	0xFE1
  4786                           
  4787                           	psect	bssBANK0
  4788  0000D8                     __pbssBANK0:
  4789                           	opt stack 0
  4790  0000D8                     _bufferCount:
  4791                           	opt stack 0
  4792  0000D8                     	ds	1
  4793  0000D9                     _Scroll_10:
  4794                           	opt stack 0
  4795  0000D9                     	ds	16
  4796  0000E9                     _Scroll_9:
  4797                           	opt stack 0
  4798  0000E9                     	ds	16
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           postinc0	equ	0xFEE
  4804                           wreg	equ	0xFE8
  4805                           postdec1	equ	0xFE5
  4806                           fsr1l	equ	0xFE1
  4807                           
  4808                           	psect	bssBANK1
  4809  000100                     __pbssBANK1:
  4810                           	opt stack 0
  4811  000100                     _NowTime:
  4812                           	opt stack 0
  4813  000100                     	ds	9
  4814  000109                     _LCDwait:
  4815                           	opt stack 0
  4816  000109                     	ds	1
  4817  00010A                     _PARITY:
  4818                           	opt stack 0
  4819  00010A                     	ds	1
  4820  00010B                     _ScrollDisplayPosition:
  4821                           	opt stack 0
  4822  00010B                     	ds	1
  4823  00010C                     _ScrollFIFOCount:
  4824                           	opt stack 0
  4825  00010C                     	ds	1
  4826  00010D                     _USART_Status:
  4827                           	opt stack 0
  4828  00010D                     	ds	1
  4829  00010E                     _Scroll_1:
  4830                           	opt stack 0
  4831  00010E                     	ds	16
  4832  00011E                     _Scroll_2:
  4833                           	opt stack 0
  4834  00011E                     	ds	16
  4835  00012E                     _Scroll_3:
  4836                           	opt stack 0
  4837  00012E                     	ds	16
  4838  00013E                     _Scroll_4:
  4839                           	opt stack 0
  4840  00013E                     	ds	16
  4841  00014E                     _Scroll_5:
  4842                           	opt stack 0
  4843  00014E                     	ds	16
  4844  00015E                     _Scroll_6:
  4845                           	opt stack 0
  4846  00015E                     	ds	16
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           fsr1l	equ	0xFE1
  4855                           
  4856                           	psect	dataBANK1
  4857  0001C9                     __pdataBANK1:
  4858                           	opt stack 0
  4859  0001C9                     _BAUD:
  4860                           	opt stack 0
  4861  0001C9                     	ds	4
  4862  0001CD                     _LCDclearCount:
  4863                           	opt stack 0
  4864  0001CD                     	ds	4
  4865                           tblptru	equ	0xFF8
  4866                           tblptrh	equ	0xFF7
  4867                           tblptrl	equ	0xFF6
  4868                           tablat	equ	0xFF5
  4869                           postinc0	equ	0xFEE
  4870                           wreg	equ	0xFE8
  4871                           postdec1	equ	0xFE5
  4872                           fsr1l	equ	0xFE1
  4873                           
  4874                           	psect	bssBANK3
  4875  000300                     __pbssBANK3:
  4876                           	opt stack 0
  4877  000300                     _buf:
  4878                           	opt stack 0
  4879  000300                     	ds	100
  4880  000364                     _Rxdata:
  4881                           	opt stack 0
  4882  000364                     	ds	100
  4883                           tblptru	equ	0xFF8
  4884                           tblptrh	equ	0xFF7
  4885                           tblptrl	equ	0xFF6
  4886                           tablat	equ	0xFF5
  4887                           postinc0	equ	0xFEE
  4888                           wreg	equ	0xFE8
  4889                           postdec1	equ	0xFE5
  4890                           fsr1l	equ	0xFE1
  4891                           
  4892                           	psect	bssBANK4
  4893  000400                     __pbssBANK4:
  4894                           	opt stack 0
  4895  000400                     _Txdata:
  4896                           	opt stack 0
  4897  000400                     	ds	100
  4898                           tblptru	equ	0xFF8
  4899                           tblptrh	equ	0xFF7
  4900                           tblptrl	equ	0xFF6
  4901                           tablat	equ	0xFF5
  4902                           postinc0	equ	0xFEE
  4903                           wreg	equ	0xFE8
  4904                           postdec1	equ	0xFE5
  4905                           fsr1l	equ	0xFE1
  4906                           
  4907                           	psect	cstackBANK5
  4908  000500                     __pcstackBANK5:
  4909                           	opt stack 0
  4910  000500                     Command@buf:
  4911                           	opt stack 0
  4912                           
  4913                           ; 200 bytes @ 0x0
  4914  000500                     	ds	200
  4915  0005C8                     Command@ADC_Value:
  4916                           	opt stack 0
  4917                           
  4918                           ; 2 bytes @ 0xC8
  4919  0005C8                     	ds	2
  4920  0005CA                     Command@RTC_Battery_Value:
  4921                           	opt stack 0
  4922                           
  4923                           ; 2 bytes @ 0xCA
  4924  0005CA                     	ds	2
  4925  0005CC                     Command@RTC_Battery_Value_HIGH_decimal:
  4926                           	opt stack 0
  4927                           
  4928                           ; 2 bytes @ 0xCC
  4929  0005CC                     	ds	2
  4930  0005CE                     Command@RTC_Battery_Value_LOW_decimal:
  4931                           	opt stack 0
  4932                           
  4933                           ; 2 bytes @ 0xCE
  4934  0005CE                     	ds	2
  4935  0005D0                     Command@contrast:
  4936                           	opt stack 0
  4937                           
  4938                           ; 2 bytes @ 0xD0
  4939  0005D0                     	ds	2
  4940  0005D2                     Command@channel:
  4941                           	opt stack 0
  4942                           
  4943                           ; 2 bytes @ 0xD2
  4944  0005D2                     	ds	2
  4945  0005D4                     Command@duty:
  4946                           	opt stack 0
  4947                           
  4948                           ; 2 bytes @ 0xD4
  4949  0005D4                     	ds	2
  4950                           tblptru	equ	0xFF8
  4951                           tblptrh	equ	0xFF7
  4952                           tblptrl	equ	0xFF6
  4953                           tablat	equ	0xFF5
  4954                           postinc0	equ	0xFEE
  4955                           wreg	equ	0xFE8
  4956                           postdec1	equ	0xFE5
  4957                           fsr1l	equ	0xFE1
  4958                           
  4959                           	psect	cstackBANK2
  4960  000200                     __pcstackBANK2:
  4961                           	opt stack 0
  4962  000200                     RemoveSpaces@That:
  4963                           	opt stack 0
  4964  000200                     StringAddEqual@temp:
  4965                           	opt stack 0
  4966                           
  4967                           ; 100 bytes @ 0x0
  4968  000200                     	ds	100
  4969  000264                     StringAddEqual@firstnumber:
  4970                           	opt stack 0
  4971  000264                     RemoveSpaces@address:
  4972                           	opt stack 0
  4973                           
  4974                           ; 2 bytes @ 0x64
  4975  000264                     	ds	1
  4976  000265                     StringAddEqual@i:
  4977                           	opt stack 0
  4978                           
  4979                           ; 1 bytes @ 0x65
  4980  000265                     	ds	1
  4981  000266                     RemoveSpaces@i:
  4982                           	opt stack 0
  4983  000266                     StringAddEqual@j:
  4984                           	opt stack 0
  4985                           
  4986                           ; 1 bytes @ 0x66
  4987  000266                     	ds	1
  4988                           tblptru	equ	0xFF8
  4989                           tblptrh	equ	0xFF7
  4990                           tblptrl	equ	0xFF6
  4991                           tablat	equ	0xFF5
  4992                           postinc0	equ	0xFEE
  4993                           wreg	equ	0xFE8
  4994                           postdec1	equ	0xFE5
  4995                           fsr1l	equ	0xFE1
  4996                           
  4997                           	psect	cstackBANK1
  4998  00016E                     __pcstackBANK1:
  4999                           	opt stack 0
  5000  00016E                     ??_high_isr:
  5001                           
  5002                           ; 0 bytes @ 0x0
  5003  00016E                     	ds	14
  5004  00017C                     ??_readI2C:
  5005  00017C                     ??_isdigit:
  5006  00017C                     ??_IdleI2C:
  5007  00017C                     ?___wmul:
  5008                           	opt stack 0
  5009  00017C                     ?___awdiv:
  5010                           	opt stack 0
  5011  00017C                     ?___awmod:
  5012                           	opt stack 0
  5013  00017C                     ?___lwdiv:
  5014                           	opt stack 0
  5015  00017C                     ?___ftpack:
  5016                           	opt stack 0
  5017  00017C                     ?___lldiv:
  5018                           	opt stack 0
  5019  00017C                     baudUSART@baudconfig:
  5020                           	opt stack 0
  5021  00017C                     ReadUSART@data:
  5022                           	opt stack 0
  5023  00017C                     EnableInternalADC@config:
  5024                           	opt stack 0
  5025  00017C                     OpenI2C@slew:
  5026                           	opt stack 0
  5027  00017C                     cleanBuffer@data:
  5028                           	opt stack 0
  5029  00017C                     StringMatch@This:
  5030                           	opt stack 0
  5031  00017C                     StringContains@This:
  5032                           	opt stack 0
  5033  00017C                     StartsWith@This:
  5034                           	opt stack 0
  5035  00017C                     lowercase@Input:
  5036                           	opt stack 0
  5037  00017C                     CheckSum_byte@This:
  5038                           	opt stack 0
  5039  00017C                     OpenUSART@spbrg:
  5040                           	opt stack 0
  5041  00017C                     Parse_Time@This:
  5042                           	opt stack 0
  5043  00017C                     ___wmul@multiplier:
  5044                           	opt stack 0
  5045  00017C                     ___awdiv@dividend:
  5046                           	opt stack 0
  5047  00017C                     ___awmod@dividend:
  5048                           	opt stack 0
  5049  00017C                     ___lwdiv@dividend:
  5050                           	opt stack 0
  5051  00017C                     ___ftpack@arg:
  5052                           	opt stack 0
  5053  00017C                     delayUS@US:
  5054                           	opt stack 0
  5055  00017C                     ___lldiv@dividend:
  5056                           	opt stack 0
  5057                           
  5058                           ; 4 bytes @ 0xE
  5059  00017C                     	ds	1
  5060  00017D                     ??_WriteI2C:
  5061  00017D                     EnableInternalADC@channels:
  5062                           	opt stack 0
  5063  00017D                     OpenI2C@sync_mode:
  5064                           	opt stack 0
  5065  00017D                     _isdigit$2583:
  5066                           	opt stack 0
  5067  00017D                     Multiple_I2C_Read@rdptr:
  5068                           	opt stack 0
  5069                           
  5070                           ; 2 bytes @ 0xF
  5071  00017D                     	ds	1
  5072  00017E                     ??_OpenUSART:
  5073  00017E                     ??_Parse_Time:
  5074  00017E                     ??_lowercase:
  5075  00017E                     CheckSum_byte@Odd_Even:
  5076                           	opt stack 0
  5077  00017E                     WriteI2C@data_out:
  5078                           	opt stack 0
  5079  00017E                     isdigit@c:
  5080                           	opt stack 0
  5081  00017E                     cleanBuffer@count:
  5082                           	opt stack 0
  5083  00017E                     StringMatch@That:
  5084                           	opt stack 0
  5085  00017E                     StringContains@That:
  5086                           	opt stack 0
  5087  00017E                     StartsWith@That:
  5088                           	opt stack 0
  5089  00017E                     Init_I2C_Master@baud:
  5090                           	opt stack 0
  5091  00017E                     ___wmul@multiplicand:
  5092                           	opt stack 0
  5093  00017E                     ___awdiv@divisor:
  5094                           	opt stack 0
  5095  00017E                     ___awmod@divisor:
  5096                           	opt stack 0
  5097  00017E                     ___lwdiv@divisor:
  5098                           	opt stack 0
  5099                           
  5100                           ; 2 bytes @ 0x10
  5101  00017E                     	ds	1
  5102  00017F                     ?_I2C_Read_At_Address:
  5103                           	opt stack 0
  5104  00017F                     lowercase@i:
  5105                           	opt stack 0
  5106  00017F                     Parse_Time@temp:
  5107                           	opt stack 0
  5108  00017F                     I2C_Write_At_Address@Register:
  5109                           	opt stack 0
  5110  00017F                     I2C_Read_At_Address@Register:
  5111                           	opt stack 0
  5112  00017F                     Multiple_I2C_Read@length:
  5113                           	opt stack 0
  5114  00017F                     ___ftpack@exp:
  5115                           	opt stack 0
  5116  00017F                     CheckSum_byte@ThisTemp:
  5117                           	opt stack 0
  5118                           
  5119                           ; 2 bytes @ 0x11
  5120  00017F                     	ds	1
  5121  000180                     ??_cleanBuffer:
  5122  000180                     ??_delayUS:
  5123  000180                     ??_Multiple_I2C_Read:
  5124  000180                     ??_StringContains:
  5125  000180                     ??_StartsWith:
  5126  000180                     I2C_Write_At_Address@data:
  5127                           	opt stack 0
  5128  000180                     ___awdiv@counter:
  5129                           	opt stack 0
  5130  000180                     ___awmod@counter:
  5131                           	opt stack 0
  5132  000180                     ___ftpack@sign:
  5133                           	opt stack 0
  5134  000180                     ___lwdiv@counter:
  5135                           	opt stack 0
  5136  000180                     ___wmul@product:
  5137                           	opt stack 0
  5138  000180                     ___lldiv@divisor:
  5139                           	opt stack 0
  5140  000180                     Parse_Time@TempTime:
  5141                           	opt stack 0
  5142                           
  5143                           ; 9 bytes @ 0x12
  5144  000180                     	ds	1
  5145  000181                     ??_I2C_Write_At_Address:
  5146  000181                     ??___ftpack:
  5147  000181                     CheckSum_byte@Parity:
  5148                           	opt stack 0
  5149  000181                     OpenUSART@config:
  5150                           	opt stack 0
  5151  000181                     I2C_Read_At_Address@I2Caddress:
  5152                           	opt stack 0
  5153  000181                     I2C_Read_Sequential@Register:
  5154                           	opt stack 0
  5155  000181                     ___awdiv@sign:
  5156                           	opt stack 0
  5157  000181                     ___awmod@sign:
  5158                           	opt stack 0
  5159  000181                     ___lwdiv@quotient:
  5160                           	opt stack 0
  5161  000181                     delayUS@i:
  5162                           	opt stack 0
  5163                           
  5164                           ; 4 bytes @ 0x13
  5165  000181                     	ds	1
  5166  000182                     ?_GetEnteredNumber:
  5167                           	opt stack 0
  5168  000182                     ?___aldiv:
  5169                           	opt stack 0
  5170  000182                     CheckSum_byte@i:
  5171                           	opt stack 0
  5172  000182                     GetEnteredNumber@This:
  5173                           	opt stack 0
  5174  000182                     I2C_Read_Sequential@rdptr:
  5175                           	opt stack 0
  5176  000182                     ___awdiv@quotient:
  5177                           	opt stack 0
  5178  000182                     ___aldiv@dividend:
  5179                           	opt stack 0
  5180                           
  5181                           ; 4 bytes @ 0x14
  5182  000182                     	ds	1
  5183  000183                     ?___lwmod:
  5184                           	opt stack 0
  5185  000183                     cleanBuffer@i:
  5186                           	opt stack 0
  5187  000183                     UARTchar@NinethBit_override:
  5188                           	opt stack 0
  5189  000183                     I2C_Write_At_Address@I2Caddress:
  5190                           	opt stack 0
  5191  000183                     ___lwmod@dividend:
  5192                           	opt stack 0
  5193                           
  5194                           ; 2 bytes @ 0x15
  5195  000183                     	ds	1
  5196  000184                     ??_GetEnteredNumber:
  5197  000184                     ?___lbtoft:
  5198                           	opt stack 0
  5199  000184                     ?___lwtoft:
  5200                           	opt stack 0
  5201  000184                     UARTchar@NinethBit_override_data:
  5202                           	opt stack 0
  5203  000184                     I2C_Read_Sequential@length:
  5204                           	opt stack 0
  5205  000184                     BufferCopy@from:
  5206                           	opt stack 0
  5207  000184                     ___lwtoft@c:
  5208                           	opt stack 0
  5209  000184                     ___lldiv@quotient:
  5210                           	opt stack 0
  5211  000184                     SET_RTC_TIME@SetTime:
  5212                           	opt stack 0
  5213                           
  5214                           ; 9 bytes @ 0x16
  5215  000184                     	ds	1
  5216  000185                     ??_UARTchar:
  5217  000185                     delayUS@j:
  5218                           	opt stack 0
  5219  000185                     I2C_Read_Sequential@I2Caddress:
  5220                           	opt stack 0
  5221  000185                     ___lwmod@divisor:
  5222                           	opt stack 0
  5223                           
  5224                           ; 2 bytes @ 0x17
  5225  000185                     	ds	1
  5226  000186                     ??_RTC_TIME_NONMilitary:
  5227  000186                     UARTchar@data:
  5228                           	opt stack 0
  5229  000186                     Zero_Config1@pin:
  5230                           	opt stack 0
  5231  000186                     One_Config1@pin:
  5232                           	opt stack 0
  5233  000186                     f_Config1@pin:
  5234                           	opt stack 0
  5235  000186                     Zero_Config2@pin:
  5236                           	opt stack 0
  5237  000186                     One_Config2@pin:
  5238                           	opt stack 0
  5239  000186                     SendLCDbyte@isCommand:
  5240                           	opt stack 0
  5241  000186                     RTC_Clock_Enable@Error:
  5242                           	opt stack 0
  5243  000186                     BufferCopy@to:
  5244                           	opt stack 0
  5245  000186                     ___aldiv@divisor:
  5246                           	opt stack 0
  5247  000186                     READ_RTC_TIME@temp:
  5248                           	opt stack 0
  5249                           
  5250                           ; 7 bytes @ 0x18
  5251  000186                     	ds	1
  5252  000187                     SendLCDbyte@data:
  5253                           	opt stack 0
  5254  000187                     ___lbtoft@c:
  5255                           	opt stack 0
  5256  000187                     ___lwmod@counter:
  5257                           	opt stack 0
  5258  000187                     UARTstring@data:
  5259                           	opt stack 0
  5260  000187                     Send_Config1@data:
  5261                           	opt stack 0
  5262  000187                     Send_Config2@data:
  5263                           	opt stack 0
  5264  000187                     RTC_Clock_Enable@tempSeconds:
  5265                           	opt stack 0
  5266  000187                     RTC_TIME_NONMilitary@Error:
  5267                           	opt stack 0
  5268                           
  5269                           ; 2 bytes @ 0x19
  5270  000187                     	ds	1
  5271  000188                     ?_sprintf:
  5272                           	opt stack 0
  5273  000188                     ?___ftdiv:
  5274                           	opt stack 0
  5275  000188                     BufferCopy@count:
  5276                           	opt stack 0
  5277  000188                     GetEnteredNumber@i:
  5278                           	opt stack 0
  5279  000188                     SendLCDbyte@MSB_nibble:
  5280                           	opt stack 0
  5281  000188                     ___lldiv@counter:
  5282                           	opt stack 0
  5283  000188                     sprintf@sp:
  5284                           	opt stack 0
  5285  000188                     ___ftdiv@f1:
  5286                           	opt stack 0
  5287                           
  5288                           ; 3 bytes @ 0x1A
  5289  000188                     	ds	1
  5290  000189                     ??_UARTstring:
  5291  000189                     ??_Send_Config1:
  5292  000189                     ??_Send_Config2:
  5293  000189                     BufferCopy@shift:
  5294                           	opt stack 0
  5295  000189                     GetEnteredNumber@negative:
  5296                           	opt stack 0
  5297  000189                     SendLCDbyte@LSB_nibble:
  5298                           	opt stack 0
  5299  000189                     RTC_TIME_NONMilitary@temphours:
  5300                           	opt stack 0
  5301  000189                     InitUART@Baud:
  5302                           	opt stack 0
  5303                           
  5304                           ; 4 bytes @ 0x1B
  5305  000189                     	ds	1
  5306  00018A                     BufferCopy@i:
  5307                           	opt stack 0
  5308  00018A                     SetLCDcursor@Col:
  5309                           	opt stack 0
  5310  00018A                     LCDPrintChar@character:
  5311                           	opt stack 0
  5312  00018A                     ___aldiv@counter:
  5313                           	opt stack 0
  5314  00018A                     GetEnteredNumber@temp:
  5315                           	opt stack 0
  5316  00018A                     LCDPrintString@Text:
  5317                           	opt stack 0
  5318  00018A                     sprintf@f:
  5319                           	opt stack 0
  5320                           
  5321                           ; 2 bytes @ 0x1C
  5322  00018A                     	ds	1
  5323  00018B                     ?_InternalADC_Read:
  5324                           	opt stack 0
  5325  00018B                     Send_Config2@pin:
  5326                           	opt stack 0
  5327  00018B                     SetLCDcursor@Row:
  5328                           	opt stack 0
  5329  00018B                     ___aldiv@sign:
  5330                           	opt stack 0
  5331  00018B                     RemoveSpaces@This:
  5332                           	opt stack 0
  5333  00018B                     StringAddEqual@Input:
  5334                           	opt stack 0
  5335  00018B                     LCD_Scroll@This:
  5336                           	opt stack 0
  5337  00018B                     ___ftdiv@f2:
  5338                           	opt stack 0
  5339                           
  5340                           ; 3 bytes @ 0x1D
  5341  00018B                     	ds	1
  5342  00018C                     Send_Config1@i:
  5343                           	opt stack 0
  5344  00018C                     Send_Config2@i:
  5345                           	opt stack 0
  5346  00018C                     SetLCDcursor@address:
  5347                           	opt stack 0
  5348  00018C                     LCDPrintString@c:
  5349                           	opt stack 0
  5350  00018C                     ___aldiv@quotient:
  5351                           	opt stack 0
  5352                           
  5353                           ; 4 bytes @ 0x1E
  5354  00018C                     	ds	1
  5355  00018D                     ??_InternalADC_Read:
  5356  00018D                     ??_SET_RTC_TIME:
  5357  00018D                     ??_StringAddEqual:
  5358  00018D                     InitUART@parity:
  5359                           	opt stack 0
  5360  00018D                     Send_Config1@pin:
  5361                           	opt stack 0
  5362  00018D                     READ_RTC_TIME@Error:
  5363                           	opt stack 0
  5364                           
  5365                           ; 1 bytes @ 0x1F
  5366  00018D                     	ds	1
  5367  00018E                     ??_InitUART:
  5368  00018E                     ??_LCDScreenUpdate:
  5369  00018E                     ??___ftdiv:
  5370  00018E                     LCDdisplayFeedback@Text:
  5371                           	opt stack 0
  5372                           
  5373                           ; 2 bytes @ 0x20
  5374  00018E                     	ds	1
  5375  00018F                     InternalADC_Read@channel:
  5376                           	opt stack 0
  5377                           
  5378                           ; 1 bytes @ 0x21
  5379  00018F                     	ds	1
  5380  000190                     SetFreq@freq:
  5381                           	opt stack 0
  5382                           
  5383                           ; 2 bytes @ 0x22
  5384  000190                     	ds	1
  5385  000191                     ___ftdiv@cntr:
  5386                           	opt stack 0
  5387  000191                     SET_RTC_TIME@temp:
  5388                           	opt stack 0
  5389                           
  5390                           ; 7 bytes @ 0x23
  5391  000191                     	ds	1
  5392  000192                     ??_SetFreq:
  5393  000192                     InitUART@spbrg:
  5394                           	opt stack 0
  5395  000192                     ___ftdiv@f3:
  5396                           	opt stack 0
  5397                           
  5398                           ; 3 bytes @ 0x24
  5399  000192                     	ds	2
  5400  000194                     InitUART@baudconfig:
  5401                           	opt stack 0
  5402                           
  5403                           ; 1 bytes @ 0x26
  5404  000194                     	ds	1
  5405  000195                     InitUART@config:
  5406                           	opt stack 0
  5407  000195                     ___ftdiv@exp:
  5408                           	opt stack 0
  5409                           
  5410                           ; 1 bytes @ 0x27
  5411  000195                     	ds	1
  5412  000196                     SetFreq@temp:
  5413                           	opt stack 0
  5414  000196                     ___ftdiv@sign:
  5415                           	opt stack 0
  5416  000196                     InitUART@temp:
  5417                           	opt stack 0
  5418                           
  5419                           ; 4 bytes @ 0x28
  5420  000196                     	ds	1
  5421  000197                     ?___ftmul:
  5422                           	opt stack 0
  5423  000197                     ___ftmul@f1:
  5424                           	opt stack 0
  5425                           
  5426                           ; 3 bytes @ 0x29
  5427  000197                     	ds	1
  5428  000198                     ??_sprintf:
  5429  000198                     SET_RTC_TIME@Error:
  5430                           	opt stack 0
  5431                           
  5432                           ; 1 bytes @ 0x2A
  5433  000198                     	ds	2
  5434  00019A                     ___ftmul@f2:
  5435                           	opt stack 0
  5436                           
  5437                           ; 3 bytes @ 0x2C
  5438  00019A                     	ds	2
  5439  00019C                     sprintf@idx:
  5440                           	opt stack 0
  5441                           
  5442                           ; 1 bytes @ 0x2E
  5443  00019C                     	ds	1
  5444  00019D                     ??___ftmul:
  5445  00019D                     _sprintf$2234:
  5446                           	opt stack 0
  5447                           
  5448                           ; 2 bytes @ 0x2F
  5449  00019D                     	ds	2
  5450  00019F                     _sprintf$2235:
  5451                           	opt stack 0
  5452                           
  5453                           ; 2 bytes @ 0x31
  5454  00019F                     	ds	1
  5455  0001A0                     ___ftmul@exp:
  5456                           	opt stack 0
  5457                           
  5458                           ; 1 bytes @ 0x32
  5459  0001A0                     	ds	1
  5460  0001A1                     _sprintf$2241:
  5461                           	opt stack 0
  5462  0001A1                     ___ftmul@f3_as_product:
  5463                           	opt stack 0
  5464                           
  5465                           ; 3 bytes @ 0x33
  5466  0001A1                     	ds	2
  5467  0001A3                     sprintf@ap:
  5468                           	opt stack 0
  5469                           
  5470                           ; 2 bytes @ 0x35
  5471  0001A3                     	ds	1
  5472  0001A4                     ___ftmul@cntr:
  5473                           	opt stack 0
  5474                           
  5475                           ; 1 bytes @ 0x36
  5476  0001A4                     	ds	1
  5477  0001A5                     sprintf@prec:
  5478                           	opt stack 0
  5479  0001A5                     ___ftmul@sign:
  5480                           	opt stack 0
  5481                           
  5482                           ; 1 bytes @ 0x37
  5483  0001A5                     	ds	1
  5484  0001A6                     ?___fttol:
  5485                           	opt stack 0
  5486  0001A6                     sprintf@width:
  5487                           	opt stack 0
  5488  0001A6                     ___fttol@f1:
  5489                           	opt stack 0
  5490                           
  5491                           ; 3 bytes @ 0x38
  5492  0001A6                     	ds	2
  5493  0001A8                     sprintf@_val:
  5494                           	opt stack 0
  5495                           
  5496                           ; 4 bytes @ 0x3A
  5497  0001A8                     	ds	2
  5498  0001AA                     ??___fttol:
  5499                           
  5500                           ; 0 bytes @ 0x3C
  5501  0001AA                     	ds	2
  5502  0001AC                     sprintf@c:
  5503                           	opt stack 0
  5504                           
  5505                           ; 1 bytes @ 0x3E
  5506  0001AC                     	ds	1
  5507  0001AD                     sprintf@flag:
  5508                           	opt stack 0
  5509                           
  5510                           ; 2 bytes @ 0x3F
  5511  0001AD                     	ds	2
  5512  0001AF                     ___fttol@sign1:
  5513                           	opt stack 0
  5514  0001AF                     SprintDate@ReturnBuf:
  5515                           	opt stack 0
  5516                           
  5517                           ; 2 bytes @ 0x41
  5518  0001AF                     	ds	1
  5519  0001B0                     ___fttol@lval:
  5520                           	opt stack 0
  5521                           
  5522                           ; 4 bytes @ 0x42
  5523  0001B0                     	ds	1
  5524  0001B1                     SprintDate@DisplayTime:
  5525                           	opt stack 0
  5526                           
  5527                           ; 9 bytes @ 0x43
  5528  0001B1                     	ds	3
  5529  0001B4                     ___fttol@exp1:
  5530                           	opt stack 0
  5531                           
  5532                           ; 1 bytes @ 0x46
  5533  0001B4                     	ds	1
  5534  0001B5                     ??_SetContrast:
  5535  0001B5                     ??_SetDuty:
  5536                           
  5537                           ; 0 bytes @ 0x47
  5538  0001B5                     	ds	4
  5539  0001B9                     SetDuty@Duty:
  5540                           	opt stack 0
  5541  0001B9                     SetContrast@tempPR2:
  5542                           	opt stack 0
  5543                           
  5544                           ; 3 bytes @ 0x4B
  5545  0001B9                     	ds	1
  5546  0001BA                     SprintDate@Military:
  5547                           	opt stack 0
  5548  0001BA                     SetDuty@tempPR2:
  5549                           	opt stack 0
  5550                           
  5551                           ; 3 bytes @ 0x4C
  5552  0001BA                     	ds	1
  5553  0001BB                     
  5554                           ; 0 bytes @ 0x4D
  5555  0001BB                     	ds	1
  5556  0001BC                     SetContrast@MSB:
  5557                           	opt stack 0
  5558                           
  5559                           ; 1 bytes @ 0x4E
  5560  0001BC                     	ds	1
  5561  0001BD                     SetContrast@LSB:
  5562                           	opt stack 0
  5563  0001BD                     SetDuty@MSB:
  5564                           	opt stack 0
  5565                           
  5566                           ; 1 bytes @ 0x4F
  5567  0001BD                     	ds	1
  5568  0001BE                     SetDuty@LSB:
  5569                           	opt stack 0
  5570  0001BE                     SetContrast@temp:
  5571                           	opt stack 0
  5572                           
  5573                           ; 2 bytes @ 0x50
  5574  0001BE                     	ds	1
  5575  0001BF                     SetDuty@temp:
  5576                           	opt stack 0
  5577                           
  5578                           ; 2 bytes @ 0x51
  5579  0001BF                     	ds	1
  5580  0001C0                     SetContrast@Duty:
  5581                           	opt stack 0
  5582                           
  5583                           ; 1 bytes @ 0x52
  5584  0001C0                     	ds	1
  5585  0001C1                     Command@Input:
  5586                           	opt stack 0
  5587                           
  5588                           ; 2 bytes @ 0x53
  5589  0001C1                     	ds	2
  5590  0001C3                     ??_Command:
  5591                           
  5592                           ; 0 bytes @ 0x55
  5593  0001C3                     	ds	4
  5594  0001C7                     main@ii:
  5595                           	opt stack 0
  5596                           
  5597                           ; 1 bytes @ 0x59
  5598  0001C7                     	ds	1
  5599  0001C8                     main@count:
  5600                           	opt stack 0
  5601                           
  5602                           ; 1 bytes @ 0x5A
  5603  0001C8                     	ds	1
  5604                           tblptru	equ	0xFF8
  5605                           tblptrh	equ	0xFF7
  5606                           tblptrl	equ	0xFF6
  5607                           tablat	equ	0xFF5
  5608                           postinc0	equ	0xFEE
  5609                           wreg	equ	0xFE8
  5610                           postdec1	equ	0xFE5
  5611                           fsr1l	equ	0xFE1
  5612                           
  5613                           	psect	cstackBANK0
  5614  000060                     __pcstackBANK0:
  5615                           	opt stack 0
  5616  000060                     low_isr@TEMP_Rxdata:
  5617                           	opt stack 0
  5618                           
  5619                           ; 100 bytes @ 0x0
  5620  000060                     	ds	100
  5621  0000C4                     low_isr@LCD_TEMP:
  5622                           	opt stack 0
  5623                           
  5624                           ; 16 bytes @ 0x64
  5625  0000C4                     	ds	16
  5626  0000D4                     low_isr@i:
  5627                           	opt stack 0
  5628                           
  5629                           ; 2 bytes @ 0x74
  5630  0000D4                     	ds	2
  5631  0000D6                     low_isr@j:
  5632                           	opt stack 0
  5633                           
  5634                           ; 1 bytes @ 0x76
  5635  0000D6                     	ds	1
  5636  0000D7                     low_isr@rx:
  5637                           	opt stack 0
  5638                           
  5639                           ; 1 bytes @ 0x77
  5640  0000D7                     	ds	1
  5641                           tblptru	equ	0xFF8
  5642                           tblptrh	equ	0xFF7
  5643                           tblptrl	equ	0xFF6
  5644                           tablat	equ	0xFF5
  5645                           postinc0	equ	0xFEE
  5646                           wreg	equ	0xFE8
  5647                           postdec1	equ	0xFE5
  5648                           fsr1l	equ	0xFE1
  5649                           
  5650                           	psect	cstackCOMRAM
  5651  000001                     __pcstackCOMRAM:
  5652                           	opt stack 0
  5653  000001                     WriteUSART@data:
  5654                           	opt stack 0
  5655  000001                     i1ReadUSART@data:
  5656                           	opt stack 0
  5657  000001                     i1cleanBuffer@data:
  5658                           	opt stack 0
  5659  000001                     i1CheckSum_byte@This:
  5660                           	opt stack 0
  5661  000001                     i1delayUS@US:
  5662                           	opt stack 0
  5663                           
  5664                           ; 4 bytes @ 0x0
  5665  000001                     	ds	2
  5666  000003                     i1CheckSum_byte@Odd_Even:
  5667                           	opt stack 0
  5668  000003                     i1cleanBuffer@count:
  5669                           	opt stack 0
  5670                           
  5671                           ; 2 bytes @ 0x2
  5672  000003                     	ds	1
  5673  000004                     i1CheckSum_byte@ThisTemp:
  5674                           	opt stack 0
  5675                           
  5676                           ; 2 bytes @ 0x3
  5677  000004                     	ds	1
  5678  000005                     ??i1_delayUS:
  5679  000005                     ??i1_cleanBuffer:
  5680                           
  5681                           ; 0 bytes @ 0x4
  5682  000005                     	ds	1
  5683  000006                     i1CheckSum_byte@Parity:
  5684                           	opt stack 0
  5685  000006                     i1delayUS@i:
  5686                           	opt stack 0
  5687                           
  5688                           ; 4 bytes @ 0x5
  5689  000006                     	ds	1
  5690  000007                     i1CheckSum_byte@i:
  5691                           	opt stack 0
  5692                           
  5693                           ; 1 bytes @ 0x6
  5694  000007                     	ds	1
  5695  000008                     i1cleanBuffer@i:
  5696                           	opt stack 0
  5697  000008                     i1UARTchar@NinethBit_override:
  5698                           	opt stack 0
  5699                           
  5700                           ; 1 bytes @ 0x7
  5701  000008                     	ds	1
  5702  000009                     i1UARTchar@NinethBit_override_data:
  5703                           	opt stack 0
  5704  000009                     i1BufferCopy@from:
  5705                           	opt stack 0
  5706                           
  5707                           ; 2 bytes @ 0x8
  5708  000009                     	ds	1
  5709  00000A                     ??i1_UARTchar:
  5710  00000A                     i1delayUS@j:
  5711                           	opt stack 0
  5712                           
  5713                           ; 1 bytes @ 0x9
  5714  00000A                     	ds	1
  5715  00000B                     i1UARTchar@data:
  5716                           	opt stack 0
  5717  00000B                     i1SendLCDbyte@isCommand:
  5718                           	opt stack 0
  5719  00000B                     i1BufferCopy@to:
  5720                           	opt stack 0
  5721                           
  5722                           ; 2 bytes @ 0xA
  5723  00000B                     	ds	1
  5724  00000C                     i1SendLCDbyte@data:
  5725                           	opt stack 0
  5726  00000C                     i1UARTstring@data:
  5727                           	opt stack 0
  5728                           
  5729                           ; 2 bytes @ 0xB
  5730  00000C                     	ds	1
  5731  00000D                     i1BufferCopy@count:
  5732                           	opt stack 0
  5733  00000D                     i1SendLCDbyte@MSB_nibble:
  5734                           	opt stack 0
  5735                           
  5736                           ; 1 bytes @ 0xC
  5737  00000D                     	ds	1
  5738  00000E                     ??i1_UARTstring:
  5739  00000E                     i1BufferCopy@shift:
  5740                           	opt stack 0
  5741  00000E                     i1SendLCDbyte@LSB_nibble:
  5742                           	opt stack 0
  5743                           
  5744                           ; 1 bytes @ 0xD
  5745  00000E                     	ds	1
  5746  00000F                     i1BufferCopy@i:
  5747                           	opt stack 0
  5748  00000F                     i1SetLCDcursor@Col:
  5749                           	opt stack 0
  5750  00000F                     i1LCDPrintChar@character:
  5751                           	opt stack 0
  5752  00000F                     i1LCDPrintString@Text:
  5753                           	opt stack 0
  5754                           
  5755                           ; 2 bytes @ 0xE
  5756  00000F                     	ds	1
  5757  000010                     i1SetLCDcursor@Row:
  5758                           	opt stack 0
  5759                           
  5760                           ; 1 bytes @ 0xF
  5761  000010                     	ds	1
  5762  000011                     i1SetLCDcursor@address:
  5763                           	opt stack 0
  5764  000011                     i1LCDPrintString@c:
  5765                           	opt stack 0
  5766                           
  5767                           ; 2 bytes @ 0x10
  5768  000011                     	ds	2
  5769  000013                     ??_low_isr:
  5770                           
  5771                           ; 0 bytes @ 0x12
  5772  000013                     	ds	20
  5773                           tblptru	equ	0xFF8
  5774                           tblptrh	equ	0xFF7
  5775                           tblptrl	equ	0xFF6
  5776                           tablat	equ	0xFF5
  5777                           postinc0	equ	0xFEE
  5778                           wreg	equ	0xFE8
  5779                           postdec1	equ	0xFE5
  5780                           fsr1l	equ	0xFE1
  5781                           
  5782 ;;
  5783 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5784 ;;
  5785 ;; *************** function _main *****************
  5786 ;; Defined at:
  5787 ;;		line 67 in file "main.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;		None
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;  count           1   90[BANK1 ] unsigned char 
  5792 ;;  ii              1   89[BANK1 ] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;		None               void
  5795 ;; Registers used:
  5796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5803 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5805 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5806 ;;Total ram usage:        2 bytes
  5807 ;; Hardware stack levels required when called:   12
  5808 ;; This function calls:
  5809 ;;		_ClearLCD
  5810 ;;		_Command
  5811 ;;		_ConfigureOscillator
  5812 ;;		_ContrastPWM_init
  5813 ;;		_EnableInternalADC
  5814 ;;		_InitApp
  5815 ;;		_InitUART
  5816 ;;		_Init_I2C_Master
  5817 ;;		_LCDPrintChar
  5818 ;;		_LCDPrintString
  5819 ;;		_LCDScreenUpdate
  5820 ;;		_PWM_init
  5821 ;;		_RTC_INIT
  5822 ;;		_ReadUSART
  5823 ;;		_SetContrast
  5824 ;;		_SetDuty
  5825 ;;		_SetLCDcursor
  5826 ;;		_UARTstring
  5827 ;;		_cleanBuffer
  5828 ;;		_delayUS
  5829 ;;		_init_LCD
  5830 ;; This function is called by:
  5831 ;;		Startup code after reset
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text0
  5836  013A00                     __ptext0:
  5837                           	opt stack 0
  5838  013A00                     _main:
  5839                           	opt stack 19
  5840                           
  5841                           ;main.c: 69: unsigned char ii =0;
  5842                           
  5843                           ;incstack = 0
  5844  013A00  0E00               	movlw	0
  5845  013A02  0101               	movlb	1	; () banked
  5846  013A04  6FC7               	movwf	main@ii& (0+255),b
  5847                           
  5848                           ;main.c: 70: unsigned char count =0;
  5849  013A06  0E00               	movlw	0
  5850  013A08  0101               	movlb	1	; () banked
  5851  013A0A  6FC8               	movwf	main@count& (0+255),b
  5852                           
  5853                           ; BSR set to: 1
  5854                           ;main.c: 72: ConfigureOscillator();
  5855  013A0C  EC62  F0B8         	call	_ConfigureOscillator	;wreg free
  5856                           
  5857                           ;main.c: 73: InitApp();
  5858  013A10  EC4D  F0B5         	call	_InitApp	;wreg free
  5859                           
  5860                           ;main.c: 74: InitUART(9600, 0);
  5861  013A14  0E80               	movlw	128
  5862  013A16  0101               	movlb	1	; () banked
  5863  013A18  6F89               	movwf	InitUART@Baud& (0+255),b
  5864  013A1A  0E25               	movlw	37
  5865  013A1C  0101               	movlb	1	; () banked
  5866  013A1E  6F8A               	movwf	(InitUART@Baud+1)& (0+255),b
  5867  013A20  0E00               	movlw	0
  5868  013A22  0101               	movlb	1	; () banked
  5869  013A24  6F8B               	movwf	(InitUART@Baud+2)& (0+255),b
  5870  013A26  0E00               	movlw	0
  5871  013A28  0101               	movlb	1	; () banked
  5872  013A2A  6F8C               	movwf	(InitUART@Baud+3)& (0+255),b
  5873  013A2C  0E00               	movlw	0
  5874  013A2E  0101               	movlb	1	; () banked
  5875  013A30  6F8D               	movwf	InitUART@parity& (0+255),b
  5876  013A32  EC6B  F0A1         	call	_InitUART	;wreg free
  5877                           
  5878                           ;main.c: 75: EnableInternalADC(1);
  5879  013A36  0E01               	movlw	1
  5880  013A38  EC68  F0AE         	call	_EnableInternalADC
  5881                           
  5882                           ;main.c: 76: PWM_init();
  5883  013A3C  ECD4  F0B7         	call	_PWM_init	;wreg free
  5884                           
  5885                           ;main.c: 77: ContrastPWM_init();
  5886  013A40  EC58  F0B8         	call	_ContrastPWM_init	;wreg free
  5887                           
  5888                           ;main.c: 78: init_LCD();
  5889  013A44  ECE8  F0A6         	call	_init_LCD	;wreg free
  5890                           
  5891                           ;main.c: 79: Init_I2C_Master();
  5892  013A48  ECA8  F0B5         	call	_Init_I2C_Master	;wreg free
  5893                           
  5894                           ;main.c: 80: RTC_INIT();
  5895  013A4C  EC42  F0B8         	call	_RTC_INIT	;wreg free
  5896                           
  5897                           ;main.c: 82: for(ii =0; ii <10;ii++)
  5898  013A50  0E00               	movlw	0
  5899  013A52  0101               	movlb	1	; () banked
  5900  013A54  6FC7               	movwf	main@ii& (0+255),b
  5901  013A56  D022               	goto	L1
  5902  013A58                     l12466:
  5903                           
  5904                           ; BSR set to: 1
  5905                           ;main.c: 83: {
  5906                           ;main.c: 84: LATD |= 0b00000010;
  5907  013A58  828C               	bsf	3980,1,c	;volatile
  5908                           
  5909                           ;main.c: 85: LATD &= ~0b00000100;
  5910  013A5A  948C               	bcf	3980,2,c	;volatile
  5911                           
  5912                           ; BSR set to: 1
  5913                           ;main.c: 86: delayUS(50000);
  5914  013A5C  0E50               	movlw	80
  5915  013A5E  0101               	movlb	1	; () banked
  5916  013A60  6F7C               	movwf	delayUS@US& (0+255),b
  5917  013A62  0EC3               	movlw	195
  5918  013A64  0101               	movlb	1	; () banked
  5919  013A66  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  5920  013A68  0E00               	movlw	0
  5921  013A6A  0101               	movlb	1	; () banked
  5922  013A6C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  5923  013A6E  0E00               	movlw	0
  5924  013A70  0101               	movlb	1	; () banked
  5925  013A72  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  5926  013A74  EC0D  F0B3         	call	_delayUS	;wreg free
  5927                           
  5928                           ;main.c: 87: LATD |= 0b00000100;
  5929  013A78  848C               	bsf	3980,2,c	;volatile
  5930                           
  5931                           ;main.c: 88: LATD &= ~0b00000010;
  5932  013A7A  928C               	bcf	3980,1,c	;volatile
  5933                           
  5934                           ;main.c: 89: delayUS(50000);
  5935  013A7C  0E50               	movlw	80
  5936  013A7E  0101               	movlb	1	; () banked
  5937  013A80  6F7C               	movwf	delayUS@US& (0+255),b
  5938  013A82  0EC3               	movlw	195
  5939  013A84  0101               	movlb	1	; () banked
  5940  013A86  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  5941  013A88  0E00               	movlw	0
  5942  013A8A  0101               	movlb	1	; () banked
  5943  013A8C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  5944  013A8E  0E00               	movlw	0
  5945  013A90  0101               	movlb	1	; () banked
  5946  013A92  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  5947  013A94  EC0D  F0B3         	call	_delayUS	;wreg free
  5948  013A98  0101               	movlb	1	; () banked
  5949  013A9A  2BC7               	incf	main@ii& (0+255),f,b
  5950  013A9C                     L1:
  5951                           
  5952                           ; BSR set to: 1
  5953  013A9C  0E09               	movlw	9
  5954  013A9E  0101               	movlb	1	; () banked
  5955  013AA0  65C7               	cpfsgt	main@ii& (0+255),b
  5956  013AA2  D7DA               	goto	l12466
  5957                           
  5958                           ; BSR set to: 1
  5959                           ;main.c: 90: }
  5960                           ;main.c: 91: SetContrast(65);
  5961                           
  5962                           ; BSR set to: 1
  5963  013AA4  0E41               	movlw	65
  5964  013AA6  EC9E  F0A9         	call	_SetContrast
  5965                           
  5966                           ;main.c: 92: delayUS(20);
  5967  013AAA  0E14               	movlw	20
  5968  013AAC  0101               	movlb	1	; () banked
  5969  013AAE  6F7C               	movwf	delayUS@US& (0+255),b
  5970  013AB0  0E00               	movlw	0
  5971  013AB2  0101               	movlb	1	; () banked
  5972  013AB4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  5973  013AB6  0E00               	movlw	0
  5974  013AB8  0101               	movlb	1	; () banked
  5975  013ABA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  5976  013ABC  0E00               	movlw	0
  5977  013ABE  0101               	movlb	1	; () banked
  5978  013AC0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  5979  013AC2  EC0D  F0B3         	call	_delayUS	;wreg free
  5980                           
  5981                           ;main.c: 93: SetLCDcursor(0, 0);
  5982  013AC6  0E00               	movlw	0
  5983  013AC8  0101               	movlb	1	; () banked
  5984  013ACA  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  5985  013ACC  0E00               	movlw	0
  5986  013ACE  EC01  F0B7         	call	_SetLCDcursor
  5987                           
  5988                           ;main.c: 94: LCDPrintString("Starting");
  5989  013AD2  0EFF               	movlw	high STR_6
  5990  013AD4  0101               	movlb	1	; () banked
  5991  013AD6  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  5992  013AD8  0E0E               	movlw	low STR_6
  5993  013ADA  0101               	movlb	1	; () banked
  5994  013ADC  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  5995  013ADE  EC55  F0B2         	call	_LCDPrintString	;wreg free
  5996                           
  5997                           ;main.c: 95: delayUS(100000);
  5998  013AE2  0EA0               	movlw	160
  5999  013AE4  0101               	movlb	1	; () banked
  6000  013AE6  6F7C               	movwf	delayUS@US& (0+255),b
  6001  013AE8  0E86               	movlw	134
  6002  013AEA  0101               	movlb	1	; () banked
  6003  013AEC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6004  013AEE  0E01               	movlw	1
  6005  013AF0  0101               	movlb	1	; () banked
  6006  013AF2  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6007  013AF4  0E00               	movlw	0
  6008  013AF6  0101               	movlb	1	; () banked
  6009  013AF8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6010  013AFA  EC0D  F0B3         	call	_delayUS	;wreg free
  6011                           
  6012                           ;main.c: 96: SetLCDcursor(0, 0);
  6013  013AFE  0E00               	movlw	0
  6014  013B00  0101               	movlb	1	; () banked
  6015  013B02  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6016  013B04  0E00               	movlw	0
  6017  013B06  EC01  F0B7         	call	_SetLCDcursor
  6018                           
  6019                           ;main.c: 97: LCDPrintString("Starting.");
  6020  013B0A  0EFE               	movlw	high STR_7
  6021  013B0C  0101               	movlb	1	; () banked
  6022  013B0E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6023  013B10  0EA1               	movlw	low STR_7
  6024  013B12  0101               	movlb	1	; () banked
  6025  013B14  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  6026  013B16  EC55  F0B2         	call	_LCDPrintString	;wreg free
  6027                           
  6028                           ;main.c: 98: delayUS(100000);
  6029  013B1A  0EA0               	movlw	160
  6030  013B1C  0101               	movlb	1	; () banked
  6031  013B1E  6F7C               	movwf	delayUS@US& (0+255),b
  6032  013B20  0E86               	movlw	134
  6033  013B22  0101               	movlb	1	; () banked
  6034  013B24  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6035  013B26  0E01               	movlw	1
  6036  013B28  0101               	movlb	1	; () banked
  6037  013B2A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6038  013B2C  0E00               	movlw	0
  6039  013B2E  0101               	movlb	1	; () banked
  6040  013B30  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6041  013B32  EC0D  F0B3         	call	_delayUS	;wreg free
  6042                           
  6043                           ;main.c: 99: SetLCDcursor(0, 0);
  6044  013B36  0E00               	movlw	0
  6045  013B38  0101               	movlb	1	; () banked
  6046  013B3A  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6047  013B3C  0E00               	movlw	0
  6048  013B3E  EC01  F0B7         	call	_SetLCDcursor
  6049                           
  6050                           ;main.c: 100: LCDPrintString("Starting..");
  6051  013B42  0EFE               	movlw	high STR_8
  6052  013B44  0101               	movlb	1	; () banked
  6053  013B46  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6054  013B48  0E28               	movlw	low STR_8
  6055  013B4A  0101               	movlb	1	; () banked
  6056  013B4C  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  6057  013B4E  EC55  F0B2         	call	_LCDPrintString	;wreg free
  6058                           
  6059                           ;main.c: 101: delayUS(100000);
  6060  013B52  0EA0               	movlw	160
  6061  013B54  0101               	movlb	1	; () banked
  6062  013B56  6F7C               	movwf	delayUS@US& (0+255),b
  6063  013B58  0E86               	movlw	134
  6064  013B5A  0101               	movlb	1	; () banked
  6065  013B5C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6066  013B5E  0E01               	movlw	1
  6067  013B60  0101               	movlb	1	; () banked
  6068  013B62  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6069  013B64  0E00               	movlw	0
  6070  013B66  0101               	movlb	1	; () banked
  6071  013B68  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6072  013B6A  EC0D  F0B3         	call	_delayUS	;wreg free
  6073                           
  6074                           ;main.c: 102: SetLCDcursor(0, 0);
  6075  013B6E  0E00               	movlw	0
  6076  013B70  0101               	movlb	1	; () banked
  6077  013B72  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6078  013B74  0E00               	movlw	0
  6079  013B76  EC01  F0B7         	call	_SetLCDcursor
  6080                           
  6081                           ;main.c: 103: LCDPrintString("Starting...");
  6082  013B7A  0EFD               	movlw	high STR_9
  6083  013B7C  0101               	movlb	1	; () banked
  6084  013B7E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6085  013B80  0EE5               	movlw	low STR_9
  6086  013B82  0101               	movlb	1	; () banked
  6087  013B84  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  6088  013B86  EC55  F0B2         	call	_LCDPrintString	;wreg free
  6089                           
  6090                           ;main.c: 104: delayUS(100000);
  6091  013B8A  0EA0               	movlw	160
  6092  013B8C  0101               	movlb	1	; () banked
  6093  013B8E  6F7C               	movwf	delayUS@US& (0+255),b
  6094  013B90  0E86               	movlw	134
  6095  013B92  0101               	movlb	1	; () banked
  6096  013B94  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6097  013B96  0E01               	movlw	1
  6098  013B98  0101               	movlb	1	; () banked
  6099  013B9A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6100  013B9C  0E00               	movlw	0
  6101  013B9E  0101               	movlb	1	; () banked
  6102  013BA0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6103  013BA2  EC0D  F0B3         	call	_delayUS	;wreg free
  6104                           
  6105                           ;main.c: 105: SetLCDcursor(0, 0);
  6106  013BA6  0E00               	movlw	0
  6107  013BA8  0101               	movlb	1	; () banked
  6108  013BAA  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6109  013BAC  0E00               	movlw	0
  6110  013BAE  EC01  F0B7         	call	_SetLCDcursor
  6111                           
  6112                           ;main.c: 106: LCDPrintString("Starting....");
  6113  013BB2  0EFD               	movlw	high STR_10
  6114  013BB4  0101               	movlb	1	; () banked
  6115  013BB6  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6116  013BB8  0EA8               	movlw	low STR_10
  6117  013BBA  0101               	movlb	1	; () banked
  6118  013BBC  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  6119  013BBE  EC55  F0B2         	call	_LCDPrintString	;wreg free
  6120                           
  6121                           ;main.c: 107: delayUS(100000);
  6122  013BC2  0EA0               	movlw	160
  6123  013BC4  0101               	movlb	1	; () banked
  6124  013BC6  6F7C               	movwf	delayUS@US& (0+255),b
  6125  013BC8  0E86               	movlw	134
  6126  013BCA  0101               	movlb	1	; () banked
  6127  013BCC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6128  013BCE  0E01               	movlw	1
  6129  013BD0  0101               	movlb	1	; () banked
  6130  013BD2  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6131  013BD4  0E00               	movlw	0
  6132  013BD6  0101               	movlb	1	; () banked
  6133  013BD8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6134  013BDA  EC0D  F0B3         	call	_delayUS	;wreg free
  6135                           
  6136                           ;main.c: 108: SetLCDcursor(0, 0);
  6137  013BDE  0E00               	movlw	0
  6138  013BE0  0101               	movlb	1	; () banked
  6139  013BE2  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6140  013BE4  0E00               	movlw	0
  6141  013BE6  EC01  F0B7         	call	_SetLCDcursor
  6142                           
  6143                           ;main.c: 109: LCDPrintString("Starting.....");
  6144  013BEA  0EFD               	movlw	high STR_11
  6145  013BEC  0101               	movlb	1	; () banked
  6146  013BEE  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6147  013BF0  0E18               	movlw	low STR_11
  6148  013BF2  0101               	movlb	1	; () banked
  6149  013BF4  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  6150  013BF6  EC55  F0B2         	call	_LCDPrintString	;wreg free
  6151                           
  6152                           ;main.c: 110: delayUS(100000);
  6153  013BFA  0EA0               	movlw	160
  6154  013BFC  0101               	movlb	1	; () banked
  6155  013BFE  6F7C               	movwf	delayUS@US& (0+255),b
  6156  013C00  0E86               	movlw	134
  6157  013C02  0101               	movlb	1	; () banked
  6158  013C04  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6159  013C06  0E01               	movlw	1
  6160  013C08  0101               	movlb	1	; () banked
  6161  013C0A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6162  013C0C  0E00               	movlw	0
  6163  013C0E  0101               	movlb	1	; () banked
  6164  013C10  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6165  013C12  EC0D  F0B3         	call	_delayUS	;wreg free
  6166                           
  6167                           ;main.c: 111: SetLCDcursor(0, 0);
  6168  013C16  0E00               	movlw	0
  6169  013C18  0101               	movlb	1	; () banked
  6170  013C1A  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6171  013C1C  0E00               	movlw	0
  6172  013C1E  EC01  F0B7         	call	_SetLCDcursor
  6173                           
  6174                           ;main.c: 112: LCDPrintString("Starting......");
  6175  013C22  0EFC               	movlw	high STR_12
  6176  013C24  0101               	movlb	1	; () banked
  6177  013C26  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6178  013C28  0E8B               	movlw	low STR_12
  6179  013C2A  0101               	movlb	1	; () banked
  6180  013C2C  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  6181  013C2E  EC55  F0B2         	call	_LCDPrintString	;wreg free
  6182                           
  6183                           ;main.c: 113: delayUS(100000);
  6184  013C32  0EA0               	movlw	160
  6185  013C34  0101               	movlb	1	; () banked
  6186  013C36  6F7C               	movwf	delayUS@US& (0+255),b
  6187  013C38  0E86               	movlw	134
  6188  013C3A  0101               	movlb	1	; () banked
  6189  013C3C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6190  013C3E  0E01               	movlw	1
  6191  013C40  0101               	movlb	1	; () banked
  6192  013C42  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6193  013C44  0E00               	movlw	0
  6194  013C46  0101               	movlb	1	; () banked
  6195  013C48  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6196  013C4A  EC0D  F0B3         	call	_delayUS	;wreg free
  6197                           
  6198                           ;main.c: 114: SetLCDcursor(0, 0);
  6199  013C4E  0E00               	movlw	0
  6200  013C50  0101               	movlb	1	; () banked
  6201  013C52  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6202  013C54  0E00               	movlw	0
  6203  013C56  EC01  F0B7         	call	_SetLCDcursor
  6204                           
  6205                           ;main.c: 115: LCDPrintString("Starting.......");
  6206  013C5A  0EFB               	movlw	high STR_13
  6207  013C5C  0101               	movlb	1	; () banked
  6208  013C5E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6209  013C60  0EB8               	movlw	low STR_13
  6210  013C62  0101               	movlb	1	; () banked
  6211  013C64  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  6212  013C66  EC55  F0B2         	call	_LCDPrintString	;wreg free
  6213                           
  6214                           ;main.c: 116: delayUS(100000);
  6215  013C6A  0EA0               	movlw	160
  6216  013C6C  0101               	movlb	1	; () banked
  6217  013C6E  6F7C               	movwf	delayUS@US& (0+255),b
  6218  013C70  0E86               	movlw	134
  6219  013C72  0101               	movlb	1	; () banked
  6220  013C74  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6221  013C76  0E01               	movlw	1
  6222  013C78  0101               	movlb	1	; () banked
  6223  013C7A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6224  013C7C  0E00               	movlw	0
  6225  013C7E  0101               	movlb	1	; () banked
  6226  013C80  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6227  013C82  EC0D  F0B3         	call	_delayUS	;wreg free
  6228                           
  6229                           ;main.c: 117: SetLCDcursor(0, 0);
  6230  013C86  0E00               	movlw	0
  6231  013C88  0101               	movlb	1	; () banked
  6232  013C8A  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6233  013C8C  0E00               	movlw	0
  6234  013C8E  EC01  F0B7         	call	_SetLCDcursor
  6235                           
  6236                           ;main.c: 118: LCDPrintString("Starting........");
  6237  013C92  0EFA               	movlw	high STR_14
  6238  013C94  0101               	movlb	1	; () banked
  6239  013C96  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6240  013C98  0E67               	movlw	low STR_14
  6241  013C9A  0101               	movlb	1	; () banked
  6242  013C9C  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  6243  013C9E  EC55  F0B2         	call	_LCDPrintString	;wreg free
  6244                           
  6245                           ;main.c: 119: delayUS(100000);
  6246  013CA2  0EA0               	movlw	160
  6247  013CA4  0101               	movlb	1	; () banked
  6248  013CA6  6F7C               	movwf	delayUS@US& (0+255),b
  6249  013CA8  0E86               	movlw	134
  6250  013CAA  0101               	movlb	1	; () banked
  6251  013CAC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6252  013CAE  0E01               	movlw	1
  6253  013CB0  0101               	movlb	1	; () banked
  6254  013CB2  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6255  013CB4  0E00               	movlw	0
  6256  013CB6  0101               	movlb	1	; () banked
  6257  013CB8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6258  013CBA  EC0D  F0B3         	call	_delayUS	;wreg free
  6259                           
  6260                           ;main.c: 120: SetLCDcursor(1, 0);
  6261  013CBE  0E00               	movlw	0
  6262  013CC0  0101               	movlb	1	; () banked
  6263  013CC2  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6264  013CC4  0E01               	movlw	1
  6265  013CC6  EC01  F0B7         	call	_SetLCDcursor
  6266                           
  6267                           ;main.c: 121: LCDPrintString("Enter '?'");
  6268  013CCA  0EFE               	movlw	high STR_15
  6269  013CCC  0101               	movlb	1	; () banked
  6270  013CCE  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6271  013CD0  0E97               	movlw	low STR_15
  6272  013CD2  0101               	movlb	1	; () banked
  6273  013CD4  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  6274  013CD6  EC55  F0B2         	call	_LCDPrintString	;wreg free
  6275                           
  6276                           ;main.c: 122: delayUS(100000);
  6277  013CDA  0EA0               	movlw	160
  6278  013CDC  0101               	movlb	1	; () banked
  6279  013CDE  6F7C               	movwf	delayUS@US& (0+255),b
  6280  013CE0  0E86               	movlw	134
  6281  013CE2  0101               	movlb	1	; () banked
  6282  013CE4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6283  013CE6  0E01               	movlw	1
  6284  013CE8  0101               	movlb	1	; () banked
  6285  013CEA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6286  013CEC  0E00               	movlw	0
  6287  013CEE  0101               	movlb	1	; () banked
  6288  013CF0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6289  013CF2  EC0D  F0B3         	call	_delayUS	;wreg free
  6290                           
  6291                           ;main.c: 123: UARTstring("\r\nEnter '?' for Help Menu\r\n>");
  6292  013CF6  0EF5               	movlw	high STR_16
  6293  013CF8  0101               	movlb	1	; () banked
  6294  013CFA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  6295  013CFC  0ECA               	movlw	low STR_16
  6296  013CFE  0101               	movlb	1	; () banked
  6297  013D00  6F87               	movwf	UARTstring@data& (0+255),b
  6298  013D02  EC15  F0AE         	call	_UARTstring	;wreg free
  6299                           
  6300                           ;main.c: 125: for(count =100; count >0; count-=5)
  6301  013D06  0E64               	movlw	100
  6302  013D08  0101               	movlb	1	; () banked
  6303  013D0A  6FC8               	movwf	main@count& (0+255),b
  6304  013D0C  D015               	goto	L2
  6305  013D0E                     l12528:
  6306                           
  6307                           ; BSR set to: 1
  6308                           ;main.c: 126: {
  6309                           ;main.c: 127: SetDuty(count);
  6310  013D0E  0101               	movlb	1	; () banked
  6311  013D10  51C8               	movf	main@count& (0+255),w,b
  6312  013D12  EC3C  F0AC         	call	_SetDuty
  6313                           
  6314                           ;main.c: 128: delayUS(50000);
  6315  013D16  0E50               	movlw	80
  6316  013D18  0101               	movlb	1	; () banked
  6317  013D1A  6F7C               	movwf	delayUS@US& (0+255),b
  6318  013D1C  0EC3               	movlw	195
  6319  013D1E  0101               	movlb	1	; () banked
  6320  013D20  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6321  013D22  0E00               	movlw	0
  6322  013D24  0101               	movlb	1	; () banked
  6323  013D26  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6324  013D28  0E00               	movlw	0
  6325  013D2A  0101               	movlb	1	; () banked
  6326  013D2C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6327  013D2E  EC0D  F0B3         	call	_delayUS	;wreg free
  6328  013D32  0E05               	movlw	5
  6329  013D34  0101               	movlb	1	; () banked
  6330  013D36  5FC8               	subwf	main@count& (0+255),f,b
  6331  013D38                     L2:
  6332                           
  6333                           ; BSR set to: 1
  6334  013D38  0101               	movlb	1	; () banked
  6335  013D3A  67C8               	tstfsz	main@count& (0+255),b
  6336  013D3C  D7E8               	goto	l12528
  6337                           
  6338                           ; BSR set to: 1
  6339                           ;main.c: 129: }
  6340                           ;main.c: 131: LATD &= ~(0b00000010+0b00000100);
  6341                           
  6342                           ; BSR set to: 1
  6343  013D3E  0EF9               	movlw	249
  6344  013D40  168C               	andwf	3980,f,c	;volatile
  6345                           
  6346                           ; BSR set to: 1
  6347                           ;main.c: 132: ReadUSART();
  6348  013D42  EC34  F0B7         	call	_ReadUSART	;wreg free
  6349                           
  6350                           ;main.c: 133: ReadUSART();
  6351  013D46  EC34  F0B7         	call	_ReadUSART	;wreg free
  6352                           
  6353                           ;main.c: 134: ReadUSART();
  6354  013D4A  EC34  F0B7         	call	_ReadUSART	;wreg free
  6355                           
  6356                           ;main.c: 136: ClearLCD();
  6357  013D4E  EC0D  F0B8         	call	_ClearLCD	;wreg free
  6358                           
  6359                           ;main.c: 137: SetLCDcursor(0, 0);
  6360  013D52  0E00               	movlw	0
  6361  013D54  0101               	movlb	1	; () banked
  6362  013D56  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6363  013D58  0E00               	movlw	0
  6364  013D5A  EC01  F0B7         	call	_SetLCDcursor
  6365                           
  6366                           ;main.c: 138: LCDPrintChar('>');
  6367  013D5E  0E3E               	movlw	62
  6368  013D60  EC25  F0B8         	call	_LCDPrintChar
  6369  013D64                     l12548:
  6370                           
  6371                           ;main.c: 141: {
  6372                           ;main.c: 143: LCDScreenUpdate();
  6373  013D64  ECC6  F097         	call	_LCDScreenUpdate	;wreg free
  6374                           
  6375                           ;main.c: 144: if(Rxdata[0] != 0)
  6376  013D68  0103               	movlb	3	; () banked
  6377  013D6A  5164               	movf	_Rxdata& (0+255),w,b
  6378  013D6C  B4D8               	btfsc	status,2,c
  6379  013D6E  D7FA               	goto	l12548
  6380                           
  6381                           ; BSR set to: 3
  6382                           ;main.c: 145: {
  6383                           ;main.c: 146: if (Rxdata[0] != '\r' && Rxdata[0] != '\n')
  6384  013D70  0103               	movlb	3	; () banked
  6385  013D72  5164               	movf	_Rxdata& (0+255),w,b
  6386  013D74  0A0D               	xorlw	13
  6387  013D76  B4D8               	btfsc	status,2,c
  6388  013D78  D00F               	goto	l12558
  6389                           
  6390                           ; BSR set to: 3
  6391  013D7A  0103               	movlb	3	; () banked
  6392  013D7C  5164               	movf	_Rxdata& (0+255),w,b
  6393  013D7E  0A0A               	xorlw	10
  6394  013D80  B4D8               	btfsc	status,2,c
  6395  013D82  D00A               	goto	l12558
  6396                           
  6397                           ; BSR set to: 3
  6398                           ;main.c: 147: {
  6399                           ;main.c: 148: Command(Rxdata);
  6400  013D84  0103               	movlb	3	; () banked
  6401  013D86  0E03               	movlw	high _Rxdata
  6402  013D88  0101               	movlb	1	; () banked
  6403  013D8A  6FC2               	movwf	(Command@Input+1)& (0+255),b
  6404  013D8C  0103               	movlb	3	; () banked
  6405  013D8E  0E64               	movlw	low _Rxdata
  6406  013D90  0101               	movlb	1	; () banked
  6407  013D92  6FC1               	movwf	Command@Input& (0+255),b
  6408  013D94  EC00  F080         	call	_Command	;wreg free
  6409  013D98                     l12558:
  6410                           
  6411                           ;main.c: 149: }
  6412                           ;main.c: 150: cleanBuffer(Rxdata, 100);
  6413  013D98  0103               	movlb	3	; () banked
  6414  013D9A  0E03               	movlw	high _Rxdata
  6415  013D9C  0101               	movlb	1	; () banked
  6416  013D9E  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  6417  013DA0  0103               	movlb	3	; () banked
  6418  013DA2  0E64               	movlw	low _Rxdata
  6419  013DA4  0101               	movlb	1	; () banked
  6420  013DA6  6F7C               	movwf	cleanBuffer@data& (0+255),b
  6421  013DA8  0E00               	movlw	0
  6422  013DAA  0101               	movlb	1	; () banked
  6423  013DAC  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  6424  013DAE  0E64               	movlw	100
  6425  013DB0  0101               	movlb	1	; () banked
  6426  013DB2  6F7E               	movwf	cleanBuffer@count& (0+255),b
  6427  013DB4  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  6428                           
  6429                           ;main.c: 151: UARTstring("\r\n>");
  6430  013DB8  0EF5               	movlw	high (STR_16+25)
  6431  013DBA  0101               	movlb	1	; () banked
  6432  013DBC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  6433  013DBE  0EE3               	movlw	low (STR_16+25)
  6434  013DC0  0101               	movlb	1	; () banked
  6435  013DC2  6F87               	movwf	UARTstring@data& (0+255),b
  6436  013DC4  EC15  F0AE         	call	_UARTstring	;wreg free
  6437  013DC8  D7CD               	goto	l12548
  6438  013DCA                     __end_of_main:
  6439                           	opt stack 0
  6440                           tblptru	equ	0xFF8
  6441                           tblptrh	equ	0xFF7
  6442                           tblptrl	equ	0xFF6
  6443                           tablat	equ	0xFF5
  6444                           postinc0	equ	0xFEE
  6445                           wreg	equ	0xFE8
  6446                           postdec1	equ	0xFE5
  6447                           fsr1l	equ	0xFE1
  6448                           status	equ	0xFD8
  6449                           
  6450 ;; *************** function _init_LCD *****************
  6451 ;; Defined at:
  6452 ;;		line 66 in file "LCD.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;		None
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;		None               void
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0, cstack
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;Total ram usage:        0 bytes
  6471 ;; Hardware stack levels used:    1
  6472 ;; Hardware stack levels required when called:   10
  6473 ;; This function calls:
  6474 ;;		_ClearLCD
  6475 ;;		_PulseEnablePin
  6476 ;;		_SendLCDbyte
  6477 ;;		_delayUS
  6478 ;; This function is called by:
  6479 ;;		_main
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text1
  6484  014DD0                     __ptext1:
  6485                           	opt stack 0
  6486  014DD0                     _init_LCD:
  6487                           	opt stack 20
  6488                           
  6489                           ;LCD.c: 68: LATD &= ~(0b01000000);
  6490                           
  6491                           ;incstack = 0
  6492  014DD0  9C8C               	bcf	3980,6,c	;volatile
  6493                           
  6494                           ;LCD.c: 69: PulseEnablePin();
  6495  014DD2  ECA9  F0B6         	call	_PulseEnablePin	;wreg free
  6496                           
  6497                           ;LCD.c: 70: LATD &= ~(0b10000000 + 0b00100000);
  6498  014DD6  0E5F               	movlw	95
  6499  014DD8  168C               	andwf	3980,f,c	;volatile
  6500                           
  6501                           ;LCD.c: 71: PulseEnablePin();
  6502  014DDA  ECA9  F0B6         	call	_PulseEnablePin	;wreg free
  6503                           
  6504                           ;LCD.c: 73: SendLCDbyte(0x00, 1);
  6505  014DDE  0E01               	movlw	1
  6506  014DE0  0101               	movlb	1	; () banked
  6507  014DE2  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  6508  014DE4  0E00               	movlw	0
  6509  014DE6  EC65  F0AB         	call	_SendLCDbyte
  6510                           
  6511                           ;LCD.c: 74: delayUS(50000);
  6512  014DEA  0E50               	movlw	80
  6513  014DEC  0101               	movlb	1	; () banked
  6514  014DEE  6F7C               	movwf	delayUS@US& (0+255),b
  6515  014DF0  0EC3               	movlw	195
  6516  014DF2  0101               	movlb	1	; () banked
  6517  014DF4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6518  014DF6  0E00               	movlw	0
  6519  014DF8  0101               	movlb	1	; () banked
  6520  014DFA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6521  014DFC  0E00               	movlw	0
  6522  014DFE  0101               	movlb	1	; () banked
  6523  014E00  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6524  014E02  EC0D  F0B3         	call	_delayUS	;wreg free
  6525                           
  6526                           ;LCD.c: 75: SendLCDbyte(0x00, 0);
  6527  014E06  0E00               	movlw	0
  6528  014E08  0101               	movlb	1	; () banked
  6529  014E0A  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  6530  014E0C  0E00               	movlw	0
  6531  014E0E  EC65  F0AB         	call	_SendLCDbyte
  6532                           
  6533                           ;LCD.c: 76: delayUS(50000);
  6534  014E12  0E50               	movlw	80
  6535  014E14  0101               	movlb	1	; () banked
  6536  014E16  6F7C               	movwf	delayUS@US& (0+255),b
  6537  014E18  0EC3               	movlw	195
  6538  014E1A  0101               	movlb	1	; () banked
  6539  014E1C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6540  014E1E  0E00               	movlw	0
  6541  014E20  0101               	movlb	1	; () banked
  6542  014E22  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6543  014E24  0E00               	movlw	0
  6544  014E26  0101               	movlb	1	; () banked
  6545  014E28  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6546  014E2A  EC0D  F0B3         	call	_delayUS	;wreg free
  6547                           
  6548                           ;LCD.c: 78: LATA |= (0b00100000);
  6549  014E2E  8A89               	bsf	3977,5,c	;volatile
  6550                           
  6551                           ;LCD.c: 79: delayUS(50000);
  6552  014E30  0E50               	movlw	80
  6553  014E32  0101               	movlb	1	; () banked
  6554  014E34  6F7C               	movwf	delayUS@US& (0+255),b
  6555  014E36  0EC3               	movlw	195
  6556  014E38  0101               	movlb	1	; () banked
  6557  014E3A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6558  014E3C  0E00               	movlw	0
  6559  014E3E  0101               	movlb	1	; () banked
  6560  014E40  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6561  014E42  0E00               	movlw	0
  6562  014E44  0101               	movlb	1	; () banked
  6563  014E46  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6564  014E48  EC0D  F0B3         	call	_delayUS	;wreg free
  6565                           
  6566                           ;LCD.c: 80: PulseEnablePin();
  6567  014E4C  ECA9  F0B6         	call	_PulseEnablePin	;wreg free
  6568                           
  6569                           ;LCD.c: 81: delayUS(50000);
  6570  014E50  0E50               	movlw	80
  6571  014E52  0101               	movlb	1	; () banked
  6572  014E54  6F7C               	movwf	delayUS@US& (0+255),b
  6573  014E56  0EC3               	movlw	195
  6574  014E58  0101               	movlb	1	; () banked
  6575  014E5A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6576  014E5C  0E00               	movlw	0
  6577  014E5E  0101               	movlb	1	; () banked
  6578  014E60  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6579  014E62  0E00               	movlw	0
  6580  014E64  0101               	movlb	1	; () banked
  6581  014E66  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6582  014E68  EC0D  F0B3         	call	_delayUS	;wreg free
  6583                           
  6584                           ;LCD.c: 85: SendLCDbyte(0x28, 0);
  6585  014E6C  0E00               	movlw	0
  6586  014E6E  0101               	movlb	1	; () banked
  6587  014E70  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  6588  014E72  0E28               	movlw	40
  6589  014E74  EC65  F0AB         	call	_SendLCDbyte
  6590                           
  6591                           ;LCD.c: 86: delayUS(50000);
  6592  014E78  0E50               	movlw	80
  6593  014E7A  0101               	movlb	1	; () banked
  6594  014E7C  6F7C               	movwf	delayUS@US& (0+255),b
  6595  014E7E  0EC3               	movlw	195
  6596  014E80  0101               	movlb	1	; () banked
  6597  014E82  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6598  014E84  0E00               	movlw	0
  6599  014E86  0101               	movlb	1	; () banked
  6600  014E88  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6601  014E8A  0E00               	movlw	0
  6602  014E8C  0101               	movlb	1	; () banked
  6603  014E8E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6604  014E90  EC0D  F0B3         	call	_delayUS	;wreg free
  6605                           
  6606                           ;LCD.c: 89: SendLCDbyte(0x0C, 0);
  6607  014E94  0E00               	movlw	0
  6608  014E96  0101               	movlb	1	; () banked
  6609  014E98  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  6610  014E9A  0E0C               	movlw	12
  6611  014E9C  EC65  F0AB         	call	_SendLCDbyte
  6612                           
  6613                           ;LCD.c: 90: delayUS(50000);
  6614  014EA0  0E50               	movlw	80
  6615  014EA2  0101               	movlb	1	; () banked
  6616  014EA4  6F7C               	movwf	delayUS@US& (0+255),b
  6617  014EA6  0EC3               	movlw	195
  6618  014EA8  0101               	movlb	1	; () banked
  6619  014EAA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6620  014EAC  0E00               	movlw	0
  6621  014EAE  0101               	movlb	1	; () banked
  6622  014EB0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6623  014EB2  0E00               	movlw	0
  6624  014EB4  0101               	movlb	1	; () banked
  6625  014EB6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6626  014EB8  EC0D  F0B3         	call	_delayUS	;wreg free
  6627                           
  6628                           ;LCD.c: 93: SendLCDbyte(0x06, 0);
  6629  014EBC  0E00               	movlw	0
  6630  014EBE  0101               	movlb	1	; () banked
  6631  014EC0  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  6632  014EC2  0E06               	movlw	6
  6633  014EC4  EC65  F0AB         	call	_SendLCDbyte
  6634                           
  6635                           ;LCD.c: 94: delayUS(50000);
  6636  014EC8  0E50               	movlw	80
  6637  014ECA  0101               	movlb	1	; () banked
  6638  014ECC  6F7C               	movwf	delayUS@US& (0+255),b
  6639  014ECE  0EC3               	movlw	195
  6640  014ED0  0101               	movlb	1	; () banked
  6641  014ED2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6642  014ED4  0E00               	movlw	0
  6643  014ED6  0101               	movlb	1	; () banked
  6644  014ED8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6645  014EDA  0E00               	movlw	0
  6646  014EDC  0101               	movlb	1	; () banked
  6647  014EDE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6648  014EE0  EC0D  F0B3         	call	_delayUS	;wreg free
  6649                           
  6650                           ;LCD.c: 96: ClearLCD();
  6651  014EE4  EC0D  F0B8         	call	_ClearLCD	;wreg free
  6652                           
  6653                           ;LCD.c: 97: delayUS(50000);
  6654  014EE8  0E50               	movlw	80
  6655  014EEA  0101               	movlb	1	; () banked
  6656  014EEC  6F7C               	movwf	delayUS@US& (0+255),b
  6657  014EEE  0EC3               	movlw	195
  6658  014EF0  0101               	movlb	1	; () banked
  6659  014EF2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6660  014EF4  0E00               	movlw	0
  6661  014EF6  0101               	movlb	1	; () banked
  6662  014EF8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6663  014EFA  0E00               	movlw	0
  6664  014EFC  0101               	movlb	1	; () banked
  6665  014EFE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6666  014F00  EC0D  F0B3         	call	_delayUS	;wreg free
  6667  014F04  0012               	return	
  6668  014F06                     __end_of_init_LCD:
  6669                           	opt stack 0
  6670                           tblptru	equ	0xFF8
  6671                           tblptrh	equ	0xFF7
  6672                           tblptrl	equ	0xFF6
  6673                           tablat	equ	0xFF5
  6674                           postinc0	equ	0xFEE
  6675                           wreg	equ	0xFE8
  6676                           postdec1	equ	0xFE5
  6677                           fsr1l	equ	0xFE1
  6678                           status	equ	0xFD8
  6679                           
  6680 ;; *************** function _RTC_INIT *****************
  6681 ;; Defined at:
  6682 ;;		line 57 in file "RTC.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;		None
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;		None               void
  6689 ;; Registers used:
  6690 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:   10
  6703 ;; This function calls:
  6704 ;;		_InternalADC_Read
  6705 ;;		_RTC_Clock_Enable
  6706 ;;		_RTC_TIME_NONMilitary
  6707 ;; This function is called by:
  6708 ;;		_main
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text2
  6713  017084                     __ptext2:
  6714                           	opt stack 0
  6715  017084                     _RTC_INIT:
  6716                           	opt stack 20
  6717                           
  6718                           ;RTC.c: 59: RTC_Clock_Enable();
  6719                           
  6720                           ;incstack = 0
  6721  017084  EC66  F0B6         	call	_RTC_Clock_Enable	;wreg free
  6722                           
  6723                           ;RTC.c: 60: RTC_TIME_NONMilitary();
  6724  017088  EC97  F0B1         	call	_RTC_TIME_NONMilitary	;wreg free
  6725                           
  6726                           ;RTC.c: 61: InternalADC_Read(2);
  6727  01708C  0E02               	movlw	2
  6728  01708E  EC22  F0B4         	call	_InternalADC_Read
  6729  017092  0012               	return	
  6730  017094                     __end_of_RTC_INIT:
  6731                           	opt stack 0
  6732                           tblptru	equ	0xFF8
  6733                           tblptrh	equ	0xFF7
  6734                           tblptrl	equ	0xFF6
  6735                           tablat	equ	0xFF5
  6736                           postinc0	equ	0xFEE
  6737                           wreg	equ	0xFE8
  6738                           postdec1	equ	0xFE5
  6739                           fsr1l	equ	0xFE1
  6740                           status	equ	0xFD8
  6741                           
  6742 ;; *************** function _RTC_TIME_NONMilitary *****************
  6743 ;; Defined at:
  6744 ;;		line 89 in file "RTC.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;		None
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;  temphours       2   27[BANK1 ] int 
  6749 ;;  Error           2   25[BANK1 ] int 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;		None               void
  6752 ;; Registers used:
  6753 ;;		wreg, status,2, status,0, prodl, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6763 ;;Total ram usage:        5 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    9
  6766 ;; This function calls:
  6767 ;;		_I2C_Read_At_Address
  6768 ;;		_I2C_Write_At_Address
  6769 ;;		_ResetI2C
  6770 ;; This function is called by:
  6771 ;;		_RTC_INIT
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           	psect	text3
  6776  01632E                     __ptext3:
  6777                           	opt stack 0
  6778  01632E                     _RTC_TIME_NONMilitary:
  6779                           	opt stack 20
  6780                           
  6781                           ;RTC.c: 91: int temphours = 0;
  6782                           
  6783                           ;incstack = 0
  6784  01632E  0E00               	movlw	0
  6785  016330  0101               	movlb	1	; () banked
  6786  016332  6F8A               	movwf	(RTC_TIME_NONMilitary@temphours+1)& (0+255),b
  6787  016334  0E00               	movlw	0
  6788  016336  0101               	movlb	1	; () banked
  6789  016338  6F89               	movwf	RTC_TIME_NONMilitary@temphours& (0+255),b
  6790                           
  6791                           ; BSR set to: 1
  6792                           ;RTC.c: 92: int Error = -1;
  6793  01633A  0101               	movlb	1	; () banked
  6794  01633C  6987               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  6795  01633E  0101               	movlb	1	; () banked
  6796  016340  6988               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  6797                           
  6798                           ; BSR set to: 1
  6799                           ;RTC.c: 94: temphours = I2C_Read_At_Address(0b1101000, 0x02);
  6800  016342  0E02               	movlw	2
  6801  016344  0101               	movlb	1	; () banked
  6802  016346  6F7F               	movwf	I2C_Read_At_Address@Register& (0+255),b
  6803  016348  0E68               	movlw	104
  6804  01634A  EC83  F0A7         	call	_I2C_Read_At_Address
  6805  01634E  0101               	movlb	1	; () banked
  6806  016350  C17F  F189         	movff	?_I2C_Read_At_Address,RTC_TIME_NONMilitary@temphours
  6807  016354  0101               	movlb	1	; () banked
  6808  016356  C180  F18A         	movff	?_I2C_Read_At_Address+1,RTC_TIME_NONMilitary@temphours+1
  6809                           
  6810                           ; BSR set to: 1
  6811                           ;RTC.c: 95: if(temphours >= 0)
  6812  01635A  0101               	movlb	1	; () banked
  6813  01635C  BF8A               	btfsc	(RTC_TIME_NONMilitary@temphours+1)& (0+255),7,b
  6814  01635E  D016               	goto	l1016
  6815                           
  6816                           ; BSR set to: 1
  6817                           ;RTC.c: 96: {
  6818                           ;RTC.c: 97: if((temphours & 0x40) == 0)
  6819  016360  0101               	movlb	1	; () banked
  6820  016362  BD89               	btfsc	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  6821  016364  D017               	goto	l11340
  6822                           
  6823                           ; BSR set to: 1
  6824                           ;RTC.c: 98: {
  6825                           ;RTC.c: 99: temphours |= 0x40;
  6826  016366  0101               	movlb	1	; () banked
  6827  016368  8D89               	bsf	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  6828                           
  6829                           ; BSR set to: 1
  6830                           ;RTC.c: 100: Error = I2C_Write_At_Address( 0b1101000, 0x02, temphours );
  6831  01636A  0E02               	movlw	2
  6832  01636C  0101               	movlb	1	; () banked
  6833  01636E  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
  6834  016370  C189  F180         	movff	RTC_TIME_NONMilitary@temphours,I2C_Write_At_Address@data
  6835  016374  0E68               	movlw	104
  6836  016376  ECBD  F0AD         	call	_I2C_Write_At_Address
  6837  01637A  0101               	movlb	1	; () banked
  6838  01637C  6F86               	movwf	??_RTC_TIME_NONMilitary& (0+255),b
  6839  01637E  0101               	movlb	1	; () banked
  6840  016380  5186               	movf	??_RTC_TIME_NONMilitary& (0+255),w,b
  6841  016382  0101               	movlb	1	; () banked
  6842  016384  6F87               	movwf	RTC_TIME_NONMilitary@Error& (0+255),b
  6843  016386  0101               	movlb	1	; () banked
  6844  016388  6B88               	clrf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  6845  01638A  D004               	goto	l11340
  6846  01638C                     l1016:
  6847                           
  6848                           ; BSR set to: 1
  6849                           ;RTC.c: 103: else
  6850                           ;RTC.c: 104: {
  6851                           ;RTC.c: 105: Error = -1;
  6852  01638C  0101               	movlb	1	; () banked
  6853  01638E  6987               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  6854  016390  0101               	movlb	1	; () banked
  6855  016392  6988               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  6856  016394                     l11340:
  6857                           
  6858                           ; BSR set to: 1
  6859                           ;RTC.c: 106: }
  6860                           ;RTC.c: 107: if(Error < 0 )
  6861  016394  0101               	movlb	1	; () banked
  6862  016396  5188               	movf	(RTC_TIME_NONMilitary@Error+1)& (0+255),w,b
  6863  016398  0A80               	xorlw	128
  6864  01639A  6EF3               	movwf	prodl,c
  6865  01639C  0E80               	movlw	128
  6866  01639E  5CF3               	subwf	prodl,w,c
  6867  0163A0  0E00               	movlw	0
  6868  0163A2  B4D8               	btfsc	status,2,c
  6869  0163A4  5D87               	subwf	RTC_TIME_NONMilitary@Error& (0+255),w,b
  6870  0163A6  B0D8               	btfsc	status,0,c
  6871  0163A8  0012               	return	
  6872                           
  6873                           ; BSR set to: 1
  6874                           ;RTC.c: 108: {
  6875                           ;RTC.c: 109: ResetI2C();
  6876  0163AA  ECBF  F0B7         	call	_ResetI2C	;wreg free
  6877  0163AE  0012               	return	
  6878  0163B0                     __end_of_RTC_TIME_NONMilitary:
  6879                           	opt stack 0
  6880                           tblptru	equ	0xFF8
  6881                           tblptrh	equ	0xFF7
  6882                           tblptrl	equ	0xFF6
  6883                           tablat	equ	0xFF5
  6884                           prodl	equ	0xFF3
  6885                           postinc0	equ	0xFEE
  6886                           wreg	equ	0xFE8
  6887                           postdec1	equ	0xFE5
  6888                           fsr1l	equ	0xFE1
  6889                           status	equ	0xFD8
  6890                           
  6891 ;; *************** function _RTC_Clock_Enable *****************
  6892 ;; Defined at:
  6893 ;;		line 70 in file "RTC.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;		None
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;  tempSeconds     2   25[BANK1 ] int 
  6898 ;;  Error           1   24[BANK1 ] unsigned char 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;		None               void
  6901 ;; Registers used:
  6902 ;;		wreg, status,2, status,0, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6909 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;Total ram usage:        3 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:    9
  6915 ;; This function calls:
  6916 ;;		_I2C_Read_At_Address
  6917 ;;		_I2C_Write_At_Address
  6918 ;;		_ResetI2C
  6919 ;; This function is called by:
  6920 ;;		_RTC_INIT
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text4
  6925  016CCC                     __ptext4:
  6926                           	opt stack 0
  6927  016CCC                     _RTC_Clock_Enable:
  6928                           	opt stack 20
  6929                           
  6930                           ;RTC.c: 72: int tempSeconds =0;
  6931                           
  6932                           ;incstack = 0
  6933  016CCC  0E00               	movlw	0
  6934  016CCE  0101               	movlb	1	; () banked
  6935  016CD0  6F88               	movwf	(RTC_Clock_Enable@tempSeconds+1)& (0+255),b
  6936  016CD2  0E00               	movlw	0
  6937  016CD4  0101               	movlb	1	; () banked
  6938  016CD6  6F87               	movwf	RTC_Clock_Enable@tempSeconds& (0+255),b
  6939                           
  6940                           ;RTC.c: 73: char Error=0;
  6941  016CD8  0E00               	movlw	0
  6942  016CDA  0101               	movlb	1	; () banked
  6943  016CDC  6F86               	movwf	RTC_Clock_Enable@Error& (0+255),b
  6944                           
  6945                           ; BSR set to: 1
  6946                           ;RTC.c: 75: tempSeconds = I2C_Read_At_Address(0b1101000, 0x00);
  6947  016CDE  0E00               	movlw	0
  6948  016CE0  0101               	movlb	1	; () banked
  6949  016CE2  6F7F               	movwf	I2C_Read_At_Address@Register& (0+255),b
  6950  016CE4  0E68               	movlw	104
  6951  016CE6  EC83  F0A7         	call	_I2C_Read_At_Address
  6952  016CEA  0101               	movlb	1	; () banked
  6953  016CEC  C17F  F187         	movff	?_I2C_Read_At_Address,RTC_Clock_Enable@tempSeconds
  6954  016CF0  0101               	movlb	1	; () banked
  6955  016CF2  C180  F188         	movff	?_I2C_Read_At_Address+1,RTC_Clock_Enable@tempSeconds+1
  6956                           
  6957                           ; BSR set to: 1
  6958                           ;RTC.c: 76: Error = I2C_Write_At_Address( 0b1101000, 0x00, (tempSeconds & 0x7F) );
  6959  016CF6  0E00               	movlw	0
  6960  016CF8  0101               	movlb	1	; () banked
  6961  016CFA  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
  6962  016CFC  0101               	movlb	1	; () banked
  6963  016CFE  5187               	movf	RTC_Clock_Enable@tempSeconds& (0+255),w,b
  6964  016D00  0B7F               	andlw	127
  6965  016D02  0101               	movlb	1	; () banked
  6966  016D04  6F80               	movwf	I2C_Write_At_Address@data& (0+255),b
  6967  016D06  0E68               	movlw	104
  6968  016D08  ECBD  F0AD         	call	_I2C_Write_At_Address
  6969  016D0C  0101               	movlb	1	; () banked
  6970  016D0E  6F86               	movwf	RTC_Clock_Enable@Error& (0+255),b
  6971                           
  6972                           ;RTC.c: 78: if(Error < 0 )
  6973  016D10  0012               	return	
  6974  016D12                     __end_of_RTC_Clock_Enable:
  6975                           	opt stack 0
  6976                           tblptru	equ	0xFF8
  6977                           tblptrh	equ	0xFF7
  6978                           tblptrl	equ	0xFF6
  6979                           tablat	equ	0xFF5
  6980                           prodl	equ	0xFF3
  6981                           postinc0	equ	0xFEE
  6982                           wreg	equ	0xFE8
  6983                           postdec1	equ	0xFE5
  6984                           fsr1l	equ	0xFE1
  6985                           status	equ	0xFD8
  6986                           
  6987 ;; *************** function _I2C_Read_At_Address *****************
  6988 ;; Defined at:
  6989 ;;		line 224 in file "I2C.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  I2Caddress      1    wreg     unsigned char 
  6992 ;;  Register        1   17[BANK1 ] unsigned char 
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;  I2Caddress      1   19[BANK1 ] unsigned char 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  2   17[BANK1 ] int 
  6997 ;; Registers used:
  6998 ;;		wreg, status,2, status,0, cstack
  6999 ;; Tracked objects:
  7000 ;;		On entry : 0/0
  7001 ;;		On exit  : 0/0
  7002 ;;		Unchanged: 0/0
  7003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7004 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;Total ram usage:        3 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; Hardware stack levels required when called:    8
  7011 ;; This function calls:
  7012 ;;		_IdleI2C
  7013 ;;		_WriteI2C
  7014 ;; This function is called by:
  7015 ;;		_RTC_Clock_Enable
  7016 ;;		_RTC_TIME_NONMilitary
  7017 ;;		_RTC_Clock_Disable
  7018 ;;		_READ_RTC_SECONDS
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text5
  7023  014F06                     __ptext5:
  7024                           	opt stack 0
  7025  014F06                     _I2C_Read_At_Address:
  7026                           	opt stack 20
  7027                           
  7028                           ;incstack = 0
  7029                           ;I2C_Read_At_Address@I2Caddress stored from wreg
  7030  014F06  0101               	movlb	1	; () banked
  7031  014F08  6F81               	movwf	I2C_Read_At_Address@I2Caddress& (0+255),b
  7032                           
  7033                           ; BSR set to: 1
  7034                           ;I2C.c: 226: IdleI2C();
  7035  014F0A  EC39  F0B8         	call	_IdleI2C	;wreg free
  7036                           
  7037                           ;I2C.c: 227: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  7038  014F0E  80C5               	bsf	4037,0,c	;volatile
  7039  014F10                     l1223:
  7040  014F10  B0C5               	btfsc	4037,0,c	;volatile
  7041  014F12  D7FE               	goto	l1223
  7042  014F14                     l1226:
  7043  014F14  B0C5               	btfsc	4037,0,c	;volatile
  7044  014F16  D7FE               	goto	l1226
  7045                           
  7046                           ;I2C.c: 229: if ( PIR2bits.BCLIF )
  7047  014F18  A6A1               	btfss	4001,3,c	;volatile
  7048  014F1A  D005               	goto	l10098
  7049                           
  7050                           ;I2C.c: 230: {
  7051                           ;I2C.c: 231: return ( -1 );
  7052  014F1C  0101               	movlb	1	; () banked
  7053  014F1E  697F               	setf	?_I2C_Read_At_Address& (0+255),b
  7054  014F20  0101               	movlb	1	; () banked
  7055  014F22  6980               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  7056  014F24  0012               	return	
  7057  014F26                     l10098:
  7058                           
  7059                           ;I2C.c: 233: else
  7060                           ;I2C.c: 234: {
  7061                           ;I2C.c: 235: if ( WriteI2C( (I2Caddress << 1 ) & 0xFE ) )
  7062  014F26  0101               	movlb	1	; () banked
  7063  014F28  5181               	movf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  7064  014F2A  0101               	movlb	1	; () banked
  7065  014F2C  2581               	addwf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  7066  014F2E  0BFE               	andlw	254
  7067  014F30  EC0C  F0B1         	call	_WriteI2C
  7068  014F34  0900               	iorlw	0
  7069  014F36  B4D8               	btfsc	status,2,c
  7070  014F38  D00A               	goto	l1232
  7071                           
  7072                           ;I2C.c: 236: {
  7073                           ;I2C.c: 237: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7074  014F3A  84C5               	bsf	4037,2,c	;volatile
  7075  014F3C                     l1233:
  7076  014F3C  B4C5               	btfsc	4037,2,c	;volatile
  7077  014F3E  D7FE               	goto	l1233
  7078                           
  7079                           ;I2C.c: 238: return ( -3 );
  7080  014F40  0EFF               	movlw	255
  7081  014F42  0101               	movlb	1	; () banked
  7082  014F44  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7083  014F46  0EFD               	movlw	253
  7084  014F48  0101               	movlb	1	; () banked
  7085  014F4A  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  7086  014F4C  0012               	return	
  7087  014F4E                     l1232:
  7088                           
  7089                           ;I2C.c: 239: }
  7090                           ;I2C.c: 242: if ( !SSPCON2bits.ACKSTAT )
  7091  014F4E  BCC5               	btfsc	4037,6,c	;volatile
  7092  014F50  D05C               	goto	l1236
  7093                           
  7094                           ;I2C.c: 243: {
  7095                           ;I2C.c: 244: if ( WriteI2C( Register ) )
  7096  014F52  0101               	movlb	1	; () banked
  7097  014F54  517F               	movf	I2C_Read_At_Address@Register& (0+255),w,b
  7098  014F56  EC0C  F0B1         	call	_WriteI2C
  7099  014F5A  0900               	iorlw	0
  7100  014F5C  B4D8               	btfsc	status,2,c
  7101  014F5E  D00A               	goto	l1237
  7102                           
  7103                           ;I2C.c: 245: {
  7104                           ;I2C.c: 246: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7105  014F60  84C5               	bsf	4037,2,c	;volatile
  7106  014F62                     l1238:
  7107  014F62  B4C5               	btfsc	4037,2,c	;volatile
  7108  014F64  D7FE               	goto	l1238
  7109                           
  7110                           ;I2C.c: 247: return ( -3 );
  7111  014F66  0EFF               	movlw	255
  7112  014F68  0101               	movlb	1	; () banked
  7113  014F6A  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7114  014F6C  0EFD               	movlw	253
  7115  014F6E  0101               	movlb	1	; () banked
  7116  014F70  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  7117  014F72  0012               	return	
  7118  014F74                     l1237:
  7119                           
  7120                           ;I2C.c: 248: }
  7121                           ;I2C.c: 251: if ( !SSPCON2bits.ACKSTAT )
  7122  014F74  BCC5               	btfsc	4037,6,c	;volatile
  7123  014F76  D03F               	goto	l1241
  7124                           
  7125                           ;I2C.c: 252: {
  7126                           ;I2C.c: 253: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  7127  014F78  82C5               	bsf	4037,1,c	;volatile
  7128  014F7A                     l1242:
  7129  014F7A  B2C5               	btfsc	4037,1,c	;volatile
  7130  014F7C  D7FE               	goto	l1242
  7131  014F7E                     l1245:
  7132  014F7E  B2C5               	btfsc	4037,1,c	;volatile
  7133  014F80  D7FE               	goto	l1245
  7134                           
  7135                           ;I2C.c: 255: if ( PIR2bits.BCLIF )
  7136  014F82  A6A1               	btfss	4001,3,c	;volatile
  7137  014F84  D005               	goto	l10118
  7138                           
  7139                           ;I2C.c: 256: {
  7140                           ;I2C.c: 257: return ( -1 );
  7141  014F86  0101               	movlb	1	; () banked
  7142  014F88  697F               	setf	?_I2C_Read_At_Address& (0+255),b
  7143  014F8A  0101               	movlb	1	; () banked
  7144  014F8C  6980               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  7145  014F8E  0012               	return	
  7146  014F90                     l10118:
  7147                           
  7148                           ;I2C.c: 258: }
  7149                           ;I2C.c: 260: if ( WriteI2C( (I2Caddress << 1) + 1 ) )
  7150  014F90  80D8               	bsf	status,0,c
  7151  014F92  0101               	movlb	1	; () banked
  7152  014F94  3581               	rlcf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  7153  014F96  EC0C  F0B1         	call	_WriteI2C
  7154  014F9A  0900               	iorlw	0
  7155  014F9C  B4D8               	btfsc	status,2,c
  7156  014F9E  D00A               	goto	l1249
  7157                           
  7158                           ;I2C.c: 261: {
  7159                           ;I2C.c: 262: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7160  014FA0  84C5               	bsf	4037,2,c	;volatile
  7161  014FA2                     l1250:
  7162  014FA2  B4C5               	btfsc	4037,2,c	;volatile
  7163  014FA4  D7FE               	goto	l1250
  7164                           
  7165                           ;I2C.c: 263: return ( -3 );
  7166  014FA6  0EFF               	movlw	255
  7167  014FA8  0101               	movlb	1	; () banked
  7168  014FAA  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7169  014FAC  0EFD               	movlw	253
  7170  014FAE  0101               	movlb	1	; () banked
  7171  014FB0  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  7172  014FB2  0012               	return	
  7173  014FB4                     l1249:
  7174                           
  7175                           ;I2C.c: 264: }
  7176                           ;I2C.c: 267: if ( !SSPCON2bits.ACKSTAT )
  7177  014FB4  BCC5               	btfsc	4037,6,c	;volatile
  7178  014FB6  D015               	goto	l1253
  7179                           
  7180                           ;I2C.c: 268: {
  7181                           ;I2C.c: 269: SSPCON2bits.RCEN = 1;
  7182  014FB8  86C5               	bsf	4037,3,c	;volatile
  7183  014FBA                     l1254:
  7184  014FBA  B6C5               	btfsc	4037,3,c	;volatile
  7185  014FBC  D7FE               	goto	l1254
  7186                           
  7187                           ;I2C.c: 271: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  7188  014FBE  8AC5               	bsf	4037,5,c	;volatile
  7189  014FC0  88C5               	bsf	4037,4,c	;volatile
  7190  014FC2                     l1257:
  7191  014FC2  B8C5               	btfsc	4037,4,c	;volatile
  7192  014FC4  D7FE               	goto	l1257
  7193  014FC6                     l1260:
  7194  014FC6  B8C5               	btfsc	4037,4,c	;volatile
  7195  014FC8  D7FE               	goto	l1260
  7196                           
  7197                           ;I2C.c: 273: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7198  014FCA  84C5               	bsf	4037,2,c	;volatile
  7199  014FCC                     l1263:
  7200  014FCC  B4C5               	btfsc	4037,2,c	;volatile
  7201  014FCE  D7FE               	goto	l1263
  7202  014FD0                     l1266:
  7203  014FD0  B4C5               	btfsc	4037,2,c	;volatile
  7204  014FD2  D7FE               	goto	l1266
  7205                           
  7206                           ;I2C.c: 275: if ( PIR2bits.BCLIF )
  7207  014FD4  A6A1               	btfss	4001,3,c	;volatile
  7208  014FD6  D023               	goto	l1231
  7209                           
  7210                           ;I2C.c: 276: {
  7211                           ;I2C.c: 277: return ( -1 );
  7212  014FD8  0101               	movlb	1	; () banked
  7213  014FDA  697F               	setf	?_I2C_Read_At_Address& (0+255),b
  7214  014FDC  0101               	movlb	1	; () banked
  7215  014FDE  6980               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  7216  014FE0  0012               	return	
  7217  014FE2                     l1253:
  7218                           
  7219                           ;I2C.c: 280: else
  7220                           ;I2C.c: 281: {
  7221                           ;I2C.c: 282: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7222  014FE2  84C5               	bsf	4037,2,c	;volatile
  7223  014FE4                     l1271:
  7224  014FE4  B4C5               	btfsc	4037,2,c	;volatile
  7225  014FE6  D7FE               	goto	l1271
  7226                           
  7227                           ;I2C.c: 283: return ( -2 );
  7228  014FE8  0EFF               	movlw	255
  7229  014FEA  0101               	movlb	1	; () banked
  7230  014FEC  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7231  014FEE  0EFE               	movlw	254
  7232  014FF0  0101               	movlb	1	; () banked
  7233  014FF2  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  7234  014FF4  0012               	return	
  7235  014FF6                     l1241:
  7236                           
  7237                           ;I2C.c: 287: else
  7238                           ;I2C.c: 288: {
  7239                           ;I2C.c: 289: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7240  014FF6  84C5               	bsf	4037,2,c	;volatile
  7241  014FF8                     l1275:
  7242  014FF8  B4C5               	btfsc	4037,2,c	;volatile
  7243  014FFA  D7FE               	goto	l1275
  7244                           
  7245                           ;I2C.c: 290: return ( -2 );
  7246  014FFC  0EFF               	movlw	255
  7247  014FFE  0101               	movlb	1	; () banked
  7248  015000  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7249  015002  0EFE               	movlw	254
  7250  015004  0101               	movlb	1	; () banked
  7251  015006  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  7252  015008  0012               	return	
  7253  01500A                     l1236:
  7254                           
  7255                           ;I2C.c: 293: else
  7256                           ;I2C.c: 294: {
  7257                           ;I2C.c: 295: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  7258  01500A  84C5               	bsf	4037,2,c	;volatile
  7259  01500C                     l1279:
  7260  01500C  B4C5               	btfsc	4037,2,c	;volatile
  7261  01500E  D7FE               	goto	l1279
  7262                           
  7263                           ;I2C.c: 296: return ( -2 );
  7264  015010  0EFF               	movlw	255
  7265  015012  0101               	movlb	1	; () banked
  7266  015014  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  7267  015016  0EFE               	movlw	254
  7268  015018  0101               	movlb	1	; () banked
  7269  01501A  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  7270  01501C  0012               	return	
  7271  01501E                     l1231:
  7272                           
  7273                           ;I2C.c: 297: }
  7274                           ;I2C.c: 298: }
  7275                           ;I2C.c: 299: return ( (unsigned int) SSPBUF );
  7276  01501E  0101               	movlb	1	; () banked
  7277  015020  CFC9 F17F          	movff	4041,?_I2C_Read_At_Address	;volatile
  7278  015024  0101               	movlb	1	; () banked
  7279  015026  6B80               	clrf	(?_I2C_Read_At_Address+1)& (0+255),b
  7280                           
  7281                           ; BSR set to: 1
  7282  015028  0012               	return	
  7283  01502A                     __end_of_I2C_Read_At_Address:
  7284                           	opt stack 0
  7285                           tblptru	equ	0xFF8
  7286                           tblptrh	equ	0xFF7
  7287                           tblptrl	equ	0xFF6
  7288                           tablat	equ	0xFF5
  7289                           prodl	equ	0xFF3
  7290                           postinc0	equ	0xFEE
  7291                           wreg	equ	0xFE8
  7292                           postdec1	equ	0xFE5
  7293                           fsr1l	equ	0xFE1
  7294                           status	equ	0xFD8
  7295                           
  7296 ;; *************** function _PWM_init *****************
  7297 ;; Defined at:
  7298 ;;		line 54 in file "PWM.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;		None
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;		None
  7303 ;; Return value:  Size  Location     Type
  7304 ;;		None               void
  7305 ;; Registers used:
  7306 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7316 ;;Total ram usage:        0 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:    9
  7319 ;; This function calls:
  7320 ;;		_SetDuty
  7321 ;;		_SetFreq
  7322 ;; This function is called by:
  7323 ;;		_main
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text6
  7328  016FA8                     __ptext6:
  7329                           	opt stack 0
  7330  016FA8                     _PWM_init:
  7331                           	opt stack 21
  7332                           
  7333                           ;PWM.c: 57: SetFreq(60);
  7334                           
  7335                           ; BSR set to: 1
  7336                           ;incstack = 0
  7337  016FA8  0E00               	movlw	0
  7338  016FAA  0101               	movlb	1	; () banked
  7339  016FAC  6F91               	movwf	(SetFreq@freq+1)& (0+255),b
  7340  016FAE  0E3C               	movlw	60
  7341  016FB0  0101               	movlb	1	; () banked
  7342  016FB2  6F90               	movwf	SetFreq@freq& (0+255),b
  7343  016FB4  EC82  F0B3         	call	_SetFreq	;wreg free
  7344                           
  7345                           ;PWM.c: 58: SetDuty(0);
  7346  016FB8  0E00               	movlw	0
  7347  016FBA  EC3C  F0AC         	call	_SetDuty
  7348                           
  7349                           ;PWM.c: 59: T2CON &= ~0x03;
  7350  016FBE  0EFC               	movlw	252
  7351  016FC0  16CA               	andwf	4042,f,c	;volatile
  7352                           
  7353                           ;PWM.c: 60: if(16 == 1)
  7354  016FC2  D001               	goto	l11492
  7355                           
  7356                           ;PWM.c: 61: {
  7357                           ;PWM.c: 62: __nop();
  7358  016FC4  F000               	nop	
  7359  016FC6                     l11492:
  7360                           
  7361                           ;PWM.c: 68: else
  7362                           ;PWM.c: 69: {
  7363                           ;PWM.c: 70: T2CON |= 0x10;
  7364  016FC6  88CA               	bsf	4042,4,c	;volatile
  7365                           
  7366                           ;PWM.c: 71: }
  7367                           ;PWM.c: 72: T2CON |= 0b00000100;
  7368  016FC8  84CA               	bsf	4042,2,c	;volatile
  7369                           
  7370                           ;PWM.c: 73: CCP1CON |= 0b00001100;
  7371  016FCA  0E0C               	movlw	12
  7372  016FCC  12BD               	iorwf	4029,f,c	;volatile
  7373  016FCE  0012               	return	
  7374  016FD0                     __end_of_PWM_init:
  7375                           	opt stack 0
  7376                           tblptru	equ	0xFF8
  7377                           tblptrh	equ	0xFF7
  7378                           tblptrl	equ	0xFF6
  7379                           tablat	equ	0xFF5
  7380                           prodl	equ	0xFF3
  7381                           postinc0	equ	0xFEE
  7382                           wreg	equ	0xFE8
  7383                           postdec1	equ	0xFE5
  7384                           fsr1l	equ	0xFE1
  7385                           status	equ	0xFD8
  7386                           
  7387 ;; *************** function _SetFreq *****************
  7388 ;; Defined at:
  7389 ;;		line 144 in file "PWM.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  freq            2   34[BANK1 ] unsigned int 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;  temp            1   40[BANK1 ] unsigned char 
  7394 ;; Return value:  Size  Location     Type
  7395 ;;		None               void
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7403 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;Total ram usage:        7 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; Hardware stack levels required when called:    7
  7410 ;; This function calls:
  7411 ;;		___aldiv
  7412 ;;		___wmul
  7413 ;; This function is called by:
  7414 ;;		_PWM_init
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text7
  7419  016704                     __ptext7:
  7420                           	opt stack 0
  7421  016704                     _SetFreq:
  7422                           	opt stack 22
  7423                           
  7424                           ;PWM.c: 147: unsigned char temp =0;
  7425                           
  7426                           ;incstack = 0
  7427  016704  0E00               	movlw	0
  7428  016706  0101               	movlb	1	; () banked
  7429  016708  6F96               	movwf	SetFreq@temp& (0+255),b
  7430                           
  7431                           ; BSR set to: 1
  7432                           ;PWM.c: 148: temp = (unsigned char)(((40960000L >> 2)/(freq*1000))-1);
  7433  01670A  0E00               	movlw	0
  7434  01670C  0101               	movlb	1	; () banked
  7435  01670E  6F82               	movwf	___aldiv@dividend& (0+255),b
  7436  016710  0E40               	movlw	64
  7437  016712  0101               	movlb	1	; () banked
  7438  016714  6F83               	movwf	(___aldiv@dividend+1)& (0+255),b
  7439  016716  0E9C               	movlw	156
  7440  016718  0101               	movlb	1	; () banked
  7441  01671A  6F84               	movwf	(___aldiv@dividend+2)& (0+255),b
  7442  01671C  0E00               	movlw	0
  7443  01671E  0101               	movlb	1	; () banked
  7444  016720  6F85               	movwf	(___aldiv@dividend+3)& (0+255),b
  7445  016722  C190  F17C         	movff	SetFreq@freq,___wmul@multiplier
  7446  016726  C191  F17D         	movff	SetFreq@freq+1,___wmul@multiplier+1
  7447  01672A  0E03               	movlw	3
  7448  01672C  0101               	movlb	1	; () banked
  7449  01672E  6F7F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7450  016730  0EE8               	movlw	232
  7451  016732  0101               	movlb	1	; () banked
  7452  016734  6F7E               	movwf	___wmul@multiplicand& (0+255),b
  7453  016736  ECE6  F0B6         	call	___wmul	;wreg free
  7454  01673A  0101               	movlb	1	; () banked
  7455  01673C  C17C  F186         	movff	?___wmul,___aldiv@divisor
  7456  016740  0101               	movlb	1	; () banked
  7457  016742  C17D  F187         	movff	?___wmul+1,___aldiv@divisor+1
  7458  016746  0101               	movlb	1	; () banked
  7459  016748  6B88               	clrf	(___aldiv@divisor+2)& (0+255),b
  7460  01674A  0101               	movlb	1	; () banked
  7461  01674C  6B89               	clrf	(___aldiv@divisor+3)& (0+255),b
  7462  01674E  ECFB  F0A3         	call	___aldiv	;wreg free
  7463  016752  C182  F192         	movff	?___aldiv,??_SetFreq
  7464  016756  C183  F193         	movff	?___aldiv+1,??_SetFreq+1
  7465  01675A  C184  F194         	movff	?___aldiv+2,??_SetFreq+2
  7466  01675E  C185  F195         	movff	?___aldiv+3,??_SetFreq+3
  7467  016762  0101               	movlb	1	; () banked
  7468  016764  0592               	decf	??_SetFreq& (0+255),w,b
  7469  016766  0101               	movlb	1	; () banked
  7470  016768  6F96               	movwf	SetFreq@temp& (0+255),b
  7471                           
  7472                           ; BSR set to: 1
  7473                           ;PWM.c: 150: PR2 = temp;
  7474  01676A  C196  FFCB         	movff	SetFreq@temp,4043	;volatile
  7475                           
  7476                           ; BSR set to: 1
  7477  01676E  0012               	return	
  7478  016770                     __end_of_SetFreq:
  7479                           	opt stack 0
  7480                           tblptru	equ	0xFF8
  7481                           tblptrh	equ	0xFF7
  7482                           tblptrl	equ	0xFF6
  7483                           tablat	equ	0xFF5
  7484                           prodl	equ	0xFF3
  7485                           postinc0	equ	0xFEE
  7486                           wreg	equ	0xFE8
  7487                           postdec1	equ	0xFE5
  7488                           fsr1l	equ	0xFE1
  7489                           status	equ	0xFD8
  7490                           
  7491 ;; *************** function ___aldiv *****************
  7492 ;; Defined at:
  7493 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  dividend        4   20[BANK1 ] long 
  7496 ;;  divisor         4   24[BANK1 ] long 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  quotient        4   30[BANK1 ] long 
  7499 ;;  sign            1   29[BANK1 ] unsigned char 
  7500 ;;  counter         1   28[BANK1 ] unsigned char 
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  4   20[BANK1 ] long 
  7503 ;; Registers used:
  7504 ;;		wreg, status,2, status,0
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7510 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  7514 ;;Total ram usage:       14 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:    6
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_SetFreq
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text8
  7525  0147F6                     __ptext8:
  7526                           	opt stack 0
  7527  0147F6                     ___aldiv:
  7528                           	opt stack 22
  7529                           
  7530                           ; BSR set to: 1
  7531                           ;incstack = 0
  7532  0147F6  0E00               	movlw	0
  7533  0147F8  0101               	movlb	1	; () banked
  7534  0147FA  6F8B               	movwf	___aldiv@sign& (0+255),b
  7535                           
  7536                           ; BSR set to: 1
  7537  0147FC  0101               	movlb	1	; () banked
  7538  0147FE  5189               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7539  014800  0A80               	xorlw	128
  7540  014802  0F80               	addlw	128
  7541  014804  E10B               	bnz	u7595
  7542  014806  0E00               	movlw	0
  7543  014808  0101               	movlb	1	; () banked
  7544  01480A  5D88               	subwf	(___aldiv@divisor+2)& (0+255),w,b
  7545  01480C  E107               	bnz	u7595
  7546  01480E  0E00               	movlw	0
  7547  014810  0101               	movlb	1	; () banked
  7548  014812  5D87               	subwf	(___aldiv@divisor+1)& (0+255),w,b
  7549  014814  E103               	bnz	u7595
  7550  014816  0E00               	movlw	0
  7551  014818  0101               	movlb	1	; () banked
  7552  01481A  5D86               	subwf	___aldiv@divisor& (0+255),w,b
  7553  01481C                     u7595:
  7554  01481C  B0D8               	btfsc	status,0,c
  7555  01481E  D012               	goto	l6700
  7556                           
  7557                           ; BSR set to: 1
  7558  014820  0101               	movlb	1	; () banked
  7559  014822  1F89               	comf	(___aldiv@divisor+3)& (0+255),f,b
  7560  014824  0101               	movlb	1	; () banked
  7561  014826  1F88               	comf	(___aldiv@divisor+2)& (0+255),f,b
  7562  014828  0101               	movlb	1	; () banked
  7563  01482A  1F87               	comf	(___aldiv@divisor+1)& (0+255),f,b
  7564  01482C  0101               	movlb	1	; () banked
  7565  01482E  6D86               	negf	___aldiv@divisor& (0+255),b
  7566  014830  0E00               	movlw	0
  7567  014832  0101               	movlb	1	; () banked
  7568  014834  2387               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  7569  014836  0101               	movlb	1	; () banked
  7570  014838  2388               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  7571  01483A  0101               	movlb	1	; () banked
  7572  01483C  2389               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  7573                           
  7574                           ; BSR set to: 1
  7575  01483E  0E01               	movlw	1
  7576  014840  0101               	movlb	1	; () banked
  7577  014842  6F8B               	movwf	___aldiv@sign& (0+255),b
  7578  014844                     l6700:
  7579                           
  7580                           ; BSR set to: 1
  7581  014844  0101               	movlb	1	; () banked
  7582  014846  5185               	movf	(___aldiv@dividend+3)& (0+255),w,b
  7583  014848  0A80               	xorlw	128
  7584  01484A  0F80               	addlw	128
  7585  01484C  E10B               	bnz	u7605
  7586  01484E  0E00               	movlw	0
  7587  014850  0101               	movlb	1	; () banked
  7588  014852  5D84               	subwf	(___aldiv@dividend+2)& (0+255),w,b
  7589  014854  E107               	bnz	u7605
  7590  014856  0E00               	movlw	0
  7591  014858  0101               	movlb	1	; () banked
  7592  01485A  5D83               	subwf	(___aldiv@dividend+1)& (0+255),w,b
  7593  01485C  E103               	bnz	u7605
  7594  01485E  0E00               	movlw	0
  7595  014860  0101               	movlb	1	; () banked
  7596  014862  5D82               	subwf	___aldiv@dividend& (0+255),w,b
  7597  014864                     u7605:
  7598  014864  B0D8               	btfsc	status,0,c
  7599  014866  D012               	goto	l6706
  7600                           
  7601                           ; BSR set to: 1
  7602  014868  0101               	movlb	1	; () banked
  7603  01486A  1F85               	comf	(___aldiv@dividend+3)& (0+255),f,b
  7604  01486C  0101               	movlb	1	; () banked
  7605  01486E  1F84               	comf	(___aldiv@dividend+2)& (0+255),f,b
  7606  014870  0101               	movlb	1	; () banked
  7607  014872  1F83               	comf	(___aldiv@dividend+1)& (0+255),f,b
  7608  014874  0101               	movlb	1	; () banked
  7609  014876  6D82               	negf	___aldiv@dividend& (0+255),b
  7610  014878  0E00               	movlw	0
  7611  01487A  0101               	movlb	1	; () banked
  7612  01487C  2383               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  7613  01487E  0101               	movlb	1	; () banked
  7614  014880  2384               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  7615  014882  0101               	movlb	1	; () banked
  7616  014884  2385               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  7617                           
  7618                           ; BSR set to: 1
  7619  014886  0E01               	movlw	1
  7620  014888  0101               	movlb	1	; () banked
  7621  01488A  1B8B               	xorwf	___aldiv@sign& (0+255),f,b
  7622  01488C                     l6706:
  7623                           
  7624                           ; BSR set to: 1
  7625  01488C  0E00               	movlw	0
  7626  01488E  0101               	movlb	1	; () banked
  7627  014890  6F8C               	movwf	___aldiv@quotient& (0+255),b
  7628  014892  0E00               	movlw	0
  7629  014894  0101               	movlb	1	; () banked
  7630  014896  6F8D               	movwf	(___aldiv@quotient+1)& (0+255),b
  7631  014898  0E00               	movlw	0
  7632  01489A  0101               	movlb	1	; () banked
  7633  01489C  6F8E               	movwf	(___aldiv@quotient+2)& (0+255),b
  7634  01489E  0E00               	movlw	0
  7635  0148A0  0101               	movlb	1	; () banked
  7636  0148A2  6F8F               	movwf	(___aldiv@quotient+3)& (0+255),b
  7637                           
  7638                           ; BSR set to: 1
  7639  0148A4  0101               	movlb	1	; () banked
  7640  0148A6  5189               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7641  0148A8  1186               	iorwf	___aldiv@divisor& (0+255),w,b
  7642  0148AA  1187               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  7643  0148AC  1188               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  7644  0148AE  B4D8               	btfsc	status,2,c
  7645  0148B0  D04E               	goto	l6728
  7646                           
  7647                           ; BSR set to: 1
  7648  0148B2  0E01               	movlw	1
  7649  0148B4  0101               	movlb	1	; () banked
  7650  0148B6  6F8A               	movwf	___aldiv@counter& (0+255),b
  7651  0148B8  D00C               	goto	l6714
  7652  0148BA                     l6712:
  7653                           
  7654                           ; BSR set to: 1
  7655  0148BA  0101               	movlb	1	; () banked
  7656  0148BC  90D8               	bcf	status,0,c
  7657  0148BE  0101               	movlb	1	; () banked
  7658  0148C0  3786               	rlcf	___aldiv@divisor& (0+255),f,b
  7659  0148C2  0101               	movlb	1	; () banked
  7660  0148C4  3787               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  7661  0148C6  0101               	movlb	1	; () banked
  7662  0148C8  3788               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  7663  0148CA  0101               	movlb	1	; () banked
  7664  0148CC  3789               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  7665  0148CE  0101               	movlb	1	; () banked
  7666  0148D0  2B8A               	incf	___aldiv@counter& (0+255),f,b
  7667  0148D2                     l6714:
  7668                           
  7669                           ; BSR set to: 1
  7670  0148D2  0101               	movlb	1	; () banked
  7671  0148D4  AF89               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  7672  0148D6  D7F1               	goto	l6712
  7673  0148D8                     l6716:
  7674                           
  7675                           ; BSR set to: 1
  7676  0148D8  0101               	movlb	1	; () banked
  7677  0148DA  90D8               	bcf	status,0,c
  7678  0148DC  0101               	movlb	1	; () banked
  7679  0148DE  378C               	rlcf	___aldiv@quotient& (0+255),f,b
  7680  0148E0  0101               	movlb	1	; () banked
  7681  0148E2  378D               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  7682  0148E4  0101               	movlb	1	; () banked
  7683  0148E6  378E               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  7684  0148E8  0101               	movlb	1	; () banked
  7685  0148EA  378F               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  7686                           
  7687                           ; BSR set to: 1
  7688  0148EC  0101               	movlb	1	; () banked
  7689  0148EE  5186               	movf	___aldiv@divisor& (0+255),w,b
  7690  0148F0  0101               	movlb	1	; () banked
  7691  0148F2  5D82               	subwf	___aldiv@dividend& (0+255),w,b
  7692  0148F4  0101               	movlb	1	; () banked
  7693  0148F6  5187               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7694  0148F8  0101               	movlb	1	; () banked
  7695  0148FA  5983               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  7696  0148FC  0101               	movlb	1	; () banked
  7697  0148FE  5188               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7698  014900  0101               	movlb	1	; () banked
  7699  014902  5984               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  7700  014904  0101               	movlb	1	; () banked
  7701  014906  5189               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7702  014908  0101               	movlb	1	; () banked
  7703  01490A  5985               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  7704  01490C  A0D8               	btfss	status,0,c
  7705  01490E  D012               	goto	l6724
  7706                           
  7707                           ; BSR set to: 1
  7708  014910  0101               	movlb	1	; () banked
  7709  014912  5186               	movf	___aldiv@divisor& (0+255),w,b
  7710  014914  0101               	movlb	1	; () banked
  7711  014916  5F82               	subwf	___aldiv@dividend& (0+255),f,b
  7712  014918  0101               	movlb	1	; () banked
  7713  01491A  5187               	movf	(___aldiv@divisor+1)& (0+255),w,b
  7714  01491C  0101               	movlb	1	; () banked
  7715  01491E  5B83               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  7716  014920  0101               	movlb	1	; () banked
  7717  014922  5188               	movf	(___aldiv@divisor+2)& (0+255),w,b
  7718  014924  0101               	movlb	1	; () banked
  7719  014926  5B84               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  7720  014928  0101               	movlb	1	; () banked
  7721  01492A  5189               	movf	(___aldiv@divisor+3)& (0+255),w,b
  7722  01492C  0101               	movlb	1	; () banked
  7723  01492E  5B85               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  7724                           
  7725                           ; BSR set to: 1
  7726  014930  0101               	movlb	1	; () banked
  7727  014932  818C               	bsf	___aldiv@quotient& (0+255),0,b
  7728  014934                     l6724:
  7729                           
  7730                           ; BSR set to: 1
  7731  014934  0101               	movlb	1	; () banked
  7732  014936  90D8               	bcf	status,0,c
  7733  014938  0101               	movlb	1	; () banked
  7734  01493A  3389               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  7735  01493C  0101               	movlb	1	; () banked
  7736  01493E  3388               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  7737  014940  0101               	movlb	1	; () banked
  7738  014942  3387               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  7739  014944  0101               	movlb	1	; () banked
  7740  014946  3386               	rrcf	___aldiv@divisor& (0+255),f,b
  7741                           
  7742                           ; BSR set to: 1
  7743  014948  0101               	movlb	1	; () banked
  7744  01494A  2F8A               	decfsz	___aldiv@counter& (0+255),f,b
  7745  01494C  D7C5               	goto	l6716
  7746  01494E                     l6728:
  7747                           
  7748                           ; BSR set to: 1
  7749  01494E  0101               	movlb	1	; () banked
  7750  014950  518B               	movf	___aldiv@sign& (0+255),w,b
  7751  014952  B4D8               	btfsc	status,2,c
  7752  014954  D00F               	goto	l6732
  7753                           
  7754                           ; BSR set to: 1
  7755  014956  0101               	movlb	1	; () banked
  7756  014958  1F8F               	comf	(___aldiv@quotient+3)& (0+255),f,b
  7757  01495A  0101               	movlb	1	; () banked
  7758  01495C  1F8E               	comf	(___aldiv@quotient+2)& (0+255),f,b
  7759  01495E  0101               	movlb	1	; () banked
  7760  014960  1F8D               	comf	(___aldiv@quotient+1)& (0+255),f,b
  7761  014962  0101               	movlb	1	; () banked
  7762  014964  6D8C               	negf	___aldiv@quotient& (0+255),b
  7763  014966  0E00               	movlw	0
  7764  014968  0101               	movlb	1	; () banked
  7765  01496A  238D               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  7766  01496C  0101               	movlb	1	; () banked
  7767  01496E  238E               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  7768  014970  0101               	movlb	1	; () banked
  7769  014972  238F               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  7770  014974                     l6732:
  7771                           
  7772                           ; BSR set to: 1
  7773  014974  C18C  F182         	movff	___aldiv@quotient,?___aldiv
  7774  014978  C18D  F183         	movff	___aldiv@quotient+1,?___aldiv+1
  7775  01497C  C18E  F184         	movff	___aldiv@quotient+2,?___aldiv+2
  7776  014980  C18F  F185         	movff	___aldiv@quotient+3,?___aldiv+3
  7777  014984  0012               	return	
  7778  014986                     __end_of___aldiv:
  7779                           	opt stack 0
  7780                           tblptru	equ	0xFF8
  7781                           tblptrh	equ	0xFF7
  7782                           tblptrl	equ	0xFF6
  7783                           tablat	equ	0xFF5
  7784                           prodl	equ	0xFF3
  7785                           postinc0	equ	0xFEE
  7786                           wreg	equ	0xFE8
  7787                           postdec1	equ	0xFE5
  7788                           fsr1l	equ	0xFE1
  7789                           status	equ	0xFD8
  7790                           
  7791 ;; *************** function _LCDScreenUpdate *****************
  7792 ;; Defined at:
  7793 ;;		line 277 in file "LCD.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;		None
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;		None               void
  7800 ;; Registers used:
  7801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7809 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7810 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7811 ;;Total ram usage:        4 bytes
  7812 ;; Hardware stack levels used:    1
  7813 ;; Hardware stack levels required when called:   10
  7814 ;; This function calls:
  7815 ;;		_ClearLCD
  7816 ;;		_LCDPrintChar
  7817 ;;		_LCDPrintString
  7818 ;;		_SetLCDcursor
  7819 ;;		_cleanBuffer
  7820 ;;		_delayUS
  7821 ;; This function is called by:
  7822 ;;		_main
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           	psect	text9
  7827  012F8C                     __ptext9:
  7828                           	opt stack 0
  7829  012F8C                     _LCDScreenUpdate:
  7830                           	opt stack 20
  7831                           
  7832                           ;LCD.c: 280: delayUS(10);
  7833                           
  7834                           ; BSR set to: 1
  7835                           ;incstack = 0
  7836  012F8C  0E0A               	movlw	10
  7837  012F8E  0101               	movlb	1	; () banked
  7838  012F90  6F7C               	movwf	delayUS@US& (0+255),b
  7839  012F92  0E00               	movlw	0
  7840  012F94  0101               	movlb	1	; () banked
  7841  012F96  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7842  012F98  0E00               	movlw	0
  7843  012F9A  0101               	movlb	1	; () banked
  7844  012F9C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7845  012F9E  0E00               	movlw	0
  7846  012FA0  0101               	movlb	1	; () banked
  7847  012FA2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7848  012FA4  EC0D  F0B3         	call	_delayUS	;wreg free
  7849                           
  7850                           ;LCD.c: 281: if(LCDclearCount<(25000-1))
  7851  012FA8  0EA7               	movlw	167
  7852  012FAA  0101               	movlb	1	; () banked
  7853  012FAC  6F8E               	movwf	??_LCDScreenUpdate& (0+255),b
  7854  012FAE  0E61               	movlw	97
  7855  012FB0  6F8F               	movwf	(??_LCDScreenUpdate+1)& (0+255),b
  7856  012FB2  0E00               	movlw	0
  7857  012FB4  6F90               	movwf	(??_LCDScreenUpdate+2)& (0+255),b
  7858  012FB6  0E00               	movlw	0
  7859  012FB8  6F91               	movwf	(??_LCDScreenUpdate+3)& (0+255),b
  7860  012FBA  0101               	movlb	1	; () banked
  7861  012FBC  518E               	movf	??_LCDScreenUpdate& (0+255),w,b
  7862  012FBE  0101               	movlb	1	; () banked
  7863  012FC0  5DCD               	subwf	_LCDclearCount& (0+255),w,b
  7864  012FC2  0101               	movlb	1	; () banked
  7865  012FC4  518F               	movf	(??_LCDScreenUpdate+1)& (0+255),w,b
  7866  012FC6  0101               	movlb	1	; () banked
  7867  012FC8  59CE               	subwfb	(_LCDclearCount+1)& (0+255),w,b
  7868  012FCA  0101               	movlb	1	; () banked
  7869  012FCC  5190               	movf	(??_LCDScreenUpdate+2)& (0+255),w,b
  7870  012FCE  0101               	movlb	1	; () banked
  7871  012FD0  59CF               	subwfb	(_LCDclearCount+2)& (0+255),w,b
  7872  012FD2  0101               	movlb	1	; () banked
  7873  012FD4  5191               	movf	(??_LCDScreenUpdate+3)& (0+255),w,b
  7874  012FD6  0101               	movlb	1	; () banked
  7875  012FD8  59D0               	subwfb	(_LCDclearCount+3)& (0+255),w,b
  7876  012FDA  B0D8               	btfsc	status,0,c
  7877  012FDC  D00E               	goto	l11554
  7878                           
  7879                           ; BSR set to: 1
  7880                           ;LCD.c: 282: {
  7881                           ;LCD.c: 283: LCDclearCount++;
  7882  012FDE  0E01               	movlw	1
  7883  012FE0  0101               	movlb	1	; () banked
  7884  012FE2  27CD               	addwf	_LCDclearCount& (0+255),f,b
  7885  012FE4  0E00               	movlw	0
  7886  012FE6  0101               	movlb	1	; () banked
  7887  012FE8  23CE               	addwfc	(_LCDclearCount+1)& (0+255),f,b
  7888  012FEA  0101               	movlb	1	; () banked
  7889  012FEC  23CF               	addwfc	(_LCDclearCount+2)& (0+255),f,b
  7890  012FEE  0101               	movlb	1	; () banked
  7891  012FF0  23D0               	addwfc	(_LCDclearCount+3)& (0+255),f,b
  7892                           
  7893                           ; BSR set to: 1
  7894                           ;LCD.c: 284: LCDwait = 1;
  7895  012FF2  0E01               	movlw	1
  7896  012FF4  0101               	movlb	1	; () banked
  7897  012FF6  6F09               	movwf	_LCDwait& (0+255),b
  7898                           
  7899                           ;LCD.c: 285: }
  7900  012FF8  0012               	return	
  7901  012FFA                     l11554:
  7902                           
  7903                           ; BSR set to: 1
  7904                           ;LCD.c: 286: else if(LCDclearCount == (25000-1))
  7905  012FFA  0101               	movlb	1	; () banked
  7906  012FFC  51CE               	movf	(_LCDclearCount+1)& (0+255),w,b
  7907  012FFE  0A61               	xorlw	97
  7908  013000  0EA7               	movlw	167
  7909  013002  B4D8               	btfsc	status,2,c
  7910  013004  19CD               	xorwf	_LCDclearCount& (0+255),w,b
  7911  013006  11CF               	iorwf	(_LCDclearCount+2)& (0+255),w,b
  7912  013008  11D0               	iorwf	(_LCDclearCount+3)& (0+255),w,b
  7913  01300A  A4D8               	btfss	status,2,c
  7914  01300C  0012               	return	
  7915                           
  7916                           ; BSR set to: 1
  7917                           ;LCD.c: 287: {
  7918                           ;LCD.c: 288: LCDclearCount++;
  7919  01300E  0E01               	movlw	1
  7920  013010  0101               	movlb	1	; () banked
  7921  013012  27CD               	addwf	_LCDclearCount& (0+255),f,b
  7922  013014  0E00               	movlw	0
  7923  013016  0101               	movlb	1	; () banked
  7924  013018  23CE               	addwfc	(_LCDclearCount+1)& (0+255),f,b
  7925  01301A  0101               	movlb	1	; () banked
  7926  01301C  23CF               	addwfc	(_LCDclearCount+2)& (0+255),f,b
  7927  01301E  0101               	movlb	1	; () banked
  7928  013020  23D0               	addwfc	(_LCDclearCount+3)& (0+255),f,b
  7929                           
  7930                           ; BSR set to: 1
  7931                           ;LCD.c: 289: LCDwait = 0;
  7932  013022  0E00               	movlw	0
  7933  013024  0101               	movlb	1	; () banked
  7934  013026  6F09               	movwf	_LCDwait& (0+255),b
  7935                           
  7936                           ; BSR set to: 1
  7937                           ;LCD.c: 290: if(ScrollFIFOCount == 0)
  7938  013028  0101               	movlb	1	; () banked
  7939  01302A  670C               	tstfsz	_ScrollFIFOCount& (0+255),b
  7940  01302C  D00F               	goto	l11570
  7941                           
  7942                           ; BSR set to: 1
  7943                           ;LCD.c: 291: {
  7944                           ;LCD.c: 292: ScrollDisplayPosition = 0;
  7945  01302E  0E00               	movlw	0
  7946  013030  0101               	movlb	1	; () banked
  7947  013032  6F0B               	movwf	_ScrollDisplayPosition& (0+255),b
  7948                           
  7949                           ; BSR set to: 1
  7950                           ;LCD.c: 293: ClearLCD();
  7951  013034  EC0D  F0B8         	call	_ClearLCD	;wreg free
  7952                           
  7953                           ;LCD.c: 294: SetLCDcursor(0, 0);
  7954  013038  0E00               	movlw	0
  7955  01303A  0101               	movlb	1	; () banked
  7956  01303C  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7957  01303E  0E00               	movlw	0
  7958  013040  EC01  F0B7         	call	_SetLCDcursor
  7959                           
  7960                           ;LCD.c: 295: LCDPrintChar('>');
  7961  013044  0E3E               	movlw	62
  7962  013046  EC25  F0B8         	call	_LCDPrintChar
  7963                           
  7964                           ;LCD.c: 296: }
  7965  01304A  0012               	return	
  7966  01304C                     l11570:
  7967                           
  7968                           ;LCD.c: 297: else
  7969                           ;LCD.c: 298: {
  7970                           ;LCD.c: 299: ScrollDisplayPosition++;
  7971  01304C  0101               	movlb	1	; () banked
  7972  01304E  2B0B               	incf	_ScrollDisplayPosition& (0+255),f,b
  7973                           
  7974                           ; BSR set to: 1
  7975                           ;LCD.c: 300: if(ScrollDisplayPosition == 1)
  7976  013050  0101               	movlb	1	; () banked
  7977  013052  050B               	decf	_ScrollDisplayPosition& (0+255),w,b
  7978  013054  A4D8               	btfss	status,2,c
  7979  013056  D013               	goto	l11578
  7980                           
  7981                           ; BSR set to: 1
  7982                           ;LCD.c: 301: {
  7983                           ;LCD.c: 302: ClearLCD();
  7984  013058  EC0D  F0B8         	call	_ClearLCD	;wreg free
  7985                           
  7986                           ;LCD.c: 303: SetLCDcursor(1, 0);
  7987  01305C  0E00               	movlw	0
  7988  01305E  0101               	movlb	1	; () banked
  7989  013060  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7990  013062  0E01               	movlw	1
  7991  013064  EC01  F0B7         	call	_SetLCDcursor
  7992                           
  7993                           ;LCD.c: 304: LCDPrintString(Scroll_1);
  7994  013068  0101               	movlb	1	; () banked
  7995  01306A  0E01               	movlw	high _Scroll_1
  7996  01306C  0101               	movlb	1	; () banked
  7997  01306E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7998  013070  0101               	movlb	1	; () banked
  7999  013072  0E0E               	movlw	low _Scroll_1
  8000  013074  0101               	movlb	1	; () banked
  8001  013076  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8002  013078  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8003                           
  8004                           ;LCD.c: 305: }
  8005  01307C  D213               	goto	l11676
  8006  01307E                     l11578:
  8007                           
  8008                           ;LCD.c: 306: else if(ScrollDisplayPosition == 2)
  8009  01307E  0101               	movlb	1	; () banked
  8010  013080  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8011  013082  0A02               	xorlw	2
  8012  013084  A4D8               	btfss	status,2,c
  8013  013086  D033               	goto	l11588
  8014                           
  8015                           ; BSR set to: 1
  8016                           ;LCD.c: 307: {
  8017                           ;LCD.c: 308: ClearLCD();
  8018  013088  EC0D  F0B8         	call	_ClearLCD	;wreg free
  8019                           
  8020                           ;LCD.c: 309: SetLCDcursor(0, 0);
  8021  01308C  0E00               	movlw	0
  8022  01308E  0101               	movlb	1	; () banked
  8023  013090  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8024  013092  0E00               	movlw	0
  8025  013094  EC01  F0B7         	call	_SetLCDcursor
  8026                           
  8027                           ;LCD.c: 310: LCDPrintString(Scroll_1);
  8028  013098  0101               	movlb	1	; () banked
  8029  01309A  0E01               	movlw	high _Scroll_1
  8030  01309C  0101               	movlb	1	; () banked
  8031  01309E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8032  0130A0  0101               	movlb	1	; () banked
  8033  0130A2  0E0E               	movlw	low _Scroll_1
  8034  0130A4  0101               	movlb	1	; () banked
  8035  0130A6  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8036  0130A8  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8037                           
  8038                           ;LCD.c: 311: SetLCDcursor(1, 0);
  8039  0130AC  0E00               	movlw	0
  8040  0130AE  0101               	movlb	1	; () banked
  8041  0130B0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8042  0130B2  0E01               	movlw	1
  8043  0130B4  EC01  F0B7         	call	_SetLCDcursor
  8044                           
  8045                           ;LCD.c: 312: LCDPrintString(Scroll_2);
  8046  0130B8  0101               	movlb	1	; () banked
  8047  0130BA  0E01               	movlw	high _Scroll_2
  8048  0130BC  0101               	movlb	1	; () banked
  8049  0130BE  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8050  0130C0  0101               	movlb	1	; () banked
  8051  0130C2  0E1E               	movlw	low _Scroll_2
  8052  0130C4  0101               	movlb	1	; () banked
  8053  0130C6  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8054  0130C8  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8055                           
  8056                           ;LCD.c: 313: cleanBuffer(Scroll_1, 16);
  8057  0130CC  0101               	movlb	1	; () banked
  8058  0130CE  0E01               	movlw	high _Scroll_1
  8059  0130D0  0101               	movlb	1	; () banked
  8060  0130D2  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8061  0130D4  0101               	movlb	1	; () banked
  8062  0130D6  0E0E               	movlw	low _Scroll_1
  8063  0130D8  0101               	movlb	1	; () banked
  8064  0130DA  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8065  0130DC  0E00               	movlw	0
  8066  0130DE  0101               	movlb	1	; () banked
  8067  0130E0  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8068  0130E2  0E10               	movlw	16
  8069  0130E4  0101               	movlb	1	; () banked
  8070  0130E6  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8071  0130E8  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  8072                           
  8073                           ;LCD.c: 314: }
  8074  0130EC  D1DB               	goto	l11676
  8075  0130EE                     l11588:
  8076                           
  8077                           ;LCD.c: 315: else if(ScrollDisplayPosition == 3)
  8078  0130EE  0101               	movlb	1	; () banked
  8079  0130F0  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8080  0130F2  0A03               	xorlw	3
  8081  0130F4  A4D8               	btfss	status,2,c
  8082  0130F6  D033               	goto	l11598
  8083                           
  8084                           ; BSR set to: 1
  8085                           ;LCD.c: 316: {
  8086                           ;LCD.c: 317: ClearLCD();
  8087  0130F8  EC0D  F0B8         	call	_ClearLCD	;wreg free
  8088                           
  8089                           ;LCD.c: 318: SetLCDcursor(0, 0);
  8090  0130FC  0E00               	movlw	0
  8091  0130FE  0101               	movlb	1	; () banked
  8092  013100  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8093  013102  0E00               	movlw	0
  8094  013104  EC01  F0B7         	call	_SetLCDcursor
  8095                           
  8096                           ;LCD.c: 319: LCDPrintString(Scroll_2);
  8097  013108  0101               	movlb	1	; () banked
  8098  01310A  0E01               	movlw	high _Scroll_2
  8099  01310C  0101               	movlb	1	; () banked
  8100  01310E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8101  013110  0101               	movlb	1	; () banked
  8102  013112  0E1E               	movlw	low _Scroll_2
  8103  013114  0101               	movlb	1	; () banked
  8104  013116  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8105  013118  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8106                           
  8107                           ;LCD.c: 320: SetLCDcursor(1, 0);
  8108  01311C  0E00               	movlw	0
  8109  01311E  0101               	movlb	1	; () banked
  8110  013120  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8111  013122  0E01               	movlw	1
  8112  013124  EC01  F0B7         	call	_SetLCDcursor
  8113                           
  8114                           ;LCD.c: 321: LCDPrintString(Scroll_3);
  8115  013128  0101               	movlb	1	; () banked
  8116  01312A  0E01               	movlw	high _Scroll_3
  8117  01312C  0101               	movlb	1	; () banked
  8118  01312E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8119  013130  0101               	movlb	1	; () banked
  8120  013132  0E2E               	movlw	low _Scroll_3
  8121  013134  0101               	movlb	1	; () banked
  8122  013136  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8123  013138  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8124                           
  8125                           ;LCD.c: 322: cleanBuffer(Scroll_2, 16);
  8126  01313C  0101               	movlb	1	; () banked
  8127  01313E  0E01               	movlw	high _Scroll_2
  8128  013140  0101               	movlb	1	; () banked
  8129  013142  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8130  013144  0101               	movlb	1	; () banked
  8131  013146  0E1E               	movlw	low _Scroll_2
  8132  013148  0101               	movlb	1	; () banked
  8133  01314A  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8134  01314C  0E00               	movlw	0
  8135  01314E  0101               	movlb	1	; () banked
  8136  013150  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8137  013152  0E10               	movlw	16
  8138  013154  0101               	movlb	1	; () banked
  8139  013156  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8140  013158  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  8141                           
  8142                           ;LCD.c: 323: }
  8143  01315C  D1A3               	goto	l11676
  8144  01315E                     l11598:
  8145                           
  8146                           ;LCD.c: 324: else if(ScrollDisplayPosition == 4)
  8147  01315E  0101               	movlb	1	; () banked
  8148  013160  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8149  013162  0A04               	xorlw	4
  8150  013164  A4D8               	btfss	status,2,c
  8151  013166  D033               	goto	l11608
  8152                           
  8153                           ; BSR set to: 1
  8154                           ;LCD.c: 325: {
  8155                           ;LCD.c: 326: ClearLCD();
  8156  013168  EC0D  F0B8         	call	_ClearLCD	;wreg free
  8157                           
  8158                           ;LCD.c: 327: SetLCDcursor(0, 0);
  8159  01316C  0E00               	movlw	0
  8160  01316E  0101               	movlb	1	; () banked
  8161  013170  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8162  013172  0E00               	movlw	0
  8163  013174  EC01  F0B7         	call	_SetLCDcursor
  8164                           
  8165                           ;LCD.c: 328: LCDPrintString(Scroll_3);
  8166  013178  0101               	movlb	1	; () banked
  8167  01317A  0E01               	movlw	high _Scroll_3
  8168  01317C  0101               	movlb	1	; () banked
  8169  01317E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8170  013180  0101               	movlb	1	; () banked
  8171  013182  0E2E               	movlw	low _Scroll_3
  8172  013184  0101               	movlb	1	; () banked
  8173  013186  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8174  013188  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8175                           
  8176                           ;LCD.c: 329: SetLCDcursor(1, 0);
  8177  01318C  0E00               	movlw	0
  8178  01318E  0101               	movlb	1	; () banked
  8179  013190  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8180  013192  0E01               	movlw	1
  8181  013194  EC01  F0B7         	call	_SetLCDcursor
  8182                           
  8183                           ;LCD.c: 330: LCDPrintString(Scroll_4);
  8184  013198  0101               	movlb	1	; () banked
  8185  01319A  0E01               	movlw	high _Scroll_4
  8186  01319C  0101               	movlb	1	; () banked
  8187  01319E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8188  0131A0  0101               	movlb	1	; () banked
  8189  0131A2  0E3E               	movlw	low _Scroll_4
  8190  0131A4  0101               	movlb	1	; () banked
  8191  0131A6  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8192  0131A8  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8193                           
  8194                           ;LCD.c: 331: cleanBuffer(Scroll_3, 16);
  8195  0131AC  0101               	movlb	1	; () banked
  8196  0131AE  0E01               	movlw	high _Scroll_3
  8197  0131B0  0101               	movlb	1	; () banked
  8198  0131B2  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8199  0131B4  0101               	movlb	1	; () banked
  8200  0131B6  0E2E               	movlw	low _Scroll_3
  8201  0131B8  0101               	movlb	1	; () banked
  8202  0131BA  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8203  0131BC  0E00               	movlw	0
  8204  0131BE  0101               	movlb	1	; () banked
  8205  0131C0  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8206  0131C2  0E10               	movlw	16
  8207  0131C4  0101               	movlb	1	; () banked
  8208  0131C6  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8209  0131C8  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  8210                           
  8211                           ;LCD.c: 332: }
  8212  0131CC  D16B               	goto	l11676
  8213  0131CE                     l11608:
  8214                           
  8215                           ;LCD.c: 333: else if(ScrollDisplayPosition == 5)
  8216  0131CE  0101               	movlb	1	; () banked
  8217  0131D0  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8218  0131D2  0A05               	xorlw	5
  8219  0131D4  A4D8               	btfss	status,2,c
  8220  0131D6  D033               	goto	l11618
  8221                           
  8222                           ; BSR set to: 1
  8223                           ;LCD.c: 334: {
  8224                           ;LCD.c: 335: ClearLCD();
  8225  0131D8  EC0D  F0B8         	call	_ClearLCD	;wreg free
  8226                           
  8227                           ;LCD.c: 336: SetLCDcursor(0, 0);
  8228  0131DC  0E00               	movlw	0
  8229  0131DE  0101               	movlb	1	; () banked
  8230  0131E0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8231  0131E2  0E00               	movlw	0
  8232  0131E4  EC01  F0B7         	call	_SetLCDcursor
  8233                           
  8234                           ;LCD.c: 337: LCDPrintString(Scroll_4);
  8235  0131E8  0101               	movlb	1	; () banked
  8236  0131EA  0E01               	movlw	high _Scroll_4
  8237  0131EC  0101               	movlb	1	; () banked
  8238  0131EE  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8239  0131F0  0101               	movlb	1	; () banked
  8240  0131F2  0E3E               	movlw	low _Scroll_4
  8241  0131F4  0101               	movlb	1	; () banked
  8242  0131F6  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8243  0131F8  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8244                           
  8245                           ;LCD.c: 338: SetLCDcursor(1, 0);
  8246  0131FC  0E00               	movlw	0
  8247  0131FE  0101               	movlb	1	; () banked
  8248  013200  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8249  013202  0E01               	movlw	1
  8250  013204  EC01  F0B7         	call	_SetLCDcursor
  8251                           
  8252                           ;LCD.c: 339: LCDPrintString(Scroll_5);
  8253  013208  0101               	movlb	1	; () banked
  8254  01320A  0E01               	movlw	high _Scroll_5
  8255  01320C  0101               	movlb	1	; () banked
  8256  01320E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8257  013210  0101               	movlb	1	; () banked
  8258  013212  0E4E               	movlw	low _Scroll_5
  8259  013214  0101               	movlb	1	; () banked
  8260  013216  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8261  013218  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8262                           
  8263                           ;LCD.c: 340: cleanBuffer(Scroll_4, 16);
  8264  01321C  0101               	movlb	1	; () banked
  8265  01321E  0E01               	movlw	high _Scroll_4
  8266  013220  0101               	movlb	1	; () banked
  8267  013222  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8268  013224  0101               	movlb	1	; () banked
  8269  013226  0E3E               	movlw	low _Scroll_4
  8270  013228  0101               	movlb	1	; () banked
  8271  01322A  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8272  01322C  0E00               	movlw	0
  8273  01322E  0101               	movlb	1	; () banked
  8274  013230  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8275  013232  0E10               	movlw	16
  8276  013234  0101               	movlb	1	; () banked
  8277  013236  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8278  013238  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  8279                           
  8280                           ;LCD.c: 341: }
  8281  01323C  D133               	goto	l11676
  8282  01323E                     l11618:
  8283                           
  8284                           ;LCD.c: 342: else if(ScrollDisplayPosition == 6)
  8285  01323E  0101               	movlb	1	; () banked
  8286  013240  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8287  013242  0A06               	xorlw	6
  8288  013244  A4D8               	btfss	status,2,c
  8289  013246  D033               	goto	l11628
  8290                           
  8291                           ; BSR set to: 1
  8292                           ;LCD.c: 343: {
  8293                           ;LCD.c: 344: ClearLCD();
  8294  013248  EC0D  F0B8         	call	_ClearLCD	;wreg free
  8295                           
  8296                           ;LCD.c: 345: SetLCDcursor(0, 0);
  8297  01324C  0E00               	movlw	0
  8298  01324E  0101               	movlb	1	; () banked
  8299  013250  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8300  013252  0E00               	movlw	0
  8301  013254  EC01  F0B7         	call	_SetLCDcursor
  8302                           
  8303                           ;LCD.c: 346: LCDPrintString(Scroll_5);
  8304  013258  0101               	movlb	1	; () banked
  8305  01325A  0E01               	movlw	high _Scroll_5
  8306  01325C  0101               	movlb	1	; () banked
  8307  01325E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8308  013260  0101               	movlb	1	; () banked
  8309  013262  0E4E               	movlw	low _Scroll_5
  8310  013264  0101               	movlb	1	; () banked
  8311  013266  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8312  013268  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8313                           
  8314                           ;LCD.c: 347: SetLCDcursor(1, 0);
  8315  01326C  0E00               	movlw	0
  8316  01326E  0101               	movlb	1	; () banked
  8317  013270  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8318  013272  0E01               	movlw	1
  8319  013274  EC01  F0B7         	call	_SetLCDcursor
  8320                           
  8321                           ;LCD.c: 348: LCDPrintString(Scroll_6);
  8322  013278  0101               	movlb	1	; () banked
  8323  01327A  0E01               	movlw	high _Scroll_6
  8324  01327C  0101               	movlb	1	; () banked
  8325  01327E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8326  013280  0101               	movlb	1	; () banked
  8327  013282  0E5E               	movlw	low _Scroll_6
  8328  013284  0101               	movlb	1	; () banked
  8329  013286  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8330  013288  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8331                           
  8332                           ;LCD.c: 349: cleanBuffer(Scroll_5, 16);
  8333  01328C  0101               	movlb	1	; () banked
  8334  01328E  0E01               	movlw	high _Scroll_5
  8335  013290  0101               	movlb	1	; () banked
  8336  013292  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8337  013294  0101               	movlb	1	; () banked
  8338  013296  0E4E               	movlw	low _Scroll_5
  8339  013298  0101               	movlb	1	; () banked
  8340  01329A  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8341  01329C  0E00               	movlw	0
  8342  01329E  0101               	movlb	1	; () banked
  8343  0132A0  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8344  0132A2  0E10               	movlw	16
  8345  0132A4  0101               	movlb	1	; () banked
  8346  0132A6  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8347  0132A8  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  8348                           
  8349                           ;LCD.c: 350: }
  8350  0132AC  D0FB               	goto	l11676
  8351  0132AE                     l11628:
  8352                           
  8353                           ;LCD.c: 351: else if(ScrollDisplayPosition == 7)
  8354  0132AE  0101               	movlb	1	; () banked
  8355  0132B0  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8356  0132B2  0A07               	xorlw	7
  8357  0132B4  A4D8               	btfss	status,2,c
  8358  0132B6  D031               	goto	l11638
  8359                           
  8360                           ; BSR set to: 1
  8361                           ;LCD.c: 352: {
  8362                           ;LCD.c: 353: ClearLCD();
  8363  0132B8  EC0D  F0B8         	call	_ClearLCD	;wreg free
  8364                           
  8365                           ;LCD.c: 354: SetLCDcursor(0, 0);
  8366  0132BC  0E00               	movlw	0
  8367  0132BE  0101               	movlb	1	; () banked
  8368  0132C0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8369  0132C2  0E00               	movlw	0
  8370  0132C4  EC01  F0B7         	call	_SetLCDcursor
  8371                           
  8372                           ;LCD.c: 355: LCDPrintString(Scroll_6);
  8373  0132C8  0101               	movlb	1	; () banked
  8374  0132CA  0E01               	movlw	high _Scroll_6
  8375  0132CC  0101               	movlb	1	; () banked
  8376  0132CE  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8377  0132D0  0101               	movlb	1	; () banked
  8378  0132D2  0E5E               	movlw	low _Scroll_6
  8379  0132D4  0101               	movlb	1	; () banked
  8380  0132D6  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8381  0132D8  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8382                           
  8383                           ;LCD.c: 356: SetLCDcursor(1, 0);
  8384  0132DC  0E00               	movlw	0
  8385  0132DE  0101               	movlb	1	; () banked
  8386  0132E0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8387  0132E2  0E01               	movlw	1
  8388  0132E4  EC01  F0B7         	call	_SetLCDcursor
  8389                           
  8390                           ;LCD.c: 357: LCDPrintString(Scroll_7);
  8391  0132E8  0E00               	movlw	high _Scroll_7
  8392  0132EA  0101               	movlb	1	; () banked
  8393  0132EC  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8394  0132EE  0E27               	movlw	low _Scroll_7
  8395  0132F0  0101               	movlb	1	; () banked
  8396  0132F2  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8397  0132F4  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8398                           
  8399                           ;LCD.c: 358: cleanBuffer(Scroll_6, 16);
  8400  0132F8  0101               	movlb	1	; () banked
  8401  0132FA  0E01               	movlw	high _Scroll_6
  8402  0132FC  0101               	movlb	1	; () banked
  8403  0132FE  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8404  013300  0101               	movlb	1	; () banked
  8405  013302  0E5E               	movlw	low _Scroll_6
  8406  013304  0101               	movlb	1	; () banked
  8407  013306  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8408  013308  0E00               	movlw	0
  8409  01330A  0101               	movlb	1	; () banked
  8410  01330C  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8411  01330E  0E10               	movlw	16
  8412  013310  0101               	movlb	1	; () banked
  8413  013312  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8414  013314  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  8415                           
  8416                           ;LCD.c: 359: }
  8417  013318  D0C5               	goto	l11676
  8418  01331A                     l11638:
  8419                           
  8420                           ;LCD.c: 360: else if(ScrollDisplayPosition == 8)
  8421  01331A  0101               	movlb	1	; () banked
  8422  01331C  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8423  01331E  0A08               	xorlw	8
  8424  013320  A4D8               	btfss	status,2,c
  8425  013322  D02D               	goto	l11648
  8426                           
  8427                           ; BSR set to: 1
  8428                           ;LCD.c: 361: {
  8429                           ;LCD.c: 362: ClearLCD();
  8430  013324  EC0D  F0B8         	call	_ClearLCD	;wreg free
  8431                           
  8432                           ;LCD.c: 363: SetLCDcursor(0, 0);
  8433  013328  0E00               	movlw	0
  8434  01332A  0101               	movlb	1	; () banked
  8435  01332C  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8436  01332E  0E00               	movlw	0
  8437  013330  EC01  F0B7         	call	_SetLCDcursor
  8438                           
  8439                           ;LCD.c: 364: LCDPrintString(Scroll_7);
  8440  013334  0E00               	movlw	high _Scroll_7
  8441  013336  0101               	movlb	1	; () banked
  8442  013338  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8443  01333A  0E27               	movlw	low _Scroll_7
  8444  01333C  0101               	movlb	1	; () banked
  8445  01333E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8446  013340  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8447                           
  8448                           ;LCD.c: 365: SetLCDcursor(1, 0);
  8449  013344  0E00               	movlw	0
  8450  013346  0101               	movlb	1	; () banked
  8451  013348  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8452  01334A  0E01               	movlw	1
  8453  01334C  EC01  F0B7         	call	_SetLCDcursor
  8454                           
  8455                           ;LCD.c: 366: LCDPrintString(Scroll_8);
  8456  013350  0E00               	movlw	high _Scroll_8
  8457  013352  0101               	movlb	1	; () banked
  8458  013354  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8459  013356  0E37               	movlw	low _Scroll_8
  8460  013358  0101               	movlb	1	; () banked
  8461  01335A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8462  01335C  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8463                           
  8464                           ;LCD.c: 367: cleanBuffer(Scroll_7, 16);
  8465  013360  0E00               	movlw	high _Scroll_7
  8466  013362  0101               	movlb	1	; () banked
  8467  013364  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8468  013366  0E27               	movlw	low _Scroll_7
  8469  013368  0101               	movlb	1	; () banked
  8470  01336A  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8471  01336C  0E00               	movlw	0
  8472  01336E  0101               	movlb	1	; () banked
  8473  013370  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8474  013372  0E10               	movlw	16
  8475  013374  0101               	movlb	1	; () banked
  8476  013376  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8477  013378  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  8478                           
  8479                           ;LCD.c: 368: }
  8480  01337C  D093               	goto	l11676
  8481  01337E                     l11648:
  8482                           
  8483                           ;LCD.c: 369: else if(ScrollDisplayPosition == 9)
  8484  01337E  0101               	movlb	1	; () banked
  8485  013380  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8486  013382  0A09               	xorlw	9
  8487  013384  A4D8               	btfss	status,2,c
  8488  013386  D02F               	goto	l11658
  8489                           
  8490                           ; BSR set to: 1
  8491                           ;LCD.c: 370: {
  8492                           ;LCD.c: 371: ClearLCD();
  8493  013388  EC0D  F0B8         	call	_ClearLCD	;wreg free
  8494                           
  8495                           ;LCD.c: 372: SetLCDcursor(0, 0);
  8496  01338C  0E00               	movlw	0
  8497  01338E  0101               	movlb	1	; () banked
  8498  013390  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8499  013392  0E00               	movlw	0
  8500  013394  EC01  F0B7         	call	_SetLCDcursor
  8501                           
  8502                           ;LCD.c: 373: LCDPrintString(Scroll_8);
  8503  013398  0E00               	movlw	high _Scroll_8
  8504  01339A  0101               	movlb	1	; () banked
  8505  01339C  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8506  01339E  0E37               	movlw	low _Scroll_8
  8507  0133A0  0101               	movlb	1	; () banked
  8508  0133A2  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8509  0133A4  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8510                           
  8511                           ;LCD.c: 374: SetLCDcursor(1, 0);
  8512  0133A8  0E00               	movlw	0
  8513  0133AA  0101               	movlb	1	; () banked
  8514  0133AC  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8515  0133AE  0E01               	movlw	1
  8516  0133B0  EC01  F0B7         	call	_SetLCDcursor
  8517                           
  8518                           ;LCD.c: 375: LCDPrintString(Scroll_9);
  8519  0133B4  0100               	movlb	0	; () banked
  8520  0133B6  0E00               	movlw	high _Scroll_9
  8521  0133B8  0101               	movlb	1	; () banked
  8522  0133BA  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8523  0133BC  0100               	movlb	0	; () banked
  8524  0133BE  0EE9               	movlw	low _Scroll_9
  8525  0133C0  0101               	movlb	1	; () banked
  8526  0133C2  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8527  0133C4  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8528                           
  8529                           ;LCD.c: 376: cleanBuffer(Scroll_8, 16);
  8530  0133C8  0E00               	movlw	high _Scroll_8
  8531  0133CA  0101               	movlb	1	; () banked
  8532  0133CC  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8533  0133CE  0E37               	movlw	low _Scroll_8
  8534  0133D0  0101               	movlb	1	; () banked
  8535  0133D2  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8536  0133D4  0E00               	movlw	0
  8537  0133D6  0101               	movlb	1	; () banked
  8538  0133D8  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8539  0133DA  0E10               	movlw	16
  8540  0133DC  0101               	movlb	1	; () banked
  8541  0133DE  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8542  0133E0  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  8543                           
  8544                           ;LCD.c: 377: }
  8545  0133E4  D05F               	goto	l11676
  8546  0133E6                     l11658:
  8547                           
  8548                           ;LCD.c: 378: else if(ScrollDisplayPosition == 10)
  8549  0133E6  0101               	movlb	1	; () banked
  8550  0133E8  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8551  0133EA  0A0A               	xorlw	10
  8552  0133EC  A4D8               	btfss	status,2,c
  8553  0133EE  D033               	goto	l11668
  8554                           
  8555                           ; BSR set to: 1
  8556                           ;LCD.c: 379: {
  8557                           ;LCD.c: 380: ClearLCD();
  8558  0133F0  EC0D  F0B8         	call	_ClearLCD	;wreg free
  8559                           
  8560                           ;LCD.c: 381: SetLCDcursor(0, 0);
  8561  0133F4  0E00               	movlw	0
  8562  0133F6  0101               	movlb	1	; () banked
  8563  0133F8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8564  0133FA  0E00               	movlw	0
  8565  0133FC  EC01  F0B7         	call	_SetLCDcursor
  8566                           
  8567                           ;LCD.c: 382: LCDPrintString(Scroll_9);
  8568  013400  0100               	movlb	0	; () banked
  8569  013402  0E00               	movlw	high _Scroll_9
  8570  013404  0101               	movlb	1	; () banked
  8571  013406  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8572  013408  0100               	movlb	0	; () banked
  8573  01340A  0EE9               	movlw	low _Scroll_9
  8574  01340C  0101               	movlb	1	; () banked
  8575  01340E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8576  013410  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8577                           
  8578                           ;LCD.c: 383: SetLCDcursor(1, 0);
  8579  013414  0E00               	movlw	0
  8580  013416  0101               	movlb	1	; () banked
  8581  013418  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8582  01341A  0E01               	movlw	1
  8583  01341C  EC01  F0B7         	call	_SetLCDcursor
  8584                           
  8585                           ;LCD.c: 384: LCDPrintString(Scroll_10);
  8586  013420  0100               	movlb	0	; () banked
  8587  013422  0E00               	movlw	high _Scroll_10
  8588  013424  0101               	movlb	1	; () banked
  8589  013426  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8590  013428  0100               	movlb	0	; () banked
  8591  01342A  0ED9               	movlw	low _Scroll_10
  8592  01342C  0101               	movlb	1	; () banked
  8593  01342E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8594  013430  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8595                           
  8596                           ;LCD.c: 385: cleanBuffer(Scroll_9, 16);
  8597  013434  0100               	movlb	0	; () banked
  8598  013436  0E00               	movlw	high _Scroll_9
  8599  013438  0101               	movlb	1	; () banked
  8600  01343A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8601  01343C  0100               	movlb	0	; () banked
  8602  01343E  0EE9               	movlw	low _Scroll_9
  8603  013440  0101               	movlb	1	; () banked
  8604  013442  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8605  013444  0E00               	movlw	0
  8606  013446  0101               	movlb	1	; () banked
  8607  013448  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8608  01344A  0E10               	movlw	16
  8609  01344C  0101               	movlb	1	; () banked
  8610  01344E  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8611  013450  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  8612                           
  8613                           ;LCD.c: 386: }
  8614  013454  D027               	goto	l11676
  8615  013456                     l11668:
  8616                           
  8617                           ;LCD.c: 387: else if(ScrollDisplayPosition == 11)
  8618  013456  0101               	movlb	1	; () banked
  8619  013458  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8620  01345A  0A0B               	xorlw	11
  8621  01345C  A4D8               	btfss	status,2,c
  8622  01345E  D022               	goto	l11676
  8623                           
  8624                           ; BSR set to: 1
  8625                           ;LCD.c: 388: {
  8626                           ;LCD.c: 389: ClearLCD();
  8627  013460  EC0D  F0B8         	call	_ClearLCD	;wreg free
  8628                           
  8629                           ;LCD.c: 390: SetLCDcursor(0, 0);
  8630  013464  0E00               	movlw	0
  8631  013466  0101               	movlb	1	; () banked
  8632  013468  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  8633  01346A  0E00               	movlw	0
  8634  01346C  EC01  F0B7         	call	_SetLCDcursor
  8635                           
  8636                           ;LCD.c: 391: LCDPrintString(Scroll_10);
  8637  013470  0100               	movlb	0	; () banked
  8638  013472  0E00               	movlw	high _Scroll_10
  8639  013474  0101               	movlb	1	; () banked
  8640  013476  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  8641  013478  0100               	movlb	0	; () banked
  8642  01347A  0ED9               	movlw	low _Scroll_10
  8643  01347C  0101               	movlb	1	; () banked
  8644  01347E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  8645  013480  EC55  F0B2         	call	_LCDPrintString	;wreg free
  8646                           
  8647                           ;LCD.c: 392: cleanBuffer(Scroll_10, 16);
  8648  013484  0100               	movlb	0	; () banked
  8649  013486  0E00               	movlw	high _Scroll_10
  8650  013488  0101               	movlb	1	; () banked
  8651  01348A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  8652  01348C  0100               	movlb	0	; () banked
  8653  01348E  0ED9               	movlw	low _Scroll_10
  8654  013490  0101               	movlb	1	; () banked
  8655  013492  6F7C               	movwf	cleanBuffer@data& (0+255),b
  8656  013494  0E00               	movlw	0
  8657  013496  0101               	movlb	1	; () banked
  8658  013498  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  8659  01349A  0E10               	movlw	16
  8660  01349C  0101               	movlb	1	; () banked
  8661  01349E  6F7E               	movwf	cleanBuffer@count& (0+255),b
  8662  0134A0  EC7C  F0B5         	call	_cleanBuffer	;wreg free
  8663  0134A4                     l11676:
  8664                           
  8665                           ;LCD.c: 393: }
  8666                           ;LCD.c: 394: if(ScrollDisplayPosition > ScrollFIFOCount)
  8667  0134A4  0101               	movlb	1	; () banked
  8668  0134A6  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  8669  0134A8  0101               	movlb	1	; () banked
  8670  0134AA  5D0C               	subwf	_ScrollFIFOCount& (0+255),w,b
  8671  0134AC  B0D8               	btfsc	status,0,c
  8672  0134AE  D006               	goto	l964
  8673                           
  8674                           ; BSR set to: 1
  8675                           ;LCD.c: 395: {
  8676                           ;LCD.c: 396: ScrollFIFOCount=0;
  8677  0134B0  0E00               	movlw	0
  8678  0134B2  0101               	movlb	1	; () banked
  8679  0134B4  6F0C               	movwf	_ScrollFIFOCount& (0+255),b
  8680                           
  8681                           ;LCD.c: 397: ScrollDisplayPosition=0;
  8682  0134B6  0E00               	movlw	0
  8683  0134B8  0101               	movlb	1	; () banked
  8684  0134BA  6F0B               	movwf	_ScrollDisplayPosition& (0+255),b
  8685  0134BC                     l964:
  8686                           
  8687                           ; BSR set to: 1
  8688                           ;LCD.c: 398: }
  8689                           ;LCD.c: 399: LCDclearCount = 15000;
  8690  0134BC  0E98               	movlw	152
  8691  0134BE  0101               	movlb	1	; () banked
  8692  0134C0  6FCD               	movwf	_LCDclearCount& (0+255),b
  8693  0134C2  0E3A               	movlw	58
  8694  0134C4  0101               	movlb	1	; () banked
  8695  0134C6  6FCE               	movwf	(_LCDclearCount+1)& (0+255),b
  8696  0134C8  0E00               	movlw	0
  8697  0134CA  0101               	movlb	1	; () banked
  8698  0134CC  6FCF               	movwf	(_LCDclearCount+2)& (0+255),b
  8699  0134CE  0E00               	movlw	0
  8700  0134D0  0101               	movlb	1	; () banked
  8701  0134D2  6FD0               	movwf	(_LCDclearCount+3)& (0+255),b
  8702  0134D4  0012               	return	
  8703  0134D6                     __end_of_LCDScreenUpdate:
  8704                           	opt stack 0
  8705                           tblptru	equ	0xFF8
  8706                           tblptrh	equ	0xFF7
  8707                           tblptrl	equ	0xFF6
  8708                           tablat	equ	0xFF5
  8709                           prodl	equ	0xFF3
  8710                           postinc0	equ	0xFEE
  8711                           wreg	equ	0xFE8
  8712                           postdec1	equ	0xFE5
  8713                           fsr1l	equ	0xFE1
  8714                           status	equ	0xFD8
  8715                           
  8716 ;; *************** function _LCDPrintChar *****************
  8717 ;; Defined at:
  8718 ;;		line 266 in file "LCD.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  character       1    wreg     unsigned char 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  character       1   28[BANK1 ] unsigned char 
  8723 ;; Return value:  Size  Location     Type
  8724 ;;		None               void
  8725 ;; Registers used:
  8726 ;;		wreg, status,2, status,0, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8733 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8735 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8736 ;;Total ram usage:        1 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:    9
  8739 ;; This function calls:
  8740 ;;		_SendLCDbyte
  8741 ;; This function is called by:
  8742 ;;		_main
  8743 ;;		_LCDScreenUpdate
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text10
  8748  01704A                     __ptext10:
  8749                           	opt stack 0
  8750  01704A                     _LCDPrintChar:
  8751                           	opt stack 20
  8752                           
  8753                           ;incstack = 0
  8754                           ;LCDPrintChar@character stored from wreg
  8755  01704A  0101               	movlb	1	; () banked
  8756  01704C  6F8A               	movwf	LCDPrintChar@character& (0+255),b
  8757                           
  8758                           ; BSR set to: 1
  8759                           ;LCD.c: 268: SendLCDbyte(character, 1);
  8760  01704E  0E01               	movlw	1
  8761  017050  0101               	movlb	1	; () banked
  8762  017052  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  8763  017054  0101               	movlb	1	; () banked
  8764  017056  518A               	movf	LCDPrintChar@character& (0+255),w,b
  8765  017058  EC65  F0AB         	call	_SendLCDbyte
  8766  01705C  0012               	return	
  8767  01705E                     __end_of_LCDPrintChar:
  8768                           	opt stack 0
  8769                           tblptru	equ	0xFF8
  8770                           tblptrh	equ	0xFF7
  8771                           tblptrl	equ	0xFF6
  8772                           tablat	equ	0xFF5
  8773                           prodl	equ	0xFF3
  8774                           postinc0	equ	0xFEE
  8775                           wreg	equ	0xFE8
  8776                           postdec1	equ	0xFE5
  8777                           fsr1l	equ	0xFE1
  8778                           status	equ	0xFD8
  8779                           
  8780 ;; *************** function _InitUART *****************
  8781 ;; Defined at:
  8782 ;;		line 68 in file "UART.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  Baud            4   27[BANK1 ] unsigned long 
  8785 ;;  parity          1   31[BANK1 ] unsigned char 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;  temp            4   40[BANK1 ] unsigned long 
  8788 ;;  spbrg           2   36[BANK1 ] unsigned int 
  8789 ;;  config          1   39[BANK1 ] unsigned char 
  8790 ;;  baudconfig      1   38[BANK1 ] unsigned char 
  8791 ;; Return value:  Size  Location     Type
  8792 ;;		None               void
  8793 ;; Registers used:
  8794 ;;		wreg, status,2, status,0, cstack
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 0/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8800 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;Total ram usage:       17 bytes
  8805 ;; Hardware stack levels used:    1
  8806 ;; Hardware stack levels required when called:    7
  8807 ;; This function calls:
  8808 ;;		_OpenUSART
  8809 ;;		_ReadUSART
  8810 ;;		___lldiv
  8811 ;;		_baudUSART
  8812 ;; This function is called by:
  8813 ;;		_main
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text11
  8818  0142D6                     __ptext11:
  8819                           	opt stack 0
  8820  0142D6                     _InitUART:
  8821                           	opt stack 23
  8822                           
  8823                           ;UART.c: 70: unsigned long temp;
  8824                           ;UART.c: 71: unsigned char config;
  8825                           ;UART.c: 72: unsigned int spbrg;
  8826                           ;UART.c: 73: unsigned char baudconfig;
  8827                           ;UART.c: 83: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  8828                           
  8829                           ;incstack = 0
  8830  0142D6  0E4F               	movlw	79
  8831  0142D8  16AB               	andwf	4011,f,c	;volatile
  8832  0142DA  9AAC               	bcf	4012,5,c	;volatile
  8833  0142DC  0ECF               	movlw	207
  8834  0142DE  169D               	andwf	3997,f,c	;volatile
  8835                           
  8836                           ;UART.c: 84: config =0;
  8837  0142E0  0E00               	movlw	0
  8838  0142E2  0101               	movlb	1	; () banked
  8839  0142E4  6F95               	movwf	InitUART@config& (0+255),b
  8840                           
  8841                           ; BSR set to: 1
  8842                           ;UART.c: 85: baudconfig =0;
  8843  0142E6  0E00               	movlw	0
  8844  0142E8  0101               	movlb	1	; () banked
  8845  0142EA  6F94               	movwf	InitUART@baudconfig& (0+255),b
  8846                           
  8847                           ; BSR set to: 1
  8848                           ;UART.c: 86: BAUDCON =0;
  8849  0142EC  0E00               	movlw	0
  8850  0142EE  6EB8               	movwf	4024,c	;volatile
  8851                           
  8852                           ; BSR set to: 1
  8853                           ;UART.c: 89: config |= 0b01111111;
  8854  0142F0  0E7F               	movlw	127
  8855  0142F2  0101               	movlb	1	; () banked
  8856  0142F4  1395               	iorwf	InitUART@config& (0+255),f,b
  8857                           
  8858                           ; BSR set to: 1
  8859                           ;UART.c: 90: config |= 0b11111111;
  8860  0142F6  0101               	movlb	1	; () banked
  8861  0142F8  6995               	setf	InitUART@config& (0+255),b
  8862                           
  8863                           ; BSR set to: 1
  8864                           ;UART.c: 91: config |= 0b11111110;
  8865  0142FA  0EFE               	movlw	254
  8866  0142FC  0101               	movlb	1	; () banked
  8867  0142FE  1395               	iorwf	InitUART@config& (0+255),f,b
  8868                           
  8869                           ; BSR set to: 1
  8870                           ;UART.c: 92: config |= 0b11111111;
  8871  014300  0101               	movlb	1	; () banked
  8872  014302  6995               	setf	InitUART@config& (0+255),b
  8873                           
  8874                           ; BSR set to: 1
  8875                           ;UART.c: 93: config |= 0b11111111;
  8876  014304  0101               	movlb	1	; () banked
  8877  014306  6995               	setf	InitUART@config& (0+255),b
  8878                           
  8879                           ; BSR set to: 1
  8880                           ;UART.c: 95: PARITY = parity;
  8881  014308  C18D  F10A         	movff	InitUART@parity,_PARITY
  8882                           
  8883                           ; BSR set to: 1
  8884                           ;UART.c: 96: BAUD = Baud;
  8885  01430C  C189  F1C9         	movff	InitUART@Baud,_BAUD
  8886  014310  C18A  F1CA         	movff	InitUART@Baud+1,_BAUD+1
  8887  014314  C18B  F1CB         	movff	InitUART@Baud+2,_BAUD+2
  8888  014318  C18C  F1CC         	movff	InitUART@Baud+3,_BAUD+3
  8889                           
  8890                           ; BSR set to: 1
  8891                           ;UART.c: 97: if(parity)
  8892  01431C  0101               	movlb	1	; () banked
  8893  01431E  518D               	movf	InitUART@parity& (0+255),w,b
  8894  014320  B4D8               	btfsc	status,2,c
  8895  014322  D003               	goto	l8074
  8896                           
  8897                           ; BSR set to: 1
  8898                           ;UART.c: 98: {
  8899                           ;UART.c: 99: config |= 0b11111111;
  8900  014324  0101               	movlb	1	; () banked
  8901  014326  6995               	setf	InitUART@config& (0+255),b
  8902                           
  8903                           ;UART.c: 100: }
  8904  014328  D003               	goto	l8076
  8905  01432A                     l8074:
  8906                           
  8907                           ; BSR set to: 1
  8908                           ;UART.c: 101: else
  8909                           ;UART.c: 102: {
  8910                           ;UART.c: 103: config &= ~0b11111111;
  8911  01432A  0E00               	movlw	0
  8912  01432C  0101               	movlb	1	; () banked
  8913  01432E  6F95               	movwf	InitUART@config& (0+255),b
  8914  014330                     l8076:
  8915                           
  8916                           ; BSR set to: 1
  8917                           ;UART.c: 104: }
  8918                           ;UART.c: 105: baudconfig |= 0b00001000;
  8919  014330  0101               	movlb	1	; () banked
  8920  014332  8794               	bsf	InitUART@baudconfig& (0+255),3,b
  8921                           
  8922                           ; BSR set to: 1
  8923                           ;UART.c: 108: temp = (40960000L / Baud) - 1;
  8924  014334  0E00               	movlw	0
  8925  014336  0101               	movlb	1	; () banked
  8926  014338  6F7C               	movwf	___lldiv@dividend& (0+255),b
  8927  01433A  0E00               	movlw	0
  8928  01433C  0101               	movlb	1	; () banked
  8929  01433E  6F7D               	movwf	(___lldiv@dividend+1)& (0+255),b
  8930  014340  0E71               	movlw	113
  8931  014342  0101               	movlb	1	; () banked
  8932  014344  6F7E               	movwf	(___lldiv@dividend+2)& (0+255),b
  8933  014346  0E02               	movlw	2
  8934  014348  0101               	movlb	1	; () banked
  8935  01434A  6F7F               	movwf	(___lldiv@dividend+3)& (0+255),b
  8936  01434C  C189  F180         	movff	InitUART@Baud,___lldiv@divisor
  8937  014350  C18A  F181         	movff	InitUART@Baud+1,___lldiv@divisor+1
  8938  014354  C18B  F182         	movff	InitUART@Baud+2,___lldiv@divisor+2
  8939  014358  C18C  F183         	movff	InitUART@Baud+3,___lldiv@divisor+3
  8940  01435C  ECD2  F0AB         	call	___lldiv	;wreg free
  8941  014360  C17C  F18E         	movff	?___lldiv,??_InitUART
  8942  014364  C17D  F18F         	movff	?___lldiv+1,??_InitUART+1
  8943  014368  C17E  F190         	movff	?___lldiv+2,??_InitUART+2
  8944  01436C  C17F  F191         	movff	?___lldiv+3,??_InitUART+3
  8945  014370  0EFF               	movlw	255
  8946  014372  0101               	movlb	1	; () banked
  8947  014374  258E               	addwf	??_InitUART& (0+255),w,b
  8948  014376  0101               	movlb	1	; () banked
  8949  014378  6F96               	movwf	InitUART@temp& (0+255),b
  8950  01437A  0EFF               	movlw	255
  8951  01437C  0101               	movlb	1	; () banked
  8952  01437E  218F               	addwfc	(??_InitUART+1)& (0+255),w,b
  8953  014380  0101               	movlb	1	; () banked
  8954  014382  6F97               	movwf	(InitUART@temp+1)& (0+255),b
  8955  014384  0EFF               	movlw	255
  8956  014386  0101               	movlb	1	; () banked
  8957  014388  2190               	addwfc	(??_InitUART+2)& (0+255),w,b
  8958  01438A  0101               	movlb	1	; () banked
  8959  01438C  6F98               	movwf	(InitUART@temp+2)& (0+255),b
  8960  01438E  0EFF               	movlw	255
  8961  014390  0101               	movlb	1	; () banked
  8962  014392  2191               	addwfc	(??_InitUART+3)& (0+255),w,b
  8963  014394  0101               	movlb	1	; () banked
  8964  014396  6F99               	movwf	(InitUART@temp+3)& (0+255),b
  8965                           
  8966                           ; BSR set to: 1
  8967                           ;UART.c: 109: temp = (temp >> 2) - 1;
  8968  014398  0101               	movlb	1	; () banked
  8969  01439A  C196  F18E         	movff	InitUART@temp,??_InitUART
  8970  01439E  0101               	movlb	1	; () banked
  8971  0143A0  C197  F18F         	movff	InitUART@temp+1,??_InitUART+1
  8972  0143A4  0101               	movlb	1	; () banked
  8973  0143A6  C198  F190         	movff	InitUART@temp+2,??_InitUART+2
  8974  0143AA  0101               	movlb	1	; () banked
  8975  0143AC  C199  F191         	movff	InitUART@temp+3,??_InitUART+3
  8976  0143B0  0E03               	movlw	3
  8977  0143B2  D006               	goto	u9540
  8978  0143B4                     u9545:
  8979  0143B4  0101               	movlb	1	; () banked
  8980  0143B6  90D8               	bcf	status,0,c
  8981  0143B8  3391               	rrcf	(??_InitUART+3)& (0+255),f,b
  8982  0143BA  3390               	rrcf	(??_InitUART+2)& (0+255),f,b
  8983  0143BC  338F               	rrcf	(??_InitUART+1)& (0+255),f,b
  8984  0143BE  338E               	rrcf	??_InitUART& (0+255),f,b
  8985  0143C0                     u9540:
  8986  0143C0  2EE8               	decfsz	wreg,f,c
  8987  0143C2  D7F8               	goto	u9545
  8988  0143C4  0EFF               	movlw	255
  8989  0143C6  0101               	movlb	1	; () banked
  8990  0143C8  258E               	addwf	??_InitUART& (0+255),w,b
  8991  0143CA  0101               	movlb	1	; () banked
  8992  0143CC  6F96               	movwf	InitUART@temp& (0+255),b
  8993  0143CE  0EFF               	movlw	255
  8994  0143D0  0101               	movlb	1	; () banked
  8995  0143D2  218F               	addwfc	(??_InitUART+1)& (0+255),w,b
  8996  0143D4  0101               	movlb	1	; () banked
  8997  0143D6  6F97               	movwf	(InitUART@temp+1)& (0+255),b
  8998  0143D8  0EFF               	movlw	255
  8999  0143DA  0101               	movlb	1	; () banked
  9000  0143DC  2190               	addwfc	(??_InitUART+2)& (0+255),w,b
  9001  0143DE  0101               	movlb	1	; () banked
  9002  0143E0  6F98               	movwf	(InitUART@temp+2)& (0+255),b
  9003  0143E2  0EFF               	movlw	255
  9004  0143E4  0101               	movlb	1	; () banked
  9005  0143E6  2191               	addwfc	(??_InitUART+3)& (0+255),w,b
  9006  0143E8  0101               	movlb	1	; () banked
  9007  0143EA  6F99               	movwf	(InitUART@temp+3)& (0+255),b
  9008                           
  9009                           ; BSR set to: 1
  9010                           ;UART.c: 110: spbrg = (unsigned int)temp;
  9011  0143EC  C196  F192         	movff	InitUART@temp,InitUART@spbrg
  9012  0143F0  C197  F193         	movff	InitUART@temp+1,InitUART@spbrg+1
  9013                           
  9014                           ; BSR set to: 1
  9015                           ;UART.c: 112: OpenUSART(config, spbrg);
  9016  0143F4  C192  F17C         	movff	InitUART@spbrg,OpenUSART@spbrg
  9017  0143F8  C193  F17D         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
  9018  0143FC  0101               	movlb	1	; () banked
  9019  0143FE  5195               	movf	InitUART@config& (0+255),w,b
  9020  014400  EC48  F0B3         	call	_OpenUSART
  9021                           
  9022                           ;UART.c: 113: baudUSART(baudconfig);
  9023  014404  0101               	movlb	1	; () banked
  9024  014406  5194               	movf	InitUART@baudconfig& (0+255),w,b
  9025  014408  EC4A  F0B8         	call	_baudUSART
  9026                           
  9027                           ;UART.c: 114: temp = ReadUSART();
  9028  01440C  EC34  F0B7         	call	_ReadUSART	;wreg free
  9029  014410  0101               	movlb	1	; () banked
  9030  014412  6F8E               	movwf	??_InitUART& (0+255),b
  9031  014414  0101               	movlb	1	; () banked
  9032  014416  518E               	movf	??_InitUART& (0+255),w,b
  9033  014418  0101               	movlb	1	; () banked
  9034  01441A  6F96               	movwf	InitUART@temp& (0+255),b
  9035  01441C  0101               	movlb	1	; () banked
  9036  01441E  6B97               	clrf	(InitUART@temp+1)& (0+255),b
  9037  014420  0101               	movlb	1	; () banked
  9038  014422  6B98               	clrf	(InitUART@temp+2)& (0+255),b
  9039  014424  0101               	movlb	1	; () banked
  9040  014426  6B99               	clrf	(InitUART@temp+3)& (0+255),b
  9041                           
  9042                           ; BSR set to: 1
  9043                           ;UART.c: 115: temp = ReadUSART();
  9044  014428  EC34  F0B7         	call	_ReadUSART	;wreg free
  9045  01442C  0101               	movlb	1	; () banked
  9046  01442E  6F8E               	movwf	??_InitUART& (0+255),b
  9047  014430  0101               	movlb	1	; () banked
  9048  014432  518E               	movf	??_InitUART& (0+255),w,b
  9049  014434  0101               	movlb	1	; () banked
  9050  014436  6F96               	movwf	InitUART@temp& (0+255),b
  9051  014438  0101               	movlb	1	; () banked
  9052  01443A  6B97               	clrf	(InitUART@temp+1)& (0+255),b
  9053  01443C  0101               	movlb	1	; () banked
  9054  01443E  6B98               	clrf	(InitUART@temp+2)& (0+255),b
  9055  014440  0101               	movlb	1	; () banked
  9056  014442  6B99               	clrf	(InitUART@temp+3)& (0+255),b
  9057                           
  9058                           ; BSR set to: 1
  9059                           ;UART.c: 116: temp = ReadUSART();
  9060  014444  EC34  F0B7         	call	_ReadUSART	;wreg free
  9061  014448  0101               	movlb	1	; () banked
  9062  01444A  6F8E               	movwf	??_InitUART& (0+255),b
  9063  01444C  0101               	movlb	1	; () banked
  9064  01444E  518E               	movf	??_InitUART& (0+255),w,b
  9065  014450  0101               	movlb	1	; () banked
  9066  014452  6F96               	movwf	InitUART@temp& (0+255),b
  9067  014454  0101               	movlb	1	; () banked
  9068  014456  6B97               	clrf	(InitUART@temp+1)& (0+255),b
  9069  014458  0101               	movlb	1	; () banked
  9070  01445A  6B98               	clrf	(InitUART@temp+2)& (0+255),b
  9071  01445C  0101               	movlb	1	; () banked
  9072  01445E  6B99               	clrf	(InitUART@temp+3)& (0+255),b
  9073                           
  9074                           ; BSR set to: 1
  9075                           ;UART.c: 117: temp = ReadUSART();
  9076  014460  EC34  F0B7         	call	_ReadUSART	;wreg free
  9077  014464  0101               	movlb	1	; () banked
  9078  014466  6F8E               	movwf	??_InitUART& (0+255),b
  9079  014468  0101               	movlb	1	; () banked
  9080  01446A  518E               	movf	??_InitUART& (0+255),w,b
  9081  01446C  0101               	movlb	1	; () banked
  9082  01446E  6F96               	movwf	InitUART@temp& (0+255),b
  9083  014470  0101               	movlb	1	; () banked
  9084  014472  6B97               	clrf	(InitUART@temp+1)& (0+255),b
  9085  014474  0101               	movlb	1	; () banked
  9086  014476  6B98               	clrf	(InitUART@temp+2)& (0+255),b
  9087  014478  0101               	movlb	1	; () banked
  9088  01447A  6B99               	clrf	(InitUART@temp+3)& (0+255),b
  9089                           
  9090                           ; BSR set to: 1
  9091                           ;UART.c: 118: temp = ReadUSART();
  9092  01447C  EC34  F0B7         	call	_ReadUSART	;wreg free
  9093  014480  0101               	movlb	1	; () banked
  9094  014482  6F8E               	movwf	??_InitUART& (0+255),b
  9095  014484  0101               	movlb	1	; () banked
  9096  014486  518E               	movf	??_InitUART& (0+255),w,b
  9097  014488  0101               	movlb	1	; () banked
  9098  01448A  6F96               	movwf	InitUART@temp& (0+255),b
  9099  01448C  0101               	movlb	1	; () banked
  9100  01448E  6B97               	clrf	(InitUART@temp+1)& (0+255),b
  9101  014490  0101               	movlb	1	; () banked
  9102  014492  6B98               	clrf	(InitUART@temp+2)& (0+255),b
  9103  014494  0101               	movlb	1	; () banked
  9104  014496  6B99               	clrf	(InitUART@temp+3)& (0+255),b
  9105                           
  9106                           ; BSR set to: 1
  9107                           ;UART.c: 120: IPR1bits.RCIP = 0;
  9108  014498  9A9F               	bcf	3999,5,c	;volatile
  9109                           
  9110                           ; BSR set to: 1
  9111                           ;UART.c: 121: PIE1bits.RCIE = 1;
  9112  01449A  8A9D               	bsf	3997,5,c	;volatile
  9113                           
  9114                           ; BSR set to: 1
  9115                           ;UART.c: 122: PIR1bits.RCIF = 0;
  9116  01449C  9A9E               	bcf	3998,5,c	;volatile
  9117                           
  9118                           ; BSR set to: 1
  9119  01449E  0012               	return	
  9120  0144A0                     __end_of_InitUART:
  9121                           	opt stack 0
  9122                           tblptru	equ	0xFF8
  9123                           tblptrh	equ	0xFF7
  9124                           tblptrl	equ	0xFF6
  9125                           tablat	equ	0xFF5
  9126                           prodl	equ	0xFF3
  9127                           postinc0	equ	0xFEE
  9128                           wreg	equ	0xFE8
  9129                           postdec1	equ	0xFE5
  9130                           fsr1l	equ	0xFE1
  9131                           status	equ	0xFD8
  9132                           
  9133 ;; *************** function _baudUSART *****************
  9134 ;; Defined at:
  9135 ;;		line 130 in file "UART.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  baudconfig      1    wreg     unsigned char 
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;  baudconfig      1   14[BANK1 ] unsigned char 
  9140 ;; Return value:  Size  Location     Type
  9141 ;;		None               void
  9142 ;; Registers used:
  9143 ;;		wreg, status,2
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9150 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9152 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;Total ram usage:        1 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; Hardware stack levels required when called:    6
  9156 ;; This function calls:
  9157 ;;		Nothing
  9158 ;; This function is called by:
  9159 ;;		_InitUART
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163                           	psect	text12
  9164  017094                     __ptext12:
  9165                           	opt stack 0
  9166  017094                     _baudUSART:
  9167                           	opt stack 23
  9168                           
  9169                           ; BSR set to: 1
  9170                           ;incstack = 0
  9171                           ;baudUSART@baudconfig stored from wreg
  9172  017094  0101               	movlb	1	; () banked
  9173  017096  6F7C               	movwf	baudUSART@baudconfig& (0+255),b
  9174                           
  9175                           ; BSR set to: 1
  9176                           ;UART.c: 132: BAUDCON =0;
  9177  017098  0E00               	movlw	0
  9178  01709A  6EB8               	movwf	4024,c	;volatile
  9179                           
  9180                           ; BSR set to: 1
  9181                           ;UART.c: 133: BAUDCON = baudconfig;
  9182  01709C  C17C  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
  9183                           
  9184                           ; BSR set to: 1
  9185  0170A0  0012               	return	
  9186  0170A2                     __end_of_baudUSART:
  9187                           	opt stack 0
  9188                           tblptru	equ	0xFF8
  9189                           tblptrh	equ	0xFF7
  9190                           tblptrl	equ	0xFF6
  9191                           tablat	equ	0xFF5
  9192                           prodl	equ	0xFF3
  9193                           postinc0	equ	0xFEE
  9194                           wreg	equ	0xFE8
  9195                           postdec1	equ	0xFE5
  9196                           fsr1l	equ	0xFE1
  9197                           status	equ	0xFD8
  9198                           
  9199 ;; *************** function ___lldiv *****************
  9200 ;; Defined at:
  9201 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  9202 ;; Parameters:    Size  Location     Type
  9203 ;;  dividend        4   14[BANK1 ] unsigned long 
  9204 ;;  divisor         4   18[BANK1 ] unsigned long 
  9205 ;; Auto vars:     Size  Location     Type
  9206 ;;  quotient        4   22[BANK1 ] unsigned long 
  9207 ;;  counter         1   26[BANK1 ] unsigned char 
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  4   14[BANK1 ] unsigned long 
  9210 ;; Registers used:
  9211 ;;		wreg, status,2, status,0
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9217 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;Total ram usage:       13 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; Hardware stack levels required when called:    6
  9224 ;; This function calls:
  9225 ;;		Nothing
  9226 ;; This function is called by:
  9227 ;;		_InitUART
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text13
  9232  0157A4                     __ptext13:
  9233                           	opt stack 0
  9234  0157A4                     ___lldiv:
  9235                           	opt stack 23
  9236                           
  9237                           ; BSR set to: 1
  9238                           ;incstack = 0
  9239  0157A4  0E00               	movlw	0
  9240  0157A6  0101               	movlb	1	; () banked
  9241  0157A8  6F84               	movwf	___lldiv@quotient& (0+255),b
  9242  0157AA  0E00               	movlw	0
  9243  0157AC  0101               	movlb	1	; () banked
  9244  0157AE  6F85               	movwf	(___lldiv@quotient+1)& (0+255),b
  9245  0157B0  0E00               	movlw	0
  9246  0157B2  0101               	movlb	1	; () banked
  9247  0157B4  6F86               	movwf	(___lldiv@quotient+2)& (0+255),b
  9248  0157B6  0E00               	movlw	0
  9249  0157B8  0101               	movlb	1	; () banked
  9250  0157BA  6F87               	movwf	(___lldiv@quotient+3)& (0+255),b
  9251                           
  9252                           ; BSR set to: 1
  9253  0157BC  0101               	movlb	1	; () banked
  9254  0157BE  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9255  0157C0  1180               	iorwf	___lldiv@divisor& (0+255),w,b
  9256  0157C2  1181               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9257  0157C4  1182               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9258  0157C6  B4D8               	btfsc	status,2,c
  9259  0157C8  D04E               	goto	l1980
  9260                           
  9261                           ; BSR set to: 1
  9262  0157CA  0E01               	movlw	1
  9263  0157CC  0101               	movlb	1	; () banked
  9264  0157CE  6F88               	movwf	___lldiv@counter& (0+255),b
  9265  0157D0  D00C               	goto	l7884
  9266  0157D2                     l7882:
  9267                           
  9268                           ; BSR set to: 1
  9269  0157D2  0101               	movlb	1	; () banked
  9270  0157D4  90D8               	bcf	status,0,c
  9271  0157D6  0101               	movlb	1	; () banked
  9272  0157D8  3780               	rlcf	___lldiv@divisor& (0+255),f,b
  9273  0157DA  0101               	movlb	1	; () banked
  9274  0157DC  3781               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9275  0157DE  0101               	movlb	1	; () banked
  9276  0157E0  3782               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9277  0157E2  0101               	movlb	1	; () banked
  9278  0157E4  3783               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9279  0157E6  0101               	movlb	1	; () banked
  9280  0157E8  2B88               	incf	___lldiv@counter& (0+255),f,b
  9281  0157EA                     l7884:
  9282                           
  9283                           ; BSR set to: 1
  9284  0157EA  0101               	movlb	1	; () banked
  9285  0157EC  AF83               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  9286  0157EE  D7F1               	goto	l7882
  9287  0157F0                     l7886:
  9288                           
  9289                           ; BSR set to: 1
  9290  0157F0  0101               	movlb	1	; () banked
  9291  0157F2  90D8               	bcf	status,0,c
  9292  0157F4  0101               	movlb	1	; () banked
  9293  0157F6  3784               	rlcf	___lldiv@quotient& (0+255),f,b
  9294  0157F8  0101               	movlb	1	; () banked
  9295  0157FA  3785               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9296  0157FC  0101               	movlb	1	; () banked
  9297  0157FE  3786               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9298  015800  0101               	movlb	1	; () banked
  9299  015802  3787               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9300                           
  9301                           ; BSR set to: 1
  9302  015804  0101               	movlb	1	; () banked
  9303  015806  5180               	movf	___lldiv@divisor& (0+255),w,b
  9304  015808  0101               	movlb	1	; () banked
  9305  01580A  5D7C               	subwf	___lldiv@dividend& (0+255),w,b
  9306  01580C  0101               	movlb	1	; () banked
  9307  01580E  5181               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9308  015810  0101               	movlb	1	; () banked
  9309  015812  597D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9310  015814  0101               	movlb	1	; () banked
  9311  015816  5182               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9312  015818  0101               	movlb	1	; () banked
  9313  01581A  597E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9314  01581C  0101               	movlb	1	; () banked
  9315  01581E  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9316  015820  0101               	movlb	1	; () banked
  9317  015822  597F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9318  015824  A0D8               	btfss	status,0,c
  9319  015826  D012               	goto	l7894
  9320                           
  9321                           ; BSR set to: 1
  9322  015828  0101               	movlb	1	; () banked
  9323  01582A  5180               	movf	___lldiv@divisor& (0+255),w,b
  9324  01582C  0101               	movlb	1	; () banked
  9325  01582E  5F7C               	subwf	___lldiv@dividend& (0+255),f,b
  9326  015830  0101               	movlb	1	; () banked
  9327  015832  5181               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9328  015834  0101               	movlb	1	; () banked
  9329  015836  5B7D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9330  015838  0101               	movlb	1	; () banked
  9331  01583A  5182               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9332  01583C  0101               	movlb	1	; () banked
  9333  01583E  5B7E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9334  015840  0101               	movlb	1	; () banked
  9335  015842  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9336  015844  0101               	movlb	1	; () banked
  9337  015846  5B7F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9338                           
  9339                           ; BSR set to: 1
  9340  015848  0101               	movlb	1	; () banked
  9341  01584A  8184               	bsf	___lldiv@quotient& (0+255),0,b
  9342  01584C                     l7894:
  9343                           
  9344                           ; BSR set to: 1
  9345  01584C  0101               	movlb	1	; () banked
  9346  01584E  90D8               	bcf	status,0,c
  9347  015850  0101               	movlb	1	; () banked
  9348  015852  3383               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9349  015854  0101               	movlb	1	; () banked
  9350  015856  3382               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9351  015858  0101               	movlb	1	; () banked
  9352  01585A  3381               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9353  01585C  0101               	movlb	1	; () banked
  9354  01585E  3380               	rrcf	___lldiv@divisor& (0+255),f,b
  9355                           
  9356                           ; BSR set to: 1
  9357  015860  0101               	movlb	1	; () banked
  9358  015862  2F88               	decfsz	___lldiv@counter& (0+255),f,b
  9359  015864  D7C5               	goto	l7886
  9360  015866                     l1980:
  9361                           
  9362                           ; BSR set to: 1
  9363  015866  C184  F17C         	movff	___lldiv@quotient,?___lldiv
  9364  01586A  C185  F17D         	movff	___lldiv@quotient+1,?___lldiv+1
  9365  01586E  C186  F17E         	movff	___lldiv@quotient+2,?___lldiv+2
  9366  015872  C187  F17F         	movff	___lldiv@quotient+3,?___lldiv+3
  9367                           
  9368                           ; BSR set to: 1
  9369  015876  0012               	return	
  9370  015878                     __end_of___lldiv:
  9371                           	opt stack 0
  9372                           tblptru	equ	0xFF8
  9373                           tblptrh	equ	0xFF7
  9374                           tblptrl	equ	0xFF6
  9375                           tablat	equ	0xFF5
  9376                           prodl	equ	0xFF3
  9377                           postinc0	equ	0xFEE
  9378                           wreg	equ	0xFE8
  9379                           postdec1	equ	0xFE5
  9380                           fsr1l	equ	0xFE1
  9381                           status	equ	0xFD8
  9382                           
  9383 ;; *************** function _ReadUSART *****************
  9384 ;; Defined at:
  9385 ;;		line 249 in file "UART.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;		None
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;  data            1   14[BANK1 ] unsigned char 
  9390 ;; Return value:  Size  Location     Type
  9391 ;;                  1    wreg      unsigned char 
  9392 ;; Registers used:
  9393 ;;		wreg, status,2, status,0
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9400 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9402 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9403 ;;Total ram usage:        1 bytes
  9404 ;; Hardware stack levels used:    1
  9405 ;; Hardware stack levels required when called:    6
  9406 ;; This function calls:
  9407 ;;		Nothing
  9408 ;; This function is called by:
  9409 ;;		_main
  9410 ;;		_InitUART
  9411 ;; This function uses a non-reentrant model
  9412 ;;
  9413                           
  9414                           	psect	text14
  9415  016E68                     __ptext14:
  9416                           	opt stack 0
  9417  016E68                     _ReadUSART:
  9418                           	opt stack 24
  9419                           
  9420                           ;UART.c: 251: char data;
  9421                           ;UART.c: 253: USART_Status.val &= 0xf2;
  9422                           
  9423                           ; BSR set to: 1
  9424                           ;incstack = 0
  9425  016E68  0EF2               	movlw	242
  9426  016E6A  0101               	movlb	1	; () banked
  9427  016E6C  170D               	andwf	_USART_Status& (0+255),f,b
  9428                           
  9429                           ; BSR set to: 1
  9430                           ;UART.c: 255: if(RCSTAbits.RX9)
  9431  016E6E  ACAB               	btfss	4011,6,c	;volatile
  9432  016E70  D006               	goto	l419
  9433                           
  9434                           ; BSR set to: 1
  9435                           ;UART.c: 256: {
  9436                           ;UART.c: 257: USART_Status.RX_NINE = 0;
  9437  016E72  0101               	movlb	1	; () banked
  9438  016E74  910D               	bcf	_USART_Status& (0+255),0,b
  9439                           
  9440                           ;UART.c: 258: if(RCSTAbits.RX9D)
  9441  016E76  A0AB               	btfss	4011,0,c	;volatile
  9442  016E78  D002               	goto	l419
  9443                           
  9444                           ; BSR set to: 1
  9445                           ;UART.c: 259: USART_Status.RX_NINE = 1;
  9446  016E7A  0101               	movlb	1	; () banked
  9447  016E7C  810D               	bsf	_USART_Status& (0+255),0,b
  9448  016E7E                     l419:
  9449                           
  9450                           ; BSR set to: 1
  9451                           ;UART.c: 260: }
  9452                           ;UART.c: 262: if(RCSTAbits.FERR)
  9453  016E7E  A4AB               	btfss	4011,2,c	;volatile
  9454  016E80  D002               	goto	l421
  9455                           
  9456                           ; BSR set to: 1
  9457                           ;UART.c: 263: USART_Status.FRAME_ERROR = 1;
  9458  016E82  0101               	movlb	1	; () banked
  9459  016E84  850D               	bsf	_USART_Status& (0+255),2,b
  9460  016E86                     l421:
  9461                           
  9462                           ; BSR set to: 1
  9463                           ;UART.c: 265: if(RCSTAbits.OERR)
  9464  016E86  A2AB               	btfss	4011,1,c	;volatile
  9465  016E88  D002               	goto	l422
  9466                           
  9467                           ; BSR set to: 1
  9468                           ;UART.c: 266: USART_Status.OVERRUN_ERROR = 1;
  9469  016E8A  0101               	movlb	1	; () banked
  9470  016E8C  870D               	bsf	_USART_Status& (0+255),3,b
  9471  016E8E                     l422:
  9472                           
  9473                           ; BSR set to: 1
  9474                           ;UART.c: 268: data = RCREG;
  9475  016E8E  CFAE F17C          	movff	4014,ReadUSART@data	;volatile
  9476                           
  9477                           ; BSR set to: 1
  9478                           ;UART.c: 270: return (data);
  9479  016E92  0101               	movlb	1	; () banked
  9480  016E94  517C               	movf	ReadUSART@data& (0+255),w,b
  9481  016E96  0012               	return	
  9482  016E98                     __end_of_ReadUSART:
  9483                           	opt stack 0
  9484                           tblptru	equ	0xFF8
  9485                           tblptrh	equ	0xFF7
  9486                           tblptrl	equ	0xFF6
  9487                           tablat	equ	0xFF5
  9488                           prodl	equ	0xFF3
  9489                           postinc0	equ	0xFEE
  9490                           wreg	equ	0xFE8
  9491                           postdec1	equ	0xFE5
  9492                           fsr1l	equ	0xFE1
  9493                           status	equ	0xFD8
  9494                           
  9495 ;; *************** function _OpenUSART *****************
  9496 ;; Defined at:
  9497 ;;		line 141 in file "UART.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  config          1    wreg     unsigned char 
  9500 ;;  spbrg           2   14[BANK1 ] unsigned int 
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;  config          1   19[BANK1 ] unsigned char 
  9503 ;; Return value:  Size  Location     Type
  9504 ;;		None               void
  9505 ;; Registers used:
  9506 ;;		wreg, status,2
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9512 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;Total ram usage:        6 bytes
  9517 ;; Hardware stack levels used:    1
  9518 ;; Hardware stack levels required when called:    6
  9519 ;; This function calls:
  9520 ;;		Nothing
  9521 ;; This function is called by:
  9522 ;;		_InitUART
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           	psect	text15
  9527  016690                     __ptext15:
  9528                           	opt stack 0
  9529  016690                     _OpenUSART:
  9530                           	opt stack 23
  9531                           
  9532                           ; BSR set to: 1
  9533                           ;incstack = 0
  9534                           ;OpenUSART@config stored from wreg
  9535  016690  0101               	movlb	1	; () banked
  9536  016692  6F81               	movwf	OpenUSART@config& (0+255),b
  9537                           
  9538                           ; BSR set to: 1
  9539                           ;UART.c: 143: TXSTA = 0;
  9540  016694  0E00               	movlw	0
  9541  016696  6EAC               	movwf	4012,c	;volatile
  9542                           
  9543                           ;UART.c: 144: RCSTA = 0;
  9544  016698  0E00               	movlw	0
  9545  01669A  6EAB               	movwf	4011,c	;volatile
  9546                           
  9547                           ; BSR set to: 1
  9548                           ;UART.c: 146: if(config&0x01)
  9549  01669C  0101               	movlb	1	; () banked
  9550  01669E  B181               	btfsc	OpenUSART@config& (0+255),0,b
  9551                           
  9552                           ; BSR set to: 1
  9553                           ;UART.c: 147: TXSTAbits.SYNC = 1;
  9554  0166A0  88AC               	bsf	4012,4,c	;volatile
  9555                           
  9556                           ; BSR set to: 1
  9557                           ;UART.c: 149: if(config&0x02)
  9558                           
  9559                           ; BSR set to: 1
  9560  0166A2  0101               	movlb	1	; () banked
  9561  0166A4  A381               	btfss	OpenUSART@config& (0+255),1,b
  9562  0166A6  D002               	goto	l7310
  9563                           
  9564                           ; BSR set to: 1
  9565                           ;UART.c: 150: {
  9566                           ;UART.c: 151: TXSTAbits.TX9 = 1;
  9567  0166A8  8CAC               	bsf	4012,6,c	;volatile
  9568                           
  9569                           ;UART.c: 152: RCSTAbits.RX9 = 1;
  9570  0166AA  8CAB               	bsf	4011,6,c	;volatile
  9571  0166AC                     l7310:
  9572                           
  9573                           ; BSR set to: 1
  9574                           ;UART.c: 153: }
  9575                           ;UART.c: 155: if(config&0x04)
  9576  0166AC  0101               	movlb	1	; () banked
  9577  0166AE  B581               	btfsc	OpenUSART@config& (0+255),2,b
  9578                           
  9579                           ; BSR set to: 1
  9580                           ;UART.c: 156: TXSTAbits.CSRC = 1;
  9581  0166B0  8EAC               	bsf	4012,7,c	;volatile
  9582                           
  9583                           ; BSR set to: 1
  9584                           ;UART.c: 158: if(config&0x08)
  9585                           
  9586                           ; BSR set to: 1
  9587  0166B2  0101               	movlb	1	; () banked
  9588  0166B4  A781               	btfss	OpenUSART@config& (0+255),3,b
  9589  0166B6  D002               	goto	l387
  9590                           
  9591                           ; BSR set to: 1
  9592                           ;UART.c: 159: RCSTAbits.CREN = 1;
  9593  0166B8  88AB               	bsf	4011,4,c	;volatile
  9594  0166BA  D001               	goto	l7318
  9595  0166BC                     l387:
  9596                           
  9597                           ; BSR set to: 1
  9598                           ;UART.c: 160: else
  9599                           ;UART.c: 161: RCSTAbits.SREN = 1;
  9600  0166BC  8AAB               	bsf	4011,5,c	;volatile
  9601  0166BE                     l7318:
  9602                           
  9603                           ; BSR set to: 1
  9604                           ;UART.c: 163: if(config&0x10)
  9605  0166BE  0101               	movlb	1	; () banked
  9606  0166C0  B981               	btfsc	OpenUSART@config& (0+255),4,b
  9607                           
  9608                           ; BSR set to: 1
  9609                           ;UART.c: 164: TXSTAbits.BRGH = 1;
  9610  0166C2  84AC               	bsf	4012,2,c	;volatile
  9611                           
  9612                           ; BSR set to: 1
  9613                           ;UART.c: 166: PIR1bits.TXIF = 0;
  9614  0166C4  989E               	bcf	3998,4,c	;volatile
  9615                           
  9616                           ; BSR set to: 1
  9617                           ;UART.c: 168: if(config&0x20)
  9618  0166C6  0101               	movlb	1	; () banked
  9619  0166C8  BB81               	btfsc	OpenUSART@config& (0+255),5,b
  9620                           
  9621                           ; BSR set to: 1
  9622                           ;UART.c: 169: RCSTAbits.ADEN = 1;
  9623  0166CA  86AB               	bsf	4011,3,c	;volatile
  9624                           
  9625                           ; BSR set to: 1
  9626                           ;UART.c: 171: if(config&0x40)
  9627                           
  9628                           ; BSR set to: 1
  9629  0166CC  0101               	movlb	1	; () banked
  9630  0166CE  AD81               	btfss	OpenUSART@config& (0+255),6,b
  9631  0166D0  D002               	goto	l391
  9632                           
  9633                           ; BSR set to: 1
  9634                           ;UART.c: 172: PIE1bits.RCIE = 1;
  9635  0166D2  8A9D               	bsf	3997,5,c	;volatile
  9636  0166D4  D001               	goto	l392
  9637  0166D6                     l391:
  9638                           
  9639                           ; BSR set to: 1
  9640                           ;UART.c: 173: else
  9641                           ;UART.c: 174: PIE1bits.RCIE = 0;
  9642  0166D6  9A9D               	bcf	3997,5,c	;volatile
  9643  0166D8                     l392:
  9644                           
  9645                           ; BSR set to: 1
  9646                           ;UART.c: 176: PIR1bits.RCIF = 0;
  9647  0166D8  9A9E               	bcf	3998,5,c	;volatile
  9648                           
  9649                           ; BSR set to: 1
  9650                           ;UART.c: 178: if(config&0x80)
  9651  0166DA  0101               	movlb	1	; () banked
  9652  0166DC  AF81               	btfss	OpenUSART@config& (0+255),7,b
  9653  0166DE  D002               	goto	l393
  9654                           
  9655                           ; BSR set to: 1
  9656                           ;UART.c: 179: PIE1bits.TXIE = 1;
  9657  0166E0  889D               	bsf	3997,4,c	;volatile
  9658  0166E2  D001               	goto	l394
  9659  0166E4                     l393:
  9660                           
  9661                           ; BSR set to: 1
  9662                           ;UART.c: 180: else
  9663                           ;UART.c: 181: PIE1bits.TXIE = 0;
  9664  0166E4  989D               	bcf	3997,4,c	;volatile
  9665  0166E6                     l394:
  9666                           
  9667                           ; BSR set to: 1
  9668                           ;UART.c: 183: SPBRG = spbrg;
  9669  0166E6  C17C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  9670                           
  9671                           ; BSR set to: 1
  9672                           ;UART.c: 184: SPBRGH = spbrg >> 8;
  9673  0166EA  0101               	movlb	1	; () banked
  9674  0166EC  C17D  F17E         	movff	OpenUSART@spbrg+1,??_OpenUSART
  9675  0166F0  C17E  F17F         	movff	??_OpenUSART,??_OpenUSART+1
  9676  0166F4  0101               	movlb	1	; () banked
  9677  0166F6  6B80               	clrf	(??_OpenUSART+2)& (0+255),b
  9678  0166F8  0101               	movlb	1	; () banked
  9679  0166FA  517F               	movf	(??_OpenUSART+1)& (0+255),w,b
  9680  0166FC  6EB0               	movwf	4016,c	;volatile
  9681                           
  9682                           ; BSR set to: 1
  9683                           ;UART.c: 186: TXSTAbits.TXEN = 1;
  9684  0166FE  8AAC               	bsf	4012,5,c	;volatile
  9685                           
  9686                           ; BSR set to: 1
  9687                           ;UART.c: 187: RCSTAbits.SPEN = 1;
  9688  016700  8EAB               	bsf	4011,7,c	;volatile
  9689                           
  9690                           ; BSR set to: 1
  9691  016702  0012               	return	
  9692  016704                     __end_of_OpenUSART:
  9693                           	opt stack 0
  9694                           tblptru	equ	0xFF8
  9695                           tblptrh	equ	0xFF7
  9696                           tblptrl	equ	0xFF6
  9697                           tablat	equ	0xFF5
  9698                           prodl	equ	0xFF3
  9699                           postinc0	equ	0xFEE
  9700                           wreg	equ	0xFE8
  9701                           postdec1	equ	0xFE5
  9702                           fsr1l	equ	0xFE1
  9703                           status	equ	0xFD8
  9704                           
  9705 ;; *************** function _InitApp *****************
  9706 ;; Defined at:
  9707 ;;		line 53 in file "user.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;		None
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;		None
  9712 ;; Return value:  Size  Location     Type
  9713 ;;		None               void
  9714 ;; Registers used:
  9715 ;;		wreg, status,2, status,0, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;Total ram usage:        0 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    7
  9728 ;; This function calls:
  9729 ;;		_delayUS
  9730 ;; This function is called by:
  9731 ;;		_main
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           	psect	text16
  9736  016A9A                     __ptext16:
  9737                           	opt stack 0
  9738  016A9A                     _InitApp:
  9739                           	opt stack 23
  9740                           
  9741                           ;user.c: 55: TRISDbits.TRISD1 = 0;
  9742                           
  9743                           ; BSR set to: 1
  9744                           ;incstack = 0
  9745  016A9A  9295               	bcf	3989,1,c	;volatile
  9746                           
  9747                           ;user.c: 56: TRISDbits.TRISD2 = 0;
  9748  016A9C  9495               	bcf	3989,2,c	;volatile
  9749                           
  9750                           ;user.c: 57: TRISDbits.TRISD0 = 0;
  9751  016A9E  9095               	bcf	3989,0,c	;volatile
  9752                           
  9753                           ;user.c: 58: TRISAbits.TRISA0 = 1;
  9754  016AA0  8092               	bsf	3986,0,c	;volatile
  9755                           
  9756                           ;user.c: 59: TRISCbits.TRISC2 = 0;
  9757  016AA2  9494               	bcf	3988,2,c	;volatile
  9758                           
  9759                           ;user.c: 60: TRISCbits.TRISC1 = 0;
  9760  016AA4  9294               	bcf	3988,1,c	;volatile
  9761                           
  9762                           ;user.c: 61: TRISEbits.TRISE2 = 1;
  9763  016AA6  8496               	bsf	3990,2,c	;volatile
  9764                           
  9765                           ;user.c: 62: TRISEbits.TRISE1 = 0;
  9766  016AA8  9296               	bcf	3990,1,c	;volatile
  9767                           
  9768                           ;user.c: 64: TRISCbits.TRISC3 = 0;
  9769  016AAA  9694               	bcf	3988,3,c	;volatile
  9770                           
  9771                           ;user.c: 65: TRISCbits.TRISC4 = 0;
  9772  016AAC  9894               	bcf	3988,4,c	;volatile
  9773                           
  9774                           ;user.c: 67: LATC &= ~0b00001000;
  9775  016AAE  968B               	bcf	3979,3,c	;volatile
  9776                           
  9777                           ;user.c: 68: delayUS(200);
  9778  016AB0  0EC8               	movlw	200
  9779  016AB2  0101               	movlb	1	; () banked
  9780  016AB4  6F7C               	movwf	delayUS@US& (0+255),b
  9781  016AB6  0E00               	movlw	0
  9782  016AB8  0101               	movlb	1	; () banked
  9783  016ABA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  9784  016ABC  0E00               	movlw	0
  9785  016ABE  0101               	movlb	1	; () banked
  9786  016AC0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  9787  016AC2  0E00               	movlw	0
  9788  016AC4  0101               	movlb	1	; () banked
  9789  016AC6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  9790  016AC8  EC0D  F0B3         	call	_delayUS	;wreg free
  9791                           
  9792                           ;user.c: 69: TRISCbits.TRISC3 = 1;
  9793  016ACC  8694               	bsf	3988,3,c	;volatile
  9794                           
  9795                           ;user.c: 71: LATD &= ~(0b00000010 + 0b00000100 + 0b00000001);
  9796  016ACE  0EF8               	movlw	248
  9797  016AD0  168C               	andwf	3980,f,c	;volatile
  9798                           
  9799                           ;user.c: 72: LATE &= ~0b00000010;
  9800  016AD2  928D               	bcf	3981,1,c	;volatile
  9801                           
  9802                           ;user.c: 73: LATC &= ~(0b00000010);
  9803  016AD4  928B               	bcf	3979,1,c	;volatile
  9804                           
  9805                           ;user.c: 76: TRISAbits.TRISA3 = 0;
  9806  016AD6  9692               	bcf	3986,3,c	;volatile
  9807                           
  9808                           ;user.c: 77: TRISAbits.TRISA4 = 0;
  9809  016AD8  9892               	bcf	3986,4,c	;volatile
  9810                           
  9811                           ;user.c: 78: TRISAbits.TRISA5 = 0;
  9812  016ADA  9A92               	bcf	3986,5,c	;volatile
  9813                           
  9814                           ;user.c: 79: TRISEbits.TRISE0 = 0;
  9815  016ADC  9096               	bcf	3990,0,c	;volatile
  9816                           
  9817                           ;user.c: 80: TRISDbits.TRISD4 = 0;
  9818  016ADE  9895               	bcf	3989,4,c	;volatile
  9819                           
  9820                           ;user.c: 81: TRISDbits.TRISD7 = 0;
  9821  016AE0  9E95               	bcf	3989,7,c	;volatile
  9822                           
  9823                           ;user.c: 82: TRISDbits.TRISD6 = 0;
  9824  016AE2  9C95               	bcf	3989,6,c	;volatile
  9825                           
  9826                           ;user.c: 83: TRISDbits.TRISD5 = 0;
  9827  016AE4  9A95               	bcf	3989,5,c	;volatile
  9828                           
  9829                           ;user.c: 85: LATA &= ~(0b00001000+0b00010000+0b00100000);
  9830  016AE6  0EC7               	movlw	199
  9831  016AE8  1689               	andwf	3977,f,c	;volatile
  9832                           
  9833                           ;user.c: 86: LATD &= ~(0b10000000 + 0b00100000 + 0b01000000);
  9834  016AEA  0E1F               	movlw	31
  9835  016AEC  168C               	andwf	3980,f,c	;volatile
  9836                           
  9837                           ;user.c: 87: LATE &= ~0b00000001;
  9838  016AEE  908D               	bcf	3981,0,c	;volatile
  9839                           
  9840                           ;user.c: 89: RCONbits.IPEN = 1;
  9841  016AF0  8ED0               	bsf	4048,7,c	;volatile
  9842                           
  9843                           ;user.c: 90: INTCONbits.PEIE = 1;
  9844  016AF2  8CF2               	bsf	intcon,6,c	;volatile
  9845                           
  9846                           ;user.c: 91: INTCONbits.GIE = 1;
  9847  016AF4  8EF2               	bsf	intcon,7,c	;volatile
  9848  016AF6  0012               	return	
  9849  016AF8                     __end_of_InitApp:
  9850                           	opt stack 0
  9851                           tblptru	equ	0xFF8
  9852                           tblptrh	equ	0xFF7
  9853                           tblptrl	equ	0xFF6
  9854                           tablat	equ	0xFF5
  9855                           prodl	equ	0xFF3
  9856                           intcon	equ	0xFF2
  9857                           postinc0	equ	0xFEE
  9858                           wreg	equ	0xFE8
  9859                           postdec1	equ	0xFE5
  9860                           fsr1l	equ	0xFE1
  9861                           status	equ	0xFD8
  9862                           
  9863 ;; *************** function _EnableInternalADC *****************
  9864 ;; Defined at:
  9865 ;;		line 53 in file "ADC.c"
  9866 ;; Parameters:    Size  Location     Type
  9867 ;;  channels        1    wreg     unsigned char 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;  channels        1   15[BANK1 ] unsigned char 
  9870 ;;  config          1   14[BANK1 ] unsigned char 
  9871 ;; Return value:  Size  Location     Type
  9872 ;;		None               void
  9873 ;; Registers used:
  9874 ;;		wreg, status,2, status,0
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9881 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;Total ram usage:        2 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; Hardware stack levels required when called:    6
  9887 ;; This function calls:
  9888 ;;		Nothing
  9889 ;; This function is called by:
  9890 ;;		_main
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text17
  9895  015CD0                     __ptext17:
  9896                           	opt stack 0
  9897  015CD0                     _EnableInternalADC:
  9898                           	opt stack 24
  9899                           
  9900                           ;incstack = 0
  9901                           ;EnableInternalADC@channels stored from wreg
  9902  015CD0  0101               	movlb	1	; () banked
  9903  015CD2  6F7D               	movwf	EnableInternalADC@channels& (0+255),b
  9904                           
  9905                           ; BSR set to: 1
  9906                           ;ADC.c: 55: unsigned char config =0;
  9907  015CD4  0E00               	movlw	0
  9908  015CD6  0101               	movlb	1	; () banked
  9909  015CD8  6F7C               	movwf	EnableInternalADC@config& (0+255),b
  9910                           
  9911                           ; BSR set to: 1
  9912                           ;ADC.c: 57: if(channels == 1)
  9913  015CDA  0101               	movlb	1	; () banked
  9914  015CDC  057D               	decf	EnableInternalADC@channels& (0+255),w,b
  9915  015CDE  A4D8               	btfss	status,2,c
  9916  015CE0  D002               	goto	l8110
  9917                           
  9918                           ; BSR set to: 1
  9919                           ;ADC.c: 58: {
  9920                           ;ADC.c: 59: config |= 0b00001110;
  9921  015CE2  0E0E               	movlw	14
  9922  015CE4  D03F               	goto	L10
  9923  015CE6                     l8110:
  9924                           
  9925                           ; BSR set to: 1
  9926                           ;ADC.c: 61: else if(channels ==2)
  9927  015CE6  0101               	movlb	1	; () banked
  9928  015CE8  517D               	movf	EnableInternalADC@channels& (0+255),w,b
  9929  015CEA  0A02               	xorlw	2
  9930  015CEC  A4D8               	btfss	status,2,c
  9931  015CEE  D002               	goto	l8114
  9932                           
  9933                           ; BSR set to: 1
  9934                           ;ADC.c: 62: {
  9935                           ;ADC.c: 63: config |= 0b00001101;
  9936  015CF0  0E0D               	movlw	13
  9937  015CF2  D038               	goto	L10
  9938  015CF4                     l8114:
  9939                           
  9940                           ; BSR set to: 1
  9941                           ;ADC.c: 65: else if(channels ==3)
  9942  015CF4  0101               	movlb	1	; () banked
  9943  015CF6  517D               	movf	EnableInternalADC@channels& (0+255),w,b
  9944  015CF8  0A03               	xorlw	3
  9945  015CFA  A4D8               	btfss	status,2,c
  9946  015CFC  D002               	goto	l8118
  9947                           
  9948                           ; BSR set to: 1
  9949                           ;ADC.c: 66: {
  9950                           ;ADC.c: 67: config |= 0b00001100;
  9951  015CFE  0E0C               	movlw	12
  9952  015D00  D031               	goto	L10
  9953  015D02                     l8118:
  9954                           
  9955                           ; BSR set to: 1
  9956                           ;ADC.c: 69: else if(channels ==4)
  9957  015D02  0101               	movlb	1	; () banked
  9958  015D04  517D               	movf	EnableInternalADC@channels& (0+255),w,b
  9959  015D06  0A04               	xorlw	4
  9960  015D08  A4D8               	btfss	status,2,c
  9961  015D0A  D002               	goto	l8122
  9962                           
  9963                           ; BSR set to: 1
  9964                           ;ADC.c: 70: {
  9965                           ;ADC.c: 71: config |= 0b00001011;
  9966  015D0C  0E0B               	movlw	11
  9967  015D0E  D02A               	goto	L10
  9968  015D10                     l8122:
  9969                           
  9970                           ; BSR set to: 1
  9971                           ;ADC.c: 73: else if(channels ==5)
  9972  015D10  0101               	movlb	1	; () banked
  9973  015D12  517D               	movf	EnableInternalADC@channels& (0+255),w,b
  9974  015D14  0A05               	xorlw	5
  9975  015D16  A4D8               	btfss	status,2,c
  9976  015D18  D002               	goto	l8126
  9977                           
  9978                           ; BSR set to: 1
  9979                           ;ADC.c: 74: {
  9980                           ;ADC.c: 75: config |= 0b00001010;
  9981  015D1A  0E0A               	movlw	10
  9982  015D1C  D023               	goto	L10
  9983  015D1E                     l8126:
  9984                           
  9985                           ; BSR set to: 1
  9986                           ;ADC.c: 77: else if(channels ==6)
  9987  015D1E  0101               	movlb	1	; () banked
  9988  015D20  517D               	movf	EnableInternalADC@channels& (0+255),w,b
  9989  015D22  0A06               	xorlw	6
  9990  015D24  A4D8               	btfss	status,2,c
  9991  015D26  D002               	goto	l8130
  9992                           
  9993                           ; BSR set to: 1
  9994                           ;ADC.c: 78: {
  9995                           ;ADC.c: 79: config |= 0b00001001;
  9996  015D28  0E09               	movlw	9
  9997  015D2A  D01C               	goto	L10
  9998  015D2C                     l8130:
  9999                           
 10000                           ; BSR set to: 1
 10001                           ;ADC.c: 81: else if(channels ==7)
 10002  015D2C  0101               	movlb	1	; () banked
 10003  015D2E  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10004  015D30  0A07               	xorlw	7
 10005  015D32  A4D8               	btfss	status,2,c
 10006  015D34  D003               	goto	l8134
 10007                           
 10008                           ; BSR set to: 1
 10009                           ;ADC.c: 82: {
 10010                           ;ADC.c: 83: config |= 0b00001000;
 10011  015D36  0101               	movlb	1	; () banked
 10012  015D38  877C               	bsf	EnableInternalADC@config& (0+255),3,b
 10013                           
 10014                           ;ADC.c: 84: }
 10015  015D3A  D019               	goto	l8148
 10016  015D3C                     l8134:
 10017                           
 10018                           ; BSR set to: 1
 10019                           ;ADC.c: 85: else if(channels ==8)
 10020  015D3C  0101               	movlb	1	; () banked
 10021  015D3E  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10022  015D40  0A08               	xorlw	8
 10023  015D42  A4D8               	btfss	status,2,c
 10024  015D44  D002               	goto	l8138
 10025                           
 10026                           ; BSR set to: 1
 10027                           ;ADC.c: 86: {
 10028                           ;ADC.c: 87: config |= 0b00000111;
 10029  015D46  0E07               	movlw	7
 10030  015D48  D00D               	goto	L10
 10031  015D4A                     l8138:
 10032                           
 10033                           ; BSR set to: 1
 10034                           ;ADC.c: 89: else if(channels ==9)
 10035  015D4A  0101               	movlb	1	; () banked
 10036  015D4C  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10037  015D4E  0A09               	xorlw	9
 10038  015D50  A4D8               	btfss	status,2,c
 10039  015D52  D002               	goto	l8142
 10040                           
 10041                           ; BSR set to: 1
 10042                           ;ADC.c: 90: {
 10043                           ;ADC.c: 91: config |= 0b00000110;
 10044  015D54  0E06               	movlw	6
 10045  015D56  D006               	goto	L10
 10046  015D58                     l8142:
 10047                           
 10048                           ; BSR set to: 1
 10049                           ;ADC.c: 93: else if(channels ==10)
 10050  015D58  0101               	movlb	1	; () banked
 10051  015D5A  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10052  015D5C  0A0A               	xorlw	10
 10053  015D5E  A4D8               	btfss	status,2,c
 10054  015D60  D004               	goto	l8146
 10055                           
 10056                           ; BSR set to: 1
 10057                           ;ADC.c: 94: {
 10058                           ;ADC.c: 95: config |= 0b00000101;
 10059  015D62  0E05               	movlw	5
 10060  015D64                     L10:
 10061  015D64  0101               	movlb	1	; () banked
 10062  015D66  137C               	iorwf	EnableInternalADC@config& (0+255),f,b
 10063                           
 10064                           ;ADC.c: 96: }
 10065  015D68  D002               	goto	l8148
 10066  015D6A                     l8146:
 10067                           
 10068                           ; BSR set to: 1
 10069                           ;ADC.c: 97: else
 10070                           ;ADC.c: 98: {
 10071                           ;ADC.c: 99: config |= 0b00000100;
 10072  015D6A  0101               	movlb	1	; () banked
 10073  015D6C  857C               	bsf	EnableInternalADC@config& (0+255),2,b
 10074  015D6E                     l8148:
 10075                           
 10076                           ; BSR set to: 1
 10077                           ;ADC.c: 100: }
 10078                           ;ADC.c: 102: ADCON1 = config;
 10079  015D6E  C17C  FFC1         	movff	EnableInternalADC@config,4033	;volatile
 10080                           
 10081                           ; BSR set to: 1
 10082  015D72  0012               	return	
 10083  015D74                     __end_of_EnableInternalADC:
 10084                           	opt stack 0
 10085                           tblptru	equ	0xFF8
 10086                           tblptrh	equ	0xFF7
 10087                           tblptrl	equ	0xFF6
 10088                           tablat	equ	0xFF5
 10089                           prodl	equ	0xFF3
 10090                           intcon	equ	0xFF2
 10091                           postinc0	equ	0xFEE
 10092                           wreg	equ	0xFE8
 10093                           postdec1	equ	0xFE5
 10094                           fsr1l	equ	0xFE1
 10095                           status	equ	0xFD8
 10096                           
 10097 ;; *************** function _ContrastPWM_init *****************
 10098 ;; Defined at:
 10099 ;;		line 81 in file "PWM.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;		None
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;		None
 10104 ;; Return value:  Size  Location     Type
 10105 ;;		None               void
 10106 ;; Registers used:
 10107 ;;		wreg, status,2, status,0, cstack
 10108 ;; Tracked objects:
 10109 ;;		On entry : 0/0
 10110 ;;		On exit  : 0/0
 10111 ;;		Unchanged: 0/0
 10112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10117 ;;Total ram usage:        0 bytes
 10118 ;; Hardware stack levels used:    1
 10119 ;; Hardware stack levels required when called:    9
 10120 ;; This function calls:
 10121 ;;		_SetDuty
 10122 ;; This function is called by:
 10123 ;;		_main
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           	psect	text18
 10128  0170B0                     __ptext18:
 10129                           	opt stack 0
 10130  0170B0                     _ContrastPWM_init:
 10131                           	opt stack 21
 10132                           
 10133                           ;PWM.c: 85: SetDuty(0);
 10134                           
 10135                           ; BSR set to: 1
 10136                           ;incstack = 0
 10137  0170B0  0E00               	movlw	0
 10138  0170B2  EC3C  F0AC         	call	_SetDuty
 10139                           
 10140                           ;PWM.c: 86: ECCP1CON |= 0b00001100;
 10141  0170B6  0E0C               	movlw	12
 10142  0170B8  12BA               	iorwf	4026,f,c	;volatile
 10143  0170BA  0012               	return	
 10144  0170BC                     __end_of_ContrastPWM_init:
 10145                           	opt stack 0
 10146                           tblptru	equ	0xFF8
 10147                           tblptrh	equ	0xFF7
 10148                           tblptrl	equ	0xFF6
 10149                           tablat	equ	0xFF5
 10150                           prodl	equ	0xFF3
 10151                           intcon	equ	0xFF2
 10152                           postinc0	equ	0xFEE
 10153                           wreg	equ	0xFE8
 10154                           postdec1	equ	0xFE5
 10155                           fsr1l	equ	0xFE1
 10156                           status	equ	0xFD8
 10157                           
 10158 ;; *************** function _ConfigureOscillator *****************
 10159 ;; Defined at:
 10160 ;;		line 52 in file "system.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;		None
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;		None
 10165 ;; Return value:  Size  Location     Type
 10166 ;;		None               void
 10167 ;; Registers used:
 10168 ;;		None
 10169 ;; Tracked objects:
 10170 ;;		On entry : 0/0
 10171 ;;		On exit  : 0/0
 10172 ;;		Unchanged: 0/0
 10173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10178 ;;Total ram usage:        0 bytes
 10179 ;; Hardware stack levels used:    1
 10180 ;; Hardware stack levels required when called:    6
 10181 ;; This function calls:
 10182 ;;		Nothing
 10183 ;; This function is called by:
 10184 ;;		_main
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text19
 10189  0170C4                     __ptext19:
 10190                           	opt stack 0
 10191  0170C4                     _ConfigureOscillator:
 10192                           	opt stack 24
 10193  0170C4                     l173:
 10194  0170C4  B6D3               	btfsc	4051,3,c	;volatile
 10195  0170C6  0012               	return	
 10196  0170C8  D7FD               	goto	l173
 10197  0170CA                     __end_of_ConfigureOscillator:
 10198                           	opt stack 0
 10199                           tblptru	equ	0xFF8
 10200                           tblptrh	equ	0xFF7
 10201                           tblptrl	equ	0xFF6
 10202                           tablat	equ	0xFF5
 10203                           prodl	equ	0xFF3
 10204                           intcon	equ	0xFF2
 10205                           postinc0	equ	0xFEE
 10206                           wreg	equ	0xFE8
 10207                           postdec1	equ	0xFE5
 10208                           fsr1l	equ	0xFE1
 10209                           status	equ	0xFD8
 10210                           
 10211 ;; *************** function _Command *****************
 10212 ;; Defined at:
 10213 ;;		line 65 in file "StringCommand.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;  Input           2   83[BANK1 ] PTR unsigned char 
 10216 ;;		 -> Rxdata(100), 
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;  buf           200    0[BANK5 ] unsigned char [200]
 10219 ;;  duty            2  212[BANK5 ] int 
 10220 ;;  channel         2  210[BANK5 ] int 
 10221 ;;  contrast        2  208[BANK5 ] int 
 10222 ;;  RTC_Battery_    2  206[BANK5 ] unsigned int 
 10223 ;;  RTC_Battery_    2  204[BANK5 ] unsigned int 
 10224 ;;  RTC_Battery_    2  202[BANK5 ] unsigned int 
 10225 ;;  ADC_Value       2  200[BANK5 ] unsigned int 
 10226 ;; Return value:  Size  Location     Type
 10227 ;;		None               void
 10228 ;; Registers used:
 10229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10230 ;; Tracked objects:
 10231 ;;		On entry : 0/0
 10232 ;;		On exit  : 0/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10235 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Locals:         0       0       0       0       0       0     214       0       0       0       0       0       
      +0       0
 10237 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Totals:         0       0       6       0       0       0     214       0       0       0       0       0       
      +0       0
 10239 ;;Total ram usage:      220 bytes
 10240 ;; Hardware stack levels used:    1
 10241 ;; Hardware stack levels required when called:   11
 10242 ;; This function calls:
 10243 ;;		_GetEnteredNumber
 10244 ;;		_InternalADC_Read
 10245 ;;		_LCDPrintString
 10246 ;;		_LCD_Scroll
 10247 ;;		_LCDdisplayFeedback
 10248 ;;		_Parse_Time
 10249 ;;		_READ_RTC_TIME
 10250 ;;		_RemoveSpaces
 10251 ;;		_SET_RTC_TIME
 10252 ;;		_Send_Config1
 10253 ;;		_Send_Config2
 10254 ;;		_SetContrast
 10255 ;;		_SetDuty
 10256 ;;		_SetLCDcursor
 10257 ;;		_SprintDate
 10258 ;;		_StartsWith
 10259 ;;		_StringAddEqual
 10260 ;;		_StringContains
 10261 ;;		_StringMatch
 10262 ;;		_UARTstring
 10263 ;;		___ftdiv
 10264 ;;		___ftmul
 10265 ;;		___fttol
 10266 ;;		___lwmod
 10267 ;;		___lwtoft
 10268 ;;		_cleanBuffer
 10269 ;;		_delayUS
 10270 ;;		_lowercase
 10271 ;;		_sprintf
 10272 ;; This function is called by:
 10273 ;;		_main
 10274 ;; This function uses a non-reentrant model
 10275 ;;
 10276                           
 10277                           	psect	text20
 10278  010000                     __ptext20:
 10279                           	opt stack 0
 10280  010000                     _Command:
 10281                           	opt stack 19
 10282                           
 10283                           ;StringCommand.c: 67: int channel = 20;
 10284                           
 10285                           ;incstack = 0
 10286  010000  0E00               	movlw	0
 10287  010002  0105               	movlb	5	; () banked
 10288  010004  6FD3               	movwf	(Command@channel+1)& (0+255),b
 10289  010006  0E14               	movlw	20
 10290  010008  0105               	movlb	5	; () banked
 10291  01000A  6FD2               	movwf	Command@channel& (0+255),b
 10292                           
 10293                           ;StringCommand.c: 68: unsigned int ADC_Value = 0;
 10294  01000C  0E00               	movlw	0
 10295  01000E  0105               	movlb	5	; () banked
 10296  010010  6FC9               	movwf	(Command@ADC_Value+1)& (0+255),b
 10297  010012  0E00               	movlw	0
 10298  010014  0105               	movlb	5	; () banked
 10299  010016  6FC8               	movwf	Command@ADC_Value& (0+255),b
 10300                           
 10301                           ;StringCommand.c: 69: unsigned int RTC_Battery_Value =0;
 10302  010018  0E00               	movlw	0
 10303  01001A  0105               	movlb	5	; () banked
 10304  01001C  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 10305  01001E  0E00               	movlw	0
 10306  010020  0105               	movlb	5	; () banked
 10307  010022  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 10308                           
 10309                           ;StringCommand.c: 70: unsigned int RTC_Battery_Value_HIGH_decimal =0;
 10310  010024  0E00               	movlw	0
 10311  010026  0105               	movlb	5	; () banked
 10312  010028  6FCD               	movwf	(Command@RTC_Battery_Value_HIGH_decimal+1)& (0+255),b
 10313  01002A  0E00               	movlw	0
 10314  01002C  0105               	movlb	5	; () banked
 10315  01002E  6FCC               	movwf	Command@RTC_Battery_Value_HIGH_decimal& (0+255),b
 10316                           
 10317                           ;StringCommand.c: 71: unsigned int RTC_Battery_Value_LOW_decimal =0;
 10318  010030  0E00               	movlw	0
 10319  010032  0105               	movlb	5	; () banked
 10320  010034  6FCF               	movwf	(Command@RTC_Battery_Value_LOW_decimal+1)& (0+255),b
 10321  010036  0E00               	movlw	0
 10322  010038  0105               	movlb	5	; () banked
 10323  01003A  6FCE               	movwf	Command@RTC_Battery_Value_LOW_decimal& (0+255),b
 10324                           
 10325                           ;StringCommand.c: 72: int duty = 0;
 10326  01003C  0E00               	movlw	0
 10327  01003E  0105               	movlb	5	; () banked
 10328  010040  6FD5               	movwf	(Command@duty+1)& (0+255),b
 10329  010042  0E00               	movlw	0
 10330  010044  0105               	movlb	5	; () banked
 10331  010046  6FD4               	movwf	Command@duty& (0+255),b
 10332                           
 10333                           ;StringCommand.c: 73: int contrast = 0;
 10334  010048  0E00               	movlw	0
 10335  01004A  0105               	movlb	5	; () banked
 10336  01004C  6FD1               	movwf	(Command@contrast+1)& (0+255),b
 10337  01004E  0E00               	movlw	0
 10338  010050  0105               	movlb	5	; () banked
 10339  010052  6FD0               	movwf	Command@contrast& (0+255),b
 10340                           
 10341                           ; BSR set to: 5
 10342                           ;StringCommand.c: 74: unsigned char buf[200];
 10343                           ;StringCommand.c: 76: UARTstring("\r\n\n");
 10344  010054  0EF1               	movlw	high (STR_226+65)
 10345  010056  0101               	movlb	1	; () banked
 10346  010058  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10347  01005A  0E5B               	movlw	low (STR_226+65)
 10348  01005C  0101               	movlb	1	; () banked
 10349  01005E  6F87               	movwf	UARTstring@data& (0+255),b
 10350  010060  EC15  F0AE         	call	_UARTstring	;wreg free
 10351                           
 10352                           ;StringCommand.c: 77: lowercase(Input);
 10353  010064  0101               	movlb	1	; () banked
 10354  010066  C1C2  F17D         	movff	Command@Input+1,lowercase@Input+1
 10355  01006A  0101               	movlb	1	; () banked
 10356  01006C  C1C1  F17C         	movff	Command@Input,lowercase@Input
 10357  010070  ECC5  F0B0         	call	_lowercase	;wreg free
 10358                           
 10359                           ;StringCommand.c: 78: RemoveSpaces(Input);
 10360  010074  0101               	movlb	1	; () banked
 10361  010076  C1C2  F18C         	movff	Command@Input+1,RemoveSpaces@This+1
 10362  01007A  0101               	movlb	1	; () banked
 10363  01007C  C1C1  F18B         	movff	Command@Input,RemoveSpaces@This
 10364  010080  EC63  F0AD         	call	_RemoveSpaces	;wreg free
 10365                           
 10366                           ;StringCommand.c: 81: if (StartsWith(Input, "led"))
 10367  010084  0101               	movlb	1	; () banked
 10368  010086  C1C2  F17D         	movff	Command@Input+1,StartsWith@This+1
 10369  01008A  0101               	movlb	1	; () banked
 10370  01008C  C1C1  F17C         	movff	Command@Input,StartsWith@This
 10371  010090  0EFF               	movlw	high (STR_141+3)
 10372  010092  0101               	movlb	1	; () banked
 10373  010094  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 10374  010096  0E85               	movlw	low (STR_141+3)
 10375  010098  0101               	movlb	1	; () banked
 10376  01009A  6F7E               	movwf	StartsWith@That& (0+255),b
 10377  01009C  EC57  F0AF         	call	_StartsWith	;wreg free
 10378  0100A0  0900               	iorlw	0
 10379  0100A2  B4D8               	btfsc	status,2,c
 10380  0100A4  D14F               	goto	l11752
 10381                           
 10382                           ;StringCommand.c: 82: {
 10383                           ;StringCommand.c: 83: if (!StringContains(Input, "?"))
 10384  0100A6  0101               	movlb	1	; () banked
 10385  0100A8  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 10386  0100AC  0101               	movlb	1	; () banked
 10387  0100AE  C1C1  F17C         	movff	Command@Input,StringContains@This
 10388  0100B2  0EFA               	movlw	high (STR_64+14)
 10389  0100B4  0101               	movlb	1	; () banked
 10390  0100B6  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 10391  0100B8  0EA6               	movlw	low (STR_64+14)
 10392  0100BA  0101               	movlb	1	; () banked
 10393  0100BC  6F7E               	movwf	StringContains@That& (0+255),b
 10394  0100BE  ECD8  F0B1         	call	_StringContains	;wreg free
 10395  0100C2  0900               	iorlw	0
 10396  0100C4  A4D8               	btfss	status,2,c
 10397  0100C6  D0EC               	goto	l11742
 10398                           
 10399                           ;StringCommand.c: 84: {
 10400                           ;StringCommand.c: 85: if (StringMatch(Input, "led0"))
 10401  0100C8  0101               	movlb	1	; () banked
 10402  0100CA  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 10403  0100CE  0101               	movlb	1	; () banked
 10404  0100D0  C1C1  F17C         	movff	Command@Input,StringMatch@This
 10405  0100D4  0EFF               	movlw	high STR_21
 10406  0100D6  0101               	movlb	1	; () banked
 10407  0100D8  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10408  0100DA  0EBE               	movlw	low STR_21
 10409  0100DC  0101               	movlb	1	; () banked
 10410  0100DE  6F7E               	movwf	StringMatch@That& (0+255),b
 10411  0100E0  EC17  F0B2         	call	_StringMatch	;wreg free
 10412  0100E4  0900               	iorlw	0
 10413  0100E6  B4D8               	btfsc	status,2,c
 10414  0100E8  D014               	goto	l11700
 10415                           
 10416                           ;StringCommand.c: 86: {
 10417                           ;StringCommand.c: 87: LATD ^= 0b00000010;
 10418  0100EA  0E02               	movlw	2
 10419  0100EC  1A8C               	xorwf	3980,f,c	;volatile
 10420                           
 10421                           ;StringCommand.c: 88: UARTstring("LED0 Toggled");
 10422  0100EE  0EFD               	movlw	high STR_22
 10423  0100F0  0101               	movlb	1	; () banked
 10424  0100F2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10425  0100F4  0E74               	movlw	low STR_22
 10426  0100F6  0101               	movlb	1	; () banked
 10427  0100F8  6F87               	movwf	UARTstring@data& (0+255),b
 10428  0100FA  EC15  F0AE         	call	_UARTstring	;wreg free
 10429                           
 10430                           ;StringCommand.c: 89: LCDdisplayFeedback("LED0 Toggled");
 10431  0100FE  0EFD               	movlw	high STR_22
 10432  010100  0101               	movlb	1	; () banked
 10433  010102  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10434  010104  0E74               	movlw	low STR_22
 10435  010106  0101               	movlb	1	; () banked
 10436  010108  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10437  01010A  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 10438                           
 10439                           ;StringCommand.c: 90: }
 10440  01010E  EF28  F092         	goto	l555
 10441  010112                     l11700:
 10442                           
 10443                           ;StringCommand.c: 91: else if (StringMatch(Input, "led0=on"))
 10444  010112  0101               	movlb	1	; () banked
 10445  010114  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 10446  010118  0101               	movlb	1	; () banked
 10447  01011A  C1C1  F17C         	movff	Command@Input,StringMatch@This
 10448  01011E  0EFF               	movlw	high STR_24
 10449  010120  0101               	movlb	1	; () banked
 10450  010122  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10451  010124  0E3F               	movlw	low STR_24
 10452  010126  0101               	movlb	1	; () banked
 10453  010128  6F7E               	movwf	StringMatch@That& (0+255),b
 10454  01012A  EC17  F0B2         	call	_StringMatch	;wreg free
 10455  01012E  0900               	iorlw	0
 10456  010130  B4D8               	btfsc	status,2,c
 10457  010132  D013               	goto	l11708
 10458                           
 10459                           ;StringCommand.c: 92: {
 10460                           ;StringCommand.c: 93: LATD |= 0b00000010;
 10461  010134  828C               	bsf	3980,1,c	;volatile
 10462                           
 10463                           ;StringCommand.c: 94: UARTstring("LED0 On");
 10464  010136  0EFF               	movlw	high STR_25
 10465  010138  0101               	movlb	1	; () banked
 10466  01013A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10467  01013C  0E2F               	movlw	low STR_25
 10468  01013E  0101               	movlb	1	; () banked
 10469  010140  6F87               	movwf	UARTstring@data& (0+255),b
 10470  010142  EC15  F0AE         	call	_UARTstring	;wreg free
 10471                           
 10472                           ;StringCommand.c: 95: LCDdisplayFeedback("LED0 On");
 10473  010146  0EFF               	movlw	high STR_25
 10474  010148  0101               	movlb	1	; () banked
 10475  01014A  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10476  01014C  0E2F               	movlw	low STR_25
 10477  01014E  0101               	movlb	1	; () banked
 10478  010150  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10479  010152  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 10480                           
 10481                           ;StringCommand.c: 96: }
 10482  010156  EF28  F092         	goto	l555
 10483  01015A                     l11708:
 10484                           
 10485                           ;StringCommand.c: 97: else if (StringMatch(Input, "led0=off"))
 10486  01015A  0101               	movlb	1	; () banked
 10487  01015C  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 10488  010160  0101               	movlb	1	; () banked
 10489  010162  C1C1  F17C         	movff	Command@Input,StringMatch@This
 10490  010166  0EFE               	movlw	high STR_27
 10491  010168  0101               	movlb	1	; () banked
 10492  01016A  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10493  01016C  0ED8               	movlw	low STR_27
 10494  01016E  0101               	movlb	1	; () banked
 10495  010170  6F7E               	movwf	StringMatch@That& (0+255),b
 10496  010172  EC17  F0B2         	call	_StringMatch	;wreg free
 10497  010176  0900               	iorlw	0
 10498  010178  B4D8               	btfsc	status,2,c
 10499  01017A  D013               	goto	l11716
 10500                           
 10501                           ;StringCommand.c: 98: {
 10502                           ;StringCommand.c: 99: LATD &= ~0b00000010;
 10503  01017C  928C               	bcf	3980,1,c	;volatile
 10504                           
 10505                           ;StringCommand.c: 100: UARTstring("LED0 Off");
 10506  01017E  0EFE               	movlw	high STR_28
 10507  010180  0101               	movlb	1	; () banked
 10508  010182  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10509  010184  0EC6               	movlw	low STR_28
 10510  010186  0101               	movlb	1	; () banked
 10511  010188  6F87               	movwf	UARTstring@data& (0+255),b
 10512  01018A  EC15  F0AE         	call	_UARTstring	;wreg free
 10513                           
 10514                           ;StringCommand.c: 101: LCDdisplayFeedback("LED0 Off");
 10515  01018E  0EFE               	movlw	high STR_28
 10516  010190  0101               	movlb	1	; () banked
 10517  010192  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10518  010194  0EC6               	movlw	low STR_28
 10519  010196  0101               	movlb	1	; () banked
 10520  010198  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10521  01019A  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 10522                           
 10523                           ;StringCommand.c: 102: }
 10524  01019E  EF28  F092         	goto	l555
 10525  0101A2                     l11716:
 10526                           
 10527                           ;StringCommand.c: 103: else if (StringMatch(Input, "led1"))
 10528  0101A2  0101               	movlb	1	; () banked
 10529  0101A4  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 10530  0101A8  0101               	movlb	1	; () banked
 10531  0101AA  C1C1  F17C         	movff	Command@Input,StringMatch@This
 10532  0101AE  0EFF               	movlw	high STR_30
 10533  0101B0  0101               	movlb	1	; () banked
 10534  0101B2  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10535  0101B4  0EC8               	movlw	low STR_30
 10536  0101B6  0101               	movlb	1	; () banked
 10537  0101B8  6F7E               	movwf	StringMatch@That& (0+255),b
 10538  0101BA  EC17  F0B2         	call	_StringMatch	;wreg free
 10539  0101BE  0900               	iorlw	0
 10540  0101C0  B4D8               	btfsc	status,2,c
 10541  0101C2  D014               	goto	l11724
 10542                           
 10543                           ;StringCommand.c: 104: {
 10544                           ;StringCommand.c: 105: LATD ^= 0b00000100;
 10545  0101C4  0E04               	movlw	4
 10546  0101C6  1A8C               	xorwf	3980,f,c	;volatile
 10547                           
 10548                           ;StringCommand.c: 106: UARTstring("LED1 Toggled");
 10549  0101C8  0EFD               	movlw	high STR_31
 10550  0101CA  0101               	movlb	1	; () banked
 10551  0101CC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10552  0101CE  0E81               	movlw	low STR_31
 10553  0101D0  0101               	movlb	1	; () banked
 10554  0101D2  6F87               	movwf	UARTstring@data& (0+255),b
 10555  0101D4  EC15  F0AE         	call	_UARTstring	;wreg free
 10556                           
 10557                           ;StringCommand.c: 107: LCDdisplayFeedback("LED1 Toggled");
 10558  0101D8  0EFD               	movlw	high STR_31
 10559  0101DA  0101               	movlb	1	; () banked
 10560  0101DC  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10561  0101DE  0E81               	movlw	low STR_31
 10562  0101E0  0101               	movlb	1	; () banked
 10563  0101E2  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10564  0101E4  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 10565                           
 10566                           ;StringCommand.c: 108: }
 10567  0101E8  EF28  F092         	goto	l555
 10568  0101EC                     l11724:
 10569                           
 10570                           ;StringCommand.c: 109: else if (StringMatch(Input, "led1=on"))
 10571  0101EC  0101               	movlb	1	; () banked
 10572  0101EE  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 10573  0101F2  0101               	movlb	1	; () banked
 10574  0101F4  C1C1  F17C         	movff	Command@Input,StringMatch@This
 10575  0101F8  0EFF               	movlw	high STR_33
 10576  0101FA  0101               	movlb	1	; () banked
 10577  0101FC  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10578  0101FE  0E47               	movlw	low STR_33
 10579  010200  0101               	movlb	1	; () banked
 10580  010202  6F7E               	movwf	StringMatch@That& (0+255),b
 10581  010204  EC17  F0B2         	call	_StringMatch	;wreg free
 10582  010208  0900               	iorlw	0
 10583  01020A  B4D8               	btfsc	status,2,c
 10584  01020C  D013               	goto	l11732
 10585                           
 10586                           ;StringCommand.c: 110: {
 10587                           ;StringCommand.c: 111: LATD |= 0b00000100;
 10588  01020E  848C               	bsf	3980,2,c	;volatile
 10589                           
 10590                           ;StringCommand.c: 112: UARTstring("LED1 On");
 10591  010210  0EFF               	movlw	high STR_34
 10592  010212  0101               	movlb	1	; () banked
 10593  010214  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10594  010216  0E37               	movlw	low STR_34
 10595  010218  0101               	movlb	1	; () banked
 10596  01021A  6F87               	movwf	UARTstring@data& (0+255),b
 10597  01021C  EC15  F0AE         	call	_UARTstring	;wreg free
 10598                           
 10599                           ;StringCommand.c: 113: LCDdisplayFeedback("LED1 On");
 10600  010220  0EFF               	movlw	high STR_34
 10601  010222  0101               	movlb	1	; () banked
 10602  010224  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10603  010226  0E37               	movlw	low STR_34
 10604  010228  0101               	movlb	1	; () banked
 10605  01022A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10606  01022C  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 10607                           
 10608                           ;StringCommand.c: 114: }
 10609  010230  EF28  F092         	goto	l555
 10610  010234                     l11732:
 10611                           
 10612                           ;StringCommand.c: 115: else if (StringMatch(Input, "led1=off"))
 10613  010234  0101               	movlb	1	; () banked
 10614  010236  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 10615  01023A  0101               	movlb	1	; () banked
 10616  01023C  C1C1  F17C         	movff	Command@Input,StringMatch@This
 10617  010240  0EFE               	movlw	high STR_36
 10618  010242  0101               	movlb	1	; () banked
 10619  010244  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10620  010246  0EE1               	movlw	low STR_36
 10621  010248  0101               	movlb	1	; () banked
 10622  01024A  6F7E               	movwf	StringMatch@That& (0+255),b
 10623  01024C  EC17  F0B2         	call	_StringMatch	;wreg free
 10624  010250  0900               	iorlw	0
 10625  010252  B4D8               	btfsc	status,2,c
 10626  010254  D013               	goto	l11740
 10627                           
 10628                           ;StringCommand.c: 116: {
 10629                           ;StringCommand.c: 117: LATD &= ~0b00000100;
 10630  010256  948C               	bcf	3980,2,c	;volatile
 10631                           
 10632                           ;StringCommand.c: 118: UARTstring("LED1 Off");
 10633  010258  0EFE               	movlw	high STR_37
 10634  01025A  0101               	movlb	1	; () banked
 10635  01025C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10636  01025E  0ECF               	movlw	low STR_37
 10637  010260  0101               	movlb	1	; () banked
 10638  010262  6F87               	movwf	UARTstring@data& (0+255),b
 10639  010264  EC15  F0AE         	call	_UARTstring	;wreg free
 10640                           
 10641                           ;StringCommand.c: 119: LCDdisplayFeedback("LED1 Off");
 10642  010268  0EFE               	movlw	high STR_37
 10643  01026A  0101               	movlb	1	; () banked
 10644  01026C  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10645  01026E  0ECF               	movlw	low STR_37
 10646  010270  0101               	movlb	1	; () banked
 10647  010272  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10648  010274  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 10649                           
 10650                           ;StringCommand.c: 120: }
 10651  010278  EF28  F092         	goto	l555
 10652  01027C                     l11740:
 10653                           
 10654                           ;StringCommand.c: 121: else
 10655                           ;StringCommand.c: 122: {
 10656                           ;StringCommand.c: 123: UARTstring("LED What???");
 10657  01027C  0EFA               	movlw	high (STR_154+4)
 10658  01027E  0101               	movlb	1	; () banked
 10659  010280  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10660  010282  0ECC               	movlw	low (STR_154+4)
 10661  010284  0101               	movlb	1	; () banked
 10662  010286  6F87               	movwf	UARTstring@data& (0+255),b
 10663  010288  EC15  F0AE         	call	_UARTstring	;wreg free
 10664                           
 10665                           ;StringCommand.c: 124: LCDdisplayFeedback("LED What???");
 10666  01028C  0EFA               	movlw	high (STR_154+4)
 10667  01028E  0101               	movlb	1	; () banked
 10668  010290  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10669  010292  0ECC               	movlw	low (STR_154+4)
 10670  010294  0101               	movlb	1	; () banked
 10671  010296  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10672  010298  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 10673  01029C  EF28  F092         	goto	l555
 10674  0102A0                     l11742:
 10675                           
 10676                           ;StringCommand.c: 127: else
 10677                           ;StringCommand.c: 128: {
 10678                           ;StringCommand.c: 129: UARTstring("LED Help Menu\r\n\n");
 10679  0102A0  0EF9               	movlw	high STR_41
 10680  0102A2  0101               	movlb	1	; () banked
 10681  0102A4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10682  0102A6  0E9B               	movlw	low STR_41
 10683  0102A8  0101               	movlb	1	; () banked
 10684  0102AA  6F87               	movwf	UARTstring@data& (0+255),b
 10685  0102AC  EC15  F0AE         	call	_UARTstring	;wreg free
 10686                           
 10687                           ;StringCommand.c: 130: UARTstring("Devices:\r\n");
 10688  0102B0  0EFD               	movlw	high STR_42
 10689  0102B2  0101               	movlb	1	; () banked
 10690  0102B4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10691  0102B6  0EF1               	movlw	low STR_42
 10692  0102B8  0101               	movlb	1	; () banked
 10693  0102BA  6F87               	movwf	UARTstring@data& (0+255),b
 10694  0102BC  EC15  F0AE         	call	_UARTstring	;wreg free
 10695                           
 10696                           ;StringCommand.c: 131: UARTstring("LED0\r\n");
 10697  0102C0  0EFF               	movlw	high STR_43
 10698  0102C2  0101               	movlb	1	; () banked
 10699  0102C4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10700  0102C6  0E74               	movlw	low STR_43
 10701  0102C8  0101               	movlb	1	; () banked
 10702  0102CA  6F87               	movwf	UARTstring@data& (0+255),b
 10703  0102CC  EC15  F0AE         	call	_UARTstring	;wreg free
 10704                           
 10705                           ;StringCommand.c: 132: UARTstring("LED1\r\n\n");
 10706  0102D0  0EFF               	movlw	high STR_44
 10707  0102D2  0101               	movlb	1	; () banked
 10708  0102D4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10709  0102D6  0E17               	movlw	low STR_44
 10710  0102D8  0101               	movlb	1	; () banked
 10711  0102DA  6F87               	movwf	UARTstring@data& (0+255),b
 10712  0102DC  EC15  F0AE         	call	_UARTstring	;wreg free
 10713                           
 10714                           ;StringCommand.c: 133: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 10715  0102E0  0EF1               	movlw	high STR_45
 10716  0102E2  0101               	movlb	1	; () banked
 10717  0102E4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10718  0102E6  0E5F               	movlw	low STR_45
 10719  0102E8  0101               	movlb	1	; () banked
 10720  0102EA  6F87               	movwf	UARTstring@data& (0+255),b
 10721  0102EC  EC15  F0AE         	call	_UARTstring	;wreg free
 10722                           
 10723                           ;StringCommand.c: 134: UARTstring("i.e. LED1 = On\r\n");
 10724  0102F0  0EF9               	movlw	high STR_46
 10725  0102F2  0101               	movlb	1	; () banked
 10726  0102F4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10727  0102F6  0ECE               	movlw	low STR_46
 10728  0102F8  0101               	movlb	1	; () banked
 10729  0102FA  6F87               	movwf	UARTstring@data& (0+255),b
 10730  0102FC  EC15  F0AE         	call	_UARTstring	;wreg free
 10731                           
 10732                           ;StringCommand.c: 135: LCD_Scroll("LED Menu");
 10733  010300  0EFF               	movlw	high STR_47
 10734  010302  0101               	movlb	1	; () banked
 10735  010304  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10736  010306  0E05               	movlw	low STR_47
 10737  010308  0101               	movlb	1	; () banked
 10738  01030A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 10739  01030C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 10740                           
 10741                           ;StringCommand.c: 136: LCD_Scroll("Devices:");
 10742  010310  0EFE               	movlw	high STR_48
 10743  010312  0101               	movlb	1	; () banked
 10744  010314  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10745  010316  0EB4               	movlw	low STR_48
 10746  010318  0101               	movlb	1	; () banked
 10747  01031A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 10748  01031C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 10749                           
 10750                           ;StringCommand.c: 137: LCD_Scroll("LED0");
 10751  010320  0EFF               	movlw	high STR_49
 10752  010322  0101               	movlb	1	; () banked
 10753  010324  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10754  010326  0EB9               	movlw	low STR_49
 10755  010328  0101               	movlb	1	; () banked
 10756  01032A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 10757  01032C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 10758                           
 10759                           ;StringCommand.c: 138: LCD_Scroll("LED1");
 10760  010330  0EFF               	movlw	high STR_50
 10761  010332  0101               	movlb	1	; () banked
 10762  010334  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10763  010336  0EC3               	movlw	low STR_50
 10764  010338  0101               	movlb	1	; () banked
 10765  01033A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 10766  01033C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 10767  010340  EF28  F092         	goto	l555
 10768  010344                     l11752:
 10769                           
 10770                           ;StringCommand.c: 142: else if (StartsWith(Input, "livingroom"))
 10771  010344  0101               	movlb	1	; () banked
 10772  010346  C1C2  F17D         	movff	Command@Input+1,StartsWith@This+1
 10773  01034A  0101               	movlb	1	; () banked
 10774  01034C  C1C1  F17C         	movff	Command@Input,StartsWith@This
 10775  010350  0EFE               	movlw	high STR_51
 10776  010352  0101               	movlb	1	; () banked
 10777  010354  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 10778  010356  0E1D               	movlw	low STR_51
 10779  010358  0101               	movlb	1	; () banked
 10780  01035A  6F7E               	movwf	StartsWith@That& (0+255),b
 10781  01035C  EC57  F0AF         	call	_StartsWith	;wreg free
 10782  010360  0900               	iorlw	0
 10783  010362  B4D8               	btfsc	status,2,c
 10784  010364  D1D5               	goto	l11804
 10785                           
 10786                           ;StringCommand.c: 143: {
 10787                           ;StringCommand.c: 144: if (!StringContains(Input, "?"))
 10788  010366  0101               	movlb	1	; () banked
 10789  010368  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 10790  01036C  0101               	movlb	1	; () banked
 10791  01036E  C1C1  F17C         	movff	Command@Input,StringContains@This
 10792  010372  0EFA               	movlw	high (STR_64+14)
 10793  010374  0101               	movlb	1	; () banked
 10794  010376  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 10795  010378  0EA6               	movlw	low (STR_64+14)
 10796  01037A  0101               	movlb	1	; () banked
 10797  01037C  6F7E               	movwf	StringContains@That& (0+255),b
 10798  01037E  ECD8  F0B1         	call	_StringContains	;wreg free
 10799  010382  0900               	iorlw	0
 10800  010384  A4D8               	btfss	status,2,c
 10801  010386  D16A               	goto	l11794
 10802                           
 10803                           ;StringCommand.c: 145: {
 10804                           ;StringCommand.c: 146: if (StringMatch(Input, "livingroomlight=on") || StringMatch(Input
      +                          , "livingroomlight=off"))
 10805  010388  0101               	movlb	1	; () banked
 10806  01038A  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 10807  01038E  0101               	movlb	1	; () banked
 10808  010390  C1C1  F17C         	movff	Command@Input,StringMatch@This
 10809  010394  0EF8               	movlw	high STR_53
 10810  010396  0101               	movlb	1	; () banked
 10811  010398  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10812  01039A  0ED7               	movlw	low STR_53
 10813  01039C  0101               	movlb	1	; () banked
 10814  01039E  6F7E               	movwf	StringMatch@That& (0+255),b
 10815  0103A0  EC17  F0B2         	call	_StringMatch	;wreg free
 10816  0103A4  0900               	iorlw	0
 10817  0103A6  A4D8               	btfss	status,2,c
 10818  0103A8  D011               	goto	l560
 10819  0103AA  0101               	movlb	1	; () banked
 10820  0103AC  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 10821  0103B0  0101               	movlb	1	; () banked
 10822  0103B2  C1C1  F17C         	movff	Command@Input,StringMatch@This
 10823  0103B6  0EF8               	movlw	high STR_54
 10824  0103B8  0101               	movlb	1	; () banked
 10825  0103BA  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10826  0103BC  0E63               	movlw	low STR_54
 10827  0103BE  0101               	movlb	1	; () banked
 10828  0103C0  6F7E               	movwf	StringMatch@That& (0+255),b
 10829  0103C2  EC17  F0B2         	call	_StringMatch	;wreg free
 10830  0103C6  0900               	iorlw	0
 10831  0103C8  B4D8               	btfsc	status,2,c
 10832  0103CA  D053               	goto	l11768
 10833  0103CC                     l560:
 10834                           
 10835                           ;StringCommand.c: 147: {
 10836                           ;StringCommand.c: 148: INTCONbits.GIE = 0;
 10837  0103CC  9EF2               	bcf	intcon,7,c	;volatile
 10838                           
 10839                           ;StringCommand.c: 149: Send_Config1(0b00000001, TXdataD);
 10840  0103CE  0EF0               	movlw	high _TXdataD
 10841  0103D0  0101               	movlb	1	; () banked
 10842  0103D2  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 10843  0103D4  0EAD               	movlw	low _TXdataD
 10844  0103D6  0101               	movlb	1	; () banked
 10845  0103D8  6F87               	movwf	Send_Config1@data& (0+255),b
 10846  0103DA  0E01               	movlw	1
 10847  0103DC  EC27  F0A9         	call	_Send_Config1
 10848                           
 10849                           ;StringCommand.c: 150: Send_Config1(0b00000001, TXdataD);
 10850  0103E0  0EF0               	movlw	high _TXdataD
 10851  0103E2  0101               	movlb	1	; () banked
 10852  0103E4  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 10853  0103E6  0EAD               	movlw	low _TXdataD
 10854  0103E8  0101               	movlb	1	; () banked
 10855  0103EA  6F87               	movwf	Send_Config1@data& (0+255),b
 10856  0103EC  0E01               	movlw	1
 10857  0103EE  EC27  F0A9         	call	_Send_Config1
 10858                           
 10859                           ;StringCommand.c: 151: Send_Config1(0b00000001, TXdataD);
 10860  0103F2  0EF0               	movlw	high _TXdataD
 10861  0103F4  0101               	movlb	1	; () banked
 10862  0103F6  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 10863  0103F8  0EAD               	movlw	low _TXdataD
 10864  0103FA  0101               	movlb	1	; () banked
 10865  0103FC  6F87               	movwf	Send_Config1@data& (0+255),b
 10866  0103FE  0E01               	movlw	1
 10867  010400  EC27  F0A9         	call	_Send_Config1
 10868                           
 10869                           ;StringCommand.c: 152: Send_Config1(0b00000001, TXdataD);
 10870  010404  0EF0               	movlw	high _TXdataD
 10871  010406  0101               	movlb	1	; () banked
 10872  010408  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 10873  01040A  0EAD               	movlw	low _TXdataD
 10874  01040C  0101               	movlb	1	; () banked
 10875  01040E  6F87               	movwf	Send_Config1@data& (0+255),b
 10876  010410  0E01               	movlw	1
 10877  010412  EC27  F0A9         	call	_Send_Config1
 10878                           
 10879                           ;StringCommand.c: 153: Send_Config1(0b00000001, TXdataD);
 10880  010416  0EF0               	movlw	high _TXdataD
 10881  010418  0101               	movlb	1	; () banked
 10882  01041A  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 10883  01041C  0EAD               	movlw	low _TXdataD
 10884  01041E  0101               	movlb	1	; () banked
 10885  010420  6F87               	movwf	Send_Config1@data& (0+255),b
 10886  010422  0E01               	movlw	1
 10887  010424  EC27  F0A9         	call	_Send_Config1
 10888                           
 10889                           ;StringCommand.c: 154: Send_Config1(0b00000001, TXdataD);
 10890  010428  0EF0               	movlw	high _TXdataD
 10891  01042A  0101               	movlb	1	; () banked
 10892  01042C  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 10893  01042E  0EAD               	movlw	low _TXdataD
 10894  010430  0101               	movlb	1	; () banked
 10895  010432  6F87               	movwf	Send_Config1@data& (0+255),b
 10896  010434  0E01               	movlw	1
 10897  010436  EC27  F0A9         	call	_Send_Config1
 10898                           
 10899                           ;StringCommand.c: 155: Send_Config1(0b00000001, TXdataD);
 10900  01043A  0EF0               	movlw	high _TXdataD
 10901  01043C  0101               	movlb	1	; () banked
 10902  01043E  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 10903  010440  0EAD               	movlw	low _TXdataD
 10904  010442  0101               	movlb	1	; () banked
 10905  010444  6F87               	movwf	Send_Config1@data& (0+255),b
 10906  010446  0E01               	movlw	1
 10907  010448  EC27  F0A9         	call	_Send_Config1
 10908                           
 10909                           ;StringCommand.c: 156: INTCONbits.GIE = 1;
 10910  01044C  8EF2               	bsf	intcon,7,c	;volatile
 10911                           
 10912                           ;StringCommand.c: 157: UARTstring("Livingroom Light Toggled");
 10913  01044E  0EF7               	movlw	high STR_55
 10914  010450  0101               	movlb	1	; () banked
 10915  010452  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10916  010454  0E29               	movlw	low STR_55
 10917  010456  0101               	movlb	1	; () banked
 10918  010458  6F87               	movwf	UARTstring@data& (0+255),b
 10919  01045A  EC15  F0AE         	call	_UARTstring	;wreg free
 10920                           
 10921                           ;StringCommand.c: 158: LCDdisplayFeedback("LVNG Rm Lt TGLD");
 10922  01045E  0EFB               	movlw	high STR_56
 10923  010460  0101               	movlb	1	; () banked
 10924  010462  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10925  010464  0E08               	movlw	low STR_56
 10926  010466  0101               	movlb	1	; () banked
 10927  010468  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10928  01046A  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 10929                           
 10930                           ;StringCommand.c: 159: }
 10931  01046E  EF28  F092         	goto	l555
 10932  010472                     l11768:
 10933                           
 10934                           ;StringCommand.c: 160: else if (StringMatch(Input, "livingroomfan=on"))
 10935  010472  0101               	movlb	1	; () banked
 10936  010474  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 10937  010478  0101               	movlb	1	; () banked
 10938  01047A  C1C1  F17C         	movff	Command@Input,StringMatch@This
 10939  01047E  0EFA               	movlw	high STR_57
 10940  010480  0101               	movlb	1	; () banked
 10941  010482  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10942  010484  0E12               	movlw	low STR_57
 10943  010486  0101               	movlb	1	; () banked
 10944  010488  6F7E               	movwf	StringMatch@That& (0+255),b
 10945  01048A  EC17  F0B2         	call	_StringMatch	;wreg free
 10946  01048E  0900               	iorlw	0
 10947  010490  B4D8               	btfsc	status,2,c
 10948  010492  D05C               	goto	l11780
 10949                           
 10950                           ;StringCommand.c: 161: {
 10951                           ;StringCommand.c: 162: INTCONbits.GIE = 0;
 10952  010494  9EF2               	bcf	intcon,7,c	;volatile
 10953                           
 10954                           ;StringCommand.c: 163: Send_Config2(0b00000001, fanON);
 10955  010496  0EF0               	movlw	high _fanON
 10956  010498  0101               	movlb	1	; () banked
 10957  01049A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 10958  01049C  0E9D               	movlw	low _fanON
 10959  01049E  0101               	movlb	1	; () banked
 10960  0104A0  6F87               	movwf	Send_Config2@data& (0+255),b
 10961  0104A2  0E01               	movlw	1
 10962  0104A4  EC52  F0B1         	call	_Send_Config2
 10963                           
 10964                           ;StringCommand.c: 164: Send_Config2(0b00000001, fanON);
 10965  0104A8  0EF0               	movlw	high _fanON
 10966  0104AA  0101               	movlb	1	; () banked
 10967  0104AC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 10968  0104AE  0E9D               	movlw	low _fanON
 10969  0104B0  0101               	movlb	1	; () banked
 10970  0104B2  6F87               	movwf	Send_Config2@data& (0+255),b
 10971  0104B4  0E01               	movlw	1
 10972  0104B6  EC52  F0B1         	call	_Send_Config2
 10973                           
 10974                           ;StringCommand.c: 165: Send_Config2(0b00000001, fanON);
 10975  0104BA  0EF0               	movlw	high _fanON
 10976  0104BC  0101               	movlb	1	; () banked
 10977  0104BE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 10978  0104C0  0E9D               	movlw	low _fanON
 10979  0104C2  0101               	movlb	1	; () banked
 10980  0104C4  6F87               	movwf	Send_Config2@data& (0+255),b
 10981  0104C6  0E01               	movlw	1
 10982  0104C8  EC52  F0B1         	call	_Send_Config2
 10983                           
 10984                           ;StringCommand.c: 166: Send_Config2(0b00000001, fanON);
 10985  0104CC  0EF0               	movlw	high _fanON
 10986  0104CE  0101               	movlb	1	; () banked
 10987  0104D0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 10988  0104D2  0E9D               	movlw	low _fanON
 10989  0104D4  0101               	movlb	1	; () banked
 10990  0104D6  6F87               	movwf	Send_Config2@data& (0+255),b
 10991  0104D8  0E01               	movlw	1
 10992  0104DA  EC52  F0B1         	call	_Send_Config2
 10993                           
 10994                           ;StringCommand.c: 167: Send_Config2(0b00000001, fanON);
 10995  0104DE  0EF0               	movlw	high _fanON
 10996  0104E0  0101               	movlb	1	; () banked
 10997  0104E2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 10998  0104E4  0E9D               	movlw	low _fanON
 10999  0104E6  0101               	movlb	1	; () banked
 11000  0104E8  6F87               	movwf	Send_Config2@data& (0+255),b
 11001  0104EA  0E01               	movlw	1
 11002  0104EC  EC52  F0B1         	call	_Send_Config2
 11003                           
 11004                           ;StringCommand.c: 168: Send_Config2(0b00000001, fanON);
 11005  0104F0  0EF0               	movlw	high _fanON
 11006  0104F2  0101               	movlb	1	; () banked
 11007  0104F4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11008  0104F6  0E9D               	movlw	low _fanON
 11009  0104F8  0101               	movlb	1	; () banked
 11010  0104FA  6F87               	movwf	Send_Config2@data& (0+255),b
 11011  0104FC  0E01               	movlw	1
 11012  0104FE  EC52  F0B1         	call	_Send_Config2
 11013                           
 11014                           ;StringCommand.c: 169: Send_Config2(0b00000001, fanON);
 11015  010502  0EF0               	movlw	high _fanON
 11016  010504  0101               	movlb	1	; () banked
 11017  010506  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11018  010508  0E9D               	movlw	low _fanON
 11019  01050A  0101               	movlb	1	; () banked
 11020  01050C  6F87               	movwf	Send_Config2@data& (0+255),b
 11021  01050E  0E01               	movlw	1
 11022  010510  EC52  F0B1         	call	_Send_Config2
 11023                           
 11024                           ;StringCommand.c: 170: Send_Config2(0b00000001, fanON);
 11025  010514  0EF0               	movlw	high _fanON
 11026  010516  0101               	movlb	1	; () banked
 11027  010518  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11028  01051A  0E9D               	movlw	low _fanON
 11029  01051C  0101               	movlb	1	; () banked
 11030  01051E  6F87               	movwf	Send_Config2@data& (0+255),b
 11031  010520  0E01               	movlw	1
 11032  010522  EC52  F0B1         	call	_Send_Config2
 11033                           
 11034                           ;StringCommand.c: 171: INTCONbits.GIE = 1;
 11035  010526  8EF2               	bsf	intcon,7,c	;volatile
 11036                           
 11037                           ;StringCommand.c: 172: UARTstring("Livingroom Fan On");
 11038  010528  0EF9               	movlw	high STR_58
 11039  01052A  0101               	movlb	1	; () banked
 11040  01052C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11041  01052E  0E44               	movlw	low STR_58
 11042  010530  0101               	movlb	1	; () banked
 11043  010532  6F87               	movwf	UARTstring@data& (0+255),b
 11044  010534  EC15  F0AE         	call	_UARTstring	;wreg free
 11045                           
 11046                           ;StringCommand.c: 173: LCDdisplayFeedback("LVNG Rm Lt On");
 11047  010538  0EFC               	movlw	high STR_59
 11048  01053A  0101               	movlb	1	; () banked
 11049  01053C  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11050  01053E  0ED2               	movlw	low STR_59
 11051  010540  0101               	movlb	1	; () banked
 11052  010542  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11053  010544  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 11054                           
 11055                           ;StringCommand.c: 174: }
 11056  010548  EF28  F092         	goto	l555
 11057  01054C                     l11780:
 11058                           
 11059                           ;StringCommand.c: 175: else if (StringMatch(Input, "livingroomfan=off"))
 11060  01054C  0101               	movlb	1	; () banked
 11061  01054E  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 11062  010552  0101               	movlb	1	; () banked
 11063  010554  C1C1  F17C         	movff	Command@Input,StringMatch@This
 11064  010558  0EF9               	movlw	high STR_60
 11065  01055A  0101               	movlb	1	; () banked
 11066  01055C  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11067  01055E  0E0E               	movlw	low STR_60
 11068  010560  0101               	movlb	1	; () banked
 11069  010562  6F7E               	movwf	StringMatch@That& (0+255),b
 11070  010564  EC17  F0B2         	call	_StringMatch	;wreg free
 11071  010568  0900               	iorlw	0
 11072  01056A  B4D8               	btfsc	status,2,c
 11073  01056C  D065               	goto	l11792
 11074                           
 11075                           ;StringCommand.c: 176: {
 11076                           ;StringCommand.c: 177: INTCONbits.GIE = 0;
 11077  01056E  9EF2               	bcf	intcon,7,c	;volatile
 11078                           
 11079                           ;StringCommand.c: 178: Send_Config2(0b00000001, fanOFF);
 11080  010570  0EF0               	movlw	high _fanOFF
 11081  010572  0101               	movlb	1	; () banked
 11082  010574  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11083  010576  0E8D               	movlw	low _fanOFF
 11084  010578  0101               	movlb	1	; () banked
 11085  01057A  6F87               	movwf	Send_Config2@data& (0+255),b
 11086  01057C  0E01               	movlw	1
 11087  01057E  EC52  F0B1         	call	_Send_Config2
 11088                           
 11089                           ;StringCommand.c: 179: Send_Config2(0b00000001, fanOFF);
 11090  010582  0EF0               	movlw	high _fanOFF
 11091  010584  0101               	movlb	1	; () banked
 11092  010586  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11093  010588  0E8D               	movlw	low _fanOFF
 11094  01058A  0101               	movlb	1	; () banked
 11095  01058C  6F87               	movwf	Send_Config2@data& (0+255),b
 11096  01058E  0E01               	movlw	1
 11097  010590  EC52  F0B1         	call	_Send_Config2
 11098                           
 11099                           ;StringCommand.c: 180: Send_Config2(0b00000001, fanOFF);
 11100  010594  0EF0               	movlw	high _fanOFF
 11101  010596  0101               	movlb	1	; () banked
 11102  010598  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11103  01059A  0E8D               	movlw	low _fanOFF
 11104  01059C  0101               	movlb	1	; () banked
 11105  01059E  6F87               	movwf	Send_Config2@data& (0+255),b
 11106  0105A0  0E01               	movlw	1
 11107  0105A2  EC52  F0B1         	call	_Send_Config2
 11108                           
 11109                           ;StringCommand.c: 181: Send_Config2(0b00000001, fanOFF);
 11110  0105A6  0EF0               	movlw	high _fanOFF
 11111  0105A8  0101               	movlb	1	; () banked
 11112  0105AA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11113  0105AC  0E8D               	movlw	low _fanOFF
 11114  0105AE  0101               	movlb	1	; () banked
 11115  0105B0  6F87               	movwf	Send_Config2@data& (0+255),b
 11116  0105B2  0E01               	movlw	1
 11117  0105B4  EC52  F0B1         	call	_Send_Config2
 11118                           
 11119                           ;StringCommand.c: 182: Send_Config2(0b00000001, fanOFF);
 11120  0105B8  0EF0               	movlw	high _fanOFF
 11121  0105BA  0101               	movlb	1	; () banked
 11122  0105BC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11123  0105BE  0E8D               	movlw	low _fanOFF
 11124  0105C0  0101               	movlb	1	; () banked
 11125  0105C2  6F87               	movwf	Send_Config2@data& (0+255),b
 11126  0105C4  0E01               	movlw	1
 11127  0105C6  EC52  F0B1         	call	_Send_Config2
 11128                           
 11129                           ;StringCommand.c: 183: Send_Config2(0b00000001, fanOFF);
 11130  0105CA  0EF0               	movlw	high _fanOFF
 11131  0105CC  0101               	movlb	1	; () banked
 11132  0105CE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11133  0105D0  0E8D               	movlw	low _fanOFF
 11134  0105D2  0101               	movlb	1	; () banked
 11135  0105D4  6F87               	movwf	Send_Config2@data& (0+255),b
 11136  0105D6  0E01               	movlw	1
 11137  0105D8  EC52  F0B1         	call	_Send_Config2
 11138                           
 11139                           ;StringCommand.c: 184: Send_Config2(0b00000001, fanOFF);
 11140  0105DC  0EF0               	movlw	high _fanOFF
 11141  0105DE  0101               	movlb	1	; () banked
 11142  0105E0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11143  0105E2  0E8D               	movlw	low _fanOFF
 11144  0105E4  0101               	movlb	1	; () banked
 11145  0105E6  6F87               	movwf	Send_Config2@data& (0+255),b
 11146  0105E8  0E01               	movlw	1
 11147  0105EA  EC52  F0B1         	call	_Send_Config2
 11148                           
 11149                           ;StringCommand.c: 185: Send_Config2(0b00000001, fanOFF);
 11150  0105EE  0EF0               	movlw	high _fanOFF
 11151  0105F0  0101               	movlb	1	; () banked
 11152  0105F2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11153  0105F4  0E8D               	movlw	low _fanOFF
 11154  0105F6  0101               	movlb	1	; () banked
 11155  0105F8  6F87               	movwf	Send_Config2@data& (0+255),b
 11156  0105FA  0E01               	movlw	1
 11157  0105FC  EC52  F0B1         	call	_Send_Config2
 11158                           
 11159                           ;StringCommand.c: 186: Send_Config2(0b00000001, fanOFF);
 11160  010600  0EF0               	movlw	high _fanOFF
 11161  010602  0101               	movlb	1	; () banked
 11162  010604  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11163  010606  0E8D               	movlw	low _fanOFF
 11164  010608  0101               	movlb	1	; () banked
 11165  01060A  6F87               	movwf	Send_Config2@data& (0+255),b
 11166  01060C  0E01               	movlw	1
 11167  01060E  EC52  F0B1         	call	_Send_Config2
 11168                           
 11169                           ;StringCommand.c: 187: INTCONbits.GIE = 1;
 11170  010612  8EF2               	bsf	intcon,7,c	;volatile
 11171                           
 11172                           ;StringCommand.c: 188: UARTstring("Livingroom Fan Off");
 11173  010614  0EF8               	movlw	high STR_61
 11174  010616  0101               	movlb	1	; () banked
 11175  010618  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11176  01061A  0EB1               	movlw	low STR_61
 11177  01061C  0101               	movlb	1	; () banked
 11178  01061E  6F87               	movwf	UARTstring@data& (0+255),b
 11179  010620  EC15  F0AE         	call	_UARTstring	;wreg free
 11180                           
 11181                           ;StringCommand.c: 189: LCDdisplayFeedback("LVNG Rm Lt Off");
 11182  010624  0EFC               	movlw	high STR_62
 11183  010626  0101               	movlb	1	; () banked
 11184  010628  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11185  01062A  0E13               	movlw	low STR_62
 11186  01062C  0101               	movlb	1	; () banked
 11187  01062E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11188  010630  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 11189                           
 11190                           ;StringCommand.c: 190: }
 11191  010634  EF28  F092         	goto	l555
 11192  010638                     l11792:
 11193                           
 11194                           ;StringCommand.c: 191: else
 11195                           ;StringCommand.c: 192: {
 11196                           ;StringCommand.c: 193: UARTstring("Livingroom Task???");
 11197  010638  0EF8               	movlw	high STR_63
 11198  01063A  0101               	movlb	1	; () banked
 11199  01063C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11200  01063E  0E8B               	movlw	low STR_63
 11201  010640  0101               	movlb	1	; () banked
 11202  010642  6F87               	movwf	UARTstring@data& (0+255),b
 11203  010644  EC15  F0AE         	call	_UARTstring	;wreg free
 11204                           
 11205                           ;StringCommand.c: 194: LCDdisplayFeedback("LVNG Rm Task???");
 11206  010648  0EFA               	movlw	high STR_64
 11207  01064A  0101               	movlb	1	; () banked
 11208  01064C  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11209  01064E  0E98               	movlw	low STR_64
 11210  010650  0101               	movlb	1	; () banked
 11211  010652  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11212  010654  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 11213  010658  EF28  F092         	goto	l555
 11214  01065C                     l11794:
 11215                           
 11216                           ;StringCommand.c: 197: else
 11217                           ;StringCommand.c: 198: {
 11218                           ;StringCommand.c: 199: UARTstring("Livingroom Help Menu\r\n\n");
 11219  01065C  0EF7               	movlw	high STR_65
 11220  01065E  0101               	movlb	1	; () banked
 11221  010660  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11222  010662  0E42               	movlw	low STR_65
 11223  010664  0101               	movlb	1	; () banked
 11224  010666  6F87               	movwf	UARTstring@data& (0+255),b
 11225  010668  EC15  F0AE         	call	_UARTstring	;wreg free
 11226                           
 11227                           ;StringCommand.c: 200: UARTstring("Devices:\r\n");
 11228  01066C  0EFD               	movlw	high STR_42
 11229  01066E  0101               	movlb	1	; () banked
 11230  010670  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11231  010672  0EF1               	movlw	low STR_42
 11232  010674  0101               	movlb	1	; () banked
 11233  010676  6F87               	movwf	UARTstring@data& (0+255),b
 11234  010678  EC15  F0AE         	call	_UARTstring	;wreg free
 11235                           
 11236                           ;StringCommand.c: 201: UARTstring("light\r\n");
 11237  01067C  0EFF               	movlw	high STR_67
 11238  01067E  0101               	movlb	1	; () banked
 11239  010680  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11240  010682  0E1F               	movlw	low STR_67
 11241  010684  0101               	movlb	1	; () banked
 11242  010686  6F87               	movwf	UARTstring@data& (0+255),b
 11243  010688  EC15  F0AE         	call	_UARTstring	;wreg free
 11244                           
 11245                           ;StringCommand.c: 202: UARTstring("fan\r\n\n");
 11246  01068C  0EFF               	movlw	high STR_68
 11247  01068E  0101               	movlb	1	; () banked
 11248  010690  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11249  010692  0E66               	movlw	low STR_68
 11250  010694  0101               	movlb	1	; () banked
 11251  010696  6F87               	movwf	UARTstring@data& (0+255),b
 11252  010698  EC15  F0AE         	call	_UARTstring	;wreg free
 11253                           
 11254                           ;StringCommand.c: 203: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 11255  01069C  0EF1               	movlw	high STR_45
 11256  01069E  0101               	movlb	1	; () banked
 11257  0106A0  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11258  0106A2  0E5F               	movlw	low STR_45
 11259  0106A4  0101               	movlb	1	; () banked
 11260  0106A6  6F87               	movwf	UARTstring@data& (0+255),b
 11261  0106A8  EC15  F0AE         	call	_UARTstring	;wreg free
 11262                           
 11263                           ;StringCommand.c: 204: UARTstring("i.e. Livingroom fan = On\r\n");
 11264  0106AC  0EF6               	movlw	high STR_70
 11265  0106AE  0101               	movlb	1	; () banked
 11266  0106B0  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11267  0106B2  0E8E               	movlw	low STR_70
 11268  0106B4  0101               	movlb	1	; () banked
 11269  0106B6  6F87               	movwf	UARTstring@data& (0+255),b
 11270  0106B8  EC15  F0AE         	call	_UARTstring	;wreg free
 11271                           
 11272                           ;StringCommand.c: 205: LCDdisplayFeedback("LVNG Rm Lt help");
 11273  0106BC  0EFB               	movlw	high STR_71
 11274  0106BE  0101               	movlb	1	; () banked
 11275  0106C0  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11276  0106C2  0EA8               	movlw	low STR_71
 11277  0106C4  0101               	movlb	1	; () banked
 11278  0106C6  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11279  0106C8  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 11280                           
 11281                           ;StringCommand.c: 206: LCD_Scroll("LVNGroom Menu");
 11282  0106CC  0EFD               	movlw	high STR_72
 11283  0106CE  0101               	movlb	1	; () banked
 11284  0106D0  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11285  0106D2  0E0A               	movlw	low STR_72
 11286  0106D4  0101               	movlb	1	; () banked
 11287  0106D6  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11288  0106D8  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 11289                           
 11290                           ;StringCommand.c: 207: LCD_Scroll("Devices:");
 11291  0106DC  0EFE               	movlw	high STR_48
 11292  0106DE  0101               	movlb	1	; () banked
 11293  0106E0  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11294  0106E2  0EB4               	movlw	low STR_48
 11295  0106E4  0101               	movlb	1	; () banked
 11296  0106E6  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11297  0106E8  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 11298                           
 11299                           ;StringCommand.c: 208: LCD_Scroll("Light");
 11300  0106EC  0EFF               	movlw	high STR_74
 11301  0106EE  0101               	movlb	1	; () banked
 11302  0106F0  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11303  0106F2  0EA8               	movlw	low STR_74
 11304  0106F4  0101               	movlb	1	; () banked
 11305  0106F6  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11306  0106F8  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 11307                           
 11308                           ;StringCommand.c: 209: LCD_Scroll("Fan");
 11309  0106FC  0EFF               	movlw	high STR_75
 11310  0106FE  0101               	movlb	1	; () banked
 11311  010700  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11312  010702  0EED               	movlw	low STR_75
 11313  010704  0101               	movlb	1	; () banked
 11314  010706  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11315  010708  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 11316  01070C  EF28  F092         	goto	l555
 11317  010710                     l11804:
 11318                           
 11319                           ;StringCommand.c: 213: else if (StartsWith(Input, "bedroom"))
 11320  010710  0101               	movlb	1	; () banked
 11321  010712  C1C2  F17D         	movff	Command@Input+1,StartsWith@This+1
 11322  010716  0101               	movlb	1	; () banked
 11323  010718  C1C1  F17C         	movff	Command@Input,StartsWith@This
 11324  01071C  0EFF               	movlw	high STR_76
 11325  01071E  0101               	movlb	1	; () banked
 11326  010720  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 11327  010722  0E27               	movlw	low STR_76
 11328  010724  0101               	movlb	1	; () banked
 11329  010726  6F7E               	movwf	StartsWith@That& (0+255),b
 11330  010728  EC57  F0AF         	call	_StartsWith	;wreg free
 11331  01072C  0900               	iorlw	0
 11332  01072E  B4D8               	btfsc	status,2,c
 11333  010730  D2E2               	goto	l11886
 11334                           
 11335                           ;StringCommand.c: 214: {
 11336                           ;StringCommand.c: 215: if (!StringContains(Input, "?"))
 11337  010732  0101               	movlb	1	; () banked
 11338  010734  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 11339  010738  0101               	movlb	1	; () banked
 11340  01073A  C1C1  F17C         	movff	Command@Input,StringContains@This
 11341  01073E  0EFA               	movlw	high (STR_64+14)
 11342  010740  0101               	movlb	1	; () banked
 11343  010742  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 11344  010744  0EA6               	movlw	low (STR_64+14)
 11345  010746  0101               	movlb	1	; () banked
 11346  010748  6F7E               	movwf	StringContains@That& (0+255),b
 11347  01074A  ECD8  F0B1         	call	_StringContains	;wreg free
 11348  01074E  0900               	iorlw	0
 11349  010750  A4D8               	btfss	status,2,c
 11350  010752  D267               	goto	l11874
 11351                           
 11352                           ;StringCommand.c: 216: {
 11353                           ;StringCommand.c: 217: if (StringContains(Input, "light") || StringContains(Input, "fan"
      +                          ))
 11354  010754  0101               	movlb	1	; () banked
 11355  010756  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 11356  01075A  0101               	movlb	1	; () banked
 11357  01075C  C1C1  F17C         	movff	Command@Input,StringContains@This
 11358  010760  0EFF               	movlw	high STR_78
 11359  010762  0101               	movlb	1	; () banked
 11360  010764  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 11361  010766  0EAE               	movlw	low STR_78
 11362  010768  0101               	movlb	1	; () banked
 11363  01076A  6F7E               	movwf	StringContains@That& (0+255),b
 11364  01076C  ECD8  F0B1         	call	_StringContains	;wreg free
 11365  010770  0900               	iorlw	0
 11366  010772  A4D8               	btfss	status,2,c
 11367  010774  D011               	goto	l11812
 11368  010776  0101               	movlb	1	; () banked
 11369  010778  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 11370  01077C  0101               	movlb	1	; () banked
 11371  01077E  C1C1  F17C         	movff	Command@Input,StringContains@This
 11372  010782  0EFF               	movlw	high STR_79
 11373  010784  0101               	movlb	1	; () banked
 11374  010786  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 11375  010788  0EF1               	movlw	low STR_79
 11376  01078A  0101               	movlb	1	; () banked
 11377  01078C  6F7E               	movwf	StringContains@That& (0+255),b
 11378  01078E  ECD8  F0B1         	call	_StringContains	;wreg free
 11379  010792  0900               	iorlw	0
 11380  010794  B4D8               	btfsc	status,2,c
 11381  010796  D233               	goto	l11872
 11382  010798                     l11812:
 11383                           
 11384                           ;StringCommand.c: 218: {
 11385                           ;StringCommand.c: 219: if (StringMatch(Input, "bedroomlight=on") || StringMatch(Input, "
      +                          bedroomlight=off"))
 11386  010798  0101               	movlb	1	; () banked
 11387  01079A  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 11388  01079E  0101               	movlb	1	; () banked
 11389  0107A0  C1C1  F17C         	movff	Command@Input,StringMatch@This
 11390  0107A4  0EFB               	movlw	high STR_80
 11391  0107A6  0101               	movlb	1	; () banked
 11392  0107A8  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11393  0107AA  0E98               	movlw	low STR_80
 11394  0107AC  0101               	movlb	1	; () banked
 11395  0107AE  6F7E               	movwf	StringMatch@That& (0+255),b
 11396  0107B0  EC17  F0B2         	call	_StringMatch	;wreg free
 11397  0107B4  0900               	iorlw	0
 11398  0107B6  A4D8               	btfss	status,2,c
 11399  0107B8  D011               	goto	l575
 11400  0107BA  0101               	movlb	1	; () banked
 11401  0107BC  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 11402  0107C0  0101               	movlb	1	; () banked
 11403  0107C2  C1C1  F17C         	movff	Command@Input,StringMatch@This
 11404  0107C6  0EF9               	movlw	high STR_81
 11405  0107C8  0101               	movlb	1	; () banked
 11406  0107CA  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11407  0107CC  0EF0               	movlw	low STR_81
 11408  0107CE  0101               	movlb	1	; () banked
 11409  0107D0  6F7E               	movwf	StringMatch@That& (0+255),b
 11410  0107D2  EC17  F0B2         	call	_StringMatch	;wreg free
 11411  0107D6  0900               	iorlw	0
 11412  0107D8  B4D8               	btfsc	status,2,c
 11413  0107DA  D053               	goto	l11824
 11414  0107DC                     l575:
 11415                           
 11416                           ;StringCommand.c: 220: {
 11417                           ;StringCommand.c: 221: INTCONbits.GIE = 0;
 11418  0107DC  9EF2               	bcf	intcon,7,c	;volatile
 11419                           
 11420                           ;StringCommand.c: 222: Send_Config1(0b00000001, TXdataE);
 11421  0107DE  0EF0               	movlw	high _TXdataE
 11422  0107E0  0101               	movlb	1	; () banked
 11423  0107E2  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11424  0107E4  0EB9               	movlw	low _TXdataE
 11425  0107E6  0101               	movlb	1	; () banked
 11426  0107E8  6F87               	movwf	Send_Config1@data& (0+255),b
 11427  0107EA  0E01               	movlw	1
 11428  0107EC  EC27  F0A9         	call	_Send_Config1
 11429                           
 11430                           ;StringCommand.c: 223: Send_Config1(0b00000001, TXdataE);
 11431  0107F0  0EF0               	movlw	high _TXdataE
 11432  0107F2  0101               	movlb	1	; () banked
 11433  0107F4  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11434  0107F6  0EB9               	movlw	low _TXdataE
 11435  0107F8  0101               	movlb	1	; () banked
 11436  0107FA  6F87               	movwf	Send_Config1@data& (0+255),b
 11437  0107FC  0E01               	movlw	1
 11438  0107FE  EC27  F0A9         	call	_Send_Config1
 11439                           
 11440                           ;StringCommand.c: 224: Send_Config1(0b00000001, TXdataE);
 11441  010802  0EF0               	movlw	high _TXdataE
 11442  010804  0101               	movlb	1	; () banked
 11443  010806  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11444  010808  0EB9               	movlw	low _TXdataE
 11445  01080A  0101               	movlb	1	; () banked
 11446  01080C  6F87               	movwf	Send_Config1@data& (0+255),b
 11447  01080E  0E01               	movlw	1
 11448  010810  EC27  F0A9         	call	_Send_Config1
 11449                           
 11450                           ;StringCommand.c: 225: Send_Config1(0b00000001, TXdataE);
 11451  010814  0EF0               	movlw	high _TXdataE
 11452  010816  0101               	movlb	1	; () banked
 11453  010818  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11454  01081A  0EB9               	movlw	low _TXdataE
 11455  01081C  0101               	movlb	1	; () banked
 11456  01081E  6F87               	movwf	Send_Config1@data& (0+255),b
 11457  010820  0E01               	movlw	1
 11458  010822  EC27  F0A9         	call	_Send_Config1
 11459                           
 11460                           ;StringCommand.c: 226: Send_Config1(0b00000001, TXdataE);
 11461  010826  0EF0               	movlw	high _TXdataE
 11462  010828  0101               	movlb	1	; () banked
 11463  01082A  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11464  01082C  0EB9               	movlw	low _TXdataE
 11465  01082E  0101               	movlb	1	; () banked
 11466  010830  6F87               	movwf	Send_Config1@data& (0+255),b
 11467  010832  0E01               	movlw	1
 11468  010834  EC27  F0A9         	call	_Send_Config1
 11469                           
 11470                           ;StringCommand.c: 227: Send_Config1(0b00000001, TXdataE);
 11471  010838  0EF0               	movlw	high _TXdataE
 11472  01083A  0101               	movlb	1	; () banked
 11473  01083C  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11474  01083E  0EB9               	movlw	low _TXdataE
 11475  010840  0101               	movlb	1	; () banked
 11476  010842  6F87               	movwf	Send_Config1@data& (0+255),b
 11477  010844  0E01               	movlw	1
 11478  010846  EC27  F0A9         	call	_Send_Config1
 11479                           
 11480                           ;StringCommand.c: 228: Send_Config1(0b00000001, TXdataE);
 11481  01084A  0EF0               	movlw	high _TXdataE
 11482  01084C  0101               	movlb	1	; () banked
 11483  01084E  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11484  010850  0EB9               	movlw	low _TXdataE
 11485  010852  0101               	movlb	1	; () banked
 11486  010854  6F87               	movwf	Send_Config1@data& (0+255),b
 11487  010856  0E01               	movlw	1
 11488  010858  EC27  F0A9         	call	_Send_Config1
 11489                           
 11490                           ;StringCommand.c: 229: INTCONbits.GIE = 1;
 11491  01085C  8EF2               	bsf	intcon,7,c	;volatile
 11492                           
 11493                           ;StringCommand.c: 230: UARTstring("Bedroom Light Toggled");
 11494  01085E  0EF7               	movlw	high STR_82
 11495  010860  0101               	movlb	1	; () banked
 11496  010862  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11497  010864  0EFB               	movlw	low STR_82
 11498  010866  0101               	movlb	1	; () banked
 11499  010868  6F87               	movwf	UARTstring@data& (0+255),b
 11500  01086A  EC15  F0AE         	call	_UARTstring	;wreg free
 11501                           
 11502                           ;StringCommand.c: 231: LCDdisplayFeedback("Bedroom Lt TGLD");
 11503  01086E  0EFB               	movlw	high STR_83
 11504  010870  0101               	movlb	1	; () banked
 11505  010872  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11506  010874  0E18               	movlw	low STR_83
 11507  010876  0101               	movlb	1	; () banked
 11508  010878  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11509  01087A  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 11510                           
 11511                           ;StringCommand.c: 232: }
 11512  01087E  EF28  F092         	goto	l555
 11513  010882                     l11824:
 11514                           
 11515                           ;StringCommand.c: 233: else if (StringMatch(Input, "bedroomfan=on"))
 11516  010882  0101               	movlb	1	; () banked
 11517  010884  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 11518  010888  0101               	movlb	1	; () banked
 11519  01088A  C1C1  F17C         	movff	Command@Input,StringMatch@This
 11520  01088E  0EFC               	movlw	high STR_84
 11521  010890  0101               	movlb	1	; () banked
 11522  010892  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11523  010894  0EEE               	movlw	low STR_84
 11524  010896  0101               	movlb	1	; () banked
 11525  010898  6F7E               	movwf	StringMatch@That& (0+255),b
 11526  01089A  EC17  F0B2         	call	_StringMatch	;wreg free
 11527  01089E  0900               	iorlw	0
 11528  0108A0  B4D8               	btfsc	status,2,c
 11529  0108A2  D05C               	goto	l11836
 11530                           
 11531                           ;StringCommand.c: 234: {
 11532                           ;StringCommand.c: 235: INTCONbits.GIE = 0;
 11533  0108A4  9EF2               	bcf	intcon,7,c	;volatile
 11534                           
 11535                           ;StringCommand.c: 236: Send_Config2(0b00000001, AuxON);
 11536  0108A6  0EF0               	movlw	high _AuxON
 11537  0108A8  0101               	movlb	1	; () banked
 11538  0108AA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11539  0108AC  0E3D               	movlw	low _AuxON
 11540  0108AE  0101               	movlb	1	; () banked
 11541  0108B0  6F87               	movwf	Send_Config2@data& (0+255),b
 11542  0108B2  0E01               	movlw	1
 11543  0108B4  EC52  F0B1         	call	_Send_Config2
 11544                           
 11545                           ;StringCommand.c: 237: Send_Config2(0b00000001, AuxON);
 11546  0108B8  0EF0               	movlw	high _AuxON
 11547  0108BA  0101               	movlb	1	; () banked
 11548  0108BC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11549  0108BE  0E3D               	movlw	low _AuxON
 11550  0108C0  0101               	movlb	1	; () banked
 11551  0108C2  6F87               	movwf	Send_Config2@data& (0+255),b
 11552  0108C4  0E01               	movlw	1
 11553  0108C6  EC52  F0B1         	call	_Send_Config2
 11554                           
 11555                           ;StringCommand.c: 238: Send_Config2(0b00000001, AuxON);
 11556  0108CA  0EF0               	movlw	high _AuxON
 11557  0108CC  0101               	movlb	1	; () banked
 11558  0108CE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11559  0108D0  0E3D               	movlw	low _AuxON
 11560  0108D2  0101               	movlb	1	; () banked
 11561  0108D4  6F87               	movwf	Send_Config2@data& (0+255),b
 11562  0108D6  0E01               	movlw	1
 11563  0108D8  EC52  F0B1         	call	_Send_Config2
 11564                           
 11565                           ;StringCommand.c: 239: Send_Config2(0b00000001, AuxON);
 11566  0108DC  0EF0               	movlw	high _AuxON
 11567  0108DE  0101               	movlb	1	; () banked
 11568  0108E0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11569  0108E2  0E3D               	movlw	low _AuxON
 11570  0108E4  0101               	movlb	1	; () banked
 11571  0108E6  6F87               	movwf	Send_Config2@data& (0+255),b
 11572  0108E8  0E01               	movlw	1
 11573  0108EA  EC52  F0B1         	call	_Send_Config2
 11574                           
 11575                           ;StringCommand.c: 240: Send_Config2(0b00000001, AuxON);
 11576  0108EE  0EF0               	movlw	high _AuxON
 11577  0108F0  0101               	movlb	1	; () banked
 11578  0108F2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11579  0108F4  0E3D               	movlw	low _AuxON
 11580  0108F6  0101               	movlb	1	; () banked
 11581  0108F8  6F87               	movwf	Send_Config2@data& (0+255),b
 11582  0108FA  0E01               	movlw	1
 11583  0108FC  EC52  F0B1         	call	_Send_Config2
 11584                           
 11585                           ;StringCommand.c: 241: Send_Config2(0b00000001, AuxON);
 11586  010900  0EF0               	movlw	high _AuxON
 11587  010902  0101               	movlb	1	; () banked
 11588  010904  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11589  010906  0E3D               	movlw	low _AuxON
 11590  010908  0101               	movlb	1	; () banked
 11591  01090A  6F87               	movwf	Send_Config2@data& (0+255),b
 11592  01090C  0E01               	movlw	1
 11593  01090E  EC52  F0B1         	call	_Send_Config2
 11594                           
 11595                           ;StringCommand.c: 242: Send_Config2(0b00000001, AuxON);
 11596  010912  0EF0               	movlw	high _AuxON
 11597  010914  0101               	movlb	1	; () banked
 11598  010916  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11599  010918  0E3D               	movlw	low _AuxON
 11600  01091A  0101               	movlb	1	; () banked
 11601  01091C  6F87               	movwf	Send_Config2@data& (0+255),b
 11602  01091E  0E01               	movlw	1
 11603  010920  EC52  F0B1         	call	_Send_Config2
 11604                           
 11605                           ;StringCommand.c: 243: Send_Config2(0b00000001, AuxON);
 11606  010924  0EF0               	movlw	high _AuxON
 11607  010926  0101               	movlb	1	; () banked
 11608  010928  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11609  01092A  0E3D               	movlw	low _AuxON
 11610  01092C  0101               	movlb	1	; () banked
 11611  01092E  6F87               	movwf	Send_Config2@data& (0+255),b
 11612  010930  0E01               	movlw	1
 11613  010932  EC52  F0B1         	call	_Send_Config2
 11614                           
 11615                           ;StringCommand.c: 244: INTCONbits.GIE = 1;
 11616  010936  8EF2               	bsf	intcon,7,c	;volatile
 11617                           
 11618                           ;StringCommand.c: 245: UARTstring("Bedroom Fan On");
 11619  010938  0EFC               	movlw	high STR_85
 11620  01093A  0101               	movlb	1	; () banked
 11621  01093C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11622  01093E  0E4F               	movlw	low STR_85
 11623  010940  0101               	movlb	1	; () banked
 11624  010942  6F87               	movwf	UARTstring@data& (0+255),b
 11625  010944  EC15  F0AE         	call	_UARTstring	;wreg free
 11626                           
 11627                           ;StringCommand.c: 246: LCDdisplayFeedback("Bedroom Lt On");
 11628  010948  0EFC               	movlw	high STR_86
 11629  01094A  0101               	movlb	1	; () banked
 11630  01094C  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11631  01094E  0EE0               	movlw	low STR_86
 11632  010950  0101               	movlb	1	; () banked
 11633  010952  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11634  010954  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 11635                           
 11636                           ;StringCommand.c: 247: }
 11637  010958  EF28  F092         	goto	l555
 11638  01095C                     l11836:
 11639                           
 11640                           ;StringCommand.c: 248: else if (StringMatch(Input, "bedroomfan=off"))
 11641  01095C  0101               	movlb	1	; () banked
 11642  01095E  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 11643  010962  0101               	movlb	1	; () banked
 11644  010964  C1C1  F17C         	movff	Command@Input,StringMatch@This
 11645  010968  0EFC               	movlw	high STR_87
 11646  01096A  0101               	movlb	1	; () banked
 11647  01096C  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11648  01096E  0E31               	movlw	low STR_87
 11649  010970  0101               	movlb	1	; () banked
 11650  010972  6F7E               	movwf	StringMatch@That& (0+255),b
 11651  010974  EC17  F0B2         	call	_StringMatch	;wreg free
 11652  010978  0900               	iorlw	0
 11653  01097A  B4D8               	btfsc	status,2,c
 11654  01097C  D065               	goto	l11848
 11655                           
 11656                           ;StringCommand.c: 249: {
 11657                           ;StringCommand.c: 250: INTCONbits.GIE = 0;
 11658  01097E  9EF2               	bcf	intcon,7,c	;volatile
 11659                           
 11660                           ;StringCommand.c: 251: Send_Config2(0b00000001, AuxOFF);
 11661  010980  0EF0               	movlw	high _AuxOFF
 11662  010982  0101               	movlb	1	; () banked
 11663  010984  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11664  010986  0E2D               	movlw	low _AuxOFF
 11665  010988  0101               	movlb	1	; () banked
 11666  01098A  6F87               	movwf	Send_Config2@data& (0+255),b
 11667  01098C  0E01               	movlw	1
 11668  01098E  EC52  F0B1         	call	_Send_Config2
 11669                           
 11670                           ;StringCommand.c: 252: Send_Config2(0b00000001, AuxOFF);
 11671  010992  0EF0               	movlw	high _AuxOFF
 11672  010994  0101               	movlb	1	; () banked
 11673  010996  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11674  010998  0E2D               	movlw	low _AuxOFF
 11675  01099A  0101               	movlb	1	; () banked
 11676  01099C  6F87               	movwf	Send_Config2@data& (0+255),b
 11677  01099E  0E01               	movlw	1
 11678  0109A0  EC52  F0B1         	call	_Send_Config2
 11679                           
 11680                           ;StringCommand.c: 253: Send_Config2(0b00000001, AuxOFF);
 11681  0109A4  0EF0               	movlw	high _AuxOFF
 11682  0109A6  0101               	movlb	1	; () banked
 11683  0109A8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11684  0109AA  0E2D               	movlw	low _AuxOFF
 11685  0109AC  0101               	movlb	1	; () banked
 11686  0109AE  6F87               	movwf	Send_Config2@data& (0+255),b
 11687  0109B0  0E01               	movlw	1
 11688  0109B2  EC52  F0B1         	call	_Send_Config2
 11689                           
 11690                           ;StringCommand.c: 254: Send_Config2(0b00000001, AuxOFF);
 11691  0109B6  0EF0               	movlw	high _AuxOFF
 11692  0109B8  0101               	movlb	1	; () banked
 11693  0109BA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11694  0109BC  0E2D               	movlw	low _AuxOFF
 11695  0109BE  0101               	movlb	1	; () banked
 11696  0109C0  6F87               	movwf	Send_Config2@data& (0+255),b
 11697  0109C2  0E01               	movlw	1
 11698  0109C4  EC52  F0B1         	call	_Send_Config2
 11699                           
 11700                           ;StringCommand.c: 255: Send_Config2(0b00000001, AuxOFF);
 11701  0109C8  0EF0               	movlw	high _AuxOFF
 11702  0109CA  0101               	movlb	1	; () banked
 11703  0109CC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11704  0109CE  0E2D               	movlw	low _AuxOFF
 11705  0109D0  0101               	movlb	1	; () banked
 11706  0109D2  6F87               	movwf	Send_Config2@data& (0+255),b
 11707  0109D4  0E01               	movlw	1
 11708  0109D6  EC52  F0B1         	call	_Send_Config2
 11709                           
 11710                           ;StringCommand.c: 256: Send_Config2(0b00000001, AuxOFF);
 11711  0109DA  0EF0               	movlw	high _AuxOFF
 11712  0109DC  0101               	movlb	1	; () banked
 11713  0109DE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11714  0109E0  0E2D               	movlw	low _AuxOFF
 11715  0109E2  0101               	movlb	1	; () banked
 11716  0109E4  6F87               	movwf	Send_Config2@data& (0+255),b
 11717  0109E6  0E01               	movlw	1
 11718  0109E8  EC52  F0B1         	call	_Send_Config2
 11719                           
 11720                           ;StringCommand.c: 257: Send_Config2(0b00000001, AuxOFF);
 11721  0109EC  0EF0               	movlw	high _AuxOFF
 11722  0109EE  0101               	movlb	1	; () banked
 11723  0109F0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11724  0109F2  0E2D               	movlw	low _AuxOFF
 11725  0109F4  0101               	movlb	1	; () banked
 11726  0109F6  6F87               	movwf	Send_Config2@data& (0+255),b
 11727  0109F8  0E01               	movlw	1
 11728  0109FA  EC52  F0B1         	call	_Send_Config2
 11729                           
 11730                           ;StringCommand.c: 258: Send_Config2(0b00000001, AuxOFF);
 11731  0109FE  0EF0               	movlw	high _AuxOFF
 11732  010A00  0101               	movlb	1	; () banked
 11733  010A02  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11734  010A04  0E2D               	movlw	low _AuxOFF
 11735  010A06  0101               	movlb	1	; () banked
 11736  010A08  6F87               	movwf	Send_Config2@data& (0+255),b
 11737  010A0A  0E01               	movlw	1
 11738  010A0C  EC52  F0B1         	call	_Send_Config2
 11739                           
 11740                           ;StringCommand.c: 259: Send_Config2(0b00000001, AuxOFF);
 11741  010A10  0EF0               	movlw	high _AuxOFF
 11742  010A12  0101               	movlb	1	; () banked
 11743  010A14  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11744  010A16  0E2D               	movlw	low _AuxOFF
 11745  010A18  0101               	movlb	1	; () banked
 11746  010A1A  6F87               	movwf	Send_Config2@data& (0+255),b
 11747  010A1C  0E01               	movlw	1
 11748  010A1E  EC52  F0B1         	call	_Send_Config2
 11749                           
 11750                           ;StringCommand.c: 260: INTCONbits.GIE = 1;
 11751  010A22  8EF2               	bsf	intcon,7,c	;volatile
 11752                           
 11753                           ;StringCommand.c: 261: UARTstring("Bedroom Fan Off");
 11754  010A24  0EFB               	movlw	high STR_88
 11755  010A26  0101               	movlb	1	; () banked
 11756  010A28  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11757  010A2A  0E68               	movlw	low STR_88
 11758  010A2C  0101               	movlb	1	; () banked
 11759  010A2E  6F87               	movwf	UARTstring@data& (0+255),b
 11760  010A30  EC15  F0AE         	call	_UARTstring	;wreg free
 11761                           
 11762                           ;StringCommand.c: 262: LCDdisplayFeedback("Bedroom Lt Off");
 11763  010A34  0EFC               	movlw	high STR_89
 11764  010A36  0101               	movlb	1	; () banked
 11765  010A38  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11766  010A3A  0E22               	movlw	low STR_89
 11767  010A3C  0101               	movlb	1	; () banked
 11768  010A3E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11769  010A40  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 11770                           
 11771                           ;StringCommand.c: 263: }
 11772  010A44  EF28  F092         	goto	l555
 11773  010A48                     l11848:
 11774                           
 11775                           ;StringCommand.c: 264: else if (StringMatch(Input, "bedroomshaker=on"))
 11776  010A48  0101               	movlb	1	; () banked
 11777  010A4A  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 11778  010A4E  0101               	movlb	1	; () banked
 11779  010A50  C1C1  F17C         	movff	Command@Input,StringMatch@This
 11780  010A54  0EFA               	movlw	high STR_90
 11781  010A56  0101               	movlb	1	; () banked
 11782  010A58  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11783  010A5A  0E23               	movlw	low STR_90
 11784  010A5C  0101               	movlb	1	; () banked
 11785  010A5E  6F7E               	movwf	StringMatch@That& (0+255),b
 11786  010A60  EC17  F0B2         	call	_StringMatch	;wreg free
 11787  010A64  0900               	iorlw	0
 11788  010A66  B4D8               	btfsc	status,2,c
 11789  010A68  D05C               	goto	l11860
 11790                           
 11791                           ;StringCommand.c: 265: {
 11792                           ;StringCommand.c: 266: INTCONbits.GIE = 0;
 11793  010A6A  9EF2               	bcf	intcon,7,c	;volatile
 11794                           
 11795                           ;StringCommand.c: 267: Send_Config2(0b00000001, BedON);
 11796  010A6C  0EF0               	movlw	high _BedON
 11797  010A6E  0101               	movlb	1	; () banked
 11798  010A70  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11799  010A72  0E5D               	movlw	low _BedON
 11800  010A74  0101               	movlb	1	; () banked
 11801  010A76  6F87               	movwf	Send_Config2@data& (0+255),b
 11802  010A78  0E01               	movlw	1
 11803  010A7A  EC52  F0B1         	call	_Send_Config2
 11804                           
 11805                           ;StringCommand.c: 268: Send_Config2(0b00000001, BedON);
 11806  010A7E  0EF0               	movlw	high _BedON
 11807  010A80  0101               	movlb	1	; () banked
 11808  010A82  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11809  010A84  0E5D               	movlw	low _BedON
 11810  010A86  0101               	movlb	1	; () banked
 11811  010A88  6F87               	movwf	Send_Config2@data& (0+255),b
 11812  010A8A  0E01               	movlw	1
 11813  010A8C  EC52  F0B1         	call	_Send_Config2
 11814                           
 11815                           ;StringCommand.c: 269: Send_Config2(0b00000001, BedON);
 11816  010A90  0EF0               	movlw	high _BedON
 11817  010A92  0101               	movlb	1	; () banked
 11818  010A94  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11819  010A96  0E5D               	movlw	low _BedON
 11820  010A98  0101               	movlb	1	; () banked
 11821  010A9A  6F87               	movwf	Send_Config2@data& (0+255),b
 11822  010A9C  0E01               	movlw	1
 11823  010A9E  EC52  F0B1         	call	_Send_Config2
 11824                           
 11825                           ;StringCommand.c: 270: Send_Config2(0b00000001, BedON);
 11826  010AA2  0EF0               	movlw	high _BedON
 11827  010AA4  0101               	movlb	1	; () banked
 11828  010AA6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11829  010AA8  0E5D               	movlw	low _BedON
 11830  010AAA  0101               	movlb	1	; () banked
 11831  010AAC  6F87               	movwf	Send_Config2@data& (0+255),b
 11832  010AAE  0E01               	movlw	1
 11833  010AB0  EC52  F0B1         	call	_Send_Config2
 11834                           
 11835                           ;StringCommand.c: 271: Send_Config2(0b00000001, BedON);
 11836  010AB4  0EF0               	movlw	high _BedON
 11837  010AB6  0101               	movlb	1	; () banked
 11838  010AB8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11839  010ABA  0E5D               	movlw	low _BedON
 11840  010ABC  0101               	movlb	1	; () banked
 11841  010ABE  6F87               	movwf	Send_Config2@data& (0+255),b
 11842  010AC0  0E01               	movlw	1
 11843  010AC2  EC52  F0B1         	call	_Send_Config2
 11844                           
 11845                           ;StringCommand.c: 272: Send_Config2(0b00000001, BedON);
 11846  010AC6  0EF0               	movlw	high _BedON
 11847  010AC8  0101               	movlb	1	; () banked
 11848  010ACA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11849  010ACC  0E5D               	movlw	low _BedON
 11850  010ACE  0101               	movlb	1	; () banked
 11851  010AD0  6F87               	movwf	Send_Config2@data& (0+255),b
 11852  010AD2  0E01               	movlw	1
 11853  010AD4  EC52  F0B1         	call	_Send_Config2
 11854                           
 11855                           ;StringCommand.c: 273: Send_Config2(0b00000001, BedON);
 11856  010AD8  0EF0               	movlw	high _BedON
 11857  010ADA  0101               	movlb	1	; () banked
 11858  010ADC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11859  010ADE  0E5D               	movlw	low _BedON
 11860  010AE0  0101               	movlb	1	; () banked
 11861  010AE2  6F87               	movwf	Send_Config2@data& (0+255),b
 11862  010AE4  0E01               	movlw	1
 11863  010AE6  EC52  F0B1         	call	_Send_Config2
 11864                           
 11865                           ;StringCommand.c: 274: Send_Config2(0b00000001, BedON);
 11866  010AEA  0EF0               	movlw	high _BedON
 11867  010AEC  0101               	movlb	1	; () banked
 11868  010AEE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11869  010AF0  0E5D               	movlw	low _BedON
 11870  010AF2  0101               	movlb	1	; () banked
 11871  010AF4  6F87               	movwf	Send_Config2@data& (0+255),b
 11872  010AF6  0E01               	movlw	1
 11873  010AF8  EC52  F0B1         	call	_Send_Config2
 11874                           
 11875                           ;StringCommand.c: 275: INTCONbits.GIE = 1;
 11876  010AFC  8EF2               	bsf	intcon,7,c	;volatile
 11877                           
 11878                           ;StringCommand.c: 276: UARTstring("Bedroom Shaker On");
 11879  010AFE  0EF9               	movlw	high STR_91
 11880  010B00  0101               	movlb	1	; () banked
 11881  010B02  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11882  010B04  0E56               	movlw	low STR_91
 11883  010B06  0101               	movlb	1	; () banked
 11884  010B08  6F87               	movwf	UARTstring@data& (0+255),b
 11885  010B0A  EC15  F0AE         	call	_UARTstring	;wreg free
 11886                           
 11887                           ;StringCommand.c: 277: LCDdisplayFeedback("Bedroom SKR On");
 11888  010B0E  0EFC               	movlw	high STR_92
 11889  010B10  0101               	movlb	1	; () banked
 11890  010B12  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11891  010B14  0E40               	movlw	low STR_92
 11892  010B16  0101               	movlb	1	; () banked
 11893  010B18  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11894  010B1A  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 11895                           
 11896                           ;StringCommand.c: 278: }
 11897  010B1E  EF28  F092         	goto	l555
 11898  010B22                     l11860:
 11899                           
 11900                           ;StringCommand.c: 279: else if (StringMatch(Input, "bedroomshaker=off"))
 11901  010B22  0101               	movlb	1	; () banked
 11902  010B24  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 11903  010B28  0101               	movlb	1	; () banked
 11904  010B2A  C1C1  F17C         	movff	Command@Input,StringMatch@This
 11905  010B2E  0EF9               	movlw	high STR_93
 11906  010B30  0101               	movlb	1	; () banked
 11907  010B32  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11908  010B34  0E20               	movlw	low STR_93
 11909  010B36  0101               	movlb	1	; () banked
 11910  010B38  6F7E               	movwf	StringMatch@That& (0+255),b
 11911  010B3A  EC17  F0B2         	call	_StringMatch	;wreg free
 11912  010B3E  0900               	iorlw	0
 11913  010B40  B4D8               	btfsc	status,2,c
 11914  010B42  EF28  F092         	goto	l555
 11915                           
 11916                           ;StringCommand.c: 280: {
 11917                           ;StringCommand.c: 281: INTCONbits.GIE = 0;
 11918  010B46  9EF2               	bcf	intcon,7,c	;volatile
 11919                           
 11920                           ;StringCommand.c: 282: Send_Config2(0b00000001, BedOFF);
 11921  010B48  0EF0               	movlw	high _BedOFF
 11922  010B4A  0101               	movlb	1	; () banked
 11923  010B4C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11924  010B4E  0E4D               	movlw	low _BedOFF
 11925  010B50  0101               	movlb	1	; () banked
 11926  010B52  6F87               	movwf	Send_Config2@data& (0+255),b
 11927  010B54  0E01               	movlw	1
 11928  010B56  EC52  F0B1         	call	_Send_Config2
 11929                           
 11930                           ;StringCommand.c: 283: Send_Config2(0b00000001, BedOFF);
 11931  010B5A  0EF0               	movlw	high _BedOFF
 11932  010B5C  0101               	movlb	1	; () banked
 11933  010B5E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11934  010B60  0E4D               	movlw	low _BedOFF
 11935  010B62  0101               	movlb	1	; () banked
 11936  010B64  6F87               	movwf	Send_Config2@data& (0+255),b
 11937  010B66  0E01               	movlw	1
 11938  010B68  EC52  F0B1         	call	_Send_Config2
 11939                           
 11940                           ;StringCommand.c: 284: Send_Config2(0b00000001, BedOFF);
 11941  010B6C  0EF0               	movlw	high _BedOFF
 11942  010B6E  0101               	movlb	1	; () banked
 11943  010B70  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11944  010B72  0E4D               	movlw	low _BedOFF
 11945  010B74  0101               	movlb	1	; () banked
 11946  010B76  6F87               	movwf	Send_Config2@data& (0+255),b
 11947  010B78  0E01               	movlw	1
 11948  010B7A  EC52  F0B1         	call	_Send_Config2
 11949                           
 11950                           ;StringCommand.c: 285: Send_Config2(0b00000001, BedOFF);
 11951  010B7E  0EF0               	movlw	high _BedOFF
 11952  010B80  0101               	movlb	1	; () banked
 11953  010B82  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11954  010B84  0E4D               	movlw	low _BedOFF
 11955  010B86  0101               	movlb	1	; () banked
 11956  010B88  6F87               	movwf	Send_Config2@data& (0+255),b
 11957  010B8A  0E01               	movlw	1
 11958  010B8C  EC52  F0B1         	call	_Send_Config2
 11959                           
 11960                           ;StringCommand.c: 286: Send_Config2(0b00000001, BedOFF);
 11961  010B90  0EF0               	movlw	high _BedOFF
 11962  010B92  0101               	movlb	1	; () banked
 11963  010B94  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11964  010B96  0E4D               	movlw	low _BedOFF
 11965  010B98  0101               	movlb	1	; () banked
 11966  010B9A  6F87               	movwf	Send_Config2@data& (0+255),b
 11967  010B9C  0E01               	movlw	1
 11968  010B9E  EC52  F0B1         	call	_Send_Config2
 11969                           
 11970                           ;StringCommand.c: 287: Send_Config2(0b00000001, BedOFF);
 11971  010BA2  0EF0               	movlw	high _BedOFF
 11972  010BA4  0101               	movlb	1	; () banked
 11973  010BA6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11974  010BA8  0E4D               	movlw	low _BedOFF
 11975  010BAA  0101               	movlb	1	; () banked
 11976  010BAC  6F87               	movwf	Send_Config2@data& (0+255),b
 11977  010BAE  0E01               	movlw	1
 11978  010BB0  EC52  F0B1         	call	_Send_Config2
 11979                           
 11980                           ;StringCommand.c: 288: Send_Config2(0b00000001, BedOFF);
 11981  010BB4  0EF0               	movlw	high _BedOFF
 11982  010BB6  0101               	movlb	1	; () banked
 11983  010BB8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11984  010BBA  0E4D               	movlw	low _BedOFF
 11985  010BBC  0101               	movlb	1	; () banked
 11986  010BBE  6F87               	movwf	Send_Config2@data& (0+255),b
 11987  010BC0  0E01               	movlw	1
 11988  010BC2  EC52  F0B1         	call	_Send_Config2
 11989                           
 11990                           ;StringCommand.c: 289: Send_Config2(0b00000001, BedOFF);
 11991  010BC6  0EF0               	movlw	high _BedOFF
 11992  010BC8  0101               	movlb	1	; () banked
 11993  010BCA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11994  010BCC  0E4D               	movlw	low _BedOFF
 11995  010BCE  0101               	movlb	1	; () banked
 11996  010BD0  6F87               	movwf	Send_Config2@data& (0+255),b
 11997  010BD2  0E01               	movlw	1
 11998  010BD4  EC52  F0B1         	call	_Send_Config2
 11999                           
 12000                           ;StringCommand.c: 290: INTCONbits.GIE = 1;
 12001  010BD8  8EF2               	bsf	intcon,7,c	;volatile
 12002                           
 12003                           ;StringCommand.c: 291: UARTstring("Bedroom Shaker Off");
 12004  010BDA  0EF8               	movlw	high STR_94
 12005  010BDC  0101               	movlb	1	; () banked
 12006  010BDE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12007  010BE0  0EC4               	movlw	low STR_94
 12008  010BE2  0101               	movlb	1	; () banked
 12009  010BE4  6F87               	movwf	UARTstring@data& (0+255),b
 12010  010BE6  EC15  F0AE         	call	_UARTstring	;wreg free
 12011                           
 12012                           ;StringCommand.c: 292: LCDdisplayFeedback("Bedroom SKR Off");
 12013  010BEA  0EFB               	movlw	high STR_95
 12014  010BEC  0101               	movlb	1	; () banked
 12015  010BEE  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12016  010BF0  0E58               	movlw	low STR_95
 12017  010BF2  0101               	movlb	1	; () banked
 12018  010BF4  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12019  010BF6  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 12020  010BFA  EF28  F092         	goto	l555
 12021  010BFE                     l11872:
 12022                           
 12023                           ;StringCommand.c: 295: else
 12024                           ;StringCommand.c: 296: {
 12025                           ;StringCommand.c: 297: UARTstring("Bedroom Task???");
 12026  010BFE  0EFA               	movlw	high STR_96
 12027  010C00  0101               	movlb	1	; () banked
 12028  010C02  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12029  010C04  0EA8               	movlw	low STR_96
 12030  010C06  0101               	movlb	1	; () banked
 12031  010C08  6F87               	movwf	UARTstring@data& (0+255),b
 12032  010C0A  EC15  F0AE         	call	_UARTstring	;wreg free
 12033                           
 12034                           ;StringCommand.c: 298: LCDdisplayFeedback("Bedroom Task???");
 12035  010C0E  0EFA               	movlw	high STR_96
 12036  010C10  0101               	movlb	1	; () banked
 12037  010C12  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12038  010C14  0EA8               	movlw	low STR_96
 12039  010C16  0101               	movlb	1	; () banked
 12040  010C18  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12041  010C1A  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 12042  010C1E  EF28  F092         	goto	l555
 12043  010C22                     l11874:
 12044                           
 12045                           ;StringCommand.c: 301: else
 12046                           ;StringCommand.c: 302: {
 12047                           ;StringCommand.c: 303: UARTstring("Bedroom Help Menu\r\n\n");
 12048  010C22  0EF8               	movlw	high STR_98
 12049  010C24  0101               	movlb	1	; () banked
 12050  010C26  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12051  010C28  0E11               	movlw	low STR_98
 12052  010C2A  0101               	movlb	1	; () banked
 12053  010C2C  6F87               	movwf	UARTstring@data& (0+255),b
 12054  010C2E  EC15  F0AE         	call	_UARTstring	;wreg free
 12055                           
 12056                           ;StringCommand.c: 304: UARTstring("Devices:\r\n");
 12057  010C32  0EFD               	movlw	high STR_42
 12058  010C34  0101               	movlb	1	; () banked
 12059  010C36  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12060  010C38  0EF1               	movlw	low STR_42
 12061  010C3A  0101               	movlb	1	; () banked
 12062  010C3C  6F87               	movwf	UARTstring@data& (0+255),b
 12063  010C3E  EC15  F0AE         	call	_UARTstring	;wreg free
 12064                           
 12065                           ;StringCommand.c: 305: UARTstring("light\r\n");
 12066  010C42  0EFF               	movlw	high STR_67
 12067  010C44  0101               	movlb	1	; () banked
 12068  010C46  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12069  010C48  0E1F               	movlw	low STR_67
 12070  010C4A  0101               	movlb	1	; () banked
 12071  010C4C  6F87               	movwf	UARTstring@data& (0+255),b
 12072  010C4E  EC15  F0AE         	call	_UARTstring	;wreg free
 12073                           
 12074                           ;StringCommand.c: 306: UARTstring("fan\r\n");
 12075  010C52  0EFF               	movlw	high STR_101
 12076  010C54  0101               	movlb	1	; () banked
 12077  010C56  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12078  010C58  0E96               	movlw	low STR_101
 12079  010C5A  0101               	movlb	1	; () banked
 12080  010C5C  6F87               	movwf	UARTstring@data& (0+255),b
 12081  010C5E  EC15  F0AE         	call	_UARTstring	;wreg free
 12082                           
 12083                           ;StringCommand.c: 307: UARTstring("shaker\r\n\n");
 12084  010C62  0EFE               	movlw	high STR_102
 12085  010C64  0101               	movlb	1	; () banked
 12086  010C66  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12087  010C68  0E33               	movlw	low STR_102
 12088  010C6A  0101               	movlb	1	; () banked
 12089  010C6C  6F87               	movwf	UARTstring@data& (0+255),b
 12090  010C6E  EC15  F0AE         	call	_UARTstring	;wreg free
 12091                           
 12092                           ;StringCommand.c: 308: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12093  010C72  0EF1               	movlw	high STR_45
 12094  010C74  0101               	movlb	1	; () banked
 12095  010C76  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12096  010C78  0E5F               	movlw	low STR_45
 12097  010C7A  0101               	movlb	1	; () banked
 12098  010C7C  6F87               	movwf	UARTstring@data& (0+255),b
 12099  010C7E  EC15  F0AE         	call	_UARTstring	;wreg free
 12100                           
 12101                           ;StringCommand.c: 309: UARTstring("i.e. Bedroom fan = On\r\n");
 12102  010C82  0EF7               	movlw	high STR_104
 12103  010C84  0101               	movlb	1	; () banked
 12104  010C86  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12105  010C88  0E72               	movlw	low STR_104
 12106  010C8A  0101               	movlb	1	; () banked
 12107  010C8C  6F87               	movwf	UARTstring@data& (0+255),b
 12108  010C8E  EC15  F0AE         	call	_UARTstring	;wreg free
 12109                           
 12110                           ;StringCommand.c: 310: LCDdisplayFeedback("Bedroom Help???");
 12111  010C92  0EFA               	movlw	high STR_105
 12112  010C94  0101               	movlb	1	; () banked
 12113  010C96  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12114  010C98  0EB8               	movlw	low STR_105
 12115  010C9A  0101               	movlb	1	; () banked
 12116  010C9C  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12117  010C9E  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 12118                           
 12119                           ;StringCommand.c: 311: LCD_Scroll("Bedroom Menu");
 12120  010CA2  0EFD               	movlw	high STR_106
 12121  010CA4  0101               	movlb	1	; () banked
 12122  010CA6  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12123  010CA8  0E9B               	movlw	low STR_106
 12124  010CAA  0101               	movlb	1	; () banked
 12125  010CAC  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12126  010CAE  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 12127                           
 12128                           ;StringCommand.c: 312: LCD_Scroll("Devices:");
 12129  010CB2  0EFE               	movlw	high STR_48
 12130  010CB4  0101               	movlb	1	; () banked
 12131  010CB6  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12132  010CB8  0EB4               	movlw	low STR_48
 12133  010CBA  0101               	movlb	1	; () banked
 12134  010CBC  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12135  010CBE  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 12136                           
 12137                           ;StringCommand.c: 313: LCD_Scroll("Light");
 12138  010CC2  0EFF               	movlw	high STR_74
 12139  010CC4  0101               	movlb	1	; () banked
 12140  010CC6  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12141  010CC8  0EA8               	movlw	low STR_74
 12142  010CCA  0101               	movlb	1	; () banked
 12143  010CCC  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12144  010CCE  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 12145                           
 12146                           ;StringCommand.c: 314: LCD_Scroll("Fan");
 12147  010CD2  0EFF               	movlw	high STR_75
 12148  010CD4  0101               	movlb	1	; () banked
 12149  010CD6  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12150  010CD8  0EED               	movlw	low STR_75
 12151  010CDA  0101               	movlb	1	; () banked
 12152  010CDC  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12153  010CDE  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 12154                           
 12155                           ;StringCommand.c: 315: LCD_Scroll("Shaker");
 12156  010CE2  0EFF               	movlw	high STR_110
 12157  010CE4  0101               	movlb	1	; () banked
 12158  010CE6  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12159  010CE8  0E89               	movlw	low STR_110
 12160  010CEA  0101               	movlb	1	; () banked
 12161  010CEC  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12162  010CEE  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 12163  010CF2  EF28  F092         	goto	l555
 12164  010CF6                     l11886:
 12165                           
 12166                           ;StringCommand.c: 319: else if (StringContains(Input, "color") || StringContains(Input, 
      +                          "white") || StringContains(Input, "christmas"))
 12167  010CF6  0101               	movlb	1	; () banked
 12168  010CF8  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12169  010CFC  0101               	movlb	1	; () banked
 12170  010CFE  C1C1  F17C         	movff	Command@Input,StringContains@This
 12171  010D02  0EFF               	movlw	high STR_111
 12172  010D04  0101               	movlb	1	; () banked
 12173  010D06  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12174  010D08  0EA2               	movlw	low STR_111
 12175  010D0A  0101               	movlb	1	; () banked
 12176  010D0C  6F7E               	movwf	StringContains@That& (0+255),b
 12177  010D0E  ECD8  F0B1         	call	_StringContains	;wreg free
 12178  010D12  0900               	iorlw	0
 12179  010D14  A4D8               	btfss	status,2,c
 12180  010D16  D022               	goto	l11892
 12181  010D18  0101               	movlb	1	; () banked
 12182  010D1A  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12183  010D1E  0101               	movlb	1	; () banked
 12184  010D20  C1C1  F17C         	movff	Command@Input,StringContains@This
 12185  010D24  0EFF               	movlw	high STR_112
 12186  010D26  0101               	movlb	1	; () banked
 12187  010D28  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12188  010D2A  0E9C               	movlw	low STR_112
 12189  010D2C  0101               	movlb	1	; () banked
 12190  010D2E  6F7E               	movwf	StringContains@That& (0+255),b
 12191  010D30  ECD8  F0B1         	call	_StringContains	;wreg free
 12192  010D34  0900               	iorlw	0
 12193  010D36  A4D8               	btfss	status,2,c
 12194  010D38  D011               	goto	l11892
 12195  010D3A  0101               	movlb	1	; () banked
 12196  010D3C  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12197  010D40  0101               	movlb	1	; () banked
 12198  010D42  C1C1  F17C         	movff	Command@Input,StringContains@This
 12199  010D46  0EFE               	movlw	high STR_113
 12200  010D48  0101               	movlb	1	; () banked
 12201  010D4A  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12202  010D4C  0E79               	movlw	low STR_113
 12203  010D4E  0101               	movlb	1	; () banked
 12204  010D50  6F7E               	movwf	StringContains@That& (0+255),b
 12205  010D52  ECD8  F0B1         	call	_StringContains	;wreg free
 12206  010D56  0900               	iorlw	0
 12207  010D58  B4D8               	btfsc	status,2,c
 12208  010D5A  D1D4               	goto	l11948
 12209  010D5C                     l11892:
 12210                           
 12211                           ;StringCommand.c: 320: {
 12212                           ;StringCommand.c: 321: if (!StringContains(Input, "?"))
 12213  010D5C  0101               	movlb	1	; () banked
 12214  010D5E  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12215  010D62  0101               	movlb	1	; () banked
 12216  010D64  C1C1  F17C         	movff	Command@Input,StringContains@This
 12217  010D68  0EFA               	movlw	high (STR_64+14)
 12218  010D6A  0101               	movlb	1	; () banked
 12219  010D6C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12220  010D6E  0EA6               	movlw	low (STR_64+14)
 12221  010D70  0101               	movlb	1	; () banked
 12222  010D72  6F7E               	movwf	StringContains@That& (0+255),b
 12223  010D74  ECD8  F0B1         	call	_StringContains	;wreg free
 12224  010D78  0900               	iorlw	0
 12225  010D7A  A4D8               	btfss	status,2,c
 12226  010D7C  D171               	goto	l11938
 12227                           
 12228                           ;StringCommand.c: 322: {
 12229                           ;StringCommand.c: 323: if (StringContains(Input, "color") && StringContains(Input, "="))
 12230  010D7E  0101               	movlb	1	; () banked
 12231  010D80  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12232  010D84  0101               	movlb	1	; () banked
 12233  010D86  C1C1  F17C         	movff	Command@Input,StringContains@This
 12234  010D8A  0EFF               	movlw	high STR_111
 12235  010D8C  0101               	movlb	1	; () banked
 12236  010D8E  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12237  010D90  0EA2               	movlw	low STR_111
 12238  010D92  0101               	movlb	1	; () banked
 12239  010D94  6F7E               	movwf	StringContains@That& (0+255),b
 12240  010D96  ECD8  F0B1         	call	_StringContains	;wreg free
 12241  010D9A  0900               	iorlw	0
 12242  010D9C  B4D8               	btfsc	status,2,c
 12243  010D9E  D064               	goto	l11908
 12244  010DA0  0101               	movlb	1	; () banked
 12245  010DA2  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12246  010DA6  0101               	movlb	1	; () banked
 12247  010DA8  C1C1  F17C         	movff	Command@Input,StringContains@This
 12248  010DAC  0EFD               	movlw	high (STR_182+11)
 12249  010DAE  0101               	movlb	1	; () banked
 12250  010DB0  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12251  010DB2  0E58               	movlw	low (STR_182+11)
 12252  010DB4  0101               	movlb	1	; () banked
 12253  010DB6  6F7E               	movwf	StringContains@That& (0+255),b
 12254  010DB8  ECD8  F0B1         	call	_StringContains	;wreg free
 12255  010DBC  0900               	iorlw	0
 12256  010DBE  B4D8               	btfsc	status,2,c
 12257  010DC0  D053               	goto	l11908
 12258                           
 12259                           ;StringCommand.c: 324: {
 12260                           ;StringCommand.c: 325: INTCONbits.GIE = 0;
 12261  010DC2  9EF2               	bcf	intcon,7,c	;volatile
 12262                           
 12263                           ;StringCommand.c: 326: Send_Config1(0b00000001, TXdataF);
 12264  010DC4  0EF0               	movlw	high _TXdataF
 12265  010DC6  0101               	movlb	1	; () banked
 12266  010DC8  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12267  010DCA  0EC5               	movlw	low _TXdataF
 12268  010DCC  0101               	movlb	1	; () banked
 12269  010DCE  6F87               	movwf	Send_Config1@data& (0+255),b
 12270  010DD0  0E01               	movlw	1
 12271  010DD2  EC27  F0A9         	call	_Send_Config1
 12272                           
 12273                           ;StringCommand.c: 327: Send_Config1(0b00000001, TXdataF);
 12274  010DD6  0EF0               	movlw	high _TXdataF
 12275  010DD8  0101               	movlb	1	; () banked
 12276  010DDA  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12277  010DDC  0EC5               	movlw	low _TXdataF
 12278  010DDE  0101               	movlb	1	; () banked
 12279  010DE0  6F87               	movwf	Send_Config1@data& (0+255),b
 12280  010DE2  0E01               	movlw	1
 12281  010DE4  EC27  F0A9         	call	_Send_Config1
 12282                           
 12283                           ;StringCommand.c: 328: Send_Config1(0b00000001, TXdataF);
 12284  010DE8  0EF0               	movlw	high _TXdataF
 12285  010DEA  0101               	movlb	1	; () banked
 12286  010DEC  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12287  010DEE  0EC5               	movlw	low _TXdataF
 12288  010DF0  0101               	movlb	1	; () banked
 12289  010DF2  6F87               	movwf	Send_Config1@data& (0+255),b
 12290  010DF4  0E01               	movlw	1
 12291  010DF6  EC27  F0A9         	call	_Send_Config1
 12292                           
 12293                           ;StringCommand.c: 329: Send_Config1(0b00000001, TXdataF);
 12294  010DFA  0EF0               	movlw	high _TXdataF
 12295  010DFC  0101               	movlb	1	; () banked
 12296  010DFE  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12297  010E00  0EC5               	movlw	low _TXdataF
 12298  010E02  0101               	movlb	1	; () banked
 12299  010E04  6F87               	movwf	Send_Config1@data& (0+255),b
 12300  010E06  0E01               	movlw	1
 12301  010E08  EC27  F0A9         	call	_Send_Config1
 12302                           
 12303                           ;StringCommand.c: 330: Send_Config1(0b00000001, TXdataF);
 12304  010E0C  0EF0               	movlw	high _TXdataF
 12305  010E0E  0101               	movlb	1	; () banked
 12306  010E10  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12307  010E12  0EC5               	movlw	low _TXdataF
 12308  010E14  0101               	movlb	1	; () banked
 12309  010E16  6F87               	movwf	Send_Config1@data& (0+255),b
 12310  010E18  0E01               	movlw	1
 12311  010E1A  EC27  F0A9         	call	_Send_Config1
 12312                           
 12313                           ;StringCommand.c: 331: Send_Config1(0b00000001, TXdataF);
 12314  010E1E  0EF0               	movlw	high _TXdataF
 12315  010E20  0101               	movlb	1	; () banked
 12316  010E22  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12317  010E24  0EC5               	movlw	low _TXdataF
 12318  010E26  0101               	movlb	1	; () banked
 12319  010E28  6F87               	movwf	Send_Config1@data& (0+255),b
 12320  010E2A  0E01               	movlw	1
 12321  010E2C  EC27  F0A9         	call	_Send_Config1
 12322                           
 12323                           ;StringCommand.c: 332: Send_Config1(0b00000001, TXdataF);
 12324  010E30  0EF0               	movlw	high _TXdataF
 12325  010E32  0101               	movlb	1	; () banked
 12326  010E34  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12327  010E36  0EC5               	movlw	low _TXdataF
 12328  010E38  0101               	movlb	1	; () banked
 12329  010E3A  6F87               	movwf	Send_Config1@data& (0+255),b
 12330  010E3C  0E01               	movlw	1
 12331  010E3E  EC27  F0A9         	call	_Send_Config1
 12332                           
 12333                           ;StringCommand.c: 333: INTCONbits.GIE = 1;
 12334  010E42  8EF2               	bsf	intcon,7,c	;volatile
 12335                           
 12336                           ;StringCommand.c: 334: UARTstring("Christmas Tree Colored Lights Toggled");
 12337  010E44  0EF3               	movlw	high STR_117
 12338  010E46  0101               	movlb	1	; () banked
 12339  010E48  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12340  010E4A  0E6E               	movlw	low STR_117
 12341  010E4C  0101               	movlb	1	; () banked
 12342  010E4E  6F87               	movwf	UARTstring@data& (0+255),b
 12343  010E50  EC15  F0AE         	call	_UARTstring	;wreg free
 12344                           
 12345                           ;StringCommand.c: 335: LCDdisplayFeedback("XMAS Color TGLD");
 12346  010E54  0EFA               	movlw	high STR_118
 12347  010E56  0101               	movlb	1	; () banked
 12348  010E58  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12349  010E5A  0EF8               	movlw	low STR_118
 12350  010E5C  0101               	movlb	1	; () banked
 12351  010E5E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12352  010E60  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 12353                           
 12354                           ;StringCommand.c: 336: }
 12355  010E64  EF28  F092         	goto	l555
 12356  010E68                     l11908:
 12357                           
 12358                           ;StringCommand.c: 337: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=on"))
 12359  010E68  0101               	movlb	1	; () banked
 12360  010E6A  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12361  010E6E  0101               	movlb	1	; () banked
 12362  010E70  C1C1  F17C         	movff	Command@Input,StringContains@This
 12363  010E74  0EFF               	movlw	high STR_112
 12364  010E76  0101               	movlb	1	; () banked
 12365  010E78  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12366  010E7A  0E9C               	movlw	low STR_112
 12367  010E7C  0101               	movlb	1	; () banked
 12368  010E7E  6F7E               	movwf	StringContains@That& (0+255),b
 12369  010E80  ECD8  F0B1         	call	_StringContains	;wreg free
 12370  010E84  0900               	iorlw	0
 12371  010E86  B4D8               	btfsc	status,2,c
 12372  010E88  D064               	goto	l11922
 12373  010E8A  0101               	movlb	1	; () banked
 12374  010E8C  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12375  010E90  0101               	movlb	1	; () banked
 12376  010E92  C1C1  F17C         	movff	Command@Input,StringContains@This
 12377  010E96  0EFF               	movlw	high (STR_24+4)
 12378  010E98  0101               	movlb	1	; () banked
 12379  010E9A  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12380  010E9C  0E43               	movlw	low (STR_24+4)
 12381  010E9E  0101               	movlb	1	; () banked
 12382  010EA0  6F7E               	movwf	StringContains@That& (0+255),b
 12383  010EA2  ECD8  F0B1         	call	_StringContains	;wreg free
 12384  010EA6  0900               	iorlw	0
 12385  010EA8  B4D8               	btfsc	status,2,c
 12386  010EAA  D053               	goto	l11922
 12387                           
 12388                           ;StringCommand.c: 338: {
 12389                           ;StringCommand.c: 339: INTCONbits.GIE = 0;
 12390  010EAC  9EF2               	bcf	intcon,7,c	;volatile
 12391                           
 12392                           ;StringCommand.c: 340: Send_Config2(0b00000001, Aux2ON);
 12393  010EAE  0EF0               	movlw	high _Aux2ON
 12394  010EB0  0101               	movlb	1	; () banked
 12395  010EB2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12396  010EB4  0E1D               	movlw	low _Aux2ON
 12397  010EB6  0101               	movlb	1	; () banked
 12398  010EB8  6F87               	movwf	Send_Config2@data& (0+255),b
 12399  010EBA  0E01               	movlw	1
 12400  010EBC  EC52  F0B1         	call	_Send_Config2
 12401                           
 12402                           ;StringCommand.c: 341: Send_Config2(0b00000001, Aux2ON);
 12403  010EC0  0EF0               	movlw	high _Aux2ON
 12404  010EC2  0101               	movlb	1	; () banked
 12405  010EC4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12406  010EC6  0E1D               	movlw	low _Aux2ON
 12407  010EC8  0101               	movlb	1	; () banked
 12408  010ECA  6F87               	movwf	Send_Config2@data& (0+255),b
 12409  010ECC  0E01               	movlw	1
 12410  010ECE  EC52  F0B1         	call	_Send_Config2
 12411                           
 12412                           ;StringCommand.c: 342: Send_Config2(0b00000001, Aux2ON);
 12413  010ED2  0EF0               	movlw	high _Aux2ON
 12414  010ED4  0101               	movlb	1	; () banked
 12415  010ED6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12416  010ED8  0E1D               	movlw	low _Aux2ON
 12417  010EDA  0101               	movlb	1	; () banked
 12418  010EDC  6F87               	movwf	Send_Config2@data& (0+255),b
 12419  010EDE  0E01               	movlw	1
 12420  010EE0  EC52  F0B1         	call	_Send_Config2
 12421                           
 12422                           ;StringCommand.c: 343: Send_Config2(0b00000001, Aux2ON);
 12423  010EE4  0EF0               	movlw	high _Aux2ON
 12424  010EE6  0101               	movlb	1	; () banked
 12425  010EE8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12426  010EEA  0E1D               	movlw	low _Aux2ON
 12427  010EEC  0101               	movlb	1	; () banked
 12428  010EEE  6F87               	movwf	Send_Config2@data& (0+255),b
 12429  010EF0  0E01               	movlw	1
 12430  010EF2  EC52  F0B1         	call	_Send_Config2
 12431                           
 12432                           ;StringCommand.c: 344: Send_Config2(0b00000001, Aux2ON);
 12433  010EF6  0EF0               	movlw	high _Aux2ON
 12434  010EF8  0101               	movlb	1	; () banked
 12435  010EFA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12436  010EFC  0E1D               	movlw	low _Aux2ON
 12437  010EFE  0101               	movlb	1	; () banked
 12438  010F00  6F87               	movwf	Send_Config2@data& (0+255),b
 12439  010F02  0E01               	movlw	1
 12440  010F04  EC52  F0B1         	call	_Send_Config2
 12441                           
 12442                           ;StringCommand.c: 345: Send_Config2(0b00000001, Aux2ON);
 12443  010F08  0EF0               	movlw	high _Aux2ON
 12444  010F0A  0101               	movlb	1	; () banked
 12445  010F0C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12446  010F0E  0E1D               	movlw	low _Aux2ON
 12447  010F10  0101               	movlb	1	; () banked
 12448  010F12  6F87               	movwf	Send_Config2@data& (0+255),b
 12449  010F14  0E01               	movlw	1
 12450  010F16  EC52  F0B1         	call	_Send_Config2
 12451                           
 12452                           ;StringCommand.c: 346: Send_Config2(0b00000001, Aux2ON);
 12453  010F1A  0EF0               	movlw	high _Aux2ON
 12454  010F1C  0101               	movlb	1	; () banked
 12455  010F1E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12456  010F20  0E1D               	movlw	low _Aux2ON
 12457  010F22  0101               	movlb	1	; () banked
 12458  010F24  6F87               	movwf	Send_Config2@data& (0+255),b
 12459  010F26  0E01               	movlw	1
 12460  010F28  EC52  F0B1         	call	_Send_Config2
 12461                           
 12462                           ;StringCommand.c: 347: INTCONbits.GIE = 1;
 12463  010F2C  8EF2               	bsf	intcon,7,c	;volatile
 12464                           
 12465                           ;StringCommand.c: 348: UARTstring("Christmas Tree White Lights On");
 12466  010F2E  0EF5               	movlw	high STR_121
 12467  010F30  0101               	movlb	1	; () banked
 12468  010F32  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12469  010F34  0E53               	movlw	low STR_121
 12470  010F36  0101               	movlb	1	; () banked
 12471  010F38  6F87               	movwf	UARTstring@data& (0+255),b
 12472  010F3A  EC15  F0AE         	call	_UARTstring	;wreg free
 12473                           
 12474                           ;StringCommand.c: 349: LCDdisplayFeedback("XMAS White On");
 12475  010F3E  0EFC               	movlw	high STR_122
 12476  010F40  0101               	movlb	1	; () banked
 12477  010F42  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12478  010F44  0EC4               	movlw	low STR_122
 12479  010F46  0101               	movlb	1	; () banked
 12480  010F48  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12481  010F4A  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 12482                           
 12483                           ;StringCommand.c: 350: }
 12484  010F4E  EF28  F092         	goto	l555
 12485  010F52                     l11922:
 12486                           
 12487                           ;StringCommand.c: 351: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=off"))
 12488  010F52  0101               	movlb	1	; () banked
 12489  010F54  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12490  010F58  0101               	movlb	1	; () banked
 12491  010F5A  C1C1  F17C         	movff	Command@Input,StringContains@This
 12492  010F5E  0EFF               	movlw	high STR_112
 12493  010F60  0101               	movlb	1	; () banked
 12494  010F62  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12495  010F64  0E9C               	movlw	low STR_112
 12496  010F66  0101               	movlb	1	; () banked
 12497  010F68  6F7E               	movwf	StringContains@That& (0+255),b
 12498  010F6A  ECD8  F0B1         	call	_StringContains	;wreg free
 12499  010F6E  0900               	iorlw	0
 12500  010F70  B4D8               	btfsc	status,2,c
 12501  010F72  D064               	goto	l11936
 12502  010F74  0101               	movlb	1	; () banked
 12503  010F76  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12504  010F7A  0101               	movlb	1	; () banked
 12505  010F7C  C1C1  F17C         	movff	Command@Input,StringContains@This
 12506  010F80  0EFE               	movlw	high (STR_27+4)
 12507  010F82  0101               	movlb	1	; () banked
 12508  010F84  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12509  010F86  0EDC               	movlw	low (STR_27+4)
 12510  010F88  0101               	movlb	1	; () banked
 12511  010F8A  6F7E               	movwf	StringContains@That& (0+255),b
 12512  010F8C  ECD8  F0B1         	call	_StringContains	;wreg free
 12513  010F90  0900               	iorlw	0
 12514  010F92  B4D8               	btfsc	status,2,c
 12515  010F94  D053               	goto	l11936
 12516                           
 12517                           ;StringCommand.c: 352: {
 12518                           ;StringCommand.c: 353: INTCONbits.GIE = 0;
 12519  010F96  9EF2               	bcf	intcon,7,c	;volatile
 12520                           
 12521                           ;StringCommand.c: 354: Send_Config2(0b00000001, Aux2OFF);
 12522  010F98  0EF0               	movlw	high _Aux2OFF
 12523  010F9A  0101               	movlb	1	; () banked
 12524  010F9C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12525  010F9E  0E0D               	movlw	low _Aux2OFF
 12526  010FA0  0101               	movlb	1	; () banked
 12527  010FA2  6F87               	movwf	Send_Config2@data& (0+255),b
 12528  010FA4  0E01               	movlw	1
 12529  010FA6  EC52  F0B1         	call	_Send_Config2
 12530                           
 12531                           ;StringCommand.c: 355: Send_Config2(0b00000001, Aux2OFF);
 12532  010FAA  0EF0               	movlw	high _Aux2OFF
 12533  010FAC  0101               	movlb	1	; () banked
 12534  010FAE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12535  010FB0  0E0D               	movlw	low _Aux2OFF
 12536  010FB2  0101               	movlb	1	; () banked
 12537  010FB4  6F87               	movwf	Send_Config2@data& (0+255),b
 12538  010FB6  0E01               	movlw	1
 12539  010FB8  EC52  F0B1         	call	_Send_Config2
 12540                           
 12541                           ;StringCommand.c: 356: Send_Config2(0b00000001, Aux2OFF);
 12542  010FBC  0EF0               	movlw	high _Aux2OFF
 12543  010FBE  0101               	movlb	1	; () banked
 12544  010FC0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12545  010FC2  0E0D               	movlw	low _Aux2OFF
 12546  010FC4  0101               	movlb	1	; () banked
 12547  010FC6  6F87               	movwf	Send_Config2@data& (0+255),b
 12548  010FC8  0E01               	movlw	1
 12549  010FCA  EC52  F0B1         	call	_Send_Config2
 12550                           
 12551                           ;StringCommand.c: 357: Send_Config2(0b00000001, Aux2OFF);
 12552  010FCE  0EF0               	movlw	high _Aux2OFF
 12553  010FD0  0101               	movlb	1	; () banked
 12554  010FD2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12555  010FD4  0E0D               	movlw	low _Aux2OFF
 12556  010FD6  0101               	movlb	1	; () banked
 12557  010FD8  6F87               	movwf	Send_Config2@data& (0+255),b
 12558  010FDA  0E01               	movlw	1
 12559  010FDC  EC52  F0B1         	call	_Send_Config2
 12560                           
 12561                           ;StringCommand.c: 358: Send_Config2(0b00000001, Aux2OFF);
 12562  010FE0  0EF0               	movlw	high _Aux2OFF
 12563  010FE2  0101               	movlb	1	; () banked
 12564  010FE4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12565  010FE6  0E0D               	movlw	low _Aux2OFF
 12566  010FE8  0101               	movlb	1	; () banked
 12567  010FEA  6F87               	movwf	Send_Config2@data& (0+255),b
 12568  010FEC  0E01               	movlw	1
 12569  010FEE  EC52  F0B1         	call	_Send_Config2
 12570                           
 12571                           ;StringCommand.c: 359: Send_Config2(0b00000001, Aux2OFF);
 12572  010FF2  0EF0               	movlw	high _Aux2OFF
 12573  010FF4  0101               	movlb	1	; () banked
 12574  010FF6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12575  010FF8  0E0D               	movlw	low _Aux2OFF
 12576  010FFA  0101               	movlb	1	; () banked
 12577  010FFC  6F87               	movwf	Send_Config2@data& (0+255),b
 12578  010FFE  0E01               	movlw	1
 12579  011000  EC52  F0B1         	call	_Send_Config2
 12580                           
 12581                           ;StringCommand.c: 360: Send_Config2(0b00000001, Aux2OFF);
 12582  011004  0EF0               	movlw	high _Aux2OFF
 12583  011006  0101               	movlb	1	; () banked
 12584  011008  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12585  01100A  0E0D               	movlw	low _Aux2OFF
 12586  01100C  0101               	movlb	1	; () banked
 12587  01100E  6F87               	movwf	Send_Config2@data& (0+255),b
 12588  011010  0E01               	movlw	1
 12589  011012  EC52  F0B1         	call	_Send_Config2
 12590                           
 12591                           ;StringCommand.c: 361: INTCONbits.GIE = 1;
 12592  011016  8EF2               	bsf	intcon,7,c	;volatile
 12593                           
 12594                           ;StringCommand.c: 362: UARTstring("Christmas Tree White Lights Off");
 12595  011018  0EF5               	movlw	high STR_125
 12596  01101A  0101               	movlb	1	; () banked
 12597  01101C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12598  01101E  0E33               	movlw	low STR_125
 12599  011020  0101               	movlb	1	; () banked
 12600  011022  6F87               	movwf	UARTstring@data& (0+255),b
 12601  011024  EC15  F0AE         	call	_UARTstring	;wreg free
 12602                           
 12603                           ;StringCommand.c: 363: LCDdisplayFeedback("XMAS White Off");
 12604  011028  0EFC               	movlw	high STR_126
 12605  01102A  0101               	movlb	1	; () banked
 12606  01102C  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12607  01102E  0E04               	movlw	low STR_126
 12608  011030  0101               	movlb	1	; () banked
 12609  011032  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12610  011034  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 12611                           
 12612                           ;StringCommand.c: 364: }
 12613  011038  EF28  F092         	goto	l555
 12614  01103C                     l11936:
 12615                           
 12616                           ;StringCommand.c: 365: else
 12617                           ;StringCommand.c: 366: {
 12618                           ;StringCommand.c: 367: UARTstring("Christmas What???");
 12619  01103C  0EF8               	movlw	high STR_127
 12620  01103E  0101               	movlb	1	; () banked
 12621  011040  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12622  011042  0EFC               	movlw	low STR_127
 12623  011044  0101               	movlb	1	; () banked
 12624  011046  6F87               	movwf	UARTstring@data& (0+255),b
 12625  011048  EC15  F0AE         	call	_UARTstring	;wreg free
 12626                           
 12627                           ;StringCommand.c: 368: LCDdisplayFeedback("XMAS What???");
 12628  01104C  0EFD               	movlw	high STR_128
 12629  01104E  0101               	movlb	1	; () banked
 12630  011050  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12631  011052  0E5A               	movlw	low STR_128
 12632  011054  0101               	movlb	1	; () banked
 12633  011056  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12634  011058  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 12635  01105C  EF28  F092         	goto	l555
 12636  011060                     l11938:
 12637                           
 12638                           ;StringCommand.c: 371: else
 12639                           ;StringCommand.c: 372: {
 12640                           ;StringCommand.c: 373: UARTstring("Christmas tree Help Menu\r\n\n");
 12641  011060  0EF5               	movlw	high STR_129
 12642  011062  0101               	movlb	1	; () banked
 12643  011064  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12644  011066  0EE7               	movlw	low STR_129
 12645  011068  0101               	movlb	1	; () banked
 12646  01106A  6F87               	movwf	UARTstring@data& (0+255),b
 12647  01106C  EC15  F0AE         	call	_UARTstring	;wreg free
 12648                           
 12649                           ;StringCommand.c: 374: UARTstring("Devices:\r\n");
 12650  011070  0EFD               	movlw	high STR_42
 12651  011072  0101               	movlb	1	; () banked
 12652  011074  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12653  011076  0EF1               	movlw	low STR_42
 12654  011078  0101               	movlb	1	; () banked
 12655  01107A  6F87               	movwf	UARTstring@data& (0+255),b
 12656  01107C  EC15  F0AE         	call	_UARTstring	;wreg free
 12657                           
 12658                           ;StringCommand.c: 375: UARTstring("white lights\r\n");
 12659  011080  0EFB               	movlw	high STR_131
 12660  011082  0101               	movlb	1	; () banked
 12661  011084  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12662  011086  0ED7               	movlw	low STR_131
 12663  011088  0101               	movlb	1	; () banked
 12664  01108A  6F87               	movwf	UARTstring@data& (0+255),b
 12665  01108C  EC15  F0AE         	call	_UARTstring	;wreg free
 12666                           
 12667                           ;StringCommand.c: 376: UARTstring("colored lights\r\n\n");
 12668  011090  0EF8               	movlw	high STR_132
 12669  011092  0101               	movlb	1	; () banked
 12670  011094  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12671  011096  0EEA               	movlw	low STR_132
 12672  011098  0101               	movlb	1	; () banked
 12673  01109A  6F87               	movwf	UARTstring@data& (0+255),b
 12674  01109C  EC15  F0AE         	call	_UARTstring	;wreg free
 12675                           
 12676                           ;StringCommand.c: 377: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12677  0110A0  0EF1               	movlw	high STR_45
 12678  0110A2  0101               	movlb	1	; () banked
 12679  0110A4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12680  0110A6  0E5F               	movlw	low STR_45
 12681  0110A8  0101               	movlb	1	; () banked
 12682  0110AA  6F87               	movwf	UARTstring@data& (0+255),b
 12683  0110AC  EC15  F0AE         	call	_UARTstring	;wreg free
 12684                           
 12685                           ;StringCommand.c: 378: UARTstring("i.e. Christmas Colored lights = On\r\n");
 12686  0110B0  0EF3               	movlw	high STR_134
 12687  0110B2  0101               	movlb	1	; () banked
 12688  0110B4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12689  0110B6  0EBA               	movlw	low STR_134
 12690  0110B8  0101               	movlb	1	; () banked
 12691  0110BA  6F87               	movwf	UARTstring@data& (0+255),b
 12692  0110BC  EC15  F0AE         	call	_UARTstring	;wreg free
 12693                           
 12694                           ;StringCommand.c: 379: LCD_Scroll("XMAS Menu");
 12695  0110C0  0EFE               	movlw	high STR_135
 12696  0110C2  0101               	movlb	1	; () banked
 12697  0110C4  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12698  0110C6  0E83               	movlw	low STR_135
 12699  0110C8  0101               	movlb	1	; () banked
 12700  0110CA  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12701  0110CC  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 12702                           
 12703                           ;StringCommand.c: 380: LCD_Scroll("Devices:");
 12704  0110D0  0EFE               	movlw	high STR_48
 12705  0110D2  0101               	movlb	1	; () banked
 12706  0110D4  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12707  0110D6  0EB4               	movlw	low STR_48
 12708  0110D8  0101               	movlb	1	; () banked
 12709  0110DA  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12710  0110DC  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 12711                           
 12712                           ;StringCommand.c: 381: LCD_Scroll("white");
 12713  0110E0  0EFF               	movlw	high STR_112
 12714  0110E2  0101               	movlb	1	; () banked
 12715  0110E4  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12716  0110E6  0E9C               	movlw	low STR_112
 12717  0110E8  0101               	movlb	1	; () banked
 12718  0110EA  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12719  0110EC  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 12720                           
 12721                           ;StringCommand.c: 382: LCD_Scroll("color");
 12722  0110F0  0EFF               	movlw	high STR_111
 12723  0110F2  0101               	movlb	1	; () banked
 12724  0110F4  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12725  0110F6  0EA2               	movlw	low STR_111
 12726  0110F8  0101               	movlb	1	; () banked
 12727  0110FA  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12728  0110FC  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 12729  011100  EF28  F092         	goto	l555
 12730  011104                     l11948:
 12731                           
 12732                           ;StringCommand.c: 386: else if (StartsWith(Input, "red"))
 12733  011104  0101               	movlb	1	; () banked
 12734  011106  C1C2  F17D         	movff	Command@Input+1,StartsWith@This+1
 12735  01110A  0101               	movlb	1	; () banked
 12736  01110C  C1C1  F17C         	movff	Command@Input,StartsWith@This
 12737  011110  0EF5               	movlw	high (STR_187+25)
 12738  011112  0101               	movlb	1	; () banked
 12739  011114  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 12740  011116  0EC6               	movlw	low (STR_187+25)
 12741  011118  0101               	movlb	1	; () banked
 12742  01111A  6F7E               	movwf	StartsWith@That& (0+255),b
 12743  01111C  EC57  F0AF         	call	_StartsWith	;wreg free
 12744  011120  0900               	iorlw	0
 12745  011122  B4D8               	btfsc	status,2,c
 12746  011124  D131               	goto	l11994
 12747                           
 12748                           ;StringCommand.c: 387: {
 12749                           ;StringCommand.c: 388: if (!StringContains(Input, "?"))
 12750  011126  0101               	movlb	1	; () banked
 12751  011128  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12752  01112C  0101               	movlb	1	; () banked
 12753  01112E  C1C1  F17C         	movff	Command@Input,StringContains@This
 12754  011132  0EFA               	movlw	high (STR_64+14)
 12755  011134  0101               	movlb	1	; () banked
 12756  011136  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12757  011138  0EA6               	movlw	low (STR_64+14)
 12758  01113A  0101               	movlb	1	; () banked
 12759  01113C  6F7E               	movwf	StringContains@That& (0+255),b
 12760  01113E  ECD8  F0B1         	call	_StringContains	;wreg free
 12761  011142  0900               	iorlw	0
 12762  011144  A4D8               	btfss	status,2,c
 12763  011146  D0EE               	goto	l11986
 12764                           
 12765                           ;StringCommand.c: 389: {
 12766                           ;StringCommand.c: 390: if (StartsWith(Input, "redled") || StartsWith(Input, "redledbrigh
      +                          tness"))
 12767  011148  0101               	movlb	1	; () banked
 12768  01114A  C1C2  F17D         	movff	Command@Input+1,StartsWith@This+1
 12769  01114E  0101               	movlb	1	; () banked
 12770  011150  C1C1  F17C         	movff	Command@Input,StartsWith@This
 12771  011154  0EFF               	movlw	high STR_141
 12772  011156  0101               	movlb	1	; () banked
 12773  011158  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 12774  01115A  0E82               	movlw	low STR_141
 12775  01115C  0101               	movlb	1	; () banked
 12776  01115E  6F7E               	movwf	StartsWith@That& (0+255),b
 12777  011160  EC57  F0AF         	call	_StartsWith	;wreg free
 12778  011164  0900               	iorlw	0
 12779  011166  A4D8               	btfss	status,2,c
 12780  011168  D011               	goto	l11956
 12781  01116A  0101               	movlb	1	; () banked
 12782  01116C  C1C2  F17D         	movff	Command@Input+1,StartsWith@This+1
 12783  011170  0101               	movlb	1	; () banked
 12784  011172  C1C1  F17C         	movff	Command@Input,StartsWith@This
 12785  011176  0EFA               	movlw	high STR_142
 12786  011178  0101               	movlb	1	; () banked
 12787  01117A  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 12788  01117C  0E45               	movlw	low STR_142
 12789  01117E  0101               	movlb	1	; () banked
 12790  011180  6F7E               	movwf	StartsWith@That& (0+255),b
 12791  011182  EC57  F0AF         	call	_StartsWith	;wreg free
 12792  011186  0900               	iorlw	0
 12793  011188  B4D8               	btfsc	status,2,c
 12794  01118A  D0BA               	goto	l11984
 12795  01118C                     l11956:
 12796                           
 12797                           ;StringCommand.c: 391: {
 12798                           ;StringCommand.c: 392: if (!StringContains(Input, "="))
 12799  01118C  0101               	movlb	1	; () banked
 12800  01118E  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 12801  011192  0101               	movlb	1	; () banked
 12802  011194  C1C1  F17C         	movff	Command@Input,StringContains@This
 12803  011198  0EFD               	movlw	high (STR_182+11)
 12804  01119A  0101               	movlb	1	; () banked
 12805  01119C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12806  01119E  0E58               	movlw	low (STR_182+11)
 12807  0111A0  0101               	movlb	1	; () banked
 12808  0111A2  6F7E               	movwf	StringContains@That& (0+255),b
 12809  0111A4  ECD8  F0B1         	call	_StringContains	;wreg free
 12810  0111A8  0900               	iorlw	0
 12811  0111AA  A4D8               	btfss	status,2,c
 12812  0111AC  D008               	goto	l11960
 12813                           
 12814                           ;StringCommand.c: 393: {
 12815                           ;StringCommand.c: 394: UARTstring("there is no question mark\r\n");
 12816  0111AE  0EF6               	movlw	high STR_144
 12817  0111B0  0101               	movlb	1	; () banked
 12818  0111B2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12819  0111B4  0E1F               	movlw	low STR_144
 12820  0111B6  0101               	movlb	1	; () banked
 12821  0111B8  6F87               	movwf	UARTstring@data& (0+255),b
 12822  0111BA  EC15  F0AE         	call	_UARTstring	;wreg free
 12823  0111BE                     l11960:
 12824                           
 12825                           ;StringCommand.c: 395: }
 12826                           ;StringCommand.c: 396: duty = GetEnteredNumber(Input);
 12827  0111BE  0101               	movlb	1	; () banked
 12828  0111C0  C1C2  F183         	movff	Command@Input+1,GetEnteredNumber@This+1
 12829  0111C4  0101               	movlb	1	; () banked
 12830  0111C6  C1C1  F182         	movff	Command@Input,GetEnteredNumber@This
 12831  0111CA  EC2C  F0A3         	call	_GetEnteredNumber	;wreg free
 12832  0111CE  0101               	movlb	1	; () banked
 12833  0111D0  C182  F5D4         	movff	?_GetEnteredNumber,Command@duty
 12834  0111D4  0101               	movlb	1	; () banked
 12835  0111D6  C183  F5D5         	movff	?_GetEnteredNumber+1,Command@duty+1
 12836                           
 12837                           ; BSR set to: 1
 12838                           ;StringCommand.c: 397: if (duty == 32001)
 12839  0111DA  0105               	movlb	5	; () banked
 12840  0111DC  05D4               	decf	Command@duty& (0+255),w,b
 12841  0111DE  0E7D               	movlw	125
 12842  0111E0  B4D8               	btfsc	status,2,c
 12843  0111E2  19D5               	xorwf	(Command@duty+1)& (0+255),w,b
 12844  0111E4  A4D8               	btfss	status,2,c
 12845  0111E6  D012               	goto	l11966
 12846                           
 12847                           ; BSR set to: 5
 12848                           ;StringCommand.c: 398: {
 12849                           ;StringCommand.c: 399: UARTstring("Error: No number entered\r\n");
 12850  0111E8  0EF6               	movlw	high STR_145
 12851  0111EA  0101               	movlb	1	; () banked
 12852  0111EC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12853  0111EE  0E73               	movlw	low STR_145
 12854  0111F0  0101               	movlb	1	; () banked
 12855  0111F2  6F87               	movwf	UARTstring@data& (0+255),b
 12856  0111F4  EC15  F0AE         	call	_UARTstring	;wreg free
 12857                           
 12858                           ;StringCommand.c: 400: LCDdisplayFeedback("ERR: no number");
 12859  0111F8  0EFC               	movlw	high STR_146
 12860  0111FA  0101               	movlb	1	; () banked
 12861  0111FC  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12862  0111FE  0E7C               	movlw	low STR_146
 12863  011200  0101               	movlb	1	; () banked
 12864  011202  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12865  011204  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 12866                           
 12867                           ;StringCommand.c: 401: }
 12868  011208  EF28  F092         	goto	l555
 12869  01120C                     l11966:
 12870                           
 12871                           ;StringCommand.c: 402: else if (duty > 100)
 12872  01120C  0105               	movlb	5	; () banked
 12873  01120E  51D5               	movf	(Command@duty+1)& (0+255),w,b
 12874  011210  0A80               	xorlw	128
 12875  011212  0F80               	addlw	-128
 12876  011214  0E65               	movlw	101
 12877  011216  B4D8               	btfsc	status,2,c
 12878  011218  5DD4               	subwf	Command@duty& (0+255),w,b
 12879  01121A  A0D8               	btfss	status,0,c
 12880  01121C  D012               	goto	l11970
 12881                           
 12882                           ; BSR set to: 5
 12883                           ;StringCommand.c: 403: {
 12884                           ;StringCommand.c: 404: UARTstring("Invalid Dutycycle: Greater than 100\r\n");
 12885  01121E  0EF3               	movlw	high STR_147
 12886  011220  0101               	movlb	1	; () banked
 12887  011222  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12888  011224  0E48               	movlw	low STR_147
 12889  011226  0101               	movlb	1	; () banked
 12890  011228  6F87               	movwf	UARTstring@data& (0+255),b
 12891  01122A  EC15  F0AE         	call	_UARTstring	;wreg free
 12892                           
 12893                           ;StringCommand.c: 405: LCDdisplayFeedback("ERR: Duty > 100");
 12894  01122E  0EFA               	movlw	high STR_148
 12895  011230  0101               	movlb	1	; () banked
 12896  011232  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12897  011234  0E88               	movlw	low STR_148
 12898  011236  0101               	movlb	1	; () banked
 12899  011238  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12900  01123A  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 12901                           
 12902                           ;StringCommand.c: 406: }
 12903  01123E  EF28  F092         	goto	l555
 12904  011242                     l11970:
 12905                           
 12906                           ;StringCommand.c: 407: else if (duty < 0)
 12907  011242  0105               	movlb	5	; () banked
 12908  011244  51D5               	movf	(Command@duty+1)& (0+255),w,b
 12909  011246  0A80               	xorlw	128
 12910  011248  6EF3               	movwf	prodl,c
 12911  01124A  0E80               	movlw	128
 12912  01124C  5CF3               	subwf	prodl,w,c
 12913  01124E  0E00               	movlw	0
 12914  011250  B4D8               	btfsc	status,2,c
 12915  011252  5DD4               	subwf	Command@duty& (0+255),w,b
 12916  011254  B0D8               	btfsc	status,0,c
 12917  011256  D012               	goto	l11974
 12918                           
 12919                           ; BSR set to: 5
 12920                           ;StringCommand.c: 408: {
 12921                           ;StringCommand.c: 409: UARTstring("Invalid Dutycycle: Less than 0\r\n");
 12922  011258  0EF4               	movlw	high STR_149
 12923  01125A  0101               	movlb	1	; () banked
 12924  01125C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12925  01125E  0E90               	movlw	low STR_149
 12926  011260  0101               	movlb	1	; () banked
 12927  011262  6F87               	movwf	UARTstring@data& (0+255),b
 12928  011264  EC15  F0AE         	call	_UARTstring	;wreg free
 12929                           
 12930                           ;StringCommand.c: 410: LCDdisplayFeedback("ERR: Duty < 0");
 12931  011268  0EFC               	movlw	high STR_150
 12932  01126A  0101               	movlb	1	; () banked
 12933  01126C  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12934  01126E  0EA8               	movlw	low STR_150
 12935  011270  0101               	movlb	1	; () banked
 12936  011272  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12937  011274  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 12938                           
 12939                           ;StringCommand.c: 411: }
 12940  011278  EF28  F092         	goto	l555
 12941  01127C                     l11974:
 12942                           
 12943                           ;StringCommand.c: 412: else
 12944                           ;StringCommand.c: 413: {
 12945                           ;StringCommand.c: 414: SetDuty(duty);
 12946  01127C  0105               	movlb	5	; () banked
 12947  01127E  51D4               	movf	Command@duty& (0+255),w,b
 12948  011280  EC3C  F0AC         	call	_SetDuty
 12949                           
 12950                           ;StringCommand.c: 415: sprintf(buf, "Dutycycle set to %d\r\n", duty);
 12951  011284  0105               	movlb	5	; () banked
 12952  011286  0E05               	movlw	high Command@buf
 12953  011288  0101               	movlb	1	; () banked
 12954  01128A  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 12955  01128C  0105               	movlb	5	; () banked
 12956  01128E  0E00               	movlw	low Command@buf
 12957  011290  0101               	movlb	1	; () banked
 12958  011292  6F88               	movwf	sprintf@sp& (0+255),b
 12959  011294  0EF7               	movlw	high STR_151
 12960  011296  0101               	movlb	1	; () banked
 12961  011298  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 12962  01129A  0EE5               	movlw	low STR_151
 12963  01129C  0101               	movlb	1	; () banked
 12964  01129E  6F8A               	movwf	sprintf@f& (0+255),b
 12965  0112A0  C5D4  F18C         	movff	Command@duty,?_sprintf+4
 12966  0112A4  C5D5  F18D         	movff	Command@duty+1,?_sprintf+5
 12967  0112A8  EC31  F092         	call	_sprintf	;wreg free
 12968                           
 12969                           ;StringCommand.c: 416: UARTstring(buf);
 12970  0112AC  0105               	movlb	5	; () banked
 12971  0112AE  0E05               	movlw	high Command@buf
 12972  0112B0  0101               	movlb	1	; () banked
 12973  0112B2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12974  0112B4  0105               	movlb	5	; () banked
 12975  0112B6  0E00               	movlw	low Command@buf
 12976  0112B8  0101               	movlb	1	; () banked
 12977  0112BA  6F87               	movwf	UARTstring@data& (0+255),b
 12978  0112BC  EC15  F0AE         	call	_UARTstring	;wreg free
 12979                           
 12980                           ;StringCommand.c: 417: sprintf(buf, "Duty set to %d", duty);
 12981  0112C0  0105               	movlb	5	; () banked
 12982  0112C2  0E05               	movlw	high Command@buf
 12983  0112C4  0101               	movlb	1	; () banked
 12984  0112C6  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 12985  0112C8  0105               	movlb	5	; () banked
 12986  0112CA  0E00               	movlw	low Command@buf
 12987  0112CC  0101               	movlb	1	; () banked
 12988  0112CE  6F88               	movwf	sprintf@sp& (0+255),b
 12989  0112D0  0EFB               	movlw	high STR_152
 12990  0112D2  0101               	movlb	1	; () banked
 12991  0112D4  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 12992  0112D6  0EF5               	movlw	low STR_152
 12993  0112D8  0101               	movlb	1	; () banked
 12994  0112DA  6F8A               	movwf	sprintf@f& (0+255),b
 12995  0112DC  C5D4  F18C         	movff	Command@duty,?_sprintf+4
 12996  0112E0  C5D5  F18D         	movff	Command@duty+1,?_sprintf+5
 12997  0112E4  EC31  F092         	call	_sprintf	;wreg free
 12998                           
 12999                           ;StringCommand.c: 418: LCDdisplayFeedback(buf);
 13000  0112E8  0105               	movlb	5	; () banked
 13001  0112EA  0E05               	movlw	high Command@buf
 13002  0112EC  0101               	movlb	1	; () banked
 13003  0112EE  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13004  0112F0  0105               	movlb	5	; () banked
 13005  0112F2  0E00               	movlw	low Command@buf
 13006  0112F4  0101               	movlb	1	; () banked
 13007  0112F6  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13008  0112F8  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13009  0112FC  EF28  F092         	goto	l555
 13010  011300                     l11984:
 13011                           
 13012                           ;StringCommand.c: 421: else
 13013                           ;StringCommand.c: 422: {
 13014                           ;StringCommand.c: 423: UARTstring("redled what??? Do you mean Red Led Brightness???");
 13015  011300  0EF2               	movlw	high STR_153
 13016  011302  0101               	movlb	1	; () banked
 13017  011304  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13018  011306  0E92               	movlw	low STR_153
 13019  011308  0101               	movlb	1	; () banked
 13020  01130A  6F87               	movwf	UARTstring@data& (0+255),b
 13021  01130C  EC15  F0AE         	call	_UARTstring	;wreg free
 13022                           
 13023                           ;StringCommand.c: 424: LCDdisplayFeedback("Red LED What???");
 13024  011310  0EFA               	movlw	high STR_154
 13025  011312  0101               	movlb	1	; () banked
 13026  011314  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13027  011316  0EC8               	movlw	low STR_154
 13028  011318  0101               	movlb	1	; () banked
 13029  01131A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13030  01131C  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13031  011320  EF28  F092         	goto	l555
 13032  011324                     l11986:
 13033                           
 13034                           ;StringCommand.c: 427: else
 13035                           ;StringCommand.c: 428: {
 13036                           ;StringCommand.c: 429: UARTstring("Red LED PWM Help Menu\r\n\n");
 13037  011324  0EF6               	movlw	high STR_155
 13038  011326  0101               	movlb	1	; () banked
 13039  011328  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13040  01132A  0EF7               	movlw	low STR_155
 13041  01132C  0101               	movlb	1	; () banked
 13042  01132E  6F87               	movwf	UARTstring@data& (0+255),b
 13043  011330  EC15  F0AE         	call	_UARTstring	;wreg free
 13044                           
 13045                           ;StringCommand.c: 430: UARTstring("To set te PWM brightness enter 'Red LED brightness = 
      +                          dutycycle'\r\n");
 13046  011334  0EF1               	movlw	high STR_156
 13047  011336  0101               	movlb	1	; () banked
 13048  011338  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13049  01133A  0EA3               	movlw	low STR_156
 13050  01133C  0101               	movlb	1	; () banked
 13051  01133E  6F87               	movwf	UARTstring@data& (0+255),b
 13052  011340  EC15  F0AE         	call	_UARTstring	;wreg free
 13053                           
 13054                           ;StringCommand.c: 431: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 13055  011344  0EF3               	movlw	high STR_157
 13056  011346  0101               	movlb	1	; () banked
 13057  011348  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13058  01134A  0E1E               	movlw	low STR_157
 13059  01134C  0101               	movlb	1	; () banked
 13060  01134E  6F87               	movwf	UARTstring@data& (0+255),b
 13061  011350  EC15  F0AE         	call	_UARTstring	;wreg free
 13062                           
 13063                           ;StringCommand.c: 432: LCD_Scroll("Red LED Contrast");
 13064  011354  0EFA               	movlw	high STR_158
 13065  011356  0101               	movlb	1	; () banked
 13066  011358  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13067  01135A  0E56               	movlw	low STR_158
 13068  01135C  0101               	movlb	1	; () banked
 13069  01135E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13070  011360  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 13071                           
 13072                           ;StringCommand.c: 433: LCD_Scroll("Commands:");
 13073  011364  0EFE               	movlw	high STR_159
 13074  011366  0101               	movlb	1	; () banked
 13075  011368  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13076  01136A  0E65               	movlw	low STR_159
 13077  01136C  0101               	movlb	1	; () banked
 13078  01136E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13079  011370  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 13080                           
 13081                           ;StringCommand.c: 434: LCD_Scroll("Red LED=#");
 13082  011374  0EFE               	movlw	high STR_160
 13083  011376  0101               	movlb	1	; () banked
 13084  011378  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13085  01137A  0E51               	movlw	low STR_160
 13086  01137C  0101               	movlb	1	; () banked
 13087  01137E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13088  011380  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 13089  011384  EF28  F092         	goto	l555
 13090  011388                     l11994:
 13091                           
 13092                           ;StringCommand.c: 438: else if (StartsWith(Input, "contrast"))
 13093  011388  0101               	movlb	1	; () banked
 13094  01138A  C1C2  F17D         	movff	Command@Input+1,StartsWith@This+1
 13095  01138E  0101               	movlb	1	; () banked
 13096  011390  C1C1  F17C         	movff	Command@Input,StartsWith@This
 13097  011394  0EFE               	movlw	high STR_161
 13098  011396  0101               	movlb	1	; () banked
 13099  011398  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 13100  01139A  0EEA               	movlw	low STR_161
 13101  01139C  0101               	movlb	1	; () banked
 13102  01139E  6F7E               	movwf	StartsWith@That& (0+255),b
 13103  0113A0  EC57  F0AF         	call	_StartsWith	;wreg free
 13104  0113A4  0900               	iorlw	0
 13105  0113A6  B4D8               	btfsc	status,2,c
 13106  0113A8  D0FD               	goto	l12034
 13107                           
 13108                           ;StringCommand.c: 439: {
 13109                           ;StringCommand.c: 440: if (!StringContains(Input, "?"))
 13110  0113AA  0101               	movlb	1	; () banked
 13111  0113AC  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 13112  0113B0  0101               	movlb	1	; () banked
 13113  0113B2  C1C1  F17C         	movff	Command@Input,StringContains@This
 13114  0113B6  0EFA               	movlw	high (STR_64+14)
 13115  0113B8  0101               	movlb	1	; () banked
 13116  0113BA  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13117  0113BC  0EA6               	movlw	low (STR_64+14)
 13118  0113BE  0101               	movlb	1	; () banked
 13119  0113C0  6F7E               	movwf	StringContains@That& (0+255),b
 13120  0113C2  ECD8  F0B1         	call	_StringContains	;wreg free
 13121  0113C6  0900               	iorlw	0
 13122  0113C8  A4D8               	btfss	status,2,c
 13123  0113CA  D0BA               	goto	l12026
 13124                           
 13125                           ;StringCommand.c: 441: {
 13126                           ;StringCommand.c: 442: if (!StringContains(Input, "="))
 13127  0113CC  0101               	movlb	1	; () banked
 13128  0113CE  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 13129  0113D2  0101               	movlb	1	; () banked
 13130  0113D4  C1C1  F17C         	movff	Command@Input,StringContains@This
 13131  0113D8  0EFD               	movlw	high (STR_182+11)
 13132  0113DA  0101               	movlb	1	; () banked
 13133  0113DC  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13134  0113DE  0E58               	movlw	low (STR_182+11)
 13135  0113E0  0101               	movlb	1	; () banked
 13136  0113E2  6F7E               	movwf	StringContains@That& (0+255),b
 13137  0113E4  ECD8  F0B1         	call	_StringContains	;wreg free
 13138  0113E8  0900               	iorlw	0
 13139  0113EA  A4D8               	btfss	status,2,c
 13140  0113EC  D008               	goto	l12002
 13141                           
 13142                           ;StringCommand.c: 443: {
 13143                           ;StringCommand.c: 444: StringAddEqual(Input);
 13144  0113EE  0101               	movlb	1	; () banked
 13145  0113F0  C1C2  F18C         	movff	Command@Input+1,StringAddEqual@Input+1
 13146  0113F4  0101               	movlb	1	; () banked
 13147  0113F6  C1C1  F18B         	movff	Command@Input,StringAddEqual@Input
 13148  0113FA  EC50  F0A2         	call	_StringAddEqual	;wreg free
 13149  0113FE                     l12002:
 13150                           
 13151                           ;StringCommand.c: 445: }
 13152                           ;StringCommand.c: 446: contrast = GetEnteredNumber(Input);
 13153  0113FE  0101               	movlb	1	; () banked
 13154  011400  C1C2  F183         	movff	Command@Input+1,GetEnteredNumber@This+1
 13155  011404  0101               	movlb	1	; () banked
 13156  011406  C1C1  F182         	movff	Command@Input,GetEnteredNumber@This
 13157  01140A  EC2C  F0A3         	call	_GetEnteredNumber	;wreg free
 13158  01140E  0101               	movlb	1	; () banked
 13159  011410  C182  F5D0         	movff	?_GetEnteredNumber,Command@contrast
 13160  011414  0101               	movlb	1	; () banked
 13161  011416  C183  F5D1         	movff	?_GetEnteredNumber+1,Command@contrast+1
 13162                           
 13163                           ; BSR set to: 1
 13164                           ;StringCommand.c: 447: if (contrast == 32001)
 13165  01141A  0105               	movlb	5	; () banked
 13166  01141C  05D0               	decf	Command@contrast& (0+255),w,b
 13167  01141E  0E7D               	movlw	125
 13168  011420  B4D8               	btfsc	status,2,c
 13169  011422  19D1               	xorwf	(Command@contrast+1)& (0+255),w,b
 13170  011424  A4D8               	btfss	status,2,c
 13171  011426  D012               	goto	l12008
 13172                           
 13173                           ; BSR set to: 5
 13174                           ;StringCommand.c: 448: {
 13175                           ;StringCommand.c: 449: UARTstring("Error: No number entered\r\n");
 13176  011428  0EF6               	movlw	high STR_145
 13177  01142A  0101               	movlb	1	; () banked
 13178  01142C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13179  01142E  0E73               	movlw	low STR_145
 13180  011430  0101               	movlb	1	; () banked
 13181  011432  6F87               	movwf	UARTstring@data& (0+255),b
 13182  011434  EC15  F0AE         	call	_UARTstring	;wreg free
 13183                           
 13184                           ;StringCommand.c: 450: LCDdisplayFeedback("ERR: No number");
 13185  011438  0EFC               	movlw	high STR_165
 13186  01143A  0101               	movlb	1	; () banked
 13187  01143C  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13188  01143E  0E6D               	movlw	low STR_165
 13189  011440  0101               	movlb	1	; () banked
 13190  011442  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13191  011444  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13192                           
 13193                           ;StringCommand.c: 451: }
 13194  011448  EF28  F092         	goto	l555
 13195  01144C                     l12008:
 13196                           
 13197                           ;StringCommand.c: 452: else if (contrast > 100)
 13198  01144C  0105               	movlb	5	; () banked
 13199  01144E  51D1               	movf	(Command@contrast+1)& (0+255),w,b
 13200  011450  0A80               	xorlw	128
 13201  011452  0F80               	addlw	-128
 13202  011454  0E65               	movlw	101
 13203  011456  B4D8               	btfsc	status,2,c
 13204  011458  5DD0               	subwf	Command@contrast& (0+255),w,b
 13205  01145A  A0D8               	btfss	status,0,c
 13206  01145C  D012               	goto	l12012
 13207                           
 13208                           ; BSR set to: 5
 13209                           ;StringCommand.c: 453: {
 13210                           ;StringCommand.c: 454: UARTstring("Invalid Contrast Duty cycle: Greater than 100\r\n");
 13211  01145E  0EF2               	movlw	high STR_166
 13212  011460  0101               	movlb	1	; () banked
 13213  011462  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13214  011464  0EC3               	movlw	low STR_166
 13215  011466  0101               	movlb	1	; () banked
 13216  011468  6F87               	movwf	UARTstring@data& (0+255),b
 13217  01146A  EC15  F0AE         	call	_UARTstring	;wreg free
 13218                           
 13219                           ;StringCommand.c: 455: LCDdisplayFeedback("ERR: CNST > 100");
 13220  01146E  0EFA               	movlw	high STR_167
 13221  011470  0101               	movlb	1	; () banked
 13222  011472  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13223  011474  0E78               	movlw	low STR_167
 13224  011476  0101               	movlb	1	; () banked
 13225  011478  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13226  01147A  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13227                           
 13228                           ;StringCommand.c: 456: }
 13229  01147E  EF28  F092         	goto	l555
 13230  011482                     l12012:
 13231                           
 13232                           ;StringCommand.c: 457: else if (contrast < 0)
 13233  011482  0105               	movlb	5	; () banked
 13234  011484  51D1               	movf	(Command@contrast+1)& (0+255),w,b
 13235  011486  0A80               	xorlw	128
 13236  011488  6EF3               	movwf	prodl,c
 13237  01148A  0E80               	movlw	128
 13238  01148C  5CF3               	subwf	prodl,w,c
 13239  01148E  0E00               	movlw	0
 13240  011490  B4D8               	btfsc	status,2,c
 13241  011492  5DD0               	subwf	Command@contrast& (0+255),w,b
 13242  011494  B0D8               	btfsc	status,0,c
 13243  011496  D012               	goto	l12016
 13244                           
 13245                           ; BSR set to: 5
 13246                           ;StringCommand.c: 458: {
 13247                           ;StringCommand.c: 459: UARTstring("Invalid Contrast Duty Cycle: Less than 0\r\n");
 13248  011498  0EF2               	movlw	high STR_168
 13249  01149A  0101               	movlb	1	; () banked
 13250  01149C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13251  01149E  0EF3               	movlw	low STR_168
 13252  0114A0  0101               	movlb	1	; () banked
 13253  0114A2  6F87               	movwf	UARTstring@data& (0+255),b
 13254  0114A4  EC15  F0AE         	call	_UARTstring	;wreg free
 13255                           
 13256                           ;StringCommand.c: 460: LCDdisplayFeedback("ERR: CNST < 0");
 13257  0114A8  0EFC               	movlw	high STR_169
 13258  0114AA  0101               	movlb	1	; () banked
 13259  0114AC  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13260  0114AE  0E9A               	movlw	low STR_169
 13261  0114B0  0101               	movlb	1	; () banked
 13262  0114B2  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13263  0114B4  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13264                           
 13265                           ;StringCommand.c: 461: }
 13266  0114B8  EF28  F092         	goto	l555
 13267  0114BC                     l12016:
 13268                           
 13269                           ;StringCommand.c: 462: else
 13270                           ;StringCommand.c: 463: {
 13271                           ;StringCommand.c: 464: SetContrast(contrast);
 13272  0114BC  0105               	movlb	5	; () banked
 13273  0114BE  51D0               	movf	Command@contrast& (0+255),w,b
 13274  0114C0  EC9E  F0A9         	call	_SetContrast
 13275                           
 13276                           ;StringCommand.c: 465: sprintf(buf, "Contrast Duty Cycle set to %d\r\n", contrast);
 13277  0114C4  0105               	movlb	5	; () banked
 13278  0114C6  0E05               	movlw	high Command@buf
 13279  0114C8  0101               	movlb	1	; () banked
 13280  0114CA  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 13281  0114CC  0105               	movlb	5	; () banked
 13282  0114CE  0E00               	movlw	low Command@buf
 13283  0114D0  0101               	movlb	1	; () banked
 13284  0114D2  6F88               	movwf	sprintf@sp& (0+255),b
 13285  0114D4  0EF5               	movlw	high STR_170
 13286  0114D6  0101               	movlb	1	; () banked
 13287  0114D8  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 13288  0114DA  0E13               	movlw	low STR_170
 13289  0114DC  0101               	movlb	1	; () banked
 13290  0114DE  6F8A               	movwf	sprintf@f& (0+255),b
 13291  0114E0  C5D0  F18C         	movff	Command@contrast,?_sprintf+4
 13292  0114E4  C5D1  F18D         	movff	Command@contrast+1,?_sprintf+5
 13293  0114E8  EC31  F092         	call	_sprintf	;wreg free
 13294                           
 13295                           ;StringCommand.c: 466: UARTstring(buf);
 13296  0114EC  0105               	movlb	5	; () banked
 13297  0114EE  0E05               	movlw	high Command@buf
 13298  0114F0  0101               	movlb	1	; () banked
 13299  0114F2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13300  0114F4  0105               	movlb	5	; () banked
 13301  0114F6  0E00               	movlw	low Command@buf
 13302  0114F8  0101               	movlb	1	; () banked
 13303  0114FA  6F87               	movwf	UARTstring@data& (0+255),b
 13304  0114FC  EC15  F0AE         	call	_UARTstring	;wreg free
 13305                           
 13306                           ;StringCommand.c: 467: sprintf(buf, "CNST set to %d", duty);
 13307  011500  0105               	movlb	5	; () banked
 13308  011502  0E05               	movlw	high Command@buf
 13309  011504  0101               	movlb	1	; () banked
 13310  011506  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 13311  011508  0105               	movlb	5	; () banked
 13312  01150A  0E00               	movlw	low Command@buf
 13313  01150C  0101               	movlb	1	; () banked
 13314  01150E  6F88               	movwf	sprintf@sp& (0+255),b
 13315  011510  0EFB               	movlw	high STR_171
 13316  011512  0101               	movlb	1	; () banked
 13317  011514  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 13318  011516  0EE6               	movlw	low STR_171
 13319  011518  0101               	movlb	1	; () banked
 13320  01151A  6F8A               	movwf	sprintf@f& (0+255),b
 13321  01151C  C5D4  F18C         	movff	Command@duty,?_sprintf+4
 13322  011520  C5D5  F18D         	movff	Command@duty+1,?_sprintf+5
 13323  011524  EC31  F092         	call	_sprintf	;wreg free
 13324                           
 13325                           ;StringCommand.c: 468: LCDdisplayFeedback(buf);
 13326  011528  0105               	movlb	5	; () banked
 13327  01152A  0E05               	movlw	high Command@buf
 13328  01152C  0101               	movlb	1	; () banked
 13329  01152E  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13330  011530  0105               	movlb	5	; () banked
 13331  011532  0E00               	movlw	low Command@buf
 13332  011534  0101               	movlb	1	; () banked
 13333  011536  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13334  011538  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13335  01153C  EF28  F092         	goto	l555
 13336  011540                     l12026:
 13337                           
 13338                           ;StringCommand.c: 471: else
 13339                           ;StringCommand.c: 472: {
 13340                           ;StringCommand.c: 473: UARTstring("Contrast PWM Help Menu\r\n\n");
 13341  011540  0EF6               	movlw	high STR_172
 13342  011542  0101               	movlb	1	; () banked
 13343  011544  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13344  011546  0EC3               	movlw	low STR_172
 13345  011548  0101               	movlb	1	; () banked
 13346  01154A  6F87               	movwf	UARTstring@data& (0+255),b
 13347  01154C  EC15  F0AE         	call	_UARTstring	;wreg free
 13348                           
 13349                           ;StringCommand.c: 474: UARTstring("To set Contrast PWM brightness enter 'Contrast = duty
      +                          cycle'\r\n");
 13350  011550  0EF1               	movlw	high STR_173
 13351  011552  0101               	movlb	1	; () banked
 13352  011554  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13353  011556  0EE5               	movlw	low STR_173
 13354  011558  0101               	movlb	1	; () banked
 13355  01155A  6F87               	movwf	UARTstring@data& (0+255),b
 13356  01155C  EC15  F0AE         	call	_UARTstring	;wreg free
 13357                           
 13358                           ;StringCommand.c: 475: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 13359  011560  0EF3               	movlw	high STR_157
 13360  011562  0101               	movlb	1	; () banked
 13361  011564  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13362  011566  0E1E               	movlw	low STR_157
 13363  011568  0101               	movlb	1	; () banked
 13364  01156A  6F87               	movwf	UARTstring@data& (0+255),b
 13365  01156C  EC15  F0AE         	call	_UARTstring	;wreg free
 13366                           
 13367                           ;StringCommand.c: 476: LCD_Scroll("LCD Contrast");
 13368  011570  0EFD               	movlw	high STR_175
 13369  011572  0101               	movlb	1	; () banked
 13370  011574  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13371  011576  0E8E               	movlw	low STR_175
 13372  011578  0101               	movlb	1	; () banked
 13373  01157A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13374  01157C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 13375                           
 13376                           ;StringCommand.c: 477: LCD_Scroll("Commands:");
 13377  011580  0EFE               	movlw	high STR_159
 13378  011582  0101               	movlb	1	; () banked
 13379  011584  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13380  011586  0E65               	movlw	low STR_159
 13381  011588  0101               	movlb	1	; () banked
 13382  01158A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13383  01158C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 13384                           
 13385                           ;StringCommand.c: 478: LCD_Scroll("Contrast#");
 13386  011590  0EFE               	movlw	high STR_177
 13387  011592  0101               	movlb	1	; () banked
 13388  011594  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13389  011596  0E5B               	movlw	low STR_177
 13390  011598  0101               	movlb	1	; () banked
 13391  01159A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13392  01159C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 13393  0115A0  EF28  F092         	goto	l555
 13394  0115A4                     l12034:
 13395                           
 13396                           ;StringCommand.c: 482: else if (StartsWith(Input, "adc"))
 13397  0115A4  0101               	movlb	1	; () banked
 13398  0115A6  C1C2  F17D         	movff	Command@Input+1,StartsWith@This+1
 13399  0115AA  0101               	movlb	1	; () banked
 13400  0115AC  C1C1  F17C         	movff	Command@Input,StartsWith@This
 13401  0115B0  0EFF               	movlw	high STR_178
 13402  0115B2  0101               	movlb	1	; () banked
 13403  0115B4  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 13404  0115B6  0EE1               	movlw	low STR_178
 13405  0115B8  0101               	movlb	1	; () banked
 13406  0115BA  6F7E               	movwf	StartsWith@That& (0+255),b
 13407  0115BC  EC57  F0AF         	call	_StartsWith	;wreg free
 13408  0115C0  0900               	iorlw	0
 13409  0115C2  B4D8               	btfsc	status,2,c
 13410  0115C4  D16F               	goto	l12088
 13411                           
 13412                           ;StringCommand.c: 483: {
 13413                           ;StringCommand.c: 484: if (!StringContains(Input, "?"))
 13414  0115C6  0101               	movlb	1	; () banked
 13415  0115C8  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 13416  0115CC  0101               	movlb	1	; () banked
 13417  0115CE  C1C1  F17C         	movff	Command@Input,StringContains@This
 13418  0115D2  0EFA               	movlw	high (STR_64+14)
 13419  0115D4  0101               	movlb	1	; () banked
 13420  0115D6  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13421  0115D8  0EA6               	movlw	low (STR_64+14)
 13422  0115DA  0101               	movlb	1	; () banked
 13423  0115DC  6F7E               	movwf	StringContains@That& (0+255),b
 13424  0115DE  ECD8  F0B1         	call	_StringContains	;wreg free
 13425  0115E2  0900               	iorlw	0
 13426  0115E4  A4D8               	btfss	status,2,c
 13427  0115E6  D11C               	goto	l12080
 13428                           
 13429                           ;StringCommand.c: 485: {
 13430                           ;StringCommand.c: 486: if (!StringContains(Input, "="))
 13431  0115E8  0101               	movlb	1	; () banked
 13432  0115EA  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 13433  0115EE  0101               	movlb	1	; () banked
 13434  0115F0  C1C1  F17C         	movff	Command@Input,StringContains@This
 13435  0115F4  0EFD               	movlw	high (STR_182+11)
 13436  0115F6  0101               	movlb	1	; () banked
 13437  0115F8  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13438  0115FA  0E58               	movlw	low (STR_182+11)
 13439  0115FC  0101               	movlb	1	; () banked
 13440  0115FE  6F7E               	movwf	StringContains@That& (0+255),b
 13441  011600  ECD8  F0B1         	call	_StringContains	;wreg free
 13442  011604  0900               	iorlw	0
 13443  011606  A4D8               	btfss	status,2,c
 13444  011608  D008               	goto	l12042
 13445                           
 13446                           ;StringCommand.c: 487: {
 13447                           ;StringCommand.c: 488: StringAddEqual(Input);
 13448  01160A  0101               	movlb	1	; () banked
 13449  01160C  C1C2  F18C         	movff	Command@Input+1,StringAddEqual@Input+1
 13450  011610  0101               	movlb	1	; () banked
 13451  011612  C1C1  F18B         	movff	Command@Input,StringAddEqual@Input
 13452  011616  EC50  F0A2         	call	_StringAddEqual	;wreg free
 13453  01161A                     l12042:
 13454                           
 13455                           ;StringCommand.c: 489: }
 13456                           ;StringCommand.c: 490: channel = GetEnteredNumber(Input);
 13457  01161A  0101               	movlb	1	; () banked
 13458  01161C  C1C2  F183         	movff	Command@Input+1,GetEnteredNumber@This+1
 13459  011620  0101               	movlb	1	; () banked
 13460  011622  C1C1  F182         	movff	Command@Input,GetEnteredNumber@This
 13461  011626  EC2C  F0A3         	call	_GetEnteredNumber	;wreg free
 13462  01162A  0101               	movlb	1	; () banked
 13463  01162C  C182  F5D2         	movff	?_GetEnteredNumber,Command@channel
 13464  011630  0101               	movlb	1	; () banked
 13465  011632  C183  F5D3         	movff	?_GetEnteredNumber+1,Command@channel+1
 13466                           
 13467                           ; BSR set to: 1
 13468                           ;StringCommand.c: 491: if (channel == 32002) {
 13469  011636  0105               	movlb	5	; () banked
 13470  011638  51D3               	movf	(Command@channel+1)& (0+255),w,b
 13471  01163A  0A7D               	xorlw	125
 13472  01163C  0E02               	movlw	2
 13473  01163E  B4D8               	btfsc	status,2,c
 13474  011640  19D2               	xorwf	Command@channel& (0+255),w,b
 13475  011642  A4D8               	btfss	status,2,c
 13476  011644  D012               	goto	l12048
 13477                           
 13478                           ; BSR set to: 5
 13479                           ;StringCommand.c: 492: UARTstring("Error: only use one equal sign\r\n");
 13480  011646  0EF4               	movlw	high STR_181
 13481  011648  0101               	movlb	1	; () banked
 13482  01164A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13483  01164C  0ED2               	movlw	low STR_181
 13484  01164E  0101               	movlb	1	; () banked
 13485  011650  6F87               	movwf	UARTstring@data& (0+255),b
 13486  011652  EC15  F0AE         	call	_UARTstring	;wreg free
 13487                           
 13488                           ;StringCommand.c: 493: LCDdisplayFeedback("ERR: Use 1 =");
 13489  011656  0EFD               	movlw	high STR_182
 13490  011658  0101               	movlb	1	; () banked
 13491  01165A  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13492  01165C  0E4D               	movlw	low STR_182
 13493  01165E  0101               	movlb	1	; () banked
 13494  011660  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13495  011662  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13496                           
 13497                           ;StringCommand.c: 494: }
 13498  011666  EF28  F092         	goto	l555
 13499  01166A                     l12048:
 13500                           
 13501                           ;StringCommand.c: 495: else if (channel < 0)
 13502  01166A  0105               	movlb	5	; () banked
 13503  01166C  51D3               	movf	(Command@channel+1)& (0+255),w,b
 13504  01166E  0A80               	xorlw	128
 13505  011670  6EF3               	movwf	prodl,c
 13506  011672  0E80               	movlw	128
 13507  011674  5CF3               	subwf	prodl,w,c
 13508  011676  0E00               	movlw	0
 13509  011678  B4D8               	btfsc	status,2,c
 13510  01167A  5DD2               	subwf	Command@channel& (0+255),w,b
 13511  01167C  B0D8               	btfsc	status,0,c
 13512  01167E  D012               	goto	l12052
 13513                           
 13514                           ; BSR set to: 5
 13515                           ;StringCommand.c: 496: {
 13516                           ;StringCommand.c: 497: UARTstring("Error: No negative channels\r\n");
 13517  011680  0EF5               	movlw	high STR_183
 13518  011682  0101               	movlb	1	; () banked
 13519  011684  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13520  011686  0E72               	movlw	low STR_183
 13521  011688  0101               	movlb	1	; () banked
 13522  01168A  6F87               	movwf	UARTstring@data& (0+255),b
 13523  01168C  EC15  F0AE         	call	_UARTstring	;wreg free
 13524                           
 13525                           ;StringCommand.c: 498: LCDdisplayFeedback("ERR: Use + Chnl");
 13526  011690  0EFB               	movlw	high STR_184
 13527  011692  0101               	movlb	1	; () banked
 13528  011694  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13529  011696  0E88               	movlw	low STR_184
 13530  011698  0101               	movlb	1	; () banked
 13531  01169A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13532  01169C  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13533                           
 13534                           ;StringCommand.c: 499: }
 13535  0116A0  EF28  F092         	goto	l555
 13536  0116A4                     l12052:
 13537                           
 13538                           ;StringCommand.c: 500: else if (channel >= 32000)
 13539  0116A4  0105               	movlb	5	; () banked
 13540  0116A6  51D3               	movf	(Command@channel+1)& (0+255),w,b
 13541  0116A8  0A80               	xorlw	128
 13542  0116AA  0F03               	addlw	-253
 13543  0116AC  0E00               	movlw	0
 13544  0116AE  B4D8               	btfsc	status,2,c
 13545  0116B0  5DD2               	subwf	Command@channel& (0+255),w,b
 13546  0116B2  A0D8               	btfss	status,0,c
 13547  0116B4  D012               	goto	l12056
 13548                           
 13549                           ; BSR set to: 5
 13550                           ;StringCommand.c: 501: {
 13551                           ;StringCommand.c: 502: UARTstring("Error: in parsing command\r\n");
 13552  0116B6  0EF6               	movlw	high STR_185
 13553  0116B8  0101               	movlb	1	; () banked
 13554  0116BA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13555  0116BC  0E03               	movlw	low STR_185
 13556  0116BE  0101               	movlb	1	; () banked
 13557  0116C0  6F87               	movwf	UARTstring@data& (0+255),b
 13558  0116C2  EC15  F0AE         	call	_UARTstring	;wreg free
 13559                           
 13560                           ;StringCommand.c: 503: LCDdisplayFeedback("ERR: Cant parse");
 13561  0116C6  0EFB               	movlw	high STR_186
 13562  0116C8  0101               	movlb	1	; () banked
 13563  0116CA  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13564  0116CC  0E48               	movlw	low STR_186
 13565  0116CE  0101               	movlb	1	; () banked
 13566  0116D0  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13567  0116D2  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13568                           
 13569                           ;StringCommand.c: 504: }
 13570  0116D6  EF28  F092         	goto	l555
 13571  0116DA                     l12056:
 13572                           
 13573                           ;StringCommand.c: 505: else if (channel != 0)
 13574  0116DA  0105               	movlb	5	; () banked
 13575  0116DC  51D3               	movf	(Command@channel+1)& (0+255),w,b
 13576  0116DE  11D2               	iorwf	Command@channel& (0+255),w,b
 13577  0116E0  B4D8               	btfsc	status,2,c
 13578  0116E2  D03E               	goto	l12064
 13579                           
 13580                           ; BSR set to: 5
 13581                           ;StringCommand.c: 506: {
 13582                           ;StringCommand.c: 507: sprintf(buf, "Channel %d is not configured", channel);
 13583  0116E4  0105               	movlb	5	; () banked
 13584  0116E6  0E05               	movlw	high Command@buf
 13585  0116E8  0101               	movlb	1	; () banked
 13586  0116EA  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 13587  0116EC  0105               	movlb	5	; () banked
 13588  0116EE  0E00               	movlw	low Command@buf
 13589  0116F0  0101               	movlb	1	; () banked
 13590  0116F2  6F88               	movwf	sprintf@sp& (0+255),b
 13591  0116F4  0EF5               	movlw	high STR_187
 13592  0116F6  0101               	movlb	1	; () banked
 13593  0116F8  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 13594  0116FA  0EAD               	movlw	low STR_187
 13595  0116FC  0101               	movlb	1	; () banked
 13596  0116FE  6F8A               	movwf	sprintf@f& (0+255),b
 13597  011700  C5D2  F18C         	movff	Command@channel,?_sprintf+4
 13598  011704  C5D3  F18D         	movff	Command@channel+1,?_sprintf+5
 13599  011708  EC31  F092         	call	_sprintf	;wreg free
 13600                           
 13601                           ;StringCommand.c: 508: UARTstring(buf);
 13602  01170C  0105               	movlb	5	; () banked
 13603  01170E  0E05               	movlw	high Command@buf
 13604  011710  0101               	movlb	1	; () banked
 13605  011712  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13606  011714  0105               	movlb	5	; () banked
 13607  011716  0E00               	movlw	low Command@buf
 13608  011718  0101               	movlb	1	; () banked
 13609  01171A  6F87               	movwf	UARTstring@data& (0+255),b
 13610  01171C  EC15  F0AE         	call	_UARTstring	;wreg free
 13611                           
 13612                           ;StringCommand.c: 509: sprintf(buf, "Chnl set to %d\r\n", duty);
 13613  011720  0105               	movlb	5	; () banked
 13614  011722  0E05               	movlw	high Command@buf
 13615  011724  0101               	movlb	1	; () banked
 13616  011726  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 13617  011728  0105               	movlb	5	; () banked
 13618  01172A  0E00               	movlw	low Command@buf
 13619  01172C  0101               	movlb	1	; () banked
 13620  01172E  6F88               	movwf	sprintf@sp& (0+255),b
 13621  011730  0EF9               	movlw	high STR_188
 13622  011732  0101               	movlb	1	; () banked
 13623  011734  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 13624  011736  0EAC               	movlw	low STR_188
 13625  011738  0101               	movlb	1	; () banked
 13626  01173A  6F8A               	movwf	sprintf@f& (0+255),b
 13627  01173C  C5D4  F18C         	movff	Command@duty,?_sprintf+4
 13628  011740  C5D5  F18D         	movff	Command@duty+1,?_sprintf+5
 13629  011744  EC31  F092         	call	_sprintf	;wreg free
 13630                           
 13631                           ;StringCommand.c: 510: LCDdisplayFeedback(buf);
 13632  011748  0105               	movlb	5	; () banked
 13633  01174A  0E05               	movlw	high Command@buf
 13634  01174C  0101               	movlb	1	; () banked
 13635  01174E  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13636  011750  0105               	movlb	5	; () banked
 13637  011752  0E00               	movlw	low Command@buf
 13638  011754  0101               	movlb	1	; () banked
 13639  011756  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13640  011758  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13641                           
 13642                           ;StringCommand.c: 511: }
 13643  01175C  EF28  F092         	goto	l555
 13644  011760                     l12064:
 13645                           
 13646                           ;StringCommand.c: 512: else
 13647                           ;StringCommand.c: 513: {
 13648                           ;StringCommand.c: 514: LATE |= 0b00000010;
 13649  011760  828D               	bsf	3981,1,c	;volatile
 13650                           
 13651                           ;StringCommand.c: 515: delayUS(1000);
 13652  011762  0EE8               	movlw	232
 13653  011764  0101               	movlb	1	; () banked
 13654  011766  6F7C               	movwf	delayUS@US& (0+255),b
 13655  011768  0E03               	movlw	3
 13656  01176A  0101               	movlb	1	; () banked
 13657  01176C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 13658  01176E  0E00               	movlw	0
 13659  011770  0101               	movlb	1	; () banked
 13660  011772  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 13661  011774  0E00               	movlw	0
 13662  011776  0101               	movlb	1	; () banked
 13663  011778  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 13664  01177A  EC0D  F0B3         	call	_delayUS	;wreg free
 13665                           
 13666                           ;StringCommand.c: 516: ADC_Value = InternalADC_Read(channel);
 13667  01177E  0105               	movlb	5	; () banked
 13668  011780  51D2               	movf	Command@channel& (0+255),w,b
 13669  011782  EC22  F0B4         	call	_InternalADC_Read
 13670  011786  0101               	movlb	1	; () banked
 13671  011788  C18B  F5C8         	movff	?_InternalADC_Read,Command@ADC_Value
 13672  01178C  0101               	movlb	1	; () banked
 13673  01178E  C18C  F5C9         	movff	?_InternalADC_Read+1,Command@ADC_Value+1
 13674                           
 13675                           ; BSR set to: 1
 13676                           ;StringCommand.c: 517: sprintf(buf, "ADC channel %d = %d", channel, ADC_Value);
 13677  011792  0105               	movlb	5	; () banked
 13678  011794  0E05               	movlw	high Command@buf
 13679  011796  0101               	movlb	1	; () banked
 13680  011798  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 13681  01179A  0105               	movlb	5	; () banked
 13682  01179C  0E00               	movlw	low Command@buf
 13683  01179E  0101               	movlb	1	; () banked
 13684  0117A0  6F88               	movwf	sprintf@sp& (0+255),b
 13685  0117A2  0EF8               	movlw	high STR_189
 13686  0117A4  0101               	movlb	1	; () banked
 13687  0117A6  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 13688  0117A8  0E3B               	movlw	low STR_189
 13689  0117AA  0101               	movlb	1	; () banked
 13690  0117AC  6F8A               	movwf	sprintf@f& (0+255),b
 13691  0117AE  C5D2  F18C         	movff	Command@channel,?_sprintf+4
 13692  0117B2  C5D3  F18D         	movff	Command@channel+1,?_sprintf+5
 13693  0117B6  C5C8  F18E         	movff	Command@ADC_Value,?_sprintf+6
 13694  0117BA  C5C9  F18F         	movff	Command@ADC_Value+1,?_sprintf+7
 13695  0117BE  EC31  F092         	call	_sprintf	;wreg free
 13696                           
 13697                           ;StringCommand.c: 518: LATE &= ~0b00000010;
 13698  0117C2  928D               	bcf	3981,1,c	;volatile
 13699                           
 13700                           ;StringCommand.c: 519: UARTstring(buf);
 13701  0117C4  0105               	movlb	5	; () banked
 13702  0117C6  0E05               	movlw	high Command@buf
 13703  0117C8  0101               	movlb	1	; () banked
 13704  0117CA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13705  0117CC  0105               	movlb	5	; () banked
 13706  0117CE  0E00               	movlw	low Command@buf
 13707  0117D0  0101               	movlb	1	; () banked
 13708  0117D2  6F87               	movwf	UARTstring@data& (0+255),b
 13709  0117D4  EC15  F0AE         	call	_UARTstring	;wreg free
 13710                           
 13711                           ;StringCommand.c: 520: sprintf(buf, "Chnl %d = %d", channel, ADC_Value);
 13712  0117D8  0105               	movlb	5	; () banked
 13713  0117DA  0E05               	movlw	high Command@buf
 13714  0117DC  0101               	movlb	1	; () banked
 13715  0117DE  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 13716  0117E0  0105               	movlb	5	; () banked
 13717  0117E2  0E00               	movlw	low Command@buf
 13718  0117E4  0101               	movlb	1	; () banked
 13719  0117E6  6F88               	movwf	sprintf@sp& (0+255),b
 13720  0117E8  0EFD               	movlw	high STR_190
 13721  0117EA  0101               	movlb	1	; () banked
 13722  0117EC  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 13723  0117EE  0E67               	movlw	low STR_190
 13724  0117F0  0101               	movlb	1	; () banked
 13725  0117F2  6F8A               	movwf	sprintf@f& (0+255),b
 13726  0117F4  C5D2  F18C         	movff	Command@channel,?_sprintf+4
 13727  0117F8  C5D3  F18D         	movff	Command@channel+1,?_sprintf+5
 13728  0117FC  C5C8  F18E         	movff	Command@ADC_Value,?_sprintf+6
 13729  011800  C5C9  F18F         	movff	Command@ADC_Value+1,?_sprintf+7
 13730  011804  EC31  F092         	call	_sprintf	;wreg free
 13731                           
 13732                           ;StringCommand.c: 521: LCDdisplayFeedback(buf);
 13733  011808  0105               	movlb	5	; () banked
 13734  01180A  0E05               	movlw	high Command@buf
 13735  01180C  0101               	movlb	1	; () banked
 13736  01180E  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13737  011810  0105               	movlb	5	; () banked
 13738  011812  0E00               	movlw	low Command@buf
 13739  011814  0101               	movlb	1	; () banked
 13740  011816  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13741  011818  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 13742  01181C  EF28  F092         	goto	l555
 13743  011820                     l12080:
 13744                           
 13745                           ;StringCommand.c: 524: else
 13746                           ;StringCommand.c: 525: {
 13747                           ;StringCommand.c: 526: UARTstring("ADC Help Menu\r\n\n");
 13748  011820  0EF9               	movlw	high STR_191
 13749  011822  0101               	movlb	1	; () banked
 13750  011824  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13751  011826  0E8A               	movlw	low STR_191
 13752  011828  0101               	movlb	1	; () banked
 13753  01182A  6F87               	movwf	UARTstring@data& (0+255),b
 13754  01182C  EC15  F0AE         	call	_UARTstring	;wreg free
 13755                           
 13756                           ;StringCommand.c: 527: UARTstring("Channels:\r\n");
 13757  011830  0EFD               	movlw	high STR_192
 13758  011832  0101               	movlb	1	; () banked
 13759  011834  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13760  011836  0EC1               	movlw	low STR_192
 13761  011838  0101               	movlb	1	; () banked
 13762  01183A  6F87               	movwf	UARTstring@data& (0+255),b
 13763  01183C  EC15  F0AE         	call	_UARTstring	;wreg free
 13764                           
 13765                           ;StringCommand.c: 528: UARTstring("0\r\n\n");
 13766  011840  0EFF               	movlw	high STR_193
 13767  011842  0101               	movlb	1	; () banked
 13768  011844  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13769  011846  0EB4               	movlw	low STR_193
 13770  011848  0101               	movlb	1	; () banked
 13771  01184A  6F87               	movwf	UARTstring@data& (0+255),b
 13772  01184C  EC15  F0AE         	call	_UARTstring	;wreg free
 13773                           
 13774                           ;StringCommand.c: 529: UARTstring("To read and adc channel, type the command\r\n ADC"
 13775                           ;StringCommand.c: 530: " followed by 'Channel' \r\n");
 13776  011850  0EF0               	movlw	high STR_194
 13777  011852  0101               	movlb	1	; () banked
 13778  011854  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13779  011856  0ED1               	movlw	low STR_194
 13780  011858  0101               	movlb	1	; () banked
 13781  01185A  6F87               	movwf	UARTstring@data& (0+255),b
 13782  01185C  EC15  F0AE         	call	_UARTstring	;wreg free
 13783                           
 13784                           ;StringCommand.c: 531: UARTstring("i.e. ADC 0\r\n");
 13785  011860  0EFD               	movlw	high STR_195
 13786  011862  0101               	movlb	1	; () banked
 13787  011864  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13788  011866  0E26               	movlw	low STR_195
 13789  011868  0101               	movlb	1	; () banked
 13790  01186A  6F87               	movwf	UARTstring@data& (0+255),b
 13791  01186C  EC15  F0AE         	call	_UARTstring	;wreg free
 13792                           
 13793                           ;StringCommand.c: 532: LCD_Scroll("ADC Menu");
 13794  011870  0EFE               	movlw	high STR_196
 13795  011872  0101               	movlb	1	; () banked
 13796  011874  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13797  011876  0EF3               	movlw	low STR_196
 13798  011878  0101               	movlb	1	; () banked
 13799  01187A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13800  01187C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 13801                           
 13802                           ;StringCommand.c: 533: LCD_Scroll("Commands:");
 13803  011880  0EFE               	movlw	high STR_159
 13804  011882  0101               	movlb	1	; () banked
 13805  011884  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13806  011886  0E65               	movlw	low STR_159
 13807  011888  0101               	movlb	1	; () banked
 13808  01188A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13809  01188C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 13810                           
 13811                           ;StringCommand.c: 534: LCD_Scroll("0");
 13812  011890  0EFC               	movlw	high (STR_169+12)
 13813  011892  0101               	movlb	1	; () banked
 13814  011894  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13815  011896  0EA6               	movlw	low (STR_169+12)
 13816  011898  0101               	movlb	1	; () banked
 13817  01189A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13818  01189C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 13819  0118A0  EF28  F092         	goto	l555
 13820  0118A4                     l12088:
 13821                           
 13822                           ;StringCommand.c: 538: else if (StartsWith(Input, "rtc"))
 13823  0118A4  0101               	movlb	1	; () banked
 13824  0118A6  C1C2  F17D         	movff	Command@Input+1,StartsWith@This+1
 13825  0118AA  0101               	movlb	1	; () banked
 13826  0118AC  C1C1  F17C         	movff	Command@Input,StartsWith@This
 13827  0118B0  0EFF               	movlw	high STR_199
 13828  0118B2  0101               	movlb	1	; () banked
 13829  0118B4  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 13830  0118B6  0EE5               	movlw	low STR_199
 13831  0118B8  0101               	movlb	1	; () banked
 13832  0118BA  6F7E               	movwf	StartsWith@That& (0+255),b
 13833  0118BC  EC57  F0AF         	call	_StartsWith	;wreg free
 13834  0118C0  0900               	iorlw	0
 13835  0118C2  B4D8               	btfsc	status,2,c
 13836  0118C4  D2E8               	goto	l12184
 13837                           
 13838                           ;StringCommand.c: 539: {
 13839                           ;StringCommand.c: 540: if (!StringContains(Input, "?"))
 13840  0118C6  0101               	movlb	1	; () banked
 13841  0118C8  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 13842  0118CC  0101               	movlb	1	; () banked
 13843  0118CE  C1C1  F17C         	movff	Command@Input,StringContains@This
 13844  0118D2  0EFA               	movlw	high (STR_64+14)
 13845  0118D4  0101               	movlb	1	; () banked
 13846  0118D6  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13847  0118D8  0EA6               	movlw	low (STR_64+14)
 13848  0118DA  0101               	movlb	1	; () banked
 13849  0118DC  6F7E               	movwf	StringContains@That& (0+255),b
 13850  0118DE  ECD8  F0B1         	call	_StringContains	;wreg free
 13851  0118E2  0900               	iorlw	0
 13852  0118E4  A4D8               	btfss	status,2,c
 13853  0118E6  D26E               	goto	l12172
 13854                           
 13855                           ;StringCommand.c: 541: {
 13856                           ;StringCommand.c: 542: if (StringContains(Input, "battery"))
 13857  0118E8  0101               	movlb	1	; () banked
 13858  0118EA  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 13859  0118EE  0101               	movlb	1	; () banked
 13860  0118F0  C1C1  F17C         	movff	Command@Input,StringContains@This
 13861  0118F4  0EFF               	movlw	high STR_201
 13862  0118F6  0101               	movlb	1	; () banked
 13863  0118F8  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13864  0118FA  0E57               	movlw	low STR_201
 13865  0118FC  0101               	movlb	1	; () banked
 13866  0118FE  6F7E               	movwf	StringContains@That& (0+255),b
 13867  011900  ECD8  F0B1         	call	_StringContains	;wreg free
 13868  011904  0900               	iorlw	0
 13869  011906  B4D8               	btfsc	status,2,c
 13870  011908  D0DD               	goto	l12110
 13871                           
 13872                           ;StringCommand.c: 543: {
 13873                           ;StringCommand.c: 544: RTC_Battery_Value = (InternalADC_Read(2) + 8);
 13874  01190A  0E02               	movlw	2
 13875  01190C  EC22  F0B4         	call	_InternalADC_Read
 13876  011910  0E08               	movlw	8
 13877  011912  0101               	movlb	1	; () banked
 13878  011914  258B               	addwf	?_InternalADC_Read& (0+255),w,b
 13879  011916  0105               	movlb	5	; () banked
 13880  011918  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 13881  01191A  0E00               	movlw	0
 13882  01191C  0101               	movlb	1	; () banked
 13883  01191E  218C               	addwfc	(?_InternalADC_Read+1)& (0+255),w,b
 13884  011920  0105               	movlb	5	; () banked
 13885  011922  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 13886                           
 13887                           ; BSR set to: 5
 13888                           ;StringCommand.c: 545: RTC_Battery_Value_HIGH_decimal = (unsigned int)(((float)RTC_Batte
      +                          ry_Value / 1024) * 5);
 13889  011924  0E00               	movlw	0
 13890  011926  0101               	movlb	1	; () banked
 13891  011928  6F9A               	movwf	___ftmul@f2& (0+255),b
 13892  01192A  0EA0               	movlw	160
 13893  01192C  0101               	movlb	1	; () banked
 13894  01192E  6F9B               	movwf	(___ftmul@f2+1)& (0+255),b
 13895  011930  0E40               	movlw	64
 13896  011932  0101               	movlb	1	; () banked
 13897  011934  6F9C               	movwf	(___ftmul@f2+2)& (0+255),b
 13898  011936  0E00               	movlw	0
 13899  011938  0101               	movlb	1	; () banked
 13900  01193A  6F8B               	movwf	___ftdiv@f2& (0+255),b
 13901  01193C  0E80               	movlw	128
 13902  01193E  0101               	movlb	1	; () banked
 13903  011940  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 13904  011942  0E44               	movlw	68
 13905  011944  0101               	movlb	1	; () banked
 13906  011946  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 13907  011948  C5CA  F184         	movff	Command@RTC_Battery_Value,___lwtoft@c
 13908  01194C  C5CB  F185         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 13909  011950  EC64  F0B7         	call	___lwtoft	;wreg free
 13910  011954  C184  F188         	movff	?___lwtoft,___ftdiv@f1
 13911  011958  C185  F189         	movff	?___lwtoft+1,___ftdiv@f1+1
 13912  01195C  C186  F18A         	movff	?___lwtoft+2,___ftdiv@f1+2
 13913  011960  EC3C  F0A6         	call	___ftdiv	;wreg free
 13914  011964  C188  F197         	movff	?___ftdiv,___ftmul@f1
 13915  011968  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 13916  01196C  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 13917  011970  EC81  F0A5         	call	___ftmul	;wreg free
 13918  011974  C197  F1A6         	movff	?___ftmul,___fttol@f1
 13919  011978  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 13920  01197C  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 13921  011980  ECC3  F0A4         	call	___fttol	;wreg free
 13922  011984  C1A6  F1C3         	movff	?___fttol,??_Command
 13923  011988  C1A7  F1C4         	movff	?___fttol+1,??_Command+1
 13924  01198C  C1A8  F1C5         	movff	?___fttol+2,??_Command+2
 13925  011990  C1A9  F1C6         	movff	?___fttol+3,??_Command+3
 13926  011994  C1C3  F5CC         	movff	??_Command,Command@RTC_Battery_Value_HIGH_decimal
 13927  011998  C1C4  F5CD         	movff	??_Command+1,Command@RTC_Battery_Value_HIGH_decimal+1
 13928                           
 13929                           ;StringCommand.c: 546: RTC_Battery_Value_LOW_decimal = (unsigned int)((((float)RTC_Batte
      +                          ry_Value / 1024) * 500));
 13930  01199C  0E00               	movlw	0
 13931  01199E  0101               	movlb	1	; () banked
 13932  0119A0  6F9A               	movwf	___ftmul@f2& (0+255),b
 13933  0119A2  0EFA               	movlw	250
 13934  0119A4  0101               	movlb	1	; () banked
 13935  0119A6  6F9B               	movwf	(___ftmul@f2+1)& (0+255),b
 13936  0119A8  0E43               	movlw	67
 13937  0119AA  0101               	movlb	1	; () banked
 13938  0119AC  6F9C               	movwf	(___ftmul@f2+2)& (0+255),b
 13939  0119AE  0E00               	movlw	0
 13940  0119B0  0101               	movlb	1	; () banked
 13941  0119B2  6F8B               	movwf	___ftdiv@f2& (0+255),b
 13942  0119B4  0E80               	movlw	128
 13943  0119B6  0101               	movlb	1	; () banked
 13944  0119B8  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 13945  0119BA  0E44               	movlw	68
 13946  0119BC  0101               	movlb	1	; () banked
 13947  0119BE  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 13948  0119C0  C5CA  F184         	movff	Command@RTC_Battery_Value,___lwtoft@c
 13949  0119C4  C5CB  F185         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 13950  0119C8  EC64  F0B7         	call	___lwtoft	;wreg free
 13951  0119CC  C184  F188         	movff	?___lwtoft,___ftdiv@f1
 13952  0119D0  C185  F189         	movff	?___lwtoft+1,___ftdiv@f1+1
 13953  0119D4  C186  F18A         	movff	?___lwtoft+2,___ftdiv@f1+2
 13954  0119D8  EC3C  F0A6         	call	___ftdiv	;wreg free
 13955  0119DC  C188  F197         	movff	?___ftdiv,___ftmul@f1
 13956  0119E0  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 13957  0119E4  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 13958  0119E8  EC81  F0A5         	call	___ftmul	;wreg free
 13959  0119EC  C197  F1A6         	movff	?___ftmul,___fttol@f1
 13960  0119F0  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 13961  0119F4  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 13962  0119F8  ECC3  F0A4         	call	___fttol	;wreg free
 13963  0119FC  C1A6  F1C3         	movff	?___fttol,??_Command
 13964  011A00  C1A7  F1C4         	movff	?___fttol+1,??_Command+1
 13965  011A04  C1A8  F1C5         	movff	?___fttol+2,??_Command+2
 13966  011A08  C1A9  F1C6         	movff	?___fttol+3,??_Command+3
 13967  011A0C  C1C3  F5CE         	movff	??_Command,Command@RTC_Battery_Value_LOW_decimal
 13968  011A10  C1C4  F5CF         	movff	??_Command+1,Command@RTC_Battery_Value_LOW_decimal+1
 13969                           
 13970                           ;StringCommand.c: 547: RTC_Battery_Value_LOW_decimal = RTC_Battery_Value_LOW_decimal % 1
      +                          00;
 13971  011A14  C5CE  F183         	movff	Command@RTC_Battery_Value_LOW_decimal,___lwmod@dividend
 13972  011A18  C5CF  F184         	movff	Command@RTC_Battery_Value_LOW_decimal+1,___lwmod@dividend+1
 13973  011A1C  0E00               	movlw	0
 13974  011A1E  0101               	movlb	1	; () banked
 13975  011A20  6F86               	movwf	(___lwmod@divisor+1)& (0+255),b
 13976  011A22  0E64               	movlw	100
 13977  011A24  0101               	movlb	1	; () banked
 13978  011A26  6F85               	movwf	___lwmod@divisor& (0+255),b
 13979  011A28  ECED  F0B4         	call	___lwmod	;wreg free
 13980  011A2C  0101               	movlb	1	; () banked
 13981  011A2E  C183  F5CE         	movff	?___lwmod,Command@RTC_Battery_Value_LOW_decimal
 13982  011A32  0101               	movlb	1	; () banked
 13983  011A34  C184  F5CF         	movff	?___lwmod+1,Command@RTC_Battery_Value_LOW_decimal+1
 13984                           
 13985                           ; BSR set to: 1
 13986                           ;StringCommand.c: 548: sprintf(buf, " 3 Volt RTC Battery Voltage = %d.%d",
 13987                           ;StringCommand.c: 549: RTC_Battery_Value_HIGH_decimal, RTC_Battery_Value_LOW_decimal);
 13988  011A38  0105               	movlb	5	; () banked
 13989  011A3A  0E05               	movlw	high Command@buf
 13990  011A3C  0101               	movlb	1	; () banked
 13991  011A3E  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 13992  011A40  0105               	movlb	5	; () banked
 13993  011A42  0E00               	movlw	low Command@buf
 13994  011A44  0101               	movlb	1	; () banked
 13995  011A46  6F88               	movwf	sprintf@sp& (0+255),b
 13996  011A48  0EF4               	movlw	high STR_202
 13997  011A4A  0101               	movlb	1	; () banked
 13998  011A4C  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 13999  011A4E  0E04               	movlw	low STR_202
 14000  011A50  0101               	movlb	1	; () banked
 14001  011A52  6F8A               	movwf	sprintf@f& (0+255),b
 14002  011A54  C5CC  F18C         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 14003  011A58  C5CD  F18D         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 14004  011A5C  C5CE  F18E         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 14005  011A60  C5CF  F18F         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 14006  011A64  EC31  F092         	call	_sprintf	;wreg free
 14007                           
 14008                           ;StringCommand.c: 550: UARTstring(buf);
 14009  011A68  0105               	movlb	5	; () banked
 14010  011A6A  0E05               	movlw	high Command@buf
 14011  011A6C  0101               	movlb	1	; () banked
 14012  011A6E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14013  011A70  0105               	movlb	5	; () banked
 14014  011A72  0E00               	movlw	low Command@buf
 14015  011A74  0101               	movlb	1	; () banked
 14016  011A76  6F87               	movwf	UARTstring@data& (0+255),b
 14017  011A78  EC15  F0AE         	call	_UARTstring	;wreg free
 14018                           
 14019                           ;StringCommand.c: 551: sprintf(buf, "RTC Bty = %d.%d", RTC_Battery_Value_HIGH_decimal,
 14020                           ;StringCommand.c: 552: RTC_Battery_Value_LOW_decimal);
 14021  011A7C  0105               	movlb	5	; () banked
 14022  011A7E  0E05               	movlw	high Command@buf
 14023  011A80  0101               	movlb	1	; () banked
 14024  011A82  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 14025  011A84  0105               	movlb	5	; () banked
 14026  011A86  0E00               	movlw	low Command@buf
 14027  011A88  0101               	movlb	1	; () banked
 14028  011A8A  6F88               	movwf	sprintf@sp& (0+255),b
 14029  011A8C  0EFB               	movlw	high STR_203
 14030  011A8E  0101               	movlb	1	; () banked
 14031  011A90  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 14032  011A92  0E28               	movlw	low STR_203
 14033  011A94  0101               	movlb	1	; () banked
 14034  011A96  6F8A               	movwf	sprintf@f& (0+255),b
 14035  011A98  C5CC  F18C         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 14036  011A9C  C5CD  F18D         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 14037  011AA0  C5CE  F18E         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 14038  011AA4  C5CF  F18F         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 14039  011AA8  EC31  F092         	call	_sprintf	;wreg free
 14040                           
 14041                           ;StringCommand.c: 553: LCDdisplayFeedback(buf);
 14042  011AAC  0105               	movlb	5	; () banked
 14043  011AAE  0E05               	movlw	high Command@buf
 14044  011AB0  0101               	movlb	1	; () banked
 14045  011AB2  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14046  011AB4  0105               	movlb	5	; () banked
 14047  011AB6  0E00               	movlw	low Command@buf
 14048  011AB8  0101               	movlb	1	; () banked
 14049  011ABA  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14050  011ABC  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 14051                           
 14052                           ;StringCommand.c: 554: }
 14053  011AC0  EF28  F092         	goto	l555
 14054  011AC4                     l12110:
 14055                           
 14056                           ;StringCommand.c: 555: else if(StringContains(Input, "read"))
 14057  011AC4  0101               	movlb	1	; () banked
 14058  011AC6  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 14059  011ACA  0101               	movlb	1	; () banked
 14060  011ACC  C1C1  F17C         	movff	Command@Input,StringContains@This
 14061  011AD0  0EFF               	movlw	high STR_204
 14062  011AD2  0101               	movlb	1	; () banked
 14063  011AD4  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14064  011AD6  0EDC               	movlw	low STR_204
 14065  011AD8  0101               	movlb	1	; () banked
 14066  011ADA  6F7E               	movwf	StringContains@That& (0+255),b
 14067  011ADC  ECD8  F0B1         	call	_StringContains	;wreg free
 14068  011AE0  0900               	iorlw	0
 14069  011AE2  B4D8               	btfsc	status,2,c
 14070  011AE4  D0BA               	goto	l12142
 14071                           
 14072                           ;StringCommand.c: 556: {
 14073                           ;StringCommand.c: 557: if(!READ_RTC_TIME())
 14074  011AE6  EC12  F0AA         	call	_READ_RTC_TIME	;wreg free
 14075  011AEA  0900               	iorlw	0
 14076  011AEC  A4D8               	btfss	status,2,c
 14077  011AEE  D09E               	goto	l12134
 14078                           
 14079                           ;StringCommand.c: 558: {
 14080                           ;StringCommand.c: 559: SprintDate(buf, NowTime, 0);
 14081  011AF0  0105               	movlb	5	; () banked
 14082  011AF2  0E05               	movlw	high Command@buf
 14083  011AF4  0101               	movlb	1	; () banked
 14084  011AF6  6FB0               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 14085  011AF8  0105               	movlb	5	; () banked
 14086  011AFA  0E00               	movlw	low Command@buf
 14087  011AFC  0101               	movlb	1	; () banked
 14088  011AFE  6FAF               	movwf	SprintDate@ReturnBuf& (0+255),b
 14089  011B00  EE21  F000         	lfsr	2,_NowTime
 14090  011B04  EE11  F0B1         	lfsr	1,SprintDate@DisplayTime
 14091  011B08  0E09               	movlw	9
 14092  011B0A                     u15561:
 14093  011B0A  CFDE FFE6          	movff	postinc2,postinc1
 14094  011B0E  2EE8               	decfsz	wreg,f,c
 14095  011B10  D7FC               	goto	u15561
 14096  011B12  0E00               	movlw	0
 14097  011B14  0101               	movlb	1	; () banked
 14098  011B16  6FBA               	movwf	SprintDate@Military& (0+255),b
 14099  011B18  EC15  F0A8         	call	_SprintDate	;wreg free
 14100                           
 14101                           ;StringCommand.c: 560: UARTstring(buf);
 14102  011B1C  0105               	movlb	5	; () banked
 14103  011B1E  0E05               	movlw	high Command@buf
 14104  011B20  0101               	movlb	1	; () banked
 14105  011B22  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14106  011B24  0105               	movlb	5	; () banked
 14107  011B26  0E00               	movlw	low Command@buf
 14108  011B28  0101               	movlb	1	; () banked
 14109  011B2A  6F87               	movwf	UARTstring@data& (0+255),b
 14110  011B2C  EC15  F0AE         	call	_UARTstring	;wreg free
 14111                           
 14112                           ;StringCommand.c: 561: UARTstring("\r\n");
 14113  011B30  0EF7               	movlw	high (STR_262+19)
 14114  011B32  0101               	movlb	1	; () banked
 14115  011B34  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14116  011B36  0EE2               	movlw	low (STR_262+19)
 14117  011B38  0101               	movlb	1	; () banked
 14118  011B3A  6F87               	movwf	UARTstring@data& (0+255),b
 14119  011B3C  EC15  F0AE         	call	_UARTstring	;wreg free
 14120                           
 14121                           ;StringCommand.c: 562: SetLCDcursor(0, 0);
 14122  011B40  0E00               	movlw	0
 14123  011B42  0101               	movlb	1	; () banked
 14124  011B44  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 14125  011B46  0E00               	movlw	0
 14126  011B48  EC01  F0B7         	call	_SetLCDcursor
 14127                           
 14128                           ;StringCommand.c: 563: LCDPrintString("RTC Time is:    ");
 14129  011B4C  0EF9               	movlw	high STR_206
 14130  011B4E  0101               	movlb	1	; () banked
 14131  011B50  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14132  011B52  0EDF               	movlw	low STR_206
 14133  011B54  0101               	movlb	1	; () banked
 14134  011B56  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 14135  011B58  EC55  F0B2         	call	_LCDPrintString	;wreg free
 14136                           
 14137                           ;StringCommand.c: 564: if(NowTime.HoursAM_PM)
 14138  011B5C  0101               	movlb	1	; () banked
 14139  011B5E  5104               	movf	(_NowTime+4)& (0+255),w,b
 14140  011B60  B4D8               	btfsc	status,2,c
 14141  011B62  D02A               	goto	l12128
 14142                           
 14143                           ; BSR set to: 1
 14144                           ;StringCommand.c: 565: {
 14145                           ;StringCommand.c: 566: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 14146  011B64  0105               	movlb	5	; () banked
 14147  011B66  0E05               	movlw	high Command@buf
 14148  011B68  0101               	movlb	1	; () banked
 14149  011B6A  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 14150  011B6C  0105               	movlb	5	; () banked
 14151  011B6E  0E00               	movlw	low Command@buf
 14152  011B70  0101               	movlb	1	; () banked
 14153  011B72  6F88               	movwf	sprintf@sp& (0+255),b
 14154  011B74  0EF7               	movlw	high STR_207
 14155  011B76  0101               	movlb	1	; () banked
 14156  011B78  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 14157  011B7A  0EB8               	movlw	low STR_207
 14158  011B7C  0101               	movlb	1	; () banked
 14159  011B7E  6F8A               	movwf	sprintf@f& (0+255),b
 14160  011B80  0101               	movlb	1	; () banked
 14161  011B82  C107  F18C         	movff	_NowTime+7,?_sprintf+4
 14162  011B86  0101               	movlb	1	; () banked
 14163  011B88  6B8D               	clrf	(?_sprintf+5)& (0+255),b
 14164  011B8A  0101               	movlb	1	; () banked
 14165  011B8C  C106  F18E         	movff	_NowTime+6,?_sprintf+6
 14166  011B90  0101               	movlb	1	; () banked
 14167  011B92  6B8F               	clrf	(?_sprintf+7)& (0+255),b
 14168  011B94  0101               	movlb	1	; () banked
 14169  011B96  C102  F190         	movff	_NowTime+2,?_sprintf+8
 14170  011B9A  0101               	movlb	1	; () banked
 14171  011B9C  6B91               	clrf	(?_sprintf+9)& (0+255),b
 14172  011B9E  0101               	movlb	1	; () banked
 14173  011BA0  C101  F192         	movff	_NowTime+1,?_sprintf+10
 14174  011BA4  0101               	movlb	1	; () banked
 14175  011BA6  6B93               	clrf	(?_sprintf+11)& (0+255),b
 14176  011BA8  0101               	movlb	1	; () banked
 14177  011BAA  C100  F194         	movff	_NowTime,?_sprintf+12
 14178  011BAE  0101               	movlb	1	; () banked
 14179  011BB0  6B95               	clrf	(?_sprintf+13)& (0+255),b
 14180  011BB2  EC31  F092         	call	_sprintf	;wreg free
 14181                           
 14182                           ;StringCommand.c: 567: }
 14183  011BB6  D029               	goto	l12130
 14184  011BB8                     l12128:
 14185                           
 14186                           ;StringCommand.c: 568: else
 14187                           ;StringCommand.c: 569: {
 14188                           ;StringCommand.c: 570: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 14189  011BB8  0105               	movlb	5	; () banked
 14190  011BBA  0E05               	movlw	high Command@buf
 14191  011BBC  0101               	movlb	1	; () banked
 14192  011BBE  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 14193  011BC0  0105               	movlb	5	; () banked
 14194  011BC2  0E00               	movlw	low Command@buf
 14195  011BC4  0101               	movlb	1	; () banked
 14196  011BC6  6F88               	movwf	sprintf@sp& (0+255),b
 14197  011BC8  0EF7               	movlw	high STR_208
 14198  011BCA  0101               	movlb	1	; () banked
 14199  011BCC  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 14200  011BCE  0EA1               	movlw	low STR_208
 14201  011BD0  0101               	movlb	1	; () banked
 14202  011BD2  6F8A               	movwf	sprintf@f& (0+255),b
 14203  011BD4  0101               	movlb	1	; () banked
 14204  011BD6  C107  F18C         	movff	_NowTime+7,?_sprintf+4
 14205  011BDA  0101               	movlb	1	; () banked
 14206  011BDC  6B8D               	clrf	(?_sprintf+5)& (0+255),b
 14207  011BDE  0101               	movlb	1	; () banked
 14208  011BE0  C106  F18E         	movff	_NowTime+6,?_sprintf+6
 14209  011BE4  0101               	movlb	1	; () banked
 14210  011BE6  6B8F               	clrf	(?_sprintf+7)& (0+255),b
 14211  011BE8  0101               	movlb	1	; () banked
 14212  011BEA  C102  F190         	movff	_NowTime+2,?_sprintf+8
 14213  011BEE  0101               	movlb	1	; () banked
 14214  011BF0  6B91               	clrf	(?_sprintf+9)& (0+255),b
 14215  011BF2  0101               	movlb	1	; () banked
 14216  011BF4  C101  F192         	movff	_NowTime+1,?_sprintf+10
 14217  011BF8  0101               	movlb	1	; () banked
 14218  011BFA  6B93               	clrf	(?_sprintf+11)& (0+255),b
 14219  011BFC  0101               	movlb	1	; () banked
 14220  011BFE  C100  F194         	movff	_NowTime,?_sprintf+12
 14221  011C02  0101               	movlb	1	; () banked
 14222  011C04  6B95               	clrf	(?_sprintf+13)& (0+255),b
 14223  011C06  EC31  F092         	call	_sprintf	;wreg free
 14224  011C0A                     l12130:
 14225                           
 14226                           ;StringCommand.c: 571: }
 14227                           ;StringCommand.c: 572: SetLCDcursor(1, 0);
 14228  011C0A  0E00               	movlw	0
 14229  011C0C  0101               	movlb	1	; () banked
 14230  011C0E  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 14231  011C10  0E01               	movlw	1
 14232  011C12  EC01  F0B7         	call	_SetLCDcursor
 14233                           
 14234                           ;StringCommand.c: 573: LCDPrintString(buf);
 14235  011C16  0105               	movlb	5	; () banked
 14236  011C18  0E05               	movlw	high Command@buf
 14237  011C1A  0101               	movlb	1	; () banked
 14238  011C1C  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14239  011C1E  0105               	movlb	5	; () banked
 14240  011C20  0E00               	movlw	low Command@buf
 14241  011C22  0101               	movlb	1	; () banked
 14242  011C24  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 14243  011C26  EC55  F0B2         	call	_LCDPrintString	;wreg free
 14244                           
 14245                           ;StringCommand.c: 574: }
 14246  011C2A  D3F5               	goto	l12270
 14247  011C2C                     l12134:
 14248                           
 14249                           ;StringCommand.c: 575: else
 14250                           ;StringCommand.c: 576: {
 14251                           ;StringCommand.c: 577: UARTstring("ERROR: Can't Read RTC\r\n");
 14252  011C2C  0EF7               	movlw	high STR_209
 14253  011C2E  0101               	movlb	1	; () banked
 14254  011C30  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14255  011C32  0E5A               	movlw	low STR_209
 14256  011C34  0101               	movlb	1	; () banked
 14257  011C36  6F87               	movwf	UARTstring@data& (0+255),b
 14258  011C38  EC15  F0AE         	call	_UARTstring	;wreg free
 14259                           
 14260                           ;StringCommand.c: 578: SetLCDcursor(1, 0);
 14261  011C3C  0E00               	movlw	0
 14262  011C3E  0101               	movlb	1	; () banked
 14263  011C40  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 14264  011C42  0E01               	movlw	1
 14265  011C44  EC01  F0B7         	call	_SetLCDcursor
 14266                           
 14267                           ;StringCommand.c: 579: LCDPrintString("RTC isnt working");
 14268  011C48  0EFA               	movlw	high STR_210
 14269  011C4A  0101               	movlb	1	; () banked
 14270  011C4C  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14271  011C4E  0E01               	movlw	low STR_210
 14272  011C50  0101               	movlb	1	; () banked
 14273  011C52  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 14274  011C54  EC55  F0B2         	call	_LCDPrintString	;wreg free
 14275  011C58  D3DE               	goto	l12270
 14276  011C5A                     l12142:
 14277                           
 14278                           ;StringCommand.c: 583: else if(StringContains(Input, "set"))
 14279  011C5A  0101               	movlb	1	; () banked
 14280  011C5C  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 14281  011C60  0101               	movlb	1	; () banked
 14282  011C62  C1C1  F17C         	movff	Command@Input,StringContains@This
 14283  011C66  0EFF               	movlw	high STR_211
 14284  011C68  0101               	movlb	1	; () banked
 14285  011C6A  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14286  011C6C  0EF9               	movlw	low STR_211
 14287  011C6E  0101               	movlb	1	; () banked
 14288  011C70  6F7E               	movwf	StringContains@That& (0+255),b
 14289  011C72  ECD8  F0B1         	call	_StringContains	;wreg free
 14290  011C76  0900               	iorlw	0
 14291  011C78  B4D8               	btfsc	status,2,c
 14292  011C7A  D09B               	goto	l12170
 14293                           
 14294                           ;StringCommand.c: 584: {
 14295                           ;StringCommand.c: 585: UARTstring("Enter Time MM/DD/YY HH:MM:SS AM or\r\n");
 14296  011C7C  0EF3               	movlw	high STR_212
 14297  011C7E  0101               	movlb	1	; () banked
 14298  011C80  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14299  011C82  0EDF               	movlw	low STR_212
 14300  011C84  0101               	movlb	1	; () banked
 14301  011C86  6F87               	movwf	UARTstring@data& (0+255),b
 14302  011C88  EC15  F0AE         	call	_UARTstring	;wreg free
 14303                           
 14304                           ;StringCommand.c: 586: UARTstring("Enter Time MM/DD/YY HH:MM:SS PM\r\n");
 14305  011C8C  0EF4               	movlw	high STR_213
 14306  011C8E  0101               	movlb	1	; () banked
 14307  011C90  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14308  011C92  0E6E               	movlw	low STR_213
 14309  011C94  0101               	movlb	1	; () banked
 14310  011C96  6F87               	movwf	UARTstring@data& (0+255),b
 14311  011C98  EC15  F0AE         	call	_UARTstring	;wreg free
 14312                           
 14313                           ;StringCommand.c: 587: cleanBuffer(Input, 100);
 14314  011C9C  0101               	movlb	1	; () banked
 14315  011C9E  C1C2  F17D         	movff	Command@Input+1,cleanBuffer@data+1
 14316  011CA2  0101               	movlb	1	; () banked
 14317  011CA4  C1C1  F17C         	movff	Command@Input,cleanBuffer@data
 14318  011CA8  0E00               	movlw	0
 14319  011CAA  0101               	movlb	1	; () banked
 14320  011CAC  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 14321  011CAE  0E64               	movlw	100
 14322  011CB0  0101               	movlb	1	; () banked
 14323  011CB2  6F7E               	movwf	cleanBuffer@count& (0+255),b
 14324  011CB4  EC7C  F0B5         	call	_cleanBuffer	;wreg free
 14325                           
 14326                           ;StringCommand.c: 588: UARTstring(">");
 14327  011CB8  0EF5               	movlw	high (STR_16+27)
 14328  011CBA  0101               	movlb	1	; () banked
 14329  011CBC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14330  011CBE  0EE5               	movlw	low (STR_16+27)
 14331  011CC0  0101               	movlb	1	; () banked
 14332  011CC2  6F87               	movwf	UARTstring@data& (0+255),b
 14333  011CC4  EC15  F0AE         	call	_UARTstring	;wreg free
 14334  011CC8                     l12150:
 14335                           
 14336                           ;StringCommand.c: 590: {
 14337                           ;StringCommand.c: 591: if(Input[0] != 0)
 14338  011CC8  C1C1  FFD9         	movff	Command@Input,fsr2l
 14339  011CCC  C1C2  FFDA         	movff	Command@Input+1,fsr2h
 14340  011CD0  50DF               	movf	indf2,w,c
 14341  011CD2  B4D8               	btfsc	status,2,c
 14342  011CD4  D7F9               	goto	l12150
 14343                           
 14344                           ;StringCommand.c: 592: {
 14345                           ;StringCommand.c: 593: lowercase(Input);
 14346  011CD6  0101               	movlb	1	; () banked
 14347  011CD8  C1C2  F17D         	movff	Command@Input+1,lowercase@Input+1
 14348  011CDC  0101               	movlb	1	; () banked
 14349  011CDE  C1C1  F17C         	movff	Command@Input,lowercase@Input
 14350  011CE2  ECC5  F0B0         	call	_lowercase	;wreg free
 14351                           
 14352                           ;StringCommand.c: 594: if(Parse_Time(Input))
 14353  011CE6  0101               	movlb	1	; () banked
 14354  011CE8  C1C2  F17D         	movff	Command@Input+1,Parse_Time@This+1
 14355  011CEC  0101               	movlb	1	; () banked
 14356  011CEE  C1C1  F17C         	movff	Command@Input,Parse_Time@This
 14357  011CF2  EC6B  F09A         	call	_Parse_Time	;wreg free
 14358  011CF6  0900               	iorlw	0
 14359  011CF8  B4D8               	btfsc	status,2,c
 14360  011CFA  D04A               	goto	l12168
 14361                           
 14362                           ;StringCommand.c: 595: {
 14363                           ;StringCommand.c: 596: if(!SET_RTC_TIME(NowTime))
 14364  011CFC  EE21  F000         	lfsr	2,_NowTime
 14365  011D00  EE11  F084         	lfsr	1,SET_RTC_TIME@SetTime
 14366  011D04  0E09               	movlw	9
 14367  011D06                     u15611:
 14368  011D06  CFDE FFE6          	movff	postinc2,postinc1
 14369  011D0A  2EE8               	decfsz	wreg,f,c
 14370  011D0C  D7FC               	goto	u15611
 14371  011D0E  ECE5  F09E         	call	_SET_RTC_TIME	;wreg free
 14372  011D12  0900               	iorlw	0
 14373  011D14  A4D8               	btfss	status,2,c
 14374  011D16  D033               	goto	l12166
 14375                           
 14376                           ;StringCommand.c: 597: {
 14377                           ;StringCommand.c: 598: UARTstring("\r\nTime Set Successfully\r\n");
 14378  011D18  0EF6               	movlw	high STR_215
 14379  011D1A  0101               	movlb	1	; () banked
 14380  011D1C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14381  011D1E  0EDD               	movlw	low STR_215
 14382  011D20  0101               	movlb	1	; () banked
 14383  011D22  6F87               	movwf	UARTstring@data& (0+255),b
 14384  011D24  EC15  F0AE         	call	_UARTstring	;wreg free
 14385                           
 14386                           ;StringCommand.c: 599: READ_RTC_TIME();
 14387  011D28  EC12  F0AA         	call	_READ_RTC_TIME	;wreg free
 14388                           
 14389                           ;StringCommand.c: 600: SprintDate(buf, NowTime, 0);
 14390  011D2C  0105               	movlb	5	; () banked
 14391  011D2E  0E05               	movlw	high Command@buf
 14392  011D30  0101               	movlb	1	; () banked
 14393  011D32  6FB0               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 14394  011D34  0105               	movlb	5	; () banked
 14395  011D36  0E00               	movlw	low Command@buf
 14396  011D38  0101               	movlb	1	; () banked
 14397  011D3A  6FAF               	movwf	SprintDate@ReturnBuf& (0+255),b
 14398  011D3C  EE21  F000         	lfsr	2,_NowTime
 14399  011D40  EE11  F0B1         	lfsr	1,SprintDate@DisplayTime
 14400  011D44  0E09               	movlw	9
 14401  011D46                     u15631:
 14402  011D46  CFDE FFE6          	movff	postinc2,postinc1
 14403  011D4A  2EE8               	decfsz	wreg,f,c
 14404  011D4C  D7FC               	goto	u15631
 14405  011D4E  0E00               	movlw	0
 14406  011D50  0101               	movlb	1	; () banked
 14407  011D52  6FBA               	movwf	SprintDate@Military& (0+255),b
 14408  011D54  EC15  F0A8         	call	_SprintDate	;wreg free
 14409                           
 14410                           ;StringCommand.c: 601: UARTstring(buf);
 14411  011D58  0105               	movlb	5	; () banked
 14412  011D5A  0E05               	movlw	high Command@buf
 14413  011D5C  0101               	movlb	1	; () banked
 14414  011D5E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14415  011D60  0105               	movlb	5	; () banked
 14416  011D62  0E00               	movlw	low Command@buf
 14417  011D64  0101               	movlb	1	; () banked
 14418  011D66  6F87               	movwf	UARTstring@data& (0+255),b
 14419  011D68  EC15  F0AE         	call	_UARTstring	;wreg free
 14420                           
 14421                           ;StringCommand.c: 602: UARTstring("\r\n");
 14422  011D6C  0EF7               	movlw	high (STR_262+19)
 14423  011D6E  0101               	movlb	1	; () banked
 14424  011D70  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14425  011D72  0EE2               	movlw	low (STR_262+19)
 14426  011D74  0101               	movlb	1	; () banked
 14427  011D76  6F87               	movwf	UARTstring@data& (0+255),b
 14428  011D78  EC15  F0AE         	call	_UARTstring	;wreg free
 14429                           
 14430                           ;StringCommand.c: 603: }
 14431  011D7C  D369               	goto	l555
 14432  011D7E                     l12166:
 14433                           
 14434                           ;StringCommand.c: 604: else
 14435                           ;StringCommand.c: 605: {
 14436                           ;StringCommand.c: 606: UARTstring("\r\nTime Not Set Successfully");
 14437  011D7E  0EF6               	movlw	high STR_217
 14438  011D80  0101               	movlb	1	; () banked
 14439  011D82  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14440  011D84  0E57               	movlw	low STR_217
 14441  011D86  0101               	movlb	1	; () banked
 14442  011D88  6F87               	movwf	UARTstring@data& (0+255),b
 14443  011D8A  EC15  F0AE         	call	_UARTstring	;wreg free
 14444  011D8E  D360               	goto	l555
 14445  011D90                     l12168:
 14446                           
 14447                           ;StringCommand.c: 609: else
 14448                           ;StringCommand.c: 610: {
 14449                           ;StringCommand.c: 611: UARTstring("\r\nInvalid Time Entered\r\n");
 14450  011D90  0EF7               	movlw	high STR_218
 14451  011D92  0101               	movlb	1	; () banked
 14452  011D94  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14453  011D96  0E10               	movlw	low STR_218
 14454  011D98  0101               	movlb	1	; () banked
 14455  011D9A  6F87               	movwf	UARTstring@data& (0+255),b
 14456  011D9C  EC15  F0AE         	call	_UARTstring	;wreg free
 14457                           
 14458                           ;StringCommand.c: 612: UARTstring("Format is MM/DD/YY HH:MM:SS AM\r\n");
 14459  011DA0  0EF4               	movlw	high STR_219
 14460  011DA2  0101               	movlb	1	; () banked
 14461  011DA4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14462  011DA6  0EB1               	movlw	low STR_219
 14463  011DA8  0101               	movlb	1	; () banked
 14464  011DAA  6F87               	movwf	UARTstring@data& (0+255),b
 14465  011DAC  EC15  F0AE         	call	_UARTstring	;wreg free
 14466  011DB0  D34F               	goto	l555
 14467  011DB2                     l12170:
 14468                           
 14469                           ;StringCommand.c: 618: else
 14470                           ;StringCommand.c: 619: {
 14471                           ;StringCommand.c: 620: UARTstring("RTC What???\n");
 14472  011DB2  0EFD               	movlw	high STR_220
 14473  011DB4  0101               	movlb	1	; () banked
 14474  011DB6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14475  011DB8  0E40               	movlw	low STR_220
 14476  011DBA  0101               	movlb	1	; () banked
 14477  011DBC  6F87               	movwf	UARTstring@data& (0+255),b
 14478  011DBE  EC15  F0AE         	call	_UARTstring	;wreg free
 14479  011DC2  D346               	goto	l555
 14480  011DC4                     l12172:
 14481                           
 14482                           ;StringCommand.c: 623: else
 14483                           ;StringCommand.c: 624: {
 14484                           ;StringCommand.c: 625: UARTstring("Real Time Clock Help Menu\r\n\n");
 14485  011DC4  0EF5               	movlw	high STR_221
 14486  011DC6  0101               	movlb	1	; () banked
 14487  011DC8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14488  011DCA  0E90               	movlw	low STR_221
 14489  011DCC  0101               	movlb	1	; () banked
 14490  011DCE  6F87               	movwf	UARTstring@data& (0+255),b
 14491  011DD0  EC15  F0AE         	call	_UARTstring	;wreg free
 14492                           
 14493                           ;StringCommand.c: 626: UARTstring("Actions:\r\n");
 14494  011DD4  0EFD               	movlw	high STR_222
 14495  011DD6  0101               	movlb	1	; () banked
 14496  011DD8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14497  011DDA  0EFC               	movlw	low STR_222
 14498  011DDC  0101               	movlb	1	; () banked
 14499  011DDE  6F87               	movwf	UARTstring@data& (0+255),b
 14500  011DE0  EC15  F0AE         	call	_UARTstring	;wreg free
 14501                           
 14502                           ;StringCommand.c: 627: UARTstring("Battery\r\n");
 14503  011DE4  0EFE               	movlw	high STR_223
 14504  011DE6  0101               	movlb	1	; () banked
 14505  011DE8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14506  011DEA  0E47               	movlw	low STR_223
 14507  011DEC  0101               	movlb	1	; () banked
 14508  011DEE  6F87               	movwf	UARTstring@data& (0+255),b
 14509  011DF0  EC15  F0AE         	call	_UARTstring	;wreg free
 14510                           
 14511                           ;StringCommand.c: 628: UARTstring("Read\r\n");
 14512  011DF4  0EFF               	movlw	high STR_224
 14513  011DF6  0101               	movlb	1	; () banked
 14514  011DF8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14515  011DFA  0E7B               	movlw	low STR_224
 14516  011DFC  0101               	movlb	1	; () banked
 14517  011DFE  6F87               	movwf	UARTstring@data& (0+255),b
 14518  011E00  EC15  F0AE         	call	_UARTstring	;wreg free
 14519                           
 14520                           ;StringCommand.c: 629: UARTstring("Set\r\n\n");
 14521  011E04  0EFF               	movlw	high STR_225
 14522  011E06  0101               	movlb	1	; () banked
 14523  011E08  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14524  011E0A  0E6D               	movlw	low STR_225
 14525  011E0C  0101               	movlb	1	; () banked
 14526  011E0E  6F87               	movwf	UARTstring@data& (0+255),b
 14527  011E10  EC15  F0AE         	call	_UARTstring	;wreg free
 14528                           
 14529                           ;StringCommand.c: 630: UARTstring("To command the RTC, type the action\r\n followed by"
 14530                           ;StringCommand.c: 631: " the parameters \r\n\n");
 14531  011E14  0EF1               	movlw	high STR_226
 14532  011E16  0101               	movlb	1	; () banked
 14533  011E18  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14534  011E1A  0E1A               	movlw	low STR_226
 14535  011E1C  0101               	movlb	1	; () banked
 14536  011E1E  6F87               	movwf	UARTstring@data& (0+255),b
 14537  011E20  EC15  F0AE         	call	_UARTstring	;wreg free
 14538                           
 14539                           ;StringCommand.c: 632: UARTstring("further sub menus available by entering the action an
      +                          d a '?'");
 14540  011E24  0EF2               	movlw	high STR_227
 14541  011E26  0101               	movlb	1	; () banked
 14542  011E28  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14543  011E2A  0E23               	movlw	low STR_227
 14544  011E2C  0101               	movlb	1	; () banked
 14545  011E2E  6F87               	movwf	UARTstring@data& (0+255),b
 14546  011E30  EC15  F0AE         	call	_UARTstring	;wreg free
 14547                           
 14548                           ;StringCommand.c: 633: UARTstring("i.e. RTC Set Time?\r\n");
 14549  011E34  0EF8               	movlw	high STR_228
 14550  011E36  0101               	movlb	1	; () banked
 14551  011E38  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14552  011E3A  0E26               	movlw	low STR_228
 14553  011E3C  0101               	movlb	1	; () banked
 14554  011E3E  6F87               	movwf	UARTstring@data& (0+255),b
 14555  011E40  EC15  F0AE         	call	_UARTstring	;wreg free
 14556                           
 14557                           ;StringCommand.c: 634: LCD_Scroll("RTC Menu");
 14558  011E44  0EFE               	movlw	high STR_229
 14559  011E46  0101               	movlb	1	; () banked
 14560  011E48  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14561  011E4A  0EFC               	movlw	low STR_229
 14562  011E4C  0101               	movlb	1	; () banked
 14563  011E4E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14564  011E50  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 14565                           
 14566                           ;StringCommand.c: 635: LCD_Scroll("Commands:");
 14567  011E54  0EFE               	movlw	high STR_159
 14568  011E56  0101               	movlb	1	; () banked
 14569  011E58  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14570  011E5A  0E65               	movlw	low STR_159
 14571  011E5C  0101               	movlb	1	; () banked
 14572  011E5E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14573  011E60  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 14574                           
 14575                           ;StringCommand.c: 636: LCD_Scroll("Battery");
 14576  011E64  0EFF               	movlw	high STR_231
 14577  011E66  0101               	movlb	1	; () banked
 14578  011E68  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14579  011E6A  0E4F               	movlw	low STR_231
 14580  011E6C  0101               	movlb	1	; () banked
 14581  011E6E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14582  011E70  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 14583                           
 14584                           ;StringCommand.c: 637: LCD_Scroll("Read");
 14585  011E74  0EFF               	movlw	high STR_232
 14586  011E76  0101               	movlb	1	; () banked
 14587  011E78  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14588  011E7A  0ED7               	movlw	low STR_232
 14589  011E7C  0101               	movlb	1	; () banked
 14590  011E7E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14591  011E80  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 14592                           
 14593                           ;StringCommand.c: 638: LCD_Scroll("Set");
 14594  011E84  0EFF               	movlw	high STR_233
 14595  011E86  0101               	movlb	1	; () banked
 14596  011E88  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14597  011E8A  0EF5               	movlw	low STR_233
 14598  011E8C  0101               	movlb	1	; () banked
 14599  011E8E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14600  011E90  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 14601  011E94  D2DD               	goto	l555
 14602  011E96                     l12184:
 14603                           
 14604                           ;StringCommand.c: 643: else if (StartsWith(Input, "joe"))
 14605  011E96  0101               	movlb	1	; () banked
 14606  011E98  C1C2  F17D         	movff	Command@Input+1,StartsWith@This+1
 14607  011E9C  0101               	movlb	1	; () banked
 14608  011E9E  C1C1  F17C         	movff	Command@Input,StartsWith@This
 14609  011EA2  0EFF               	movlw	high STR_234
 14610  011EA4  0101               	movlb	1	; () banked
 14611  011EA6  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 14612  011EA8  0EE9               	movlw	low STR_234
 14613  011EAA  0101               	movlb	1	; () banked
 14614  011EAC  6F7E               	movwf	StartsWith@That& (0+255),b
 14615  011EAE  EC57  F0AF         	call	_StartsWith	;wreg free
 14616  011EB2  0900               	iorlw	0
 14617  011EB4  B4D8               	btfsc	status,2,c
 14618  011EB6  D14D               	goto	l12222
 14619                           
 14620                           ;StringCommand.c: 644: {
 14621                           ;StringCommand.c: 645: if (!StringContains(Input, "?"))
 14622  011EB8  0101               	movlb	1	; () banked
 14623  011EBA  C1C2  F17D         	movff	Command@Input+1,StringContains@This+1
 14624  011EBE  0101               	movlb	1	; () banked
 14625  011EC0  C1C1  F17C         	movff	Command@Input,StringContains@This
 14626  011EC4  0EFA               	movlw	high (STR_64+14)
 14627  011EC6  0101               	movlb	1	; () banked
 14628  011EC8  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14629  011ECA  0EA6               	movlw	low (STR_64+14)
 14630  011ECC  0101               	movlb	1	; () banked
 14631  011ECE  6F7E               	movwf	StringContains@That& (0+255),b
 14632  011ED0  ECD8  F0B1         	call	_StringContains	;wreg free
 14633  011ED4  0900               	iorlw	0
 14634  011ED6  A4D8               	btfss	status,2,c
 14635  011ED8  D0FB               	goto	l12214
 14636                           
 14637                           ;StringCommand.c: 646: {
 14638                           ;StringCommand.c: 647: if (StringMatch(Input, "joesroomlight=on"))
 14639  011EDA  0101               	movlb	1	; () banked
 14640  011EDC  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 14641  011EE0  0101               	movlb	1	; () banked
 14642  011EE2  C1C1  F17C         	movff	Command@Input,StringMatch@This
 14643  011EE6  0EFA               	movlw	high STR_236
 14644  011EE8  0101               	movlb	1	; () banked
 14645  011EEA  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 14646  011EEC  0E34               	movlw	low STR_236
 14647  011EEE  0101               	movlb	1	; () banked
 14648  011EF0  6F7E               	movwf	StringMatch@That& (0+255),b
 14649  011EF2  EC17  F0B2         	call	_StringMatch	;wreg free
 14650  011EF6  0900               	iorlw	0
 14651  011EF8  B4D8               	btfsc	status,2,c
 14652  011EFA  D064               	goto	l12200
 14653                           
 14654                           ;StringCommand.c: 648: {
 14655                           ;StringCommand.c: 649: INTCONbits.GIE = 0;
 14656  011EFC  9EF2               	bcf	intcon,7,c	;volatile
 14657                           
 14658                           ;StringCommand.c: 650: Send_Config2(0b00000001, SubLightON);
 14659  011EFE  0EF0               	movlw	high _SubLightON
 14660  011F00  0101               	movlb	1	; () banked
 14661  011F02  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14662  011F04  0E7D               	movlw	low _SubLightON
 14663  011F06  0101               	movlb	1	; () banked
 14664  011F08  6F87               	movwf	Send_Config2@data& (0+255),b
 14665  011F0A  0E01               	movlw	1
 14666  011F0C  EC52  F0B1         	call	_Send_Config2
 14667                           
 14668                           ;StringCommand.c: 651: Send_Config2(0b00000001, SubLightON);
 14669  011F10  0EF0               	movlw	high _SubLightON
 14670  011F12  0101               	movlb	1	; () banked
 14671  011F14  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14672  011F16  0E7D               	movlw	low _SubLightON
 14673  011F18  0101               	movlb	1	; () banked
 14674  011F1A  6F87               	movwf	Send_Config2@data& (0+255),b
 14675  011F1C  0E01               	movlw	1
 14676  011F1E  EC52  F0B1         	call	_Send_Config2
 14677                           
 14678                           ;StringCommand.c: 652: Send_Config2(0b00000001, SubLightON);
 14679  011F22  0EF0               	movlw	high _SubLightON
 14680  011F24  0101               	movlb	1	; () banked
 14681  011F26  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14682  011F28  0E7D               	movlw	low _SubLightON
 14683  011F2A  0101               	movlb	1	; () banked
 14684  011F2C  6F87               	movwf	Send_Config2@data& (0+255),b
 14685  011F2E  0E01               	movlw	1
 14686  011F30  EC52  F0B1         	call	_Send_Config2
 14687                           
 14688                           ;StringCommand.c: 653: Send_Config2(0b00000001, SubLightON);
 14689  011F34  0EF0               	movlw	high _SubLightON
 14690  011F36  0101               	movlb	1	; () banked
 14691  011F38  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14692  011F3A  0E7D               	movlw	low _SubLightON
 14693  011F3C  0101               	movlb	1	; () banked
 14694  011F3E  6F87               	movwf	Send_Config2@data& (0+255),b
 14695  011F40  0E01               	movlw	1
 14696  011F42  EC52  F0B1         	call	_Send_Config2
 14697                           
 14698                           ;StringCommand.c: 654: Send_Config2(0b00000001, SubLightON);
 14699  011F46  0EF0               	movlw	high _SubLightON
 14700  011F48  0101               	movlb	1	; () banked
 14701  011F4A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14702  011F4C  0E7D               	movlw	low _SubLightON
 14703  011F4E  0101               	movlb	1	; () banked
 14704  011F50  6F87               	movwf	Send_Config2@data& (0+255),b
 14705  011F52  0E01               	movlw	1
 14706  011F54  EC52  F0B1         	call	_Send_Config2
 14707                           
 14708                           ;StringCommand.c: 655: Send_Config2(0b00000001, SubLightON);
 14709  011F58  0EF0               	movlw	high _SubLightON
 14710  011F5A  0101               	movlb	1	; () banked
 14711  011F5C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14712  011F5E  0E7D               	movlw	low _SubLightON
 14713  011F60  0101               	movlb	1	; () banked
 14714  011F62  6F87               	movwf	Send_Config2@data& (0+255),b
 14715  011F64  0E01               	movlw	1
 14716  011F66  EC52  F0B1         	call	_Send_Config2
 14717                           
 14718                           ;StringCommand.c: 656: Send_Config2(0b00000001, SubLightON);
 14719  011F6A  0EF0               	movlw	high _SubLightON
 14720  011F6C  0101               	movlb	1	; () banked
 14721  011F6E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14722  011F70  0E7D               	movlw	low _SubLightON
 14723  011F72  0101               	movlb	1	; () banked
 14724  011F74  6F87               	movwf	Send_Config2@data& (0+255),b
 14725  011F76  0E01               	movlw	1
 14726  011F78  EC52  F0B1         	call	_Send_Config2
 14727                           
 14728                           ;StringCommand.c: 657: Send_Config2(0b00000001, SubLightON);
 14729  011F7C  0EF0               	movlw	high _SubLightON
 14730  011F7E  0101               	movlb	1	; () banked
 14731  011F80  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14732  011F82  0E7D               	movlw	low _SubLightON
 14733  011F84  0101               	movlb	1	; () banked
 14734  011F86  6F87               	movwf	Send_Config2@data& (0+255),b
 14735  011F88  0E01               	movlw	1
 14736  011F8A  EC52  F0B1         	call	_Send_Config2
 14737                           
 14738                           ;StringCommand.c: 658: Send_Config2(0b00000001, SubLightON);
 14739  011F8E  0EF0               	movlw	high _SubLightON
 14740  011F90  0101               	movlb	1	; () banked
 14741  011F92  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14742  011F94  0E7D               	movlw	low _SubLightON
 14743  011F96  0101               	movlb	1	; () banked
 14744  011F98  6F87               	movwf	Send_Config2@data& (0+255),b
 14745  011F9A  0E01               	movlw	1
 14746  011F9C  EC52  F0B1         	call	_Send_Config2
 14747                           
 14748                           ;StringCommand.c: 659: INTCONbits.GIE = 1;
 14749  011FA0  8EF2               	bsf	intcon,7,c	;volatile
 14750                           
 14751                           ;StringCommand.c: 660: UARTstring("Joe's room light On");
 14752  011FA2  0EF8               	movlw	high STR_237
 14753  011FA4  0101               	movlb	1	; () banked
 14754  011FA6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14755  011FA8  0E77               	movlw	low STR_237
 14756  011FAA  0101               	movlb	1	; () banked
 14757  011FAC  6F87               	movwf	UARTstring@data& (0+255),b
 14758  011FAE  EC15  F0AE         	call	_UARTstring	;wreg free
 14759                           
 14760                           ;StringCommand.c: 661: LCDdisplayFeedback("Joe room lt On");
 14761  011FB2  0EFC               	movlw	high STR_238
 14762  011FB4  0101               	movlb	1	; () banked
 14763  011FB6  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14764  011FB8  0E5E               	movlw	low STR_238
 14765  011FBA  0101               	movlb	1	; () banked
 14766  011FBC  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14767  011FBE  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 14768                           
 14769                           ;StringCommand.c: 662: }
 14770  011FC2  D246               	goto	l555
 14771  011FC4                     l12200:
 14772                           
 14773                           ;StringCommand.c: 663: else if (StringMatch(Input, "joesroomlight=off"))
 14774  011FC4  0101               	movlb	1	; () banked
 14775  011FC6  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 14776  011FCA  0101               	movlb	1	; () banked
 14777  011FCC  C1C1  F17C         	movff	Command@Input,StringMatch@This
 14778  011FD0  0EF9               	movlw	high STR_239
 14779  011FD2  0101               	movlb	1	; () banked
 14780  011FD4  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 14781  011FD6  0E32               	movlw	low STR_239
 14782  011FD8  0101               	movlb	1	; () banked
 14783  011FDA  6F7E               	movwf	StringMatch@That& (0+255),b
 14784  011FDC  EC17  F0B2         	call	_StringMatch	;wreg free
 14785  011FE0  0900               	iorlw	0
 14786  011FE2  B4D8               	btfsc	status,2,c
 14787  011FE4  D064               	goto	l12212
 14788                           
 14789                           ;StringCommand.c: 664: {
 14790                           ;StringCommand.c: 665: INTCONbits.GIE = 0;
 14791  011FE6  9EF2               	bcf	intcon,7,c	;volatile
 14792                           
 14793                           ;StringCommand.c: 666: Send_Config2(0b00000001, SubLightOFF);
 14794  011FE8  0EF0               	movlw	high _SubLightOFF
 14795  011FEA  0101               	movlb	1	; () banked
 14796  011FEC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14797  011FEE  0E6D               	movlw	low _SubLightOFF
 14798  011FF0  0101               	movlb	1	; () banked
 14799  011FF2  6F87               	movwf	Send_Config2@data& (0+255),b
 14800  011FF4  0E01               	movlw	1
 14801  011FF6  EC52  F0B1         	call	_Send_Config2
 14802                           
 14803                           ;StringCommand.c: 667: Send_Config2(0b00000001, SubLightOFF);
 14804  011FFA  0EF0               	movlw	high _SubLightOFF
 14805  011FFC  0101               	movlb	1	; () banked
 14806  011FFE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14807  012000  0E6D               	movlw	low _SubLightOFF
 14808  012002  0101               	movlb	1	; () banked
 14809  012004  6F87               	movwf	Send_Config2@data& (0+255),b
 14810  012006  0E01               	movlw	1
 14811  012008  EC52  F0B1         	call	_Send_Config2
 14812                           
 14813                           ;StringCommand.c: 668: Send_Config2(0b00000001, SubLightOFF);
 14814  01200C  0EF0               	movlw	high _SubLightOFF
 14815  01200E  0101               	movlb	1	; () banked
 14816  012010  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14817  012012  0E6D               	movlw	low _SubLightOFF
 14818  012014  0101               	movlb	1	; () banked
 14819  012016  6F87               	movwf	Send_Config2@data& (0+255),b
 14820  012018  0E01               	movlw	1
 14821  01201A  EC52  F0B1         	call	_Send_Config2
 14822                           
 14823                           ;StringCommand.c: 669: Send_Config2(0b00000001, SubLightOFF);
 14824  01201E  0EF0               	movlw	high _SubLightOFF
 14825  012020  0101               	movlb	1	; () banked
 14826  012022  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14827  012024  0E6D               	movlw	low _SubLightOFF
 14828  012026  0101               	movlb	1	; () banked
 14829  012028  6F87               	movwf	Send_Config2@data& (0+255),b
 14830  01202A  0E01               	movlw	1
 14831  01202C  EC52  F0B1         	call	_Send_Config2
 14832                           
 14833                           ;StringCommand.c: 670: Send_Config2(0b00000001, SubLightOFF);
 14834  012030  0EF0               	movlw	high _SubLightOFF
 14835  012032  0101               	movlb	1	; () banked
 14836  012034  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14837  012036  0E6D               	movlw	low _SubLightOFF
 14838  012038  0101               	movlb	1	; () banked
 14839  01203A  6F87               	movwf	Send_Config2@data& (0+255),b
 14840  01203C  0E01               	movlw	1
 14841  01203E  EC52  F0B1         	call	_Send_Config2
 14842                           
 14843                           ;StringCommand.c: 671: Send_Config2(0b00000001, SubLightOFF);
 14844  012042  0EF0               	movlw	high _SubLightOFF
 14845  012044  0101               	movlb	1	; () banked
 14846  012046  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14847  012048  0E6D               	movlw	low _SubLightOFF
 14848  01204A  0101               	movlb	1	; () banked
 14849  01204C  6F87               	movwf	Send_Config2@data& (0+255),b
 14850  01204E  0E01               	movlw	1
 14851  012050  EC52  F0B1         	call	_Send_Config2
 14852                           
 14853                           ;StringCommand.c: 672: Send_Config2(0b00000001, SubLightOFF);
 14854  012054  0EF0               	movlw	high _SubLightOFF
 14855  012056  0101               	movlb	1	; () banked
 14856  012058  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14857  01205A  0E6D               	movlw	low _SubLightOFF
 14858  01205C  0101               	movlb	1	; () banked
 14859  01205E  6F87               	movwf	Send_Config2@data& (0+255),b
 14860  012060  0E01               	movlw	1
 14861  012062  EC52  F0B1         	call	_Send_Config2
 14862                           
 14863                           ;StringCommand.c: 673: Send_Config2(0b00000001, SubLightOFF);
 14864  012066  0EF0               	movlw	high _SubLightOFF
 14865  012068  0101               	movlb	1	; () banked
 14866  01206A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14867  01206C  0E6D               	movlw	low _SubLightOFF
 14868  01206E  0101               	movlb	1	; () banked
 14869  012070  6F87               	movwf	Send_Config2@data& (0+255),b
 14870  012072  0E01               	movlw	1
 14871  012074  EC52  F0B1         	call	_Send_Config2
 14872                           
 14873                           ;StringCommand.c: 674: Send_Config2(0b00000001, SubLightOFF);
 14874  012078  0EF0               	movlw	high _SubLightOFF
 14875  01207A  0101               	movlb	1	; () banked
 14876  01207C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14877  01207E  0E6D               	movlw	low _SubLightOFF
 14878  012080  0101               	movlb	1	; () banked
 14879  012082  6F87               	movwf	Send_Config2@data& (0+255),b
 14880  012084  0E01               	movlw	1
 14881  012086  EC52  F0B1         	call	_Send_Config2
 14882                           
 14883                           ;StringCommand.c: 675: INTCONbits.GIE = 1;
 14884  01208A  8EF2               	bsf	intcon,7,c	;volatile
 14885                           
 14886                           ;StringCommand.c: 676: UARTstring("Joes room light Off");
 14887  01208C  0EF8               	movlw	high STR_240
 14888  01208E  0101               	movlb	1	; () banked
 14889  012090  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14890  012092  0E4F               	movlw	low STR_240
 14891  012094  0101               	movlb	1	; () banked
 14892  012096  6F87               	movwf	UARTstring@data& (0+255),b
 14893  012098  EC15  F0AE         	call	_UARTstring	;wreg free
 14894                           
 14895                           ;StringCommand.c: 677: LCDdisplayFeedback("Joe room lt Off");
 14896  01209C  0EFB               	movlw	high STR_241
 14897  01209E  0101               	movlb	1	; () banked
 14898  0120A0  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14899  0120A2  0E78               	movlw	low STR_241
 14900  0120A4  0101               	movlb	1	; () banked
 14901  0120A6  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14902  0120A8  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 14903                           
 14904                           ;StringCommand.c: 678: }
 14905  0120AC  D1D1               	goto	l555
 14906  0120AE                     l12212:
 14907                           
 14908                           ;StringCommand.c: 679: else
 14909                           ;StringCommand.c: 680: {
 14910                           ;StringCommand.c: 681: UARTstring("Joe's room what???");
 14911  0120AE  0EF8               	movlw	high STR_242
 14912  0120B0  0101               	movlb	1	; () banked
 14913  0120B2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14914  0120B4  0E9E               	movlw	low STR_242
 14915  0120B6  0101               	movlb	1	; () banked
 14916  0120B8  6F87               	movwf	UARTstring@data& (0+255),b
 14917  0120BA  EC15  F0AE         	call	_UARTstring	;wreg free
 14918                           
 14919                           ;StringCommand.c: 682: LCDdisplayFeedback("Joe room what??");
 14920  0120BE  0EFA               	movlw	high STR_243
 14921  0120C0  0101               	movlb	1	; () banked
 14922  0120C2  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14923  0120C4  0ED8               	movlw	low STR_243
 14924  0120C6  0101               	movlb	1	; () banked
 14925  0120C8  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14926  0120CA  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 14927  0120CE  D1C0               	goto	l555
 14928  0120D0                     l12214:
 14929                           
 14930                           ;StringCommand.c: 685: else
 14931                           ;StringCommand.c: 686: {
 14932                           ;StringCommand.c: 687: UARTstring("Joes Room Help Menu\r\n\n");
 14933  0120D0  0EF7               	movlw	high STR_244
 14934  0120D2  0101               	movlb	1	; () banked
 14935  0120D4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14936  0120D6  0E8A               	movlw	low STR_244
 14937  0120D8  0101               	movlb	1	; () banked
 14938  0120DA  6F87               	movwf	UARTstring@data& (0+255),b
 14939  0120DC  EC15  F0AE         	call	_UARTstring	;wreg free
 14940                           
 14941                           ;StringCommand.c: 688: UARTstring("Devices:\r\n");
 14942  0120E0  0EFD               	movlw	high STR_42
 14943  0120E2  0101               	movlb	1	; () banked
 14944  0120E4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14945  0120E6  0EF1               	movlw	low STR_42
 14946  0120E8  0101               	movlb	1	; () banked
 14947  0120EA  6F87               	movwf	UARTstring@data& (0+255),b
 14948  0120EC  EC15  F0AE         	call	_UARTstring	;wreg free
 14949                           
 14950                           ;StringCommand.c: 689: UARTstring("Light\r\n\n");
 14951  0120F0  0EFE               	movlw	high STR_246
 14952  0120F2  0101               	movlb	1	; () banked
 14953  0120F4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14954  0120F6  0EAB               	movlw	low STR_246
 14955  0120F8  0101               	movlb	1	; () banked
 14956  0120FA  6F87               	movwf	UARTstring@data& (0+255),b
 14957  0120FC  EC15  F0AE         	call	_UARTstring	;wreg free
 14958                           
 14959                           ;StringCommand.c: 690: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 14960  012100  0EF1               	movlw	high STR_45
 14961  012102  0101               	movlb	1	; () banked
 14962  012104  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14963  012106  0E5F               	movlw	low STR_45
 14964  012108  0101               	movlb	1	; () banked
 14965  01210A  6F87               	movwf	UARTstring@data& (0+255),b
 14966  01210C  EC15  F0AE         	call	_UARTstring	;wreg free
 14967                           
 14968                           ;StringCommand.c: 691: UARTstring("i.e. Joes room light = On\r\n");
 14969  012110  0EF6               	movlw	high STR_248
 14970  012112  0101               	movlb	1	; () banked
 14971  012114  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14972  012116  0E3B               	movlw	low STR_248
 14973  012118  0101               	movlb	1	; () banked
 14974  01211A  6F87               	movwf	UARTstring@data& (0+255),b
 14975  01211C  EC15  F0AE         	call	_UARTstring	;wreg free
 14976                           
 14977                           ;StringCommand.c: 692: LCD_Scroll("Joe room Menu");
 14978  012120  0EFC               	movlw	high STR_249
 14979  012122  0101               	movlb	1	; () banked
 14980  012124  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14981  012126  0EFC               	movlw	low STR_249
 14982  012128  0101               	movlb	1	; () banked
 14983  01212A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14984  01212C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 14985                           
 14986                           ;StringCommand.c: 693: LCD_Scroll("Devices:");
 14987  012130  0EFE               	movlw	high STR_48
 14988  012132  0101               	movlb	1	; () banked
 14989  012134  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14990  012136  0EB4               	movlw	low STR_48
 14991  012138  0101               	movlb	1	; () banked
 14992  01213A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14993  01213C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 14994                           
 14995                           ;StringCommand.c: 694: LCD_Scroll("Light");
 14996  012140  0EFF               	movlw	high STR_74
 14997  012142  0101               	movlb	1	; () banked
 14998  012144  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14999  012146  0EA8               	movlw	low STR_74
 15000  012148  0101               	movlb	1	; () banked
 15001  01214A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15002  01214C  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 15003  012150  D17F               	goto	l555
 15004  012152                     l12222:
 15005                           
 15006                           ;StringCommand.c: 698: else if (StringMatch(Input, "?"))
 15007  012152  0101               	movlb	1	; () banked
 15008  012154  C1C2  F17D         	movff	Command@Input+1,StringMatch@This+1
 15009  012158  0101               	movlb	1	; () banked
 15010  01215A  C1C1  F17C         	movff	Command@Input,StringMatch@This
 15011  01215E  0EFA               	movlw	high (STR_64+14)
 15012  012160  0101               	movlb	1	; () banked
 15013  012162  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 15014  012164  0EA6               	movlw	low (STR_64+14)
 15015  012166  0101               	movlb	1	; () banked
 15016  012168  6F7E               	movwf	StringMatch@That& (0+255),b
 15017  01216A  EC17  F0B2         	call	_StringMatch	;wreg free
 15018  01216E  0900               	iorlw	0
 15019  012170  B4D8               	btfsc	status,2,c
 15020  012172  D15E               	goto	l12272
 15021                           
 15022                           ;StringCommand.c: 699: {
 15023                           ;StringCommand.c: 700: UARTstring("Devices:\r\n\n");
 15024  012174  0EFD               	movlw	high STR_253
 15025  012176  0101               	movlb	1	; () banked
 15026  012178  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15027  01217A  0EB5               	movlw	low STR_253
 15028  01217C  0101               	movlb	1	; () banked
 15029  01217E  6F87               	movwf	UARTstring@data& (0+255),b
 15030  012180  EC15  F0AE         	call	_UARTstring	;wreg free
 15031                           
 15032                           ;StringCommand.c: 701: UARTstring("Bedroom\r\n");
 15033  012184  0EFE               	movlw	high STR_254
 15034  012186  0101               	movlb	1	; () banked
 15035  012188  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15036  01218A  0E3D               	movlw	low STR_254
 15037  01218C  0101               	movlb	1	; () banked
 15038  01218E  6F87               	movwf	UARTstring@data& (0+255),b
 15039  012190  EC15  F0AE         	call	_UARTstring	;wreg free
 15040                           
 15041                           ;StringCommand.c: 702: UARTstring("Livingroom\r\n");
 15042  012194  0EFD               	movlw	high STR_255
 15043  012196  0101               	movlb	1	; () banked
 15044  012198  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15045  01219A  0E33               	movlw	low STR_255
 15046  01219C  0101               	movlb	1	; () banked
 15047  01219E  6F87               	movwf	UARTstring@data& (0+255),b
 15048  0121A0  EC15  F0AE         	call	_UARTstring	;wreg free
 15049                           
 15050                           ;StringCommand.c: 703: UARTstring("Joes room\r\n");
 15051  0121A4  0EFD               	movlw	high STR_256
 15052  0121A6  0101               	movlb	1	; () banked
 15053  0121A8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15054  0121AA  0ECD               	movlw	low STR_256
 15055  0121AC  0101               	movlb	1	; () banked
 15056  0121AE  6F87               	movwf	UARTstring@data& (0+255),b
 15057  0121B0  EC15  F0AE         	call	_UARTstring	;wreg free
 15058                           
 15059                           ;StringCommand.c: 704: UARTstring("Christmas Tree\r\n");
 15060  0121B4  0EF9               	movlw	high STR_257
 15061  0121B6  0101               	movlb	1	; () banked
 15062  0121B8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15063  0121BA  0EBD               	movlw	low STR_257
 15064  0121BC  0101               	movlb	1	; () banked
 15065  0121BE  6F87               	movwf	UARTstring@data& (0+255),b
 15066  0121C0  EC15  F0AE         	call	_UARTstring	;wreg free
 15067                           
 15068                           ;StringCommand.c: 705: UARTstring("Contrast\r\n");
 15069  0121C4  0EFE               	movlw	high STR_258
 15070  0121C6  0101               	movlb	1	; () banked
 15071  0121C8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15072  0121CA  0E07               	movlw	low STR_258
 15073  0121CC  0101               	movlb	1	; () banked
 15074  0121CE  6F87               	movwf	UARTstring@data& (0+255),b
 15075  0121D0  EC15  F0AE         	call	_UARTstring	;wreg free
 15076                           
 15077                           ;StringCommand.c: 706: UARTstring("ADC\r\n");
 15078  0121D4  0EFF               	movlw	high STR_259
 15079  0121D6  0101               	movlb	1	; () banked
 15080  0121D8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15081  0121DA  0E90               	movlw	low STR_259
 15082  0121DC  0101               	movlb	1	; () banked
 15083  0121DE  6F87               	movwf	UARTstring@data& (0+255),b
 15084  0121E0  EC15  F0AE         	call	_UARTstring	;wreg free
 15085                           
 15086                           ;StringCommand.c: 707: UARTstring("RTC\r\n\n");
 15087  0121E4  0EFF               	movlw	high STR_260
 15088  0121E6  0101               	movlb	1	; () banked
 15089  0121E8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15090  0121EA  0E5F               	movlw	low STR_260
 15091  0121EC  0101               	movlb	1	; () banked
 15092  0121EE  6F87               	movwf	UARTstring@data& (0+255),b
 15093  0121F0  EC15  F0AE         	call	_UARTstring	;wreg free
 15094                           
 15095                           ;StringCommand.c: 708: UARTstring("For Device help enter device followed by a '?' \r\n")
      +                          ;
 15096  0121F4  0EF2               	movlw	high STR_261
 15097  0121F6  0101               	movlb	1	; () banked
 15098  0121F8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15099  0121FA  0E60               	movlw	low STR_261
 15100  0121FC  0101               	movlb	1	; () banked
 15101  0121FE  6F87               	movwf	UARTstring@data& (0+255),b
 15102  012200  EC15  F0AE         	call	_UARTstring	;wreg free
 15103                           
 15104                           ;StringCommand.c: 709: UARTstring("i.e.  Livingroom?\r\n\r\n");
 15105  012204  0EF7               	movlw	high STR_262
 15106  012206  0101               	movlb	1	; () banked
 15107  012208  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15108  01220A  0ECF               	movlw	low STR_262
 15109  01220C  0101               	movlb	1	; () banked
 15110  01220E  6F87               	movwf	UARTstring@data& (0+255),b
 15111  012210  EC15  F0AE         	call	_UARTstring	;wreg free
 15112                           
 15113                           ;StringCommand.c: 710: UARTstring("Current Time\r\n");
 15114  012214  0EFB               	movlw	high STR_263
 15115  012216  0101               	movlb	1	; () banked
 15116  012218  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15117  01221A  0EC8               	movlw	low STR_263
 15118  01221C  0101               	movlb	1	; () banked
 15119  01221E  6F87               	movwf	UARTstring@data& (0+255),b
 15120  012220  EC15  F0AE         	call	_UARTstring	;wreg free
 15121                           
 15122                           ;StringCommand.c: 711: SetLCDcursor(0, 0);
 15123  012224  0E00               	movlw	0
 15124  012226  0101               	movlb	1	; () banked
 15125  012228  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 15126  01222A  0E00               	movlw	0
 15127  01222C  EC01  F0B7         	call	_SetLCDcursor
 15128                           
 15129                           ;StringCommand.c: 712: LCDPrintString("Help Menu");
 15130  012230  0EFE               	movlw	high STR_264
 15131  012232  0101               	movlb	1	; () banked
 15132  012234  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15133  012236  0E8D               	movlw	low STR_264
 15134  012238  0101               	movlb	1	; () banked
 15135  01223A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 15136  01223C  EC55  F0B2         	call	_LCDPrintString	;wreg free
 15137                           
 15138                           ;StringCommand.c: 713: if(!READ_RTC_TIME())
 15139  012240  EC12  F0AA         	call	_READ_RTC_TIME	;wreg free
 15140  012244  0900               	iorlw	0
 15141  012246  A4D8               	btfss	status,2,c
 15142  012248  D0D0               	goto	l12264
 15143                           
 15144                           ;StringCommand.c: 714: {
 15145                           ;StringCommand.c: 715: SprintDate(buf, NowTime, 0);
 15146  01224A  0105               	movlb	5	; () banked
 15147  01224C  0E05               	movlw	high Command@buf
 15148  01224E  0101               	movlb	1	; () banked
 15149  012250  6FB0               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 15150  012252  0105               	movlb	5	; () banked
 15151  012254  0E00               	movlw	low Command@buf
 15152  012256  0101               	movlb	1	; () banked
 15153  012258  6FAF               	movwf	SprintDate@ReturnBuf& (0+255),b
 15154  01225A  EE21  F000         	lfsr	2,_NowTime
 15155  01225E  EE11  F0B1         	lfsr	1,SprintDate@DisplayTime
 15156  012262  0E09               	movlw	9
 15157  012264                     u15701:
 15158  012264  CFDE FFE6          	movff	postinc2,postinc1
 15159  012268  2EE8               	decfsz	wreg,f,c
 15160  01226A  D7FC               	goto	u15701
 15161  01226C  0E00               	movlw	0
 15162  01226E  0101               	movlb	1	; () banked
 15163  012270  6FBA               	movwf	SprintDate@Military& (0+255),b
 15164  012272  EC15  F0A8         	call	_SprintDate	;wreg free
 15165                           
 15166                           ;StringCommand.c: 716: UARTstring(buf);
 15167  012276  0105               	movlb	5	; () banked
 15168  012278  0E05               	movlw	high Command@buf
 15169  01227A  0101               	movlb	1	; () banked
 15170  01227C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15171  01227E  0105               	movlb	5	; () banked
 15172  012280  0E00               	movlw	low Command@buf
 15173  012282  0101               	movlb	1	; () banked
 15174  012284  6F87               	movwf	UARTstring@data& (0+255),b
 15175  012286  EC15  F0AE         	call	_UARTstring	;wreg free
 15176                           
 15177                           ;StringCommand.c: 717: UARTstring("\r\n");
 15178  01228A  0EF7               	movlw	high (STR_262+19)
 15179  01228C  0101               	movlb	1	; () banked
 15180  01228E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15181  012290  0EE2               	movlw	low (STR_262+19)
 15182  012292  0101               	movlb	1	; () banked
 15183  012294  6F87               	movwf	UARTstring@data& (0+255),b
 15184  012296  EC15  F0AE         	call	_UARTstring	;wreg free
 15185                           
 15186                           ;StringCommand.c: 719: if(NowTime.HoursAM_PM)
 15187  01229A  0101               	movlb	1	; () banked
 15188  01229C  5104               	movf	(_NowTime+4)& (0+255),w,b
 15189  01229E  B4D8               	btfsc	status,2,c
 15190  0122A0  D02A               	goto	l12242
 15191                           
 15192                           ; BSR set to: 1
 15193                           ;StringCommand.c: 720: {
 15194                           ;StringCommand.c: 721: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 15195  0122A2  0105               	movlb	5	; () banked
 15196  0122A4  0E05               	movlw	high Command@buf
 15197  0122A6  0101               	movlb	1	; () banked
 15198  0122A8  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 15199  0122AA  0105               	movlb	5	; () banked
 15200  0122AC  0E00               	movlw	low Command@buf
 15201  0122AE  0101               	movlb	1	; () banked
 15202  0122B0  6F88               	movwf	sprintf@sp& (0+255),b
 15203  0122B2  0EF7               	movlw	high STR_207
 15204  0122B4  0101               	movlb	1	; () banked
 15205  0122B6  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 15206  0122B8  0EB8               	movlw	low STR_207
 15207  0122BA  0101               	movlb	1	; () banked
 15208  0122BC  6F8A               	movwf	sprintf@f& (0+255),b
 15209  0122BE  0101               	movlb	1	; () banked
 15210  0122C0  C107  F18C         	movff	_NowTime+7,?_sprintf+4
 15211  0122C4  0101               	movlb	1	; () banked
 15212  0122C6  6B8D               	clrf	(?_sprintf+5)& (0+255),b
 15213  0122C8  0101               	movlb	1	; () banked
 15214  0122CA  C106  F18E         	movff	_NowTime+6,?_sprintf+6
 15215  0122CE  0101               	movlb	1	; () banked
 15216  0122D0  6B8F               	clrf	(?_sprintf+7)& (0+255),b
 15217  0122D2  0101               	movlb	1	; () banked
 15218  0122D4  C102  F190         	movff	_NowTime+2,?_sprintf+8
 15219  0122D8  0101               	movlb	1	; () banked
 15220  0122DA  6B91               	clrf	(?_sprintf+9)& (0+255),b
 15221  0122DC  0101               	movlb	1	; () banked
 15222  0122DE  C101  F192         	movff	_NowTime+1,?_sprintf+10
 15223  0122E2  0101               	movlb	1	; () banked
 15224  0122E4  6B93               	clrf	(?_sprintf+11)& (0+255),b
 15225  0122E6  0101               	movlb	1	; () banked
 15226  0122E8  C100  F194         	movff	_NowTime,?_sprintf+12
 15227  0122EC  0101               	movlb	1	; () banked
 15228  0122EE  6B95               	clrf	(?_sprintf+13)& (0+255),b
 15229  0122F0  EC31  F092         	call	_sprintf	;wreg free
 15230                           
 15231                           ;StringCommand.c: 722: }
 15232  0122F4  D029               	goto	l12244
 15233  0122F6                     l12242:
 15234                           
 15235                           ;StringCommand.c: 723: else
 15236                           ;StringCommand.c: 724: {
 15237                           ;StringCommand.c: 725: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 15238  0122F6  0105               	movlb	5	; () banked
 15239  0122F8  0E05               	movlw	high Command@buf
 15240  0122FA  0101               	movlb	1	; () banked
 15241  0122FC  6F89               	movwf	(sprintf@sp+1)& (0+255),b
 15242  0122FE  0105               	movlb	5	; () banked
 15243  012300  0E00               	movlw	low Command@buf
 15244  012302  0101               	movlb	1	; () banked
 15245  012304  6F88               	movwf	sprintf@sp& (0+255),b
 15246  012306  0EF7               	movlw	high STR_208
 15247  012308  0101               	movlb	1	; () banked
 15248  01230A  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 15249  01230C  0EA1               	movlw	low STR_208
 15250  01230E  0101               	movlb	1	; () banked
 15251  012310  6F8A               	movwf	sprintf@f& (0+255),b
 15252  012312  0101               	movlb	1	; () banked
 15253  012314  C107  F18C         	movff	_NowTime+7,?_sprintf+4
 15254  012318  0101               	movlb	1	; () banked
 15255  01231A  6B8D               	clrf	(?_sprintf+5)& (0+255),b
 15256  01231C  0101               	movlb	1	; () banked
 15257  01231E  C106  F18E         	movff	_NowTime+6,?_sprintf+6
 15258  012322  0101               	movlb	1	; () banked
 15259  012324  6B8F               	clrf	(?_sprintf+7)& (0+255),b
 15260  012326  0101               	movlb	1	; () banked
 15261  012328  C102  F190         	movff	_NowTime+2,?_sprintf+8
 15262  01232C  0101               	movlb	1	; () banked
 15263  01232E  6B91               	clrf	(?_sprintf+9)& (0+255),b
 15264  012330  0101               	movlb	1	; () banked
 15265  012332  C101  F192         	movff	_NowTime+1,?_sprintf+10
 15266  012336  0101               	movlb	1	; () banked
 15267  012338  6B93               	clrf	(?_sprintf+11)& (0+255),b
 15268  01233A  0101               	movlb	1	; () banked
 15269  01233C  C100  F194         	movff	_NowTime,?_sprintf+12
 15270  012340  0101               	movlb	1	; () banked
 15271  012342  6B95               	clrf	(?_sprintf+13)& (0+255),b
 15272  012344  EC31  F092         	call	_sprintf	;wreg free
 15273  012348                     l12244:
 15274                           
 15275                           ;StringCommand.c: 726: }
 15276                           ;StringCommand.c: 727: SetLCDcursor(1, 0);
 15277  012348  0E00               	movlw	0
 15278  01234A  0101               	movlb	1	; () banked
 15279  01234C  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 15280  01234E  0E01               	movlw	1
 15281  012350  EC01  F0B7         	call	_SetLCDcursor
 15282                           
 15283                           ;StringCommand.c: 728: LCDPrintString(buf);
 15284  012354  0105               	movlb	5	; () banked
 15285  012356  0E05               	movlw	high Command@buf
 15286  012358  0101               	movlb	1	; () banked
 15287  01235A  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15288  01235C  0105               	movlb	5	; () banked
 15289  01235E  0E00               	movlw	low Command@buf
 15290  012360  0101               	movlb	1	; () banked
 15291  012362  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 15292  012364  EC55  F0B2         	call	_LCDPrintString	;wreg free
 15293                           
 15294                           ;StringCommand.c: 729: LCD_Scroll("Device Menus:");
 15295  012368  0EFC               	movlw	high STR_268
 15296  01236A  0101               	movlb	1	; () banked
 15297  01236C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15298  01236E  0EB6               	movlw	low STR_268
 15299  012370  0101               	movlb	1	; () banked
 15300  012372  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15301  012374  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 15302                           
 15303                           ;StringCommand.c: 730: LCD_Scroll("Bedroom?");
 15304  012378  0EFE               	movlw	high STR_269
 15305  01237A  0101               	movlb	1	; () banked
 15306  01237C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15307  01237E  0EBD               	movlw	low STR_269
 15308  012380  0101               	movlb	1	; () banked
 15309  012382  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15310  012384  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 15311                           
 15312                           ;StringCommand.c: 731: LCD_Scroll("Livingroom?");
 15313  012388  0EFD               	movlw	high STR_270
 15314  01238A  0101               	movlb	1	; () banked
 15315  01238C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15316  01238E  0ED9               	movlw	low STR_270
 15317  012390  0101               	movlb	1	; () banked
 15318  012392  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15319  012394  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 15320                           
 15321                           ;StringCommand.c: 732: LCD_Scroll("Joes Room?");
 15322  012398  0EFE               	movlw	high STR_271
 15323  01239A  0101               	movlb	1	; () banked
 15324  01239C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15325  01239E  0E12               	movlw	low STR_271
 15326  0123A0  0101               	movlb	1	; () banked
 15327  0123A2  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15328  0123A4  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 15329                           
 15330                           ;StringCommand.c: 733: LCD_Scroll("Christmas Tree?");
 15331  0123A8  0EFA               	movlw	high STR_272
 15332  0123AA  0101               	movlb	1	; () banked
 15333  0123AC  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15334  0123AE  0EE8               	movlw	low STR_272
 15335  0123B0  0101               	movlb	1	; () banked
 15336  0123B2  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15337  0123B4  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 15338                           
 15339                           ;StringCommand.c: 734: LCD_Scroll("Contrast?");
 15340  0123B8  0EFE               	movlw	high STR_273
 15341  0123BA  0101               	movlb	1	; () banked
 15342  0123BC  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15343  0123BE  0E6F               	movlw	low STR_273
 15344  0123C0  0101               	movlb	1	; () banked
 15345  0123C2  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15346  0123C4  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 15347                           
 15348                           ;StringCommand.c: 735: LCD_Scroll("ADC?");
 15349  0123C8  0EFF               	movlw	high STR_274
 15350  0123CA  0101               	movlb	1	; () banked
 15351  0123CC  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15352  0123CE  0ECD               	movlw	low STR_274
 15353  0123D0  0101               	movlb	1	; () banked
 15354  0123D2  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15355  0123D4  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 15356                           
 15357                           ;StringCommand.c: 736: LCD_Scroll("RTC?");
 15358  0123D8  0EFF               	movlw	high STR_275
 15359  0123DA  0101               	movlb	1	; () banked
 15360  0123DC  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15361  0123DE  0ED2               	movlw	low STR_275
 15362  0123E0  0101               	movlb	1	; () banked
 15363  0123E2  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15364  0123E4  EC47  F0A0         	call	_LCD_Scroll	;wreg free
 15365                           
 15366                           ;StringCommand.c: 737: }
 15367  0123E8  D016               	goto	l12270
 15368  0123EA                     l12264:
 15369                           
 15370                           ;StringCommand.c: 738: else
 15371                           ;StringCommand.c: 739: {
 15372                           ;StringCommand.c: 740: UARTstring("ERROR: Can't Read RTC\r\n");
 15373  0123EA  0EF7               	movlw	high STR_209
 15374  0123EC  0101               	movlb	1	; () banked
 15375  0123EE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15376  0123F0  0E5A               	movlw	low STR_209
 15377  0123F2  0101               	movlb	1	; () banked
 15378  0123F4  6F87               	movwf	UARTstring@data& (0+255),b
 15379  0123F6  EC15  F0AE         	call	_UARTstring	;wreg free
 15380                           
 15381                           ;StringCommand.c: 741: SetLCDcursor(1, 0);
 15382  0123FA  0E00               	movlw	0
 15383  0123FC  0101               	movlb	1	; () banked
 15384  0123FE  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 15385  012400  0E01               	movlw	1
 15386  012402  EC01  F0B7         	call	_SetLCDcursor
 15387                           
 15388                           ;StringCommand.c: 742: LCDPrintString("RTC isnt working");
 15389  012406  0EFA               	movlw	high STR_210
 15390  012408  0101               	movlb	1	; () banked
 15391  01240A  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15392  01240C  0E01               	movlw	low STR_210
 15393  01240E  0101               	movlb	1	; () banked
 15394  012410  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 15395  012412  EC55  F0B2         	call	_LCDPrintString	;wreg free
 15396  012416                     l12270:
 15397                           
 15398                           ;StringCommand.c: 743: }
 15399                           ;StringCommand.c: 744: LCDclearCount =0;
 15400  012416  0E00               	movlw	0
 15401  012418  0101               	movlb	1	; () banked
 15402  01241A  6FCD               	movwf	_LCDclearCount& (0+255),b
 15403  01241C  0E00               	movlw	0
 15404  01241E  0101               	movlb	1	; () banked
 15405  012420  6FCE               	movwf	(_LCDclearCount+1)& (0+255),b
 15406  012422  0E00               	movlw	0
 15407  012424  0101               	movlb	1	; () banked
 15408  012426  6FCF               	movwf	(_LCDclearCount+2)& (0+255),b
 15409  012428  0E00               	movlw	0
 15410  01242A  0101               	movlb	1	; () banked
 15411  01242C  6FD0               	movwf	(_LCDclearCount+3)& (0+255),b
 15412                           
 15413                           ;StringCommand.c: 745: }
 15414  01242E  D010               	goto	l555
 15415  012430                     l12272:
 15416                           
 15417                           ;StringCommand.c: 747: else
 15418                           ;StringCommand.c: 748: {
 15419                           ;StringCommand.c: 749: UARTstring("Invalid Command");
 15420  012430  0EFB               	movlw	high STR_278
 15421  012432  0101               	movlb	1	; () banked
 15422  012434  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15423  012436  0E38               	movlw	low STR_278
 15424  012438  0101               	movlb	1	; () banked
 15425  01243A  6F87               	movwf	UARTstring@data& (0+255),b
 15426  01243C  EC15  F0AE         	call	_UARTstring	;wreg free
 15427                           
 15428                           ;StringCommand.c: 750: LCDdisplayFeedback("Invalid Command");
 15429  012440  0EFB               	movlw	high STR_278
 15430  012442  0101               	movlb	1	; () banked
 15431  012444  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15432  012446  0E38               	movlw	low STR_278
 15433  012448  0101               	movlb	1	; () banked
 15434  01244A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15435  01244C  EC89  F0B6         	call	_LCDdisplayFeedback	;wreg free
 15436  012450                     l555:
 15437                           
 15438                           ;StringCommand.c: 751: }
 15439                           ;StringCommand.c: 753: UARTstring("\r\n\r\n");
 15440  012450  0EF7               	movlw	high (STR_262+17)
 15441  012452  0101               	movlb	1	; () banked
 15442  012454  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15443  012456  0EE0               	movlw	low (STR_262+17)
 15444  012458  0101               	movlb	1	; () banked
 15445  01245A  6F87               	movwf	UARTstring@data& (0+255),b
 15446  01245C  EC15  F0AE         	call	_UARTstring	;wreg free
 15447  012460  0012               	return	
 15448  012462                     __end_of_Command:
 15449                           	opt stack 0
 15450                           tblptru	equ	0xFF8
 15451                           tblptrh	equ	0xFF7
 15452                           tblptrl	equ	0xFF6
 15453                           tablat	equ	0xFF5
 15454                           prodl	equ	0xFF3
 15455                           intcon	equ	0xFF2
 15456                           postinc0	equ	0xFEE
 15457                           wreg	equ	0xFE8
 15458                           postinc1	equ	0xFE6
 15459                           postdec1	equ	0xFE5
 15460                           fsr1l	equ	0xFE1
 15461                           indf2	equ	0xFDF
 15462                           postinc2	equ	0xFDE
 15463                           fsr2h	equ	0xFDA
 15464                           fsr2l	equ	0xFD9
 15465                           status	equ	0xFD8
 15466                           
 15467 ;; *************** function _lowercase *****************
 15468 ;; Defined at:
 15469 ;;		line 293 in file "MISC.c"
 15470 ;; Parameters:    Size  Location     Type
 15471 ;;  Input           2   14[BANK1 ] PTR unsigned char 
 15472 ;;		 -> Rxdata(100), 
 15473 ;; Auto vars:     Size  Location     Type
 15474 ;;  i               1   17[BANK1 ] unsigned char 
 15475 ;; Return value:  Size  Location     Type
 15476 ;;		None               void
 15477 ;; Registers used:
 15478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15479 ;; Tracked objects:
 15480 ;;		On entry : 0/0
 15481 ;;		On exit  : 0/0
 15482 ;;		Unchanged: 0/0
 15483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15484 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 15485 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15486 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15487 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15488 ;;Total ram usage:        4 bytes
 15489 ;; Hardware stack levels used:    1
 15490 ;; Hardware stack levels required when called:    6
 15491 ;; This function calls:
 15492 ;;		Nothing
 15493 ;; This function is called by:
 15494 ;;		_Command
 15495 ;; This function uses a non-reentrant model
 15496 ;;
 15497                           
 15498                           	psect	text21
 15499  01618A                     __ptext21:
 15500                           	opt stack 0
 15501  01618A                     _lowercase:
 15502                           	opt stack 23
 15503                           
 15504                           ;MISC.c: 295: unsigned char i =0;
 15505                           
 15506                           ;incstack = 0
 15507  01618A  0E00               	movlw	0
 15508  01618C  0101               	movlb	1	; () banked
 15509  01618E  6F7F               	movwf	lowercase@i& (0+255),b
 15510                           
 15511                           ;MISC.c: 296: while((Input[i]!= 0) && (i < 100))
 15512  016190  D030               	goto	l10760
 15513  016192                     l10752:
 15514                           
 15515                           ; BSR set to: 1
 15516                           ;MISC.c: 297: {
 15517                           ;MISC.c: 298: if((Input[i] >= 65) && (Input[i] <= 90 ))
 15518  016192  0101               	movlb	1	; () banked
 15519  016194  517F               	movf	lowercase@i& (0+255),w,b
 15520  016196  0D01               	mullw	1
 15521  016198  50F3               	movf	prodl,w,c
 15522  01619A  0101               	movlb	1	; () banked
 15523  01619C  257C               	addwf	lowercase@Input& (0+255),w,b
 15524  01619E  6ED9               	movwf	fsr2l,c
 15525  0161A0  50F4               	movf	prodh,w,c
 15526  0161A2  0101               	movlb	1	; () banked
 15527  0161A4  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 15528  0161A6  6EDA               	movwf	fsr2h,c
 15529  0161A8  0E40               	movlw	64
 15530  0161AA  64DF               	cpfsgt	indf2,c
 15531  0161AC  D020               	goto	l10758
 15532                           
 15533                           ; BSR set to: 1
 15534  0161AE  0101               	movlb	1	; () banked
 15535  0161B0  517F               	movf	lowercase@i& (0+255),w,b
 15536  0161B2  0D01               	mullw	1
 15537  0161B4  50F3               	movf	prodl,w,c
 15538  0161B6  0101               	movlb	1	; () banked
 15539  0161B8  257C               	addwf	lowercase@Input& (0+255),w,b
 15540  0161BA  6ED9               	movwf	fsr2l,c
 15541  0161BC  50F4               	movf	prodh,w,c
 15542  0161BE  0101               	movlb	1	; () banked
 15543  0161C0  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 15544  0161C2  6EDA               	movwf	fsr2h,c
 15545  0161C4  50DF               	movf	indf2,w,c
 15546  0161C6  0101               	movlb	1	; () banked
 15547  0161C8  6F7E               	movwf	??_lowercase& (0+255),b
 15548  0161CA  0E5B               	movlw	91
 15549  0161CC  0101               	movlb	1	; () banked
 15550  0161CE  5D7E               	subwf	??_lowercase& (0+255),w,b
 15551  0161D0  B0D8               	btfsc	status,0,c
 15552  0161D2  D00D               	goto	l10758
 15553                           
 15554                           ; BSR set to: 1
 15555                           ;MISC.c: 299: {
 15556                           ;MISC.c: 300: Input[i] += 32;
 15557  0161D4  0101               	movlb	1	; () banked
 15558  0161D6  517F               	movf	lowercase@i& (0+255),w,b
 15559  0161D8  0D01               	mullw	1
 15560  0161DA  50F3               	movf	prodl,w,c
 15561  0161DC  0101               	movlb	1	; () banked
 15562  0161DE  257C               	addwf	lowercase@Input& (0+255),w,b
 15563  0161E0  6ED9               	movwf	fsr2l,c
 15564  0161E2  50F4               	movf	prodh,w,c
 15565  0161E4  0101               	movlb	1	; () banked
 15566  0161E6  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 15567  0161E8  6EDA               	movwf	fsr2h,c
 15568  0161EA  0E20               	movlw	32
 15569  0161EC  26DF               	addwf	indf2,f,c
 15570  0161EE                     l10758:
 15571                           
 15572                           ; BSR set to: 1
 15573                           ;MISC.c: 301: }
 15574                           ;MISC.c: 302: i++;
 15575  0161EE  0101               	movlb	1	; () banked
 15576  0161F0  2B7F               	incf	lowercase@i& (0+255),f,b
 15577  0161F2                     l10760:
 15578                           
 15579                           ; BSR set to: 1
 15580  0161F2  0101               	movlb	1	; () banked
 15581  0161F4  517F               	movf	lowercase@i& (0+255),w,b
 15582  0161F6  0D01               	mullw	1
 15583  0161F8  50F3               	movf	prodl,w,c
 15584  0161FA  0101               	movlb	1	; () banked
 15585  0161FC  257C               	addwf	lowercase@Input& (0+255),w,b
 15586  0161FE  6ED9               	movwf	fsr2l,c
 15587  016200  50F4               	movf	prodh,w,c
 15588  016202  0101               	movlb	1	; () banked
 15589  016204  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 15590  016206  6EDA               	movwf	fsr2h,c
 15591  016208  50DF               	movf	indf2,w,c
 15592  01620A  B4D8               	btfsc	status,2,c
 15593  01620C  0012               	return	
 15594                           
 15595                           ; BSR set to: 1
 15596  01620E  0E63               	movlw	99
 15597  016210  0101               	movlb	1	; () banked
 15598  016212  657F               	cpfsgt	lowercase@i& (0+255),b
 15599  016214  D7BE               	goto	l10752
 15600  016216  0012               	return	
 15601  016218                     __end_of_lowercase:
 15602                           	opt stack 0
 15603                           tblptru	equ	0xFF8
 15604                           tblptrh	equ	0xFF7
 15605                           tblptrl	equ	0xFF6
 15606                           tablat	equ	0xFF5
 15607                           prodh	equ	0xFF4
 15608                           prodl	equ	0xFF3
 15609                           intcon	equ	0xFF2
 15610                           postinc0	equ	0xFEE
 15611                           wreg	equ	0xFE8
 15612                           postinc1	equ	0xFE6
 15613                           postdec1	equ	0xFE5
 15614                           fsr1l	equ	0xFE1
 15615                           indf2	equ	0xFDF
 15616                           postinc2	equ	0xFDE
 15617                           fsr2h	equ	0xFDA
 15618                           fsr2l	equ	0xFD9
 15619                           status	equ	0xFD8
 15620                           
 15621 ;; *************** function ___lwtoft *****************
 15622 ;; Defined at:
 15623 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 15624 ;; Parameters:    Size  Location     Type
 15625 ;;  c               2   22[BANK1 ] unsigned int 
 15626 ;; Auto vars:     Size  Location     Type
 15627 ;;		None
 15628 ;; Return value:  Size  Location     Type
 15629 ;;                  3   22[BANK1 ] float 
 15630 ;; Registers used:
 15631 ;;		wreg, status,2, status,0, cstack
 15632 ;; Tracked objects:
 15633 ;;		On entry : 0/0
 15634 ;;		On exit  : 0/0
 15635 ;;		Unchanged: 0/0
 15636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15637 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15640 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 15641 ;;Total ram usage:        3 bytes
 15642 ;; Hardware stack levels used:    1
 15643 ;; Hardware stack levels required when called:    7
 15644 ;; This function calls:
 15645 ;;		___ftpack
 15646 ;; This function is called by:
 15647 ;;		_Command
 15648 ;; This function uses a non-reentrant model
 15649 ;;
 15650                           
 15651                           	psect	text22
 15652  016EC8                     __ptext22:
 15653                           	opt stack 0
 15654  016EC8                     ___lwtoft:
 15655                           	opt stack 22
 15656                           
 15657                           ; BSR set to: 1
 15658                           ;incstack = 0
 15659  016EC8  0101               	movlb	1	; () banked
 15660  016ECA  C184  F17C         	movff	___lwtoft@c,___ftpack@arg
 15661  016ECE  0101               	movlb	1	; () banked
 15662  016ED0  C185  F17D         	movff	___lwtoft@c+1,___ftpack@arg+1
 15663  016ED4  0101               	movlb	1	; () banked
 15664  016ED6  6B7E               	clrf	(___ftpack@arg+2)& (0+255),b
 15665  016ED8  0E8E               	movlw	142
 15666  016EDA  0101               	movlb	1	; () banked
 15667  016EDC  6F7F               	movwf	___ftpack@exp& (0+255),b
 15668  016EDE  0E00               	movlw	0
 15669  016EE0  0101               	movlb	1	; () banked
 15670  016EE2  6F80               	movwf	___ftpack@sign& (0+255),b
 15671  016EE4  ECA2  F0A8         	call	___ftpack	;wreg free
 15672  016EE8  C17C  F184         	movff	?___ftpack,?___lwtoft
 15673  016EEC  C17D  F185         	movff	?___ftpack+1,?___lwtoft+1
 15674  016EF0  C17E  F186         	movff	?___ftpack+2,?___lwtoft+2
 15675  016EF4  0012               	return	
 15676  016EF6                     __end_of___lwtoft:
 15677                           	opt stack 0
 15678                           tblptru	equ	0xFF8
 15679                           tblptrh	equ	0xFF7
 15680                           tblptrl	equ	0xFF6
 15681                           tablat	equ	0xFF5
 15682                           prodh	equ	0xFF4
 15683                           prodl	equ	0xFF3
 15684                           intcon	equ	0xFF2
 15685                           postinc0	equ	0xFEE
 15686                           wreg	equ	0xFE8
 15687                           postinc1	equ	0xFE6
 15688                           postdec1	equ	0xFE5
 15689                           fsr1l	equ	0xFE1
 15690                           indf2	equ	0xFDF
 15691                           postinc2	equ	0xFDE
 15692                           fsr2h	equ	0xFDA
 15693                           fsr2l	equ	0xFD9
 15694                           status	equ	0xFD8
 15695                           
 15696 ;; *************** function _StringMatch *****************
 15697 ;; Defined at:
 15698 ;;		line 110 in file "MISC.c"
 15699 ;; Parameters:    Size  Location     Type
 15700 ;;  This            2   14[BANK1 ] PTR unsigned char 
 15701 ;;		 -> Rxdata(100), 
 15702 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 15703 ;;		 -> STR_252(2), STR_239(18), STR_236(17), STR_93(18), 
 15704 ;;		 -> STR_90(17), STR_87(15), STR_84(14), STR_81(17), 
 15705 ;;		 -> STR_80(16), STR_60(18), STR_57(17), STR_54(20), 
 15706 ;;		 -> STR_53(19), STR_36(9), STR_33(8), STR_30(5), 
 15707 ;;		 -> STR_27(9), STR_24(8), STR_21(5), 
 15708 ;; Auto vars:     Size  Location     Type
 15709 ;;		None
 15710 ;; Return value:  Size  Location     Type
 15711 ;;                  1    wreg      unsigned char 
 15712 ;; Registers used:
 15713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15714 ;; Tracked objects:
 15715 ;;		On entry : 0/0
 15716 ;;		On exit  : 0/0
 15717 ;;		Unchanged: 0/0
 15718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15719 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15723 ;;Total ram usage:        4 bytes
 15724 ;; Hardware stack levels used:    1
 15725 ;; Hardware stack levels required when called:    6
 15726 ;; This function calls:
 15727 ;;		Nothing
 15728 ;; This function is called by:
 15729 ;;		_Command
 15730 ;; This function uses a non-reentrant model
 15731 ;;
 15732                           
 15733                           	psect	text23
 15734  01642E                     __ptext23:
 15735                           	opt stack 0
 15736  01642E                     _StringMatch:
 15737                           	opt stack 23
 15738                           
 15739                           ;MISC.c: 112: while(*This != 0)
 15740                           
 15741                           ;incstack = 0
 15742  01642E  D025               	goto	l10586
 15743  016430                     l10576:
 15744                           
 15745                           ;MISC.c: 113: {
 15746                           ;MISC.c: 114: if(*This != *That || *That == 0)
 15747  016430  0101               	movlb	1	; () banked
 15748  016432  C17E  FFF6         	movff	StringMatch@That,tblptrl
 15749  016436  0101               	movlb	1	; () banked
 15750  016438  C17F  FFF7         	movff	StringMatch@That+1,tblptrh
 15751  01643C                     	if	0	;tblptru may be non-zero
 15752  01643C                     	endif
 15753  01643C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15754  01643C  0E00               	movlw	low (__mediumconst shr (0+16))
 15755  01643E  6EF8               	movwf	tblptru,c
 15756  016440                     	endif
 15757  016440  0008               	tblrd		*
 15758  016442  50F5               	movf	tablat,w,c
 15759  016444  C17C  FFD9         	movff	StringMatch@This,fsr2l
 15760  016448  C17D  FFDA         	movff	StringMatch@This+1,fsr2h
 15761  01644C  62DF               	cpfseq	indf2,c
 15762  01644E  D00D               	goto	l10580
 15763                           
 15764                           ; BSR set to: 1
 15765  016450  0101               	movlb	1	; () banked
 15766  016452  C17E  FFF6         	movff	StringMatch@That,tblptrl
 15767  016456  0101               	movlb	1	; () banked
 15768  016458  C17F  FFF7         	movff	StringMatch@That+1,tblptrh
 15769  01645C                     	if	0	;tblptru may be non-zero
 15770  01645C                     	endif
 15771  01645C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15772  01645C  0E00               	movlw	low (__mediumconst shr (0+16))
 15773  01645E  6EF8               	movwf	tblptru,c
 15774  016460                     	endif
 15775  016460  0008               	tblrd		*
 15776  016462  50F5               	movf	tablat,w,c
 15777  016464  0900               	iorlw	0
 15778  016466  A4D8               	btfss	status,2,c
 15779  016468  D002               	goto	l10584
 15780  01646A                     l10580:
 15781                           
 15782                           ; BSR set to: 1
 15783                           ;MISC.c: 115: {
 15784                           ;MISC.c: 116: return 0;
 15785  01646A  0E00               	movlw	0
 15786  01646C  0012               	return	
 15787  01646E                     l10584:
 15788                           
 15789                           ; BSR set to: 1
 15790                           ;MISC.c: 117: }
 15791                           ;MISC.c: 118: This++;
 15792  01646E  0101               	movlb	1	; () banked
 15793  016470  4B7C               	infsnz	StringMatch@This& (0+255),f,b
 15794  016472  2B7D               	incf	(StringMatch@This+1)& (0+255),f,b
 15795                           
 15796                           ;MISC.c: 119: That++;
 15797  016474  0101               	movlb	1	; () banked
 15798  016476  4B7E               	infsnz	StringMatch@That& (0+255),f,b
 15799  016478  2B7F               	incf	(StringMatch@That+1)& (0+255),f,b
 15800  01647A                     l10586:
 15801  01647A  C17C  FFD9         	movff	StringMatch@This,fsr2l
 15802  01647E  C17D  FFDA         	movff	StringMatch@This+1,fsr2h
 15803  016482  50DF               	movf	indf2,w,c
 15804  016484  A4D8               	btfss	status,2,c
 15805  016486  D7D4               	goto	l10576
 15806                           
 15807                           ;MISC.c: 120: }
 15808                           ;MISC.c: 121: if(*That == 0)
 15809  016488  0101               	movlb	1	; () banked
 15810  01648A  C17E  FFF6         	movff	StringMatch@That,tblptrl
 15811  01648E  0101               	movlb	1	; () banked
 15812  016490  C17F  FFF7         	movff	StringMatch@That+1,tblptrh
 15813  016494                     	if	0	;tblptru may be non-zero
 15814  016494                     	endif
 15815  016494                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15816  016494  0E00               	movlw	low (__mediumconst shr (0+16))
 15817  016496  6EF8               	movwf	tblptru,c
 15818  016498                     	endif
 15819  016498  0008               	tblrd		*
 15820  01649A  50F5               	movf	tablat,w,c
 15821  01649C  0900               	iorlw	0
 15822  01649E  A4D8               	btfss	status,2,c
 15823  0164A0  D002               	goto	l10596
 15824                           
 15825                           ; BSR set to: 1
 15826                           ;MISC.c: 122: {
 15827                           ;MISC.c: 123: return 1;
 15828  0164A2  0E01               	movlw	1
 15829  0164A4  0012               	return	
 15830  0164A6                     l10596:
 15831                           
 15832                           ; BSR set to: 1
 15833                           ;MISC.c: 125: else
 15834                           ;MISC.c: 126: {
 15835                           ;MISC.c: 127: return 0;
 15836  0164A6  0E00               	movlw	0
 15837  0164A8  0012               	return	
 15838  0164AA                     __end_of_StringMatch:
 15839                           	opt stack 0
 15840                           tblptru	equ	0xFF8
 15841                           tblptrh	equ	0xFF7
 15842                           tblptrl	equ	0xFF6
 15843                           tablat	equ	0xFF5
 15844                           prodh	equ	0xFF4
 15845                           prodl	equ	0xFF3
 15846                           intcon	equ	0xFF2
 15847                           postinc0	equ	0xFEE
 15848                           wreg	equ	0xFE8
 15849                           postinc1	equ	0xFE6
 15850                           postdec1	equ	0xFE5
 15851                           fsr1l	equ	0xFE1
 15852                           indf2	equ	0xFDF
 15853                           postinc2	equ	0xFDE
 15854                           fsr2h	equ	0xFDA
 15855                           fsr2l	equ	0xFD9
 15856                           status	equ	0xFD8
 15857                           
 15858 ;; *************** function _StringContains *****************
 15859 ;; Defined at:
 15860 ;;		line 137 in file "MISC.c"
 15861 ;; Parameters:    Size  Location     Type
 15862 ;;  This            2   14[BANK1 ] PTR unsigned char 
 15863 ;;		 -> Rxdata(100), 
 15864 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 15865 ;;		 -> STR_235(2), STR_211(4), STR_204(5), STR_201(8), 
 15866 ;;		 -> STR_200(2), STR_180(2), STR_179(2), STR_163(2), 
 15867 ;;		 -> STR_162(2), STR_143(2), STR_140(2), STR_124(5), 
 15868 ;;		 -> STR_123(6), STR_120(4), STR_119(6), STR_116(2), 
 15869 ;;		 -> STR_115(6), STR_114(2), STR_113(10), STR_112(6), 
 15870 ;;		 -> STR_111(6), STR_79(4), STR_78(6), STR_77(2), 
 15871 ;;		 -> STR_52(2), STR_20(2), 
 15872 ;; Auto vars:     Size  Location     Type
 15873 ;;		None
 15874 ;; Return value:  Size  Location     Type
 15875 ;;                  1    wreg      unsigned char 
 15876 ;; Registers used:
 15877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 15878 ;; Tracked objects:
 15879 ;;		On entry : 0/0
 15880 ;;		On exit  : 0/0
 15881 ;;		Unchanged: 0/0
 15882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15883 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 15884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15885 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15886 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 15887 ;;Total ram usage:        5 bytes
 15888 ;; Hardware stack levels used:    1
 15889 ;; Hardware stack levels required when called:    6
 15890 ;; This function calls:
 15891 ;;		Nothing
 15892 ;; This function is called by:
 15893 ;;		_Command
 15894 ;; This function uses a non-reentrant model
 15895 ;;
 15896                           
 15897                           	psect	text24
 15898  0163B0                     __ptext24:
 15899                           	opt stack 0
 15900  0163B0                     _StringContains:
 15901                           	opt stack 23
 15902                           
 15903                           ;MISC.c: 139: while(*This != 0)
 15904                           
 15905                           ; BSR set to: 1
 15906                           ;incstack = 0
 15907  0163B0  D035               	goto	l10620
 15908  0163B2                     l10602:
 15909                           
 15910                           ;MISC.c: 142: {
 15911                           ;MISC.c: 143: That++;
 15912  0163B2  0101               	movlb	1	; () banked
 15913  0163B4  4B7E               	infsnz	StringContains@That& (0+255),f,b
 15914  0163B6  2B7F               	incf	(StringContains@That+1)& (0+255),f,b
 15915                           
 15916                           ;MISC.c: 144: This++;
 15917  0163B8  0101               	movlb	1	; () banked
 15918  0163BA  4B7C               	infsnz	StringContains@This& (0+255),f,b
 15919  0163BC  2B7D               	incf	(StringContains@This+1)& (0+255),f,b
 15920                           
 15921                           ; BSR set to: 1
 15922                           ;MISC.c: 145: if(*That == 0)
 15923  0163BE  0101               	movlb	1	; () banked
 15924  0163C0  C17E  FFF6         	movff	StringContains@That,tblptrl
 15925  0163C4  0101               	movlb	1	; () banked
 15926  0163C6  C17F  FFF7         	movff	StringContains@That+1,tblptrh
 15927  0163CA                     	if	0	;tblptru may be non-zero
 15928  0163CA                     	endif
 15929  0163CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15930  0163CA  0E00               	movlw	low (__mediumconst shr (0+16))
 15931  0163CC  6EF8               	movwf	tblptru,c
 15932  0163CE                     	endif
 15933  0163CE  0008               	tblrd		*
 15934  0163D0  50F5               	movf	tablat,w,c
 15935  0163D2  0900               	iorlw	0
 15936  0163D4  A4D8               	btfss	status,2,c
 15937  0163D6  D002               	goto	l10610
 15938                           
 15939                           ; BSR set to: 1
 15940                           ;MISC.c: 146: {
 15941                           ;MISC.c: 147: return 1;
 15942  0163D8  0E01               	movlw	1
 15943  0163DA  0012               	return	
 15944  0163DC                     l10610:
 15945                           
 15946                           ; BSR set to: 1
 15947                           ;MISC.c: 148: }
 15948                           ;MISC.c: 149: if(*This == 0)
 15949  0163DC  C17C  FFD9         	movff	StringContains@This,fsr2l
 15950  0163E0  C17D  FFDA         	movff	StringContains@This+1,fsr2h
 15951  0163E4  50DF               	movf	indf2,w,c
 15952  0163E6  A4D8               	btfss	status,2,c
 15953  0163E8  D002               	goto	l10616
 15954                           
 15955                           ; BSR set to: 1
 15956                           ;MISC.c: 150: {
 15957                           ;MISC.c: 151: return 0;
 15958  0163EA  0E00               	movlw	0
 15959  0163EC  0012               	return	
 15960  0163EE                     l10616:
 15961  0163EE  0101               	movlb	1	; () banked
 15962  0163F0  C17E  FFF6         	movff	StringContains@That,tblptrl
 15963  0163F4  0101               	movlb	1	; () banked
 15964  0163F6  C17F  FFF7         	movff	StringContains@That+1,tblptrh
 15965  0163FA                     	if	0	;tblptru may be non-zero
 15966  0163FA                     	endif
 15967  0163FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15968  0163FA  0E00               	movlw	low (__mediumconst shr (0+16))
 15969  0163FC  6EF8               	movwf	tblptru,c
 15970  0163FE                     	endif
 15971  0163FE  0008               	tblrd		*
 15972  016400  CFF5 F180          	movff	tablat,??_StringContains
 15973  016404  C17C  FFD9         	movff	StringContains@This,fsr2l
 15974  016408  C17D  FFDA         	movff	StringContains@This+1,fsr2h
 15975  01640C  50DF               	movf	indf2,w,c
 15976  01640E  0101               	movlb	1	; () banked
 15977  016410  1980               	xorwf	??_StringContains& (0+255),w,b
 15978  016412  B4D8               	btfsc	status,2,c
 15979  016414  D7CE               	goto	l10602
 15980                           
 15981                           ; BSR set to: 1
 15982                           ;MISC.c: 152: }
 15983                           ;MISC.c: 153: }
 15984                           ;MISC.c: 154: This++;
 15985                           
 15986                           ; BSR set to: 1
 15987  016416  0101               	movlb	1	; () banked
 15988  016418  4B7C               	infsnz	StringContains@This& (0+255),f,b
 15989  01641A  2B7D               	incf	(StringContains@This+1)& (0+255),f,b
 15990  01641C                     l10620:
 15991  01641C  C17C  FFD9         	movff	StringContains@This,fsr2l
 15992  016420  C17D  FFDA         	movff	StringContains@This+1,fsr2h
 15993  016424  50DF               	movf	indf2,w,c
 15994  016426  A4D8               	btfss	status,2,c
 15995  016428  D7E2               	goto	l10616
 15996                           
 15997                           ;MISC.c: 155: }
 15998                           ;MISC.c: 156: return 0;
 15999  01642A  0E00               	movlw	0
 16000  01642C  0012               	return	
 16001  01642E                     __end_of_StringContains:
 16002                           	opt stack 0
 16003                           tblptru	equ	0xFF8
 16004                           tblptrh	equ	0xFF7
 16005                           tblptrl	equ	0xFF6
 16006                           tablat	equ	0xFF5
 16007                           prodh	equ	0xFF4
 16008                           prodl	equ	0xFF3
 16009                           intcon	equ	0xFF2
 16010                           postinc0	equ	0xFEE
 16011                           wreg	equ	0xFE8
 16012                           postinc1	equ	0xFE6
 16013                           postdec1	equ	0xFE5
 16014                           fsr1l	equ	0xFE1
 16015                           indf2	equ	0xFDF
 16016                           postinc2	equ	0xFDE
 16017                           fsr2h	equ	0xFDA
 16018                           fsr2l	equ	0xFD9
 16019                           status	equ	0xFD8
 16020                           
 16021 ;; *************** function _StringAddEqual *****************
 16022 ;; Defined at:
 16023 ;;		line 311 in file "MISC.c"
 16024 ;; Parameters:    Size  Location     Type
 16025 ;;  Input           2   29[BANK1 ] PTR unsigned char 
 16026 ;;		 -> Rxdata(100), 
 16027 ;; Auto vars:     Size  Location     Type
 16028 ;;  temp          100    0[BANK2 ] unsigned char [100]
 16029 ;;  j               1  102[BANK2 ] unsigned char 
 16030 ;;  i               1  101[BANK2 ] unsigned char 
 16031 ;;  firstnumber     1  100[BANK2 ] unsigned char 
 16032 ;; Return value:  Size  Location     Type
 16033 ;;                  1    wreg      unsigned char 
 16034 ;; Registers used:
 16035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16036 ;; Tracked objects:
 16037 ;;		On entry : 0/0
 16038 ;;		On exit  : 0/0
 16039 ;;		Unchanged: 0/0
 16040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16041 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16042 ;;      Locals:         0       0       0     103       0       0       0       0       0       0       0       0       
      +0       0
 16043 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16044 ;;      Totals:         0       0       4     103       0       0       0       0       0       0       0       0       
      +0       0
 16045 ;;Total ram usage:      107 bytes
 16046 ;; Hardware stack levels used:    1
 16047 ;; Hardware stack levels required when called:    8
 16048 ;; This function calls:
 16049 ;;		_BufferCopy
 16050 ;;		_cleanBuffer
 16051 ;; This function is called by:
 16052 ;;		_Command
 16053 ;; This function uses a non-reentrant model
 16054 ;;
 16055                           
 16056                           	psect	text25
 16057  0144A0                     __ptext25:
 16058                           	opt stack 0
 16059  0144A0                     _StringAddEqual:
 16060                           	opt stack 21
 16061                           
 16062                           ;MISC.c: 313: unsigned char i =0;
 16063                           
 16064                           ;incstack = 0
 16065  0144A0  0E00               	movlw	0
 16066  0144A2  0102               	movlb	2	; () banked
 16067  0144A4  6F65               	movwf	StringAddEqual@i& (0+255),b
 16068                           
 16069                           ;MISC.c: 314: unsigned char j =0;
 16070  0144A6  0E00               	movlw	0
 16071  0144A8  0102               	movlb	2	; () banked
 16072  0144AA  6F66               	movwf	StringAddEqual@j& (0+255),b
 16073                           
 16074                           ;MISC.c: 315: unsigned char firstnumber =200;
 16075  0144AC  0EC8               	movlw	200
 16076  0144AE  0102               	movlb	2	; () banked
 16077  0144B0  6F64               	movwf	StringAddEqual@firstnumber& (0+255),b
 16078                           
 16079                           ; BSR set to: 2
 16080                           ;MISC.c: 316: unsigned char temp[100];
 16081                           ;MISC.c: 317: cleanBuffer(temp,100);
 16082  0144B2  0102               	movlb	2	; () banked
 16083  0144B4  0E02               	movlw	high StringAddEqual@temp
 16084  0144B6  0101               	movlb	1	; () banked
 16085  0144B8  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 16086  0144BA  0102               	movlb	2	; () banked
 16087  0144BC  0E00               	movlw	low StringAddEqual@temp
 16088  0144BE  0101               	movlb	1	; () banked
 16089  0144C0  6F7C               	movwf	cleanBuffer@data& (0+255),b
 16090  0144C2  0E00               	movlw	0
 16091  0144C4  0101               	movlb	1	; () banked
 16092  0144C6  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 16093  0144C8  0E64               	movlw	100
 16094  0144CA  0101               	movlb	1	; () banked
 16095  0144CC  6F7E               	movwf	cleanBuffer@count& (0+255),b
 16096  0144CE  EC7C  F0B5         	call	_cleanBuffer	;wreg free
 16097                           
 16098                           ;MISC.c: 318: while(Input[i] != 0)
 16099  0144D2  D02F               	goto	l10776
 16100  0144D4                     l10768:
 16101                           
 16102                           ;MISC.c: 319: {
 16103                           ;MISC.c: 320: if((Input[i] >= 48) && (Input[i] <= 57) || (Input[i] == '-'))
 16104  0144D4  0102               	movlb	2	; () banked
 16105  0144D6  5165               	movf	StringAddEqual@i& (0+255),w,b
 16106  0144D8  0D01               	mullw	1
 16107  0144DA  50F3               	movf	prodl,w,c
 16108  0144DC  0101               	movlb	1	; () banked
 16109  0144DE  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 16110  0144E0  6ED9               	movwf	fsr2l,c
 16111  0144E2  50F4               	movf	prodh,w,c
 16112  0144E4  0101               	movlb	1	; () banked
 16113  0144E6  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16114  0144E8  6EDA               	movwf	fsr2h,c
 16115  0144EA  0E2F               	movlw	47
 16116  0144EC  64DF               	cpfsgt	indf2,c
 16117  0144EE  D00E               	goto	l10772
 16118                           
 16119                           ; BSR set to: 1
 16120  0144F0  0102               	movlb	2	; () banked
 16121  0144F2  5165               	movf	StringAddEqual@i& (0+255),w,b
 16122  0144F4  0D01               	mullw	1
 16123  0144F6  50F3               	movf	prodl,w,c
 16124  0144F8  0101               	movlb	1	; () banked
 16125  0144FA  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 16126  0144FC  6ED9               	movwf	fsr2l,c
 16127  0144FE  50F4               	movf	prodh,w,c
 16128  014500  0101               	movlb	1	; () banked
 16129  014502  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16130  014504  6EDA               	movwf	fsr2h,c
 16131  014506  0E39               	movlw	57
 16132  014508  64DF               	cpfsgt	indf2,c
 16133  01450A  D00E               	goto	l306
 16134  01450C                     l10772:
 16135                           
 16136                           ; BSR set to: 1
 16137  01450C  0102               	movlb	2	; () banked
 16138  01450E  5165               	movf	StringAddEqual@i& (0+255),w,b
 16139  014510  0D01               	mullw	1
 16140  014512  50F3               	movf	prodl,w,c
 16141  014514  0101               	movlb	1	; () banked
 16142  014516  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 16143  014518  6ED9               	movwf	fsr2l,c
 16144  01451A  50F4               	movf	prodh,w,c
 16145  01451C  0101               	movlb	1	; () banked
 16146  01451E  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16147  014520  6EDA               	movwf	fsr2h,c
 16148  014522  0E2D               	movlw	45
 16149  014524  62DF               	cpfseq	indf2,c
 16150  014526  D003               	goto	l10774
 16151  014528                     l306:
 16152                           
 16153                           ; BSR set to: 1
 16154                           ;MISC.c: 321: {
 16155                           ;MISC.c: 322: firstnumber=i;
 16156  014528  C265  F264         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 16157                           
 16158                           ;MISC.c: 323: break;
 16159  01452C  D010               	goto	l10778
 16160  01452E                     l10774:
 16161                           
 16162                           ; BSR set to: 1
 16163                           ;MISC.c: 324: }
 16164                           ;MISC.c: 325: i++;
 16165  01452E  0102               	movlb	2	; () banked
 16166  014530  2B65               	incf	StringAddEqual@i& (0+255),f,b
 16167  014532                     l10776:
 16168  014532  0102               	movlb	2	; () banked
 16169  014534  5165               	movf	StringAddEqual@i& (0+255),w,b
 16170  014536  0D01               	mullw	1
 16171  014538  50F3               	movf	prodl,w,c
 16172  01453A  0101               	movlb	1	; () banked
 16173  01453C  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 16174  01453E  6ED9               	movwf	fsr2l,c
 16175  014540  50F4               	movf	prodh,w,c
 16176  014542  0101               	movlb	1	; () banked
 16177  014544  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16178  014546  6EDA               	movwf	fsr2h,c
 16179  014548  50DF               	movf	indf2,w,c
 16180  01454A  A4D8               	btfss	status,2,c
 16181  01454C  D7C3               	goto	l10768
 16182  01454E                     l10778:
 16183                           
 16184                           ; BSR set to: 1
 16185                           ;MISC.c: 326: }
 16186                           ;MISC.c: 327: if(firstnumber ==200)
 16187  01454E  0102               	movlb	2	; () banked
 16188  014550  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 16189  014552  0AC8               	xorlw	200
 16190  014554  B4D8               	btfsc	status,2,c
 16191  014556  0012               	return	
 16192                           
 16193                           ; BSR set to: 2
 16194                           ;MISC.c: 330: }
 16195                           ;MISC.c: 331: for(j=0;j<firstnumber;j++)
 16196                           
 16197                           ; BSR set to: 2
 16198                           
 16199                           ; BSR set to: 2
 16200                           ;MISC.c: 328: {
 16201                           ;MISC.c: 329: return 0;
 16202                           ;	Return value of _StringAddEqual is never used
 16203  014558  0E00               	movlw	0
 16204  01455A  0102               	movlb	2	; () banked
 16205  01455C  6F66               	movwf	StringAddEqual@j& (0+255),b
 16206  01455E  D01A               	goto	l10788
 16207  014560                     l10784:
 16208                           
 16209                           ; BSR set to: 2
 16210                           ;MISC.c: 332: {
 16211                           ;MISC.c: 333: temp[j] = Input[j];
 16212  014560  0102               	movlb	2	; () banked
 16213  014562  5166               	movf	StringAddEqual@j& (0+255),w,b
 16214  014564  0D01               	mullw	1
 16215  014566  50F3               	movf	prodl,w,c
 16216  014568  0101               	movlb	1	; () banked
 16217  01456A  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 16218  01456C  6ED9               	movwf	fsr2l,c
 16219  01456E  50F4               	movf	prodh,w,c
 16220  014570  0101               	movlb	1	; () banked
 16221  014572  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16222  014574  6EDA               	movwf	fsr2h,c
 16223  014576  0102               	movlb	2	; () banked
 16224  014578  5166               	movf	StringAddEqual@j& (0+255),w,b
 16225  01457A  0D01               	mullw	1
 16226  01457C  0102               	movlb	2	; () banked
 16227  01457E  0E00               	movlw	low StringAddEqual@temp
 16228  014580  24F3               	addwf	prodl,w,c
 16229  014582  6EE1               	movwf	fsr1l,c
 16230  014584  0102               	movlb	2	; () banked
 16231  014586  0E02               	movlw	high StringAddEqual@temp
 16232  014588  20F4               	addwfc	prodh,w,c
 16233  01458A  6EE2               	movwf	fsr1h,c
 16234  01458C  CFDF FFE7          	movff	indf2,indf1
 16235                           
 16236                           ; BSR set to: 2
 16237  014590  0102               	movlb	2	; () banked
 16238  014592  2B66               	incf	StringAddEqual@j& (0+255),f,b
 16239  014594                     l10788:
 16240                           
 16241                           ; BSR set to: 2
 16242  014594  0102               	movlb	2	; () banked
 16243  014596  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 16244  014598  0102               	movlb	2	; () banked
 16245  01459A  5D66               	subwf	StringAddEqual@j& (0+255),w,b
 16246  01459C  A0D8               	btfss	status,0,c
 16247  01459E  D7E0               	goto	l10784
 16248                           
 16249                           ; BSR set to: 2
 16250                           ;MISC.c: 334: }
 16251                           ;MISC.c: 335: temp[firstnumber] = '=';
 16252                           
 16253                           ; BSR set to: 2
 16254  0145A0  0102               	movlb	2	; () banked
 16255  0145A2  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 16256  0145A4  0D01               	mullw	1
 16257  0145A6  0102               	movlb	2	; () banked
 16258  0145A8  0E00               	movlw	low StringAddEqual@temp
 16259  0145AA  24F3               	addwf	prodl,w,c
 16260  0145AC  6ED9               	movwf	fsr2l,c
 16261  0145AE  0102               	movlb	2	; () banked
 16262  0145B0  0E02               	movlw	high StringAddEqual@temp
 16263  0145B2  20F4               	addwfc	prodh,w,c
 16264  0145B4  6EDA               	movwf	fsr2h,c
 16265  0145B6  0E3D               	movlw	61
 16266  0145B8  6EDF               	movwf	indf2,c
 16267                           
 16268                           ; BSR set to: 2
 16269                           ;MISC.c: 336: for(j = (firstnumber);j<99;j++)
 16270  0145BA  C264  F266         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 16271  0145BE  D031               	goto	L11
 16272  0145C0                     l10798:
 16273                           
 16274                           ; BSR set to: 2
 16275                           ;MISC.c: 337: {
 16276                           ;MISC.c: 338: temp[j+1] = Input[j];
 16277  0145C0  0102               	movlb	2	; () banked
 16278  0145C2  5166               	movf	StringAddEqual@j& (0+255),w,b
 16279  0145C4  0D01               	mullw	1
 16280  0145C6  50F3               	movf	prodl,w,c
 16281  0145C8  0101               	movlb	1	; () banked
 16282  0145CA  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 16283  0145CC  6ED9               	movwf	fsr2l,c
 16284  0145CE  50F4               	movf	prodh,w,c
 16285  0145D0  0101               	movlb	1	; () banked
 16286  0145D2  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16287  0145D4  6EDA               	movwf	fsr2h,c
 16288  0145D6  0102               	movlb	2	; () banked
 16289  0145D8  5166               	movf	StringAddEqual@j& (0+255),w,b
 16290  0145DA  0101               	movlb	1	; () banked
 16291  0145DC  6F8D               	movwf	??_StringAddEqual& (0+255),b
 16292  0145DE  6B8E               	clrf	(??_StringAddEqual+1)& (0+255),b
 16293  0145E0  0E01               	movlw	1
 16294  0145E2  0101               	movlb	1	; () banked
 16295  0145E4  278D               	addwf	??_StringAddEqual& (0+255),f,b
 16296  0145E6  0E00               	movlw	0
 16297  0145E8  238E               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 16298  0145EA  0102               	movlb	2	; () banked
 16299  0145EC  0E00               	movlw	low StringAddEqual@temp
 16300  0145EE  0101               	movlb	1	; () banked
 16301  0145F0  258D               	addwf	??_StringAddEqual& (0+255),w,b
 16302  0145F2  6EE1               	movwf	fsr1l,c
 16303  0145F4  0102               	movlb	2	; () banked
 16304  0145F6  0E02               	movlw	high StringAddEqual@temp
 16305  0145F8  0101               	movlb	1	; () banked
 16306  0145FA  218E               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 16307  0145FC  6EE2               	movwf	fsr1h,c
 16308  0145FE  CFDF FFE7          	movff	indf2,indf1
 16309                           
 16310                           ; BSR set to: 1
 16311                           ;MISC.c: 339: if(Input[j] ==0)
 16312  014602  0102               	movlb	2	; () banked
 16313  014604  5166               	movf	StringAddEqual@j& (0+255),w,b
 16314  014606  0D01               	mullw	1
 16315  014608  50F3               	movf	prodl,w,c
 16316  01460A  0101               	movlb	1	; () banked
 16317  01460C  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 16318  01460E  6ED9               	movwf	fsr2l,c
 16319  014610  50F4               	movf	prodh,w,c
 16320  014612  0101               	movlb	1	; () banked
 16321  014614  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 16322  014616  6EDA               	movwf	fsr2h,c
 16323  014618  50DF               	movf	indf2,w,c
 16324  01461A  B4D8               	btfsc	status,2,c
 16325  01461C  D006               	goto	l10808
 16326                           
 16327                           ; BSR set to: 1
 16328                           
 16329                           ; BSR set to: 1
 16330                           
 16331                           ; BSR set to: 1
 16332                           ;MISC.c: 340: {
 16333                           ;MISC.c: 341: break;
 16334  01461E  0102               	movlb	2	; () banked
 16335  014620  2B66               	incf	StringAddEqual@j& (0+255),f,b
 16336  014622                     L11:
 16337                           
 16338                           ; BSR set to: 2
 16339  014622  0E62               	movlw	98
 16340  014624  0102               	movlb	2	; () banked
 16341  014626  6566               	cpfsgt	StringAddEqual@j& (0+255),b
 16342  014628  D7CB               	goto	l10798
 16343  01462A                     l10808:
 16344                           
 16345                           ;MISC.c: 342: }
 16346                           ;MISC.c: 343: }
 16347                           ;MISC.c: 344: BufferCopy(temp,Input,100, 0);
 16348  01462A  0102               	movlb	2	; () banked
 16349  01462C  0E02               	movlw	high StringAddEqual@temp
 16350  01462E  0101               	movlb	1	; () banked
 16351  014630  6F85               	movwf	(BufferCopy@from+1)& (0+255),b
 16352  014632  0102               	movlb	2	; () banked
 16353  014634  0E00               	movlw	low StringAddEqual@temp
 16354  014636  0101               	movlb	1	; () banked
 16355  014638  6F84               	movwf	BufferCopy@from& (0+255),b
 16356  01463A  0101               	movlb	1	; () banked
 16357  01463C  C18C  F187         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 16358  014640  0101               	movlb	1	; () banked
 16359  014642  C18B  F186         	movff	StringAddEqual@Input,BufferCopy@to
 16360  014646  0E64               	movlw	100
 16361  014648  0101               	movlb	1	; () banked
 16362  01464A  6F88               	movwf	BufferCopy@count& (0+255),b
 16363  01464C  0E00               	movlw	0
 16364  01464E  0101               	movlb	1	; () banked
 16365  014650  6F89               	movwf	BufferCopy@shift& (0+255),b
 16366  014652  EC07  F0AD         	call	_BufferCopy	;wreg free
 16367  014656  0012               	return	
 16368  014658                     __end_of_StringAddEqual:
 16369                           	opt stack 0
 16370                           tblptru	equ	0xFF8
 16371                           tblptrh	equ	0xFF7
 16372                           tblptrl	equ	0xFF6
 16373                           tablat	equ	0xFF5
 16374                           prodh	equ	0xFF4
 16375                           prodl	equ	0xFF3
 16376                           intcon	equ	0xFF2
 16377                           postinc0	equ	0xFEE
 16378                           wreg	equ	0xFE8
 16379                           indf1	equ	0xFE7
 16380                           postinc1	equ	0xFE6
 16381                           postdec1	equ	0xFE5
 16382                           fsr1h	equ	0xFE2
 16383                           fsr1l	equ	0xFE1
 16384                           indf2	equ	0xFDF
 16385                           postinc2	equ	0xFDE
 16386                           fsr2h	equ	0xFDA
 16387                           fsr2l	equ	0xFD9
 16388                           status	equ	0xFD8
 16389                           
 16390 ;; *************** function _StartsWith *****************
 16391 ;; Defined at:
 16392 ;;		line 165 in file "MISC.c"
 16393 ;; Parameters:    Size  Location     Type
 16394 ;;  This            2   14[BANK1 ] PTR unsigned char 
 16395 ;;		 -> Rxdata(100), 
 16396 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 16397 ;;		 -> STR_234(4), STR_199(4), STR_178(4), STR_161(9), 
 16398 ;;		 -> STR_142(17), STR_141(7), STR_139(4), STR_76(8), 
 16399 ;;		 -> STR_51(11), STR_19(4), 
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;		None
 16402 ;; Return value:  Size  Location     Type
 16403 ;;                  1    wreg      unsigned char 
 16404 ;; Registers used:
 16405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16406 ;; Tracked objects:
 16407 ;;		On entry : 0/0
 16408 ;;		On exit  : 0/0
 16409 ;;		Unchanged: 0/0
 16410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16411 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16413 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16414 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16415 ;;Total ram usage:        5 bytes
 16416 ;; Hardware stack levels used:    1
 16417 ;; Hardware stack levels required when called:    6
 16418 ;; This function calls:
 16419 ;;		Nothing
 16420 ;; This function is called by:
 16421 ;;		_Command
 16422 ;; This function uses a non-reentrant model
 16423 ;;
 16424                           
 16425                           	psect	text26
 16426  015EAE                     __ptext26:
 16427                           	opt stack 0
 16428  015EAE                     _StartsWith:
 16429                           	opt stack 23
 16430                           
 16431                           ;MISC.c: 167: while(*This != 0)
 16432                           
 16433                           ;incstack = 0
 16434  015EAE  D02B               	goto	l10644
 16435  015EB0                     l10628:
 16436                           
 16437                           ;MISC.c: 168: {
 16438                           ;MISC.c: 169: if(*This != *That)
 16439  015EB0  0101               	movlb	1	; () banked
 16440  015EB2  C17E  FFF6         	movff	StartsWith@That,tblptrl
 16441  015EB6  0101               	movlb	1	; () banked
 16442  015EB8  C17F  FFF7         	movff	StartsWith@That+1,tblptrh
 16443  015EBC                     	if	0	;tblptru may be non-zero
 16444  015EBC                     	endif
 16445  015EBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16446  015EBC  0E00               	movlw	low (__mediumconst shr (0+16))
 16447  015EBE  6EF8               	movwf	tblptru,c
 16448  015EC0                     	endif
 16449  015EC0  0008               	tblrd		*
 16450  015EC2  CFF5 F180          	movff	tablat,??_StartsWith
 16451  015EC6  C17C  FFD9         	movff	StartsWith@This,fsr2l
 16452  015ECA  C17D  FFDA         	movff	StartsWith@This+1,fsr2h
 16453  015ECE  50DF               	movf	indf2,w,c
 16454  015ED0  0101               	movlb	1	; () banked
 16455  015ED2  1980               	xorwf	??_StartsWith& (0+255),w,b
 16456  015ED4  B4D8               	btfsc	status,2,c
 16457  015ED6  D011               	goto	l10642
 16458                           
 16459                           ; BSR set to: 1
 16460                           ;MISC.c: 170: {
 16461                           ;MISC.c: 171: if(*That != 0)
 16462  015ED8  0101               	movlb	1	; () banked
 16463  015EDA  C17E  FFF6         	movff	StartsWith@That,tblptrl
 16464  015EDE  0101               	movlb	1	; () banked
 16465  015EE0  C17F  FFF7         	movff	StartsWith@That+1,tblptrh
 16466  015EE4                     	if	0	;tblptru may be non-zero
 16467  015EE4                     	endif
 16468  015EE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16469  015EE4  0E00               	movlw	low (__mediumconst shr (0+16))
 16470  015EE6  6EF8               	movwf	tblptru,c
 16471  015EE8                     	endif
 16472  015EE8  0008               	tblrd		*
 16473  015EEA  50F5               	movf	tablat,w,c
 16474  015EEC  0900               	iorlw	0
 16475  015EEE  B4D8               	btfsc	status,2,c
 16476  015EF0  D002               	goto	l10638
 16477                           
 16478                           ; BSR set to: 1
 16479                           ;MISC.c: 172: {
 16480                           ;MISC.c: 173: return 0;
 16481  015EF2  0E00               	movlw	0
 16482  015EF4  0012               	return	
 16483  015EF6                     l10638:
 16484                           
 16485                           ; BSR set to: 1
 16486                           ;MISC.c: 175: else
 16487                           ;MISC.c: 176: {
 16488                           ;MISC.c: 177: return 1;
 16489  015EF6  0E01               	movlw	1
 16490  015EF8  0012               	return	
 16491  015EFA                     l10642:
 16492                           
 16493                           ; BSR set to: 1
 16494                           ;MISC.c: 178: }
 16495                           ;MISC.c: 179: }
 16496                           ;MISC.c: 180: This++;
 16497  015EFA  0101               	movlb	1	; () banked
 16498  015EFC  4B7C               	infsnz	StartsWith@This& (0+255),f,b
 16499  015EFE  2B7D               	incf	(StartsWith@This+1)& (0+255),f,b
 16500                           
 16501                           ;MISC.c: 181: That++;
 16502  015F00  0101               	movlb	1	; () banked
 16503  015F02  4B7E               	infsnz	StartsWith@That& (0+255),f,b
 16504  015F04  2B7F               	incf	(StartsWith@That+1)& (0+255),f,b
 16505  015F06                     l10644:
 16506  015F06  C17C  FFD9         	movff	StartsWith@This,fsr2l
 16507  015F0A  C17D  FFDA         	movff	StartsWith@This+1,fsr2h
 16508  015F0E  50DF               	movf	indf2,w,c
 16509  015F10  A4D8               	btfss	status,2,c
 16510  015F12  D7CE               	goto	l10628
 16511                           
 16512                           ;MISC.c: 182: }
 16513                           ;MISC.c: 183: if(*This == 0 && *That == 0)
 16514  015F14  C17C  FFD9         	movff	StartsWith@This,fsr2l
 16515  015F18  C17D  FFDA         	movff	StartsWith@This+1,fsr2h
 16516  015F1C  50DF               	movf	indf2,w,c
 16517  015F1E  A4D8               	btfss	status,2,c
 16518  015F20  D00F               	goto	l10656
 16519  015F22  0101               	movlb	1	; () banked
 16520  015F24  C17E  FFF6         	movff	StartsWith@That,tblptrl
 16521  015F28  0101               	movlb	1	; () banked
 16522  015F2A  C17F  FFF7         	movff	StartsWith@That+1,tblptrh
 16523  015F2E                     	if	0	;tblptru may be non-zero
 16524  015F2E                     	endif
 16525  015F2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16526  015F2E  0E00               	movlw	low (__mediumconst shr (0+16))
 16527  015F30  6EF8               	movwf	tblptru,c
 16528  015F32                     	endif
 16529  015F32  0008               	tblrd		*
 16530  015F34  50F5               	movf	tablat,w,c
 16531  015F36  0900               	iorlw	0
 16532  015F38  A4D8               	btfss	status,2,c
 16533  015F3A  D002               	goto	l10656
 16534                           
 16535                           ; BSR set to: 1
 16536                           ;MISC.c: 184: {
 16537                           ;MISC.c: 186: return 1;
 16538  015F3C  0E01               	movlw	1
 16539  015F3E  0012               	return	
 16540  015F40                     l10656:
 16541                           
 16542                           ;MISC.c: 188: else
 16543                           ;MISC.c: 189: {
 16544                           ;MISC.c: 191: return 0;
 16545  015F40  0E00               	movlw	0
 16546  015F42  0012               	return	
 16547  015F44                     __end_of_StartsWith:
 16548                           	opt stack 0
 16549                           tblptru	equ	0xFF8
 16550                           tblptrh	equ	0xFF7
 16551                           tblptrl	equ	0xFF6
 16552                           tablat	equ	0xFF5
 16553                           prodh	equ	0xFF4
 16554                           prodl	equ	0xFF3
 16555                           intcon	equ	0xFF2
 16556                           postinc0	equ	0xFEE
 16557                           wreg	equ	0xFE8
 16558                           indf1	equ	0xFE7
 16559                           postinc1	equ	0xFE6
 16560                           postdec1	equ	0xFE5
 16561                           fsr1h	equ	0xFE2
 16562                           fsr1l	equ	0xFE1
 16563                           indf2	equ	0xFDF
 16564                           postinc2	equ	0xFDE
 16565                           fsr2h	equ	0xFDA
 16566                           fsr2l	equ	0xFD9
 16567                           status	equ	0xFD8
 16568                           
 16569 ;; *************** function _SprintDate *****************
 16570 ;; Defined at:
 16571 ;;		line 254 in file "RTC.c"
 16572 ;; Parameters:    Size  Location     Type
 16573 ;;  ReturnBuf       2   65[BANK1 ] PTR unsigned char 
 16574 ;;		 -> Command@buf(200), 
 16575 ;;  DisplayTime     9   67[BANK1 ] struct TIME
 16576 ;;  Military        1   76[BANK1 ] unsigned char 
 16577 ;; Auto vars:     Size  Location     Type
 16578 ;;		None
 16579 ;; Return value:  Size  Location     Type
 16580 ;;		None               void
 16581 ;; Registers used:
 16582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16583 ;; Tracked objects:
 16584 ;;		On entry : 0/0
 16585 ;;		On exit  : 0/0
 16586 ;;		Unchanged: 0/0
 16587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16588 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 16589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16591 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 16592 ;;Total ram usage:       12 bytes
 16593 ;; Hardware stack levels used:    1
 16594 ;; Hardware stack levels required when called:    8
 16595 ;; This function calls:
 16596 ;;		_sprintf
 16597 ;; This function is called by:
 16598 ;;		_Command
 16599 ;; This function uses a non-reentrant model
 16600 ;;
 16601                           
 16602                           	psect	text27
 16603  01502A                     __ptext27:
 16604                           	opt stack 0
 16605  01502A                     _SprintDate:
 16606                           	opt stack 21
 16607                           
 16608                           ;RTC.c: 256: if(!Military)
 16609                           
 16610                           ;incstack = 0
 16611  01502A  0101               	movlb	1	; () banked
 16612  01502C  67BA               	tstfsz	SprintDate@Military& (0+255),b
 16613  01502E  D05D               	goto	l10966
 16614                           
 16615                           ; BSR set to: 1
 16616                           ;RTC.c: 257: {
 16617                           ;RTC.c: 258: if(!DisplayTime.HoursAM_PM)
 16618  015030  0101               	movlb	1	; () banked
 16619  015032  67B5               	tstfsz	(SprintDate@DisplayTime+4)& (0+255),b
 16620  015034  D02D               	goto	l10964
 16621                           
 16622                           ; BSR set to: 1
 16623                           ;RTC.c: 259: {
 16624                           ;RTC.c: 260: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d AM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 16625  015036  0101               	movlb	1	; () banked
 16626  015038  C1B0  F189         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 16627  01503C  0101               	movlb	1	; () banked
 16628  01503E  C1AF  F188         	movff	SprintDate@ReturnBuf,sprintf@sp
 16629  015042  0EF4               	movlw	high STR_282
 16630  015044  0101               	movlb	1	; () banked
 16631  015046  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 16632  015048  0E28               	movlw	low STR_282
 16633  01504A  0101               	movlb	1	; () banked
 16634  01504C  6F8A               	movwf	sprintf@f& (0+255),b
 16635  01504E  0101               	movlb	1	; () banked
 16636  015050  C1B8  F18C         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 16637  015054  0101               	movlb	1	; () banked
 16638  015056  6B8D               	clrf	(?_sprintf+5)& (0+255),b
 16639  015058  0101               	movlb	1	; () banked
 16640  01505A  C1B7  F18E         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 16641  01505E  0101               	movlb	1	; () banked
 16642  015060  6B8F               	clrf	(?_sprintf+7)& (0+255),b
 16643  015062  0101               	movlb	1	; () banked
 16644  015064  C1B9  F190         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 16645  015068  0101               	movlb	1	; () banked
 16646  01506A  6B91               	clrf	(?_sprintf+9)& (0+255),b
 16647  01506C  0101               	movlb	1	; () banked
 16648  01506E  C1B3  F192         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 16649  015072  0101               	movlb	1	; () banked
 16650  015074  6B93               	clrf	(?_sprintf+11)& (0+255),b
 16651  015076  0101               	movlb	1	; () banked
 16652  015078  C1B2  F194         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 16653  01507C  0101               	movlb	1	; () banked
 16654  01507E  6B95               	clrf	(?_sprintf+13)& (0+255),b
 16655  015080  0101               	movlb	1	; () banked
 16656  015082  C1B1  F196         	movff	SprintDate@DisplayTime,?_sprintf+14
 16657  015086  0101               	movlb	1	; () banked
 16658  015088  6B97               	clrf	(?_sprintf+15)& (0+255),b
 16659  01508A  EC31  F092         	call	_sprintf	;wreg free
 16660                           
 16661                           ;RTC.c: 261: }
 16662  01508E  0012               	return	
 16663  015090                     l10964:
 16664                           
 16665                           ;RTC.c: 262: else
 16666                           ;RTC.c: 263: {
 16667                           ;RTC.c: 264: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d PM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 16668  015090  0101               	movlb	1	; () banked
 16669  015092  C1B0  F189         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 16670  015096  0101               	movlb	1	; () banked
 16671  015098  C1AF  F188         	movff	SprintDate@ReturnBuf,sprintf@sp
 16672  01509C  0EF4               	movlw	high STR_283
 16673  01509E  0101               	movlb	1	; () banked
 16674  0150A0  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 16675  0150A2  0E4B               	movlw	low STR_283
 16676  0150A4  0101               	movlb	1	; () banked
 16677  0150A6  6F8A               	movwf	sprintf@f& (0+255),b
 16678  0150A8  0101               	movlb	1	; () banked
 16679  0150AA  C1B8  F18C         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 16680  0150AE  0101               	movlb	1	; () banked
 16681  0150B0  6B8D               	clrf	(?_sprintf+5)& (0+255),b
 16682  0150B2  0101               	movlb	1	; () banked
 16683  0150B4  C1B7  F18E         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 16684  0150B8  0101               	movlb	1	; () banked
 16685  0150BA  6B8F               	clrf	(?_sprintf+7)& (0+255),b
 16686  0150BC  0101               	movlb	1	; () banked
 16687  0150BE  C1B9  F190         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 16688  0150C2  0101               	movlb	1	; () banked
 16689  0150C4  6B91               	clrf	(?_sprintf+9)& (0+255),b
 16690  0150C6  0101               	movlb	1	; () banked
 16691  0150C8  C1B3  F192         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 16692  0150CC  0101               	movlb	1	; () banked
 16693  0150CE  6B93               	clrf	(?_sprintf+11)& (0+255),b
 16694  0150D0  0101               	movlb	1	; () banked
 16695  0150D2  C1B2  F194         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 16696  0150D6  0101               	movlb	1	; () banked
 16697  0150D8  6B95               	clrf	(?_sprintf+13)& (0+255),b
 16698  0150DA  0101               	movlb	1	; () banked
 16699  0150DC  C1B1  F196         	movff	SprintDate@DisplayTime,?_sprintf+14
 16700  0150E0  0101               	movlb	1	; () banked
 16701  0150E2  6B97               	clrf	(?_sprintf+15)& (0+255),b
 16702  0150E4  EC31  F092         	call	_sprintf	;wreg free
 16703  0150E8  0012               	return	
 16704  0150EA                     l10966:
 16705                           
 16706                           ;RTC.c: 267: else
 16707                           ;RTC.c: 268: {
 16708                           ;RTC.c: 269: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d", DisplayTime.Month, Dis
      +                          playTime.Date, DisplayTime.Year, DisplayTime.HoursMilitary, DisplayTime.Minutes, Display
      +                          Time.Seconds);
 16709  0150EA  0101               	movlb	1	; () banked
 16710  0150EC  C1B0  F189         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 16711  0150F0  0101               	movlb	1	; () banked
 16712  0150F2  C1AF  F188         	movff	SprintDate@ReturnBuf,sprintf@sp
 16713  0150F6  0EF4               	movlw	high STR_284
 16714  0150F8  0101               	movlb	1	; () banked
 16715  0150FA  6F8B               	movwf	(sprintf@f+1)& (0+255),b
 16716  0150FC  0EF3               	movlw	low STR_284
 16717  0150FE  0101               	movlb	1	; () banked
 16718  015100  6F8A               	movwf	sprintf@f& (0+255),b
 16719  015102  0101               	movlb	1	; () banked
 16720  015104  C1B8  F18C         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 16721  015108  0101               	movlb	1	; () banked
 16722  01510A  6B8D               	clrf	(?_sprintf+5)& (0+255),b
 16723  01510C  0101               	movlb	1	; () banked
 16724  01510E  C1B7  F18E         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 16725  015112  0101               	movlb	1	; () banked
 16726  015114  6B8F               	clrf	(?_sprintf+7)& (0+255),b
 16727  015116  0101               	movlb	1	; () banked
 16728  015118  C1B9  F190         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 16729  01511C  0101               	movlb	1	; () banked
 16730  01511E  6B91               	clrf	(?_sprintf+9)& (0+255),b
 16731  015120  0101               	movlb	1	; () banked
 16732  015122  C1B4  F192         	movff	SprintDate@DisplayTime+3,?_sprintf+10
 16733  015126  0101               	movlb	1	; () banked
 16734  015128  6B93               	clrf	(?_sprintf+11)& (0+255),b
 16735  01512A  0101               	movlb	1	; () banked
 16736  01512C  C1B2  F194         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 16737  015130  0101               	movlb	1	; () banked
 16738  015132  6B95               	clrf	(?_sprintf+13)& (0+255),b
 16739  015134  0101               	movlb	1	; () banked
 16740  015136  C1B1  F196         	movff	SprintDate@DisplayTime,?_sprintf+14
 16741  01513A  0101               	movlb	1	; () banked
 16742  01513C  6B97               	clrf	(?_sprintf+15)& (0+255),b
 16743  01513E  EC31  F092         	call	_sprintf	;wreg free
 16744  015142  0012               	return	
 16745  015144                     __end_of_SprintDate:
 16746                           	opt stack 0
 16747                           tblptru	equ	0xFF8
 16748                           tblptrh	equ	0xFF7
 16749                           tblptrl	equ	0xFF6
 16750                           tablat	equ	0xFF5
 16751                           prodh	equ	0xFF4
 16752                           prodl	equ	0xFF3
 16753                           intcon	equ	0xFF2
 16754                           postinc0	equ	0xFEE
 16755                           wreg	equ	0xFE8
 16756                           indf1	equ	0xFE7
 16757                           postinc1	equ	0xFE6
 16758                           postdec1	equ	0xFE5
 16759                           fsr1h	equ	0xFE2
 16760                           fsr1l	equ	0xFE1
 16761                           indf2	equ	0xFDF
 16762                           postinc2	equ	0xFDE
 16763                           fsr2h	equ	0xFDA
 16764                           fsr2l	equ	0xFD9
 16765                           status	equ	0xFD8
 16766                           
 16767 ;; *************** function _sprintf *****************
 16768 ;; Defined at:
 16769 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 16770 ;; Parameters:    Size  Location     Type
 16771 ;;  sp              2   26[BANK1 ] PTR unsigned char 
 16772 ;;		 -> Command@buf(200), 
 16773 ;;  f               2   28[BANK1 ] PTR const unsigned char 
 16774 ;;		 -> STR_284(32), STR_283(35), STR_282(35), STR_267(23), 
 16775 ;;		 -> STR_266(23), STR_208(23), STR_207(23), STR_203(16), 
 16776 ;;		 -> STR_202(36), STR_190(13), STR_189(20), STR_188(17), 
 16777 ;;		 -> STR_187(29), STR_171(15), STR_170(32), STR_152(15), 
 16778 ;;		 -> STR_151(22), 
 16779 ;; Auto vars:     Size  Location     Type
 16780 ;;  idx             1   46[BANK1 ] unsigned char 
 16781 ;;  _val            4   58[BANK1 ] struct .
 16782 ;;  flag            2   63[BANK1 ] unsigned short 
 16783 ;;  width           2   56[BANK1 ] int 
 16784 ;;  ap              2   53[BANK1 ] PTR void [1]
 16785 ;;		 -> ?_sprintf(2), 
 16786 ;;  c               1   62[BANK1 ] char 
 16787 ;;  prec            1   55[BANK1 ] char 
 16788 ;; Return value:  Size  Location     Type
 16789 ;;                  2   26[BANK1 ] int 
 16790 ;; Registers used:
 16791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16792 ;; Tracked objects:
 16793 ;;		On entry : 0/0
 16794 ;;		On exit  : 0/0
 16795 ;;		Unchanged: 0/0
 16796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16797 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 16798 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
 16799 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16800 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0
 16801 ;;Total ram usage:       39 bytes
 16802 ;; Hardware stack levels used:    1
 16803 ;; Hardware stack levels required when called:    7
 16804 ;; This function calls:
 16805 ;;		___lwdiv
 16806 ;;		___lwmod
 16807 ;;		___wmul
 16808 ;;		_isdigit
 16809 ;; This function is called by:
 16810 ;;		_Command
 16811 ;;		_SprintDate
 16812 ;; This function uses a non-reentrant model
 16813 ;;
 16814                           
 16815                           	psect	text28
 16816  012462                     __ptext28:
 16817                           	opt stack 0
 16818  012462                     _sprintf:
 16819                           	opt stack 22
 16820                           
 16821                           ;doprnt.c: 494: va_list ap;
 16822                           ;doprnt.c: 499: signed char c;
 16823                           ;doprnt.c: 501: int width;
 16824                           ;doprnt.c: 506: signed char prec;
 16825                           ;doprnt.c: 508: unsigned short flag;
 16826                           ;doprnt.c: 527: union {
 16827                           ;doprnt.c: 528: unsigned int _val;
 16828                           ;doprnt.c: 529: struct {
 16829                           ;doprnt.c: 530: const char * _cp;
 16830                           ;doprnt.c: 531: unsigned _len;
 16831                           ;doprnt.c: 532: } _str;
 16832                           ;doprnt.c: 533: } _val;
 16833                           ;doprnt.c: 542: *ap = __va_start();
 16834                           
 16835                           ;incstack = 0
 16836  012462  0101               	movlb	1	; () banked
 16837  012464  0E01               	movlw	high (?_sprintf+4)
 16838  012466  0101               	movlb	1	; () banked
 16839  012468  6FA4               	movwf	(sprintf@ap+1)& (0+255),b
 16840  01246A  0101               	movlb	1	; () banked
 16841  01246C  0E8C               	movlw	low (?_sprintf+4)
 16842  01246E  0101               	movlb	1	; () banked
 16843  012470  6FA3               	movwf	sprintf@ap& (0+255),b
 16844                           
 16845                           ;doprnt.c: 545: while(c = *f++) {
 16846  012472  EFAC  F097         	goto	l10036
 16847  012476                     l9696:
 16848                           
 16849                           ; BSR set to: 1
 16850                           ;doprnt.c: 547: if(c != '%')
 16851  012476  0101               	movlb	1	; () banked
 16852  012478  51AC               	movf	sprintf@c& (0+255),w,b
 16853  01247A  0A25               	xorlw	37
 16854  01247C  B4D8               	btfsc	status,2,c
 16855  01247E  D00C               	goto	l9702
 16856                           
 16857                           ; BSR set to: 1
 16858                           ;doprnt.c: 549: {
 16859                           ;doprnt.c: 550: ((*sp++ = (c)));
 16860  012480  C188  FFD9         	movff	sprintf@sp,fsr2l
 16861  012484  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 16862  012488  0101               	movlb	1	; () banked
 16863  01248A  C1AC  FFDF         	movff	sprintf@c,indf2
 16864                           
 16865                           ; BSR set to: 1
 16866  01248E  0101               	movlb	1	; () banked
 16867  012490  4B88               	infsnz	sprintf@sp& (0+255),f,b
 16868  012492  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 16869                           
 16870                           ;doprnt.c: 551: continue;
 16871  012494  EFAC  F097         	goto	l10036
 16872  012498                     l9702:
 16873                           
 16874                           ; BSR set to: 1
 16875                           ;doprnt.c: 552: }
 16876                           ;doprnt.c: 555: width = 0;
 16877  012498  0E00               	movlw	0
 16878  01249A  0101               	movlb	1	; () banked
 16879  01249C  6FA7               	movwf	(sprintf@width+1)& (0+255),b
 16880  01249E  0E00               	movlw	0
 16881  0124A0  0101               	movlb	1	; () banked
 16882  0124A2  6FA6               	movwf	sprintf@width& (0+255),b
 16883                           
 16884                           ;doprnt.c: 557: flag = 0;
 16885  0124A4  0E00               	movlw	0
 16886  0124A6  0101               	movlb	1	; () banked
 16887  0124A8  6FAE               	movwf	(sprintf@flag+1)& (0+255),b
 16888  0124AA  0E00               	movlw	0
 16889  0124AC  0101               	movlb	1	; () banked
 16890  0124AE  6FAD               	movwf	sprintf@flag& (0+255),b
 16891  0124B0  D00E               	goto	l9714
 16892  0124B2                     l9704:
 16893                           
 16894                           ; BSR set to: 1
 16895                           ;doprnt.c: 563: flag |= 0x08;
 16896  0124B2  0101               	movlb	1	; () banked
 16897  0124B4  87AD               	bsf	sprintf@flag& (0+255),3,b
 16898  0124B6  D008               	goto	L14
 16899  0124B8                     l9706:
 16900                           
 16901                           ; BSR set to: 1
 16902                           ;doprnt.c: 570: flag |= 0x01;
 16903  0124B8  0101               	movlb	1	; () banked
 16904  0124BA  81AD               	bsf	sprintf@flag& (0+255),0,b
 16905  0124BC  D005               	goto	L14
 16906  0124BE                     l9708:
 16907                           
 16908                           ; BSR set to: 1
 16909                           ;doprnt.c: 583: flag |= 0x800;
 16910  0124BE  0101               	movlb	1	; () banked
 16911  0124C0  87AE               	bsf	(sprintf@flag+1)& (0+255),3,b
 16912  0124C2  D002               	goto	L14
 16913  0124C4                     l9710:
 16914                           
 16915                           ; BSR set to: 1
 16916                           ;doprnt.c: 589: flag |= 0x04;
 16917  0124C4  0101               	movlb	1	; () banked
 16918  0124C6  85AD               	bsf	sprintf@flag& (0+255),2,b
 16919  0124C8                     L14:
 16920                           
 16921                           ;doprnt.c: 590: f++;
 16922  0124C8  0101               	movlb	1	; () banked
 16923  0124CA  4B8A               	infsnz	sprintf@f& (0+255),f,b
 16924  0124CC  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
 16925  0124CE                     l9714:
 16926                           
 16927                           ; BSR set to: 1
 16928  0124CE  0101               	movlb	1	; () banked
 16929  0124D0  C18A  FFF6         	movff	sprintf@f,tblptrl
 16930  0124D4  0101               	movlb	1	; () banked
 16931  0124D6  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 16932  0124DA                     	if	0	;tblptru may be non-zero
 16933  0124DA                     	endif
 16934  0124DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16935  0124DA  0E00               	movlw	low (__mediumconst shr (0+16))
 16936  0124DC  6EF8               	movwf	tblptru,c
 16937  0124DE                     	endif
 16938  0124DE  0008               	tblrd		*
 16939  0124E0  50F5               	movf	tablat,w,c
 16940                           
 16941                           ; Switch size 1, requested type "space"
 16942                           ; Number of cases is 4, Range of values is 32 to 48
 16943                           ; switch strategies available:
 16944                           ; Name         Instructions Cycles
 16945                           ; simple_byte           13     7 (average)
 16946                           ;	Chosen strategy is simple_byte
 16947  0124E2  0A20               	xorlw	32	; case 32
 16948  0124E4  B4D8               	btfsc	status,2,c
 16949  0124E6  D7E8               	goto	l9706
 16950  0124E8  0A03               	xorlw	3	; case 35
 16951  0124EA  B4D8               	btfsc	status,2,c
 16952  0124EC  D7E8               	goto	l9708
 16953  0124EE  0A0E               	xorlw	14	; case 45
 16954  0124F0  B4D8               	btfsc	status,2,c
 16955  0124F2  D7DF               	goto	l9704
 16956  0124F4  0A1D               	xorlw	29	; case 48
 16957  0124F6  B4D8               	btfsc	status,2,c
 16958  0124F8  D7E5               	goto	l9710
 16959                           
 16960                           ; BSR set to: 1
 16961                           ;doprnt.c: 602: if(flag & 0x08)
 16962                           
 16963                           ; BSR set to: 1
 16964                           ;doprnt.c: 595: }
 16965                           
 16966                           ; BSR set to: 1
 16967                           ;doprnt.c: 594: break;
 16968  0124FA  0101               	movlb	1	; () banked
 16969  0124FC  A7AD               	btfss	sprintf@flag& (0+255),3,b
 16970  0124FE  D002               	goto	l9718
 16971                           
 16972                           ; BSR set to: 1
 16973                           ;doprnt.c: 603: flag &= ~0x04;
 16974  012500  0101               	movlb	1	; () banked
 16975  012502  95AD               	bcf	sprintf@flag& (0+255),2,b
 16976  012504                     l9718:
 16977                           
 16978                           ; BSR set to: 1
 16979                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 16980  012504  0101               	movlb	1	; () banked
 16981  012506  C18A  FFF6         	movff	sprintf@f,tblptrl
 16982  01250A  0101               	movlb	1	; () banked
 16983  01250C  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 16984  012510                     	if	0	;tblptru may be non-zero
 16985  012510                     	endif
 16986  012510                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16987  012510  0E00               	movlw	low (__mediumconst shr (0+16))
 16988  012512  6EF8               	movwf	tblptru,c
 16989  012514                     	endif
 16990  012514  0008               	tblrd		*
 16991  012516  50F5               	movf	tablat,w,c
 16992  012518  ECA9  F0B7         	call	_isdigit
 16993  01251C  A0D8               	btfss	status,0,c
 16994  01251E  D04C               	goto	l9730
 16995                           
 16996                           ;doprnt.c: 607: width = 0;
 16997  012520  0E00               	movlw	0
 16998  012522  0101               	movlb	1	; () banked
 16999  012524  6FA7               	movwf	(sprintf@width+1)& (0+255),b
 17000  012526  0E00               	movlw	0
 17001  012528  0101               	movlb	1	; () banked
 17002  01252A  6FA6               	movwf	sprintf@width& (0+255),b
 17003  01252C                     l9722:
 17004                           
 17005                           ;doprnt.c: 609: width *= 10;
 17006  01252C  C1A6  F17C         	movff	sprintf@width,___wmul@multiplier
 17007  012530  C1A7  F17D         	movff	sprintf@width+1,___wmul@multiplier+1
 17008  012534  0E00               	movlw	0
 17009  012536  0101               	movlb	1	; () banked
 17010  012538  6F7F               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17011  01253A  0E0A               	movlw	10
 17012  01253C  0101               	movlb	1	; () banked
 17013  01253E  6F7E               	movwf	___wmul@multiplicand& (0+255),b
 17014  012540  ECE6  F0B6         	call	___wmul	;wreg free
 17015  012544  0101               	movlb	1	; () banked
 17016  012546  C17C  F1A6         	movff	?___wmul,sprintf@width
 17017  01254A  0101               	movlb	1	; () banked
 17018  01254C  C17D  F1A7         	movff	?___wmul+1,sprintf@width+1
 17019                           
 17020                           ; BSR set to: 1
 17021                           ;doprnt.c: 610: width += *f++ - '0';
 17022  012550  0ED0               	movlw	208
 17023  012552  0101               	movlb	1	; () banked
 17024  012554  6F98               	movwf	??_sprintf& (0+255),b
 17025  012556  0EFF               	movlw	255
 17026  012558  6F99               	movwf	(??_sprintf+1)& (0+255),b
 17027  01255A  0101               	movlb	1	; () banked
 17028  01255C  C18A  FFF6         	movff	sprintf@f,tblptrl
 17029  012560  0101               	movlb	1	; () banked
 17030  012562  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 17031  012566                     	if	0	;tblptru may be non-zero
 17032  012566                     	endif
 17033  012566                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17034  012566  0E00               	movlw	low (__mediumconst shr (0+16))
 17035  012568  6EF8               	movwf	tblptru,c
 17036  01256A                     	endif
 17037  01256A  0008               	tblrd		*
 17038  01256C  50F5               	movf	tablat,w,c
 17039  01256E  0101               	movlb	1	; () banked
 17040  012570  6F9A               	movwf	(??_sprintf+2)& (0+255),b
 17041  012572  6B9B               	clrf	(??_sprintf+3)& (0+255),b
 17042  012574  0101               	movlb	1	; () banked
 17043  012576  5198               	movf	??_sprintf& (0+255),w,b
 17044  012578  0101               	movlb	1	; () banked
 17045  01257A  279A               	addwf	(??_sprintf+2)& (0+255),f,b
 17046  01257C  0101               	movlb	1	; () banked
 17047  01257E  5199               	movf	(??_sprintf+1)& (0+255),w,b
 17048  012580  0101               	movlb	1	; () banked
 17049  012582  239B               	addwfc	(??_sprintf+3)& (0+255),f,b
 17050  012584  0101               	movlb	1	; () banked
 17051  012586  519A               	movf	(??_sprintf+2)& (0+255),w,b
 17052  012588  0101               	movlb	1	; () banked
 17053  01258A  27A6               	addwf	sprintf@width& (0+255),f,b
 17054  01258C  0101               	movlb	1	; () banked
 17055  01258E  519B               	movf	(??_sprintf+3)& (0+255),w,b
 17056  012590  0101               	movlb	1	; () banked
 17057  012592  23A7               	addwfc	(sprintf@width+1)& (0+255),f,b
 17058                           
 17059                           ; BSR set to: 1
 17060  012594  0101               	movlb	1	; () banked
 17061  012596  4B8A               	infsnz	sprintf@f& (0+255),f,b
 17062  012598  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
 17063                           
 17064                           ; BSR set to: 1
 17065                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 17066  01259A  0101               	movlb	1	; () banked
 17067  01259C  C18A  FFF6         	movff	sprintf@f,tblptrl
 17068  0125A0  0101               	movlb	1	; () banked
 17069  0125A2  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 17070  0125A6                     	if	0	;tblptru may be non-zero
 17071  0125A6                     	endif
 17072  0125A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17073  0125A6  0E00               	movlw	low (__mediumconst shr (0+16))
 17074  0125A8  6EF8               	movwf	tblptru,c
 17075  0125AA                     	endif
 17076  0125AA  0008               	tblrd		*
 17077  0125AC  50F5               	movf	tablat,w,c
 17078  0125AE  ECA9  F0B7         	call	_isdigit
 17079  0125B2  A0D8               	btfss	status,0,c
 17080  0125B4  D021               	goto	l9738
 17081  0125B6  D7BA               	goto	l9722
 17082  0125B8                     l9730:
 17083  0125B8  0101               	movlb	1	; () banked
 17084  0125BA  C18A  FFF6         	movff	sprintf@f,tblptrl
 17085  0125BE  0101               	movlb	1	; () banked
 17086  0125C0  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 17087  0125C4                     	if	0	;tblptru may be non-zero
 17088  0125C4                     	endif
 17089  0125C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17090  0125C4  0E00               	movlw	low (__mediumconst shr (0+16))
 17091  0125C6  6EF8               	movwf	tblptru,c
 17092  0125C8                     	endif
 17093  0125C8  0008               	tblrd		*
 17094  0125CA  50F5               	movf	tablat,w,c
 17095  0125CC  0A2A               	xorlw	42
 17096  0125CE  A4D8               	btfss	status,2,c
 17097  0125D0  D013               	goto	l9738
 17098                           
 17099                           ; BSR set to: 1
 17100                           ;doprnt.c: 614: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 17101  0125D2  C1A3  FFD9         	movff	sprintf@ap,fsr2l
 17102  0125D6  C1A4  FFDA         	movff	sprintf@ap+1,fsr2h
 17103  0125DA  0101               	movlb	1	; () banked
 17104  0125DC  CFDE F1A6          	movff	postinc2,sprintf@width
 17105  0125E0  0101               	movlb	1	; () banked
 17106  0125E2  CFDD F1A7          	movff	postdec2,sprintf@width+1
 17107                           
 17108                           ; BSR set to: 1
 17109  0125E6  0E02               	movlw	2
 17110  0125E8  0101               	movlb	1	; () banked
 17111  0125EA  27A3               	addwf	sprintf@ap& (0+255),f,b
 17112  0125EC  0E00               	movlw	0
 17113  0125EE  0101               	movlb	1	; () banked
 17114  0125F0  23A4               	addwfc	(sprintf@ap+1)& (0+255),f,b
 17115                           
 17116                           ; BSR set to: 1
 17117                           ;doprnt.c: 615: f++;
 17118  0125F2  0101               	movlb	1	; () banked
 17119  0125F4  4B8A               	infsnz	sprintf@f& (0+255),f,b
 17120  0125F6  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
 17121  0125F8                     l9738:
 17122                           
 17123                           ;doprnt.c: 617: }
 17124                           ;doprnt.c: 620: if(*f == '.') {
 17125  0125F8  0101               	movlb	1	; () banked
 17126  0125FA  C18A  FFF6         	movff	sprintf@f,tblptrl
 17127  0125FE  0101               	movlb	1	; () banked
 17128  012600  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 17129  012604                     	if	0	;tblptru may be non-zero
 17130  012604                     	endif
 17131  012604                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17132  012604  0E00               	movlw	low (__mediumconst shr (0+16))
 17133  012606  6EF8               	movwf	tblptru,c
 17134  012608                     	endif
 17135  012608  0008               	tblrd		*
 17136  01260A  50F5               	movf	tablat,w,c
 17137  01260C  0A2E               	xorlw	46
 17138  01260E  A4D8               	btfss	status,2,c
 17139  012610  D04D               	goto	l9758
 17140                           
 17141                           ; BSR set to: 1
 17142                           ;doprnt.c: 621: flag |= 0x4000;
 17143  012612  0101               	movlb	1	; () banked
 17144  012614  8DAE               	bsf	(sprintf@flag+1)& (0+255),6,b
 17145                           
 17146                           ;doprnt.c: 622: f++;
 17147  012616  0101               	movlb	1	; () banked
 17148  012618  4B8A               	infsnz	sprintf@f& (0+255),f,b
 17149  01261A  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
 17150                           
 17151                           ; BSR set to: 1
 17152                           ;doprnt.c: 624: if(*f == '*') {
 17153  01261C  0101               	movlb	1	; () banked
 17154  01261E  C18A  FFF6         	movff	sprintf@f,tblptrl
 17155  012622  0101               	movlb	1	; () banked
 17156  012624  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 17157  012628                     	if	0	;tblptru may be non-zero
 17158  012628                     	endif
 17159  012628                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17160  012628  0E00               	movlw	low (__mediumconst shr (0+16))
 17161  01262A  6EF8               	movwf	tblptru,c
 17162  01262C                     	endif
 17163  01262C  0008               	tblrd		*
 17164  01262E  50F5               	movf	tablat,w,c
 17165  012630  0A2A               	xorlw	42
 17166  012632  A4D8               	btfss	status,2,c
 17167  012634  D011               	goto	l9750
 17168                           
 17169                           ; BSR set to: 1
 17170                           ;doprnt.c: 625: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 17171  012636  C1A3  FFD9         	movff	sprintf@ap,fsr2l
 17172  01263A  C1A4  FFDA         	movff	sprintf@ap+1,fsr2h
 17173  01263E  50DF               	movf	indf2,w,c
 17174  012640  0101               	movlb	1	; () banked
 17175  012642  6FA5               	movwf	sprintf@prec& (0+255),b
 17176                           
 17177                           ; BSR set to: 1
 17178  012644  0E02               	movlw	2
 17179  012646  0101               	movlb	1	; () banked
 17180  012648  27A3               	addwf	sprintf@ap& (0+255),f,b
 17181  01264A  0E00               	movlw	0
 17182  01264C  0101               	movlb	1	; () banked
 17183  01264E  23A4               	addwfc	(sprintf@ap+1)& (0+255),f,b
 17184                           
 17185                           ; BSR set to: 1
 17186                           ;doprnt.c: 626: f++;
 17187  012650  0101               	movlb	1	; () banked
 17188  012652  4B8A               	infsnz	sprintf@f& (0+255),f,b
 17189  012654  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
 17190                           
 17191                           ;doprnt.c: 627: } else
 17192  012656  D0D8               	goto	l9814
 17193  012658                     l9750:
 17194                           
 17195                           ; BSR set to: 1
 17196                           ;doprnt.c: 629: {
 17197                           ;doprnt.c: 630: prec = 0;
 17198  012658  0E00               	movlw	0
 17199  01265A  0101               	movlb	1	; () banked
 17200  01265C  6FA5               	movwf	sprintf@prec& (0+255),b
 17201                           
 17202                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 17203  01265E  D017               	goto	l9756
 17204  012660                     l9752:
 17205                           
 17206                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 17207  012660  0101               	movlb	1	; () banked
 17208  012662  C18A  FFF6         	movff	sprintf@f,tblptrl
 17209  012666  0101               	movlb	1	; () banked
 17210  012668  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 17211  01266C                     	if	0	;tblptru may be non-zero
 17212  01266C                     	endif
 17213  01266C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17214  01266C  0E00               	movlw	low (__mediumconst shr (0+16))
 17215  01266E  6EF8               	movwf	tblptru,c
 17216  012670                     	endif
 17217  012670  0008               	tblrd		*
 17218  012672  CFF5 F198          	movff	tablat,??_sprintf
 17219  012676  0101               	movlb	1	; () banked
 17220  012678  51A5               	movf	sprintf@prec& (0+255),w,b
 17221  01267A  0D0A               	mullw	10
 17222  01267C  50F3               	movf	prodl,w,c
 17223  01267E  0101               	movlb	1	; () banked
 17224  012680  2598               	addwf	??_sprintf& (0+255),w,b
 17225  012682  0FD0               	addlw	208
 17226  012684  0101               	movlb	1	; () banked
 17227  012686  6FA5               	movwf	sprintf@prec& (0+255),b
 17228                           
 17229                           ; BSR set to: 1
 17230  012688  0101               	movlb	1	; () banked
 17231  01268A  4B8A               	infsnz	sprintf@f& (0+255),f,b
 17232  01268C  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
 17233  01268E                     l9756:
 17234                           
 17235                           ; BSR set to: 1
 17236  01268E  0101               	movlb	1	; () banked
 17237  012690  C18A  FFF6         	movff	sprintf@f,tblptrl
 17238  012694  0101               	movlb	1	; () banked
 17239  012696  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 17240  01269A                     	if	0	;tblptru may be non-zero
 17241  01269A                     	endif
 17242  01269A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17243  01269A  0E00               	movlw	low (__mediumconst shr (0+16))
 17244  01269C  6EF8               	movwf	tblptru,c
 17245  01269E                     	endif
 17246  01269E  0008               	tblrd		*
 17247  0126A0  50F5               	movf	tablat,w,c
 17248  0126A2  ECA9  F0B7         	call	_isdigit
 17249  0126A6  A0D8               	btfss	status,0,c
 17250  0126A8  D0AF               	goto	l9814
 17251  0126AA  D7DA               	goto	l9752
 17252  0126AC                     l9758:
 17253                           
 17254                           ;doprnt.c: 635: prec = 0;
 17255  0126AC  0E00               	movlw	0
 17256  0126AE  0101               	movlb	1	; () banked
 17257  0126B0  6FA5               	movwf	sprintf@prec& (0+255),b
 17258  0126B2  D0AA               	goto	l9814
 17259  0126B4                     l9760:
 17260                           
 17261                           ; BSR set to: 1
 17262                           ;doprnt.c: 700: flag |= 0x40;
 17263  0126B4  0101               	movlb	1	; () banked
 17264  0126B6  8DAD               	bsf	sprintf@flag& (0+255),6,b
 17265                           
 17266                           ;doprnt.c: 702: break;
 17267  0126B8  D0D1               	goto	l9816
 17268  0126BA                     l9762:
 17269                           
 17270                           ; BSR set to: 1
 17271                           ;doprnt.c: 723: flag |= 0x20;
 17272  0126BA  0101               	movlb	1	; () banked
 17273  0126BC  8BAD               	bsf	sprintf@flag& (0+255),5,b
 17274  0126BE                     l1413:
 17275                           
 17276                           ; BSR set to: 1
 17277                           ;doprnt.c: 730: flag |= 0x80;
 17278  0126BE  0101               	movlb	1	; () banked
 17279  0126C0  8FAD               	bsf	sprintf@flag& (0+255),7,b
 17280                           
 17281                           ;doprnt.c: 732: break;
 17282  0126C2  D0CC               	goto	l9816
 17283  0126C4                     l9764:
 17284                           
 17285                           ; BSR set to: 1
 17286                           ;doprnt.c: 762: if(prec && prec < _val._str._len)
 17287  0126C4  0101               	movlb	1	; () banked
 17288  0126C6  51A5               	movf	sprintf@prec& (0+255),w,b
 17289  0126C8  B4D8               	btfsc	status,2,c
 17290  0126CA  D01A               	goto	l9770
 17291                           
 17292                           ; BSR set to: 1
 17293  0126CC  0101               	movlb	1	; () banked
 17294  0126CE  C1A5  F198         	movff	sprintf@prec,??_sprintf
 17295  0126D2  0101               	movlb	1	; () banked
 17296  0126D4  6B99               	clrf	(??_sprintf+1)& (0+255),b
 17297  0126D6  BF98               	btfsc	??_sprintf& (0+255),7,b
 17298  0126D8  0799               	decf	(??_sprintf+1)& (0+255),f,b
 17299  0126DA  0101               	movlb	1	; () banked
 17300  0126DC  51AA               	movf	(sprintf@_val+2)& (0+255),w,b
 17301  0126DE  0101               	movlb	1	; () banked
 17302  0126E0  5D98               	subwf	??_sprintf& (0+255),w,b
 17303  0126E2  0101               	movlb	1	; () banked
 17304  0126E4  51AB               	movf	(sprintf@_val+3)& (0+255),w,b
 17305  0126E6  0101               	movlb	1	; () banked
 17306  0126E8  5999               	subwfb	(??_sprintf+1)& (0+255),w,b
 17307  0126EA  B0D8               	btfsc	status,0,c
 17308  0126EC  D009               	goto	l9770
 17309                           
 17310                           ; BSR set to: 1
 17311                           ;doprnt.c: 763: _val._str._len = prec;
 17312  0126EE  0101               	movlb	1	; () banked
 17313  0126F0  51A5               	movf	sprintf@prec& (0+255),w,b
 17314  0126F2  0101               	movlb	1	; () banked
 17315  0126F4  6FAA               	movwf	(sprintf@_val+2)& (0+255),b
 17316  0126F6  0101               	movlb	1	; () banked
 17317  0126F8  6BAB               	clrf	(sprintf@_val+3)& (0+255),b
 17318  0126FA  0101               	movlb	1	; () banked
 17319  0126FC  BFAA               	btfsc	(sprintf@_val+2)& (0+255),7,b
 17320  0126FE  07AB               	decf	(sprintf@_val+3)& (0+255),f,b
 17321  012700                     l9770:
 17322                           
 17323                           ; BSR set to: 1
 17324                           ;doprnt.c: 766: if(width > _val._str._len)
 17325  012700  0101               	movlb	1	; () banked
 17326  012702  51A6               	movf	sprintf@width& (0+255),w,b
 17327  012704  0101               	movlb	1	; () banked
 17328  012706  5DAA               	subwf	(sprintf@_val+2)& (0+255),w,b
 17329  012708  0101               	movlb	1	; () banked
 17330  01270A  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 17331  01270C  0101               	movlb	1	; () banked
 17332  01270E  59AB               	subwfb	(sprintf@_val+3)& (0+255),w,b
 17333  012710  B0D8               	btfsc	status,0,c
 17334  012712  D00A               	goto	l9774
 17335                           
 17336                           ; BSR set to: 1
 17337                           ;doprnt.c: 767: width -= _val._str._len;
 17338  012714  0101               	movlb	1	; () banked
 17339  012716  EE21  F0AA         	lfsr	2,sprintf@_val+2
 17340  01271A  50DE               	movf	postinc2,w,c
 17341  01271C  0101               	movlb	1	; () banked
 17342  01271E  5FA6               	subwf	sprintf@width& (0+255),f,b
 17343  012720  50DD               	movf	postdec2,w,c
 17344  012722  0101               	movlb	1	; () banked
 17345  012724  5BA7               	subwfb	(sprintf@width+1)& (0+255),f,b
 17346  012726  D006               	goto	l9776
 17347  012728                     l9774:
 17348                           
 17349                           ; BSR set to: 1
 17350                           ;doprnt.c: 768: else
 17351                           ;doprnt.c: 769: width = 0;
 17352  012728  0E00               	movlw	0
 17353  01272A  0101               	movlb	1	; () banked
 17354  01272C  6FA7               	movwf	(sprintf@width+1)& (0+255),b
 17355  01272E  0E00               	movlw	0
 17356  012730  0101               	movlb	1	; () banked
 17357  012732  6FA6               	movwf	sprintf@width& (0+255),b
 17358  012734                     l9776:
 17359                           
 17360                           ; BSR set to: 1
 17361                           ;doprnt.c: 771: if(!(flag & 0x08))
 17362  012734  0101               	movlb	1	; () banked
 17363  012736  A7AD               	btfss	sprintf@flag& (0+255),3,b
 17364  012738  D00A               	goto	l9784
 17365  01273A  D024               	goto	l9792
 17366  01273C                     l9780:
 17367                           
 17368                           ; BSR set to: 1
 17369                           ;doprnt.c: 774: ((*sp++ = (' ')));
 17370  01273C  C188  FFD9         	movff	sprintf@sp,fsr2l
 17371  012740  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 17372  012744  0E20               	movlw	32
 17373  012746  6EDF               	movwf	indf2,c
 17374                           
 17375                           ; BSR set to: 1
 17376  012748  0101               	movlb	1	; () banked
 17377  01274A  4B88               	infsnz	sprintf@sp& (0+255),f,b
 17378  01274C  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 17379  01274E                     l9784:
 17380                           
 17381                           ; BSR set to: 1
 17382  01274E  0101               	movlb	1	; () banked
 17383  012750  07A6               	decf	sprintf@width& (0+255),f,b
 17384  012752  A0D8               	btfss	status,0,c
 17385  012754  07A7               	decf	(sprintf@width+1)& (0+255),f,b
 17386  012756  0101               	movlb	1	; () banked
 17387  012758  29A6               	incf	sprintf@width& (0+255),w,b
 17388  01275A  B4D8               	btfsc	status,2,c
 17389  01275C  29A7               	incf	(sprintf@width+1)& (0+255),w,b
 17390  01275E  B4D8               	btfsc	status,2,c
 17391  012760  D011               	goto	l9792
 17392  012762  D7EC               	goto	l9780
 17393  012764                     l9786:
 17394                           
 17395                           ; BSR set to: 1
 17396                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
 17397  012764  C1A8  FFD9         	movff	sprintf@_val,fsr2l
 17398  012768  C1A9  FFDA         	movff	sprintf@_val+1,fsr2h
 17399  01276C  C188  FFE1         	movff	sprintf@sp,fsr1l
 17400  012770  C189  FFE2         	movff	sprintf@sp+1,fsr1h
 17401  012774  CFDF FFE7          	movff	indf2,indf1
 17402                           
 17403                           ; BSR set to: 1
 17404  012778  0101               	movlb	1	; () banked
 17405  01277A  4BA8               	infsnz	sprintf@_val& (0+255),f,b
 17406  01277C  2BA9               	incf	(sprintf@_val+1)& (0+255),f,b
 17407                           
 17408                           ; BSR set to: 1
 17409  01277E  0101               	movlb	1	; () banked
 17410  012780  4B88               	infsnz	sprintf@sp& (0+255),f,b
 17411  012782  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 17412  012784                     l9792:
 17413                           
 17414                           ; BSR set to: 1
 17415  012784  0101               	movlb	1	; () banked
 17416  012786  07AA               	decf	(sprintf@_val+2)& (0+255),f,b
 17417  012788  A0D8               	btfss	status,0,c
 17418  01278A  07AB               	decf	(sprintf@_val+3)& (0+255),f,b
 17419  01278C  0101               	movlb	1	; () banked
 17420  01278E  29AA               	incf	(sprintf@_val+2)& (0+255),w,b
 17421  012790  B4D8               	btfsc	status,2,c
 17422  012792  29AB               	incf	(sprintf@_val+3)& (0+255),w,b
 17423  012794  A4D8               	btfss	status,2,c
 17424  012796  D7E6               	goto	l9786
 17425                           
 17426                           ; BSR set to: 1
 17427                           ;doprnt.c: 779: if(flag & 0x08)
 17428  012798  0101               	movlb	1	; () banked
 17429  01279A  B7AD               	btfsc	sprintf@flag& (0+255),3,b
 17430  01279C  D00A               	goto	l9800
 17431  01279E  D3DC               	goto	l10036
 17432  0127A0                     l9796:
 17433                           
 17434                           ; BSR set to: 1
 17435                           ;doprnt.c: 781: ((*sp++ = (' ')));
 17436  0127A0  C188  FFD9         	movff	sprintf@sp,fsr2l
 17437  0127A4  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 17438  0127A8  0E20               	movlw	32
 17439  0127AA  6EDF               	movwf	indf2,c
 17440                           
 17441                           ; BSR set to: 1
 17442  0127AC  0101               	movlb	1	; () banked
 17443  0127AE  4B88               	infsnz	sprintf@sp& (0+255),f,b
 17444  0127B0  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 17445  0127B2                     l9800:
 17446                           
 17447                           ; BSR set to: 1
 17448  0127B2  0101               	movlb	1	; () banked
 17449  0127B4  07A6               	decf	sprintf@width& (0+255),f,b
 17450  0127B6  A0D8               	btfss	status,0,c
 17451  0127B8  07A7               	decf	(sprintf@width+1)& (0+255),f,b
 17452  0127BA  0101               	movlb	1	; () banked
 17453  0127BC  29A6               	incf	sprintf@width& (0+255),w,b
 17454  0127BE  B4D8               	btfsc	status,2,c
 17455  0127C0  29A7               	incf	(sprintf@width+1)& (0+255),w,b
 17456  0127C2  B4D8               	btfsc	status,2,c
 17457  0127C4  D3C9               	goto	l10036
 17458  0127C6  D7EC               	goto	l9796
 17459  0127C8                     l9802:
 17460                           
 17461                           ; BSR set to: 1
 17462                           ;doprnt.c: 808: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 17463  0127C8  C1A3  FFD9         	movff	sprintf@ap,fsr2l
 17464  0127CC  C1A4  FFDA         	movff	sprintf@ap+1,fsr2h
 17465  0127D0  50DF               	movf	indf2,w,c
 17466  0127D2  0101               	movlb	1	; () banked
 17467  0127D4  6FAC               	movwf	sprintf@c& (0+255),b
 17468                           
 17469                           ; BSR set to: 1
 17470  0127D6  0E02               	movlw	2
 17471  0127D8  0101               	movlb	1	; () banked
 17472  0127DA  27A3               	addwf	sprintf@ap& (0+255),f,b
 17473  0127DC  0E00               	movlw	0
 17474  0127DE  0101               	movlb	1	; () banked
 17475  0127E0  23A4               	addwfc	(sprintf@ap+1)& (0+255),f,b
 17476  0127E2                     l9806:
 17477                           
 17478                           ; BSR set to: 1
 17479                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
 17480  0127E2  0101               	movlb	1	; () banked
 17481  0127E4  0E01               	movlw	high sprintf@c
 17482  0127E6  0101               	movlb	1	; () banked
 17483  0127E8  6FA9               	movwf	(sprintf@_val+1)& (0+255),b
 17484  0127EA  0101               	movlb	1	; () banked
 17485  0127EC  0EAC               	movlw	low sprintf@c
 17486  0127EE  0101               	movlb	1	; () banked
 17487  0127F0  6FA8               	movwf	sprintf@_val& (0+255),b
 17488                           
 17489                           ; BSR set to: 1
 17490                           ;doprnt.c: 815: _val._str._len = 1;
 17491  0127F2  0E00               	movlw	0
 17492  0127F4  0101               	movlb	1	; () banked
 17493  0127F6  6FAB               	movwf	(sprintf@_val+3)& (0+255),b
 17494  0127F8  0E01               	movlw	1
 17495  0127FA  0101               	movlb	1	; () banked
 17496  0127FC  6FAA               	movwf	(sprintf@_val+2)& (0+255),b
 17497                           
 17498                           ;doprnt.c: 816: goto dostring;
 17499  0127FE  D762               	goto	l9764
 17500  012800                     l9810:
 17501                           
 17502                           ; BSR set to: 1
 17503                           ;doprnt.c: 827: flag |= 0xC0;
 17504  012800  0EC0               	movlw	192
 17505  012802  0101               	movlb	1	; () banked
 17506  012804  13AD               	iorwf	sprintf@flag& (0+255),f,b
 17507                           
 17508                           ;doprnt.c: 828: break;
 17509  012806  D02A               	goto	l9816
 17510  012808                     l9814:
 17511  012808  0101               	movlb	1	; () banked
 17512  01280A  C18A  FFF6         	movff	sprintf@f,tblptrl
 17513  01280E  0101               	movlb	1	; () banked
 17514  012810  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 17515  012814  0101               	movlb	1	; () banked
 17516  012816  4B8A               	infsnz	sprintf@f& (0+255),f,b
 17517  012818  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
 17518  01281A                     	if	0	;tblptru may be non-zero
 17519  01281A                     	endif
 17520  01281A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17521  01281A  0E00               	movlw	low (__mediumconst shr (0+16))
 17522  01281C  6EF8               	movwf	tblptru,c
 17523  01281E                     	endif
 17524  01281E  0008               	tblrd		*
 17525  012820  0101               	movlb	1	; () banked
 17526  012822  CFF5 F1AC          	movff	tablat,sprintf@c
 17527  012826  0101               	movlb	1	; () banked
 17528  012828  51AC               	movf	sprintf@c& (0+255),w,b
 17529                           
 17530                           ; Switch size 1, requested type "space"
 17531                           ; Number of cases is 8, Range of values is 0 to 120
 17532                           ; switch strategies available:
 17533                           ; Name         Instructions Cycles
 17534                           ; simple_byte           25    13 (average)
 17535                           ;	Chosen strategy is simple_byte
 17536  01282A  0A00               	xorlw	0	; case 0
 17537  01282C  B4D8               	btfsc	status,2,c
 17538  01282E  D3A7               	goto	l10038
 17539  012830  0A58               	xorlw	88	; case 88
 17540  012832  B4D8               	btfsc	status,2,c
 17541  012834  D742               	goto	l9762
 17542  012836  0A3B               	xorlw	59	; case 99
 17543  012838  B4D8               	btfsc	status,2,c
 17544  01283A  D7C6               	goto	l9802
 17545  01283C  0A07               	xorlw	7	; case 100
 17546  01283E  B4D8               	btfsc	status,2,c
 17547  012840  D00D               	goto	l9816
 17548  012842  0A0D               	xorlw	13	; case 105
 17549  012844  B4D8               	btfsc	status,2,c
 17550  012846  D00A               	goto	l9816
 17551  012848  0A06               	xorlw	6	; case 111
 17552  01284A  B4D8               	btfsc	status,2,c
 17553  01284C  D733               	goto	l9760
 17554  01284E  0A1A               	xorlw	26	; case 117
 17555  012850  B4D8               	btfsc	status,2,c
 17556  012852  D7D6               	goto	l9810
 17557  012854  0A0D               	xorlw	13	; case 120
 17558  012856  B4D8               	btfsc	status,2,c
 17559  012858  D732               	goto	l1413
 17560  01285A  D7C3               	goto	l9806
 17561  01285C                     l9816:
 17562                           
 17563                           ; BSR set to: 1
 17564                           ;doprnt.c: 1260: if((flag & (0xC0)) == 0x00)
 17565  01285C  0EC0               	movlw	192
 17566  01285E  0101               	movlb	1	; () banked
 17567  012860  15AD               	andwf	sprintf@flag& (0+255),w,b
 17568  012862  0101               	movlb	1	; () banked
 17569  012864  6F98               	movwf	??_sprintf& (0+255),b
 17570  012866  0E00               	movlw	0
 17571  012868  0101               	movlb	1	; () banked
 17572  01286A  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
 17573  01286C  0101               	movlb	1	; () banked
 17574  01286E  6F99               	movwf	(??_sprintf+1)& (0+255),b
 17575  012870  0101               	movlb	1	; () banked
 17576  012872  5199               	movf	(??_sprintf+1)& (0+255),w,b
 17577  012874  1198               	iorwf	??_sprintf& (0+255),w,b
 17578  012876  A4D8               	btfss	status,2,c
 17579  012878  D025               	goto	l9828
 17580                           
 17581                           ; BSR set to: 1
 17582                           ;doprnt.c: 1262: {
 17583                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 17584  01287A  C1A3  FFD9         	movff	sprintf@ap,fsr2l
 17585  01287E  C1A4  FFDA         	movff	sprintf@ap+1,fsr2h
 17586  012882  0101               	movlb	1	; () banked
 17587  012884  CFDE F1A8          	movff	postinc2,sprintf@_val
 17588  012888  0101               	movlb	1	; () banked
 17589  01288A  CFDD F1A9          	movff	postdec2,sprintf@_val+1
 17590                           
 17591                           ; BSR set to: 1
 17592  01288E  0E02               	movlw	2
 17593  012890  0101               	movlb	1	; () banked
 17594  012892  27A3               	addwf	sprintf@ap& (0+255),f,b
 17595  012894  0E00               	movlw	0
 17596  012896  0101               	movlb	1	; () banked
 17597  012898  23A4               	addwfc	(sprintf@ap+1)& (0+255),f,b
 17598                           
 17599                           ; BSR set to: 1
 17600                           ;doprnt.c: 1270: if((int)_val._val < 0) {
 17601  01289A  0101               	movlb	1	; () banked
 17602  01289C  51A9               	movf	(sprintf@_val+1)& (0+255),w,b
 17603  01289E  0A80               	xorlw	128
 17604  0128A0  6EF3               	movwf	prodl,c
 17605  0128A2  0E80               	movlw	128
 17606  0128A4  5CF3               	subwf	prodl,w,c
 17607  0128A6  0E00               	movlw	0
 17608  0128A8  B4D8               	btfsc	status,2,c
 17609  0128AA  5DA8               	subwf	sprintf@_val& (0+255),w,b
 17610  0128AC  B0D8               	btfsc	status,0,c
 17611  0128AE  D01A               	goto	l9832
 17612                           
 17613                           ; BSR set to: 1
 17614                           ;doprnt.c: 1271: flag |= 0x03;
 17615  0128B0  0E03               	movlw	3
 17616  0128B2  0101               	movlb	1	; () banked
 17617  0128B4  13AD               	iorwf	sprintf@flag& (0+255),f,b
 17618                           
 17619                           ; BSR set to: 1
 17620                           ;doprnt.c: 1272: _val._val = -_val._val;
 17621  0128B6  0101               	movlb	1	; () banked
 17622  0128B8  6DA8               	negf	sprintf@_val& (0+255),b
 17623  0128BA  0101               	movlb	1	; () banked
 17624  0128BC  1FA9               	comf	(sprintf@_val+1)& (0+255),f,b
 17625  0128BE  B0D8               	btfsc	status,0,c
 17626  0128C0  2BA9               	incf	(sprintf@_val+1)& (0+255),f,b
 17627  0128C2  D010               	goto	l9832
 17628  0128C4                     l9828:
 17629                           
 17630                           ; BSR set to: 1
 17631                           ;doprnt.c: 1277: else
 17632                           ;doprnt.c: 1282: {
 17633                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 17634  0128C4  C1A3  FFD9         	movff	sprintf@ap,fsr2l
 17635  0128C8  C1A4  FFDA         	movff	sprintf@ap+1,fsr2h
 17636  0128CC  0101               	movlb	1	; () banked
 17637  0128CE  CFDE F1A8          	movff	postinc2,sprintf@_val
 17638  0128D2  0101               	movlb	1	; () banked
 17639  0128D4  CFDD F1A9          	movff	postdec2,sprintf@_val+1
 17640                           
 17641                           ; BSR set to: 1
 17642  0128D8  0E02               	movlw	2
 17643  0128DA  0101               	movlb	1	; () banked
 17644  0128DC  27A3               	addwf	sprintf@ap& (0+255),f,b
 17645  0128DE  0E00               	movlw	0
 17646  0128E0  0101               	movlb	1	; () banked
 17647  0128E2  23A4               	addwfc	(sprintf@ap+1)& (0+255),f,b
 17648  0128E4                     l9832:
 17649                           
 17650                           ; BSR set to: 1
 17651                           ;doprnt.c: 1296: }
 17652                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 17653  0128E4  0101               	movlb	1	; () banked
 17654  0128E6  67A5               	tstfsz	sprintf@prec& (0+255),b
 17655  0128E8  D07D               	goto	l9882
 17656                           
 17657                           ; BSR set to: 1
 17658  0128EA  0101               	movlb	1	; () banked
 17659  0128EC  51A9               	movf	(sprintf@_val+1)& (0+255),w,b
 17660  0128EE  11A8               	iorwf	sprintf@_val& (0+255),w,b
 17661  0128F0  A4D8               	btfss	status,2,c
 17662  0128F2  D078               	goto	l9882
 17663                           
 17664                           ; BSR set to: 1
 17665                           ;doprnt.c: 1300: prec++;
 17666  0128F4  0101               	movlb	1	; () banked
 17667  0128F6  2BA5               	incf	sprintf@prec& (0+255),f,b
 17668  0128F8  D075               	goto	l9882
 17669  0128FA                     l9838:
 17670                           
 17671                           ; BSR set to: 1
 17672                           ;doprnt.c: 1311: case 0xC0:
 17673                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 17674  0128FA  0E01               	movlw	1
 17675  0128FC  0101               	movlb	1	; () banked
 17676  0128FE  6FAC               	movwf	sprintf@c& (0+255),b
 17677  012900                     
 17678                           ; BSR set to: 1
 17679  012900  0101               	movlb	1	; () banked
 17680  012902  51AC               	movf	sprintf@c& (0+255),w,b
 17681  012904  0A05               	xorlw	5
 17682  012906  B4D8               	btfsc	status,2,c
 17683  012908  D07C               	goto	l9884
 17684                           
 17685                           ; BSR set to: 1
 17686                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
 17687                           
 17688                           ; BSR set to: 1
 17689                           
 17690                           ; BSR set to: 1
 17691  01290A  0101               	movlb	1	; () banked
 17692  01290C  51AC               	movf	sprintf@c& (0+255),w,b
 17693  01290E  0D02               	mullw	2
 17694  012910  0EFB               	movlw	low _dpowers
 17695  012912  24F3               	addwf	prodl,w,c
 17696  012914  6EF6               	movwf	tblptrl,c
 17697  012916  0EEF               	movlw	high _dpowers
 17698  012918  20F4               	addwfc	prodh,w,c
 17699  01291A  6EF7               	movwf	tblptrh,c
 17700  01291C                     	if	1	;There are 3 active tblptr bytes
 17701  01291C  6AF8               	clrf	tblptru,c
 17702  01291E  0E00               	movlw	low (__mediumconst shr (0+16))
 17703  012920  22F8               	addwfc	tblptru,f,c
 17704  012922                     	endif
 17705  012922  0009               	tblrd		*+
 17706  012924  CFF5 F198          	movff	tablat,??_sprintf
 17707  012928  0009               	tblrd		*+
 17708  01292A  CFF5 F199          	movff	tablat,??_sprintf+1
 17709  01292E  0101               	movlb	1	; () banked
 17710  012930  5198               	movf	??_sprintf& (0+255),w,b
 17711  012932  0101               	movlb	1	; () banked
 17712  012934  5DA8               	subwf	sprintf@_val& (0+255),w,b
 17713  012936  0101               	movlb	1	; () banked
 17714  012938  5199               	movf	(??_sprintf+1)& (0+255),w,b
 17715  01293A  0101               	movlb	1	; () banked
 17716  01293C  59A9               	subwfb	(sprintf@_val+1)& (0+255),w,b
 17717  01293E  A0D8               	btfss	status,0,c
 17718  012940  D060               	goto	l9884
 17719                           
 17720                           ; BSR set to: 1
 17721                           
 17722                           ; BSR set to: 1
 17723                           
 17724                           ; BSR set to: 1
 17725                           ;doprnt.c: 1316: break;
 17726  012942  0101               	movlb	1	; () banked
 17727  012944  2BAC               	incf	sprintf@c& (0+255),f,b
 17728  012946  D7DC               	goto	L15
 17729  012948                     l9852:
 17730                           
 17731                           ; BSR set to: 1
 17732                           ;doprnt.c: 1325: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 17733  012948  0E01               	movlw	1
 17734  01294A  0101               	movlb	1	; () banked
 17735  01294C  6FAC               	movwf	sprintf@c& (0+255),b
 17736  01294E                     
 17737                           ; BSR set to: 1
 17738  01294E  0101               	movlb	1	; () banked
 17739  012950  51AC               	movf	sprintf@c& (0+255),w,b
 17740  012952  0A04               	xorlw	4
 17741  012954  B4D8               	btfsc	status,2,c
 17742  012956  D055               	goto	l9884
 17743                           
 17744                           ; BSR set to: 1
 17745                           ;doprnt.c: 1326: if(_val._val < hexpowers[c])
 17746                           
 17747                           ; BSR set to: 1
 17748                           
 17749                           ; BSR set to: 1
 17750  012958  0101               	movlb	1	; () banked
 17751  01295A  51AC               	movf	sprintf@c& (0+255),w,b
 17752  01295C  0D02               	mullw	2
 17753  01295E  0E05               	movlw	low _hexpowers
 17754  012960  24F3               	addwf	prodl,w,c
 17755  012962  6EF6               	movwf	tblptrl,c
 17756  012964  0EF0               	movlw	high _hexpowers
 17757  012966  20F4               	addwfc	prodh,w,c
 17758  012968  6EF7               	movwf	tblptrh,c
 17759  01296A                     	if	1	;There are 3 active tblptr bytes
 17760  01296A  6AF8               	clrf	tblptru,c
 17761  01296C  0E00               	movlw	low (__mediumconst shr (0+16))
 17762  01296E  22F8               	addwfc	tblptru,f,c
 17763  012970                     	endif
 17764  012970  0009               	tblrd		*+
 17765  012972  CFF5 F198          	movff	tablat,??_sprintf
 17766  012976  0009               	tblrd		*+
 17767  012978  CFF5 F199          	movff	tablat,??_sprintf+1
 17768  01297C  0101               	movlb	1	; () banked
 17769  01297E  5198               	movf	??_sprintf& (0+255),w,b
 17770  012980  0101               	movlb	1	; () banked
 17771  012982  5DA8               	subwf	sprintf@_val& (0+255),w,b
 17772  012984  0101               	movlb	1	; () banked
 17773  012986  5199               	movf	(??_sprintf+1)& (0+255),w,b
 17774  012988  0101               	movlb	1	; () banked
 17775  01298A  59A9               	subwfb	(sprintf@_val+1)& (0+255),w,b
 17776  01298C  A0D8               	btfss	status,0,c
 17777  01298E  D039               	goto	l9884
 17778                           
 17779                           ; BSR set to: 1
 17780                           
 17781                           ; BSR set to: 1
 17782                           
 17783                           ; BSR set to: 1
 17784                           ;doprnt.c: 1327: break;
 17785  012990  0101               	movlb	1	; () banked
 17786  012992  2BAC               	incf	sprintf@c& (0+255),f,b
 17787  012994  D7DC               	goto	L16
 17788  012996                     l9866:
 17789                           
 17790                           ; BSR set to: 1
 17791                           ;doprnt.c: 1337: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 17792  012996  0E01               	movlw	1
 17793  012998  0101               	movlb	1	; () banked
 17794  01299A  6FAC               	movwf	sprintf@c& (0+255),b
 17795  01299C                     
 17796                           ; BSR set to: 1
 17797  01299C  0101               	movlb	1	; () banked
 17798  01299E  51AC               	movf	sprintf@c& (0+255),w,b
 17799  0129A0  0A06               	xorlw	6
 17800  0129A2  B4D8               	btfsc	status,2,c
 17801  0129A4  D02E               	goto	l9884
 17802                           
 17803                           ; BSR set to: 1
 17804                           ;doprnt.c: 1338: if(_val._val < octpowers[c])
 17805                           
 17806                           ; BSR set to: 1
 17807                           
 17808                           ; BSR set to: 1
 17809  0129A6  0101               	movlb	1	; () banked
 17810  0129A8  51AC               	movf	sprintf@c& (0+255),w,b
 17811  0129AA  0D02               	mullw	2
 17812  0129AC  0EEF               	movlw	low _octpowers
 17813  0129AE  24F3               	addwf	prodl,w,c
 17814  0129B0  6EF6               	movwf	tblptrl,c
 17815  0129B2  0EEF               	movlw	high _octpowers
 17816  0129B4  20F4               	addwfc	prodh,w,c
 17817  0129B6  6EF7               	movwf	tblptrh,c
 17818  0129B8                     	if	1	;There are 3 active tblptr bytes
 17819  0129B8  6AF8               	clrf	tblptru,c
 17820  0129BA  0E00               	movlw	low (__mediumconst shr (0+16))
 17821  0129BC  22F8               	addwfc	tblptru,f,c
 17822  0129BE                     	endif
 17823  0129BE  0009               	tblrd		*+
 17824  0129C0  CFF5 F198          	movff	tablat,??_sprintf
 17825  0129C4  0009               	tblrd		*+
 17826  0129C6  CFF5 F199          	movff	tablat,??_sprintf+1
 17827  0129CA  0101               	movlb	1	; () banked
 17828  0129CC  5198               	movf	??_sprintf& (0+255),w,b
 17829  0129CE  0101               	movlb	1	; () banked
 17830  0129D0  5DA8               	subwf	sprintf@_val& (0+255),w,b
 17831  0129D2  0101               	movlb	1	; () banked
 17832  0129D4  5199               	movf	(??_sprintf+1)& (0+255),w,b
 17833  0129D6  0101               	movlb	1	; () banked
 17834  0129D8  59A9               	subwfb	(sprintf@_val+1)& (0+255),w,b
 17835  0129DA  A0D8               	btfss	status,0,c
 17836  0129DC  D012               	goto	l9884
 17837                           
 17838                           ; BSR set to: 1
 17839                           
 17840                           ; BSR set to: 1
 17841                           
 17842                           ; BSR set to: 1
 17843                           ;doprnt.c: 1339: break;
 17844  0129DE  0101               	movlb	1	; () banked
 17845  0129E0  2BAC               	incf	sprintf@c& (0+255),f,b
 17846  0129E2  D7DC               	goto	L17
 17847  0129E4                     l9882:
 17848                           
 17849                           ; BSR set to: 1
 17850  0129E4  0101               	movlb	1	; () banked
 17851  0129E6  51AD               	movf	sprintf@flag& (0+255),w,b
 17852  0129E8  0BC0               	andlw	192
 17853                           
 17854                           ; Switch size 1, requested type "space"
 17855                           ; Number of cases is 4, Range of values is 0 to 192
 17856                           ; switch strategies available:
 17857                           ; Name         Instructions Cycles
 17858                           ; simple_byte           13     7 (average)
 17859                           ;	Chosen strategy is simple_byte
 17860  0129EA  0A00               	xorlw	0	; case 0
 17861  0129EC  B4D8               	btfsc	status,2,c
 17862  0129EE  D785               	goto	l9838
 17863  0129F0  0A40               	xorlw	64	; case 64
 17864  0129F2  B4D8               	btfsc	status,2,c
 17865  0129F4  D7D0               	goto	l9866
 17866  0129F6  0AC0               	xorlw	192	; case 128
 17867  0129F8  B4D8               	btfsc	status,2,c
 17868  0129FA  D7A6               	goto	l9852
 17869  0129FC  0A40               	xorlw	64	; case 192
 17870  0129FE  B4D8               	btfsc	status,2,c
 17871  012A00  D77C               	goto	l9838
 17872  012A02                     l9884:
 17873                           
 17874                           ; BSR set to: 1
 17875                           ;doprnt.c: 1348: if(c < prec)
 17876  012A02  0101               	movlb	1	; () banked
 17877  012A04  51AC               	movf	sprintf@c& (0+255),w,b
 17878  012A06  0A80               	xorlw	128
 17879  012A08  0101               	movlb	1	; () banked
 17880  012A0A  6F98               	movwf	??_sprintf& (0+255),b
 17881  012A0C  0101               	movlb	1	; () banked
 17882  012A0E  51A5               	movf	sprintf@prec& (0+255),w,b
 17883  012A10  0A80               	xorlw	128
 17884  012A12  0101               	movlb	1	; () banked
 17885  012A14  5D98               	subwf	??_sprintf& (0+255),w,b
 17886  012A16  B0D8               	btfsc	status,0,c
 17887  012A18  D003               	goto	l9888
 17888                           
 17889                           ; BSR set to: 1
 17890                           ;doprnt.c: 1349: c = prec;
 17891  012A1A  C1A5  F1AC         	movff	sprintf@prec,sprintf@c
 17892  012A1E  D00D               	goto	l9892
 17893  012A20                     l9888:
 17894                           
 17895                           ; BSR set to: 1
 17896                           ;doprnt.c: 1350: else if(prec < c)
 17897  012A20  0101               	movlb	1	; () banked
 17898  012A22  51A5               	movf	sprintf@prec& (0+255),w,b
 17899  012A24  0A80               	xorlw	128
 17900  012A26  0101               	movlb	1	; () banked
 17901  012A28  6F98               	movwf	??_sprintf& (0+255),b
 17902  012A2A  0101               	movlb	1	; () banked
 17903  012A2C  51AC               	movf	sprintf@c& (0+255),w,b
 17904  012A2E  0A80               	xorlw	128
 17905  012A30  0101               	movlb	1	; () banked
 17906  012A32  5D98               	subwf	??_sprintf& (0+255),w,b
 17907  012A34  A0D8               	btfss	status,0,c
 17908                           
 17909                           ; BSR set to: 1
 17910                           ;doprnt.c: 1351: prec = c;
 17911  012A36  C1AC  F1A5         	movff	sprintf@c,sprintf@prec
 17912  012A3A                     l9892:
 17913                           
 17914                           ; BSR set to: 1
 17915                           ;doprnt.c: 1354: if(width && flag & 0x03)
 17916  012A3A  0101               	movlb	1	; () banked
 17917  012A3C  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 17918  012A3E  11A6               	iorwf	sprintf@width& (0+255),w,b
 17919  012A40  B4D8               	btfsc	status,2,c
 17920  012A42  D013               	goto	l9898
 17921                           
 17922                           ; BSR set to: 1
 17923  012A44  0E03               	movlw	3
 17924  012A46  0101               	movlb	1	; () banked
 17925  012A48  15AD               	andwf	sprintf@flag& (0+255),w,b
 17926  012A4A  0101               	movlb	1	; () banked
 17927  012A4C  6F98               	movwf	??_sprintf& (0+255),b
 17928  012A4E  0E00               	movlw	0
 17929  012A50  0101               	movlb	1	; () banked
 17930  012A52  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
 17931  012A54  0101               	movlb	1	; () banked
 17932  012A56  6F99               	movwf	(??_sprintf+1)& (0+255),b
 17933  012A58  0101               	movlb	1	; () banked
 17934  012A5A  5199               	movf	(??_sprintf+1)& (0+255),w,b
 17935  012A5C  1198               	iorwf	??_sprintf& (0+255),w,b
 17936  012A5E  B4D8               	btfsc	status,2,c
 17937  012A60  D004               	goto	l9898
 17938                           
 17939                           ; BSR set to: 1
 17940                           ;doprnt.c: 1355: width--;
 17941  012A62  0101               	movlb	1	; () banked
 17942  012A64  07A6               	decf	sprintf@width& (0+255),f,b
 17943  012A66  A0D8               	btfss	status,0,c
 17944  012A68  07A7               	decf	(sprintf@width+1)& (0+255),f,b
 17945  012A6A                     l9898:
 17946                           
 17947                           ; BSR set to: 1
 17948                           ;doprnt.c: 1357: if(flag & 0x4000) {
 17949  012A6A  0101               	movlb	1	; () banked
 17950  012A6C  ADAE               	btfss	(sprintf@flag+1)& (0+255),6,b
 17951  012A6E  D022               	goto	l9906
 17952                           
 17953                           ; BSR set to: 1
 17954                           ;doprnt.c: 1358: if(width > prec)
 17955  012A70  0E80               	movlw	128
 17956  012A72  0101               	movlb	1	; () banked
 17957  012A74  BFA5               	btfsc	sprintf@prec& (0+255),7,b
 17958  012A76  0E7F               	movlw	127
 17959  012A78  0101               	movlb	1	; () banked
 17960  012A7A  6F98               	movwf	??_sprintf& (0+255),b
 17961  012A7C  0101               	movlb	1	; () banked
 17962  012A7E  51A6               	movf	sprintf@width& (0+255),w,b
 17963  012A80  0101               	movlb	1	; () banked
 17964  012A82  5DA5               	subwf	sprintf@prec& (0+255),w,b
 17965  012A84  0101               	movlb	1	; () banked
 17966  012A86  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 17967  012A88  0A80               	xorlw	128
 17968  012A8A  0101               	movlb	1	; () banked
 17969  012A8C  5998               	subwfb	??_sprintf& (0+255),w,b
 17970  012A8E  B0D8               	btfsc	status,0,c
 17971  012A90  D00B               	goto	l9904
 17972                           
 17973                           ; BSR set to: 1
 17974                           ;doprnt.c: 1359: width -= prec;
 17975  012A92  0101               	movlb	1	; () banked
 17976  012A94  51A5               	movf	sprintf@prec& (0+255),w,b
 17977  012A96  0101               	movlb	1	; () banked
 17978  012A98  5FA6               	subwf	sprintf@width& (0+255),f,b
 17979  012A9A  0E00               	movlw	0
 17980  012A9C  0101               	movlb	1	; () banked
 17981  012A9E  BFA5               	btfsc	sprintf@prec& (0+255),7,b
 17982  012AA0  0EFF               	movlw	255
 17983  012AA2  0101               	movlb	1	; () banked
 17984  012AA4  5BA7               	subwfb	(sprintf@width+1)& (0+255),f,b
 17985  012AA6  D006               	goto	l9906
 17986  012AA8                     l9904:
 17987                           
 17988                           ; BSR set to: 1
 17989                           ;doprnt.c: 1360: else
 17990                           ;doprnt.c: 1361: width = 0;
 17991  012AA8  0E00               	movlw	0
 17992  012AAA  0101               	movlb	1	; () banked
 17993  012AAC  6FA7               	movwf	(sprintf@width+1)& (0+255),b
 17994  012AAE  0E00               	movlw	0
 17995  012AB0  0101               	movlb	1	; () banked
 17996  012AB2  6FA6               	movwf	sprintf@width& (0+255),b
 17997  012AB4                     l9906:
 17998                           
 17999                           ; BSR set to: 1
 18000                           ;doprnt.c: 1362: }
 18001                           ;doprnt.c: 1366: if((flag & (
 18002                           ;doprnt.c: 1368: 0x04|
 18003                           ;doprnt.c: 1370: (0xC0)|0x800)) == (0x40|0x800)) {
 18004  012AB4  0EC4               	movlw	196
 18005  012AB6  0101               	movlb	1	; () banked
 18006  012AB8  6F98               	movwf	??_sprintf& (0+255),b
 18007  012ABA  0E08               	movlw	8
 18008  012ABC  6F99               	movwf	(??_sprintf+1)& (0+255),b
 18009  012ABE  0101               	movlb	1	; () banked
 18010  012AC0  C1AD  F19A         	movff	sprintf@flag,??_sprintf+2
 18011  012AC4  0101               	movlb	1	; () banked
 18012  012AC6  C1AE  F19B         	movff	sprintf@flag+1,??_sprintf+3
 18013  012ACA  0101               	movlb	1	; () banked
 18014  012ACC  5198               	movf	??_sprintf& (0+255),w,b
 18015  012ACE  0101               	movlb	1	; () banked
 18016  012AD0  179A               	andwf	(??_sprintf+2)& (0+255),f,b
 18017  012AD2  0101               	movlb	1	; () banked
 18018  012AD4  5199               	movf	(??_sprintf+1)& (0+255),w,b
 18019  012AD6  0101               	movlb	1	; () banked
 18020  012AD8  179B               	andwf	(??_sprintf+3)& (0+255),f,b
 18021  012ADA  0101               	movlb	1	; () banked
 18022  012ADC  519B               	movf	(??_sprintf+3)& (0+255),w,b
 18023  012ADE  0A08               	xorlw	8
 18024  012AE0  0E40               	movlw	64
 18025  012AE2  B4D8               	btfsc	status,2,c
 18026  012AE4  199A               	xorwf	(??_sprintf+2)& (0+255),w,b
 18027  012AE6  A4D8               	btfss	status,2,c
 18028  012AE8  D00A               	goto	l9912
 18029                           
 18030                           ; BSR set to: 1
 18031                           ;doprnt.c: 1371: if(width)
 18032  012AEA  0101               	movlb	1	; () banked
 18033  012AEC  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 18034  012AEE  11A6               	iorwf	sprintf@width& (0+255),w,b
 18035  012AF0  B4D8               	btfsc	status,2,c
 18036  012AF2  D037               	goto	l9920
 18037                           
 18038                           ; BSR set to: 1
 18039                           ;doprnt.c: 1372: width--;
 18040  012AF4  0101               	movlb	1	; () banked
 18041  012AF6  07A6               	decf	sprintf@width& (0+255),f,b
 18042  012AF8  A0D8               	btfss	status,0,c
 18043  012AFA  07A7               	decf	(sprintf@width+1)& (0+255),f,b
 18044  012AFC  D032               	goto	l9920
 18045  012AFE                     l9912:
 18046                           
 18047                           ; BSR set to: 1
 18048                           ;doprnt.c: 1377: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 18049  012AFE  0EC0               	movlw	192
 18050  012B00  0101               	movlb	1	; () banked
 18051  012B02  6F98               	movwf	??_sprintf& (0+255),b
 18052  012B04  0E08               	movlw	8
 18053  012B06  6F99               	movwf	(??_sprintf+1)& (0+255),b
 18054  012B08  0101               	movlb	1	; () banked
 18055  012B0A  C1AD  F19A         	movff	sprintf@flag,??_sprintf+2
 18056  012B0E  0101               	movlb	1	; () banked
 18057  012B10  C1AE  F19B         	movff	sprintf@flag+1,??_sprintf+3
 18058  012B14  0101               	movlb	1	; () banked
 18059  012B16  5198               	movf	??_sprintf& (0+255),w,b
 18060  012B18  0101               	movlb	1	; () banked
 18061  012B1A  179A               	andwf	(??_sprintf+2)& (0+255),f,b
 18062  012B1C  0101               	movlb	1	; () banked
 18063  012B1E  5199               	movf	(??_sprintf+1)& (0+255),w,b
 18064  012B20  0101               	movlb	1	; () banked
 18065  012B22  179B               	andwf	(??_sprintf+3)& (0+255),f,b
 18066  012B24  0101               	movlb	1	; () banked
 18067  012B26  519B               	movf	(??_sprintf+3)& (0+255),w,b
 18068  012B28  0A08               	xorlw	8
 18069  012B2A  0E80               	movlw	128
 18070  012B2C  B4D8               	btfsc	status,2,c
 18071  012B2E  199A               	xorwf	(??_sprintf+2)& (0+255),w,b
 18072  012B30  A4D8               	btfss	status,2,c
 18073  012B32  D017               	goto	l9920
 18074                           
 18075                           ; BSR set to: 1
 18076                           ;doprnt.c: 1381: if(width > 2)
 18077  012B34  0101               	movlb	1	; () banked
 18078  012B36  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 18079  012B38  0A80               	xorlw	128
 18080  012B3A  0F80               	addlw	-128
 18081  012B3C  0E03               	movlw	3
 18082  012B3E  B4D8               	btfsc	status,2,c
 18083  012B40  5DA6               	subwf	sprintf@width& (0+255),w,b
 18084  012B42  A0D8               	btfss	status,0,c
 18085  012B44  D008               	goto	l9918
 18086                           
 18087                           ; BSR set to: 1
 18088                           ;doprnt.c: 1382: width -= 2;
 18089  012B46  0101               	movlb	1	; () banked
 18090  012B48  0EFE               	movlw	254
 18091  012B4A  0101               	movlb	1	; () banked
 18092  012B4C  27A6               	addwf	sprintf@width& (0+255),f,b
 18093  012B4E  0EFF               	movlw	255
 18094  012B50  0101               	movlb	1	; () banked
 18095  012B52  23A7               	addwfc	(sprintf@width+1)& (0+255),f,b
 18096  012B54  D006               	goto	l9920
 18097  012B56                     l9918:
 18098                           
 18099                           ; BSR set to: 1
 18100                           ;doprnt.c: 1383: else
 18101                           ;doprnt.c: 1384: width = 0;
 18102  012B56  0E00               	movlw	0
 18103  012B58  0101               	movlb	1	; () banked
 18104  012B5A  6FA7               	movwf	(sprintf@width+1)& (0+255),b
 18105  012B5C  0E00               	movlw	0
 18106  012B5E  0101               	movlb	1	; () banked
 18107  012B60  6FA6               	movwf	sprintf@width& (0+255),b
 18108  012B62                     l9920:
 18109                           
 18110                           ; BSR set to: 1
 18111                           ;doprnt.c: 1385: }
 18112                           ;doprnt.c: 1390: if(width > c)
 18113  012B62  0E80               	movlw	128
 18114  012B64  0101               	movlb	1	; () banked
 18115  012B66  BFAC               	btfsc	sprintf@c& (0+255),7,b
 18116  012B68  0E7F               	movlw	127
 18117  012B6A  0101               	movlb	1	; () banked
 18118  012B6C  6F98               	movwf	??_sprintf& (0+255),b
 18119  012B6E  0101               	movlb	1	; () banked
 18120  012B70  51A6               	movf	sprintf@width& (0+255),w,b
 18121  012B72  0101               	movlb	1	; () banked
 18122  012B74  5DAC               	subwf	sprintf@c& (0+255),w,b
 18123  012B76  0101               	movlb	1	; () banked
 18124  012B78  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 18125  012B7A  0A80               	xorlw	128
 18126  012B7C  0101               	movlb	1	; () banked
 18127  012B7E  5998               	subwfb	??_sprintf& (0+255),w,b
 18128  012B80  B0D8               	btfsc	status,0,c
 18129  012B82  D00B               	goto	l9924
 18130                           
 18131                           ; BSR set to: 1
 18132                           ;doprnt.c: 1391: width -= c;
 18133  012B84  0101               	movlb	1	; () banked
 18134  012B86  51AC               	movf	sprintf@c& (0+255),w,b
 18135  012B88  0101               	movlb	1	; () banked
 18136  012B8A  5FA6               	subwf	sprintf@width& (0+255),f,b
 18137  012B8C  0E00               	movlw	0
 18138  012B8E  0101               	movlb	1	; () banked
 18139  012B90  BFAC               	btfsc	sprintf@c& (0+255),7,b
 18140  012B92  0EFF               	movlw	255
 18141  012B94  0101               	movlb	1	; () banked
 18142  012B96  5BA7               	subwfb	(sprintf@width+1)& (0+255),f,b
 18143  012B98  D006               	goto	l9926
 18144  012B9A                     l9924:
 18145                           
 18146                           ; BSR set to: 1
 18147                           ;doprnt.c: 1392: else
 18148                           ;doprnt.c: 1393: width = 0;
 18149  012B9A  0E00               	movlw	0
 18150  012B9C  0101               	movlb	1	; () banked
 18151  012B9E  6FA7               	movwf	(sprintf@width+1)& (0+255),b
 18152  012BA0  0E00               	movlw	0
 18153  012BA2  0101               	movlb	1	; () banked
 18154  012BA4  6FA6               	movwf	sprintf@width& (0+255),b
 18155  012BA6                     l9926:
 18156                           
 18157                           ; BSR set to: 1
 18158                           ;doprnt.c: 1396: if(flag & 0x04) {
 18159  012BA6  0101               	movlb	1	; () banked
 18160  012BA8  A5AD               	btfss	sprintf@flag& (0+255),2,b
 18161  012BAA  D06F               	goto	l9962
 18162                           
 18163                           ; BSR set to: 1
 18164                           ;doprnt.c: 1401: if(flag & 0x03)
 18165  012BAC  0E03               	movlw	3
 18166  012BAE  0101               	movlb	1	; () banked
 18167  012BB0  15AD               	andwf	sprintf@flag& (0+255),w,b
 18168  012BB2  0101               	movlb	1	; () banked
 18169  012BB4  6F98               	movwf	??_sprintf& (0+255),b
 18170  012BB6  0E00               	movlw	0
 18171  012BB8  0101               	movlb	1	; () banked
 18172  012BBA  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
 18173  012BBC  0101               	movlb	1	; () banked
 18174  012BBE  6F99               	movwf	(??_sprintf+1)& (0+255),b
 18175  012BC0  0101               	movlb	1	; () banked
 18176  012BC2  5199               	movf	(??_sprintf+1)& (0+255),w,b
 18177  012BC4  1198               	iorwf	??_sprintf& (0+255),w,b
 18178  012BC6  B4D8               	btfsc	status,2,c
 18179  012BC8  D006               	goto	l1467
 18180                           
 18181                           ; BSR set to: 1
 18182                           ;doprnt.c: 1402: ((*sp++ = ('-')));
 18183  012BCA  C188  FFD9         	movff	sprintf@sp,fsr2l
 18184  012BCE  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18185  012BD2  0E2D               	movlw	45
 18186  012BD4  D008               	goto	L18
 18187  012BD6                     l1467:
 18188                           
 18189                           ; BSR set to: 1
 18190                           ;doprnt.c: 1405: else
 18191                           ;doprnt.c: 1408: if(flag & 0x01)
 18192  012BD6  0101               	movlb	1	; () banked
 18193  012BD8  A1AD               	btfss	sprintf@flag& (0+255),0,b
 18194  012BDA  D007               	goto	l9938
 18195                           
 18196                           ; BSR set to: 1
 18197                           ;doprnt.c: 1409: ((*sp++ = (' ')));
 18198  012BDC  C188  FFD9         	movff	sprintf@sp,fsr2l
 18199  012BE0  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18200  012BE4  0E20               	movlw	32
 18201  012BE6                     L18:
 18202  012BE6  6EDF               	movwf	indf2,c
 18203  012BE8  D039               	goto	L19
 18204  012BEA                     l9938:
 18205                           
 18206                           ; BSR set to: 1
 18207                           ;doprnt.c: 1412: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 18208  012BEA  0EC0               	movlw	192
 18209  012BEC  0101               	movlb	1	; () banked
 18210  012BEE  6F98               	movwf	??_sprintf& (0+255),b
 18211  012BF0  0E08               	movlw	8
 18212  012BF2  6F99               	movwf	(??_sprintf+1)& (0+255),b
 18213  012BF4  0101               	movlb	1	; () banked
 18214  012BF6  C1AD  F19A         	movff	sprintf@flag,??_sprintf+2
 18215  012BFA  0101               	movlb	1	; () banked
 18216  012BFC  C1AE  F19B         	movff	sprintf@flag+1,??_sprintf+3
 18217  012C00  0101               	movlb	1	; () banked
 18218  012C02  5198               	movf	??_sprintf& (0+255),w,b
 18219  012C04  0101               	movlb	1	; () banked
 18220  012C06  179A               	andwf	(??_sprintf+2)& (0+255),f,b
 18221  012C08  0101               	movlb	1	; () banked
 18222  012C0A  5199               	movf	(??_sprintf+1)& (0+255),w,b
 18223  012C0C  0101               	movlb	1	; () banked
 18224  012C0E  179B               	andwf	(??_sprintf+3)& (0+255),f,b
 18225  012C10  0101               	movlb	1	; () banked
 18226  012C12  519B               	movf	(??_sprintf+3)& (0+255),w,b
 18227  012C14  0A08               	xorlw	8
 18228  012C16  0E80               	movlw	128
 18229  012C18  B4D8               	btfsc	status,2,c
 18230  012C1A  199A               	xorwf	(??_sprintf+2)& (0+255),w,b
 18231  012C1C  A4D8               	btfss	status,2,c
 18232  012C1E  D021               	goto	l9954
 18233                           
 18234                           ; BSR set to: 1
 18235                           ;doprnt.c: 1413: ((*sp++ = ('0')));
 18236  012C20  C188  FFD9         	movff	sprintf@sp,fsr2l
 18237  012C24  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18238  012C28  0E30               	movlw	48
 18239  012C2A  6EDF               	movwf	indf2,c
 18240                           
 18241                           ; BSR set to: 1
 18242  012C2C  0101               	movlb	1	; () banked
 18243  012C2E  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18244  012C30  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18245                           
 18246                           ; BSR set to: 1
 18247                           ;doprnt.c: 1415: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 18248  012C32  0101               	movlb	1	; () banked
 18249  012C34  BBAD               	btfsc	sprintf@flag& (0+255),5,b
 18250  012C36  D005               	goto	l9948
 18251                           
 18252                           ; BSR set to: 1
 18253  012C38  0E00               	movlw	0
 18254  012C3A  0101               	movlb	1	; () banked
 18255  012C3C  6F9E               	movwf	(_sprintf$2234+1)& (0+255),b
 18256  012C3E  0E78               	movlw	120
 18257  012C40  D004               	goto	L20
 18258  012C42                     l9948:
 18259                           
 18260                           ; BSR set to: 1
 18261  012C42  0E00               	movlw	0
 18262  012C44  0101               	movlb	1	; () banked
 18263  012C46  6F9E               	movwf	(_sprintf$2234+1)& (0+255),b
 18264  012C48  0E58               	movlw	88
 18265  012C4A                     L20:
 18266  012C4A  0101               	movlb	1	; () banked
 18267  012C4C  6F9D               	movwf	_sprintf$2234& (0+255),b
 18268                           
 18269                           ; BSR set to: 1
 18270                           
 18271                           ; BSR set to: 1
 18272  012C4E  C188  FFD9         	movff	sprintf@sp,fsr2l
 18273  012C52  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18274  012C56  0101               	movlb	1	; () banked
 18275  012C58  C19D  FFDF         	movff	_sprintf$2234,indf2
 18276  012C5C                     L19:
 18277                           
 18278                           ; BSR set to: 1
 18279  012C5C  0101               	movlb	1	; () banked
 18280  012C5E  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18281  012C60  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18282  012C62                     l9954:
 18283                           
 18284                           ; BSR set to: 1
 18285                           ;doprnt.c: 1421: }
 18286                           ;doprnt.c: 1424: if(width)
 18287  012C62  0101               	movlb	1	; () banked
 18288  012C64  0101               	movlb	1	; () banked
 18289  012C66  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 18290  012C68  11A6               	iorwf	sprintf@width& (0+255),w,b
 18291  012C6A  B4D8               	btfsc	status,2,c
 18292  012C6C  D151               	goto	l10026
 18293                           
 18294                           ; BSR set to: 1
 18295                           ;doprnt.c: 1426: ((*sp++ = ('0')));
 18296                           
 18297                           ; BSR set to: 1
 18298                           
 18299                           ;doprnt.c: 1425: do
 18300  012C6E  C188  FFD9         	movff	sprintf@sp,fsr2l
 18301  012C72  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18302  012C76  0E30               	movlw	48
 18303  012C78  6EDF               	movwf	indf2,c
 18304                           
 18305                           ; BSR set to: 1
 18306  012C7A  0101               	movlb	1	; () banked
 18307  012C7C  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18308  012C7E  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18309                           
 18310                           ; BSR set to: 1
 18311                           ;doprnt.c: 1427: while(--width);
 18312  012C80  0101               	movlb	1	; () banked
 18313  012C82  07A6               	decf	sprintf@width& (0+255),f,b
 18314  012C84  A0D8               	btfss	status,0,c
 18315  012C86  07A7               	decf	(sprintf@width+1)& (0+255),f,b
 18316  012C88  D7ED               	goto	L27
 18317  012C8A                     l9962:
 18318                           
 18319                           ; BSR set to: 1
 18320                           ;doprnt.c: 1431: {
 18321                           ;doprnt.c: 1433: if(width
 18322                           ;doprnt.c: 1435: && !(flag & 0x08)
 18323                           ;doprnt.c: 1437: )
 18324  012C8A  0101               	movlb	1	; () banked
 18325  012C8C  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 18326  012C8E  11A6               	iorwf	sprintf@width& (0+255),w,b
 18327  012C90  B4D8               	btfsc	status,2,c
 18328  012C92  D015               	goto	l9972
 18329                           
 18330                           ; BSR set to: 1
 18331  012C94  0101               	movlb	1	; () banked
 18332  012C96  B7AD               	btfsc	sprintf@flag& (0+255),3,b
 18333  012C98  D012               	goto	l9972
 18334  012C9A                     l9966:
 18335                           
 18336                           ; BSR set to: 1
 18337                           ;doprnt.c: 1439: ((*sp++ = (' ')));
 18338  012C9A  C188  FFD9         	movff	sprintf@sp,fsr2l
 18339  012C9E  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18340  012CA2  0E20               	movlw	32
 18341  012CA4  6EDF               	movwf	indf2,c
 18342                           
 18343                           ; BSR set to: 1
 18344  012CA6  0101               	movlb	1	; () banked
 18345  012CA8  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18346  012CAA  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18347                           
 18348                           ; BSR set to: 1
 18349                           ;doprnt.c: 1440: while(--width);
 18350  012CAC  0101               	movlb	1	; () banked
 18351  012CAE  07A6               	decf	sprintf@width& (0+255),f,b
 18352  012CB0  A0D8               	btfss	status,0,c
 18353  012CB2  07A7               	decf	(sprintf@width+1)& (0+255),f,b
 18354  012CB4  0101               	movlb	1	; () banked
 18355  012CB6  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 18356  012CB8  11A6               	iorwf	sprintf@width& (0+255),w,b
 18357  012CBA  A4D8               	btfss	status,2,c
 18358  012CBC  D7EE               	goto	l9966
 18359  012CBE                     l9972:
 18360                           
 18361                           ; BSR set to: 1
 18362                           ;doprnt.c: 1447: if(flag & 0x03)
 18363  012CBE  0E03               	movlw	3
 18364  012CC0  0101               	movlb	1	; () banked
 18365  012CC2  15AD               	andwf	sprintf@flag& (0+255),w,b
 18366  012CC4  0101               	movlb	1	; () banked
 18367  012CC6  6F98               	movwf	??_sprintf& (0+255),b
 18368  012CC8  0E00               	movlw	0
 18369  012CCA  0101               	movlb	1	; () banked
 18370  012CCC  15AE               	andwf	(sprintf@flag+1)& (0+255),w,b
 18371  012CCE  0101               	movlb	1	; () banked
 18372  012CD0  6F99               	movwf	(??_sprintf+1)& (0+255),b
 18373  012CD2  0101               	movlb	1	; () banked
 18374  012CD4  5199               	movf	(??_sprintf+1)& (0+255),w,b
 18375  012CD6  1198               	iorwf	??_sprintf& (0+255),w,b
 18376  012CD8  B4D8               	btfsc	status,2,c
 18377  012CDA  D006               	goto	l1483
 18378                           
 18379                           ; BSR set to: 1
 18380                           ;doprnt.c: 1448: ((*sp++ = ('-')));
 18381  012CDC  C188  FFD9         	movff	sprintf@sp,fsr2l
 18382  012CE0  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18383  012CE4  0E2D               	movlw	45
 18384  012CE6  D008               	goto	L21
 18385  012CE8                     l1483:
 18386                           
 18387                           ; BSR set to: 1
 18388                           ;doprnt.c: 1452: else if(flag & 0x01)
 18389  012CE8  0101               	movlb	1	; () banked
 18390  012CEA  A1AD               	btfss	sprintf@flag& (0+255),0,b
 18391  012CEC  D009               	goto	l9982
 18392                           
 18393                           ; BSR set to: 1
 18394                           ;doprnt.c: 1453: ((*sp++ = (' ')));
 18395  012CEE  C188  FFD9         	movff	sprintf@sp,fsr2l
 18396  012CF2  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18397  012CF6  0E20               	movlw	32
 18398  012CF8                     L21:
 18399  012CF8  6EDF               	movwf	indf2,c
 18400                           
 18401                           ; BSR set to: 1
 18402  012CFA  0101               	movlb	1	; () banked
 18403  012CFC  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18404  012CFE  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18405  012D00                     l9982:
 18406                           
 18407                           ; BSR set to: 1
 18408                           ;doprnt.c: 1457: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 18409  012D00  0EC0               	movlw	192
 18410  012D02  0101               	movlb	1	; () banked
 18411  012D04  6F98               	movwf	??_sprintf& (0+255),b
 18412  012D06  0E08               	movlw	8
 18413  012D08  6F99               	movwf	(??_sprintf+1)& (0+255),b
 18414  012D0A  0101               	movlb	1	; () banked
 18415  012D0C  C1AD  F19A         	movff	sprintf@flag,??_sprintf+2
 18416  012D10  0101               	movlb	1	; () banked
 18417  012D12  C1AE  F19B         	movff	sprintf@flag+1,??_sprintf+3
 18418  012D16  0101               	movlb	1	; () banked
 18419  012D18  5198               	movf	??_sprintf& (0+255),w,b
 18420  012D1A  0101               	movlb	1	; () banked
 18421  012D1C  179A               	andwf	(??_sprintf+2)& (0+255),f,b
 18422  012D1E  0101               	movlb	1	; () banked
 18423  012D20  5199               	movf	(??_sprintf+1)& (0+255),w,b
 18424  012D22  0101               	movlb	1	; () banked
 18425  012D24  179B               	andwf	(??_sprintf+3)& (0+255),f,b
 18426  012D26  0101               	movlb	1	; () banked
 18427  012D28  519B               	movf	(??_sprintf+3)& (0+255),w,b
 18428  012D2A  0A08               	xorlw	8
 18429  012D2C  0E40               	movlw	64
 18430  012D2E  B4D8               	btfsc	status,2,c
 18431  012D30  199A               	xorwf	(??_sprintf+2)& (0+255),w,b
 18432  012D32  A4D8               	btfss	status,2,c
 18433  012D34  D007               	goto	l9988
 18434                           
 18435                           ; BSR set to: 1
 18436                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 18437  012D36  C188  FFD9         	movff	sprintf@sp,fsr2l
 18438  012D3A  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18439  012D3E  0E30               	movlw	48
 18440  012D40  6EDF               	movwf	indf2,c
 18441  012D42  D0E3               	goto	L24
 18442  012D44                     l9988:
 18443                           
 18444                           ; BSR set to: 1
 18445                           ;doprnt.c: 1459: else
 18446                           ;doprnt.c: 1463: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 18447  012D44  0EC0               	movlw	192
 18448  012D46  0101               	movlb	1	; () banked
 18449  012D48  6F98               	movwf	??_sprintf& (0+255),b
 18450  012D4A  0E08               	movlw	8
 18451  012D4C  6F99               	movwf	(??_sprintf+1)& (0+255),b
 18452  012D4E  0101               	movlb	1	; () banked
 18453  012D50  C1AD  F19A         	movff	sprintf@flag,??_sprintf+2
 18454  012D54  0101               	movlb	1	; () banked
 18455  012D56  C1AE  F19B         	movff	sprintf@flag+1,??_sprintf+3
 18456  012D5A  0101               	movlb	1	; () banked
 18457  012D5C  5198               	movf	??_sprintf& (0+255),w,b
 18458  012D5E  0101               	movlb	1	; () banked
 18459  012D60  179A               	andwf	(??_sprintf+2)& (0+255),f,b
 18460  012D62  0101               	movlb	1	; () banked
 18461  012D64  5199               	movf	(??_sprintf+1)& (0+255),w,b
 18462  012D66  0101               	movlb	1	; () banked
 18463  012D68  179B               	andwf	(??_sprintf+3)& (0+255),f,b
 18464  012D6A  0101               	movlb	1	; () banked
 18465  012D6C  519B               	movf	(??_sprintf+3)& (0+255),w,b
 18466  012D6E  0A08               	xorlw	8
 18467  012D70  0E80               	movlw	128
 18468  012D72  B4D8               	btfsc	status,2,c
 18469  012D74  199A               	xorwf	(??_sprintf+2)& (0+255),w,b
 18470  012D76  A4D8               	btfss	status,2,c
 18471  012D78  D0CB               	goto	l10026
 18472                           
 18473                           ; BSR set to: 1
 18474                           ;doprnt.c: 1467: ((*sp++ = ('0')));
 18475  012D7A  C188  FFD9         	movff	sprintf@sp,fsr2l
 18476  012D7E  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18477  012D82  0E30               	movlw	48
 18478  012D84  6EDF               	movwf	indf2,c
 18479                           
 18480                           ; BSR set to: 1
 18481  012D86  0101               	movlb	1	; () banked
 18482  012D88  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18483  012D8A  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18484                           
 18485                           ; BSR set to: 1
 18486                           ;doprnt.c: 1469: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 18487  012D8C  0101               	movlb	1	; () banked
 18488  012D8E  BBAD               	btfsc	sprintf@flag& (0+255),5,b
 18489  012D90  D005               	goto	l9998
 18490                           
 18491                           ; BSR set to: 1
 18492  012D92  0E00               	movlw	0
 18493  012D94  0101               	movlb	1	; () banked
 18494  012D96  6FA0               	movwf	(_sprintf$2235+1)& (0+255),b
 18495  012D98  0E78               	movlw	120
 18496  012D9A  D004               	goto	L23
 18497  012D9C                     l9998:
 18498                           
 18499                           ; BSR set to: 1
 18500  012D9C  0E00               	movlw	0
 18501  012D9E  0101               	movlb	1	; () banked
 18502  012DA0  6FA0               	movwf	(_sprintf$2235+1)& (0+255),b
 18503  012DA2  0E58               	movlw	88
 18504  012DA4                     L23:
 18505  012DA4  0101               	movlb	1	; () banked
 18506  012DA6  6F9F               	movwf	_sprintf$2235& (0+255),b
 18507                           
 18508                           ; BSR set to: 1
 18509                           
 18510                           ; BSR set to: 1
 18511  012DA8  C188  FFD9         	movff	sprintf@sp,fsr2l
 18512  012DAC  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18513  012DB0  0101               	movlb	1	; () banked
 18514  012DB2  C19F  FFDF         	movff	_sprintf$2235,indf2
 18515  012DB6  D0A9               	goto	L24
 18516  012DB8                     l10004:
 18517                           
 18518                           ; BSR set to: 1
 18519                           ;doprnt.c: 1495: case 0xC0:
 18520                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
 18521  012DB8  0101               	movlb	1	; () banked
 18522  012DBA  51A5               	movf	sprintf@prec& (0+255),w,b
 18523  012DBC  0D02               	mullw	2
 18524  012DBE  0EFB               	movlw	low _dpowers
 18525  012DC0  24F3               	addwf	prodl,w,c
 18526  012DC2  6EF6               	movwf	tblptrl,c
 18527  012DC4  0EEF               	movlw	high _dpowers
 18528  012DC6  20F4               	addwfc	prodh,w,c
 18529  012DC8  6EF7               	movwf	tblptrh,c
 18530  012DCA                     	if	1	;There are 3 active tblptr bytes
 18531  012DCA  6AF8               	clrf	tblptru,c
 18532  012DCC  0E00               	movlw	low (__mediumconst shr (0+16))
 18533  012DCE  22F8               	addwfc	tblptru,f,c
 18534  012DD0                     	endif
 18535  012DD0  0009               	tblrd		*+
 18536  012DD2  0101               	movlb	1	; () banked
 18537  012DD4  CFF5 F17E          	movff	tablat,___lwdiv@divisor
 18538  012DD8  000A               	tblrd		*-
 18539  012DDA  0101               	movlb	1	; () banked
 18540  012DDC  CFF5 F17F          	movff	tablat,___lwdiv@divisor+1
 18541  012DE0  C1A8  F17C         	movff	sprintf@_val,___lwdiv@dividend
 18542  012DE4  C1A9  F17D         	movff	sprintf@_val+1,___lwdiv@dividend+1
 18543  012DE8  ECD1  F0B2         	call	___lwdiv	;wreg free
 18544  012DEC  0101               	movlb	1	; () banked
 18545  012DEE  C17C  F183         	movff	?___lwdiv,___lwmod@dividend
 18546  012DF2  0101               	movlb	1	; () banked
 18547  012DF4  C17D  F184         	movff	?___lwdiv+1,___lwmod@dividend+1
 18548  012DF8  0E00               	movlw	0
 18549  012DFA  0101               	movlb	1	; () banked
 18550  012DFC  6F86               	movwf	(___lwmod@divisor+1)& (0+255),b
 18551  012DFE  0E0A               	movlw	10
 18552  012E00  0101               	movlb	1	; () banked
 18553  012E02  6F85               	movwf	___lwmod@divisor& (0+255),b
 18554  012E04  ECED  F0B4         	call	___lwmod	;wreg free
 18555  012E08  0101               	movlb	1	; () banked
 18556  012E0A  5183               	movf	?___lwmod& (0+255),w,b
 18557  012E0C  D064               	goto	L25
 18558  012E0E                     l10006:
 18559                           
 18560                           ; BSR set to: 1
 18561                           ;doprnt.c: 1508: {
 18562                           ;doprnt.c: 1509: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
 18563  012E0E  C1A8  F17C         	movff	sprintf@_val,___lwdiv@dividend
 18564  012E12  C1A9  F17D         	movff	sprintf@_val+1,___lwdiv@dividend+1
 18565  012E16  0101               	movlb	1	; () banked
 18566  012E18  51A5               	movf	sprintf@prec& (0+255),w,b
 18567  012E1A  0D02               	mullw	2
 18568  012E1C  0E05               	movlw	low _hexpowers
 18569  012E1E  24F3               	addwf	prodl,w,c
 18570  012E20  6EF6               	movwf	tblptrl,c
 18571  012E22  0EF0               	movlw	high _hexpowers
 18572  012E24  20F4               	addwfc	prodh,w,c
 18573  012E26  6EF7               	movwf	tblptrh,c
 18574  012E28                     	if	1	;There are 3 active tblptr bytes
 18575  012E28  6AF8               	clrf	tblptru,c
 18576  012E2A  0E00               	movlw	low (__mediumconst shr (0+16))
 18577  012E2C  22F8               	addwfc	tblptru,f,c
 18578  012E2E                     	endif
 18579  012E2E  0009               	tblrd		*+
 18580  012E30  0101               	movlb	1	; () banked
 18581  012E32  CFF5 F17E          	movff	tablat,___lwdiv@divisor
 18582  012E36  000A               	tblrd		*-
 18583  012E38  0101               	movlb	1	; () banked
 18584  012E3A  CFF5 F17F          	movff	tablat,___lwdiv@divisor+1
 18585  012E3E  ECD1  F0B2         	call	___lwdiv	;wreg free
 18586  012E42  0101               	movlb	1	; () banked
 18587  012E44  517C               	movf	?___lwdiv& (0+255),w,b
 18588  012E46  0B0F               	andlw	15
 18589  012E48  0101               	movlb	1	; () banked
 18590  012E4A  6F9C               	movwf	sprintf@idx& (0+255),b
 18591                           
 18592                           ; BSR set to: 1
 18593                           ;doprnt.c: 1511: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 18594  012E4C  0101               	movlb	1	; () banked
 18595  012E4E  BBAD               	btfsc	sprintf@flag& (0+255),5,b
 18596  012E50  D005               	goto	l10012
 18597                           
 18598                           ; BSR set to: 1
 18599  012E52  0EF9               	movlw	high STR_286
 18600  012E54  0101               	movlb	1	; () banked
 18601  012E56  6FA2               	movwf	(_sprintf$2241+1)& (0+255),b
 18602  012E58  0E79               	movlw	low STR_286
 18603  012E5A  D004               	goto	L26
 18604  012E5C                     l10012:
 18605                           
 18606                           ; BSR set to: 1
 18607  012E5C  0EF9               	movlw	high STR_285
 18608  012E5E  0101               	movlb	1	; () banked
 18609  012E60  6FA2               	movwf	(_sprintf$2241+1)& (0+255),b
 18610  012E62  0E68               	movlw	low STR_285
 18611  012E64                     L26:
 18612  012E64  0101               	movlb	1	; () banked
 18613  012E66  6FA1               	movwf	_sprintf$2241& (0+255),b
 18614                           
 18615                           ; BSR set to: 1
 18616                           
 18617                           ; BSR set to: 1
 18618  012E68  0101               	movlb	1	; () banked
 18619  012E6A  519C               	movf	sprintf@idx& (0+255),w,b
 18620  012E6C  0D01               	mullw	1
 18621  012E6E  0101               	movlb	1	; () banked
 18622  012E70  C1A1  F198         	movff	_sprintf$2241,??_sprintf
 18623  012E74  0101               	movlb	1	; () banked
 18624  012E76  C1A2  F199         	movff	_sprintf$2241+1,??_sprintf+1
 18625  012E7A  50F3               	movf	prodl,w,c
 18626  012E7C  0101               	movlb	1	; () banked
 18627  012E7E  2798               	addwf	??_sprintf& (0+255),f,b
 18628  012E80  50F4               	movf	prodh,w,c
 18629  012E82  0101               	movlb	1	; () banked
 18630  012E84  2399               	addwfc	(??_sprintf+1)& (0+255),f,b
 18631  012E86  C198  FFF6         	movff	??_sprintf,tblptrl
 18632  012E8A  C199  FFF7         	movff	??_sprintf+1,tblptrh
 18633  012E8E                     	if	0	;tblptru may be non-zero
 18634  012E8E                     	endif
 18635  012E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18636  012E8E  0E00               	movlw	low (__mediumconst shr (0+16))
 18637  012E90  6EF8               	movwf	tblptru,c
 18638  012E92                     	endif
 18639  012E92  0008               	tblrd		*
 18640  012E94  0101               	movlb	1	; () banked
 18641  012E96  CFF5 F1AC          	movff	tablat,sprintf@c
 18642                           
 18643                           ;doprnt.c: 1517: }
 18644                           ;doprnt.c: 1519: break;
 18645  012E9A  D030               	goto	l10022
 18646  012E9C                     l10016:
 18647                           
 18648                           ; BSR set to: 1
 18649                           ;doprnt.c: 1527: c = ((_val._val / octpowers[prec]) & 07) + '0';
 18650  012E9C  C1A8  F17C         	movff	sprintf@_val,___lwdiv@dividend
 18651  012EA0  C1A9  F17D         	movff	sprintf@_val+1,___lwdiv@dividend+1
 18652  012EA4  0101               	movlb	1	; () banked
 18653  012EA6  51A5               	movf	sprintf@prec& (0+255),w,b
 18654  012EA8  0D02               	mullw	2
 18655  012EAA  0EEF               	movlw	low _octpowers
 18656  012EAC  24F3               	addwf	prodl,w,c
 18657  012EAE  6EF6               	movwf	tblptrl,c
 18658  012EB0  0EEF               	movlw	high _octpowers
 18659  012EB2  20F4               	addwfc	prodh,w,c
 18660  012EB4  6EF7               	movwf	tblptrh,c
 18661  012EB6                     	if	1	;There are 3 active tblptr bytes
 18662  012EB6  6AF8               	clrf	tblptru,c
 18663  012EB8  0E00               	movlw	low (__mediumconst shr (0+16))
 18664  012EBA  22F8               	addwfc	tblptru,f,c
 18665  012EBC                     	endif
 18666  012EBC  0009               	tblrd		*+
 18667  012EBE  0101               	movlb	1	; () banked
 18668  012EC0  CFF5 F17E          	movff	tablat,___lwdiv@divisor
 18669  012EC4  000A               	tblrd		*-
 18670  012EC6  0101               	movlb	1	; () banked
 18671  012EC8  CFF5 F17F          	movff	tablat,___lwdiv@divisor+1
 18672  012ECC  ECD1  F0B2         	call	___lwdiv	;wreg free
 18673  012ED0  0101               	movlb	1	; () banked
 18674  012ED2  517C               	movf	?___lwdiv& (0+255),w,b
 18675  012ED4  0B07               	andlw	7
 18676  012ED6                     L25:
 18677  012ED6  0F30               	addlw	48
 18678  012ED8  0101               	movlb	1	; () banked
 18679  012EDA  6FAC               	movwf	sprintf@c& (0+255),b
 18680                           
 18681                           ;doprnt.c: 1529: break;
 18682  012EDC  D00F               	goto	l10022
 18683  012EDE                     l10020:
 18684                           
 18685                           ; BSR set to: 1
 18686  012EDE  0101               	movlb	1	; () banked
 18687  012EE0  51AD               	movf	sprintf@flag& (0+255),w,b
 18688  012EE2  0BC0               	andlw	192
 18689                           
 18690                           ; Switch size 1, requested type "space"
 18691                           ; Number of cases is 4, Range of values is 0 to 192
 18692                           ; switch strategies available:
 18693                           ; Name         Instructions Cycles
 18694                           ; simple_byte           13     7 (average)
 18695                           ;	Chosen strategy is simple_byte
 18696  012EE4  0A00               	xorlw	0	; case 0
 18697  012EE6  B4D8               	btfsc	status,2,c
 18698  012EE8  D767               	goto	l10004
 18699  012EEA  0A40               	xorlw	64	; case 64
 18700  012EEC  B4D8               	btfsc	status,2,c
 18701  012EEE  D7D6               	goto	l10016
 18702  012EF0  0AC0               	xorlw	192	; case 128
 18703  012EF2  B4D8               	btfsc	status,2,c
 18704  012EF4  D78C               	goto	l10006
 18705  012EF6  0A40               	xorlw	64	; case 192
 18706  012EF8  B4D8               	btfsc	status,2,c
 18707  012EFA  D75E               	goto	l10004
 18708  012EFC                     l10022:
 18709                           
 18710                           ; BSR set to: 1
 18711                           ;doprnt.c: 1533: ((*sp++ = (c)));
 18712  012EFC  C188  FFD9         	movff	sprintf@sp,fsr2l
 18713  012F00  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18714  012F04  0101               	movlb	1	; () banked
 18715  012F06  C1AC  FFDF         	movff	sprintf@c,indf2
 18716  012F0A                     L24:
 18717                           
 18718                           ; BSR set to: 1
 18719  012F0A  0101               	movlb	1	; () banked
 18720  012F0C  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18721  012F0E  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18722  012F10                     l10026:
 18723                           
 18724                           ; BSR set to: 1
 18725  012F10  0101               	movlb	1	; () banked
 18726  012F12  07A5               	decf	sprintf@prec& (0+255),f,b
 18727  012F14  0101               	movlb	1	; () banked
 18728  012F16  29A5               	incf	sprintf@prec& (0+255),w,b
 18729  012F18  A4D8               	btfss	status,2,c
 18730  012F1A  D7E1               	goto	l10020
 18731                           
 18732                           ; BSR set to: 1
 18733                           ;doprnt.c: 1534: }
 18734                           ;doprnt.c: 1537: if((flag & 0x08) && width > 0)
 18735  012F1C  0101               	movlb	1	; () banked
 18736  012F1E  A7AD               	btfss	sprintf@flag& (0+255),3,b
 18737  012F20  D01B               	goto	l10036
 18738                           
 18739                           ; BSR set to: 1
 18740  012F22  0101               	movlb	1	; () banked
 18741  012F24  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 18742  012F26  0A80               	xorlw	128
 18743  012F28  0F80               	addlw	-128
 18744  012F2A  0E01               	movlw	1
 18745  012F2C  B4D8               	btfsc	status,2,c
 18746  012F2E  5DA6               	subwf	sprintf@width& (0+255),w,b
 18747  012F30  A0D8               	btfss	status,0,c
 18748  012F32  D012               	goto	l10036
 18749  012F34                     l10030:
 18750                           
 18751                           ; BSR set to: 1
 18752                           ;doprnt.c: 1539: ((*sp++ = (' ')));
 18753  012F34  C188  FFD9         	movff	sprintf@sp,fsr2l
 18754  012F38  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18755  012F3C  0E20               	movlw	32
 18756  012F3E  6EDF               	movwf	indf2,c
 18757                           
 18758                           ; BSR set to: 1
 18759  012F40  0101               	movlb	1	; () banked
 18760  012F42  4B88               	infsnz	sprintf@sp& (0+255),f,b
 18761  012F44  2B89               	incf	(sprintf@sp+1)& (0+255),f,b
 18762                           
 18763                           ; BSR set to: 1
 18764                           ;doprnt.c: 1540: while(--width);
 18765  012F46  0101               	movlb	1	; () banked
 18766  012F48  07A6               	decf	sprintf@width& (0+255),f,b
 18767  012F4A  A0D8               	btfss	status,0,c
 18768  012F4C  07A7               	decf	(sprintf@width+1)& (0+255),f,b
 18769  012F4E  0101               	movlb	1	; () banked
 18770  012F50  51A7               	movf	(sprintf@width+1)& (0+255),w,b
 18771  012F52  11A6               	iorwf	sprintf@width& (0+255),w,b
 18772  012F54  A4D8               	btfss	status,2,c
 18773  012F56  D7EE               	goto	l10030
 18774  012F58                     l10036:
 18775                           
 18776                           ; BSR set to: 1
 18777  012F58  0101               	movlb	1	; () banked
 18778  012F5A  C18A  FFF6         	movff	sprintf@f,tblptrl
 18779  012F5E  0101               	movlb	1	; () banked
 18780  012F60  C18B  FFF7         	movff	sprintf@f+1,tblptrh
 18781  012F64  0101               	movlb	1	; () banked
 18782  012F66  4B8A               	infsnz	sprintf@f& (0+255),f,b
 18783  012F68  2B8B               	incf	(sprintf@f+1)& (0+255),f,b
 18784  012F6A                     	if	0	;tblptru may be non-zero
 18785  012F6A                     	endif
 18786  012F6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18787  012F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 18788  012F6C  6EF8               	movwf	tblptru,c
 18789  012F6E                     	endif
 18790  012F6E  0008               	tblrd		*
 18791  012F70  0101               	movlb	1	; () banked
 18792  012F72  CFF5 F1AC          	movff	tablat,sprintf@c
 18793  012F76  0101               	movlb	1	; () banked
 18794  012F78  67AC               	tstfsz	sprintf@c& (0+255),b
 18795  012F7A  EF3B  F092         	goto	l9696
 18796  012F7E                     l10038:
 18797                           
 18798                           ; BSR set to: 1
 18799                           ;doprnt.c: 1547: *sp = 0;
 18800  012F7E  C188  FFD9         	movff	sprintf@sp,fsr2l
 18801  012F82  C189  FFDA         	movff	sprintf@sp+1,fsr2h
 18802  012F86  0E00               	movlw	0
 18803  012F88  6EDF               	movwf	indf2,c
 18804  012F8A  0012               	return	
 18805  012F8C                     __end_of_sprintf:
 18806                           	opt stack 0
 18807                           tblptru	equ	0xFF8
 18808                           tblptrh	equ	0xFF7
 18809                           tblptrl	equ	0xFF6
 18810                           tablat	equ	0xFF5
 18811                           prodh	equ	0xFF4
 18812                           prodl	equ	0xFF3
 18813                           intcon	equ	0xFF2
 18814                           postinc0	equ	0xFEE
 18815                           wreg	equ	0xFE8
 18816                           indf1	equ	0xFE7
 18817                           postinc1	equ	0xFE6
 18818                           postdec1	equ	0xFE5
 18819                           fsr1h	equ	0xFE2
 18820                           fsr1l	equ	0xFE1
 18821                           indf2	equ	0xFDF
 18822                           postinc2	equ	0xFDE
 18823                           postdec2	equ	0xFDD
 18824                           fsr2h	equ	0xFDA
 18825                           fsr2l	equ	0xFD9
 18826                           status	equ	0xFD8
 18827                           
 18828 ;; *************** function _isdigit *****************
 18829 ;; Defined at:
 18830 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
 18831 ;; Parameters:    Size  Location     Type
 18832 ;;  c               1    wreg     unsigned char 
 18833 ;; Auto vars:     Size  Location     Type
 18834 ;;  c               1   16[BANK1 ] unsigned char 
 18835 ;; Return value:  Size  Location     Type
 18836 ;;		None               void
 18837 ;; Registers used:
 18838 ;;		wreg, status,2, status,0
 18839 ;; Tracked objects:
 18840 ;;		On entry : 0/0
 18841 ;;		On exit  : 0/0
 18842 ;;		Unchanged: 0/0
 18843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18845 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 18846 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18847 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18848 ;;Total ram usage:        3 bytes
 18849 ;; Hardware stack levels used:    1
 18850 ;; Hardware stack levels required when called:    6
 18851 ;; This function calls:
 18852 ;;		Nothing
 18853 ;; This function is called by:
 18854 ;;		_sprintf
 18855 ;; This function uses a non-reentrant model
 18856 ;;
 18857                           
 18858                           	psect	text29
 18859  016F52                     __ptext29:
 18860                           	opt stack 0
 18861  016F52                     _isdigit:
 18862                           	opt stack 22
 18863                           
 18864                           ; BSR set to: 1
 18865                           ;incstack = 0
 18866                           ;isdigit@c stored from wreg
 18867  016F52  0101               	movlb	1	; () banked
 18868  016F54  6F7E               	movwf	isdigit@c& (0+255),b
 18869                           
 18870                           ; BSR set to: 1
 18871  016F56  0E00               	movlw	0
 18872  016F58  0101               	movlb	1	; () banked
 18873  016F5A  6F7D               	movwf	_isdigit$2583& (0+255),b
 18874                           
 18875                           ; BSR set to: 1
 18876  016F5C  0E3A               	movlw	58
 18877  016F5E  0101               	movlb	1	; () banked
 18878  016F60  5D7E               	subwf	isdigit@c& (0+255),w,b
 18879  016F62  B0D8               	btfsc	status,0,c
 18880  016F64  D007               	goto	l9538
 18881                           
 18882                           ; BSR set to: 1
 18883  016F66  0E2F               	movlw	47
 18884  016F68  0101               	movlb	1	; () banked
 18885  016F6A  657E               	cpfsgt	isdigit@c& (0+255),b
 18886  016F6C  D003               	goto	l9538
 18887                           
 18888                           ; BSR set to: 1
 18889  016F6E  0E01               	movlw	1
 18890  016F70  0101               	movlb	1	; () banked
 18891  016F72  6F7D               	movwf	_isdigit$2583& (0+255),b
 18892  016F74                     l9538:
 18893                           
 18894                           ; BSR set to: 1
 18895  016F74  C17D  F17C         	movff	_isdigit$2583,??_isdigit
 18896  016F78  0101               	movlb	1	; () banked
 18897  016F7A  317C               	rrcf	??_isdigit& (0+255),w,b
 18898  016F7C  0012               	return	
 18899  016F7E                     __end_of_isdigit:
 18900                           	opt stack 0
 18901                           tblptru	equ	0xFF8
 18902                           tblptrh	equ	0xFF7
 18903                           tblptrl	equ	0xFF6
 18904                           tablat	equ	0xFF5
 18905                           prodh	equ	0xFF4
 18906                           prodl	equ	0xFF3
 18907                           intcon	equ	0xFF2
 18908                           postinc0	equ	0xFEE
 18909                           wreg	equ	0xFE8
 18910                           indf1	equ	0xFE7
 18911                           postinc1	equ	0xFE6
 18912                           postdec1	equ	0xFE5
 18913                           fsr1h	equ	0xFE2
 18914                           fsr1l	equ	0xFE1
 18915                           indf2	equ	0xFDF
 18916                           postinc2	equ	0xFDE
 18917                           postdec2	equ	0xFDD
 18918                           fsr2h	equ	0xFDA
 18919                           fsr2l	equ	0xFD9
 18920                           status	equ	0xFD8
 18921                           
 18922 ;; *************** function ___lwmod *****************
 18923 ;; Defined at:
 18924 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
 18925 ;; Parameters:    Size  Location     Type
 18926 ;;  dividend        2   21[BANK1 ] unsigned int 
 18927 ;;  divisor         2   23[BANK1 ] unsigned int 
 18928 ;; Auto vars:     Size  Location     Type
 18929 ;;  counter         1   25[BANK1 ] unsigned char 
 18930 ;; Return value:  Size  Location     Type
 18931 ;;                  2   21[BANK1 ] unsigned int 
 18932 ;; Registers used:
 18933 ;;		wreg, status,2, status,0
 18934 ;; Tracked objects:
 18935 ;;		On entry : 0/0
 18936 ;;		On exit  : 0/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18939 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18940 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18942 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 18943 ;;Total ram usage:        5 bytes
 18944 ;; Hardware stack levels used:    1
 18945 ;; Hardware stack levels required when called:    6
 18946 ;; This function calls:
 18947 ;;		Nothing
 18948 ;; This function is called by:
 18949 ;;		_Command
 18950 ;;		_sprintf
 18951 ;; This function uses a non-reentrant model
 18952 ;;
 18953                           
 18954                           	psect	text30
 18955  0169DA                     __ptext30:
 18956                           	opt stack 0
 18957  0169DA                     ___lwmod:
 18958                           	opt stack 22
 18959                           
 18960                           ; BSR set to: 1
 18961                           ;incstack = 0
 18962  0169DA  0101               	movlb	1	; () banked
 18963  0169DC  5186               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18964  0169DE  1185               	iorwf	___lwmod@divisor& (0+255),w,b
 18965  0169E0  B4D8               	btfsc	status,2,c
 18966  0169E2  D026               	goto	l2053
 18967                           
 18968                           ; BSR set to: 1
 18969  0169E4  0E01               	movlw	1
 18970  0169E6  0101               	movlb	1	; () banked
 18971  0169E8  6F87               	movwf	___lwmod@counter& (0+255),b
 18972  0169EA  D006               	goto	l9610
 18973  0169EC                     l9608:
 18974                           
 18975                           ; BSR set to: 1
 18976  0169EC  0101               	movlb	1	; () banked
 18977  0169EE  90D8               	bcf	status,0,c
 18978  0169F0  3785               	rlcf	___lwmod@divisor& (0+255),f,b
 18979  0169F2  3786               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 18980  0169F4  0101               	movlb	1	; () banked
 18981  0169F6  2B87               	incf	___lwmod@counter& (0+255),f,b
 18982  0169F8                     l9610:
 18983                           
 18984                           ; BSR set to: 1
 18985  0169F8  0101               	movlb	1	; () banked
 18986  0169FA  AF86               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 18987  0169FC  D7F7               	goto	l9608
 18988  0169FE                     l9612:
 18989                           
 18990                           ; BSR set to: 1
 18991  0169FE  0101               	movlb	1	; () banked
 18992  016A00  5185               	movf	___lwmod@divisor& (0+255),w,b
 18993  016A02  0101               	movlb	1	; () banked
 18994  016A04  5D83               	subwf	___lwmod@dividend& (0+255),w,b
 18995  016A06  0101               	movlb	1	; () banked
 18996  016A08  5186               	movf	(___lwmod@divisor+1)& (0+255),w,b
 18997  016A0A  0101               	movlb	1	; () banked
 18998  016A0C  5984               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 18999  016A0E  A0D8               	btfss	status,0,c
 19000  016A10  D008               	goto	l9616
 19001                           
 19002                           ; BSR set to: 1
 19003  016A12  0101               	movlb	1	; () banked
 19004  016A14  5185               	movf	___lwmod@divisor& (0+255),w,b
 19005  016A16  0101               	movlb	1	; () banked
 19006  016A18  5F83               	subwf	___lwmod@dividend& (0+255),f,b
 19007  016A1A  0101               	movlb	1	; () banked
 19008  016A1C  5186               	movf	(___lwmod@divisor+1)& (0+255),w,b
 19009  016A1E  0101               	movlb	1	; () banked
 19010  016A20  5B84               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 19011  016A22                     l9616:
 19012                           
 19013                           ; BSR set to: 1
 19014  016A22  0101               	movlb	1	; () banked
 19015  016A24  90D8               	bcf	status,0,c
 19016  016A26  3386               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 19017  016A28  3385               	rrcf	___lwmod@divisor& (0+255),f,b
 19018                           
 19019                           ; BSR set to: 1
 19020  016A2A  0101               	movlb	1	; () banked
 19021  016A2C  2F87               	decfsz	___lwmod@counter& (0+255),f,b
 19022  016A2E  D7E7               	goto	l9612
 19023  016A30                     l2053:
 19024                           
 19025                           ; BSR set to: 1
 19026  016A30  C183  F183         	movff	___lwmod@dividend,?___lwmod
 19027  016A34  C184  F184         	movff	___lwmod@dividend+1,?___lwmod+1
 19028                           
 19029                           ; BSR set to: 1
 19030  016A38  0012               	return	
 19031  016A3A                     __end_of___lwmod:
 19032                           	opt stack 0
 19033                           tblptru	equ	0xFF8
 19034                           tblptrh	equ	0xFF7
 19035                           tblptrl	equ	0xFF6
 19036                           tablat	equ	0xFF5
 19037                           prodh	equ	0xFF4
 19038                           prodl	equ	0xFF3
 19039                           intcon	equ	0xFF2
 19040                           postinc0	equ	0xFEE
 19041                           wreg	equ	0xFE8
 19042                           indf1	equ	0xFE7
 19043                           postinc1	equ	0xFE6
 19044                           postdec1	equ	0xFE5
 19045                           fsr1h	equ	0xFE2
 19046                           fsr1l	equ	0xFE1
 19047                           indf2	equ	0xFDF
 19048                           postinc2	equ	0xFDE
 19049                           postdec2	equ	0xFDD
 19050                           fsr2h	equ	0xFDA
 19051                           fsr2l	equ	0xFD9
 19052                           status	equ	0xFD8
 19053                           
 19054 ;; *************** function ___lwdiv *****************
 19055 ;; Defined at:
 19056 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
 19057 ;; Parameters:    Size  Location     Type
 19058 ;;  dividend        2   14[BANK1 ] unsigned int 
 19059 ;;  divisor         2   16[BANK1 ] unsigned int 
 19060 ;; Auto vars:     Size  Location     Type
 19061 ;;  quotient        2   19[BANK1 ] unsigned int 
 19062 ;;  counter         1   18[BANK1 ] unsigned char 
 19063 ;; Return value:  Size  Location     Type
 19064 ;;                  2   14[BANK1 ] unsigned int 
 19065 ;; Registers used:
 19066 ;;		wreg, status,2, status,0
 19067 ;; Tracked objects:
 19068 ;;		On entry : 0/0
 19069 ;;		On exit  : 0/0
 19070 ;;		Unchanged: 0/0
 19071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19072 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19073 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19075 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 19076 ;;Total ram usage:        7 bytes
 19077 ;; Hardware stack levels used:    1
 19078 ;; Hardware stack levels required when called:    6
 19079 ;; This function calls:
 19080 ;;		Nothing
 19081 ;; This function is called by:
 19082 ;;		_sprintf
 19083 ;; This function uses a non-reentrant model
 19084 ;;
 19085                           
 19086                           	psect	text31
 19087  0165A2                     __ptext31:
 19088                           	opt stack 0
 19089  0165A2                     ___lwdiv:
 19090                           	opt stack 22
 19091                           
 19092                           ; BSR set to: 1
 19093                           ;incstack = 0
 19094  0165A2  0E00               	movlw	0
 19095  0165A4  0101               	movlb	1	; () banked
 19096  0165A6  6F82               	movwf	(___lwdiv@quotient+1)& (0+255),b
 19097  0165A8  0E00               	movlw	0
 19098  0165AA  0101               	movlb	1	; () banked
 19099  0165AC  6F81               	movwf	___lwdiv@quotient& (0+255),b
 19100                           
 19101                           ; BSR set to: 1
 19102  0165AE  0101               	movlb	1	; () banked
 19103  0165B0  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19104  0165B2  117E               	iorwf	___lwdiv@divisor& (0+255),w,b
 19105  0165B4  B4D8               	btfsc	status,2,c
 19106  0165B6  D02C               	goto	l2043
 19107                           
 19108                           ; BSR set to: 1
 19109  0165B8  0E01               	movlw	1
 19110  0165BA  0101               	movlb	1	; () banked
 19111  0165BC  6F80               	movwf	___lwdiv@counter& (0+255),b
 19112  0165BE  D006               	goto	l9590
 19113  0165C0                     l9588:
 19114                           
 19115                           ; BSR set to: 1
 19116  0165C0  0101               	movlb	1	; () banked
 19117  0165C2  90D8               	bcf	status,0,c
 19118  0165C4  377E               	rlcf	___lwdiv@divisor& (0+255),f,b
 19119  0165C6  377F               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 19120  0165C8  0101               	movlb	1	; () banked
 19121  0165CA  2B80               	incf	___lwdiv@counter& (0+255),f,b
 19122  0165CC                     l9590:
 19123                           
 19124                           ; BSR set to: 1
 19125  0165CC  0101               	movlb	1	; () banked
 19126  0165CE  AF7F               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 19127  0165D0  D7F7               	goto	l9588
 19128  0165D2                     l9592:
 19129                           
 19130                           ; BSR set to: 1
 19131  0165D2  0101               	movlb	1	; () banked
 19132  0165D4  90D8               	bcf	status,0,c
 19133  0165D6  3781               	rlcf	___lwdiv@quotient& (0+255),f,b
 19134  0165D8  3782               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 19135                           
 19136                           ; BSR set to: 1
 19137  0165DA  0101               	movlb	1	; () banked
 19138  0165DC  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19139  0165DE  0101               	movlb	1	; () banked
 19140  0165E0  5D7C               	subwf	___lwdiv@dividend& (0+255),w,b
 19141  0165E2  0101               	movlb	1	; () banked
 19142  0165E4  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19143  0165E6  0101               	movlb	1	; () banked
 19144  0165E8  597D               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 19145  0165EA  A0D8               	btfss	status,0,c
 19146  0165EC  D00A               	goto	l9600
 19147                           
 19148                           ; BSR set to: 1
 19149  0165EE  0101               	movlb	1	; () banked
 19150  0165F0  517E               	movf	___lwdiv@divisor& (0+255),w,b
 19151  0165F2  0101               	movlb	1	; () banked
 19152  0165F4  5F7C               	subwf	___lwdiv@dividend& (0+255),f,b
 19153  0165F6  0101               	movlb	1	; () banked
 19154  0165F8  517F               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 19155  0165FA  0101               	movlb	1	; () banked
 19156  0165FC  5B7D               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 19157                           
 19158                           ; BSR set to: 1
 19159  0165FE  0101               	movlb	1	; () banked
 19160  016600  8181               	bsf	___lwdiv@quotient& (0+255),0,b
 19161  016602                     l9600:
 19162                           
 19163                           ; BSR set to: 1
 19164  016602  0101               	movlb	1	; () banked
 19165  016604  90D8               	bcf	status,0,c
 19166  016606  337F               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 19167  016608  337E               	rrcf	___lwdiv@divisor& (0+255),f,b
 19168                           
 19169                           ; BSR set to: 1
 19170  01660A  0101               	movlb	1	; () banked
 19171  01660C  2F80               	decfsz	___lwdiv@counter& (0+255),f,b
 19172  01660E  D7E1               	goto	l9592
 19173  016610                     l2043:
 19174                           
 19175                           ; BSR set to: 1
 19176  016610  C181  F17C         	movff	___lwdiv@quotient,?___lwdiv
 19177  016614  C182  F17D         	movff	___lwdiv@quotient+1,?___lwdiv+1
 19178                           
 19179                           ; BSR set to: 1
 19180  016618  0012               	return	
 19181  01661A                     __end_of___lwdiv:
 19182                           	opt stack 0
 19183                           tblptru	equ	0xFF8
 19184                           tblptrh	equ	0xFF7
 19185                           tblptrl	equ	0xFF6
 19186                           tablat	equ	0xFF5
 19187                           prodh	equ	0xFF4
 19188                           prodl	equ	0xFF3
 19189                           intcon	equ	0xFF2
 19190                           postinc0	equ	0xFEE
 19191                           wreg	equ	0xFE8
 19192                           indf1	equ	0xFE7
 19193                           postinc1	equ	0xFE6
 19194                           postdec1	equ	0xFE5
 19195                           fsr1h	equ	0xFE2
 19196                           fsr1l	equ	0xFE1
 19197                           indf2	equ	0xFDF
 19198                           postinc2	equ	0xFDE
 19199                           postdec2	equ	0xFDD
 19200                           fsr2h	equ	0xFDA
 19201                           fsr2l	equ	0xFD9
 19202                           status	equ	0xFD8
 19203                           
 19204 ;; *************** function _SetDuty *****************
 19205 ;; Defined at:
 19206 ;;		line 120 in file "PWM.c"
 19207 ;; Parameters:    Size  Location     Type
 19208 ;;  Duty            1    wreg     unsigned char 
 19209 ;; Auto vars:     Size  Location     Type
 19210 ;;  Duty            1   75[BANK1 ] unsigned char 
 19211 ;;  tempPR2         3   76[BANK1 ] float 
 19212 ;;  temp            2   81[BANK1 ] unsigned int 
 19213 ;;  LSB             1   80[BANK1 ] unsigned char 
 19214 ;;  MSB             1   79[BANK1 ] unsigned char 
 19215 ;; Return value:  Size  Location     Type
 19216 ;;		None               void
 19217 ;; Registers used:
 19218 ;;		wreg, status,2, status,0, cstack
 19219 ;; Tracked objects:
 19220 ;;		On entry : 0/0
 19221 ;;		On exit  : 0/0
 19222 ;;		Unchanged: 0/0
 19223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19225 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 19226 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19227 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 19228 ;;Total ram usage:       12 bytes
 19229 ;; Hardware stack levels used:    1
 19230 ;; Hardware stack levels required when called:    8
 19231 ;; This function calls:
 19232 ;;		___ftdiv
 19233 ;;		___ftmul
 19234 ;;		___fttol
 19235 ;;		___lbtoft
 19236 ;; This function is called by:
 19237 ;;		_main
 19238 ;;		_Command
 19239 ;;		_PWM_init
 19240 ;;		_ContrastPWM_init
 19241 ;; This function uses a non-reentrant model
 19242 ;;
 19243                           
 19244                           	psect	text32
 19245  015878                     __ptext32:
 19246                           	opt stack 0
 19247  015878                     _SetDuty:
 19248                           	opt stack 22
 19249                           
 19250                           ; BSR set to: 1
 19251                           ;incstack = 0
 19252                           ;SetDuty@Duty stored from wreg
 19253  015878  0101               	movlb	1	; () banked
 19254  01587A  6FB9               	movwf	SetDuty@Duty& (0+255),b
 19255                           
 19256                           ; BSR set to: 1
 19257                           ;PWM.c: 122: unsigned int temp=0;
 19258  01587C  0E00               	movlw	0
 19259  01587E  0101               	movlb	1	; () banked
 19260  015880  6FC0               	movwf	(SetDuty@temp+1)& (0+255),b
 19261  015882  0E00               	movlw	0
 19262  015884  0101               	movlb	1	; () banked
 19263  015886  6FBF               	movwf	SetDuty@temp& (0+255),b
 19264                           
 19265                           ; BSR set to: 1
 19266                           ;PWM.c: 123: float tempPR2=0;
 19267  015888  0E00               	movlw	0
 19268  01588A  0101               	movlb	1	; () banked
 19269  01588C  6FBA               	movwf	SetDuty@tempPR2& (0+255),b
 19270  01588E  0E00               	movlw	0
 19271  015890  0101               	movlb	1	; () banked
 19272  015892  6FBB               	movwf	(SetDuty@tempPR2+1)& (0+255),b
 19273  015894  0E00               	movlw	0
 19274  015896  0101               	movlb	1	; () banked
 19275  015898  6FBC               	movwf	(SetDuty@tempPR2+2)& (0+255),b
 19276                           
 19277                           ; BSR set to: 1
 19278                           ;PWM.c: 124: unsigned char MSB,LSB;
 19279                           ;PWM.c: 126: tempPR2 = (float) PR2;
 19280  01589A  50CB               	movf	4043,w,c	;volatile
 19281  01589C  EC1B  F0B7         	call	___lbtoft
 19282  0158A0  C184  F1BA         	movff	?___lbtoft,SetDuty@tempPR2
 19283  0158A4  C185  F1BB         	movff	?___lbtoft+1,SetDuty@tempPR2+1
 19284  0158A8  C186  F1BC         	movff	?___lbtoft+2,SetDuty@tempPR2+2
 19285                           
 19286                           ;PWM.c: 128: temp = (int)(tempPR2 * ((float)Duty/100));
 19287  0158AC  C1BA  F19A         	movff	SetDuty@tempPR2,___ftmul@f2
 19288  0158B0  C1BB  F19B         	movff	SetDuty@tempPR2+1,___ftmul@f2+1
 19289  0158B4  C1BC  F19C         	movff	SetDuty@tempPR2+2,___ftmul@f2+2
 19290  0158B8  0E00               	movlw	0
 19291  0158BA  0101               	movlb	1	; () banked
 19292  0158BC  6F8B               	movwf	___ftdiv@f2& (0+255),b
 19293  0158BE  0EC8               	movlw	200
 19294  0158C0  0101               	movlb	1	; () banked
 19295  0158C2  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 19296  0158C4  0E42               	movlw	66
 19297  0158C6  0101               	movlb	1	; () banked
 19298  0158C8  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 19299  0158CA  0101               	movlb	1	; () banked
 19300  0158CC  51B9               	movf	SetDuty@Duty& (0+255),w,b
 19301  0158CE  EC1B  F0B7         	call	___lbtoft
 19302  0158D2  C184  F188         	movff	?___lbtoft,___ftdiv@f1
 19303  0158D6  C185  F189         	movff	?___lbtoft+1,___ftdiv@f1+1
 19304  0158DA  C186  F18A         	movff	?___lbtoft+2,___ftdiv@f1+2
 19305  0158DE  EC3C  F0A6         	call	___ftdiv	;wreg free
 19306  0158E2  C188  F197         	movff	?___ftdiv,___ftmul@f1
 19307  0158E6  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 19308  0158EA  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 19309  0158EE  EC81  F0A5         	call	___ftmul	;wreg free
 19310  0158F2  C197  F1A6         	movff	?___ftmul,___fttol@f1
 19311  0158F6  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 19312  0158FA  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 19313  0158FE  ECC3  F0A4         	call	___fttol	;wreg free
 19314  015902  C1A6  F1B5         	movff	?___fttol,??_SetDuty
 19315  015906  C1A7  F1B6         	movff	?___fttol+1,??_SetDuty+1
 19316  01590A  C1A8  F1B7         	movff	?___fttol+2,??_SetDuty+2
 19317  01590E  C1A9  F1B8         	movff	?___fttol+3,??_SetDuty+3
 19318  015912  C1B5  F1BF         	movff	??_SetDuty,SetDuty@temp
 19319  015916  C1B6  F1C0         	movff	??_SetDuty+1,SetDuty@temp+1
 19320                           
 19321                           ;PWM.c: 129: MSB = (temp & 0x300)>>8;
 19322  01591A  0101               	movlb	1	; () banked
 19323  01591C  C1C0  F1B5         	movff	SetDuty@temp+1,??_SetDuty
 19324  015920  C1B5  F1B6         	movff	??_SetDuty,??_SetDuty+1
 19325  015924  0101               	movlb	1	; () banked
 19326  015926  6BB7               	clrf	(??_SetDuty+2)& (0+255),b
 19327  015928  0101               	movlb	1	; () banked
 19328  01592A  51B6               	movf	(??_SetDuty+1)& (0+255),w,b
 19329  01592C  0B03               	andlw	3
 19330  01592E  0101               	movlb	1	; () banked
 19331  015930  6FBD               	movwf	SetDuty@MSB& (0+255),b
 19332                           
 19333                           ; BSR set to: 1
 19334                           ;PWM.c: 130: LSB = temp & 0xff;
 19335  015932  C1BF  F1BE         	movff	SetDuty@temp,SetDuty@LSB
 19336                           
 19337                           ; BSR set to: 1
 19338                           ;PWM.c: 132: CCP1CON &= ~(0b00110000);
 19339  015936  0ECF               	movlw	207
 19340  015938  16BD               	andwf	4029,f,c	;volatile
 19341                           
 19342                           ; BSR set to: 1
 19343                           ;PWM.c: 133: CCP1CON |= MSB << 4;
 19344  01593A  0101               	movlb	1	; () banked
 19345  01593C  39BD               	swapf	SetDuty@MSB& (0+255),w,b
 19346  01593E  0BF0               	andlw	240
 19347  015940  12BD               	iorwf	4029,f,c	;volatile
 19348                           
 19349                           ; BSR set to: 1
 19350                           ;PWM.c: 134: CCPR1L = LSB;
 19351  015942  C1BE  FFBE         	movff	SetDuty@LSB,4030	;volatile
 19352                           
 19353                           ; BSR set to: 1
 19354                           ;PWM.c: 135: __nop();
 19355  015946  F000               	nop	
 19356  015948  0012               	return	
 19357  01594A                     __end_of_SetDuty:
 19358                           	opt stack 0
 19359                           tblptru	equ	0xFF8
 19360                           tblptrh	equ	0xFF7
 19361                           tblptrl	equ	0xFF6
 19362                           tablat	equ	0xFF5
 19363                           prodh	equ	0xFF4
 19364                           prodl	equ	0xFF3
 19365                           intcon	equ	0xFF2
 19366                           postinc0	equ	0xFEE
 19367                           wreg	equ	0xFE8
 19368                           indf1	equ	0xFE7
 19369                           postinc1	equ	0xFE6
 19370                           postdec1	equ	0xFE5
 19371                           fsr1h	equ	0xFE2
 19372                           fsr1l	equ	0xFE1
 19373                           indf2	equ	0xFDF
 19374                           postinc2	equ	0xFDE
 19375                           postdec2	equ	0xFDD
 19376                           fsr2h	equ	0xFDA
 19377                           fsr2l	equ	0xFD9
 19378                           status	equ	0xFD8
 19379                           
 19380 ;; *************** function _SetContrast *****************
 19381 ;; Defined at:
 19382 ;;		line 94 in file "PWM.c"
 19383 ;; Parameters:    Size  Location     Type
 19384 ;;  Duty            1    wreg     unsigned char 
 19385 ;; Auto vars:     Size  Location     Type
 19386 ;;  Duty            1   82[BANK1 ] unsigned char 
 19387 ;;  tempPR2         3   75[BANK1 ] float 
 19388 ;;  temp            2   80[BANK1 ] unsigned int 
 19389 ;;  LSB             1   79[BANK1 ] unsigned char 
 19390 ;;  MSB             1   78[BANK1 ] unsigned char 
 19391 ;; Return value:  Size  Location     Type
 19392 ;;		None               void
 19393 ;; Registers used:
 19394 ;;		wreg, status,2, status,0, cstack
 19395 ;; Tracked objects:
 19396 ;;		On entry : 0/0
 19397 ;;		On exit  : 0/0
 19398 ;;		Unchanged: 0/0
 19399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19401 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 19402 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19403 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 19404 ;;Total ram usage:       12 bytes
 19405 ;; Hardware stack levels used:    1
 19406 ;; Hardware stack levels required when called:    8
 19407 ;; This function calls:
 19408 ;;		___ftdiv
 19409 ;;		___ftmul
 19410 ;;		___fttol
 19411 ;;		___lbtoft
 19412 ;; This function is called by:
 19413 ;;		_main
 19414 ;;		_Command
 19415 ;; This function uses a non-reentrant model
 19416 ;;
 19417                           
 19418                           	psect	text33
 19419  01533C                     __ptext33:
 19420                           	opt stack 0
 19421  01533C                     _SetContrast:
 19422                           	opt stack 22
 19423                           
 19424                           ;incstack = 0
 19425                           ;SetContrast@Duty stored from wreg
 19426  01533C  0101               	movlb	1	; () banked
 19427  01533E  6FC0               	movwf	SetContrast@Duty& (0+255),b
 19428                           
 19429                           ; BSR set to: 1
 19430                           ;PWM.c: 96: unsigned int temp=0;
 19431  015340  0E00               	movlw	0
 19432  015342  0101               	movlb	1	; () banked
 19433  015344  6FBF               	movwf	(SetContrast@temp+1)& (0+255),b
 19434  015346  0E00               	movlw	0
 19435  015348  0101               	movlb	1	; () banked
 19436  01534A  6FBE               	movwf	SetContrast@temp& (0+255),b
 19437                           
 19438                           ; BSR set to: 1
 19439                           ;PWM.c: 97: float tempPR2=0;
 19440  01534C  0E00               	movlw	0
 19441  01534E  0101               	movlb	1	; () banked
 19442  015350  6FB9               	movwf	SetContrast@tempPR2& (0+255),b
 19443  015352  0E00               	movlw	0
 19444  015354  0101               	movlb	1	; () banked
 19445  015356  6FBA               	movwf	(SetContrast@tempPR2+1)& (0+255),b
 19446  015358  0E00               	movlw	0
 19447  01535A  0101               	movlb	1	; () banked
 19448  01535C  6FBB               	movwf	(SetContrast@tempPR2+2)& (0+255),b
 19449                           
 19450                           ; BSR set to: 1
 19451                           ;PWM.c: 98: unsigned char MSB,LSB;
 19452                           ;PWM.c: 100: Duty = 100 - Duty;
 19453  01535E  0101               	movlb	1	; () banked
 19454  015360  51C0               	movf	SetContrast@Duty& (0+255),w,b
 19455  015362  0800               	sublw	0
 19456  015364  0F64               	addlw	100
 19457  015366  0101               	movlb	1	; () banked
 19458  015368  6FC0               	movwf	SetContrast@Duty& (0+255),b
 19459                           
 19460                           ; BSR set to: 1
 19461                           ;PWM.c: 101: Duty = (Duty>>1);
 19462  01536A  0101               	movlb	1	; () banked
 19463  01536C  90D8               	bcf	status,0,c
 19464  01536E  31C0               	rrcf	SetContrast@Duty& (0+255),w,b
 19465  015370  0101               	movlb	1	; () banked
 19466  015372  6FC0               	movwf	SetContrast@Duty& (0+255),b
 19467                           
 19468                           ; BSR set to: 1
 19469                           ;PWM.c: 103: tempPR2 = (float) PR2;
 19470  015374  50CB               	movf	4043,w,c	;volatile
 19471  015376  EC1B  F0B7         	call	___lbtoft
 19472  01537A  C184  F1B9         	movff	?___lbtoft,SetContrast@tempPR2
 19473  01537E  C185  F1BA         	movff	?___lbtoft+1,SetContrast@tempPR2+1
 19474  015382  C186  F1BB         	movff	?___lbtoft+2,SetContrast@tempPR2+2
 19475                           
 19476                           ;PWM.c: 105: temp = (int)(tempPR2 * ((float)Duty/100));
 19477  015386  C1B9  F19A         	movff	SetContrast@tempPR2,___ftmul@f2
 19478  01538A  C1BA  F19B         	movff	SetContrast@tempPR2+1,___ftmul@f2+1
 19479  01538E  C1BB  F19C         	movff	SetContrast@tempPR2+2,___ftmul@f2+2
 19480  015392  0E00               	movlw	0
 19481  015394  0101               	movlb	1	; () banked
 19482  015396  6F8B               	movwf	___ftdiv@f2& (0+255),b
 19483  015398  0EC8               	movlw	200
 19484  01539A  0101               	movlb	1	; () banked
 19485  01539C  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 19486  01539E  0E42               	movlw	66
 19487  0153A0  0101               	movlb	1	; () banked
 19488  0153A2  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 19489  0153A4  0101               	movlb	1	; () banked
 19490  0153A6  51C0               	movf	SetContrast@Duty& (0+255),w,b
 19491  0153A8  EC1B  F0B7         	call	___lbtoft
 19492  0153AC  C184  F188         	movff	?___lbtoft,___ftdiv@f1
 19493  0153B0  C185  F189         	movff	?___lbtoft+1,___ftdiv@f1+1
 19494  0153B4  C186  F18A         	movff	?___lbtoft+2,___ftdiv@f1+2
 19495  0153B8  EC3C  F0A6         	call	___ftdiv	;wreg free
 19496  0153BC  C188  F197         	movff	?___ftdiv,___ftmul@f1
 19497  0153C0  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 19498  0153C4  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 19499  0153C8  EC81  F0A5         	call	___ftmul	;wreg free
 19500  0153CC  C197  F1A6         	movff	?___ftmul,___fttol@f1
 19501  0153D0  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 19502  0153D4  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 19503  0153D8  ECC3  F0A4         	call	___fttol	;wreg free
 19504  0153DC  C1A6  F1B5         	movff	?___fttol,??_SetContrast
 19505  0153E0  C1A7  F1B6         	movff	?___fttol+1,??_SetContrast+1
 19506  0153E4  C1A8  F1B7         	movff	?___fttol+2,??_SetContrast+2
 19507  0153E8  C1A9  F1B8         	movff	?___fttol+3,??_SetContrast+3
 19508  0153EC  C1B5  F1BE         	movff	??_SetContrast,SetContrast@temp
 19509  0153F0  C1B6  F1BF         	movff	??_SetContrast+1,SetContrast@temp+1
 19510                           
 19511                           ;PWM.c: 106: MSB = (temp & 0x300)>>8;
 19512  0153F4  0101               	movlb	1	; () banked
 19513  0153F6  C1BF  F1B5         	movff	SetContrast@temp+1,??_SetContrast
 19514  0153FA  C1B5  F1B6         	movff	??_SetContrast,??_SetContrast+1
 19515  0153FE  0101               	movlb	1	; () banked
 19516  015400  6BB7               	clrf	(??_SetContrast+2)& (0+255),b
 19517  015402  0101               	movlb	1	; () banked
 19518  015404  51B6               	movf	(??_SetContrast+1)& (0+255),w,b
 19519  015406  0B03               	andlw	3
 19520  015408  0101               	movlb	1	; () banked
 19521  01540A  6FBC               	movwf	SetContrast@MSB& (0+255),b
 19522                           
 19523                           ; BSR set to: 1
 19524                           ;PWM.c: 107: LSB = temp & 0xff;
 19525  01540C  C1BE  F1BD         	movff	SetContrast@temp,SetContrast@LSB
 19526                           
 19527                           ; BSR set to: 1
 19528                           ;PWM.c: 109: ECCP1CON &= ~0b00110000;
 19529  015410  0ECF               	movlw	207
 19530  015412  16BA               	andwf	4026,f,c	;volatile
 19531                           
 19532                           ; BSR set to: 1
 19533                           ;PWM.c: 110: ECCP1CON |= MSB << 4;
 19534  015414  0101               	movlb	1	; () banked
 19535  015416  39BC               	swapf	SetContrast@MSB& (0+255),w,b
 19536  015418  0BF0               	andlw	240
 19537  01541A  12BA               	iorwf	4026,f,c	;volatile
 19538                           
 19539                           ; BSR set to: 1
 19540                           ;PWM.c: 111: ECCPR1L = LSB;
 19541  01541C  C1BD  FFBB         	movff	SetContrast@LSB,4027	;volatile
 19542                           
 19543                           ; BSR set to: 1
 19544                           ;PWM.c: 112: __nop();
 19545  015420  F000               	nop	
 19546  015422  0012               	return	
 19547  015424                     __end_of_SetContrast:
 19548                           	opt stack 0
 19549                           tblptru	equ	0xFF8
 19550                           tblptrh	equ	0xFF7
 19551                           tblptrl	equ	0xFF6
 19552                           tablat	equ	0xFF5
 19553                           prodh	equ	0xFF4
 19554                           prodl	equ	0xFF3
 19555                           intcon	equ	0xFF2
 19556                           postinc0	equ	0xFEE
 19557                           wreg	equ	0xFE8
 19558                           indf1	equ	0xFE7
 19559                           postinc1	equ	0xFE6
 19560                           postdec1	equ	0xFE5
 19561                           fsr1h	equ	0xFE2
 19562                           fsr1l	equ	0xFE1
 19563                           indf2	equ	0xFDF
 19564                           postinc2	equ	0xFDE
 19565                           postdec2	equ	0xFDD
 19566                           fsr2h	equ	0xFDA
 19567                           fsr2l	equ	0xFD9
 19568                           status	equ	0xFD8
 19569                           
 19570 ;; *************** function ___lbtoft *****************
 19571 ;; Defined at:
 19572 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbtoft.c"
 19573 ;; Parameters:    Size  Location     Type
 19574 ;;  c               1    wreg     unsigned char 
 19575 ;; Auto vars:     Size  Location     Type
 19576 ;;  c               1   25[BANK1 ] unsigned char 
 19577 ;; Return value:  Size  Location     Type
 19578 ;;                  3   22[BANK1 ] float 
 19579 ;; Registers used:
 19580 ;;		wreg, status,2, status,0, cstack
 19581 ;; Tracked objects:
 19582 ;;		On entry : 0/0
 19583 ;;		On exit  : 0/0
 19584 ;;		Unchanged: 0/0
 19585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19586 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19587 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 19588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19589 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19590 ;;Total ram usage:        4 bytes
 19591 ;; Hardware stack levels used:    1
 19592 ;; Hardware stack levels required when called:    7
 19593 ;; This function calls:
 19594 ;;		___ftpack
 19595 ;; This function is called by:
 19596 ;;		_SetContrast
 19597 ;;		_SetDuty
 19598 ;; This function uses a non-reentrant model
 19599 ;;
 19600                           
 19601                           	psect	text34
 19602  016E36                     __ptext34:
 19603                           	opt stack 0
 19604  016E36                     ___lbtoft:
 19605                           	opt stack 22
 19606                           
 19607                           ;incstack = 0
 19608                           ;___lbtoft@c stored from wreg
 19609  016E36  0101               	movlb	1	; () banked
 19610  016E38  6F87               	movwf	___lbtoft@c& (0+255),b
 19611                           
 19612                           ; BSR set to: 1
 19613  016E3A  0101               	movlb	1	; () banked
 19614  016E3C  5187               	movf	___lbtoft@c& (0+255),w,b
 19615  016E3E  0101               	movlb	1	; () banked
 19616  016E40  6F7C               	movwf	___ftpack@arg& (0+255),b
 19617  016E42  0101               	movlb	1	; () banked
 19618  016E44  6B7D               	clrf	(___ftpack@arg+1)& (0+255),b
 19619  016E46  0101               	movlb	1	; () banked
 19620  016E48  6B7E               	clrf	(___ftpack@arg+2)& (0+255),b
 19621  016E4A  0E8E               	movlw	142
 19622  016E4C  0101               	movlb	1	; () banked
 19623  016E4E  6F7F               	movwf	___ftpack@exp& (0+255),b
 19624  016E50  0E00               	movlw	0
 19625  016E52  0101               	movlb	1	; () banked
 19626  016E54  6F80               	movwf	___ftpack@sign& (0+255),b
 19627  016E56  ECA2  F0A8         	call	___ftpack	;wreg free
 19628  016E5A  C17C  F184         	movff	?___ftpack,?___lbtoft
 19629  016E5E  C17D  F185         	movff	?___ftpack+1,?___lbtoft+1
 19630  016E62  C17E  F186         	movff	?___ftpack+2,?___lbtoft+2
 19631  016E66  0012               	return	
 19632  016E68                     __end_of___lbtoft:
 19633                           	opt stack 0
 19634                           tblptru	equ	0xFF8
 19635                           tblptrh	equ	0xFF7
 19636                           tblptrl	equ	0xFF6
 19637                           tablat	equ	0xFF5
 19638                           prodh	equ	0xFF4
 19639                           prodl	equ	0xFF3
 19640                           intcon	equ	0xFF2
 19641                           postinc0	equ	0xFEE
 19642                           wreg	equ	0xFE8
 19643                           indf1	equ	0xFE7
 19644                           postinc1	equ	0xFE6
 19645                           postdec1	equ	0xFE5
 19646                           fsr1h	equ	0xFE2
 19647                           fsr1l	equ	0xFE1
 19648                           indf2	equ	0xFDF
 19649                           postinc2	equ	0xFDE
 19650                           postdec2	equ	0xFDD
 19651                           fsr2h	equ	0xFDA
 19652                           fsr2l	equ	0xFD9
 19653                           status	equ	0xFD8
 19654                           
 19655 ;; *************** function ___fttol *****************
 19656 ;; Defined at:
 19657 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
 19658 ;; Parameters:    Size  Location     Type
 19659 ;;  f1              3   56[BANK1 ] float 
 19660 ;; Auto vars:     Size  Location     Type
 19661 ;;  lval            4   66[BANK1 ] unsigned long 
 19662 ;;  exp1            1   70[BANK1 ] unsigned char 
 19663 ;;  sign1           1   65[BANK1 ] unsigned char 
 19664 ;; Return value:  Size  Location     Type
 19665 ;;                  4   56[BANK1 ] long 
 19666 ;; Registers used:
 19667 ;;		wreg, status,2, status,0
 19668 ;; Tracked objects:
 19669 ;;		On entry : 0/0
 19670 ;;		On exit  : 0/0
 19671 ;;		Unchanged: 0/0
 19672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19673 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 19674 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19675 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 19676 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 19677 ;;Total ram usage:       15 bytes
 19678 ;; Hardware stack levels used:    1
 19679 ;; Hardware stack levels required when called:    6
 19680 ;; This function calls:
 19681 ;;		Nothing
 19682 ;; This function is called by:
 19683 ;;		_Command
 19684 ;;		_SetContrast
 19685 ;;		_SetDuty
 19686 ;; This function uses a non-reentrant model
 19687 ;;
 19688                           
 19689                           	psect	text35
 19690  014986                     __ptext35:
 19691                           	opt stack 0
 19692  014986                     ___fttol:
 19693                           	opt stack 23
 19694                           
 19695                           ;incstack = 0
 19696  014986  0101               	movlb	1	; () banked
 19697  014988  C1A8  F1AA         	movff	___fttol@f1+2,??___fttol
 19698  01498C  0101               	movlb	1	; () banked
 19699  01498E  6BAB               	clrf	(??___fttol+1)& (0+255),b
 19700  014990  6BAC               	clrf	(??___fttol+2)& (0+255),b
 19701  014992  0101               	movlb	1	; () banked
 19702  014994  35A7               	rlcf	(___fttol@f1+1)& (0+255),w,b
 19703  014996  0101               	movlb	1	; () banked
 19704  014998  37AA               	rlcf	??___fttol& (0+255),f,b
 19705  01499A  E301               	bnc	u13341
 19706  01499C  81AB               	bsf	(??___fttol+1)& (0+255),0,b
 19707  01499E                     u13341:
 19708  01499E  0101               	movlb	1	; () banked
 19709  0149A0  51AA               	movf	??___fttol& (0+255),w,b
 19710  0149A2  0101               	movlb	1	; () banked
 19711  0149A4  6FB4               	movwf	___fttol@exp1& (0+255),b
 19712  0149A6  0101               	movlb	1	; () banked
 19713  0149A8  67B4               	tstfsz	___fttol@exp1& (0+255),b
 19714  0149AA  D00D               	goto	l10444
 19715                           
 19716                           ; BSR set to: 1
 19717  0149AC  0E00               	movlw	0
 19718  0149AE  0101               	movlb	1	; () banked
 19719  0149B0  6FA6               	movwf	?___fttol& (0+255),b
 19720  0149B2  0E00               	movlw	0
 19721  0149B4  0101               	movlb	1	; () banked
 19722  0149B6  6FA7               	movwf	(?___fttol+1)& (0+255),b
 19723  0149B8  0E00               	movlw	0
 19724  0149BA  0101               	movlb	1	; () banked
 19725  0149BC  6FA8               	movwf	(?___fttol+2)& (0+255),b
 19726  0149BE  0E00               	movlw	0
 19727  0149C0  0101               	movlb	1	; () banked
 19728  0149C2  6FA9               	movwf	(?___fttol+3)& (0+255),b
 19729  0149C4  0012               	return	
 19730  0149C6                     l10444:
 19731                           
 19732                           ; BSR set to: 1
 19733  0149C6  0E17               	movlw	23
 19734  0149C8  0101               	movlb	1	; () banked
 19735  0149CA  6FAA               	movwf	??___fttol& (0+255),b
 19736  0149CC  0101               	movlb	1	; () banked
 19737  0149CE  C1A6  F1AB         	movff	___fttol@f1,??___fttol+1
 19738  0149D2  0101               	movlb	1	; () banked
 19739  0149D4  C1A7  F1AC         	movff	___fttol@f1+1,??___fttol+2
 19740  0149D8  0101               	movlb	1	; () banked
 19741  0149DA  C1A8  F1AD         	movff	___fttol@f1+2,??___fttol+3
 19742  0149DE  0101               	movlb	1	; () banked
 19743  0149E0  29AA               	incf	??___fttol& (0+255),w,b
 19744  0149E2  0101               	movlb	1	; () banked
 19745  0149E4  6FAE               	movwf	(??___fttol+4)& (0+255),b
 19746  0149E6  D005               	goto	u13360
 19747  0149E8                     u13365:
 19748  0149E8  0101               	movlb	1	; () banked
 19749  0149EA  90D8               	bcf	status,0,c
 19750  0149EC  33AD               	rrcf	(??___fttol+3)& (0+255),f,b
 19751  0149EE  33AC               	rrcf	(??___fttol+2)& (0+255),f,b
 19752  0149F0  33AB               	rrcf	(??___fttol+1)& (0+255),f,b
 19753  0149F2                     u13360:
 19754  0149F2  0101               	movlb	1	; () banked
 19755  0149F4  2FAE               	decfsz	(??___fttol+4)& (0+255),f,b
 19756  0149F6  D7F8               	goto	u13365
 19757  0149F8  0101               	movlb	1	; () banked
 19758  0149FA  51AB               	movf	(??___fttol+1)& (0+255),w,b
 19759  0149FC  0101               	movlb	1	; () banked
 19760  0149FE  6FAF               	movwf	___fttol@sign1& (0+255),b
 19761                           
 19762                           ; BSR set to: 1
 19763  014A00  0101               	movlb	1	; () banked
 19764  014A02  8FA7               	bsf	(___fttol@f1+1)& (0+255),7,b
 19765                           
 19766                           ; BSR set to: 1
 19767  014A04  0EFF               	movlw	255
 19768  014A06  0101               	movlb	1	; () banked
 19769  014A08  17A6               	andwf	___fttol@f1& (0+255),f,b
 19770  014A0A  0EFF               	movlw	255
 19771  014A0C  0101               	movlb	1	; () banked
 19772  014A0E  17A7               	andwf	(___fttol@f1+1)& (0+255),f,b
 19773  014A10  0E00               	movlw	0
 19774  014A12  0101               	movlb	1	; () banked
 19775  014A14  17A8               	andwf	(___fttol@f1+2)& (0+255),f,b
 19776                           
 19777                           ; BSR set to: 1
 19778  014A16  0101               	movlb	1	; () banked
 19779  014A18  51A6               	movf	___fttol@f1& (0+255),w,b
 19780  014A1A  0101               	movlb	1	; () banked
 19781  014A1C  6FB0               	movwf	___fttol@lval& (0+255),b
 19782  014A1E  0101               	movlb	1	; () banked
 19783  014A20  51A7               	movf	(___fttol@f1+1)& (0+255),w,b
 19784  014A22  0101               	movlb	1	; () banked
 19785  014A24  6FB1               	movwf	(___fttol@lval+1)& (0+255),b
 19786  014A26  0101               	movlb	1	; () banked
 19787  014A28  51A8               	movf	(___fttol@f1+2)& (0+255),w,b
 19788  014A2A  0101               	movlb	1	; () banked
 19789  014A2C  6FB2               	movwf	(___fttol@lval+2)& (0+255),b
 19790  014A2E  0101               	movlb	1	; () banked
 19791  014A30  6BB3               	clrf	(___fttol@lval+3)& (0+255),b
 19792                           
 19793                           ; BSR set to: 1
 19794  014A32  0E8E               	movlw	142
 19795  014A34  0101               	movlb	1	; () banked
 19796  014A36  5FB4               	subwf	___fttol@exp1& (0+255),f,b
 19797                           
 19798                           ; BSR set to: 1
 19799  014A38  0101               	movlb	1	; () banked
 19800  014A3A  AFB4               	btfss	___fttol@exp1& (0+255),7,b
 19801  014A3C  D026               	goto	l10466
 19802                           
 19803                           ; BSR set to: 1
 19804  014A3E  0101               	movlb	1	; () banked
 19805  014A40  51B4               	movf	___fttol@exp1& (0+255),w,b
 19806  014A42  0A80               	xorlw	128
 19807  014A44  0101               	movlb	1	; () banked
 19808  014A46  6FAA               	movwf	??___fttol& (0+255),b
 19809  014A48  0EF1               	movlw	241
 19810  014A4A  0A80               	xorlw	128
 19811  014A4C  0101               	movlb	1	; () banked
 19812  014A4E  5DAA               	subwf	??___fttol& (0+255),w,b
 19813  014A50  B0D8               	btfsc	status,0,c
 19814  014A52  D00D               	goto	l10462
 19815                           
 19816                           ; BSR set to: 1
 19817  014A54  0E00               	movlw	0
 19818  014A56  0101               	movlb	1	; () banked
 19819  014A58  6FA6               	movwf	?___fttol& (0+255),b
 19820  014A5A  0E00               	movlw	0
 19821  014A5C  0101               	movlb	1	; () banked
 19822  014A5E  6FA7               	movwf	(?___fttol+1)& (0+255),b
 19823  014A60  0E00               	movlw	0
 19824  014A62  0101               	movlb	1	; () banked
 19825  014A64  6FA8               	movwf	(?___fttol+2)& (0+255),b
 19826  014A66  0E00               	movlw	0
 19827  014A68  0101               	movlb	1	; () banked
 19828  014A6A  6FA9               	movwf	(?___fttol+3)& (0+255),b
 19829  014A6C  0012               	return	
 19830  014A6E                     l10462:
 19831                           
 19832                           ; BSR set to: 1
 19833  014A6E  0101               	movlb	1	; () banked
 19834  014A70  90D8               	bcf	status,0,c
 19835  014A72  0101               	movlb	1	; () banked
 19836  014A74  33B3               	rrcf	(___fttol@lval+3)& (0+255),f,b
 19837  014A76  0101               	movlb	1	; () banked
 19838  014A78  33B2               	rrcf	(___fttol@lval+2)& (0+255),f,b
 19839  014A7A  0101               	movlb	1	; () banked
 19840  014A7C  33B1               	rrcf	(___fttol@lval+1)& (0+255),f,b
 19841  014A7E  0101               	movlb	1	; () banked
 19842  014A80  33B0               	rrcf	___fttol@lval& (0+255),f,b
 19843                           
 19844                           ; BSR set to: 1
 19845  014A82  0101               	movlb	1	; () banked
 19846  014A84  3FB4               	incfsz	___fttol@exp1& (0+255),f,b
 19847  014A86  D7F3               	goto	l10462
 19848  014A88  D020               	goto	l10476
 19849  014A8A                     l10466:
 19850                           
 19851                           ; BSR set to: 1
 19852  014A8A  0E17               	movlw	23
 19853  014A8C  0101               	movlb	1	; () banked
 19854  014A8E  65B4               	cpfsgt	___fttol@exp1& (0+255),b
 19855  014A90  D019               	goto	l10474
 19856                           
 19857                           ; BSR set to: 1
 19858  014A92  0E00               	movlw	0
 19859  014A94  0101               	movlb	1	; () banked
 19860  014A96  6FA6               	movwf	?___fttol& (0+255),b
 19861  014A98  0E00               	movlw	0
 19862  014A9A  0101               	movlb	1	; () banked
 19863  014A9C  6FA7               	movwf	(?___fttol+1)& (0+255),b
 19864  014A9E  0E00               	movlw	0
 19865  014AA0  0101               	movlb	1	; () banked
 19866  014AA2  6FA8               	movwf	(?___fttol+2)& (0+255),b
 19867  014AA4  0E00               	movlw	0
 19868  014AA6  0101               	movlb	1	; () banked
 19869  014AA8  6FA9               	movwf	(?___fttol+3)& (0+255),b
 19870  014AAA  0012               	return	
 19871  014AAC                     l10472:
 19872                           
 19873                           ; BSR set to: 1
 19874  014AAC  0101               	movlb	1	; () banked
 19875  014AAE  90D8               	bcf	status,0,c
 19876  014AB0  0101               	movlb	1	; () banked
 19877  014AB2  37B0               	rlcf	___fttol@lval& (0+255),f,b
 19878  014AB4  0101               	movlb	1	; () banked
 19879  014AB6  37B1               	rlcf	(___fttol@lval+1)& (0+255),f,b
 19880  014AB8  0101               	movlb	1	; () banked
 19881  014ABA  37B2               	rlcf	(___fttol@lval+2)& (0+255),f,b
 19882  014ABC  0101               	movlb	1	; () banked
 19883  014ABE  37B3               	rlcf	(___fttol@lval+3)& (0+255),f,b
 19884  014AC0  0101               	movlb	1	; () banked
 19885  014AC2  07B4               	decf	___fttol@exp1& (0+255),f,b
 19886  014AC4                     l10474:
 19887                           
 19888                           ; BSR set to: 1
 19889  014AC4  0101               	movlb	1	; () banked
 19890  014AC6  67B4               	tstfsz	___fttol@exp1& (0+255),b
 19891  014AC8  D7F1               	goto	l10472
 19892  014ACA                     l10476:
 19893                           
 19894                           ; BSR set to: 1
 19895  014ACA  0101               	movlb	1	; () banked
 19896  014ACC  51AF               	movf	___fttol@sign1& (0+255),w,b
 19897  014ACE  B4D8               	btfsc	status,2,c
 19898  014AD0  D00F               	goto	l10480
 19899                           
 19900                           ; BSR set to: 1
 19901  014AD2  0101               	movlb	1	; () banked
 19902  014AD4  1FB3               	comf	(___fttol@lval+3)& (0+255),f,b
 19903  014AD6  0101               	movlb	1	; () banked
 19904  014AD8  1FB2               	comf	(___fttol@lval+2)& (0+255),f,b
 19905  014ADA  0101               	movlb	1	; () banked
 19906  014ADC  1FB1               	comf	(___fttol@lval+1)& (0+255),f,b
 19907  014ADE  0101               	movlb	1	; () banked
 19908  014AE0  6DB0               	negf	___fttol@lval& (0+255),b
 19909  014AE2  0E00               	movlw	0
 19910  014AE4  0101               	movlb	1	; () banked
 19911  014AE6  23B1               	addwfc	(___fttol@lval+1)& (0+255),f,b
 19912  014AE8  0101               	movlb	1	; () banked
 19913  014AEA  23B2               	addwfc	(___fttol@lval+2)& (0+255),f,b
 19914  014AEC  0101               	movlb	1	; () banked
 19915  014AEE  23B3               	addwfc	(___fttol@lval+3)& (0+255),f,b
 19916  014AF0                     l10480:
 19917                           
 19918                           ; BSR set to: 1
 19919  014AF0  C1B0  F1A6         	movff	___fttol@lval,?___fttol
 19920  014AF4  C1B1  F1A7         	movff	___fttol@lval+1,?___fttol+1
 19921  014AF8  C1B2  F1A8         	movff	___fttol@lval+2,?___fttol+2
 19922  014AFC  C1B3  F1A9         	movff	___fttol@lval+3,?___fttol+3
 19923  014B00  0012               	return	
 19924  014B02                     __end_of___fttol:
 19925                           	opt stack 0
 19926                           tblptru	equ	0xFF8
 19927                           tblptrh	equ	0xFF7
 19928                           tblptrl	equ	0xFF6
 19929                           tablat	equ	0xFF5
 19930                           prodh	equ	0xFF4
 19931                           prodl	equ	0xFF3
 19932                           intcon	equ	0xFF2
 19933                           postinc0	equ	0xFEE
 19934                           wreg	equ	0xFE8
 19935                           indf1	equ	0xFE7
 19936                           postinc1	equ	0xFE6
 19937                           postdec1	equ	0xFE5
 19938                           fsr1h	equ	0xFE2
 19939                           fsr1l	equ	0xFE1
 19940                           indf2	equ	0xFDF
 19941                           postinc2	equ	0xFDE
 19942                           postdec2	equ	0xFDD
 19943                           fsr2h	equ	0xFDA
 19944                           fsr2l	equ	0xFD9
 19945                           status	equ	0xFD8
 19946                           
 19947 ;; *************** function ___ftmul *****************
 19948 ;; Defined at:
 19949 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
 19950 ;; Parameters:    Size  Location     Type
 19951 ;;  f1              3   41[BANK1 ] float 
 19952 ;;  f2              3   44[BANK1 ] float 
 19953 ;; Auto vars:     Size  Location     Type
 19954 ;;  f3_as_produc    3   51[BANK1 ] unsigned um
 19955 ;;  sign            1   55[BANK1 ] unsigned char 
 19956 ;;  cntr            1   54[BANK1 ] unsigned char 
 19957 ;;  exp             1   50[BANK1 ] unsigned char 
 19958 ;; Return value:  Size  Location     Type
 19959 ;;                  3   41[BANK1 ] float 
 19960 ;; Registers used:
 19961 ;;		wreg, status,2, status,0, cstack
 19962 ;; Tracked objects:
 19963 ;;		On entry : 0/0
 19964 ;;		On exit  : 0/0
 19965 ;;		Unchanged: 0/0
 19966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19967 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19968 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19969 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19970 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 19971 ;;Total ram usage:       15 bytes
 19972 ;; Hardware stack levels used:    1
 19973 ;; Hardware stack levels required when called:    7
 19974 ;; This function calls:
 19975 ;;		___ftpack
 19976 ;; This function is called by:
 19977 ;;		_Command
 19978 ;;		_SetContrast
 19979 ;;		_SetDuty
 19980 ;; This function uses a non-reentrant model
 19981 ;;
 19982                           
 19983                           	psect	text36
 19984  014B02                     __ptext36:
 19985                           	opt stack 0
 19986  014B02                     ___ftmul:
 19987                           	opt stack 22
 19988                           
 19989                           ; BSR set to: 1
 19990                           ;incstack = 0
 19991  014B02  0101               	movlb	1	; () banked
 19992  014B04  C199  F19D         	movff	___ftmul@f1+2,??___ftmul
 19993  014B08  0101               	movlb	1	; () banked
 19994  014B0A  6B9E               	clrf	(??___ftmul+1)& (0+255),b
 19995  014B0C  6B9F               	clrf	(??___ftmul+2)& (0+255),b
 19996  014B0E  0101               	movlb	1	; () banked
 19997  014B10  3598               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 19998  014B12  0101               	movlb	1	; () banked
 19999  014B14  379D               	rlcf	??___ftmul& (0+255),f,b
 20000  014B16  E301               	bnc	u13161
 20001  014B18  819E               	bsf	(??___ftmul+1)& (0+255),0,b
 20002  014B1A                     u13161:
 20003  014B1A  0101               	movlb	1	; () banked
 20004  014B1C  519D               	movf	??___ftmul& (0+255),w,b
 20005  014B1E  0101               	movlb	1	; () banked
 20006  014B20  6FA0               	movwf	___ftmul@exp& (0+255),b
 20007  014B22  0101               	movlb	1	; () banked
 20008  014B24  67A0               	tstfsz	___ftmul@exp& (0+255),b
 20009  014B26  D00A               	goto	l10316
 20010                           
 20011                           ; BSR set to: 1
 20012  014B28  0E00               	movlw	0
 20013  014B2A  0101               	movlb	1	; () banked
 20014  014B2C  6F97               	movwf	?___ftmul& (0+255),b
 20015  014B2E  0E00               	movlw	0
 20016  014B30  0101               	movlb	1	; () banked
 20017  014B32  6F98               	movwf	(?___ftmul+1)& (0+255),b
 20018  014B34  0E00               	movlw	0
 20019  014B36  0101               	movlb	1	; () banked
 20020  014B38  6F99               	movwf	(?___ftmul+2)& (0+255),b
 20021  014B3A  0012               	return	
 20022  014B3C                     l10316:
 20023                           
 20024                           ; BSR set to: 1
 20025  014B3C  0101               	movlb	1	; () banked
 20026  014B3E  C19C  F19D         	movff	___ftmul@f2+2,??___ftmul
 20027  014B42  0101               	movlb	1	; () banked
 20028  014B44  6B9E               	clrf	(??___ftmul+1)& (0+255),b
 20029  014B46  6B9F               	clrf	(??___ftmul+2)& (0+255),b
 20030  014B48  0101               	movlb	1	; () banked
 20031  014B4A  359B               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 20032  014B4C  0101               	movlb	1	; () banked
 20033  014B4E  379D               	rlcf	??___ftmul& (0+255),f,b
 20034  014B50  E301               	bnc	u13181
 20035  014B52  819E               	bsf	(??___ftmul+1)& (0+255),0,b
 20036  014B54                     u13181:
 20037  014B54  0101               	movlb	1	; () banked
 20038  014B56  519D               	movf	??___ftmul& (0+255),w,b
 20039  014B58  0101               	movlb	1	; () banked
 20040  014B5A  6FA5               	movwf	___ftmul@sign& (0+255),b
 20041  014B5C  0101               	movlb	1	; () banked
 20042  014B5E  67A5               	tstfsz	___ftmul@sign& (0+255),b
 20043  014B60  D00A               	goto	l10322
 20044                           
 20045                           ; BSR set to: 1
 20046  014B62  0E00               	movlw	0
 20047  014B64  0101               	movlb	1	; () banked
 20048  014B66  6F97               	movwf	?___ftmul& (0+255),b
 20049  014B68  0E00               	movlw	0
 20050  014B6A  0101               	movlb	1	; () banked
 20051  014B6C  6F98               	movwf	(?___ftmul+1)& (0+255),b
 20052  014B6E  0E00               	movlw	0
 20053  014B70  0101               	movlb	1	; () banked
 20054  014B72  6F99               	movwf	(?___ftmul+2)& (0+255),b
 20055  014B74  0012               	return	
 20056  014B76                     l10322:
 20057                           
 20058                           ; BSR set to: 1
 20059  014B76  0101               	movlb	1	; () banked
 20060  014B78  51A5               	movf	___ftmul@sign& (0+255),w,b
 20061  014B7A  0F7B               	addlw	123
 20062  014B7C  0101               	movlb	1	; () banked
 20063  014B7E  27A0               	addwf	___ftmul@exp& (0+255),f,b
 20064                           
 20065                           ; BSR set to: 1
 20066  014B80  C199  F1A5         	movff	___ftmul@f1+2,___ftmul@sign
 20067  014B84  0101               	movlb	1	; () banked
 20068  014B86  519C               	movf	(___ftmul@f2+2)& (0+255),w,b
 20069  014B88  0101               	movlb	1	; () banked
 20070  014B8A  1BA5               	xorwf	___ftmul@sign& (0+255),f,b
 20071  014B8C  0E80               	movlw	128
 20072  014B8E  0101               	movlb	1	; () banked
 20073  014B90  17A5               	andwf	___ftmul@sign& (0+255),f,b
 20074                           
 20075                           ; BSR set to: 1
 20076  014B92  0101               	movlb	1	; () banked
 20077  014B94  8F98               	bsf	(___ftmul@f1+1)& (0+255),7,b
 20078                           
 20079                           ; BSR set to: 1
 20080  014B96  0101               	movlb	1	; () banked
 20081  014B98  8F9B               	bsf	(___ftmul@f2+1)& (0+255),7,b
 20082                           
 20083                           ; BSR set to: 1
 20084  014B9A  0EFF               	movlw	255
 20085  014B9C  0101               	movlb	1	; () banked
 20086  014B9E  179A               	andwf	___ftmul@f2& (0+255),f,b
 20087  014BA0  0EFF               	movlw	255
 20088  014BA2  0101               	movlb	1	; () banked
 20089  014BA4  179B               	andwf	(___ftmul@f2+1)& (0+255),f,b
 20090  014BA6  0E00               	movlw	0
 20091  014BA8  0101               	movlb	1	; () banked
 20092  014BAA  179C               	andwf	(___ftmul@f2+2)& (0+255),f,b
 20093                           
 20094                           ; BSR set to: 1
 20095  014BAC  0E00               	movlw	0
 20096  014BAE  0101               	movlb	1	; () banked
 20097  014BB0  6FA1               	movwf	___ftmul@f3_as_product& (0+255),b
 20098  014BB2  0E00               	movlw	0
 20099  014BB4  0101               	movlb	1	; () banked
 20100  014BB6  6FA2               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 20101  014BB8  0E00               	movlw	0
 20102  014BBA  0101               	movlb	1	; () banked
 20103  014BBC  6FA3               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 20104                           
 20105                           ; BSR set to: 1
 20106  014BBE  0E07               	movlw	7
 20107  014BC0  0101               	movlb	1	; () banked
 20108  014BC2  6FA4               	movwf	___ftmul@cntr& (0+255),b
 20109  014BC4                     l10336:
 20110                           
 20111                           ; BSR set to: 1
 20112  014BC4  0101               	movlb	1	; () banked
 20113  014BC6  A197               	btfss	___ftmul@f1& (0+255),0,b
 20114  014BC8  D00C               	goto	l10340
 20115                           
 20116                           ; BSR set to: 1
 20117  014BCA  0101               	movlb	1	; () banked
 20118  014BCC  519A               	movf	___ftmul@f2& (0+255),w,b
 20119  014BCE  0101               	movlb	1	; () banked
 20120  014BD0  27A1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 20121  014BD2  0101               	movlb	1	; () banked
 20122  014BD4  519B               	movf	(___ftmul@f2+1)& (0+255),w,b
 20123  014BD6  0101               	movlb	1	; () banked
 20124  014BD8  23A2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 20125  014BDA  0101               	movlb	1	; () banked
 20126  014BDC  519C               	movf	(___ftmul@f2+2)& (0+255),w,b
 20127  014BDE  0101               	movlb	1	; () banked
 20128  014BE0  23A3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 20129  014BE2                     l10340:
 20130                           
 20131                           ; BSR set to: 1
 20132  014BE2  0101               	movlb	1	; () banked
 20133  014BE4  90D8               	bcf	status,0,c
 20134  014BE6  0101               	movlb	1	; () banked
 20135  014BE8  3399               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 20136  014BEA  0101               	movlb	1	; () banked
 20137  014BEC  3398               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 20138  014BEE  0101               	movlb	1	; () banked
 20139  014BF0  3397               	rrcf	___ftmul@f1& (0+255),f,b
 20140  014BF2  0101               	movlb	1	; () banked
 20141  014BF4  90D8               	bcf	status,0,c
 20142  014BF6  0101               	movlb	1	; () banked
 20143  014BF8  379A               	rlcf	___ftmul@f2& (0+255),f,b
 20144  014BFA  0101               	movlb	1	; () banked
 20145  014BFC  379B               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 20146  014BFE  0101               	movlb	1	; () banked
 20147  014C00  379C               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 20148                           
 20149                           ; BSR set to: 1
 20150  014C02  0101               	movlb	1	; () banked
 20151  014C04  2FA4               	decfsz	___ftmul@cntr& (0+255),f,b
 20152  014C06  D7DE               	goto	l10336
 20153                           
 20154                           ; BSR set to: 1
 20155                           
 20156                           ; BSR set to: 1
 20157  014C08  0E09               	movlw	9
 20158  014C0A  0101               	movlb	1	; () banked
 20159  014C0C  6FA4               	movwf	___ftmul@cntr& (0+255),b
 20160  014C0E                     l10346:
 20161                           
 20162                           ; BSR set to: 1
 20163  014C0E  0101               	movlb	1	; () banked
 20164  014C10  A197               	btfss	___ftmul@f1& (0+255),0,b
 20165  014C12  D00C               	goto	l10350
 20166                           
 20167                           ; BSR set to: 1
 20168  014C14  0101               	movlb	1	; () banked
 20169  014C16  519A               	movf	___ftmul@f2& (0+255),w,b
 20170  014C18  0101               	movlb	1	; () banked
 20171  014C1A  27A1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 20172  014C1C  0101               	movlb	1	; () banked
 20173  014C1E  519B               	movf	(___ftmul@f2+1)& (0+255),w,b
 20174  014C20  0101               	movlb	1	; () banked
 20175  014C22  23A2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 20176  014C24  0101               	movlb	1	; () banked
 20177  014C26  519C               	movf	(___ftmul@f2+2)& (0+255),w,b
 20178  014C28  0101               	movlb	1	; () banked
 20179  014C2A  23A3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 20180  014C2C                     l10350:
 20181                           
 20182                           ; BSR set to: 1
 20183  014C2C  0101               	movlb	1	; () banked
 20184  014C2E  90D8               	bcf	status,0,c
 20185  014C30  0101               	movlb	1	; () banked
 20186  014C32  3399               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 20187  014C34  0101               	movlb	1	; () banked
 20188  014C36  3398               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 20189  014C38  0101               	movlb	1	; () banked
 20190  014C3A  3397               	rrcf	___ftmul@f1& (0+255),f,b
 20191  014C3C  0101               	movlb	1	; () banked
 20192  014C3E  90D8               	bcf	status,0,c
 20193  014C40  0101               	movlb	1	; () banked
 20194  014C42  33A3               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 20195  014C44  0101               	movlb	1	; () banked
 20196  014C46  33A2               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 20197  014C48  0101               	movlb	1	; () banked
 20198  014C4A  33A1               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 20199                           
 20200                           ; BSR set to: 1
 20201  014C4C  0101               	movlb	1	; () banked
 20202  014C4E  2FA4               	decfsz	___ftmul@cntr& (0+255),f,b
 20203  014C50  D7DE               	goto	l10346
 20204                           
 20205                           ; BSR set to: 1
 20206                           
 20207                           ; BSR set to: 1
 20208  014C52  C1A1  F17C         	movff	___ftmul@f3_as_product,___ftpack@arg
 20209  014C56  C1A2  F17D         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 20210  014C5A  C1A3  F17E         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 20211  014C5E  C1A0  F17F         	movff	___ftmul@exp,___ftpack@exp
 20212  014C62  C1A5  F180         	movff	___ftmul@sign,___ftpack@sign
 20213  014C66  ECA2  F0A8         	call	___ftpack	;wreg free
 20214  014C6A  C17C  F197         	movff	?___ftpack,?___ftmul
 20215  014C6E  C17D  F198         	movff	?___ftpack+1,?___ftmul+1
 20216  014C72  C17E  F199         	movff	?___ftpack+2,?___ftmul+2
 20217  014C76  0012               	return	
 20218  014C78                     __end_of___ftmul:
 20219                           	opt stack 0
 20220                           tblptru	equ	0xFF8
 20221                           tblptrh	equ	0xFF7
 20222                           tblptrl	equ	0xFF6
 20223                           tablat	equ	0xFF5
 20224                           prodh	equ	0xFF4
 20225                           prodl	equ	0xFF3
 20226                           intcon	equ	0xFF2
 20227                           postinc0	equ	0xFEE
 20228                           wreg	equ	0xFE8
 20229                           indf1	equ	0xFE7
 20230                           postinc1	equ	0xFE6
 20231                           postdec1	equ	0xFE5
 20232                           fsr1h	equ	0xFE2
 20233                           fsr1l	equ	0xFE1
 20234                           indf2	equ	0xFDF
 20235                           postinc2	equ	0xFDE
 20236                           postdec2	equ	0xFDD
 20237                           fsr2h	equ	0xFDA
 20238                           fsr2l	equ	0xFD9
 20239                           status	equ	0xFD8
 20240                           
 20241 ;; *************** function ___ftdiv *****************
 20242 ;; Defined at:
 20243 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
 20244 ;; Parameters:    Size  Location     Type
 20245 ;;  f1              3   26[BANK1 ] float 
 20246 ;;  f2              3   29[BANK1 ] float 
 20247 ;; Auto vars:     Size  Location     Type
 20248 ;;  f3              3   36[BANK1 ] float 
 20249 ;;  sign            1   40[BANK1 ] unsigned char 
 20250 ;;  exp             1   39[BANK1 ] unsigned char 
 20251 ;;  cntr            1   35[BANK1 ] unsigned char 
 20252 ;; Return value:  Size  Location     Type
 20253 ;;                  3   26[BANK1 ] float 
 20254 ;; Registers used:
 20255 ;;		wreg, status,2, status,0, cstack
 20256 ;; Tracked objects:
 20257 ;;		On entry : 0/0
 20258 ;;		On exit  : 0/0
 20259 ;;		Unchanged: 0/0
 20260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20261 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20262 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20263 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20264 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 20265 ;;Total ram usage:       15 bytes
 20266 ;; Hardware stack levels used:    1
 20267 ;; Hardware stack levels required when called:    7
 20268 ;; This function calls:
 20269 ;;		___ftpack
 20270 ;; This function is called by:
 20271 ;;		_Command
 20272 ;;		_SetContrast
 20273 ;;		_SetDuty
 20274 ;; This function uses a non-reentrant model
 20275 ;;
 20276                           
 20277                           	psect	text37
 20278  014C78                     __ptext37:
 20279                           	opt stack 0
 20280  014C78                     ___ftdiv:
 20281                           	opt stack 22
 20282                           
 20283                           ;incstack = 0
 20284  014C78  0101               	movlb	1	; () banked
 20285  014C7A  C18A  F18E         	movff	___ftdiv@f1+2,??___ftdiv
 20286  014C7E  0101               	movlb	1	; () banked
 20287  014C80  6B8F               	clrf	(??___ftdiv+1)& (0+255),b
 20288  014C82  6B90               	clrf	(??___ftdiv+2)& (0+255),b
 20289  014C84  0101               	movlb	1	; () banked
 20290  014C86  3589               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 20291  014C88  0101               	movlb	1	; () banked
 20292  014C8A  378E               	rlcf	??___ftdiv& (0+255),f,b
 20293  014C8C  E301               	bnc	u13111
 20294  014C8E  818F               	bsf	(??___ftdiv+1)& (0+255),0,b
 20295  014C90                     u13111:
 20296  014C90  0101               	movlb	1	; () banked
 20297  014C92  518E               	movf	??___ftdiv& (0+255),w,b
 20298  014C94  0101               	movlb	1	; () banked
 20299  014C96  6F95               	movwf	___ftdiv@exp& (0+255),b
 20300  014C98  0101               	movlb	1	; () banked
 20301  014C9A  6795               	tstfsz	___ftdiv@exp& (0+255),b
 20302  014C9C  D00A               	goto	l10270
 20303                           
 20304                           ; BSR set to: 1
 20305  014C9E  0E00               	movlw	0
 20306  014CA0  0101               	movlb	1	; () banked
 20307  014CA2  6F88               	movwf	?___ftdiv& (0+255),b
 20308  014CA4  0E00               	movlw	0
 20309  014CA6  0101               	movlb	1	; () banked
 20310  014CA8  6F89               	movwf	(?___ftdiv+1)& (0+255),b
 20311  014CAA  0E00               	movlw	0
 20312  014CAC  0101               	movlb	1	; () banked
 20313  014CAE  6F8A               	movwf	(?___ftdiv+2)& (0+255),b
 20314  014CB0  0012               	return	
 20315  014CB2                     l10270:
 20316                           
 20317                           ; BSR set to: 1
 20318  014CB2  0101               	movlb	1	; () banked
 20319  014CB4  C18D  F18E         	movff	___ftdiv@f2+2,??___ftdiv
 20320  014CB8  0101               	movlb	1	; () banked
 20321  014CBA  6B8F               	clrf	(??___ftdiv+1)& (0+255),b
 20322  014CBC  6B90               	clrf	(??___ftdiv+2)& (0+255),b
 20323  014CBE  0101               	movlb	1	; () banked
 20324  014CC0  358C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 20325  014CC2  0101               	movlb	1	; () banked
 20326  014CC4  378E               	rlcf	??___ftdiv& (0+255),f,b
 20327  014CC6  E301               	bnc	u13131
 20328  014CC8  818F               	bsf	(??___ftdiv+1)& (0+255),0,b
 20329  014CCA                     u13131:
 20330  014CCA  0101               	movlb	1	; () banked
 20331  014CCC  518E               	movf	??___ftdiv& (0+255),w,b
 20332  014CCE  0101               	movlb	1	; () banked
 20333  014CD0  6F96               	movwf	___ftdiv@sign& (0+255),b
 20334  014CD2  0101               	movlb	1	; () banked
 20335  014CD4  6796               	tstfsz	___ftdiv@sign& (0+255),b
 20336  014CD6  D00A               	goto	l10276
 20337                           
 20338                           ; BSR set to: 1
 20339  014CD8  0E00               	movlw	0
 20340  014CDA  0101               	movlb	1	; () banked
 20341  014CDC  6F88               	movwf	?___ftdiv& (0+255),b
 20342  014CDE  0E00               	movlw	0
 20343  014CE0  0101               	movlb	1	; () banked
 20344  014CE2  6F89               	movwf	(?___ftdiv+1)& (0+255),b
 20345  014CE4  0E00               	movlw	0
 20346  014CE6  0101               	movlb	1	; () banked
 20347  014CE8  6F8A               	movwf	(?___ftdiv+2)& (0+255),b
 20348  014CEA  0012               	return	
 20349  014CEC                     l10276:
 20350                           
 20351                           ; BSR set to: 1
 20352  014CEC  0E00               	movlw	0
 20353  014CEE  0101               	movlb	1	; () banked
 20354  014CF0  6F92               	movwf	___ftdiv@f3& (0+255),b
 20355  014CF2  0E00               	movlw	0
 20356  014CF4  0101               	movlb	1	; () banked
 20357  014CF6  6F93               	movwf	(___ftdiv@f3+1)& (0+255),b
 20358  014CF8  0E00               	movlw	0
 20359  014CFA  0101               	movlb	1	; () banked
 20360  014CFC  6F94               	movwf	(___ftdiv@f3+2)& (0+255),b
 20361                           
 20362                           ; BSR set to: 1
 20363  014CFE  0101               	movlb	1	; () banked
 20364  014D00  5196               	movf	___ftdiv@sign& (0+255),w,b
 20365  014D02  0F89               	addlw	137
 20366  014D04  0101               	movlb	1	; () banked
 20367  014D06  5F95               	subwf	___ftdiv@exp& (0+255),f,b
 20368                           
 20369                           ; BSR set to: 1
 20370  014D08  C18A  F196         	movff	___ftdiv@f1+2,___ftdiv@sign
 20371                           
 20372                           ; BSR set to: 1
 20373  014D0C  0101               	movlb	1	; () banked
 20374  014D0E  518D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20375  014D10  0101               	movlb	1	; () banked
 20376  014D12  1B96               	xorwf	___ftdiv@sign& (0+255),f,b
 20377                           
 20378                           ; BSR set to: 1
 20379  014D14  0E80               	movlw	128
 20380  014D16  0101               	movlb	1	; () banked
 20381  014D18  1796               	andwf	___ftdiv@sign& (0+255),f,b
 20382                           
 20383                           ; BSR set to: 1
 20384  014D1A  0101               	movlb	1	; () banked
 20385  014D1C  8F89               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 20386                           
 20387                           ; BSR set to: 1
 20388  014D1E  0EFF               	movlw	255
 20389  014D20  0101               	movlb	1	; () banked
 20390  014D22  1788               	andwf	___ftdiv@f1& (0+255),f,b
 20391  014D24  0EFF               	movlw	255
 20392  014D26  0101               	movlb	1	; () banked
 20393  014D28  1789               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 20394  014D2A  0E00               	movlw	0
 20395  014D2C  0101               	movlb	1	; () banked
 20396  014D2E  178A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 20397                           
 20398                           ; BSR set to: 1
 20399  014D30  0101               	movlb	1	; () banked
 20400  014D32  8F8C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 20401                           
 20402                           ; BSR set to: 1
 20403  014D34  0EFF               	movlw	255
 20404  014D36  0101               	movlb	1	; () banked
 20405  014D38  178B               	andwf	___ftdiv@f2& (0+255),f,b
 20406  014D3A  0EFF               	movlw	255
 20407  014D3C  0101               	movlb	1	; () banked
 20408  014D3E  178C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 20409  014D40  0E00               	movlw	0
 20410  014D42  0101               	movlb	1	; () banked
 20411  014D44  178D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 20412                           
 20413                           ; BSR set to: 1
 20414  014D46  0E18               	movlw	24
 20415  014D48  0101               	movlb	1	; () banked
 20416  014D4A  6F91               	movwf	___ftdiv@cntr& (0+255),b
 20417  014D4C                     l10296:
 20418                           
 20419                           ; BSR set to: 1
 20420  014D4C  0101               	movlb	1	; () banked
 20421  014D4E  90D8               	bcf	status,0,c
 20422  014D50  0101               	movlb	1	; () banked
 20423  014D52  3792               	rlcf	___ftdiv@f3& (0+255),f,b
 20424  014D54  0101               	movlb	1	; () banked
 20425  014D56  3793               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 20426  014D58  0101               	movlb	1	; () banked
 20427  014D5A  3794               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 20428                           
 20429                           ; BSR set to: 1
 20430  014D5C  0101               	movlb	1	; () banked
 20431  014D5E  518B               	movf	___ftdiv@f2& (0+255),w,b
 20432  014D60  0101               	movlb	1	; () banked
 20433  014D62  5D88               	subwf	___ftdiv@f1& (0+255),w,b
 20434  014D64  0101               	movlb	1	; () banked
 20435  014D66  518C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 20436  014D68  0101               	movlb	1	; () banked
 20437  014D6A  5989               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 20438  014D6C  0101               	movlb	1	; () banked
 20439  014D6E  518D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20440  014D70  0101               	movlb	1	; () banked
 20441  014D72  598A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 20442  014D74  A0D8               	btfss	status,0,c
 20443  014D76  D00E               	goto	l1904
 20444                           
 20445                           ; BSR set to: 1
 20446  014D78  0101               	movlb	1	; () banked
 20447  014D7A  518B               	movf	___ftdiv@f2& (0+255),w,b
 20448  014D7C  0101               	movlb	1	; () banked
 20449  014D7E  5F88               	subwf	___ftdiv@f1& (0+255),f,b
 20450  014D80  0101               	movlb	1	; () banked
 20451  014D82  518C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 20452  014D84  0101               	movlb	1	; () banked
 20453  014D86  5B89               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 20454  014D88  0101               	movlb	1	; () banked
 20455  014D8A  518D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 20456  014D8C  0101               	movlb	1	; () banked
 20457  014D8E  5B8A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 20458                           
 20459                           ; BSR set to: 1
 20460  014D90  0101               	movlb	1	; () banked
 20461  014D92  8192               	bsf	___ftdiv@f3& (0+255),0,b
 20462  014D94                     l1904:
 20463                           
 20464                           ; BSR set to: 1
 20465  014D94  0101               	movlb	1	; () banked
 20466  014D96  90D8               	bcf	status,0,c
 20467  014D98  0101               	movlb	1	; () banked
 20468  014D9A  3788               	rlcf	___ftdiv@f1& (0+255),f,b
 20469  014D9C  0101               	movlb	1	; () banked
 20470  014D9E  3789               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 20471  014DA0  0101               	movlb	1	; () banked
 20472  014DA2  378A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 20473                           
 20474                           ; BSR set to: 1
 20475  014DA4  0101               	movlb	1	; () banked
 20476  014DA6  2F91               	decfsz	___ftdiv@cntr& (0+255),f,b
 20477  014DA8  D7D1               	goto	l10296
 20478                           
 20479                           ; BSR set to: 1
 20480                           
 20481                           ; BSR set to: 1
 20482  014DAA  C192  F17C         	movff	___ftdiv@f3,___ftpack@arg
 20483  014DAE  C193  F17D         	movff	___ftdiv@f3+1,___ftpack@arg+1
 20484  014DB2  C194  F17E         	movff	___ftdiv@f3+2,___ftpack@arg+2
 20485  014DB6  C195  F17F         	movff	___ftdiv@exp,___ftpack@exp
 20486  014DBA  C196  F180         	movff	___ftdiv@sign,___ftpack@sign
 20487  014DBE  ECA2  F0A8         	call	___ftpack	;wreg free
 20488  014DC2  C17C  F188         	movff	?___ftpack,?___ftdiv
 20489  014DC6  C17D  F189         	movff	?___ftpack+1,?___ftdiv+1
 20490  014DCA  C17E  F18A         	movff	?___ftpack+2,?___ftdiv+2
 20491  014DCE  0012               	return	
 20492  014DD0                     __end_of___ftdiv:
 20493                           	opt stack 0
 20494                           tblptru	equ	0xFF8
 20495                           tblptrh	equ	0xFF7
 20496                           tblptrl	equ	0xFF6
 20497                           tablat	equ	0xFF5
 20498                           prodh	equ	0xFF4
 20499                           prodl	equ	0xFF3
 20500                           intcon	equ	0xFF2
 20501                           postinc0	equ	0xFEE
 20502                           wreg	equ	0xFE8
 20503                           indf1	equ	0xFE7
 20504                           postinc1	equ	0xFE6
 20505                           postdec1	equ	0xFE5
 20506                           fsr1h	equ	0xFE2
 20507                           fsr1l	equ	0xFE1
 20508                           indf2	equ	0xFDF
 20509                           postinc2	equ	0xFDE
 20510                           postdec2	equ	0xFDD
 20511                           fsr2h	equ	0xFDA
 20512                           fsr2l	equ	0xFD9
 20513                           status	equ	0xFD8
 20514                           
 20515 ;; *************** function ___ftpack *****************
 20516 ;; Defined at:
 20517 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
 20518 ;; Parameters:    Size  Location     Type
 20519 ;;  arg             3   14[BANK1 ] unsigned um
 20520 ;;  exp             1   17[BANK1 ] unsigned char 
 20521 ;;  sign            1   18[BANK1 ] unsigned char 
 20522 ;; Auto vars:     Size  Location     Type
 20523 ;;		None
 20524 ;; Return value:  Size  Location     Type
 20525 ;;                  3   14[BANK1 ] float 
 20526 ;; Registers used:
 20527 ;;		wreg, status,2, status,0
 20528 ;; Tracked objects:
 20529 ;;		On entry : 0/0
 20530 ;;		On exit  : 0/0
 20531 ;;		Unchanged: 0/0
 20532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20533 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 20534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20535 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 20536 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 20537 ;;Total ram usage:        8 bytes
 20538 ;; Hardware stack levels used:    1
 20539 ;; Hardware stack levels required when called:    6
 20540 ;; This function calls:
 20541 ;;		Nothing
 20542 ;; This function is called by:
 20543 ;;		___ftdiv
 20544 ;;		___ftmul
 20545 ;;		___lbtoft
 20546 ;;		___lwtoft
 20547 ;; This function uses a non-reentrant model
 20548 ;;
 20549                           
 20550                           	psect	text38
 20551  015144                     __ptext38:
 20552                           	opt stack 0
 20553  015144                     ___ftpack:
 20554                           	opt stack 22
 20555                           
 20556                           ;incstack = 0
 20557  015144  0101               	movlb	1	; () banked
 20558  015146  517F               	movf	___ftpack@exp& (0+255),w,b
 20559  015148  B4D8               	btfsc	status,2,c
 20560  01514A  D008               	goto	l9552
 20561                           
 20562                           ; BSR set to: 1
 20563  01514C  0101               	movlb	1	; () banked
 20564  01514E  517C               	movf	___ftpack@arg& (0+255),w,b
 20565  015150  0101               	movlb	1	; () banked
 20566  015152  117D               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 20567  015154  0101               	movlb	1	; () banked
 20568  015156  117E               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 20569  015158  A4D8               	btfss	status,2,c
 20570  01515A  D014               	goto	l9558
 20571  01515C                     l9552:
 20572                           
 20573                           ; BSR set to: 1
 20574  01515C  0E00               	movlw	0
 20575  01515E  0101               	movlb	1	; () banked
 20576  015160  6F7C               	movwf	?___ftpack& (0+255),b
 20577  015162  0E00               	movlw	0
 20578  015164  0101               	movlb	1	; () banked
 20579  015166  6F7D               	movwf	(?___ftpack+1)& (0+255),b
 20580  015168  0E00               	movlw	0
 20581  01516A  0101               	movlb	1	; () banked
 20582  01516C  6F7E               	movwf	(?___ftpack+2)& (0+255),b
 20583  01516E  0012               	return	
 20584  015170                     l9556:
 20585                           
 20586                           ; BSR set to: 1
 20587  015170  0101               	movlb	1	; () banked
 20588  015172  2B7F               	incf	___ftpack@exp& (0+255),f,b
 20589  015174  0101               	movlb	1	; () banked
 20590  015176  90D8               	bcf	status,0,c
 20591  015178  0101               	movlb	1	; () banked
 20592  01517A  337E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20593  01517C  0101               	movlb	1	; () banked
 20594  01517E  337D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20595  015180  0101               	movlb	1	; () banked
 20596  015182  337C               	rrcf	___ftpack@arg& (0+255),f,b
 20597  015184                     l9558:
 20598                           
 20599                           ; BSR set to: 1
 20600  015184  0E00               	movlw	0
 20601  015186  0101               	movlb	1	; () banked
 20602  015188  157C               	andwf	___ftpack@arg& (0+255),w,b
 20603  01518A  0101               	movlb	1	; () banked
 20604  01518C  6F81               	movwf	??___ftpack& (0+255),b
 20605  01518E  0E00               	movlw	0
 20606  015190  0101               	movlb	1	; () banked
 20607  015192  157D               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20608  015194  0101               	movlb	1	; () banked
 20609  015196  6F82               	movwf	(??___ftpack+1)& (0+255),b
 20610  015198  0EFE               	movlw	254
 20611  01519A  0101               	movlb	1	; () banked
 20612  01519C  157E               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20613  01519E  0101               	movlb	1	; () banked
 20614  0151A0  6F83               	movwf	(??___ftpack+2)& (0+255),b
 20615  0151A2  0101               	movlb	1	; () banked
 20616  0151A4  5181               	movf	??___ftpack& (0+255),w,b
 20617  0151A6  1182               	iorwf	(??___ftpack+1)& (0+255),w,b
 20618  0151A8  1183               	iorwf	(??___ftpack+2)& (0+255),w,b
 20619  0151AA  B4D8               	btfsc	status,2,c
 20620  0151AC  D014               	goto	l9564
 20621  0151AE  D7E0               	goto	l9556
 20622  0151B0                     l9560:
 20623                           
 20624                           ; BSR set to: 1
 20625  0151B0  0101               	movlb	1	; () banked
 20626  0151B2  2B7F               	incf	___ftpack@exp& (0+255),f,b
 20627                           
 20628                           ; BSR set to: 1
 20629  0151B4  0E01               	movlw	1
 20630  0151B6  0101               	movlb	1	; () banked
 20631  0151B8  277C               	addwf	___ftpack@arg& (0+255),f,b
 20632  0151BA  0E00               	movlw	0
 20633  0151BC  0101               	movlb	1	; () banked
 20634  0151BE  237D               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 20635  0151C0  0E00               	movlw	0
 20636  0151C2  0101               	movlb	1	; () banked
 20637  0151C4  237E               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 20638  0151C6  0101               	movlb	1	; () banked
 20639  0151C8  90D8               	bcf	status,0,c
 20640  0151CA  0101               	movlb	1	; () banked
 20641  0151CC  337E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 20642  0151CE  0101               	movlb	1	; () banked
 20643  0151D0  337D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 20644  0151D2  0101               	movlb	1	; () banked
 20645  0151D4  337C               	rrcf	___ftpack@arg& (0+255),f,b
 20646  0151D6                     l9564:
 20647                           
 20648                           ; BSR set to: 1
 20649  0151D6  0E00               	movlw	0
 20650  0151D8  0101               	movlb	1	; () banked
 20651  0151DA  157C               	andwf	___ftpack@arg& (0+255),w,b
 20652  0151DC  0101               	movlb	1	; () banked
 20653  0151DE  6F81               	movwf	??___ftpack& (0+255),b
 20654  0151E0  0E00               	movlw	0
 20655  0151E2  0101               	movlb	1	; () banked
 20656  0151E4  157D               	andwf	(___ftpack@arg+1)& (0+255),w,b
 20657  0151E6  0101               	movlb	1	; () banked
 20658  0151E8  6F82               	movwf	(??___ftpack+1)& (0+255),b
 20659  0151EA  0EFF               	movlw	255
 20660  0151EC  0101               	movlb	1	; () banked
 20661  0151EE  157E               	andwf	(___ftpack@arg+2)& (0+255),w,b
 20662  0151F0  0101               	movlb	1	; () banked
 20663  0151F2  6F83               	movwf	(??___ftpack+2)& (0+255),b
 20664  0151F4  0101               	movlb	1	; () banked
 20665  0151F6  5181               	movf	??___ftpack& (0+255),w,b
 20666  0151F8  1182               	iorwf	(??___ftpack+1)& (0+255),w,b
 20667  0151FA  1183               	iorwf	(??___ftpack+2)& (0+255),w,b
 20668  0151FC  B4D8               	btfsc	status,2,c
 20669  0151FE  D00B               	goto	l9568
 20670  015200  D7D7               	goto	l9560
 20671  015202                     l9566:
 20672                           
 20673                           ; BSR set to: 1
 20674  015202  0101               	movlb	1	; () banked
 20675  015204  077F               	decf	___ftpack@exp& (0+255),f,b
 20676  015206  0101               	movlb	1	; () banked
 20677  015208  90D8               	bcf	status,0,c
 20678  01520A  0101               	movlb	1	; () banked
 20679  01520C  377C               	rlcf	___ftpack@arg& (0+255),f,b
 20680  01520E  0101               	movlb	1	; () banked
 20681  015210  377D               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 20682  015212  0101               	movlb	1	; () banked
 20683  015214  377E               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 20684  015216                     l9568:
 20685                           
 20686                           ; BSR set to: 1
 20687  015216  0101               	movlb	1	; () banked
 20688  015218  AF7D               	btfss	(___ftpack@arg+1)& (0+255),7,b
 20689  01521A  D7F3               	goto	l9566
 20690                           
 20691                           ; BSR set to: 1
 20692  01521C  0101               	movlb	1	; () banked
 20693  01521E  B17F               	btfsc	___ftpack@exp& (0+255),0,b
 20694  015220  D002               	goto	l9572
 20695                           
 20696                           ; BSR set to: 1
 20697  015222  0101               	movlb	1	; () banked
 20698  015224  9F7D               	bcf	(___ftpack@arg+1)& (0+255),7,b
 20699  015226                     l9572:
 20700                           
 20701                           ; BSR set to: 1
 20702  015226  0101               	movlb	1	; () banked
 20703  015228  90D8               	bcf	status,0,c
 20704  01522A  337F               	rrcf	___ftpack@exp& (0+255),f,b
 20705  01522C  0101               	movlb	1	; () banked
 20706  01522E  517F               	movf	___ftpack@exp& (0+255),w,b
 20707  015230  0101               	movlb	1	; () banked
 20708  015232  137E               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 20709                           
 20710                           ; BSR set to: 1
 20711  015234  0101               	movlb	1	; () banked
 20712  015236  5180               	movf	___ftpack@sign& (0+255),w,b
 20713  015238  B4D8               	btfsc	status,2,c
 20714  01523A  D002               	goto	l9578
 20715                           
 20716                           ; BSR set to: 1
 20717  01523C  0101               	movlb	1	; () banked
 20718  01523E  8F7E               	bsf	(___ftpack@arg+2)& (0+255),7,b
 20719  015240                     l9578:
 20720                           
 20721                           ; BSR set to: 1
 20722  015240  C17C  F17C         	movff	___ftpack@arg,?___ftpack
 20723  015244  C17D  F17D         	movff	___ftpack@arg+1,?___ftpack+1
 20724  015248  C17E  F17E         	movff	___ftpack@arg+2,?___ftpack+2
 20725  01524C  0012               	return	
 20726  01524E                     __end_of___ftpack:
 20727                           	opt stack 0
 20728                           tblptru	equ	0xFF8
 20729                           tblptrh	equ	0xFF7
 20730                           tblptrl	equ	0xFF6
 20731                           tablat	equ	0xFF5
 20732                           prodh	equ	0xFF4
 20733                           prodl	equ	0xFF3
 20734                           intcon	equ	0xFF2
 20735                           postinc0	equ	0xFEE
 20736                           wreg	equ	0xFE8
 20737                           indf1	equ	0xFE7
 20738                           postinc1	equ	0xFE6
 20739                           postdec1	equ	0xFE5
 20740                           fsr1h	equ	0xFE2
 20741                           fsr1l	equ	0xFE1
 20742                           indf2	equ	0xFDF
 20743                           postinc2	equ	0xFDE
 20744                           postdec2	equ	0xFDD
 20745                           fsr2h	equ	0xFDA
 20746                           fsr2l	equ	0xFD9
 20747                           status	equ	0xFD8
 20748                           
 20749 ;; *************** function _Send_Config2 *****************
 20750 ;; Defined at:
 20751 ;;		line 137 in file "RF.c"
 20752 ;; Parameters:    Size  Location     Type
 20753 ;;  pin             1    wreg     unsigned char 
 20754 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 20755 ;;		 -> SubLightOFF(16), SubLightON(16), Aux2OFF(16), Aux2ON(16), 
 20756 ;;		 -> BedOFF(16), BedON(16), AuxOFF(16), AuxON(16), 
 20757 ;;		 -> fanOFF(16), fanON(16), 
 20758 ;; Auto vars:     Size  Location     Type
 20759 ;;  pin             1   29[BANK1 ] unsigned char 
 20760 ;;  i               1   30[BANK1 ] unsigned char 
 20761 ;; Return value:  Size  Location     Type
 20762 ;;		None               void
 20763 ;; Registers used:
 20764 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20765 ;; Tracked objects:
 20766 ;;		On entry : 0/0
 20767 ;;		On exit  : 0/0
 20768 ;;		Unchanged: 0/0
 20769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20770 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20771 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20772 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 20773 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 20774 ;;Total ram usage:        6 bytes
 20775 ;; Hardware stack levels used:    1
 20776 ;; Hardware stack levels required when called:    8
 20777 ;; This function calls:
 20778 ;;		_One_Config2
 20779 ;;		_Zero_Config2
 20780 ;;		_delayUS
 20781 ;; This function is called by:
 20782 ;;		_Command
 20783 ;; This function uses a non-reentrant model
 20784 ;;
 20785                           
 20786                           	psect	text39
 20787  0162A4                     __ptext39:
 20788                           	opt stack 0
 20789  0162A4                     _Send_Config2:
 20790                           	opt stack 21
 20791                           
 20792                           ; BSR set to: 1
 20793                           ;incstack = 0
 20794                           ;Send_Config2@pin stored from wreg
 20795  0162A4  0101               	movlb	1	; () banked
 20796  0162A6  6F8B               	movwf	Send_Config2@pin& (0+255),b
 20797                           
 20798                           ; BSR set to: 1
 20799                           ;RF.c: 139: unsigned char i=0;
 20800  0162A8  0E00               	movlw	0
 20801  0162AA  0101               	movlb	1	; () banked
 20802  0162AC  6F8C               	movwf	Send_Config2@i& (0+255),b
 20803                           
 20804                           ;RF.c: 141: for(i=0;i<16;i++)
 20805  0162AE  0E00               	movlw	0
 20806  0162B0  0101               	movlb	1	; () banked
 20807  0162B2  6F8C               	movwf	Send_Config2@i& (0+255),b
 20808  0162B4  D025               	goto	L28
 20809  0162B6                     l10898:
 20810                           
 20811                           ; BSR set to: 1
 20812                           ;RF.c: 142: {
 20813                           ;RF.c: 143: if(data[i] == 0)
 20814  0162B6  0101               	movlb	1	; () banked
 20815  0162B8  518C               	movf	Send_Config2@i& (0+255),w,b
 20816  0162BA  0D01               	mullw	1
 20817  0162BC  0101               	movlb	1	; () banked
 20818  0162BE  C187  F189         	movff	Send_Config2@data,??_Send_Config2
 20819  0162C2  0101               	movlb	1	; () banked
 20820  0162C4  C188  F18A         	movff	Send_Config2@data+1,??_Send_Config2+1
 20821  0162C8  50F3               	movf	prodl,w,c
 20822  0162CA  0101               	movlb	1	; () banked
 20823  0162CC  2789               	addwf	??_Send_Config2& (0+255),f,b
 20824  0162CE  50F4               	movf	prodh,w,c
 20825  0162D0  0101               	movlb	1	; () banked
 20826  0162D2  238A               	addwfc	(??_Send_Config2+1)& (0+255),f,b
 20827  0162D4  C189  FFF6         	movff	??_Send_Config2,tblptrl
 20828  0162D8  C18A  FFF7         	movff	??_Send_Config2+1,tblptrh
 20829  0162DC                     	if	0	;tblptru may be non-zero
 20830  0162DC                     	endif
 20831  0162DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20832  0162DC  0E00               	movlw	low (__mediumconst shr (0+16))
 20833  0162DE  6EF8               	movwf	tblptru,c
 20834  0162E0                     	endif
 20835  0162E0  0008               	tblrd		*
 20836  0162E2  50F5               	movf	tablat,w,c
 20837  0162E4  0900               	iorlw	0
 20838  0162E6  A4D8               	btfss	status,2,c
 20839  0162E8  D005               	goto	l10902
 20840                           
 20841                           ; BSR set to: 1
 20842                           ;RF.c: 144: {
 20843                           ;RF.c: 145: Zero_Config2(pin);
 20844  0162EA  0101               	movlb	1	; () banked
 20845  0162EC  518B               	movf	Send_Config2@pin& (0+255),w,b
 20846  0162EE  ECD0  F0B5         	call	_Zero_Config2
 20847                           
 20848                           ;RF.c: 146: }
 20849  0162F2  D004               	goto	l10904
 20850  0162F4                     l10902:
 20851                           
 20852                           ;RF.c: 147: else
 20853                           ;RF.c: 148: {
 20854                           ;RF.c: 149: One_Config2(pin);
 20855  0162F4  0101               	movlb	1	; () banked
 20856  0162F6  518B               	movf	Send_Config2@pin& (0+255),w,b
 20857  0162F8  ECF6  F0B5         	call	_One_Config2
 20858  0162FC                     l10904:
 20859  0162FC  0101               	movlb	1	; () banked
 20860  0162FE  2B8C               	incf	Send_Config2@i& (0+255),f,b
 20861  016300                     L28:
 20862                           
 20863                           ; BSR set to: 1
 20864  016300  0E0F               	movlw	15
 20865  016302  0101               	movlb	1	; () banked
 20866  016304  658C               	cpfsgt	Send_Config2@i& (0+255),b
 20867  016306  D7D7               	goto	l10898
 20868                           
 20869                           ; BSR set to: 1
 20870                           ;RF.c: 150: }
 20871                           ;RF.c: 151: }
 20872                           ;RF.c: 153: LATD &= ~pin;
 20873                           
 20874                           ; BSR set to: 1
 20875  016308  0101               	movlb	1	; () banked
 20876  01630A  518B               	movf	Send_Config2@pin& (0+255),w,b
 20877  01630C  0AFF               	xorlw	255
 20878  01630E  168C               	andwf	3980,f,c	;volatile
 20879                           
 20880                           ; BSR set to: 1
 20881                           ;RF.c: 154: delayUS(11700);
 20882  016310  0EB4               	movlw	180
 20883  016312  0101               	movlb	1	; () banked
 20884  016314  6F7C               	movwf	delayUS@US& (0+255),b
 20885  016316  0E2D               	movlw	45
 20886  016318  0101               	movlb	1	; () banked
 20887  01631A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 20888  01631C  0E00               	movlw	0
 20889  01631E  0101               	movlb	1	; () banked
 20890  016320  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 20891  016322  0E00               	movlw	0
 20892  016324  0101               	movlb	1	; () banked
 20893  016326  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 20894  016328  EC0D  F0B3         	call	_delayUS	;wreg free
 20895  01632C  0012               	return	
 20896  01632E                     __end_of_Send_Config2:
 20897                           	opt stack 0
 20898                           tblptru	equ	0xFF8
 20899                           tblptrh	equ	0xFF7
 20900                           tblptrl	equ	0xFF6
 20901                           tablat	equ	0xFF5
 20902                           prodh	equ	0xFF4
 20903                           prodl	equ	0xFF3
 20904                           intcon	equ	0xFF2
 20905                           postinc0	equ	0xFEE
 20906                           wreg	equ	0xFE8
 20907                           indf1	equ	0xFE7
 20908                           postinc1	equ	0xFE6
 20909                           postdec1	equ	0xFE5
 20910                           fsr1h	equ	0xFE2
 20911                           fsr1l	equ	0xFE1
 20912                           indf2	equ	0xFDF
 20913                           postinc2	equ	0xFDE
 20914                           postdec2	equ	0xFDD
 20915                           fsr2h	equ	0xFDA
 20916                           fsr2l	equ	0xFD9
 20917                           status	equ	0xFD8
 20918                           
 20919 ;; *************** function _Zero_Config2 *****************
 20920 ;; Defined at:
 20921 ;;		line 163 in file "RF.c"
 20922 ;; Parameters:    Size  Location     Type
 20923 ;;  pin             1    wreg     unsigned char 
 20924 ;; Auto vars:     Size  Location     Type
 20925 ;;  pin             1   24[BANK1 ] unsigned char 
 20926 ;; Return value:  Size  Location     Type
 20927 ;;		None               void
 20928 ;; Registers used:
 20929 ;;		wreg, status,2, status,0, cstack
 20930 ;; Tracked objects:
 20931 ;;		On entry : 0/0
 20932 ;;		On exit  : 0/0
 20933 ;;		Unchanged: 0/0
 20934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20936 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20938 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 20939 ;;Total ram usage:        1 bytes
 20940 ;; Hardware stack levels used:    1
 20941 ;; Hardware stack levels required when called:    7
 20942 ;; This function calls:
 20943 ;;		_delayUS
 20944 ;; This function is called by:
 20945 ;;		_Send_Config2
 20946 ;; This function uses a non-reentrant model
 20947 ;;
 20948                           
 20949                           	psect	text40
 20950  016BA0                     __ptext40:
 20951                           	opt stack 0
 20952  016BA0                     _Zero_Config2:
 20953                           	opt stack 21
 20954                           
 20955                           ;incstack = 0
 20956                           ;Zero_Config2@pin stored from wreg
 20957  016BA0  0101               	movlb	1	; () banked
 20958  016BA2  6F86               	movwf	Zero_Config2@pin& (0+255),b
 20959                           
 20960                           ; BSR set to: 1
 20961                           ;RF.c: 165: LATD |= pin;
 20962  016BA4  0101               	movlb	1	; () banked
 20963  016BA6  5186               	movf	Zero_Config2@pin& (0+255),w,b
 20964  016BA8  128C               	iorwf	3980,f,c	;volatile
 20965                           
 20966                           ; BSR set to: 1
 20967                           ;RF.c: 166: delayUS(705);
 20968  016BAA  0EC1               	movlw	193
 20969  016BAC  0101               	movlb	1	; () banked
 20970  016BAE  6F7C               	movwf	delayUS@US& (0+255),b
 20971  016BB0  0E02               	movlw	2
 20972  016BB2  0101               	movlb	1	; () banked
 20973  016BB4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 20974  016BB6  0E00               	movlw	0
 20975  016BB8  0101               	movlb	1	; () banked
 20976  016BBA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 20977  016BBC  0E00               	movlw	0
 20978  016BBE  0101               	movlb	1	; () banked
 20979  016BC0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 20980  016BC2  EC0D  F0B3         	call	_delayUS	;wreg free
 20981                           
 20982                           ;RF.c: 167: LATD &= ~pin;
 20983  016BC6  0101               	movlb	1	; () banked
 20984  016BC8  5186               	movf	Zero_Config2@pin& (0+255),w,b
 20985  016BCA  0AFF               	xorlw	255
 20986  016BCC  168C               	andwf	3980,f,c	;volatile
 20987                           
 20988                           ;RF.c: 168: delayUS(1910);
 20989  016BCE  0E76               	movlw	118
 20990  016BD0  0101               	movlb	1	; () banked
 20991  016BD2  6F7C               	movwf	delayUS@US& (0+255),b
 20992  016BD4  0E07               	movlw	7
 20993  016BD6  0101               	movlb	1	; () banked
 20994  016BD8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 20995  016BDA  0E00               	movlw	0
 20996  016BDC  0101               	movlb	1	; () banked
 20997  016BDE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 20998  016BE0  0E00               	movlw	0
 20999  016BE2  0101               	movlb	1	; () banked
 21000  016BE4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21001  016BE6  EC0D  F0B3         	call	_delayUS	;wreg free
 21002  016BEA  0012               	return	
 21003  016BEC                     __end_of_Zero_Config2:
 21004                           	opt stack 0
 21005                           tblptru	equ	0xFF8
 21006                           tblptrh	equ	0xFF7
 21007                           tblptrl	equ	0xFF6
 21008                           tablat	equ	0xFF5
 21009                           prodh	equ	0xFF4
 21010                           prodl	equ	0xFF3
 21011                           intcon	equ	0xFF2
 21012                           postinc0	equ	0xFEE
 21013                           wreg	equ	0xFE8
 21014                           indf1	equ	0xFE7
 21015                           postinc1	equ	0xFE6
 21016                           postdec1	equ	0xFE5
 21017                           fsr1h	equ	0xFE2
 21018                           fsr1l	equ	0xFE1
 21019                           indf2	equ	0xFDF
 21020                           postinc2	equ	0xFDE
 21021                           postdec2	equ	0xFDD
 21022                           fsr2h	equ	0xFDA
 21023                           fsr2l	equ	0xFD9
 21024                           status	equ	0xFD8
 21025                           
 21026 ;; *************** function _One_Config2 *****************
 21027 ;; Defined at:
 21028 ;;		line 176 in file "RF.c"
 21029 ;; Parameters:    Size  Location     Type
 21030 ;;  pin             1    wreg     unsigned char 
 21031 ;; Auto vars:     Size  Location     Type
 21032 ;;  pin             1   24[BANK1 ] unsigned char 
 21033 ;; Return value:  Size  Location     Type
 21034 ;;		None               void
 21035 ;; Registers used:
 21036 ;;		wreg, status,2, status,0, cstack
 21037 ;; Tracked objects:
 21038 ;;		On entry : 0/0
 21039 ;;		On exit  : 0/0
 21040 ;;		Unchanged: 0/0
 21041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21043 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21045 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21046 ;;Total ram usage:        1 bytes
 21047 ;; Hardware stack levels used:    1
 21048 ;; Hardware stack levels required when called:    7
 21049 ;; This function calls:
 21050 ;;		_delayUS
 21051 ;; This function is called by:
 21052 ;;		_Send_Config2
 21053 ;; This function uses a non-reentrant model
 21054 ;;
 21055                           
 21056                           	psect	text41
 21057  016BEC                     __ptext41:
 21058                           	opt stack 0
 21059  016BEC                     _One_Config2:
 21060                           	opt stack 21
 21061                           
 21062                           ;incstack = 0
 21063                           ;One_Config2@pin stored from wreg
 21064  016BEC  0101               	movlb	1	; () banked
 21065  016BEE  6F86               	movwf	One_Config2@pin& (0+255),b
 21066                           
 21067                           ; BSR set to: 1
 21068                           ;RF.c: 178: LATD |= pin;
 21069  016BF0  0101               	movlb	1	; () banked
 21070  016BF2  5186               	movf	One_Config2@pin& (0+255),w,b
 21071  016BF4  128C               	iorwf	3980,f,c	;volatile
 21072                           
 21073                           ; BSR set to: 1
 21074                           ;RF.c: 179: delayUS(1955);
 21075  016BF6  0EA3               	movlw	163
 21076  016BF8  0101               	movlb	1	; () banked
 21077  016BFA  6F7C               	movwf	delayUS@US& (0+255),b
 21078  016BFC  0E07               	movlw	7
 21079  016BFE  0101               	movlb	1	; () banked
 21080  016C00  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21081  016C02  0E00               	movlw	0
 21082  016C04  0101               	movlb	1	; () banked
 21083  016C06  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21084  016C08  0E00               	movlw	0
 21085  016C0A  0101               	movlb	1	; () banked
 21086  016C0C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21087  016C0E  EC0D  F0B3         	call	_delayUS	;wreg free
 21088                           
 21089                           ;RF.c: 180: LATD &= ~pin;
 21090  016C12  0101               	movlb	1	; () banked
 21091  016C14  5186               	movf	One_Config2@pin& (0+255),w,b
 21092  016C16  0AFF               	xorlw	255
 21093  016C18  168C               	andwf	3980,f,c	;volatile
 21094                           
 21095                           ;RF.c: 181: delayUS(705);
 21096  016C1A  0EC1               	movlw	193
 21097  016C1C  0101               	movlb	1	; () banked
 21098  016C1E  6F7C               	movwf	delayUS@US& (0+255),b
 21099  016C20  0E02               	movlw	2
 21100  016C22  0101               	movlb	1	; () banked
 21101  016C24  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21102  016C26  0E00               	movlw	0
 21103  016C28  0101               	movlb	1	; () banked
 21104  016C2A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21105  016C2C  0E00               	movlw	0
 21106  016C2E  0101               	movlb	1	; () banked
 21107  016C30  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21108  016C32  EC0D  F0B3         	call	_delayUS	;wreg free
 21109  016C36  0012               	return	
 21110  016C38                     __end_of_One_Config2:
 21111                           	opt stack 0
 21112                           tblptru	equ	0xFF8
 21113                           tblptrh	equ	0xFF7
 21114                           tblptrl	equ	0xFF6
 21115                           tablat	equ	0xFF5
 21116                           prodh	equ	0xFF4
 21117                           prodl	equ	0xFF3
 21118                           intcon	equ	0xFF2
 21119                           postinc0	equ	0xFEE
 21120                           wreg	equ	0xFE8
 21121                           indf1	equ	0xFE7
 21122                           postinc1	equ	0xFE6
 21123                           postdec1	equ	0xFE5
 21124                           fsr1h	equ	0xFE2
 21125                           fsr1l	equ	0xFE1
 21126                           indf2	equ	0xFDF
 21127                           postinc2	equ	0xFDE
 21128                           postdec2	equ	0xFDD
 21129                           fsr2h	equ	0xFDA
 21130                           fsr2l	equ	0xFD9
 21131                           status	equ	0xFD8
 21132                           
 21133 ;; *************** function _Send_Config1 *****************
 21134 ;; Defined at:
 21135 ;;		line 54 in file "RF.c"
 21136 ;; Parameters:    Size  Location     Type
 21137 ;;  pin             1    wreg     unsigned char 
 21138 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 21139 ;;		 -> TXdataF(12), TXdataE(12), TXdataD(12), 
 21140 ;; Auto vars:     Size  Location     Type
 21141 ;;  pin             1   31[BANK1 ] unsigned char 
 21142 ;;  i               1   30[BANK1 ] unsigned char 
 21143 ;; Return value:  Size  Location     Type
 21144 ;;		None               void
 21145 ;; Registers used:
 21146 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21147 ;; Tracked objects:
 21148 ;;		On entry : 0/0
 21149 ;;		On exit  : 0/0
 21150 ;;		Unchanged: 0/0
 21151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21152 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 21153 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 21154 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 21155 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 21156 ;;Total ram usage:        7 bytes
 21157 ;; Hardware stack levels used:    1
 21158 ;; Hardware stack levels required when called:    8
 21159 ;; This function calls:
 21160 ;;		_One_Config1
 21161 ;;		_Zero_Config1
 21162 ;;		_delayUS
 21163 ;;		_f_Config1
 21164 ;; This function is called by:
 21165 ;;		_Command
 21166 ;; This function uses a non-reentrant model
 21167 ;;
 21168                           
 21169                           	psect	text42
 21170  01524E                     __ptext42:
 21171                           	opt stack 0
 21172  01524E                     _Send_Config1:
 21173                           	opt stack 21
 21174                           
 21175                           ;incstack = 0
 21176                           ;Send_Config1@pin stored from wreg
 21177  01524E  0101               	movlb	1	; () banked
 21178  015250  6F8D               	movwf	Send_Config1@pin& (0+255),b
 21179                           
 21180                           ; BSR set to: 1
 21181                           ;RF.c: 56: unsigned char i=0;
 21182  015252  0E00               	movlw	0
 21183  015254  0101               	movlb	1	; () banked
 21184  015256  6F8C               	movwf	Send_Config1@i& (0+255),b
 21185                           
 21186                           ;RF.c: 58: for(i=0;i<12;i++)
 21187  015258  0E00               	movlw	0
 21188  01525A  0101               	movlb	1	; () banked
 21189  01525C  6F8C               	movwf	Send_Config1@i& (0+255),b
 21190  01525E  D046               	goto	L29
 21191  015260                     l10872:
 21192                           
 21193                           ; BSR set to: 1
 21194                           ;RF.c: 59: {
 21195                           ;RF.c: 60: if(data[i] == 0)
 21196  015260  0101               	movlb	1	; () banked
 21197  015262  518C               	movf	Send_Config1@i& (0+255),w,b
 21198  015264  0D01               	mullw	1
 21199  015266  0101               	movlb	1	; () banked
 21200  015268  C187  F189         	movff	Send_Config1@data,??_Send_Config1
 21201  01526C  0101               	movlb	1	; () banked
 21202  01526E  C188  F18A         	movff	Send_Config1@data+1,??_Send_Config1+1
 21203  015272  50F3               	movf	prodl,w,c
 21204  015274  0101               	movlb	1	; () banked
 21205  015276  2789               	addwf	??_Send_Config1& (0+255),f,b
 21206  015278  50F4               	movf	prodh,w,c
 21207  01527A  0101               	movlb	1	; () banked
 21208  01527C  238A               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 21209  01527E  C189  FFF6         	movff	??_Send_Config1,tblptrl
 21210  015282  C18A  FFF7         	movff	??_Send_Config1+1,tblptrh
 21211  015286                     	if	0	;tblptru may be non-zero
 21212  015286                     	endif
 21213  015286                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21214  015286  0E00               	movlw	low (__mediumconst shr (0+16))
 21215  015288  6EF8               	movwf	tblptru,c
 21216  01528A                     	endif
 21217  01528A  0008               	tblrd		*
 21218  01528C  50F5               	movf	tablat,w,c
 21219  01528E  0900               	iorlw	0
 21220  015290  A4D8               	btfss	status,2,c
 21221  015292  D005               	goto	l10876
 21222                           
 21223                           ; BSR set to: 1
 21224                           ;RF.c: 61: {
 21225                           ;RF.c: 62: Zero_Config1(pin);
 21226  015294  0101               	movlb	1	; () banked
 21227  015296  518D               	movf	Send_Config1@pin& (0+255),w,b
 21228  015298  ECEB  F0AF         	call	_Zero_Config1
 21229                           
 21230                           ;RF.c: 63: }
 21231  01529C  D025               	goto	l10882
 21232  01529E                     l10876:
 21233                           
 21234                           ;RF.c: 64: else if(data[i] ==1)
 21235  01529E  0101               	movlb	1	; () banked
 21236  0152A0  518C               	movf	Send_Config1@i& (0+255),w,b
 21237  0152A2  0D01               	mullw	1
 21238  0152A4  0101               	movlb	1	; () banked
 21239  0152A6  C187  F189         	movff	Send_Config1@data,??_Send_Config1
 21240  0152AA  0101               	movlb	1	; () banked
 21241  0152AC  C188  F18A         	movff	Send_Config1@data+1,??_Send_Config1+1
 21242  0152B0  50F3               	movf	prodl,w,c
 21243  0152B2  0101               	movlb	1	; () banked
 21244  0152B4  2789               	addwf	??_Send_Config1& (0+255),f,b
 21245  0152B6  50F4               	movf	prodh,w,c
 21246  0152B8  0101               	movlb	1	; () banked
 21247  0152BA  238A               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 21248  0152BC  C189  FFF6         	movff	??_Send_Config1,tblptrl
 21249  0152C0  C18A  FFF7         	movff	??_Send_Config1+1,tblptrh
 21250  0152C4                     	if	0	;tblptru may be non-zero
 21251  0152C4                     	endif
 21252  0152C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21253  0152C4  0E00               	movlw	low (__mediumconst shr (0+16))
 21254  0152C6  6EF8               	movwf	tblptru,c
 21255  0152C8                     	endif
 21256  0152C8  0008               	tblrd		*
 21257  0152CA  CFF5 F18B          	movff	tablat,??_Send_Config1+2
 21258  0152CE  0101               	movlb	1	; () banked
 21259  0152D0  058B               	decf	(??_Send_Config1+2)& (0+255),w,b
 21260  0152D2  A4D8               	btfss	status,2,c
 21261  0152D4  D005               	goto	l10880
 21262                           
 21263                           ; BSR set to: 1
 21264                           ;RF.c: 65: {
 21265                           ;RF.c: 66: One_Config1(pin);
 21266  0152D6  0101               	movlb	1	; () banked
 21267  0152D8  518D               	movf	Send_Config1@pin& (0+255),w,b
 21268  0152DA  EC34  F0B0         	call	_One_Config1
 21269                           
 21270                           ;RF.c: 67: }
 21271  0152DE  D004               	goto	l10882
 21272  0152E0                     l10880:
 21273                           
 21274                           ;RF.c: 68: else
 21275                           ;RF.c: 69: {
 21276                           ;RF.c: 70: f_Config1(pin);
 21277  0152E0  0101               	movlb	1	; () banked
 21278  0152E2  518D               	movf	Send_Config1@pin& (0+255),w,b
 21279  0152E4  ECA2  F0AF         	call	_f_Config1
 21280  0152E8                     l10882:
 21281  0152E8  0101               	movlb	1	; () banked
 21282  0152EA  2B8C               	incf	Send_Config1@i& (0+255),f,b
 21283  0152EC                     L29:
 21284                           
 21285                           ; BSR set to: 1
 21286  0152EC  0E0B               	movlw	11
 21287  0152EE  0101               	movlb	1	; () banked
 21288  0152F0  658C               	cpfsgt	Send_Config1@i& (0+255),b
 21289  0152F2  D7B6               	goto	l10872
 21290                           
 21291                           ; BSR set to: 1
 21292                           ;RF.c: 71: }
 21293                           ;RF.c: 72: }
 21294                           ;RF.c: 74: LATD |= pin;
 21295                           
 21296                           ; BSR set to: 1
 21297  0152F4  0101               	movlb	1	; () banked
 21298  0152F6  518D               	movf	Send_Config1@pin& (0+255),w,b
 21299  0152F8  128C               	iorwf	3980,f,c	;volatile
 21300                           
 21301                           ; BSR set to: 1
 21302                           ;RF.c: 75: delayUS(222);
 21303  0152FA  0EDE               	movlw	222
 21304  0152FC  0101               	movlb	1	; () banked
 21305  0152FE  6F7C               	movwf	delayUS@US& (0+255),b
 21306  015300  0E00               	movlw	0
 21307  015302  0101               	movlb	1	; () banked
 21308  015304  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21309  015306  0E00               	movlw	0
 21310  015308  0101               	movlb	1	; () banked
 21311  01530A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21312  01530C  0E00               	movlw	0
 21313  01530E  0101               	movlb	1	; () banked
 21314  015310  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21315  015312  EC0D  F0B3         	call	_delayUS	;wreg free
 21316                           
 21317                           ;RF.c: 76: LATD &= ~pin;
 21318  015316  0101               	movlb	1	; () banked
 21319  015318  518D               	movf	Send_Config1@pin& (0+255),w,b
 21320  01531A  0AFF               	xorlw	255
 21321  01531C  168C               	andwf	3980,f,c	;volatile
 21322                           
 21323                           ;RF.c: 77: delayUS(7330);
 21324  01531E  0EA2               	movlw	162
 21325  015320  0101               	movlb	1	; () banked
 21326  015322  6F7C               	movwf	delayUS@US& (0+255),b
 21327  015324  0E1C               	movlw	28
 21328  015326  0101               	movlb	1	; () banked
 21329  015328  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21330  01532A  0E00               	movlw	0
 21331  01532C  0101               	movlb	1	; () banked
 21332  01532E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21333  015330  0E00               	movlw	0
 21334  015332  0101               	movlb	1	; () banked
 21335  015334  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21336  015336  EC0D  F0B3         	call	_delayUS	;wreg free
 21337  01533A  0012               	return	
 21338  01533C                     __end_of_Send_Config1:
 21339                           	opt stack 0
 21340                           tblptru	equ	0xFF8
 21341                           tblptrh	equ	0xFF7
 21342                           tblptrl	equ	0xFF6
 21343                           tablat	equ	0xFF5
 21344                           prodh	equ	0xFF4
 21345                           prodl	equ	0xFF3
 21346                           intcon	equ	0xFF2
 21347                           postinc0	equ	0xFEE
 21348                           wreg	equ	0xFE8
 21349                           indf1	equ	0xFE7
 21350                           postinc1	equ	0xFE6
 21351                           postdec1	equ	0xFE5
 21352                           fsr1h	equ	0xFE2
 21353                           fsr1l	equ	0xFE1
 21354                           indf2	equ	0xFDF
 21355                           postinc2	equ	0xFDE
 21356                           postdec2	equ	0xFDD
 21357                           fsr2h	equ	0xFDA
 21358                           fsr2l	equ	0xFD9
 21359                           status	equ	0xFD8
 21360                           
 21361 ;; *************** function _f_Config1 *****************
 21362 ;; Defined at:
 21363 ;;		line 120 in file "RF.c"
 21364 ;; Parameters:    Size  Location     Type
 21365 ;;  pin             1    wreg     unsigned char 
 21366 ;; Auto vars:     Size  Location     Type
 21367 ;;  pin             1   24[BANK1 ] unsigned char 
 21368 ;; Return value:  Size  Location     Type
 21369 ;;		None               void
 21370 ;; Registers used:
 21371 ;;		wreg, status,2, status,0, cstack
 21372 ;; Tracked objects:
 21373 ;;		On entry : 0/0
 21374 ;;		On exit  : 0/0
 21375 ;;		Unchanged: 0/0
 21376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21378 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21380 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21381 ;;Total ram usage:        1 bytes
 21382 ;; Hardware stack levels used:    1
 21383 ;; Hardware stack levels required when called:    7
 21384 ;; This function calls:
 21385 ;;		_delayUS
 21386 ;; This function is called by:
 21387 ;;		_Send_Config1
 21388 ;; This function uses a non-reentrant model
 21389 ;;
 21390                           
 21391                           	psect	text43
 21392  015F44                     __ptext43:
 21393                           	opt stack 0
 21394  015F44                     _f_Config1:
 21395                           	opt stack 21
 21396                           
 21397                           ;incstack = 0
 21398                           ;f_Config1@pin stored from wreg
 21399  015F44  0101               	movlb	1	; () banked
 21400  015F46  6F86               	movwf	f_Config1@pin& (0+255),b
 21401                           
 21402                           ; BSR set to: 1
 21403                           ;RF.c: 122: LATD |= pin;
 21404  015F48  0101               	movlb	1	; () banked
 21405  015F4A  5186               	movf	f_Config1@pin& (0+255),w,b
 21406  015F4C  128C               	iorwf	3980,f,c	;volatile
 21407                           
 21408                           ; BSR set to: 1
 21409                           ;RF.c: 123: delayUS(216);
 21410  015F4E  0ED8               	movlw	216
 21411  015F50  0101               	movlb	1	; () banked
 21412  015F52  6F7C               	movwf	delayUS@US& (0+255),b
 21413  015F54  0E00               	movlw	0
 21414  015F56  0101               	movlb	1	; () banked
 21415  015F58  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21416  015F5A  0E00               	movlw	0
 21417  015F5C  0101               	movlb	1	; () banked
 21418  015F5E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21419  015F60  0E00               	movlw	0
 21420  015F62  0101               	movlb	1	; () banked
 21421  015F64  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21422  015F66  EC0D  F0B3         	call	_delayUS	;wreg free
 21423                           
 21424                           ;RF.c: 124: LATD &= ~pin;
 21425  015F6A  0101               	movlb	1	; () banked
 21426  015F6C  5186               	movf	f_Config1@pin& (0+255),w,b
 21427  015F6E  0AFF               	xorlw	255
 21428  015F70  168C               	andwf	3980,f,c	;volatile
 21429                           
 21430                           ;RF.c: 125: delayUS(614);
 21431  015F72  0E66               	movlw	102
 21432  015F74  0101               	movlb	1	; () banked
 21433  015F76  6F7C               	movwf	delayUS@US& (0+255),b
 21434  015F78  0E02               	movlw	2
 21435  015F7A  0101               	movlb	1	; () banked
 21436  015F7C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21437  015F7E  0E00               	movlw	0
 21438  015F80  0101               	movlb	1	; () banked
 21439  015F82  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21440  015F84  0E00               	movlw	0
 21441  015F86  0101               	movlb	1	; () banked
 21442  015F88  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21443  015F8A  EC0D  F0B3         	call	_delayUS	;wreg free
 21444                           
 21445                           ;RF.c: 126: LATD |= pin;
 21446  015F8E  0101               	movlb	1	; () banked
 21447  015F90  5186               	movf	f_Config1@pin& (0+255),w,b
 21448  015F92  128C               	iorwf	3980,f,c	;volatile
 21449                           
 21450                           ; BSR set to: 1
 21451                           ;RF.c: 127: delayUS(614);
 21452  015F94  0E66               	movlw	102
 21453  015F96  0101               	movlb	1	; () banked
 21454  015F98  6F7C               	movwf	delayUS@US& (0+255),b
 21455  015F9A  0E02               	movlw	2
 21456  015F9C  0101               	movlb	1	; () banked
 21457  015F9E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21458  015FA0  0E00               	movlw	0
 21459  015FA2  0101               	movlb	1	; () banked
 21460  015FA4  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21461  015FA6  0E00               	movlw	0
 21462  015FA8  0101               	movlb	1	; () banked
 21463  015FAA  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21464  015FAC  EC0D  F0B3         	call	_delayUS	;wreg free
 21465                           
 21466                           ;RF.c: 128: LATD &= ~pin;
 21467  015FB0  0101               	movlb	1	; () banked
 21468  015FB2  5186               	movf	f_Config1@pin& (0+255),w,b
 21469  015FB4  0AFF               	xorlw	255
 21470  015FB6  168C               	andwf	3980,f,c	;volatile
 21471                           
 21472                           ; BSR set to: 1
 21473                           ;RF.c: 129: delayUS(216);
 21474  015FB8  0ED8               	movlw	216
 21475  015FBA  0101               	movlb	1	; () banked
 21476  015FBC  6F7C               	movwf	delayUS@US& (0+255),b
 21477  015FBE  0E00               	movlw	0
 21478  015FC0  0101               	movlb	1	; () banked
 21479  015FC2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21480  015FC4  0E00               	movlw	0
 21481  015FC6  0101               	movlb	1	; () banked
 21482  015FC8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21483  015FCA  0E00               	movlw	0
 21484  015FCC  0101               	movlb	1	; () banked
 21485  015FCE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21486  015FD0  EC0D  F0B3         	call	_delayUS	;wreg free
 21487  015FD4  0012               	return	
 21488  015FD6                     __end_of_f_Config1:
 21489                           	opt stack 0
 21490                           tblptru	equ	0xFF8
 21491                           tblptrh	equ	0xFF7
 21492                           tblptrl	equ	0xFF6
 21493                           tablat	equ	0xFF5
 21494                           prodh	equ	0xFF4
 21495                           prodl	equ	0xFF3
 21496                           intcon	equ	0xFF2
 21497                           postinc0	equ	0xFEE
 21498                           wreg	equ	0xFE8
 21499                           indf1	equ	0xFE7
 21500                           postinc1	equ	0xFE6
 21501                           postdec1	equ	0xFE5
 21502                           fsr1h	equ	0xFE2
 21503                           fsr1l	equ	0xFE1
 21504                           indf2	equ	0xFDF
 21505                           postinc2	equ	0xFDE
 21506                           postdec2	equ	0xFDD
 21507                           fsr2h	equ	0xFDA
 21508                           fsr2l	equ	0xFD9
 21509                           status	equ	0xFD8
 21510                           
 21511 ;; *************** function _Zero_Config1 *****************
 21512 ;; Defined at:
 21513 ;;		line 86 in file "RF.c"
 21514 ;; Parameters:    Size  Location     Type
 21515 ;;  pin             1    wreg     unsigned char 
 21516 ;; Auto vars:     Size  Location     Type
 21517 ;;  pin             1   24[BANK1 ] unsigned char 
 21518 ;; Return value:  Size  Location     Type
 21519 ;;		None               void
 21520 ;; Registers used:
 21521 ;;		wreg, status,2, status,0, cstack
 21522 ;; Tracked objects:
 21523 ;;		On entry : 0/0
 21524 ;;		On exit  : 0/0
 21525 ;;		Unchanged: 0/0
 21526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21528 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21530 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21531 ;;Total ram usage:        1 bytes
 21532 ;; Hardware stack levels used:    1
 21533 ;; Hardware stack levels required when called:    7
 21534 ;; This function calls:
 21535 ;;		_delayUS
 21536 ;; This function is called by:
 21537 ;;		_Send_Config1
 21538 ;; This function uses a non-reentrant model
 21539 ;;
 21540                           
 21541                           	psect	text44
 21542  015FD6                     __ptext44:
 21543                           	opt stack 0
 21544  015FD6                     _Zero_Config1:
 21545                           	opt stack 21
 21546                           
 21547                           ;incstack = 0
 21548                           ;Zero_Config1@pin stored from wreg
 21549  015FD6  0101               	movlb	1	; () banked
 21550  015FD8  6F86               	movwf	Zero_Config1@pin& (0+255),b
 21551                           
 21552                           ; BSR set to: 1
 21553                           ;RF.c: 88: LATD |= pin;
 21554  015FDA  0101               	movlb	1	; () banked
 21555  015FDC  5186               	movf	Zero_Config1@pin& (0+255),w,b
 21556  015FDE  128C               	iorwf	3980,f,c	;volatile
 21557                           
 21558                           ; BSR set to: 1
 21559                           ;RF.c: 89: delayUS(216 );
 21560  015FE0  0ED8               	movlw	216
 21561  015FE2  0101               	movlb	1	; () banked
 21562  015FE4  6F7C               	movwf	delayUS@US& (0+255),b
 21563  015FE6  0E00               	movlw	0
 21564  015FE8  0101               	movlb	1	; () banked
 21565  015FEA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21566  015FEC  0E00               	movlw	0
 21567  015FEE  0101               	movlb	1	; () banked
 21568  015FF0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21569  015FF2  0E00               	movlw	0
 21570  015FF4  0101               	movlb	1	; () banked
 21571  015FF6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21572  015FF8  EC0D  F0B3         	call	_delayUS	;wreg free
 21573                           
 21574                           ;RF.c: 90: LATD &= ~pin;
 21575  015FFC  0101               	movlb	1	; () banked
 21576  015FFE  5186               	movf	Zero_Config1@pin& (0+255),w,b
 21577  016000  0AFF               	xorlw	255
 21578  016002  168C               	andwf	3980,f,c	;volatile
 21579                           
 21580                           ;RF.c: 91: delayUS(614 );
 21581  016004  0E66               	movlw	102
 21582  016006  0101               	movlb	1	; () banked
 21583  016008  6F7C               	movwf	delayUS@US& (0+255),b
 21584  01600A  0E02               	movlw	2
 21585  01600C  0101               	movlb	1	; () banked
 21586  01600E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21587  016010  0E00               	movlw	0
 21588  016012  0101               	movlb	1	; () banked
 21589  016014  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21590  016016  0E00               	movlw	0
 21591  016018  0101               	movlb	1	; () banked
 21592  01601A  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21593  01601C  EC0D  F0B3         	call	_delayUS	;wreg free
 21594                           
 21595                           ;RF.c: 92: LATD |= pin;
 21596  016020  0101               	movlb	1	; () banked
 21597  016022  5186               	movf	Zero_Config1@pin& (0+255),w,b
 21598  016024  128C               	iorwf	3980,f,c	;volatile
 21599                           
 21600                           ; BSR set to: 1
 21601                           ;RF.c: 93: delayUS(216 );
 21602  016026  0ED8               	movlw	216
 21603  016028  0101               	movlb	1	; () banked
 21604  01602A  6F7C               	movwf	delayUS@US& (0+255),b
 21605  01602C  0E00               	movlw	0
 21606  01602E  0101               	movlb	1	; () banked
 21607  016030  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21608  016032  0E00               	movlw	0
 21609  016034  0101               	movlb	1	; () banked
 21610  016036  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21611  016038  0E00               	movlw	0
 21612  01603A  0101               	movlb	1	; () banked
 21613  01603C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21614  01603E  EC0D  F0B3         	call	_delayUS	;wreg free
 21615                           
 21616                           ;RF.c: 94: LATD &= ~pin;
 21617  016042  0101               	movlb	1	; () banked
 21618  016044  5186               	movf	Zero_Config1@pin& (0+255),w,b
 21619  016046  0AFF               	xorlw	255
 21620  016048  168C               	andwf	3980,f,c	;volatile
 21621                           
 21622                           ; BSR set to: 1
 21623                           ;RF.c: 95: delayUS(614 );
 21624  01604A  0E66               	movlw	102
 21625  01604C  0101               	movlb	1	; () banked
 21626  01604E  6F7C               	movwf	delayUS@US& (0+255),b
 21627  016050  0E02               	movlw	2
 21628  016052  0101               	movlb	1	; () banked
 21629  016054  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21630  016056  0E00               	movlw	0
 21631  016058  0101               	movlb	1	; () banked
 21632  01605A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21633  01605C  0E00               	movlw	0
 21634  01605E  0101               	movlb	1	; () banked
 21635  016060  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21636  016062  EC0D  F0B3         	call	_delayUS	;wreg free
 21637  016066  0012               	return	
 21638  016068                     __end_of_Zero_Config1:
 21639                           	opt stack 0
 21640                           tblptru	equ	0xFF8
 21641                           tblptrh	equ	0xFF7
 21642                           tblptrl	equ	0xFF6
 21643                           tablat	equ	0xFF5
 21644                           prodh	equ	0xFF4
 21645                           prodl	equ	0xFF3
 21646                           intcon	equ	0xFF2
 21647                           postinc0	equ	0xFEE
 21648                           wreg	equ	0xFE8
 21649                           indf1	equ	0xFE7
 21650                           postinc1	equ	0xFE6
 21651                           postdec1	equ	0xFE5
 21652                           fsr1h	equ	0xFE2
 21653                           fsr1l	equ	0xFE1
 21654                           indf2	equ	0xFDF
 21655                           postinc2	equ	0xFDE
 21656                           postdec2	equ	0xFDD
 21657                           fsr2h	equ	0xFDA
 21658                           fsr2l	equ	0xFD9
 21659                           status	equ	0xFD8
 21660                           
 21661 ;; *************** function _One_Config1 *****************
 21662 ;; Defined at:
 21663 ;;		line 103 in file "RF.c"
 21664 ;; Parameters:    Size  Location     Type
 21665 ;;  pin             1    wreg     unsigned char 
 21666 ;; Auto vars:     Size  Location     Type
 21667 ;;  pin             1   24[BANK1 ] unsigned char 
 21668 ;; Return value:  Size  Location     Type
 21669 ;;		None               void
 21670 ;; Registers used:
 21671 ;;		wreg, status,2, status,0, cstack
 21672 ;; Tracked objects:
 21673 ;;		On entry : 0/0
 21674 ;;		On exit  : 0/0
 21675 ;;		Unchanged: 0/0
 21676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21678 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21680 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 21681 ;;Total ram usage:        1 bytes
 21682 ;; Hardware stack levels used:    1
 21683 ;; Hardware stack levels required when called:    7
 21684 ;; This function calls:
 21685 ;;		_delayUS
 21686 ;; This function is called by:
 21687 ;;		_Send_Config1
 21688 ;; This function uses a non-reentrant model
 21689 ;;
 21690                           
 21691                           	psect	text45
 21692  016068                     __ptext45:
 21693                           	opt stack 0
 21694  016068                     _One_Config1:
 21695                           	opt stack 21
 21696                           
 21697                           ;incstack = 0
 21698                           ;One_Config1@pin stored from wreg
 21699  016068  0101               	movlb	1	; () banked
 21700  01606A  6F86               	movwf	One_Config1@pin& (0+255),b
 21701                           
 21702                           ; BSR set to: 1
 21703                           ;RF.c: 105: LATD |= pin;
 21704  01606C  0101               	movlb	1	; () banked
 21705  01606E  5186               	movf	One_Config1@pin& (0+255),w,b
 21706  016070  128C               	iorwf	3980,f,c	;volatile
 21707                           
 21708                           ; BSR set to: 1
 21709                           ;RF.c: 106: delayUS(614);
 21710  016072  0E66               	movlw	102
 21711  016074  0101               	movlb	1	; () banked
 21712  016076  6F7C               	movwf	delayUS@US& (0+255),b
 21713  016078  0E02               	movlw	2
 21714  01607A  0101               	movlb	1	; () banked
 21715  01607C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21716  01607E  0E00               	movlw	0
 21717  016080  0101               	movlb	1	; () banked
 21718  016082  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21719  016084  0E00               	movlw	0
 21720  016086  0101               	movlb	1	; () banked
 21721  016088  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21722  01608A  EC0D  F0B3         	call	_delayUS	;wreg free
 21723                           
 21724                           ;RF.c: 107: LATD &= ~pin;
 21725  01608E  0101               	movlb	1	; () banked
 21726  016090  5186               	movf	One_Config1@pin& (0+255),w,b
 21727  016092  0AFF               	xorlw	255
 21728  016094  168C               	andwf	3980,f,c	;volatile
 21729                           
 21730                           ;RF.c: 108: delayUS(216);
 21731  016096  0ED8               	movlw	216
 21732  016098  0101               	movlb	1	; () banked
 21733  01609A  6F7C               	movwf	delayUS@US& (0+255),b
 21734  01609C  0E00               	movlw	0
 21735  01609E  0101               	movlb	1	; () banked
 21736  0160A0  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21737  0160A2  0E00               	movlw	0
 21738  0160A4  0101               	movlb	1	; () banked
 21739  0160A6  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21740  0160A8  0E00               	movlw	0
 21741  0160AA  0101               	movlb	1	; () banked
 21742  0160AC  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21743  0160AE  EC0D  F0B3         	call	_delayUS	;wreg free
 21744                           
 21745                           ;RF.c: 109: LATD |= pin;
 21746  0160B2  0101               	movlb	1	; () banked
 21747  0160B4  5186               	movf	One_Config1@pin& (0+255),w,b
 21748  0160B6  128C               	iorwf	3980,f,c	;volatile
 21749                           
 21750                           ; BSR set to: 1
 21751                           ;RF.c: 110: delayUS(614);
 21752  0160B8  0E66               	movlw	102
 21753  0160BA  0101               	movlb	1	; () banked
 21754  0160BC  6F7C               	movwf	delayUS@US& (0+255),b
 21755  0160BE  0E02               	movlw	2
 21756  0160C0  0101               	movlb	1	; () banked
 21757  0160C2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21758  0160C4  0E00               	movlw	0
 21759  0160C6  0101               	movlb	1	; () banked
 21760  0160C8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21761  0160CA  0E00               	movlw	0
 21762  0160CC  0101               	movlb	1	; () banked
 21763  0160CE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21764  0160D0  EC0D  F0B3         	call	_delayUS	;wreg free
 21765                           
 21766                           ;RF.c: 111: LATD &= ~pin;
 21767  0160D4  0101               	movlb	1	; () banked
 21768  0160D6  5186               	movf	One_Config1@pin& (0+255),w,b
 21769  0160D8  0AFF               	xorlw	255
 21770  0160DA  168C               	andwf	3980,f,c	;volatile
 21771                           
 21772                           ; BSR set to: 1
 21773                           ;RF.c: 112: delayUS(216);
 21774  0160DC  0ED8               	movlw	216
 21775  0160DE  0101               	movlb	1	; () banked
 21776  0160E0  6F7C               	movwf	delayUS@US& (0+255),b
 21777  0160E2  0E00               	movlw	0
 21778  0160E4  0101               	movlb	1	; () banked
 21779  0160E6  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 21780  0160E8  0E00               	movlw	0
 21781  0160EA  0101               	movlb	1	; () banked
 21782  0160EC  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 21783  0160EE  0E00               	movlw	0
 21784  0160F0  0101               	movlb	1	; () banked
 21785  0160F2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 21786  0160F4  EC0D  F0B3         	call	_delayUS	;wreg free
 21787  0160F8  0012               	return	
 21788  0160FA                     __end_of_One_Config1:
 21789                           	opt stack 0
 21790                           tblptru	equ	0xFF8
 21791                           tblptrh	equ	0xFF7
 21792                           tblptrl	equ	0xFF6
 21793                           tablat	equ	0xFF5
 21794                           prodh	equ	0xFF4
 21795                           prodl	equ	0xFF3
 21796                           intcon	equ	0xFF2
 21797                           postinc0	equ	0xFEE
 21798                           wreg	equ	0xFE8
 21799                           indf1	equ	0xFE7
 21800                           postinc1	equ	0xFE6
 21801                           postdec1	equ	0xFE5
 21802                           fsr1h	equ	0xFE2
 21803                           fsr1l	equ	0xFE1
 21804                           indf2	equ	0xFDF
 21805                           postinc2	equ	0xFDE
 21806                           postdec2	equ	0xFDD
 21807                           fsr2h	equ	0xFDA
 21808                           fsr2l	equ	0xFD9
 21809                           status	equ	0xFD8
 21810                           
 21811 ;; *************** function _SET_RTC_TIME *****************
 21812 ;; Defined at:
 21813 ;;		line 170 in file "RTC.c"
 21814 ;; Parameters:    Size  Location     Type
 21815 ;;  SetTime         9   22[BANK1 ] struct TIME
 21816 ;; Auto vars:     Size  Location     Type
 21817 ;;  temp            7   35[BANK1 ] unsigned char [7]
 21818 ;;  Error           1   42[BANK1 ] unsigned char 
 21819 ;; Return value:  Size  Location     Type
 21820 ;;                  1    wreg      unsigned char 
 21821 ;; Registers used:
 21822 ;;		wreg, status,2, status,0, prodl, cstack
 21823 ;; Tracked objects:
 21824 ;;		On entry : 0/0
 21825 ;;		On exit  : 0/0
 21826 ;;		Unchanged: 0/0
 21827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21828 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 21829 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 21830 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 21831 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
 21832 ;;Total ram usage:       21 bytes
 21833 ;; Hardware stack levels used:    1
 21834 ;; Hardware stack levels required when called:    9
 21835 ;; This function calls:
 21836 ;;		_I2C_Write_At_Address
 21837 ;;		___awdiv
 21838 ;;		___awmod
 21839 ;; This function is called by:
 21840 ;;		_Command
 21841 ;; This function uses a non-reentrant model
 21842 ;;
 21843                           
 21844                           	psect	text46
 21845  013DCA                     __ptext46:
 21846                           	opt stack 0
 21847  013DCA                     _SET_RTC_TIME:
 21848                           	opt stack 20
 21849                           
 21850                           ;RTC.c: 172: unsigned char Error =0;
 21851                           
 21852                           ;incstack = 0
 21853  013DCA  0E00               	movlw	0
 21854  013DCC  0101               	movlb	1	; () banked
 21855  013DCE  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 21856                           
 21857                           ; BSR set to: 1
 21858                           ;RTC.c: 173: unsigned char temp[7];
 21859                           ;RTC.c: 175: temp[0] = ((SetTime.Seconds /10) << 4) + (SetTime.Seconds % 10);
 21860  013DD0  0101               	movlb	1	; () banked
 21861  013DD2  C184  F17C         	movff	SET_RTC_TIME@SetTime,___awmod@dividend
 21862  013DD6  0101               	movlb	1	; () banked
 21863  013DD8  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 21864  013DDA  0E00               	movlw	0
 21865  013DDC  0101               	movlb	1	; () banked
 21866  013DDE  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 21867  013DE0  0E0A               	movlw	10
 21868  013DE2  0101               	movlb	1	; () banked
 21869  013DE4  6F7E               	movwf	___awmod@divisor& (0+255),b
 21870  013DE6  ECA5  F0AC         	call	___awmod	;wreg free
 21871  013DEA  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 21872  013DEE  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 21873  013DF2  0101               	movlb	1	; () banked
 21874  013DF4  C184  F17C         	movff	SET_RTC_TIME@SetTime,___awdiv@dividend
 21875  013DF8  0101               	movlb	1	; () banked
 21876  013DFA  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 21877  013DFC  0E00               	movlw	0
 21878  013DFE  0101               	movlb	1	; () banked
 21879  013E00  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 21880  013E02  0E0A               	movlw	10
 21881  013E04  0101               	movlb	1	; () banked
 21882  013E06  6F7E               	movwf	___awdiv@divisor& (0+255),b
 21883  013E08  EC85  F0AA         	call	___awdiv	;wreg free
 21884  013E0C  0101               	movlb	1	; () banked
 21885  013E0E  397C               	swapf	?___awdiv& (0+255),w,b
 21886  013E10  0BF0               	andlw	240
 21887  013E12  0101               	movlb	1	; () banked
 21888  013E14  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 21889  013E16  0101               	movlb	1	; () banked
 21890  013E18  6F91               	movwf	SET_RTC_TIME@temp& (0+255),b
 21891                           
 21892                           ; BSR set to: 1
 21893                           ;RTC.c: 176: Error = I2C_Write_At_Address( 0b1101000, 0x00, temp[0] );
 21894  013E1A  0E00               	movlw	0
 21895  013E1C  0101               	movlb	1	; () banked
 21896  013E1E  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 21897  013E20  C191  F180         	movff	SET_RTC_TIME@temp,I2C_Write_At_Address@data
 21898  013E24  0E68               	movlw	104
 21899  013E26  ECBD  F0AD         	call	_I2C_Write_At_Address
 21900  013E2A  0101               	movlb	1	; () banked
 21901  013E2C  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 21902                           
 21903                           ; BSR set to: 1
 21904                           ;RTC.c: 177: if(Error)
 21905  013E2E  0101               	movlb	1	; () banked
 21906  013E30  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 21907  013E32  B4D8               	btfsc	status,2,c
 21908  013E34  D002               	goto	l11250
 21909                           
 21910                           ; BSR set to: 1
 21911                           ;RTC.c: 178: {
 21912                           ;RTC.c: 179: return 1;
 21913  013E36  0E01               	movlw	1
 21914  013E38  0012               	return	
 21915  013E3A                     l11250:
 21916                           
 21917                           ; BSR set to: 1
 21918                           ;RTC.c: 180: }
 21919                           ;RTC.c: 182: temp[1] = ((SetTime.Minutes /10) << 4) + (SetTime.Minutes % 10);
 21920  013E3A  0101               	movlb	1	; () banked
 21921  013E3C  C185  F17C         	movff	SET_RTC_TIME@SetTime+1,___awmod@dividend
 21922  013E40  0101               	movlb	1	; () banked
 21923  013E42  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 21924  013E44  0E00               	movlw	0
 21925  013E46  0101               	movlb	1	; () banked
 21926  013E48  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 21927  013E4A  0E0A               	movlw	10
 21928  013E4C  0101               	movlb	1	; () banked
 21929  013E4E  6F7E               	movwf	___awmod@divisor& (0+255),b
 21930  013E50  ECA5  F0AC         	call	___awmod	;wreg free
 21931  013E54  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 21932  013E58  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 21933  013E5C  0101               	movlb	1	; () banked
 21934  013E5E  C185  F17C         	movff	SET_RTC_TIME@SetTime+1,___awdiv@dividend
 21935  013E62  0101               	movlb	1	; () banked
 21936  013E64  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 21937  013E66  0E00               	movlw	0
 21938  013E68  0101               	movlb	1	; () banked
 21939  013E6A  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 21940  013E6C  0E0A               	movlw	10
 21941  013E6E  0101               	movlb	1	; () banked
 21942  013E70  6F7E               	movwf	___awdiv@divisor& (0+255),b
 21943  013E72  EC85  F0AA         	call	___awdiv	;wreg free
 21944  013E76  0101               	movlb	1	; () banked
 21945  013E78  397C               	swapf	?___awdiv& (0+255),w,b
 21946  013E7A  0BF0               	andlw	240
 21947  013E7C  0101               	movlb	1	; () banked
 21948  013E7E  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 21949  013E80  0101               	movlb	1	; () banked
 21950  013E82  6F92               	movwf	(SET_RTC_TIME@temp+1)& (0+255),b
 21951                           
 21952                           ; BSR set to: 1
 21953                           ;RTC.c: 183: Error = I2C_Write_At_Address( 0b1101000, 0x01, temp[1] );
 21954  013E84  0E01               	movlw	1
 21955  013E86  0101               	movlb	1	; () banked
 21956  013E88  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 21957  013E8A  C192  F180         	movff	SET_RTC_TIME@temp+1,I2C_Write_At_Address@data
 21958  013E8E  0E68               	movlw	104
 21959  013E90  ECBD  F0AD         	call	_I2C_Write_At_Address
 21960  013E94  0101               	movlb	1	; () banked
 21961  013E96  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 21962                           
 21963                           ; BSR set to: 1
 21964                           ;RTC.c: 184: if(Error)
 21965  013E98  0101               	movlb	1	; () banked
 21966  013E9A  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 21967  013E9C  B4D8               	btfsc	status,2,c
 21968  013E9E  D002               	goto	l11260
 21969                           
 21970                           ; BSR set to: 1
 21971                           ;RTC.c: 185: {
 21972                           ;RTC.c: 186: return 2;
 21973  013EA0  0E02               	movlw	2
 21974  013EA2  0012               	return	
 21975  013EA4                     l11260:
 21976                           
 21977                           ; BSR set to: 1
 21978                           ;RTC.c: 187: }
 21979                           ;RTC.c: 189: temp[2] = ((SetTime.Hours /10) << 4) + (SetTime.Hours % 10) + (SetTime.Hour
      +                          sAM_PM << 5);
 21980  013EA4  C188  F18D         	movff	SET_RTC_TIME@SetTime+4,??_SET_RTC_TIME
 21981  013EA8  0E05               	movlw	5
 21982  013EAA  0101               	movlb	1	; () banked
 21983  013EAC  6F8E               	movwf	(??_SET_RTC_TIME+1)& (0+255),b
 21984  013EAE                     u14595:
 21985  013EAE  0101               	movlb	1	; () banked
 21986  013EB0  90D8               	bcf	status,0,c
 21987  013EB2  378D               	rlcf	??_SET_RTC_TIME& (0+255),f,b
 21988  013EB4  0101               	movlb	1	; () banked
 21989  013EB6  2F8E               	decfsz	(??_SET_RTC_TIME+1)& (0+255),f,b
 21990  013EB8  D7FA               	goto	u14595
 21991  013EBA  0101               	movlb	1	; () banked
 21992  013EBC  C186  F17C         	movff	SET_RTC_TIME@SetTime+2,___awmod@dividend
 21993  013EC0  0101               	movlb	1	; () banked
 21994  013EC2  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 21995  013EC4  0E00               	movlw	0
 21996  013EC6  0101               	movlb	1	; () banked
 21997  013EC8  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 21998  013ECA  0E0A               	movlw	10
 21999  013ECC  0101               	movlb	1	; () banked
 22000  013ECE  6F7E               	movwf	___awmod@divisor& (0+255),b
 22001  013ED0  ECA5  F0AC         	call	___awmod	;wreg free
 22002  013ED4  C17C  F18F         	movff	?___awmod,??_SET_RTC_TIME+2
 22003  013ED8  C17D  F190         	movff	?___awmod+1,??_SET_RTC_TIME+3
 22004  013EDC  0101               	movlb	1	; () banked
 22005  013EDE  C186  F17C         	movff	SET_RTC_TIME@SetTime+2,___awdiv@dividend
 22006  013EE2  0101               	movlb	1	; () banked
 22007  013EE4  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 22008  013EE6  0E00               	movlw	0
 22009  013EE8  0101               	movlb	1	; () banked
 22010  013EEA  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 22011  013EEC  0E0A               	movlw	10
 22012  013EEE  0101               	movlb	1	; () banked
 22013  013EF0  6F7E               	movwf	___awdiv@divisor& (0+255),b
 22014  013EF2  EC85  F0AA         	call	___awdiv	;wreg free
 22015  013EF6  0101               	movlb	1	; () banked
 22016  013EF8  397C               	swapf	?___awdiv& (0+255),w,b
 22017  013EFA  0BF0               	andlw	240
 22018  013EFC  0101               	movlb	1	; () banked
 22019  013EFE  258F               	addwf	(??_SET_RTC_TIME+2)& (0+255),w,b
 22020  013F00  0101               	movlb	1	; () banked
 22021  013F02  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 22022  013F04  0101               	movlb	1	; () banked
 22023  013F06  6F93               	movwf	(SET_RTC_TIME@temp+2)& (0+255),b
 22024                           
 22025                           ; BSR set to: 1
 22026                           ;RTC.c: 190: Error = I2C_Write_At_Address( 0b1101000, 0x02, temp[2] );
 22027  013F08  0E02               	movlw	2
 22028  013F0A  0101               	movlb	1	; () banked
 22029  013F0C  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 22030  013F0E  C193  F180         	movff	SET_RTC_TIME@temp+2,I2C_Write_At_Address@data
 22031  013F12  0E68               	movlw	104
 22032  013F14  ECBD  F0AD         	call	_I2C_Write_At_Address
 22033  013F18  0101               	movlb	1	; () banked
 22034  013F1A  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 22035                           
 22036                           ; BSR set to: 1
 22037                           ;RTC.c: 191: if(Error)
 22038  013F1C  0101               	movlb	1	; () banked
 22039  013F1E  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 22040  013F20  B4D8               	btfsc	status,2,c
 22041  013F22  D002               	goto	l1035
 22042                           
 22043                           ; BSR set to: 1
 22044                           ;RTC.c: 192: {
 22045                           ;RTC.c: 193: return 3;
 22046  013F24  0E03               	movlw	3
 22047  013F26  0012               	return	
 22048  013F28                     l1035:
 22049                           
 22050                           ; BSR set to: 1
 22051                           ;RTC.c: 194: }
 22052                           ;RTC.c: 196: temp[3] = (SetTime.Day);
 22053  013F28  C189  F194         	movff	SET_RTC_TIME@SetTime+5,SET_RTC_TIME@temp+3
 22054                           
 22055                           ; BSR set to: 1
 22056                           ;RTC.c: 197: Error = I2C_Write_At_Address( 0b1101000, 0x03, temp[3] );
 22057  013F2C  0E03               	movlw	3
 22058  013F2E  0101               	movlb	1	; () banked
 22059  013F30  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 22060  013F32  C194  F180         	movff	SET_RTC_TIME@temp+3,I2C_Write_At_Address@data
 22061  013F36  0E68               	movlw	104
 22062  013F38  ECBD  F0AD         	call	_I2C_Write_At_Address
 22063  013F3C  0101               	movlb	1	; () banked
 22064  013F3E  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 22065                           
 22066                           ; BSR set to: 1
 22067                           ;RTC.c: 198: if(Error)
 22068  013F40  0101               	movlb	1	; () banked
 22069  013F42  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 22070  013F44  B4D8               	btfsc	status,2,c
 22071  013F46  D002               	goto	l11278
 22072                           
 22073                           ; BSR set to: 1
 22074                           ;RTC.c: 199: {
 22075                           ;RTC.c: 200: return 4;
 22076  013F48  0E04               	movlw	4
 22077  013F4A  0012               	return	
 22078  013F4C                     l11278:
 22079                           
 22080                           ; BSR set to: 1
 22081                           ;RTC.c: 201: }
 22082                           ;RTC.c: 203: temp[4] = ((SetTime.Date /10) << 4) + (SetTime.Date % 10);
 22083  013F4C  0101               	movlb	1	; () banked
 22084  013F4E  C18A  F17C         	movff	SET_RTC_TIME@SetTime+6,___awmod@dividend
 22085  013F52  0101               	movlb	1	; () banked
 22086  013F54  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 22087  013F56  0E00               	movlw	0
 22088  013F58  0101               	movlb	1	; () banked
 22089  013F5A  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 22090  013F5C  0E0A               	movlw	10
 22091  013F5E  0101               	movlb	1	; () banked
 22092  013F60  6F7E               	movwf	___awmod@divisor& (0+255),b
 22093  013F62  ECA5  F0AC         	call	___awmod	;wreg free
 22094  013F66  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 22095  013F6A  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 22096  013F6E  0101               	movlb	1	; () banked
 22097  013F70  C18A  F17C         	movff	SET_RTC_TIME@SetTime+6,___awdiv@dividend
 22098  013F74  0101               	movlb	1	; () banked
 22099  013F76  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 22100  013F78  0E00               	movlw	0
 22101  013F7A  0101               	movlb	1	; () banked
 22102  013F7C  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 22103  013F7E  0E0A               	movlw	10
 22104  013F80  0101               	movlb	1	; () banked
 22105  013F82  6F7E               	movwf	___awdiv@divisor& (0+255),b
 22106  013F84  EC85  F0AA         	call	___awdiv	;wreg free
 22107  013F88  0101               	movlb	1	; () banked
 22108  013F8A  397C               	swapf	?___awdiv& (0+255),w,b
 22109  013F8C  0BF0               	andlw	240
 22110  013F8E  0101               	movlb	1	; () banked
 22111  013F90  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 22112  013F92  0101               	movlb	1	; () banked
 22113  013F94  6F95               	movwf	(SET_RTC_TIME@temp+4)& (0+255),b
 22114                           
 22115                           ; BSR set to: 1
 22116                           ;RTC.c: 204: Error = I2C_Write_At_Address( 0b1101000, 0x04, temp[4] );
 22117  013F96  0E04               	movlw	4
 22118  013F98  0101               	movlb	1	; () banked
 22119  013F9A  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 22120  013F9C  C195  F180         	movff	SET_RTC_TIME@temp+4,I2C_Write_At_Address@data
 22121  013FA0  0E68               	movlw	104
 22122  013FA2  ECBD  F0AD         	call	_I2C_Write_At_Address
 22123  013FA6  0101               	movlb	1	; () banked
 22124  013FA8  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 22125                           
 22126                           ; BSR set to: 1
 22127                           ;RTC.c: 205: if(Error)
 22128  013FAA  0101               	movlb	1	; () banked
 22129  013FAC  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 22130  013FAE  B4D8               	btfsc	status,2,c
 22131  013FB0  D002               	goto	l11288
 22132                           
 22133                           ; BSR set to: 1
 22134                           ;RTC.c: 206: {
 22135                           ;RTC.c: 207: return 5;
 22136  013FB2  0E05               	movlw	5
 22137  013FB4  0012               	return	
 22138  013FB6                     l11288:
 22139                           
 22140                           ; BSR set to: 1
 22141                           ;RTC.c: 208: }
 22142                           ;RTC.c: 210: temp[5] = ((SetTime.Month /10) << 4) + (SetTime.Month % 10);
 22143  013FB6  0101               	movlb	1	; () banked
 22144  013FB8  C18B  F17C         	movff	SET_RTC_TIME@SetTime+7,___awmod@dividend
 22145  013FBC  0101               	movlb	1	; () banked
 22146  013FBE  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 22147  013FC0  0E00               	movlw	0
 22148  013FC2  0101               	movlb	1	; () banked
 22149  013FC4  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 22150  013FC6  0E0A               	movlw	10
 22151  013FC8  0101               	movlb	1	; () banked
 22152  013FCA  6F7E               	movwf	___awmod@divisor& (0+255),b
 22153  013FCC  ECA5  F0AC         	call	___awmod	;wreg free
 22154  013FD0  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 22155  013FD4  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 22156  013FD8  0101               	movlb	1	; () banked
 22157  013FDA  C18B  F17C         	movff	SET_RTC_TIME@SetTime+7,___awdiv@dividend
 22158  013FDE  0101               	movlb	1	; () banked
 22159  013FE0  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 22160  013FE2  0E00               	movlw	0
 22161  013FE4  0101               	movlb	1	; () banked
 22162  013FE6  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 22163  013FE8  0E0A               	movlw	10
 22164  013FEA  0101               	movlb	1	; () banked
 22165  013FEC  6F7E               	movwf	___awdiv@divisor& (0+255),b
 22166  013FEE  EC85  F0AA         	call	___awdiv	;wreg free
 22167  013FF2  0101               	movlb	1	; () banked
 22168  013FF4  397C               	swapf	?___awdiv& (0+255),w,b
 22169  013FF6  0BF0               	andlw	240
 22170  013FF8  0101               	movlb	1	; () banked
 22171  013FFA  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 22172  013FFC  0101               	movlb	1	; () banked
 22173  013FFE  6F96               	movwf	(SET_RTC_TIME@temp+5)& (0+255),b
 22174                           
 22175                           ; BSR set to: 1
 22176                           ;RTC.c: 211: Error = I2C_Write_At_Address( 0b1101000, 0x05, temp[5] );
 22177  014000  0E05               	movlw	5
 22178  014002  0101               	movlb	1	; () banked
 22179  014004  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 22180  014006  C196  F180         	movff	SET_RTC_TIME@temp+5,I2C_Write_At_Address@data
 22181  01400A  0E68               	movlw	104
 22182  01400C  ECBD  F0AD         	call	_I2C_Write_At_Address
 22183  014010  0101               	movlb	1	; () banked
 22184  014012  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 22185                           
 22186                           ; BSR set to: 1
 22187                           ;RTC.c: 212: if(Error)
 22188  014014  0101               	movlb	1	; () banked
 22189  014016  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 22190  014018  B4D8               	btfsc	status,2,c
 22191  01401A  D002               	goto	l11298
 22192                           
 22193                           ; BSR set to: 1
 22194                           ;RTC.c: 213: {
 22195                           ;RTC.c: 214: return 6;
 22196  01401C  0E06               	movlw	6
 22197  01401E  0012               	return	
 22198  014020                     l11298:
 22199                           
 22200                           ; BSR set to: 1
 22201                           ;RTC.c: 215: }
 22202                           ;RTC.c: 217: temp[6] = ((SetTime.Year /10) << 4) + (SetTime.Year % 10);
 22203  014020  0101               	movlb	1	; () banked
 22204  014022  C18C  F17C         	movff	SET_RTC_TIME@SetTime+8,___awmod@dividend
 22205  014026  0101               	movlb	1	; () banked
 22206  014028  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 22207  01402A  0E00               	movlw	0
 22208  01402C  0101               	movlb	1	; () banked
 22209  01402E  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 22210  014030  0E0A               	movlw	10
 22211  014032  0101               	movlb	1	; () banked
 22212  014034  6F7E               	movwf	___awmod@divisor& (0+255),b
 22213  014036  ECA5  F0AC         	call	___awmod	;wreg free
 22214  01403A  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 22215  01403E  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 22216  014042  0101               	movlb	1	; () banked
 22217  014044  C18C  F17C         	movff	SET_RTC_TIME@SetTime+8,___awdiv@dividend
 22218  014048  0101               	movlb	1	; () banked
 22219  01404A  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 22220  01404C  0E00               	movlw	0
 22221  01404E  0101               	movlb	1	; () banked
 22222  014050  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 22223  014052  0E0A               	movlw	10
 22224  014054  0101               	movlb	1	; () banked
 22225  014056  6F7E               	movwf	___awdiv@divisor& (0+255),b
 22226  014058  EC85  F0AA         	call	___awdiv	;wreg free
 22227  01405C  0101               	movlb	1	; () banked
 22228  01405E  397C               	swapf	?___awdiv& (0+255),w,b
 22229  014060  0BF0               	andlw	240
 22230  014062  0101               	movlb	1	; () banked
 22231  014064  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 22232  014066  0101               	movlb	1	; () banked
 22233  014068  6F97               	movwf	(SET_RTC_TIME@temp+6)& (0+255),b
 22234                           
 22235                           ; BSR set to: 1
 22236                           ;RTC.c: 218: Error = I2C_Write_At_Address( 0b1101000, 0x06, temp[6] );
 22237  01406A  0E06               	movlw	6
 22238  01406C  0101               	movlb	1	; () banked
 22239  01406E  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 22240  014070  C197  F180         	movff	SET_RTC_TIME@temp+6,I2C_Write_At_Address@data
 22241  014074  0E68               	movlw	104
 22242  014076  ECBD  F0AD         	call	_I2C_Write_At_Address
 22243  01407A  0101               	movlb	1	; () banked
 22244  01407C  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 22245                           
 22246                           ; BSR set to: 1
 22247                           ;RTC.c: 219: if(Error)
 22248  01407E  0101               	movlb	1	; () banked
 22249  014080  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 22250  014082  B4D8               	btfsc	status,2,c
 22251  014084  D002               	goto	l11308
 22252                           
 22253                           ; BSR set to: 1
 22254                           ;RTC.c: 220: {
 22255                           ;RTC.c: 221: return 7;
 22256  014086  0E07               	movlw	7
 22257  014088  0012               	return	
 22258  01408A                     l11308:
 22259                           
 22260                           ; BSR set to: 1
 22261                           ;RTC.c: 222: }
 22262                           ;RTC.c: 224: return 0;
 22263  01408A  0E00               	movlw	0
 22264  01408C  0012               	return	
 22265  01408E                     __end_of_SET_RTC_TIME:
 22266                           	opt stack 0
 22267                           tblptru	equ	0xFF8
 22268                           tblptrh	equ	0xFF7
 22269                           tblptrl	equ	0xFF6
 22270                           tablat	equ	0xFF5
 22271                           prodh	equ	0xFF4
 22272                           prodl	equ	0xFF3
 22273                           intcon	equ	0xFF2
 22274                           postinc0	equ	0xFEE
 22275                           wreg	equ	0xFE8
 22276                           indf1	equ	0xFE7
 22277                           postinc1	equ	0xFE6
 22278                           postdec1	equ	0xFE5
 22279                           fsr1h	equ	0xFE2
 22280                           fsr1l	equ	0xFE1
 22281                           indf2	equ	0xFDF
 22282                           postinc2	equ	0xFDE
 22283                           postdec2	equ	0xFDD
 22284                           fsr2h	equ	0xFDA
 22285                           fsr2l	equ	0xFD9
 22286                           status	equ	0xFD8
 22287                           
 22288 ;; *************** function ___awmod *****************
 22289 ;; Defined at:
 22290 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
 22291 ;; Parameters:    Size  Location     Type
 22292 ;;  dividend        2   14[BANK1 ] int 
 22293 ;;  divisor         2   16[BANK1 ] int 
 22294 ;; Auto vars:     Size  Location     Type
 22295 ;;  sign            1   19[BANK1 ] unsigned char 
 22296 ;;  counter         1   18[BANK1 ] unsigned char 
 22297 ;; Return value:  Size  Location     Type
 22298 ;;                  2   14[BANK1 ] int 
 22299 ;; Registers used:
 22300 ;;		wreg, status,2, status,0, prodl
 22301 ;; Tracked objects:
 22302 ;;		On entry : 0/0
 22303 ;;		On exit  : 0/0
 22304 ;;		Unchanged: 0/0
 22305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22306 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22307 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22309 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 22310 ;;Total ram usage:        6 bytes
 22311 ;; Hardware stack levels used:    1
 22312 ;; Hardware stack levels required when called:    6
 22313 ;; This function calls:
 22314 ;;		Nothing
 22315 ;; This function is called by:
 22316 ;;		_SET_RTC_TIME
 22317 ;; This function uses a non-reentrant model
 22318 ;;
 22319                           
 22320                           	psect	text47
 22321  01594A                     __ptext47:
 22322                           	opt stack 0
 22323  01594A                     ___awmod:
 22324                           	opt stack 22
 22325                           
 22326                           ; BSR set to: 1
 22327                           ;incstack = 0
 22328  01594A  0E00               	movlw	0
 22329  01594C  0101               	movlb	1	; () banked
 22330  01594E  6F81               	movwf	___awmod@sign& (0+255),b
 22331                           
 22332                           ; BSR set to: 1
 22333  015950  0101               	movlb	1	; () banked
 22334  015952  517D               	movf	(___awmod@dividend+1)& (0+255),w,b
 22335  015954  0A80               	xorlw	128
 22336  015956  6EF3               	movwf	prodl,c
 22337  015958  0E80               	movlw	128
 22338  01595A  5CF3               	subwf	prodl,w,c
 22339  01595C  0E00               	movlw	0
 22340  01595E  B4D8               	btfsc	status,2,c
 22341  015960  5D7C               	subwf	___awmod@dividend& (0+255),w,b
 22342  015962  B0D8               	btfsc	status,0,c
 22343  015964  D009               	goto	l10410
 22344                           
 22345                           ; BSR set to: 1
 22346  015966  0101               	movlb	1	; () banked
 22347  015968  6D7C               	negf	___awmod@dividend& (0+255),b
 22348  01596A  0101               	movlb	1	; () banked
 22349  01596C  1F7D               	comf	(___awmod@dividend+1)& (0+255),f,b
 22350  01596E  B0D8               	btfsc	status,0,c
 22351  015970  2B7D               	incf	(___awmod@dividend+1)& (0+255),f,b
 22352                           
 22353                           ; BSR set to: 1
 22354  015972  0E01               	movlw	1
 22355  015974  0101               	movlb	1	; () banked
 22356  015976  6F81               	movwf	___awmod@sign& (0+255),b
 22357  015978                     l10410:
 22358                           
 22359                           ; BSR set to: 1
 22360  015978  0101               	movlb	1	; () banked
 22361  01597A  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 22362  01597C  0A80               	xorlw	128
 22363  01597E  6EF3               	movwf	prodl,c
 22364  015980  0E80               	movlw	128
 22365  015982  5CF3               	subwf	prodl,w,c
 22366  015984  0E00               	movlw	0
 22367  015986  B4D8               	btfsc	status,2,c
 22368  015988  5D7E               	subwf	___awmod@divisor& (0+255),w,b
 22369  01598A  B0D8               	btfsc	status,0,c
 22370  01598C  D006               	goto	l10414
 22371                           
 22372                           ; BSR set to: 1
 22373  01598E  0101               	movlb	1	; () banked
 22374  015990  6D7E               	negf	___awmod@divisor& (0+255),b
 22375  015992  0101               	movlb	1	; () banked
 22376  015994  1F7F               	comf	(___awmod@divisor+1)& (0+255),f,b
 22377  015996  B0D8               	btfsc	status,0,c
 22378  015998  2B7F               	incf	(___awmod@divisor+1)& (0+255),f,b
 22379  01599A                     l10414:
 22380                           
 22381                           ; BSR set to: 1
 22382  01599A  0101               	movlb	1	; () banked
 22383  01599C  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 22384  01599E  117E               	iorwf	___awmod@divisor& (0+255),w,b
 22385  0159A0  B4D8               	btfsc	status,2,c
 22386  0159A2  D026               	goto	l10430
 22387                           
 22388                           ; BSR set to: 1
 22389  0159A4  0E01               	movlw	1
 22390  0159A6  0101               	movlb	1	; () banked
 22391  0159A8  6F80               	movwf	___awmod@counter& (0+255),b
 22392  0159AA  D006               	goto	l10420
 22393  0159AC                     l10418:
 22394                           
 22395                           ; BSR set to: 1
 22396  0159AC  0101               	movlb	1	; () banked
 22397  0159AE  90D8               	bcf	status,0,c
 22398  0159B0  377E               	rlcf	___awmod@divisor& (0+255),f,b
 22399  0159B2  377F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 22400  0159B4  0101               	movlb	1	; () banked
 22401  0159B6  2B80               	incf	___awmod@counter& (0+255),f,b
 22402  0159B8                     l10420:
 22403                           
 22404                           ; BSR set to: 1
 22405  0159B8  0101               	movlb	1	; () banked
 22406  0159BA  AF7F               	btfss	(___awmod@divisor+1)& (0+255),7,b
 22407  0159BC  D7F7               	goto	l10418
 22408  0159BE                     l10422:
 22409                           
 22410                           ; BSR set to: 1
 22411  0159BE  0101               	movlb	1	; () banked
 22412  0159C0  517E               	movf	___awmod@divisor& (0+255),w,b
 22413  0159C2  0101               	movlb	1	; () banked
 22414  0159C4  5D7C               	subwf	___awmod@dividend& (0+255),w,b
 22415  0159C6  0101               	movlb	1	; () banked
 22416  0159C8  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 22417  0159CA  0101               	movlb	1	; () banked
 22418  0159CC  597D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 22419  0159CE  A0D8               	btfss	status,0,c
 22420  0159D0  D008               	goto	l10426
 22421                           
 22422                           ; BSR set to: 1
 22423  0159D2  0101               	movlb	1	; () banked
 22424  0159D4  517E               	movf	___awmod@divisor& (0+255),w,b
 22425  0159D6  0101               	movlb	1	; () banked
 22426  0159D8  5F7C               	subwf	___awmod@dividend& (0+255),f,b
 22427  0159DA  0101               	movlb	1	; () banked
 22428  0159DC  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 22429  0159DE  0101               	movlb	1	; () banked
 22430  0159E0  5B7D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 22431  0159E2                     l10426:
 22432                           
 22433                           ; BSR set to: 1
 22434  0159E2  0101               	movlb	1	; () banked
 22435  0159E4  90D8               	bcf	status,0,c
 22436  0159E6  337F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 22437  0159E8  337E               	rrcf	___awmod@divisor& (0+255),f,b
 22438                           
 22439                           ; BSR set to: 1
 22440  0159EA  0101               	movlb	1	; () banked
 22441  0159EC  2F80               	decfsz	___awmod@counter& (0+255),f,b
 22442  0159EE  D7E7               	goto	l10422
 22443  0159F0                     l10430:
 22444                           
 22445                           ; BSR set to: 1
 22446  0159F0  0101               	movlb	1	; () banked
 22447  0159F2  5181               	movf	___awmod@sign& (0+255),w,b
 22448  0159F4  B4D8               	btfsc	status,2,c
 22449  0159F6  D006               	goto	l10434
 22450                           
 22451                           ; BSR set to: 1
 22452  0159F8  0101               	movlb	1	; () banked
 22453  0159FA  6D7C               	negf	___awmod@dividend& (0+255),b
 22454  0159FC  0101               	movlb	1	; () banked
 22455  0159FE  1F7D               	comf	(___awmod@dividend+1)& (0+255),f,b
 22456  015A00  B0D8               	btfsc	status,0,c
 22457  015A02  2B7D               	incf	(___awmod@dividend+1)& (0+255),f,b
 22458  015A04                     l10434:
 22459                           
 22460                           ; BSR set to: 1
 22461  015A04  C17C  F17C         	movff	___awmod@dividend,?___awmod
 22462  015A08  C17D  F17D         	movff	___awmod@dividend+1,?___awmod+1
 22463  015A0C  0012               	return	
 22464  015A0E                     __end_of___awmod:
 22465                           	opt stack 0
 22466                           tblptru	equ	0xFF8
 22467                           tblptrh	equ	0xFF7
 22468                           tblptrl	equ	0xFF6
 22469                           tablat	equ	0xFF5
 22470                           prodh	equ	0xFF4
 22471                           prodl	equ	0xFF3
 22472                           intcon	equ	0xFF2
 22473                           postinc0	equ	0xFEE
 22474                           wreg	equ	0xFE8
 22475                           indf1	equ	0xFE7
 22476                           postinc1	equ	0xFE6
 22477                           postdec1	equ	0xFE5
 22478                           fsr1h	equ	0xFE2
 22479                           fsr1l	equ	0xFE1
 22480                           indf2	equ	0xFDF
 22481                           postinc2	equ	0xFDE
 22482                           postdec2	equ	0xFDD
 22483                           fsr2h	equ	0xFDA
 22484                           fsr2l	equ	0xFD9
 22485                           status	equ	0xFD8
 22486                           
 22487 ;; *************** function ___awdiv *****************
 22488 ;; Defined at:
 22489 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
 22490 ;; Parameters:    Size  Location     Type
 22491 ;;  dividend        2   14[BANK1 ] int 
 22492 ;;  divisor         2   16[BANK1 ] int 
 22493 ;; Auto vars:     Size  Location     Type
 22494 ;;  quotient        2   20[BANK1 ] int 
 22495 ;;  sign            1   19[BANK1 ] unsigned char 
 22496 ;;  counter         1   18[BANK1 ] unsigned char 
 22497 ;; Return value:  Size  Location     Type
 22498 ;;                  2   14[BANK1 ] int 
 22499 ;; Registers used:
 22500 ;;		wreg, status,2, status,0, prodl
 22501 ;; Tracked objects:
 22502 ;;		On entry : 0/0
 22503 ;;		On exit  : 0/0
 22504 ;;		Unchanged: 0/0
 22505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22506 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22507 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22509 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 22510 ;;Total ram usage:        8 bytes
 22511 ;; Hardware stack levels used:    1
 22512 ;; Hardware stack levels required when called:    6
 22513 ;; This function calls:
 22514 ;;		Nothing
 22515 ;; This function is called by:
 22516 ;;		_SET_RTC_TIME
 22517 ;; This function uses a non-reentrant model
 22518 ;;
 22519                           
 22520                           	psect	text48
 22521  01550A                     __ptext48:
 22522                           	opt stack 0
 22523  01550A                     ___awdiv:
 22524                           	opt stack 22
 22525                           
 22526                           ; BSR set to: 1
 22527                           ;incstack = 0
 22528  01550A  0E00               	movlw	0
 22529  01550C  0101               	movlb	1	; () banked
 22530  01550E  6F81               	movwf	___awdiv@sign& (0+255),b
 22531                           
 22532                           ; BSR set to: 1
 22533  015510  0101               	movlb	1	; () banked
 22534  015512  517F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 22535  015514  0A80               	xorlw	128
 22536  015516  6EF3               	movwf	prodl,c
 22537  015518  0E80               	movlw	128
 22538  01551A  5CF3               	subwf	prodl,w,c
 22539  01551C  0E00               	movlw	0
 22540  01551E  B4D8               	btfsc	status,2,c
 22541  015520  5D7E               	subwf	___awdiv@divisor& (0+255),w,b
 22542  015522  B0D8               	btfsc	status,0,c
 22543  015524  D009               	goto	l10366
 22544                           
 22545                           ; BSR set to: 1
 22546  015526  0101               	movlb	1	; () banked
 22547  015528  6D7E               	negf	___awdiv@divisor& (0+255),b
 22548  01552A  0101               	movlb	1	; () banked
 22549  01552C  1F7F               	comf	(___awdiv@divisor+1)& (0+255),f,b
 22550  01552E  B0D8               	btfsc	status,0,c
 22551  015530  2B7F               	incf	(___awdiv@divisor+1)& (0+255),f,b
 22552                           
 22553                           ; BSR set to: 1
 22554  015532  0E01               	movlw	1
 22555  015534  0101               	movlb	1	; () banked
 22556  015536  6F81               	movwf	___awdiv@sign& (0+255),b
 22557  015538                     l10366:
 22558                           
 22559                           ; BSR set to: 1
 22560  015538  0101               	movlb	1	; () banked
 22561  01553A  517D               	movf	(___awdiv@dividend+1)& (0+255),w,b
 22562  01553C  0A80               	xorlw	128
 22563  01553E  6EF3               	movwf	prodl,c
 22564  015540  0E80               	movlw	128
 22565  015542  5CF3               	subwf	prodl,w,c
 22566  015544  0E00               	movlw	0
 22567  015546  B4D8               	btfsc	status,2,c
 22568  015548  5D7C               	subwf	___awdiv@dividend& (0+255),w,b
 22569  01554A  B0D8               	btfsc	status,0,c
 22570  01554C  D009               	goto	l10372
 22571                           
 22572                           ; BSR set to: 1
 22573  01554E  0101               	movlb	1	; () banked
 22574  015550  6D7C               	negf	___awdiv@dividend& (0+255),b
 22575  015552  0101               	movlb	1	; () banked
 22576  015554  1F7D               	comf	(___awdiv@dividend+1)& (0+255),f,b
 22577  015556  B0D8               	btfsc	status,0,c
 22578  015558  2B7D               	incf	(___awdiv@dividend+1)& (0+255),f,b
 22579                           
 22580                           ; BSR set to: 1
 22581  01555A  0E01               	movlw	1
 22582  01555C  0101               	movlb	1	; () banked
 22583  01555E  1B81               	xorwf	___awdiv@sign& (0+255),f,b
 22584  015560                     l10372:
 22585                           
 22586                           ; BSR set to: 1
 22587  015560  0E00               	movlw	0
 22588  015562  0101               	movlb	1	; () banked
 22589  015564  6F83               	movwf	(___awdiv@quotient+1)& (0+255),b
 22590  015566  0E00               	movlw	0
 22591  015568  0101               	movlb	1	; () banked
 22592  01556A  6F82               	movwf	___awdiv@quotient& (0+255),b
 22593                           
 22594                           ; BSR set to: 1
 22595  01556C  0101               	movlb	1	; () banked
 22596  01556E  517F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 22597  015570  117E               	iorwf	___awdiv@divisor& (0+255),w,b
 22598  015572  B4D8               	btfsc	status,2,c
 22599  015574  D02C               	goto	l10394
 22600                           
 22601                           ; BSR set to: 1
 22602  015576  0E01               	movlw	1
 22603  015578  0101               	movlb	1	; () banked
 22604  01557A  6F80               	movwf	___awdiv@counter& (0+255),b
 22605  01557C  D006               	goto	l10380
 22606  01557E                     l10378:
 22607                           
 22608                           ; BSR set to: 1
 22609  01557E  0101               	movlb	1	; () banked
 22610  015580  90D8               	bcf	status,0,c
 22611  015582  377E               	rlcf	___awdiv@divisor& (0+255),f,b
 22612  015584  377F               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 22613  015586  0101               	movlb	1	; () banked
 22614  015588  2B80               	incf	___awdiv@counter& (0+255),f,b
 22615  01558A                     l10380:
 22616                           
 22617                           ; BSR set to: 1
 22618  01558A  0101               	movlb	1	; () banked
 22619  01558C  AF7F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 22620  01558E  D7F7               	goto	l10378
 22621  015590                     l10382:
 22622                           
 22623                           ; BSR set to: 1
 22624  015590  0101               	movlb	1	; () banked
 22625  015592  90D8               	bcf	status,0,c
 22626  015594  3782               	rlcf	___awdiv@quotient& (0+255),f,b
 22627  015596  3783               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 22628                           
 22629                           ; BSR set to: 1
 22630  015598  0101               	movlb	1	; () banked
 22631  01559A  517E               	movf	___awdiv@divisor& (0+255),w,b
 22632  01559C  0101               	movlb	1	; () banked
 22633  01559E  5D7C               	subwf	___awdiv@dividend& (0+255),w,b
 22634  0155A0  0101               	movlb	1	; () banked
 22635  0155A2  517F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 22636  0155A4  0101               	movlb	1	; () banked
 22637  0155A6  597D               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 22638  0155A8  A0D8               	btfss	status,0,c
 22639  0155AA  D00A               	goto	l10390
 22640                           
 22641                           ; BSR set to: 1
 22642  0155AC  0101               	movlb	1	; () banked
 22643  0155AE  517E               	movf	___awdiv@divisor& (0+255),w,b
 22644  0155B0  0101               	movlb	1	; () banked
 22645  0155B2  5F7C               	subwf	___awdiv@dividend& (0+255),f,b
 22646  0155B4  0101               	movlb	1	; () banked
 22647  0155B6  517F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 22648  0155B8  0101               	movlb	1	; () banked
 22649  0155BA  5B7D               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 22650                           
 22651                           ; BSR set to: 1
 22652  0155BC  0101               	movlb	1	; () banked
 22653  0155BE  8182               	bsf	___awdiv@quotient& (0+255),0,b
 22654  0155C0                     l10390:
 22655                           
 22656                           ; BSR set to: 1
 22657  0155C0  0101               	movlb	1	; () banked
 22658  0155C2  90D8               	bcf	status,0,c
 22659  0155C4  337F               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 22660  0155C6  337E               	rrcf	___awdiv@divisor& (0+255),f,b
 22661                           
 22662                           ; BSR set to: 1
 22663  0155C8  0101               	movlb	1	; () banked
 22664  0155CA  2F80               	decfsz	___awdiv@counter& (0+255),f,b
 22665  0155CC  D7E1               	goto	l10382
 22666  0155CE                     l10394:
 22667                           
 22668                           ; BSR set to: 1
 22669  0155CE  0101               	movlb	1	; () banked
 22670  0155D0  5181               	movf	___awdiv@sign& (0+255),w,b
 22671  0155D2  B4D8               	btfsc	status,2,c
 22672  0155D4  D006               	goto	l10398
 22673                           
 22674                           ; BSR set to: 1
 22675  0155D6  0101               	movlb	1	; () banked
 22676  0155D8  6D82               	negf	___awdiv@quotient& (0+255),b
 22677  0155DA  0101               	movlb	1	; () banked
 22678  0155DC  1F83               	comf	(___awdiv@quotient+1)& (0+255),f,b
 22679  0155DE  B0D8               	btfsc	status,0,c
 22680  0155E0  2B83               	incf	(___awdiv@quotient+1)& (0+255),f,b
 22681  0155E2                     l10398:
 22682                           
 22683                           ; BSR set to: 1
 22684  0155E2  C182  F17C         	movff	___awdiv@quotient,?___awdiv
 22685  0155E6  C183  F17D         	movff	___awdiv@quotient+1,?___awdiv+1
 22686  0155EA  0012               	return	
 22687  0155EC                     __end_of___awdiv:
 22688                           	opt stack 0
 22689                           tblptru	equ	0xFF8
 22690                           tblptrh	equ	0xFF7
 22691                           tblptrl	equ	0xFF6
 22692                           tablat	equ	0xFF5
 22693                           prodh	equ	0xFF4
 22694                           prodl	equ	0xFF3
 22695                           intcon	equ	0xFF2
 22696                           postinc0	equ	0xFEE
 22697                           wreg	equ	0xFE8
 22698                           indf1	equ	0xFE7
 22699                           postinc1	equ	0xFE6
 22700                           postdec1	equ	0xFE5
 22701                           fsr1h	equ	0xFE2
 22702                           fsr1l	equ	0xFE1
 22703                           indf2	equ	0xFDF
 22704                           postinc2	equ	0xFDE
 22705                           postdec2	equ	0xFDD
 22706                           fsr2h	equ	0xFDA
 22707                           fsr2l	equ	0xFD9
 22708                           status	equ	0xFD8
 22709                           
 22710 ;; *************** function _I2C_Write_At_Address *****************
 22711 ;; Defined at:
 22712 ;;		line 161 in file "I2C.c"
 22713 ;; Parameters:    Size  Location     Type
 22714 ;;  I2Caddress      1    wreg     unsigned char 
 22715 ;;  Register        1   17[BANK1 ] unsigned char 
 22716 ;;  data            1   18[BANK1 ] unsigned char 
 22717 ;; Auto vars:     Size  Location     Type
 22718 ;;  I2Caddress      1   21[BANK1 ] unsigned char 
 22719 ;; Return value:  Size  Location     Type
 22720 ;;                  1    wreg      unsigned char 
 22721 ;; Registers used:
 22722 ;;		wreg, status,2, status,0, cstack
 22723 ;; Tracked objects:
 22724 ;;		On entry : 0/0
 22725 ;;		On exit  : 0/0
 22726 ;;		Unchanged: 0/0
 22727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22728 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22729 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22730 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22731 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 22732 ;;Total ram usage:        5 bytes
 22733 ;; Hardware stack levels used:    1
 22734 ;; Hardware stack levels required when called:    8
 22735 ;; This function calls:
 22736 ;;		_IdleI2C
 22737 ;;		_WriteI2C
 22738 ;; This function is called by:
 22739 ;;		_RTC_Clock_Enable
 22740 ;;		_RTC_TIME_NONMilitary
 22741 ;;		_SET_RTC_TIME
 22742 ;;		_RTC_Clock_Disable
 22743 ;; This function uses a non-reentrant model
 22744 ;;
 22745                           
 22746                           	psect	text49
 22747  015B7A                     __ptext49:
 22748                           	opt stack 0
 22749  015B7A                     _I2C_Write_At_Address:
 22750                           	opt stack 20
 22751                           
 22752                           ; BSR set to: 1
 22753                           ;incstack = 0
 22754                           ;I2C_Write_At_Address@I2Caddress stored from wreg
 22755  015B7A  0101               	movlb	1	; () banked
 22756  015B7C  6F83               	movwf	I2C_Write_At_Address@I2Caddress& (0+255),b
 22757                           
 22758                           ; BSR set to: 1
 22759                           ;I2C.c: 163: IdleI2C();
 22760  015B7E  EC39  F0B8         	call	_IdleI2C	;wreg free
 22761                           
 22762                           ;I2C.c: 164: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 22763  015B82  80C5               	bsf	4037,0,c	;volatile
 22764  015B84                     l1183:
 22765  015B84  B0C5               	btfsc	4037,0,c	;volatile
 22766  015B86  D7FE               	goto	l1183
 22767  015B88                     l1186:
 22768  015B88  B0C5               	btfsc	4037,0,c	;volatile
 22769  015B8A  D7FE               	goto	l1186
 22770                           
 22771                           ;I2C.c: 166: if ( PIR2bits.BCLIF )
 22772  015B8C  A6A1               	btfss	4001,3,c	;volatile
 22773  015B8E  D002               	goto	l10152
 22774                           
 22775                           ;I2C.c: 167: {
 22776                           ;I2C.c: 168: return ( -1 );
 22777  015B90  0EFF               	movlw	255
 22778  015B92  0012               	return	
 22779  015B94                     l10152:
 22780                           
 22781                           ;I2C.c: 170: else
 22782                           ;I2C.c: 171: {
 22783                           ;I2C.c: 172: if ( WriteI2C( I2Caddress << 1) & 0xFE )
 22784  015B94  0101               	movlb	1	; () banked
 22785  015B96  5183               	movf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 22786  015B98  0101               	movlb	1	; () banked
 22787  015B9A  2583               	addwf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 22788  015B9C  EC0C  F0B1         	call	_WriteI2C
 22789  015BA0  0101               	movlb	1	; () banked
 22790  015BA2  6F81               	movwf	??_I2C_Write_At_Address& (0+255),b
 22791  015BA4  6B82               	clrf	(??_I2C_Write_At_Address+1)& (0+255),b
 22792  015BA6  BF81               	btfsc	??_I2C_Write_At_Address& (0+255),7,b
 22793  015BA8  0782               	decf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 22794  015BAA  0EFE               	movlw	254
 22795  015BAC  0101               	movlb	1	; () banked
 22796  015BAE  1781               	andwf	??_I2C_Write_At_Address& (0+255),f,b
 22797  015BB0  0E00               	movlw	0
 22798  015BB2  1782               	andwf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 22799  015BB4  0101               	movlb	1	; () banked
 22800  015BB6  5182               	movf	(??_I2C_Write_At_Address+1)& (0+255),w,b
 22801  015BB8  1181               	iorwf	??_I2C_Write_At_Address& (0+255),w,b
 22802  015BBA  B4D8               	btfsc	status,2,c
 22803  015BBC  D005               	goto	l1192
 22804                           
 22805                           ; BSR set to: 1
 22806                           ;I2C.c: 173: {
 22807                           ;I2C.c: 174: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22808  015BBE  84C5               	bsf	4037,2,c	;volatile
 22809  015BC0                     l1193:
 22810                           
 22811                           ; BSR set to: 1
 22812  015BC0  B4C5               	btfsc	4037,2,c	;volatile
 22813  015BC2  D7FE               	goto	l1193
 22814                           
 22815                           ; BSR set to: 1
 22816                           ;I2C.c: 175: return ( -3 );
 22817                           
 22818                           ; BSR set to: 1
 22819  015BC4  0EFD               	movlw	253
 22820  015BC6  0012               	return	
 22821  015BC8                     l1192:
 22822                           
 22823                           ; BSR set to: 1
 22824                           ;I2C.c: 176: }
 22825                           ;I2C.c: 179: if ( !SSPCON2bits.ACKSTAT )
 22826  015BC8  BCC5               	btfsc	4037,6,c	;volatile
 22827  015BCA  D01F               	goto	l1196
 22828                           
 22829                           ; BSR set to: 1
 22830                           ;I2C.c: 180: {
 22831                           ;I2C.c: 181: if ( WriteI2C( Register ) )
 22832  015BCC  0101               	movlb	1	; () banked
 22833  015BCE  517F               	movf	I2C_Write_At_Address@Register& (0+255),w,b
 22834  015BD0  EC0C  F0B1         	call	_WriteI2C
 22835  015BD4  0900               	iorlw	0
 22836  015BD6  B4D8               	btfsc	status,2,c
 22837  015BD8  D005               	goto	l1197
 22838                           
 22839                           ;I2C.c: 182: {
 22840                           ;I2C.c: 183: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22841  015BDA  84C5               	bsf	4037,2,c	;volatile
 22842  015BDC                     l1198:
 22843  015BDC  B4C5               	btfsc	4037,2,c	;volatile
 22844  015BDE  D7FE               	goto	l1198
 22845                           
 22846                           ;I2C.c: 184: return ( -3 );
 22847  015BE0  0EFD               	movlw	253
 22848  015BE2  0012               	return	
 22849  015BE4                     l1197:
 22850                           
 22851                           ;I2C.c: 185: }
 22852                           ;I2C.c: 188: if ( !SSPCON2bits.ACKSTAT )
 22853  015BE4  BCC5               	btfsc	4037,6,c	;volatile
 22854  015BE6  D00C               	goto	l1201
 22855                           
 22856                           ;I2C.c: 189: {
 22857                           ;I2C.c: 190: if ( WriteI2C ( data ) )
 22858  015BE8  0101               	movlb	1	; () banked
 22859  015BEA  5180               	movf	I2C_Write_At_Address@data& (0+255),w,b
 22860  015BEC  EC0C  F0B1         	call	_WriteI2C
 22861  015BF0  0900               	iorlw	0
 22862  015BF2  B4D8               	btfsc	status,2,c
 22863  015BF4  D00F               	goto	l1191
 22864                           
 22865                           ;I2C.c: 191: {
 22866                           ;I2C.c: 192: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22867  015BF6  84C5               	bsf	4037,2,c	;volatile
 22868  015BF8                     l1203:
 22869  015BF8  B4C5               	btfsc	4037,2,c	;volatile
 22870  015BFA  D7FE               	goto	l1203
 22871                           
 22872                           ;I2C.c: 193: return( -4 );
 22873  015BFC  0EFC               	movlw	252
 22874  015BFE  0012               	return	
 22875  015C00                     l1201:
 22876                           
 22877                           ;I2C.c: 196: else
 22878                           ;I2C.c: 197: {
 22879                           ;I2C.c: 198: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22880  015C00  84C5               	bsf	4037,2,c	;volatile
 22881  015C02                     l1207:
 22882  015C02  B4C5               	btfsc	4037,2,c	;volatile
 22883  015C04  D7FE               	goto	l1207
 22884                           
 22885                           ;I2C.c: 199: return ( -2 );
 22886  015C06  0EFE               	movlw	254
 22887  015C08  0012               	return	
 22888  015C0A                     l1196:
 22889                           
 22890                           ; BSR set to: 1
 22891                           ;I2C.c: 202: else
 22892                           ;I2C.c: 203: {
 22893                           ;I2C.c: 204: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22894  015C0A  84C5               	bsf	4037,2,c	;volatile
 22895  015C0C                     l1211:
 22896                           
 22897                           ; BSR set to: 1
 22898  015C0C  B4C5               	btfsc	4037,2,c	;volatile
 22899  015C0E  D7FE               	goto	l1211
 22900                           
 22901                           ; BSR set to: 1
 22902                           ;I2C.c: 205: return ( -2 );
 22903                           
 22904                           ; BSR set to: 1
 22905  015C10  0EFE               	movlw	254
 22906  015C12  0012               	return	
 22907  015C14                     l1191:
 22908                           
 22909                           ;I2C.c: 206: }
 22910                           ;I2C.c: 207: }
 22911                           ;I2C.c: 210: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 22912  015C14  84C5               	bsf	4037,2,c	;volatile
 22913  015C16                     l1214:
 22914  015C16  B4C5               	btfsc	4037,2,c	;volatile
 22915  015C18  D7FE               	goto	l1214
 22916  015C1A                     l1217:
 22917  015C1A  B4C5               	btfsc	4037,2,c	;volatile
 22918  015C1C  D7FE               	goto	l1217
 22919                           
 22920                           ;I2C.c: 212: if ( PIR2bits.BCLIF )
 22921  015C1E  A6A1               	btfss	4001,3,c	;volatile
 22922  015C20  D002               	goto	l10188
 22923                           
 22924                           ;I2C.c: 213: {
 22925                           ;I2C.c: 214: return ( -1 );
 22926  015C22  0EFF               	movlw	255
 22927  015C24  0012               	return	
 22928  015C26                     l10188:
 22929                           
 22930                           ;I2C.c: 215: }
 22931                           ;I2C.c: 216: return ( 0 );
 22932  015C26  0E00               	movlw	0
 22933  015C28  0012               	return	
 22934  015C2A                     __end_of_I2C_Write_At_Address:
 22935                           	opt stack 0
 22936                           tblptru	equ	0xFF8
 22937                           tblptrh	equ	0xFF7
 22938                           tblptrl	equ	0xFF6
 22939                           tablat	equ	0xFF5
 22940                           prodh	equ	0xFF4
 22941                           prodl	equ	0xFF3
 22942                           intcon	equ	0xFF2
 22943                           postinc0	equ	0xFEE
 22944                           wreg	equ	0xFE8
 22945                           indf1	equ	0xFE7
 22946                           postinc1	equ	0xFE6
 22947                           postdec1	equ	0xFE5
 22948                           fsr1h	equ	0xFE2
 22949                           fsr1l	equ	0xFE1
 22950                           indf2	equ	0xFDF
 22951                           postinc2	equ	0xFDE
 22952                           postdec2	equ	0xFDD
 22953                           fsr2h	equ	0xFDA
 22954                           fsr2l	equ	0xFD9
 22955                           status	equ	0xFD8
 22956                           
 22957 ;; *************** function _RemoveSpaces *****************
 22958 ;; Defined at:
 22959 ;;		line 269 in file "MISC.c"
 22960 ;; Parameters:    Size  Location     Type
 22961 ;;  This            2   29[BANK1 ] PTR unsigned char 
 22962 ;;		 -> Rxdata(100), 
 22963 ;; Auto vars:     Size  Location     Type
 22964 ;;  That          100    0[BANK2 ] unsigned char [100]
 22965 ;;  address         2  100[BANK2 ] PTR unsigned char 
 22966 ;;		 -> Rxdata(100), 
 22967 ;;  i               1  102[BANK2 ] unsigned char 
 22968 ;; Return value:  Size  Location     Type
 22969 ;;		None               void
 22970 ;; Registers used:
 22971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22972 ;; Tracked objects:
 22973 ;;		On entry : 0/0
 22974 ;;		On exit  : 0/0
 22975 ;;		Unchanged: 0/0
 22976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22977 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22978 ;;      Locals:         0       0       0     103       0       0       0       0       0       0       0       0       
      +0       0
 22979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22980 ;;      Totals:         0       0       2     103       0       0       0       0       0       0       0       0       
      +0       0
 22981 ;;Total ram usage:      105 bytes
 22982 ;; Hardware stack levels used:    1
 22983 ;; Hardware stack levels required when called:    8
 22984 ;; This function calls:
 22985 ;;		_BufferCopy
 22986 ;;		_cleanBuffer
 22987 ;; This function is called by:
 22988 ;;		_Command
 22989 ;; This function uses a non-reentrant model
 22990 ;;
 22991                           
 22992                           	psect	text50
 22993  015AC6                     __ptext50:
 22994                           	opt stack 0
 22995  015AC6                     _RemoveSpaces:
 22996                           	opt stack 21
 22997                           
 22998                           ;MISC.c: 272: unsigned char i =0;
 22999                           
 23000                           ;incstack = 0
 23001  015AC6  0E00               	movlw	0
 23002  015AC8  0102               	movlb	2	; () banked
 23003  015ACA  6F66               	movwf	RemoveSpaces@i& (0+255),b
 23004                           
 23005                           ; BSR set to: 2
 23006                           ;MISC.c: 273: unsigned char* address = This;
 23007  015ACC  0101               	movlb	1	; () banked
 23008  015ACE  0102               	movlb	2	; () banked
 23009  015AD0  C18C  F265         	movff	RemoveSpaces@This+1,RemoveSpaces@address+1
 23010  015AD4  0101               	movlb	1	; () banked
 23011  015AD6  0102               	movlb	2	; () banked
 23012  015AD8  C18B  F264         	movff	RemoveSpaces@This,RemoveSpaces@address
 23013                           
 23014                           ; BSR set to: 2
 23015                           ;MISC.c: 274: unsigned char That[100];
 23016                           ;MISC.c: 275: cleanBuffer(That,100);
 23017  015ADC  0102               	movlb	2	; () banked
 23018  015ADE  0E02               	movlw	high RemoveSpaces@That
 23019  015AE0  0101               	movlb	1	; () banked
 23020  015AE2  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 23021  015AE4  0102               	movlb	2	; () banked
 23022  015AE6  0E00               	movlw	low RemoveSpaces@That
 23023  015AE8  0101               	movlb	1	; () banked
 23024  015AEA  6F7C               	movwf	cleanBuffer@data& (0+255),b
 23025  015AEC  0E00               	movlw	0
 23026  015AEE  0101               	movlb	1	; () banked
 23027  015AF0  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 23028  015AF2  0E64               	movlw	100
 23029  015AF4  0101               	movlb	1	; () banked
 23030  015AF6  6F7E               	movwf	cleanBuffer@count& (0+255),b
 23031  015AF8  EC7C  F0B5         	call	_cleanBuffer	;wreg free
 23032                           
 23033                           ;MISC.c: 276: while(*This != 0)
 23034  015AFC  D01E               	goto	l10746
 23035  015AFE                     l10738:
 23036                           
 23037                           ;MISC.c: 277: {
 23038                           ;MISC.c: 278: if(*This != ' ')
 23039  015AFE  C18B  FFD9         	movff	RemoveSpaces@This,fsr2l
 23040  015B02  C18C  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 23041  015B06  50DF               	movf	indf2,w,c
 23042  015B08  0A20               	xorlw	32
 23043  015B0A  B4D8               	btfsc	status,2,c
 23044  015B0C  D013               	goto	l10744
 23045                           
 23046                           ;MISC.c: 279: {
 23047                           ;MISC.c: 280: That[i] = *This;
 23048  015B0E  C18B  FFD9         	movff	RemoveSpaces@This,fsr2l
 23049  015B12  C18C  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 23050  015B16  0102               	movlb	2	; () banked
 23051  015B18  5166               	movf	RemoveSpaces@i& (0+255),w,b
 23052  015B1A  0D01               	mullw	1
 23053  015B1C  0102               	movlb	2	; () banked
 23054  015B1E  0E00               	movlw	low RemoveSpaces@That
 23055  015B20  24F3               	addwf	prodl,w,c
 23056  015B22  6EE1               	movwf	fsr1l,c
 23057  015B24  0102               	movlb	2	; () banked
 23058  015B26  0E02               	movlw	high RemoveSpaces@That
 23059  015B28  20F4               	addwfc	prodh,w,c
 23060  015B2A  6EE2               	movwf	fsr1h,c
 23061  015B2C  CFDF FFE7          	movff	indf2,indf1
 23062                           
 23063                           ; BSR set to: 2
 23064                           ;MISC.c: 281: i++;
 23065  015B30  0102               	movlb	2	; () banked
 23066  015B32  2B66               	incf	RemoveSpaces@i& (0+255),f,b
 23067  015B34                     l10744:
 23068                           
 23069                           ;MISC.c: 282: }
 23070                           ;MISC.c: 283: This++;
 23071  015B34  0101               	movlb	1	; () banked
 23072  015B36  4B8B               	infsnz	RemoveSpaces@This& (0+255),f,b
 23073  015B38  2B8C               	incf	(RemoveSpaces@This+1)& (0+255),f,b
 23074  015B3A                     l10746:
 23075  015B3A  C18B  FFD9         	movff	RemoveSpaces@This,fsr2l
 23076  015B3E  C18C  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 23077  015B42  50DF               	movf	indf2,w,c
 23078  015B44  A4D8               	btfss	status,2,c
 23079  015B46  D7DB               	goto	l10738
 23080                           
 23081                           ;MISC.c: 284: }
 23082                           ;MISC.c: 285: BufferCopy(That,address, 100, 0);
 23083  015B48  0102               	movlb	2	; () banked
 23084  015B4A  0E02               	movlw	high RemoveSpaces@That
 23085  015B4C  0101               	movlb	1	; () banked
 23086  015B4E  6F85               	movwf	(BufferCopy@from+1)& (0+255),b
 23087  015B50  0102               	movlb	2	; () banked
 23088  015B52  0E00               	movlw	low RemoveSpaces@That
 23089  015B54  0101               	movlb	1	; () banked
 23090  015B56  6F84               	movwf	BufferCopy@from& (0+255),b
 23091  015B58  0102               	movlb	2	; () banked
 23092  015B5A  0101               	movlb	1	; () banked
 23093  015B5C  C265  F187         	movff	RemoveSpaces@address+1,BufferCopy@to+1
 23094  015B60  0102               	movlb	2	; () banked
 23095  015B62  0101               	movlb	1	; () banked
 23096  015B64  C264  F186         	movff	RemoveSpaces@address,BufferCopy@to
 23097  015B68  0E64               	movlw	100
 23098  015B6A  0101               	movlb	1	; () banked
 23099  015B6C  6F88               	movwf	BufferCopy@count& (0+255),b
 23100  015B6E  0E00               	movlw	0
 23101  015B70  0101               	movlb	1	; () banked
 23102  015B72  6F89               	movwf	BufferCopy@shift& (0+255),b
 23103  015B74  EC07  F0AD         	call	_BufferCopy	;wreg free
 23104  015B78  0012               	return	
 23105  015B7A                     __end_of_RemoveSpaces:
 23106                           	opt stack 0
 23107                           tblptru	equ	0xFF8
 23108                           tblptrh	equ	0xFF7
 23109                           tblptrl	equ	0xFF6
 23110                           tablat	equ	0xFF5
 23111                           prodh	equ	0xFF4
 23112                           prodl	equ	0xFF3
 23113                           intcon	equ	0xFF2
 23114                           postinc0	equ	0xFEE
 23115                           wreg	equ	0xFE8
 23116                           indf1	equ	0xFE7
 23117                           postinc1	equ	0xFE6
 23118                           postdec1	equ	0xFE5
 23119                           fsr1h	equ	0xFE2
 23120                           fsr1l	equ	0xFE1
 23121                           indf2	equ	0xFDF
 23122                           postinc2	equ	0xFDE
 23123                           postdec2	equ	0xFDD
 23124                           fsr2h	equ	0xFDA
 23125                           fsr2l	equ	0xFD9
 23126                           status	equ	0xFD8
 23127                           
 23128 ;; *************** function _READ_RTC_TIME *****************
 23129 ;; Defined at:
 23130 ;;		line 139 in file "RTC.c"
 23131 ;; Parameters:    Size  Location     Type
 23132 ;;		None
 23133 ;; Auto vars:     Size  Location     Type
 23134 ;;  temp            7   24[BANK1 ] unsigned char [7]
 23135 ;;  Error           1   31[BANK1 ] unsigned char 
 23136 ;; Return value:  Size  Location     Type
 23137 ;;                  1    wreg      unsigned char 
 23138 ;; Registers used:
 23139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23140 ;; Tracked objects:
 23141 ;;		On entry : 0/0
 23142 ;;		On exit  : 0/0
 23143 ;;		Unchanged: 0/0
 23144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23146 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 23147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23148 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 23149 ;;Total ram usage:        8 bytes
 23150 ;; Hardware stack levels used:    1
 23151 ;; Hardware stack levels required when called:    9
 23152 ;; This function calls:
 23153 ;;		_I2C_Read_Sequential
 23154 ;;		_ResetI2C
 23155 ;; This function is called by:
 23156 ;;		_Command
 23157 ;; This function uses a non-reentrant model
 23158 ;;
 23159                           
 23160                           	psect	text51
 23161  015424                     __ptext51:
 23162                           	opt stack 0
 23163  015424                     _READ_RTC_TIME:
 23164                           	opt stack 20
 23165                           
 23166                           ;RTC.c: 141: unsigned char Error =0;
 23167                           
 23168                           ;incstack = 0
 23169  015424  0E00               	movlw	0
 23170  015426  0101               	movlb	1	; () banked
 23171  015428  6F8D               	movwf	READ_RTC_TIME@Error& (0+255),b
 23172                           
 23173                           ; BSR set to: 1
 23174                           ;RTC.c: 142: unsigned char temp[7];
 23175                           ;RTC.c: 144: Error = I2C_Read_Sequential( 0b1101000, 0x00, temp, 7 );
 23176  01542A  0E00               	movlw	0
 23177  01542C  0101               	movlb	1	; () banked
 23178  01542E  6F81               	movwf	I2C_Read_Sequential@Register& (0+255),b
 23179  015430  0101               	movlb	1	; () banked
 23180  015432  0E01               	movlw	high READ_RTC_TIME@temp
 23181  015434  0101               	movlb	1	; () banked
 23182  015436  6F83               	movwf	(I2C_Read_Sequential@rdptr+1)& (0+255),b
 23183  015438  0101               	movlb	1	; () banked
 23184  01543A  0E86               	movlw	low READ_RTC_TIME@temp
 23185  01543C  0101               	movlb	1	; () banked
 23186  01543E  6F82               	movwf	I2C_Read_Sequential@rdptr& (0+255),b
 23187  015440  0E07               	movlw	7
 23188  015442  0101               	movlb	1	; () banked
 23189  015444  6F84               	movwf	I2C_Read_Sequential@length& (0+255),b
 23190  015446  0E68               	movlw	104
 23191  015448  ECF6  F0AA         	call	_I2C_Read_Sequential
 23192  01544C  0101               	movlb	1	; () banked
 23193  01544E  6F8D               	movwf	READ_RTC_TIME@Error& (0+255),b
 23194                           
 23195                           ; BSR set to: 1
 23196                           ;RTC.c: 146: if(Error == 0 )
 23197  015450  0101               	movlb	1	; () banked
 23198  015452  678D               	tstfsz	READ_RTC_TIME@Error& (0+255),b
 23199  015454  D055               	goto	l10952
 23200                           
 23201                           ; BSR set to: 1
 23202                           ;RTC.c: 147: {
 23203                           ;RTC.c: 148: NowTime.Seconds = (temp[0] & 0x0F) + (((temp[0] & 0x70)>> 4) * 10);
 23204  015456  0101               	movlb	1	; () banked
 23205  015458  3986               	swapf	READ_RTC_TIME@temp& (0+255),w,b
 23206  01545A  0B0F               	andlw	15
 23207  01545C  0B07               	andlw	7
 23208  01545E  0D0A               	mullw	10
 23209  015460  0101               	movlb	1	; () banked
 23210  015462  5186               	movf	READ_RTC_TIME@temp& (0+255),w,b
 23211  015464  0B0F               	andlw	15
 23212  015466  24F3               	addwf	prodl,w,c
 23213  015468  0101               	movlb	1	; () banked
 23214  01546A  6F00               	movwf	_NowTime& (0+255),b
 23215                           
 23216                           ;RTC.c: 149: NowTime.Minutes = (temp[1] & 0x0F) + (((temp[1] & 0x70) >> 4) * 10);
 23217  01546C  0101               	movlb	1	; () banked
 23218  01546E  3987               	swapf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 23219  015470  0B0F               	andlw	15
 23220  015472  0B07               	andlw	7
 23221  015474  0D0A               	mullw	10
 23222  015476  0101               	movlb	1	; () banked
 23223  015478  5187               	movf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 23224  01547A  0B0F               	andlw	15
 23225  01547C  24F3               	addwf	prodl,w,c
 23226  01547E  0101               	movlb	1	; () banked
 23227  015480  6F01               	movwf	(_NowTime+1)& (0+255),b
 23228                           
 23229                           ;RTC.c: 150: NowTime.Hours = (temp[2] & 0x0F) + (((temp[2] & 0x10) >> 4) * 10);
 23230  015482  0101               	movlb	1	; () banked
 23231  015484  3988               	swapf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 23232  015486  0B0F               	andlw	15
 23233  015488  0B01               	andlw	1
 23234  01548A  0D0A               	mullw	10
 23235  01548C  0101               	movlb	1	; () banked
 23236  01548E  5188               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 23237  015490  0B0F               	andlw	15
 23238  015492  24F3               	addwf	prodl,w,c
 23239  015494  0101               	movlb	1	; () banked
 23240  015496  6F02               	movwf	(_NowTime+2)& (0+255),b
 23241                           
 23242                           ; BSR set to: 1
 23243                           ;RTC.c: 151: NowTime.HoursAM_PM = temp[2] & 0x20;
 23244  015498  0101               	movlb	1	; () banked
 23245  01549A  5188               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 23246  01549C  0B20               	andlw	32
 23247  01549E  0101               	movlb	1	; () banked
 23248  0154A0  6F04               	movwf	(_NowTime+4)& (0+255),b
 23249                           
 23250                           ; BSR set to: 1
 23251                           ;RTC.c: 152: NowTime.HoursMilitary = NowTime.Hours + 12 * NowTime.HoursAM_PM;
 23252  0154A2  0101               	movlb	1	; () banked
 23253  0154A4  5104               	movf	(_NowTime+4)& (0+255),w,b
 23254  0154A6  0D0C               	mullw	12
 23255  0154A8  50F3               	movf	prodl,w,c
 23256  0154AA  0101               	movlb	1	; () banked
 23257  0154AC  2502               	addwf	(_NowTime+2)& (0+255),w,b
 23258  0154AE  0101               	movlb	1	; () banked
 23259  0154B0  6F03               	movwf	(_NowTime+3)& (0+255),b
 23260                           
 23261                           ;RTC.c: 153: NowTime.Day = temp[3] & 0x07;
 23262  0154B2  0101               	movlb	1	; () banked
 23263  0154B4  5189               	movf	(READ_RTC_TIME@temp+3)& (0+255),w,b
 23264  0154B6  0B07               	andlw	7
 23265  0154B8  0101               	movlb	1	; () banked
 23266  0154BA  6F05               	movwf	(_NowTime+5)& (0+255),b
 23267                           
 23268                           ; BSR set to: 1
 23269                           ;RTC.c: 154: NowTime.Date = (temp[4] & 0x0F) + (((temp[4] & 0x30)>> 4) * 10);
 23270  0154BC  0101               	movlb	1	; () banked
 23271  0154BE  398A               	swapf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 23272  0154C0  0B0F               	andlw	15
 23273  0154C2  0B03               	andlw	3
 23274  0154C4  0D0A               	mullw	10
 23275  0154C6  0101               	movlb	1	; () banked
 23276  0154C8  518A               	movf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 23277  0154CA  0B0F               	andlw	15
 23278  0154CC  24F3               	addwf	prodl,w,c
 23279  0154CE  0101               	movlb	1	; () banked
 23280  0154D0  6F06               	movwf	(_NowTime+6)& (0+255),b
 23281                           
 23282                           ; BSR set to: 1
 23283                           ;RTC.c: 155: NowTime.Month = (temp[5] & 0x0F) + (((temp[5] & 0x10) >> 4) * 10);
 23284  0154D2  0101               	movlb	1	; () banked
 23285  0154D4  398B               	swapf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 23286  0154D6  0B0F               	andlw	15
 23287  0154D8  0B01               	andlw	1
 23288  0154DA  0D0A               	mullw	10
 23289  0154DC  0101               	movlb	1	; () banked
 23290  0154DE  518B               	movf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 23291  0154E0  0B0F               	andlw	15
 23292  0154E2  24F3               	addwf	prodl,w,c
 23293  0154E4  0101               	movlb	1	; () banked
 23294  0154E6  6F07               	movwf	(_NowTime+7)& (0+255),b
 23295                           
 23296                           ; BSR set to: 1
 23297                           ;RTC.c: 156: NowTime.Year = (temp[6] & 0x0F) + (((temp[6] & 0xF0) >> 4) * 10);
 23298  0154E8  0101               	movlb	1	; () banked
 23299  0154EA  398C               	swapf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 23300  0154EC  0B0F               	andlw	15
 23301  0154EE  0B0F               	andlw	15
 23302  0154F0  0D0A               	mullw	10
 23303  0154F2  0101               	movlb	1	; () banked
 23304  0154F4  518C               	movf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 23305  0154F6  0B0F               	andlw	15
 23306  0154F8  24F3               	addwf	prodl,w,c
 23307  0154FA  0101               	movlb	1	; () banked
 23308  0154FC  6F08               	movwf	(_NowTime+8)& (0+255),b
 23309                           
 23310                           ;RTC.c: 157: }
 23311  0154FE  D002               	goto	l10954
 23312  015500                     l10952:
 23313                           
 23314                           ; BSR set to: 1
 23315                           ;RTC.c: 158: else
 23316                           ;RTC.c: 159: {
 23317                           ;RTC.c: 160: ResetI2C();
 23318  015500  ECBF  F0B7         	call	_ResetI2C	;wreg free
 23319  015504                     l10954:
 23320                           
 23321                           ;RTC.c: 161: }
 23322                           ;RTC.c: 162: return Error;
 23323  015504  0101               	movlb	1	; () banked
 23324  015506  518D               	movf	READ_RTC_TIME@Error& (0+255),w,b
 23325  015508  0012               	return	
 23326  01550A                     __end_of_READ_RTC_TIME:
 23327                           	opt stack 0
 23328                           tblptru	equ	0xFF8
 23329                           tblptrh	equ	0xFF7
 23330                           tblptrl	equ	0xFF6
 23331                           tablat	equ	0xFF5
 23332                           prodh	equ	0xFF4
 23333                           prodl	equ	0xFF3
 23334                           intcon	equ	0xFF2
 23335                           postinc0	equ	0xFEE
 23336                           wreg	equ	0xFE8
 23337                           indf1	equ	0xFE7
 23338                           postinc1	equ	0xFE6
 23339                           postdec1	equ	0xFE5
 23340                           fsr1h	equ	0xFE2
 23341                           fsr1l	equ	0xFE1
 23342                           indf2	equ	0xFDF
 23343                           postinc2	equ	0xFDE
 23344                           postdec2	equ	0xFDD
 23345                           fsr2h	equ	0xFDA
 23346                           fsr2l	equ	0xFD9
 23347                           status	equ	0xFD8
 23348                           
 23349 ;; *************** function _ResetI2C *****************
 23350 ;; Defined at:
 23351 ;;		line 93 in file "I2C.c"
 23352 ;; Parameters:    Size  Location     Type
 23353 ;;		None
 23354 ;; Auto vars:     Size  Location     Type
 23355 ;;		None
 23356 ;; Return value:  Size  Location     Type
 23357 ;;		None               void
 23358 ;; Registers used:
 23359 ;;		wreg, status,2, status,0, cstack
 23360 ;; Tracked objects:
 23361 ;;		On entry : 0/0
 23362 ;;		On exit  : 0/0
 23363 ;;		Unchanged: 0/0
 23364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23369 ;;Total ram usage:        0 bytes
 23370 ;; Hardware stack levels used:    1
 23371 ;; Hardware stack levels required when called:    8
 23372 ;; This function calls:
 23373 ;;		_Init_I2C_Master
 23374 ;;		_delayUS
 23375 ;; This function is called by:
 23376 ;;		_RTC_Clock_Enable
 23377 ;;		_RTC_TIME_NONMilitary
 23378 ;;		_READ_RTC_TIME
 23379 ;;		_RTC_Clock_Disable
 23380 ;;		_READ_RTC_SECONDS
 23381 ;; This function uses a non-reentrant model
 23382 ;;
 23383                           
 23384                           	psect	text52
 23385  016F7E                     __ptext52:
 23386                           	opt stack 0
 23387  016F7E                     _ResetI2C:
 23388                           	opt stack 20
 23389                           
 23390                           ;I2C.c: 95: SSPCON1 &= 0xDF;
 23391                           
 23392                           ; BSR set to: 1
 23393                           ;incstack = 0
 23394  016F7E  9AC6               	bcf	4038,5,c	;volatile
 23395                           
 23396                           ;I2C.c: 96: TRISCbits.TRISC3 = 0;
 23397  016F80  9694               	bcf	3988,3,c	;volatile
 23398                           
 23399                           ;I2C.c: 97: LATC &= ~0b00001000;
 23400  016F82  968B               	bcf	3979,3,c	;volatile
 23401                           
 23402                           ;I2C.c: 98: delayUS(200);
 23403  016F84  0EC8               	movlw	200
 23404  016F86  0101               	movlb	1	; () banked
 23405  016F88  6F7C               	movwf	delayUS@US& (0+255),b
 23406  016F8A  0E00               	movlw	0
 23407  016F8C  0101               	movlb	1	; () banked
 23408  016F8E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 23409  016F90  0E00               	movlw	0
 23410  016F92  0101               	movlb	1	; () banked
 23411  016F94  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 23412  016F96  0E00               	movlw	0
 23413  016F98  0101               	movlb	1	; () banked
 23414  016F9A  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 23415  016F9C  EC0D  F0B3         	call	_delayUS	;wreg free
 23416                           
 23417                           ;I2C.c: 99: TRISCbits.TRISC3 = 1;
 23418  016FA0  8694               	bsf	3988,3,c	;volatile
 23419                           
 23420                           ;I2C.c: 100: Init_I2C_Master();
 23421  016FA2  ECA8  F0B5         	call	_Init_I2C_Master	;wreg free
 23422  016FA6  0012               	return	
 23423  016FA8                     __end_of_ResetI2C:
 23424                           	opt stack 0
 23425                           tblptru	equ	0xFF8
 23426                           tblptrh	equ	0xFF7
 23427                           tblptrl	equ	0xFF6
 23428                           tablat	equ	0xFF5
 23429                           prodh	equ	0xFF4
 23430                           prodl	equ	0xFF3
 23431                           intcon	equ	0xFF2
 23432                           postinc0	equ	0xFEE
 23433                           wreg	equ	0xFE8
 23434                           indf1	equ	0xFE7
 23435                           postinc1	equ	0xFE6
 23436                           postdec1	equ	0xFE5
 23437                           fsr1h	equ	0xFE2
 23438                           fsr1l	equ	0xFE1
 23439                           indf2	equ	0xFDF
 23440                           postinc2	equ	0xFDE
 23441                           postdec2	equ	0xFDD
 23442                           fsr2h	equ	0xFDA
 23443                           fsr2l	equ	0xFD9
 23444                           status	equ	0xFD8
 23445                           
 23446 ;; *************** function _Init_I2C_Master *****************
 23447 ;; Defined at:
 23448 ;;		line 55 in file "I2C.c"
 23449 ;; Parameters:    Size  Location     Type
 23450 ;;		None
 23451 ;; Auto vars:     Size  Location     Type
 23452 ;;  baud            2   16[BANK1 ] unsigned int 
 23453 ;; Return value:  Size  Location     Type
 23454 ;;		None               void
 23455 ;; Registers used:
 23456 ;;		wreg, status,2, status,0, cstack
 23457 ;; Tracked objects:
 23458 ;;		On entry : 0/0
 23459 ;;		On exit  : 0/0
 23460 ;;		Unchanged: 0/0
 23461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23463 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23465 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23466 ;;Total ram usage:        2 bytes
 23467 ;; Hardware stack levels used:    1
 23468 ;; Hardware stack levels required when called:    7
 23469 ;; This function calls:
 23470 ;;		_OpenI2C
 23471 ;; This function is called by:
 23472 ;;		_main
 23473 ;;		_ResetI2C
 23474 ;; This function uses a non-reentrant model
 23475 ;;
 23476                           
 23477                           	psect	text53
 23478  016B50                     __ptext53:
 23479                           	opt stack 0
 23480  016B50                     _Init_I2C_Master:
 23481                           	opt stack 20
 23482                           
 23483                           ;I2C.c: 57: unsigned int baud = 0;
 23484                           
 23485                           ;incstack = 0
 23486  016B50  0E00               	movlw	0
 23487  016B52  0101               	movlb	1	; () banked
 23488  016B54  6F7F               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 23489  016B56  0E00               	movlw	0
 23490  016B58  0101               	movlb	1	; () banked
 23491  016B5A  6F7E               	movwf	Init_I2C_Master@baud& (0+255),b
 23492                           
 23493                           ;I2C.c: 60: baud = (unsigned char)(40960000L/4 /((4* (long)5 * 1000L) - 1));
 23494  016B5C  0E00               	movlw	0
 23495  016B5E  0101               	movlb	1	; () banked
 23496  016B60  6F7F               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 23497  016B62  0E00               	movlw	0
 23498  016B64  0101               	movlb	1	; () banked
 23499  016B66  6F7E               	movwf	Init_I2C_Master@baud& (0+255),b
 23500                           
 23501                           ; BSR set to: 1
 23502                           ;I2C.c: 61: if(baud > 127 || baud == 0)
 23503  016B68  0E80               	movlw	128
 23504  016B6A  0101               	movlb	1	; () banked
 23505  016B6C  5D7E               	subwf	Init_I2C_Master@baud& (0+255),w,b
 23506  016B6E  0E00               	movlw	0
 23507  016B70  0101               	movlb	1	; () banked
 23508  016B72  597F               	subwfb	(Init_I2C_Master@baud+1)& (0+255),w,b
 23509  016B74  B0D8               	btfsc	status,0,c
 23510  016B76  D005               	goto	l9366
 23511                           
 23512                           ; BSR set to: 1
 23513  016B78  0101               	movlb	1	; () banked
 23514  016B7A  517F               	movf	(Init_I2C_Master@baud+1)& (0+255),w,b
 23515  016B7C  117E               	iorwf	Init_I2C_Master@baud& (0+255),w,b
 23516  016B7E  A4D8               	btfss	status,2,c
 23517  016B80  D006               	goto	l9368
 23518  016B82                     l9366:
 23519                           
 23520                           ; BSR set to: 1
 23521                           ;I2C.c: 62: {
 23522                           ;I2C.c: 63: baud = 127;
 23523  016B82  0E00               	movlw	0
 23524  016B84  0101               	movlb	1	; () banked
 23525  016B86  6F7F               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 23526  016B88  0E7F               	movlw	127
 23527  016B8A  0101               	movlb	1	; () banked
 23528  016B8C  6F7E               	movwf	Init_I2C_Master@baud& (0+255),b
 23529  016B8E                     l9368:
 23530                           
 23531                           ; BSR set to: 1
 23532                           ;I2C.c: 64: }
 23533                           ;I2C.c: 65: SSPADD = baud;
 23534  016B8E  C17E  FFC8         	movff	Init_I2C_Master@baud,4040	;volatile
 23535                           
 23536                           ; BSR set to: 1
 23537                           ;I2C.c: 66: OpenI2C(0b00001000, 0b10000000);
 23538  016B92  0E80               	movlw	128
 23539  016B94  0101               	movlb	1	; () banked
 23540  016B96  6F7C               	movwf	OpenI2C@slew& (0+255),b
 23541  016B98  0E08               	movlw	8
 23542  016B9A  ECFB  F0B7         	call	_OpenI2C
 23543  016B9E  0012               	return	
 23544  016BA0                     __end_of_Init_I2C_Master:
 23545                           	opt stack 0
 23546                           tblptru	equ	0xFF8
 23547                           tblptrh	equ	0xFF7
 23548                           tblptrl	equ	0xFF6
 23549                           tablat	equ	0xFF5
 23550                           prodh	equ	0xFF4
 23551                           prodl	equ	0xFF3
 23552                           intcon	equ	0xFF2
 23553                           postinc0	equ	0xFEE
 23554                           wreg	equ	0xFE8
 23555                           indf1	equ	0xFE7
 23556                           postinc1	equ	0xFE6
 23557                           postdec1	equ	0xFE5
 23558                           fsr1h	equ	0xFE2
 23559                           fsr1l	equ	0xFE1
 23560                           indf2	equ	0xFDF
 23561                           postinc2	equ	0xFDE
 23562                           postdec2	equ	0xFDD
 23563                           fsr2h	equ	0xFDA
 23564                           fsr2l	equ	0xFD9
 23565                           status	equ	0xFD8
 23566                           
 23567 ;; *************** function _OpenI2C *****************
 23568 ;; Defined at:
 23569 ;;		line 74 in file "I2C.c"
 23570 ;; Parameters:    Size  Location     Type
 23571 ;;  sync_mode       1    wreg     unsigned char 
 23572 ;;  slew            1   14[BANK1 ] unsigned char 
 23573 ;; Auto vars:     Size  Location     Type
 23574 ;;  sync_mode       1   15[BANK1 ] unsigned char 
 23575 ;; Return value:  Size  Location     Type
 23576 ;;		None               void
 23577 ;; Registers used:
 23578 ;;		wreg, status,2, status,0
 23579 ;; Tracked objects:
 23580 ;;		On entry : 0/0
 23581 ;;		On exit  : 0/0
 23582 ;;		Unchanged: 0/0
 23583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23584 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23585 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23587 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23588 ;;Total ram usage:        2 bytes
 23589 ;; Hardware stack levels used:    1
 23590 ;; Hardware stack levels required when called:    6
 23591 ;; This function calls:
 23592 ;;		Nothing
 23593 ;; This function is called by:
 23594 ;;		_Init_I2C_Master
 23595 ;; This function uses a non-reentrant model
 23596 ;;
 23597                           
 23598                           	psect	text54
 23599  016FF6                     __ptext54:
 23600                           	opt stack 0
 23601  016FF6                     _OpenI2C:
 23602                           	opt stack 20
 23603                           
 23604                           ;incstack = 0
 23605                           ;OpenI2C@sync_mode stored from wreg
 23606  016FF6  0101               	movlb	1	; () banked
 23607  016FF8  6F7D               	movwf	OpenI2C@sync_mode& (0+255),b
 23608                           
 23609                           ; BSR set to: 1
 23610                           ;I2C.c: 76: SSPSTAT &= 0x3F;
 23611  016FFA  0E3F               	movlw	63
 23612  016FFC  16C7               	andwf	4039,f,c	;volatile
 23613                           
 23614                           ; BSR set to: 1
 23615                           ;I2C.c: 77: SSPCON1 = 0x00;
 23616  016FFE  0E00               	movlw	0
 23617  017000  6EC6               	movwf	4038,c	;volatile
 23618                           
 23619                           ; BSR set to: 1
 23620                           ;I2C.c: 78: SSPCON2 = 0x00;
 23621  017002  0E00               	movlw	0
 23622  017004  6EC5               	movwf	4037,c	;volatile
 23623                           
 23624                           ;I2C.c: 79: SSPCON1 |= sync_mode;
 23625  017006  0101               	movlb	1	; () banked
 23626  017008  517D               	movf	OpenI2C@sync_mode& (0+255),w,b
 23627  01700A  12C6               	iorwf	4038,f,c	;volatile
 23628                           
 23629                           ;I2C.c: 80: SSPSTAT |= slew;
 23630  01700C  0101               	movlb	1	; () banked
 23631  01700E  517C               	movf	OpenI2C@slew& (0+255),w,b
 23632  017010  12C7               	iorwf	4039,f,c	;volatile
 23633                           
 23634                           ; BSR set to: 1
 23635                           ;I2C.c: 82: TRISCbits.TRISC3 = 1;
 23636  017012  8694               	bsf	3988,3,c	;volatile
 23637                           
 23638                           ; BSR set to: 1
 23639                           ;I2C.c: 83: TRISCbits.TRISC4 = 1;
 23640  017014  8894               	bsf	3988,4,c	;volatile
 23641                           
 23642                           ; BSR set to: 1
 23643                           ;I2C.c: 84: SSPCON1 |= 0b00100000;
 23644  017016  8AC6               	bsf	4038,5,c	;volatile
 23645                           
 23646                           ; BSR set to: 1
 23647  017018  0012               	return	
 23648  01701A                     __end_of_OpenI2C:
 23649                           	opt stack 0
 23650                           tblptru	equ	0xFF8
 23651                           tblptrh	equ	0xFF7
 23652                           tblptrl	equ	0xFF6
 23653                           tablat	equ	0xFF5
 23654                           prodh	equ	0xFF4
 23655                           prodl	equ	0xFF3
 23656                           intcon	equ	0xFF2
 23657                           postinc0	equ	0xFEE
 23658                           wreg	equ	0xFE8
 23659                           indf1	equ	0xFE7
 23660                           postinc1	equ	0xFE6
 23661                           postdec1	equ	0xFE5
 23662                           fsr1h	equ	0xFE2
 23663                           fsr1l	equ	0xFE1
 23664                           indf2	equ	0xFDF
 23665                           postinc2	equ	0xFDE
 23666                           postdec2	equ	0xFDD
 23667                           fsr2h	equ	0xFDA
 23668                           fsr2l	equ	0xFD9
 23669                           status	equ	0xFD8
 23670                           
 23671 ;; *************** function _I2C_Read_Sequential *****************
 23672 ;; Defined at:
 23673 ;;		line 307 in file "I2C.c"
 23674 ;; Parameters:    Size  Location     Type
 23675 ;;  I2Caddress      1    wreg     unsigned char 
 23676 ;;  Register        1   19[BANK1 ] unsigned char 
 23677 ;;  rdptr           2   20[BANK1 ] PTR unsigned char 
 23678 ;;		 -> READ_RTC_TIME@temp(7), 
 23679 ;;  length          1   22[BANK1 ] unsigned char 
 23680 ;; Auto vars:     Size  Location     Type
 23681 ;;  I2Caddress      1   23[BANK1 ] unsigned char 
 23682 ;; Return value:  Size  Location     Type
 23683 ;;                  1    wreg      unsigned char 
 23684 ;; Registers used:
 23685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23686 ;; Tracked objects:
 23687 ;;		On entry : 0/0
 23688 ;;		On exit  : 0/0
 23689 ;;		Unchanged: 0/0
 23690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23691 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23692 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23694 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 23695 ;;Total ram usage:        5 bytes
 23696 ;; Hardware stack levels used:    1
 23697 ;; Hardware stack levels required when called:    8
 23698 ;; This function calls:
 23699 ;;		_IdleI2C
 23700 ;;		_Multiple_I2C_Read
 23701 ;;		_WriteI2C
 23702 ;; This function is called by:
 23703 ;;		_READ_RTC_TIME
 23704 ;; This function uses a non-reentrant model
 23705 ;;
 23706                           
 23707                           	psect	text55
 23708  0155EC                     __ptext55:
 23709                           	opt stack 0
 23710  0155EC                     _I2C_Read_Sequential:
 23711                           	opt stack 20
 23712                           
 23713                           ; BSR set to: 1
 23714                           ;incstack = 0
 23715                           ;I2C_Read_Sequential@I2Caddress stored from wreg
 23716  0155EC  0101               	movlb	1	; () banked
 23717  0155EE  6F85               	movwf	I2C_Read_Sequential@I2Caddress& (0+255),b
 23718                           
 23719                           ; BSR set to: 1
 23720                           ;I2C.c: 309: IdleI2C();
 23721  0155F0  EC39  F0B8         	call	_IdleI2C	;wreg free
 23722                           
 23723                           ;I2C.c: 310: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 23724  0155F4  80C5               	bsf	4037,0,c	;volatile
 23725  0155F6                     l1284:
 23726  0155F6  B0C5               	btfsc	4037,0,c	;volatile
 23727  0155F8  D7FE               	goto	l1284
 23728  0155FA                     l1287:
 23729  0155FA  B0C5               	btfsc	4037,0,c	;volatile
 23730  0155FC  D7FE               	goto	l1287
 23731                           
 23732                           ;I2C.c: 312: if ( PIR2bits.BCLIF )
 23733  0155FE  A6A1               	btfss	4001,3,c	;volatile
 23734  015600  D002               	goto	l10212
 23735                           
 23736                           ;I2C.c: 313: {
 23737                           ;I2C.c: 314: return ( -1 );
 23738  015602  0EFF               	movlw	255
 23739  015604  0012               	return	
 23740  015606                     l10212:
 23741                           
 23742                           ;I2C.c: 316: else
 23743                           ;I2C.c: 317: {
 23744                           ;I2C.c: 318: if ( WriteI2C( (I2Caddress << 1) & 0xFE ) )
 23745  015606  0101               	movlb	1	; () banked
 23746  015608  5185               	movf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 23747  01560A  0101               	movlb	1	; () banked
 23748  01560C  2585               	addwf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 23749  01560E  0BFE               	andlw	254
 23750  015610  EC0C  F0B1         	call	_WriteI2C
 23751  015614  0900               	iorlw	0
 23752  015616  B4D8               	btfsc	status,2,c
 23753  015618  D005               	goto	l1293
 23754                           
 23755                           ;I2C.c: 319: {
 23756                           ;I2C.c: 320: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23757  01561A  84C5               	bsf	4037,2,c	;volatile
 23758  01561C                     l1294:
 23759  01561C  B4C5               	btfsc	4037,2,c	;volatile
 23760  01561E  D7FE               	goto	l1294
 23761                           
 23762                           ;I2C.c: 321: return ( -3 );
 23763  015620  0EFD               	movlw	253
 23764  015622  0012               	return	
 23765  015624                     l1293:
 23766                           
 23767                           ;I2C.c: 322: }
 23768                           ;I2C.c: 325: if ( !SSPCON2bits.ACKSTAT )
 23769  015624  BCC5               	btfsc	4037,6,c	;volatile
 23770  015626  D04A               	goto	l1297
 23771                           
 23772                           ;I2C.c: 326: {
 23773                           ;I2C.c: 327: if ( WriteI2C( Register ) )
 23774  015628  0101               	movlb	1	; () banked
 23775  01562A  5181               	movf	I2C_Read_Sequential@Register& (0+255),w,b
 23776  01562C  EC0C  F0B1         	call	_WriteI2C
 23777  015630  0900               	iorlw	0
 23778  015632  B4D8               	btfsc	status,2,c
 23779  015634  D005               	goto	l1298
 23780                           
 23781                           ;I2C.c: 328: {
 23782                           ;I2C.c: 329: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23783  015636  84C5               	bsf	4037,2,c	;volatile
 23784  015638                     l1299:
 23785  015638  B4C5               	btfsc	4037,2,c	;volatile
 23786  01563A  D7FE               	goto	l1299
 23787                           
 23788                           ;I2C.c: 330: return ( -3 );
 23789  01563C  0EFD               	movlw	253
 23790  01563E  0012               	return	
 23791  015640                     l1298:
 23792                           
 23793                           ;I2C.c: 331: }
 23794                           ;I2C.c: 334: if ( !SSPCON2bits.ACKSTAT )
 23795  015640  BCC5               	btfsc	4037,6,c	;volatile
 23796  015642  D037               	goto	l1302
 23797                           
 23798                           ;I2C.c: 335: {
 23799                           ;I2C.c: 336: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
 23800  015644  82C5               	bsf	4037,1,c	;volatile
 23801  015646                     l1303:
 23802  015646  B2C5               	btfsc	4037,1,c	;volatile
 23803  015648  D7FE               	goto	l1303
 23804  01564A                     l1306:
 23805  01564A  B2C5               	btfsc	4037,1,c	;volatile
 23806  01564C  D7FE               	goto	l1306
 23807                           
 23808                           ;I2C.c: 338: if ( WriteI2C( (I2Caddress << 1) +1 ) )
 23809  01564E  80D8               	bsf	status,0,c
 23810  015650  0101               	movlb	1	; () banked
 23811  015652  3585               	rlcf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 23812  015654  EC0C  F0B1         	call	_WriteI2C
 23813  015658  0900               	iorlw	0
 23814  01565A  B4D8               	btfsc	status,2,c
 23815  01565C  D005               	goto	l1309
 23816                           
 23817                           ;I2C.c: 339: {
 23818                           ;I2C.c: 340: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23819  01565E  84C5               	bsf	4037,2,c	;volatile
 23820  015660                     l1310:
 23821  015660  B4C5               	btfsc	4037,2,c	;volatile
 23822  015662  D7FE               	goto	l1310
 23823                           
 23824                           ;I2C.c: 341: return ( -3 );
 23825  015664  0EFD               	movlw	253
 23826  015666  0012               	return	
 23827  015668                     l1309:
 23828                           
 23829                           ;I2C.c: 342: }
 23830                           ;I2C.c: 345: if ( !SSPCON2bits.ACKSTAT )
 23831  015668  BCC5               	btfsc	4037,6,c	;volatile
 23832  01566A  D01E               	goto	l1313
 23833                           
 23834                           ;I2C.c: 346: {
 23835                           ;I2C.c: 347: if ( Multiple_I2C_Read( rdptr, length ) )
 23836  01566C  0101               	movlb	1	; () banked
 23837  01566E  C183  F17E         	movff	I2C_Read_Sequential@rdptr+1,Multiple_I2C_Read@rdptr+1
 23838  015672  0101               	movlb	1	; () banked
 23839  015674  C182  F17D         	movff	I2C_Read_Sequential@rdptr,Multiple_I2C_Read@rdptr
 23840  015678  C184  F17F         	movff	I2C_Read_Sequential@length,Multiple_I2C_Read@length
 23841  01567C  ECB8  F0B3         	call	_Multiple_I2C_Read	;wreg free
 23842  015680  0900               	iorlw	0
 23843  015682  B4D8               	btfsc	status,2,c
 23844  015684  D002               	goto	l1314
 23845                           
 23846                           ;I2C.c: 348: {
 23847                           ;I2C.c: 349: return ( -1 );
 23848  015686  0EFF               	movlw	255
 23849  015688  0012               	return	
 23850  01568A                     l1314:
 23851                           
 23852                           ;I2C.c: 350: }
 23853                           ;I2C.c: 352: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
 23854  01568A  8AC5               	bsf	4037,5,c	;volatile
 23855  01568C  88C5               	bsf	4037,4,c	;volatile
 23856  01568E                     l1315:
 23857  01568E  B8C5               	btfsc	4037,4,c	;volatile
 23858  015690  D7FE               	goto	l1315
 23859  015692                     l1318:
 23860  015692  B8C5               	btfsc	4037,4,c	;volatile
 23861  015694  D7FE               	goto	l1318
 23862                           
 23863                           ;I2C.c: 354: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23864  015696  84C5               	bsf	4037,2,c	;volatile
 23865  015698                     l1321:
 23866  015698  B4C5               	btfsc	4037,2,c	;volatile
 23867  01569A  D7FE               	goto	l1321
 23868  01569C                     l1324:
 23869  01569C  B4C5               	btfsc	4037,2,c	;volatile
 23870  01569E  D7FE               	goto	l1324
 23871                           
 23872                           ;I2C.c: 356: if ( PIR2bits.BCLIF )
 23873  0156A0  A6A1               	btfss	4001,3,c	;volatile
 23874  0156A2  D011               	goto	l10260
 23875                           
 23876                           ;I2C.c: 357: {
 23877                           ;I2C.c: 358: return ( -1 );
 23878  0156A4  0EFF               	movlw	255
 23879  0156A6  0012               	return	
 23880  0156A8                     l1313:
 23881                           
 23882                           ;I2C.c: 361: else
 23883                           ;I2C.c: 362: {
 23884                           ;I2C.c: 363: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23885  0156A8  84C5               	bsf	4037,2,c	;volatile
 23886  0156AA                     l1329:
 23887  0156AA  B4C5               	btfsc	4037,2,c	;volatile
 23888  0156AC  D7FE               	goto	l1329
 23889                           
 23890                           ;I2C.c: 364: return ( -2 );
 23891  0156AE  0EFE               	movlw	254
 23892  0156B0  0012               	return	
 23893  0156B2                     l1302:
 23894                           
 23895                           ;I2C.c: 367: else
 23896                           ;I2C.c: 368: {
 23897                           ;I2C.c: 369: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23898  0156B2  84C5               	bsf	4037,2,c	;volatile
 23899  0156B4                     l1333:
 23900  0156B4  B4C5               	btfsc	4037,2,c	;volatile
 23901  0156B6  D7FE               	goto	l1333
 23902                           
 23903                           ;I2C.c: 370: return ( -2 );
 23904  0156B8  0EFE               	movlw	254
 23905  0156BA  0012               	return	
 23906  0156BC                     l1297:
 23907                           
 23908                           ;I2C.c: 373: else
 23909                           ;I2C.c: 374: {
 23910                           ;I2C.c: 375: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 23911  0156BC  84C5               	bsf	4037,2,c	;volatile
 23912  0156BE                     l1337:
 23913  0156BE  B4C5               	btfsc	4037,2,c	;volatile
 23914  0156C0  D7FE               	goto	l1337
 23915                           
 23916                           ;I2C.c: 376: return ( -2 );
 23917  0156C2  0EFE               	movlw	254
 23918  0156C4  0012               	return	
 23919  0156C6                     l10260:
 23920                           
 23921                           ;I2C.c: 377: }
 23922                           ;I2C.c: 378: }
 23923                           ;I2C.c: 379: return ( 0 );
 23924  0156C6  0E00               	movlw	0
 23925  0156C8  0012               	return	
 23926  0156CA                     __end_of_I2C_Read_Sequential:
 23927                           	opt stack 0
 23928                           tblptru	equ	0xFF8
 23929                           tblptrh	equ	0xFF7
 23930                           tblptrl	equ	0xFF6
 23931                           tablat	equ	0xFF5
 23932                           prodh	equ	0xFF4
 23933                           prodl	equ	0xFF3
 23934                           intcon	equ	0xFF2
 23935                           postinc0	equ	0xFEE
 23936                           wreg	equ	0xFE8
 23937                           indf1	equ	0xFE7
 23938                           postinc1	equ	0xFE6
 23939                           postdec1	equ	0xFE5
 23940                           fsr1h	equ	0xFE2
 23941                           fsr1l	equ	0xFE1
 23942                           indf2	equ	0xFDF
 23943                           postinc2	equ	0xFDE
 23944                           postdec2	equ	0xFDD
 23945                           fsr2h	equ	0xFDA
 23946                           fsr2l	equ	0xFD9
 23947                           status	equ	0xFD8
 23948                           
 23949 ;; *************** function _WriteI2C *****************
 23950 ;; Defined at:
 23951 ;;		line 119 in file "I2C.c"
 23952 ;; Parameters:    Size  Location     Type
 23953 ;;  data_out        1    wreg     unsigned char 
 23954 ;; Auto vars:     Size  Location     Type
 23955 ;;  data_out        1   16[BANK1 ] unsigned char 
 23956 ;; Return value:  Size  Location     Type
 23957 ;;                  1    wreg      char 
 23958 ;; Registers used:
 23959 ;;		wreg, status,2, status,0, cstack
 23960 ;; Tracked objects:
 23961 ;;		On entry : 0/0
 23962 ;;		On exit  : 0/0
 23963 ;;		Unchanged: 0/0
 23964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23966 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23967 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23968 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23969 ;;Total ram usage:        2 bytes
 23970 ;; Hardware stack levels used:    1
 23971 ;; Hardware stack levels required when called:    7
 23972 ;; This function calls:
 23973 ;;		_IdleI2C
 23974 ;; This function is called by:
 23975 ;;		_I2C_Write_At_Address
 23976 ;;		_I2C_Read_At_Address
 23977 ;;		_I2C_Read_Sequential
 23978 ;; This function uses a non-reentrant model
 23979 ;;
 23980                           
 23981                           	psect	text56
 23982  016218                     __ptext56:
 23983                           	opt stack 0
 23984  016218                     _WriteI2C:
 23985                           	opt stack 20
 23986                           
 23987                           ;incstack = 0
 23988                           ;WriteI2C@data_out stored from wreg
 23989  016218  0101               	movlb	1	; () banked
 23990  01621A  6F7E               	movwf	WriteI2C@data_out& (0+255),b
 23991                           
 23992                           ; BSR set to: 1
 23993                           ;I2C.c: 121: SSPBUF = data_out;
 23994  01621C  C17E  FFC9         	movff	WriteI2C@data_out,4041	;volatile
 23995                           
 23996                           ; BSR set to: 1
 23997                           ;I2C.c: 122: if ( SSPCON1bits.WCOL )
 23998  016220  AEC6               	btfss	4038,7,c	;volatile
 23999  016222  D002               	goto	l9466
 24000                           
 24001                           ; BSR set to: 1
 24002                           ;I2C.c: 123: return ( -1 );
 24003  016224  0EFF               	movlw	255
 24004  016226  0012               	return	
 24005  016228                     l9466:
 24006                           
 24007                           ; BSR set to: 1
 24008                           ;I2C.c: 124: else
 24009                           ;I2C.c: 125: {
 24010                           ;I2C.c: 126: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
 24011  016228  CFC6 F17D          	movff	4038,??_WriteI2C	;volatile
 24012  01622C  0E0F               	movlw	15
 24013  01622E  0101               	movlb	1	; () banked
 24014  016230  177D               	andwf	??_WriteI2C& (0+255),f,b
 24015  016232  0101               	movlb	1	; () banked
 24016  016234  517D               	movf	??_WriteI2C& (0+255),w,b
 24017  016236  0A08               	xorlw	8
 24018  016238  B4D8               	btfsc	status,2,c
 24019  01623A  D014               	goto	l9484
 24020                           
 24021                           ; BSR set to: 1
 24022  01623C  CFC6 F17D          	movff	4038,??_WriteI2C	;volatile
 24023  016240  0E0F               	movlw	15
 24024  016242  0101               	movlb	1	; () banked
 24025  016244  177D               	andwf	??_WriteI2C& (0+255),f,b
 24026  016246  0101               	movlb	1	; () banked
 24027  016248  517D               	movf	??_WriteI2C& (0+255),w,b
 24028  01624A  0A0B               	xorlw	11
 24029  01624C  B4D8               	btfsc	status,2,c
 24030  01624E  D00A               	goto	l9484
 24031                           
 24032                           ; BSR set to: 1
 24033                           ;I2C.c: 127: {
 24034                           ;I2C.c: 128: SSPCON1bits.CKP = 1;
 24035  016250  88C6               	bsf	4038,4,c	;volatile
 24036  016252                     l1166:
 24037                           
 24038                           ; BSR set to: 1
 24039  016252  A69E               	btfss	3998,3,c	;volatile
 24040  016254  D7FE               	goto	l1166
 24041                           
 24042                           ; BSR set to: 1
 24043                           ;I2C.c: 131: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
 24044  016256  A4C7               	btfss	4039,2,c	;volatile
 24045                           
 24046                           ; BSR set to: 1
 24047  016258  B0C7               	btfsc	4039,0,c	;volatile
 24048  01625A  D002               	goto	l9480
 24049                           
 24050                           ; BSR set to: 1
 24051                           ;I2C.c: 132: {
 24052                           ;I2C.c: 133: return ( -2 );
 24053  01625C  0EFE               	movlw	254
 24054  01625E  0012               	return	
 24055  016260                     l9480:
 24056                           
 24057                           ; BSR set to: 1
 24058                           ;I2C.c: 135: else
 24059                           ;I2C.c: 136: {
 24060                           ;I2C.c: 137: return ( 0 );
 24061  016260  0E00               	movlw	0
 24062  016262  0012               	return	
 24063  016264                     l9484:
 24064                           
 24065                           ; BSR set to: 1
 24066                           ;I2C.c: 140: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 24067  016264  CFC6 F17D          	movff	4038,??_WriteI2C	;volatile
 24068  016268  0E0F               	movlw	15
 24069  01626A  0101               	movlb	1	; () banked
 24070  01626C  177D               	andwf	??_WriteI2C& (0+255),f,b
 24071  01626E  0101               	movlb	1	; () banked
 24072  016270  517D               	movf	??_WriteI2C& (0+255),w,b
 24073  016272  0A08               	xorlw	8
 24074  016274  B4D8               	btfsc	status,2,c
 24075  016276  D00A               	goto	l1175
 24076                           
 24077                           ; BSR set to: 1
 24078  016278  CFC6 F17D          	movff	4038,??_WriteI2C	;volatile
 24079  01627C  0E0F               	movlw	15
 24080  01627E  0101               	movlb	1	; () banked
 24081  016280  177D               	andwf	??_WriteI2C& (0+255),f,b
 24082  016282  0101               	movlb	1	; () banked
 24083  016284  517D               	movf	??_WriteI2C& (0+255),w,b
 24084  016286  0A0B               	xorlw	11
 24085  016288  A4D8               	btfss	status,2,c
 24086  01628A  D00A               	goto	l9502
 24087  01628C                     l1175:
 24088                           
 24089                           ; BSR set to: 1
 24090  01628C  B0C7               	btfsc	4039,0,c	;volatile
 24091  01628E  D7FE               	goto	l1175
 24092                           
 24093                           ; BSR set to: 1
 24094                           ;I2C.c: 143: IdleI2C();
 24095                           
 24096                           ; BSR set to: 1
 24097  016290  EC39  F0B8         	call	_IdleI2C	;wreg free
 24098                           
 24099                           ;I2C.c: 144: if ( SSPCON2bits.ACKSTAT )
 24100  016294  ACC5               	btfss	4037,6,c	;volatile
 24101  016296  D002               	goto	l9498
 24102                           
 24103                           ;I2C.c: 145: return ( -2 );
 24104  016298  0EFE               	movlw	254
 24105  01629A  0012               	return	
 24106  01629C                     l9498:
 24107                           
 24108                           ;I2C.c: 146: else return ( 0 );
 24109  01629C  0E00               	movlw	0
 24110  01629E  0012               	return	
 24111  0162A0                     l9502:
 24112                           
 24113                           ;I2C.c: 148: else
 24114                           ;I2C.c: 149: {
 24115                           ;I2C.c: 150: return (-4);
 24116  0162A0  0EFC               	movlw	252
 24117  0162A2  0012               	return	
 24118  0162A4                     __end_of_WriteI2C:
 24119                           	opt stack 0
 24120                           tblptru	equ	0xFF8
 24121                           tblptrh	equ	0xFF7
 24122                           tblptrl	equ	0xFF6
 24123                           tablat	equ	0xFF5
 24124                           prodh	equ	0xFF4
 24125                           prodl	equ	0xFF3
 24126                           intcon	equ	0xFF2
 24127                           postinc0	equ	0xFEE
 24128                           wreg	equ	0xFE8
 24129                           indf1	equ	0xFE7
 24130                           postinc1	equ	0xFE6
 24131                           postdec1	equ	0xFE5
 24132                           fsr1h	equ	0xFE2
 24133                           fsr1l	equ	0xFE1
 24134                           indf2	equ	0xFDF
 24135                           postinc2	equ	0xFDE
 24136                           postdec2	equ	0xFDD
 24137                           fsr2h	equ	0xFDA
 24138                           fsr2l	equ	0xFD9
 24139                           status	equ	0xFD8
 24140                           
 24141 ;; *************** function _IdleI2C *****************
 24142 ;; Defined at:
 24143 ;;		line 108 in file "I2C.c"
 24144 ;; Parameters:    Size  Location     Type
 24145 ;;		None
 24146 ;; Auto vars:     Size  Location     Type
 24147 ;;		None
 24148 ;; Return value:  Size  Location     Type
 24149 ;;		None               void
 24150 ;; Registers used:
 24151 ;;		wreg, status,2, status,0
 24152 ;; Tracked objects:
 24153 ;;		On entry : 0/0
 24154 ;;		On exit  : 0/0
 24155 ;;		Unchanged: 0/0
 24156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24159 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24160 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24161 ;;Total ram usage:        1 bytes
 24162 ;; Hardware stack levels used:    1
 24163 ;; Hardware stack levels required when called:    6
 24164 ;; This function calls:
 24165 ;;		Nothing
 24166 ;; This function is called by:
 24167 ;;		_WriteI2C
 24168 ;;		_I2C_Write_At_Address
 24169 ;;		_I2C_Read_At_Address
 24170 ;;		_I2C_Read_Sequential
 24171 ;; This function uses a non-reentrant model
 24172 ;;
 24173                           
 24174                           	psect	text57
 24175  017072                     __ptext57:
 24176                           	opt stack 0
 24177  017072                     _IdleI2C:
 24178                           	opt stack 20
 24179  017072                     l9340:
 24180  017072  CFC5 F17C          	movff	4037,??_IdleI2C	;volatile
 24181  017076  0E1F               	movlw	31
 24182  017078  0101               	movlb	1	; () banked
 24183  01707A  177C               	andwf	??_IdleI2C& (0+255),f,b
 24184  01707C  B4D8               	btfsc	status,2,c
 24185                           
 24186                           ; BSR set to: 1
 24187  01707E  B4C7               	btfsc	4039,2,c	;volatile
 24188  017080  D7F8               	goto	l9340
 24189                           
 24190                           ; BSR set to: 1
 24191                           
 24192                           ; BSR set to: 1
 24193  017082  0012               	return	
 24194  017084                     __end_of_IdleI2C:
 24195                           	opt stack 0
 24196                           tblptru	equ	0xFF8
 24197                           tblptrh	equ	0xFF7
 24198                           tblptrl	equ	0xFF6
 24199                           tablat	equ	0xFF5
 24200                           prodh	equ	0xFF4
 24201                           prodl	equ	0xFF3
 24202                           intcon	equ	0xFF2
 24203                           postinc0	equ	0xFEE
 24204                           wreg	equ	0xFE8
 24205                           indf1	equ	0xFE7
 24206                           postinc1	equ	0xFE6
 24207                           postdec1	equ	0xFE5
 24208                           fsr1h	equ	0xFE2
 24209                           fsr1l	equ	0xFE1
 24210                           indf2	equ	0xFDF
 24211                           postinc2	equ	0xFDE
 24212                           postdec2	equ	0xFDD
 24213                           fsr2h	equ	0xFDA
 24214                           fsr2l	equ	0xFD9
 24215                           status	equ	0xFD8
 24216                           
 24217 ;; *************** function _Multiple_I2C_Read *****************
 24218 ;; Defined at:
 24219 ;;		line 387 in file "I2C.c"
 24220 ;; Parameters:    Size  Location     Type
 24221 ;;  rdptr           2   15[BANK1 ] PTR unsigned char 
 24222 ;;		 -> READ_RTC_TIME@temp(7), 
 24223 ;;  length          1   17[BANK1 ] unsigned char 
 24224 ;; Auto vars:     Size  Location     Type
 24225 ;;		None
 24226 ;; Return value:  Size  Location     Type
 24227 ;;                  1    wreg      unsigned char 
 24228 ;; Registers used:
 24229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24230 ;; Tracked objects:
 24231 ;;		On entry : 0/0
 24232 ;;		On exit  : 0/0
 24233 ;;		Unchanged: 0/0
 24234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24235 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 24236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24237 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24238 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24239 ;;Total ram usage:        4 bytes
 24240 ;; Hardware stack levels used:    1
 24241 ;; Hardware stack levels required when called:    7
 24242 ;; This function calls:
 24243 ;;		_readI2C
 24244 ;; This function is called by:
 24245 ;;		_I2C_Read_Sequential
 24246 ;; This function uses a non-reentrant model
 24247 ;;
 24248                           
 24249                           	psect	text58
 24250  016770                     __ptext58:
 24251                           	opt stack 0
 24252  016770                     _Multiple_I2C_Read:
 24253                           	opt stack 20
 24254                           
 24255                           ;I2C.c: 389: while ( length-- )
 24256                           
 24257                           ; BSR set to: 1
 24258                           ;incstack = 0
 24259  016770  D02C               	goto	l9524
 24260  016772                     l9508:
 24261                           
 24262                           ;I2C.c: 390: {
 24263                           ;I2C.c: 391: *rdptr++ = readI2C();
 24264  016772  EC4C  F0B7         	call	_readI2C	;wreg free
 24265  016776  C17D  FFD9         	movff	Multiple_I2C_Read@rdptr,fsr2l
 24266  01677A  C17E  FFDA         	movff	Multiple_I2C_Read@rdptr+1,fsr2h
 24267  01677E  6EDF               	movwf	indf2,c
 24268  016780  0101               	movlb	1	; () banked
 24269  016782  4B7D               	infsnz	Multiple_I2C_Read@rdptr& (0+255),f,b
 24270  016784  2B7E               	incf	(Multiple_I2C_Read@rdptr+1)& (0+255),f,b
 24271  016786                     l1344:
 24272  016786  B6C5               	btfsc	4037,3,c	;volatile
 24273  016788  D7FE               	goto	l1344
 24274                           
 24275                           ;I2C.c: 394: if ( PIR2bits.BCLIF )
 24276  01678A  A6A1               	btfss	4001,3,c	;volatile
 24277  01678C  D002               	goto	l9516
 24278                           
 24279                           ;I2C.c: 395: {
 24280                           ;I2C.c: 396: return ( -1 );
 24281  01678E  0EFF               	movlw	255
 24282  016790  0012               	return	
 24283  016792                     l9516:
 24284                           
 24285                           ;I2C.c: 397: }
 24286                           ;I2C.c: 399: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 24287  016792  CFC6 F180          	movff	4038,??_Multiple_I2C_Read	;volatile
 24288  016796  0E0F               	movlw	15
 24289  016798  0101               	movlb	1	; () banked
 24290  01679A  1780               	andwf	??_Multiple_I2C_Read& (0+255),f,b
 24291  01679C  0101               	movlb	1	; () banked
 24292  01679E  5180               	movf	??_Multiple_I2C_Read& (0+255),w,b
 24293  0167A0  0A08               	xorlw	8
 24294  0167A2  B4D8               	btfsc	status,2,c
 24295  0167A4  D00A               	goto	l9520
 24296                           
 24297                           ; BSR set to: 1
 24298  0167A6  CFC6 F180          	movff	4038,??_Multiple_I2C_Read	;volatile
 24299  0167AA  0E0F               	movlw	15
 24300  0167AC  0101               	movlb	1	; () banked
 24301  0167AE  1780               	andwf	??_Multiple_I2C_Read& (0+255),f,b
 24302  0167B0  0101               	movlb	1	; () banked
 24303  0167B2  5180               	movf	??_Multiple_I2C_Read& (0+255),w,b
 24304  0167B4  0A0B               	xorlw	11
 24305  0167B6  A4D8               	btfss	status,2,c
 24306  0167B8  D008               	goto	l9524
 24307  0167BA                     l9520:
 24308                           
 24309                           ; BSR set to: 1
 24310                           ;I2C.c: 400: {
 24311                           ;I2C.c: 401: if ( length )
 24312  0167BA  0101               	movlb	1	; () banked
 24313  0167BC  517F               	movf	Multiple_I2C_Read@length& (0+255),w,b
 24314  0167BE  B4D8               	btfsc	status,2,c
 24315  0167C0  D004               	goto	l9524
 24316                           
 24317                           ; BSR set to: 1
 24318                           ;I2C.c: 402: {
 24319                           ;I2C.c: 403: SSPCON2bits.ACKDT = 0;
 24320  0167C2  9AC5               	bcf	4037,5,c	;volatile
 24321                           
 24322                           ;I2C.c: 404: SSPCON2bits.ACKEN = 1;
 24323  0167C4  88C5               	bsf	4037,4,c	;volatile
 24324  0167C6                     l1353:
 24325  0167C6  B8C5               	btfsc	4037,4,c	;volatile
 24326  0167C8  D7FE               	goto	l1353
 24327  0167CA                     l9524:
 24328  0167CA  0101               	movlb	1	; () banked
 24329  0167CC  077F               	decf	Multiple_I2C_Read@length& (0+255),f,b
 24330  0167CE  0101               	movlb	1	; () banked
 24331  0167D0  297F               	incf	Multiple_I2C_Read@length& (0+255),w,b
 24332  0167D2  A4D8               	btfss	status,2,c
 24333  0167D4  D7CE               	goto	l9508
 24334                           
 24335                           ; BSR set to: 1
 24336                           ;I2C.c: 406: }
 24337                           ;I2C.c: 407: }
 24338                           ;I2C.c: 409: }
 24339                           ;I2C.c: 410: return ( 0 );
 24340                           
 24341                           ; BSR set to: 1
 24342  0167D6  0E00               	movlw	0
 24343  0167D8  0012               	return	
 24344  0167DA                     __end_of_Multiple_I2C_Read:
 24345                           	opt stack 0
 24346                           tblptru	equ	0xFF8
 24347                           tblptrh	equ	0xFF7
 24348                           tblptrl	equ	0xFF6
 24349                           tablat	equ	0xFF5
 24350                           prodh	equ	0xFF4
 24351                           prodl	equ	0xFF3
 24352                           intcon	equ	0xFF2
 24353                           postinc0	equ	0xFEE
 24354                           wreg	equ	0xFE8
 24355                           indf1	equ	0xFE7
 24356                           postinc1	equ	0xFE6
 24357                           postdec1	equ	0xFE5
 24358                           fsr1h	equ	0xFE2
 24359                           fsr1l	equ	0xFE1
 24360                           indf2	equ	0xFDF
 24361                           postinc2	equ	0xFDE
 24362                           postdec2	equ	0xFDD
 24363                           fsr2h	equ	0xFDA
 24364                           fsr2l	equ	0xFD9
 24365                           status	equ	0xFD8
 24366                           
 24367 ;; *************** function _readI2C *****************
 24368 ;; Defined at:
 24369 ;;		line 418 in file "I2C.c"
 24370 ;; Parameters:    Size  Location     Type
 24371 ;;		None
 24372 ;; Auto vars:     Size  Location     Type
 24373 ;;		None
 24374 ;; Return value:  Size  Location     Type
 24375 ;;                  1    wreg      unsigned char 
 24376 ;; Registers used:
 24377 ;;		wreg, status,2, status,0
 24378 ;; Tracked objects:
 24379 ;;		On entry : 0/0
 24380 ;;		On exit  : 0/0
 24381 ;;		Unchanged: 0/0
 24382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24385 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24386 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24387 ;;Total ram usage:        1 bytes
 24388 ;; Hardware stack levels used:    1
 24389 ;; Hardware stack levels required when called:    6
 24390 ;; This function calls:
 24391 ;;		Nothing
 24392 ;; This function is called by:
 24393 ;;		_Multiple_I2C_Read
 24394 ;; This function uses a non-reentrant model
 24395 ;;
 24396                           
 24397                           	psect	text59
 24398  016E98                     __ptext59:
 24399                           	opt stack 0
 24400  016E98                     _readI2C:
 24401                           	opt stack 20
 24402                           
 24403                           ;I2C.c: 420: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 24404                           
 24405                           ;incstack = 0
 24406  016E98  CFC6 F17C          	movff	4038,??_readI2C	;volatile
 24407  016E9C  0E0F               	movlw	15
 24408  016E9E  0101               	movlb	1	; () banked
 24409  016EA0  177C               	andwf	??_readI2C& (0+255),f,b
 24410  016EA2  0101               	movlb	1	; () banked
 24411  016EA4  517C               	movf	??_readI2C& (0+255),w,b
 24412  016EA6  0A08               	xorlw	8
 24413  016EA8  B4D8               	btfsc	status,2,c
 24414  016EAA  D009               	goto	l1361
 24415                           
 24416                           ; BSR set to: 1
 24417  016EAC  CFC6 F17C          	movff	4038,??_readI2C	;volatile
 24418  016EB0  0E0F               	movlw	15
 24419  016EB2  0101               	movlb	1	; () banked
 24420  016EB4  177C               	andwf	??_readI2C& (0+255),f,b
 24421  016EB6  0101               	movlb	1	; () banked
 24422  016EB8  517C               	movf	??_readI2C& (0+255),w,b
 24423  016EBA  0A0B               	xorlw	11
 24424  016EBC  B4D8               	btfsc	status,2,c
 24425  016EBE                     l1361:
 24426                           
 24427                           ; BSR set to: 1
 24428                           ;I2C.c: 421: SSPCON2bits.RCEN = 1;
 24429  016EBE  86C5               	bsf	4037,3,c	;volatile
 24430  016EC0                     l1362:
 24431  016EC0  A0C7               	btfss	4039,0,c	;volatile
 24432  016EC2  D7FE               	goto	l1362
 24433                           
 24434                           ;I2C.c: 423: return ( SSPBUF );
 24435  016EC4  50C9               	movf	4041,w,c	;volatile
 24436  016EC6  0012               	return	
 24437  016EC8                     __end_of_readI2C:
 24438                           	opt stack 0
 24439                           tblptru	equ	0xFF8
 24440                           tblptrh	equ	0xFF7
 24441                           tblptrl	equ	0xFF6
 24442                           tablat	equ	0xFF5
 24443                           prodh	equ	0xFF4
 24444                           prodl	equ	0xFF3
 24445                           intcon	equ	0xFF2
 24446                           postinc0	equ	0xFEE
 24447                           wreg	equ	0xFE8
 24448                           indf1	equ	0xFE7
 24449                           postinc1	equ	0xFE6
 24450                           postdec1	equ	0xFE5
 24451                           fsr1h	equ	0xFE2
 24452                           fsr1l	equ	0xFE1
 24453                           indf2	equ	0xFDF
 24454                           postinc2	equ	0xFDE
 24455                           postdec2	equ	0xFDD
 24456                           fsr2h	equ	0xFDA
 24457                           fsr2l	equ	0xFD9
 24458                           status	equ	0xFD8
 24459                           
 24460 ;; *************** function _Parse_Time *****************
 24461 ;; Defined at:
 24462 ;;		line 279 in file "RTC.c"
 24463 ;; Parameters:    Size  Location     Type
 24464 ;;  This            2   14[BANK1 ] PTR unsigned char 
 24465 ;;		 -> Rxdata(100), 
 24466 ;; Auto vars:     Size  Location     Type
 24467 ;;  TempTime        9   18[BANK1 ] struct TIME
 24468 ;;  temp            1   17[BANK1 ] unsigned char 
 24469 ;; Return value:  Size  Location     Type
 24470 ;;                  1    wreg      unsigned char 
 24471 ;; Registers used:
 24472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24473 ;; Tracked objects:
 24474 ;;		On entry : 0/0
 24475 ;;		On exit  : 0/0
 24476 ;;		Unchanged: 0/0
 24477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24478 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24479 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 24480 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24481 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 24482 ;;Total ram usage:       13 bytes
 24483 ;; Hardware stack levels used:    1
 24484 ;; Hardware stack levels required when called:    6
 24485 ;; This function calls:
 24486 ;;		Nothing
 24487 ;; This function is called by:
 24488 ;;		_Command
 24489 ;; This function uses a non-reentrant model
 24490 ;;
 24491                           
 24492                           	psect	text60
 24493  0134D6                     __ptext60:
 24494                           	opt stack 0
 24495  0134D6                     _Parse_Time:
 24496                           	opt stack 23
 24497                           
 24498                           ;RTC.c: 281: TIME TempTime;
 24499                           ;RTC.c: 282: unsigned char temp = 0;
 24500                           
 24501                           ;incstack = 0
 24502  0134D6  0E00               	movlw	0
 24503  0134D8  0101               	movlb	1	; () banked
 24504  0134DA  6F7F               	movwf	Parse_Time@temp& (0+255),b
 24505                           
 24506                           ; BSR set to: 1
 24507                           ;RTC.c: 284: if(*This != 0 && *This == ' ')
 24508  0134DC  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24509  0134E0  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24510  0134E4  50DF               	movf	indf2,w,c
 24511  0134E6  B4D8               	btfsc	status,2,c
 24512  0134E8  D00A               	goto	l10976
 24513                           
 24514                           ; BSR set to: 1
 24515  0134EA  0E20               	movlw	32
 24516  0134EC  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24517  0134F0  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24518  0134F4  62DF               	cpfseq	indf2,c
 24519  0134F6  D003               	goto	l10976
 24520                           
 24521                           ; BSR set to: 1
 24522                           ;RTC.c: 285: {
 24523                           ;RTC.c: 286: This++;
 24524  0134F8  0101               	movlb	1	; () banked
 24525  0134FA  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24526  0134FC  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24527  0134FE                     l10976:
 24528                           
 24529                           ; BSR set to: 1
 24530                           ;RTC.c: 287: }
 24531                           ;RTC.c: 290: if (*This >= 48 && *This <= 57)
 24532  0134FE  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24533  013502  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24534  013506  0E2F               	movlw	47
 24535  013508  64DF               	cpfsgt	indf2,c
 24536  01350A  D018               	goto	l10984
 24537                           
 24538                           ; BSR set to: 1
 24539  01350C  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24540  013510  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24541  013514  50DF               	movf	indf2,w,c
 24542  013516  0101               	movlb	1	; () banked
 24543  013518  6F7E               	movwf	??_Parse_Time& (0+255),b
 24544  01351A  0E3A               	movlw	58
 24545  01351C  0101               	movlb	1	; () banked
 24546  01351E  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 24547  013520  B0D8               	btfsc	status,0,c
 24548  013522  D00C               	goto	l10984
 24549                           
 24550                           ; BSR set to: 1
 24551                           ;RTC.c: 291: {
 24552                           ;RTC.c: 292: temp = *This - 48;
 24553  013524  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24554  013528  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24555  01352C  50DF               	movf	indf2,w,c
 24556  01352E  0FD0               	addlw	208
 24557  013530  0101               	movlb	1	; () banked
 24558  013532  6F7F               	movwf	Parse_Time@temp& (0+255),b
 24559                           
 24560                           ; BSR set to: 1
 24561                           ;RTC.c: 293: This++;
 24562  013534  0101               	movlb	1	; () banked
 24563  013536  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24564  013538  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24565                           
 24566                           ;RTC.c: 294: }
 24567  01353A  D002               	goto	l10988
 24568  01353C                     l10984:
 24569                           
 24570                           ; BSR set to: 1
 24571                           ;RTC.c: 295: else
 24572                           ;RTC.c: 296: {
 24573                           ;RTC.c: 297: return 0;
 24574  01353C  0E00               	movlw	0
 24575  01353E  0012               	return	
 24576  013540                     l10988:
 24577                           
 24578                           ; BSR set to: 1
 24579                           ;RTC.c: 298: }
 24580                           ;RTC.c: 300: if(*This >= 48 && *This <= 57)
 24581  013540  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24582  013544  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24583  013548  0E2F               	movlw	47
 24584  01354A  64DF               	cpfsgt	indf2,c
 24585  01354C  D01E               	goto	l10998
 24586                           
 24587                           ; BSR set to: 1
 24588  01354E  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24589  013552  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24590  013556  50DF               	movf	indf2,w,c
 24591  013558  0101               	movlb	1	; () banked
 24592  01355A  6F7E               	movwf	??_Parse_Time& (0+255),b
 24593  01355C  0E3A               	movlw	58
 24594  01355E  0101               	movlb	1	; () banked
 24595  013560  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 24596  013562  B0D8               	btfsc	status,0,c
 24597  013564  D012               	goto	l10998
 24598                           
 24599                           ; BSR set to: 1
 24600                           ;RTC.c: 301: {
 24601                           ;RTC.c: 302: temp *= 10;
 24602  013566  0E0A               	movlw	10
 24603  013568  0101               	movlb	1	; () banked
 24604  01356A  037F               	mulwf	Parse_Time@temp& (0+255),b
 24605  01356C  50F3               	movf	prodl,w,c
 24606  01356E  0101               	movlb	1	; () banked
 24607  013570  6F7F               	movwf	Parse_Time@temp& (0+255),b
 24608                           
 24609                           ; BSR set to: 1
 24610                           ;RTC.c: 303: temp += *This - 48;
 24611  013572  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24612  013576  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24613  01357A  50DF               	movf	indf2,w,c
 24614  01357C  0FD0               	addlw	208
 24615  01357E  0101               	movlb	1	; () banked
 24616  013580  277F               	addwf	Parse_Time@temp& (0+255),f,b
 24617                           
 24618                           ; BSR set to: 1
 24619                           ;RTC.c: 304: This++;
 24620  013582  0101               	movlb	1	; () banked
 24621  013584  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24622  013586  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24623                           
 24624                           ;RTC.c: 305: }
 24625  013588  D00A               	goto	l1059
 24626  01358A                     l10998:
 24627                           
 24628                           ; BSR set to: 1
 24629                           ;RTC.c: 306: else if(*This == '/')
 24630  01358A  0E2F               	movlw	47
 24631  01358C  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24632  013590  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24633  013594  62DF               	cpfseq	indf2,c
 24634  013596  D001               	goto	l11002
 24635  013598  D002               	goto	l1059
 24636  01359A                     l11002:
 24637                           
 24638                           ; BSR set to: 1
 24639                           ;RTC.c: 310: else
 24640                           ;RTC.c: 311: {
 24641                           ;RTC.c: 312: return 0;
 24642  01359A  0E00               	movlw	0
 24643  01359C  0012               	return	
 24644  01359E                     l1059:
 24645                           
 24646                           ; BSR set to: 1
 24647                           ;RTC.c: 313: }
 24648                           ;RTC.c: 314: TempTime.Month = temp;
 24649  01359E  C17F  F187         	movff	Parse_Time@temp,Parse_Time@TempTime+7
 24650                           
 24651                           ; BSR set to: 1
 24652                           ;RTC.c: 316: if(*This == '/')
 24653  0135A2  0E2F               	movlw	47
 24654  0135A4  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24655  0135A8  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24656  0135AC  62DF               	cpfseq	indf2,c
 24657  0135AE  D004               	goto	l11010
 24658                           
 24659                           ; BSR set to: 1
 24660                           ;RTC.c: 317: {
 24661                           ;RTC.c: 318: This++;
 24662  0135B0  0101               	movlb	1	; () banked
 24663  0135B2  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24664  0135B4  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24665                           
 24666                           ;RTC.c: 319: }
 24667  0135B6  D002               	goto	l11014
 24668  0135B8                     l11010:
 24669                           
 24670                           ; BSR set to: 1
 24671                           ;RTC.c: 320: else
 24672                           ;RTC.c: 321: {
 24673                           ;RTC.c: 322: return 0;
 24674  0135B8  0E00               	movlw	0
 24675  0135BA  0012               	return	
 24676  0135BC                     l11014:
 24677                           
 24678                           ; BSR set to: 1
 24679                           ;RTC.c: 323: }
 24680                           ;RTC.c: 326: if (*This >= 48 && *This <= 57)
 24681  0135BC  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24682  0135C0  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24683  0135C4  0E2F               	movlw	47
 24684  0135C6  64DF               	cpfsgt	indf2,c
 24685  0135C8  D018               	goto	l11022
 24686                           
 24687                           ; BSR set to: 1
 24688  0135CA  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24689  0135CE  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24690  0135D2  50DF               	movf	indf2,w,c
 24691  0135D4  0101               	movlb	1	; () banked
 24692  0135D6  6F7E               	movwf	??_Parse_Time& (0+255),b
 24693  0135D8  0E3A               	movlw	58
 24694  0135DA  0101               	movlb	1	; () banked
 24695  0135DC  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 24696  0135DE  B0D8               	btfsc	status,0,c
 24697  0135E0  D00C               	goto	l11022
 24698                           
 24699                           ; BSR set to: 1
 24700                           ;RTC.c: 327: {
 24701                           ;RTC.c: 328: temp = *This - 48;
 24702  0135E2  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24703  0135E6  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24704  0135EA  50DF               	movf	indf2,w,c
 24705  0135EC  0FD0               	addlw	208
 24706  0135EE  0101               	movlb	1	; () banked
 24707  0135F0  6F7F               	movwf	Parse_Time@temp& (0+255),b
 24708                           
 24709                           ; BSR set to: 1
 24710                           ;RTC.c: 329: This++;
 24711  0135F2  0101               	movlb	1	; () banked
 24712  0135F4  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24713  0135F6  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24714                           
 24715                           ;RTC.c: 330: }
 24716  0135F8  D002               	goto	l11026
 24717  0135FA                     l11022:
 24718                           
 24719                           ; BSR set to: 1
 24720                           ;RTC.c: 331: else
 24721                           ;RTC.c: 332: {
 24722                           ;RTC.c: 333: return 0;
 24723  0135FA  0E00               	movlw	0
 24724  0135FC  0012               	return	
 24725  0135FE                     l11026:
 24726                           
 24727                           ; BSR set to: 1
 24728                           ;RTC.c: 334: }
 24729                           ;RTC.c: 336: if(*This >= 48 && *This <= 57)
 24730  0135FE  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24731  013602  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24732  013606  0E2F               	movlw	47
 24733  013608  64DF               	cpfsgt	indf2,c
 24734  01360A  D01E               	goto	l11036
 24735                           
 24736                           ; BSR set to: 1
 24737  01360C  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24738  013610  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24739  013614  50DF               	movf	indf2,w,c
 24740  013616  0101               	movlb	1	; () banked
 24741  013618  6F7E               	movwf	??_Parse_Time& (0+255),b
 24742  01361A  0E3A               	movlw	58
 24743  01361C  0101               	movlb	1	; () banked
 24744  01361E  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 24745  013620  B0D8               	btfsc	status,0,c
 24746  013622  D012               	goto	l11036
 24747                           
 24748                           ; BSR set to: 1
 24749                           ;RTC.c: 337: {
 24750                           ;RTC.c: 338: temp *= 10;
 24751  013624  0E0A               	movlw	10
 24752  013626  0101               	movlb	1	; () banked
 24753  013628  037F               	mulwf	Parse_Time@temp& (0+255),b
 24754  01362A  50F3               	movf	prodl,w,c
 24755  01362C  0101               	movlb	1	; () banked
 24756  01362E  6F7F               	movwf	Parse_Time@temp& (0+255),b
 24757                           
 24758                           ; BSR set to: 1
 24759                           ;RTC.c: 339: temp += *This - 48;
 24760  013630  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24761  013634  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24762  013638  50DF               	movf	indf2,w,c
 24763  01363A  0FD0               	addlw	208
 24764  01363C  0101               	movlb	1	; () banked
 24765  01363E  277F               	addwf	Parse_Time@temp& (0+255),f,b
 24766                           
 24767                           ; BSR set to: 1
 24768                           ;RTC.c: 340: This++;
 24769  013640  0101               	movlb	1	; () banked
 24770  013642  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24771  013644  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24772                           
 24773                           ;RTC.c: 341: }
 24774  013646  D00A               	goto	l1067
 24775  013648                     l11036:
 24776                           
 24777                           ; BSR set to: 1
 24778                           ;RTC.c: 342: else if(*This == '/')
 24779  013648  0E2F               	movlw	47
 24780  01364A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24781  01364E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24782  013652  62DF               	cpfseq	indf2,c
 24783  013654  D001               	goto	l11040
 24784  013656  D002               	goto	l1067
 24785  013658                     l11040:
 24786                           
 24787                           ; BSR set to: 1
 24788                           ;RTC.c: 346: else
 24789                           ;RTC.c: 347: {
 24790                           ;RTC.c: 348: return 0;
 24791  013658  0E00               	movlw	0
 24792  01365A  0012               	return	
 24793  01365C                     l1067:
 24794                           
 24795                           ; BSR set to: 1
 24796                           ;RTC.c: 349: }
 24797                           ;RTC.c: 350: TempTime.Date = temp;
 24798  01365C  C17F  F186         	movff	Parse_Time@temp,Parse_Time@TempTime+6
 24799                           
 24800                           ; BSR set to: 1
 24801                           ;RTC.c: 352: if(*This == '/')
 24802  013660  0E2F               	movlw	47
 24803  013662  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24804  013666  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24805  01366A  62DF               	cpfseq	indf2,c
 24806  01366C  D004               	goto	l11048
 24807                           
 24808                           ; BSR set to: 1
 24809                           ;RTC.c: 353: {
 24810                           ;RTC.c: 354: This++;
 24811  01366E  0101               	movlb	1	; () banked
 24812  013670  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24813  013672  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24814                           
 24815                           ;RTC.c: 355: }
 24816  013674  D002               	goto	l11052
 24817  013676                     l11048:
 24818                           
 24819                           ; BSR set to: 1
 24820                           ;RTC.c: 356: else
 24821                           ;RTC.c: 357: {
 24822                           ;RTC.c: 358: return 0;
 24823  013676  0E00               	movlw	0
 24824  013678  0012               	return	
 24825  01367A                     l11052:
 24826                           
 24827                           ; BSR set to: 1
 24828                           ;RTC.c: 359: }
 24829                           ;RTC.c: 362: if (*This >= 48 && *This <= 57)
 24830  01367A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24831  01367E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24832  013682  0E2F               	movlw	47
 24833  013684  64DF               	cpfsgt	indf2,c
 24834  013686  D018               	goto	l11060
 24835                           
 24836                           ; BSR set to: 1
 24837  013688  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24838  01368C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24839  013690  50DF               	movf	indf2,w,c
 24840  013692  0101               	movlb	1	; () banked
 24841  013694  6F7E               	movwf	??_Parse_Time& (0+255),b
 24842  013696  0E3A               	movlw	58
 24843  013698  0101               	movlb	1	; () banked
 24844  01369A  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 24845  01369C  B0D8               	btfsc	status,0,c
 24846  01369E  D00C               	goto	l11060
 24847                           
 24848                           ; BSR set to: 1
 24849                           ;RTC.c: 363: {
 24850                           ;RTC.c: 364: temp = *This - 48;
 24851  0136A0  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24852  0136A4  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24853  0136A8  50DF               	movf	indf2,w,c
 24854  0136AA  0FD0               	addlw	208
 24855  0136AC  0101               	movlb	1	; () banked
 24856  0136AE  6F7F               	movwf	Parse_Time@temp& (0+255),b
 24857                           
 24858                           ; BSR set to: 1
 24859                           ;RTC.c: 365: This++;
 24860  0136B0  0101               	movlb	1	; () banked
 24861  0136B2  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24862  0136B4  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24863                           
 24864                           ;RTC.c: 366: }
 24865  0136B6  D002               	goto	l11064
 24866  0136B8                     l11060:
 24867                           
 24868                           ; BSR set to: 1
 24869                           ;RTC.c: 367: else
 24870                           ;RTC.c: 368: {
 24871                           ;RTC.c: 369: return 0;
 24872  0136B8  0E00               	movlw	0
 24873  0136BA  0012               	return	
 24874  0136BC                     l11064:
 24875                           
 24876                           ; BSR set to: 1
 24877                           ;RTC.c: 370: }
 24878                           ;RTC.c: 371: if (*This >= 48 && *This <= 57)
 24879  0136BC  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24880  0136C0  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24881  0136C4  0E2F               	movlw	47
 24882  0136C6  64DF               	cpfsgt	indf2,c
 24883  0136C8  D01E               	goto	l11074
 24884                           
 24885                           ; BSR set to: 1
 24886  0136CA  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24887  0136CE  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24888  0136D2  50DF               	movf	indf2,w,c
 24889  0136D4  0101               	movlb	1	; () banked
 24890  0136D6  6F7E               	movwf	??_Parse_Time& (0+255),b
 24891  0136D8  0E3A               	movlw	58
 24892  0136DA  0101               	movlb	1	; () banked
 24893  0136DC  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 24894  0136DE  B0D8               	btfsc	status,0,c
 24895  0136E0  D012               	goto	l11074
 24896                           
 24897                           ; BSR set to: 1
 24898                           ;RTC.c: 372: {
 24899                           ;RTC.c: 373: temp *= 10;
 24900  0136E2  0E0A               	movlw	10
 24901  0136E4  0101               	movlb	1	; () banked
 24902  0136E6  037F               	mulwf	Parse_Time@temp& (0+255),b
 24903  0136E8  50F3               	movf	prodl,w,c
 24904  0136EA  0101               	movlb	1	; () banked
 24905  0136EC  6F7F               	movwf	Parse_Time@temp& (0+255),b
 24906                           
 24907                           ; BSR set to: 1
 24908                           ;RTC.c: 374: temp += *This - 48;
 24909  0136EE  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24910  0136F2  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24911  0136F6  50DF               	movf	indf2,w,c
 24912  0136F8  0FD0               	addlw	208
 24913  0136FA  0101               	movlb	1	; () banked
 24914  0136FC  277F               	addwf	Parse_Time@temp& (0+255),f,b
 24915                           
 24916                           ; BSR set to: 1
 24917                           ;RTC.c: 375: This++;
 24918  0136FE  0101               	movlb	1	; () banked
 24919  013700  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24920  013702  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24921                           
 24922                           ;RTC.c: 376: }
 24923  013704  D002               	goto	l1075
 24924  013706                     l11074:
 24925                           
 24926                           ; BSR set to: 1
 24927                           ;RTC.c: 377: else
 24928                           ;RTC.c: 378: {
 24929                           ;RTC.c: 379: return 0;
 24930  013706  0E00               	movlw	0
 24931  013708  0012               	return	
 24932  01370A                     l1075:
 24933                           
 24934                           ; BSR set to: 1
 24935                           ;RTC.c: 380: }
 24936                           ;RTC.c: 381: TempTime.Year = temp;
 24937  01370A  C17F  F188         	movff	Parse_Time@temp,Parse_Time@TempTime+8
 24938                           
 24939                           ; BSR set to: 1
 24940                           ;RTC.c: 383: if(*This == ' ')
 24941  01370E  0E20               	movlw	32
 24942  013710  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24943  013714  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24944  013718  62DF               	cpfseq	indf2,c
 24945  01371A  D003               	goto	l11082
 24946                           
 24947                           ; BSR set to: 1
 24948                           ;RTC.c: 384: {
 24949                           ;RTC.c: 385: This++;
 24950  01371C  0101               	movlb	1	; () banked
 24951  01371E  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24952  013720  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24953  013722                     l11082:
 24954                           
 24955                           ; BSR set to: 1
 24956                           ;RTC.c: 386: }
 24957                           ;RTC.c: 389: if (*This >= 48 && *This <= 57)
 24958  013722  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24959  013726  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24960  01372A  0E2F               	movlw	47
 24961  01372C  64DF               	cpfsgt	indf2,c
 24962  01372E  D018               	goto	l11090
 24963                           
 24964                           ; BSR set to: 1
 24965  013730  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24966  013734  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24967  013738  50DF               	movf	indf2,w,c
 24968  01373A  0101               	movlb	1	; () banked
 24969  01373C  6F7E               	movwf	??_Parse_Time& (0+255),b
 24970  01373E  0E3A               	movlw	58
 24971  013740  0101               	movlb	1	; () banked
 24972  013742  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 24973  013744  B0D8               	btfsc	status,0,c
 24974  013746  D00C               	goto	l11090
 24975                           
 24976                           ; BSR set to: 1
 24977                           ;RTC.c: 390: {
 24978                           ;RTC.c: 391: temp = *This - 48;
 24979  013748  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 24980  01374C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 24981  013750  50DF               	movf	indf2,w,c
 24982  013752  0FD0               	addlw	208
 24983  013754  0101               	movlb	1	; () banked
 24984  013756  6F7F               	movwf	Parse_Time@temp& (0+255),b
 24985                           
 24986                           ; BSR set to: 1
 24987                           ;RTC.c: 392: This++;
 24988  013758  0101               	movlb	1	; () banked
 24989  01375A  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 24990  01375C  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 24991                           
 24992                           ;RTC.c: 393: }
 24993  01375E  D002               	goto	l11094
 24994  013760                     l11090:
 24995                           
 24996                           ; BSR set to: 1
 24997                           ;RTC.c: 394: else
 24998                           ;RTC.c: 395: {
 24999                           ;RTC.c: 396: return 0;
 25000  013760  0E00               	movlw	0
 25001  013762  0012               	return	
 25002  013764                     l11094:
 25003                           
 25004                           ; BSR set to: 1
 25005                           ;RTC.c: 397: }
 25006                           ;RTC.c: 399: if(*This >= 48 && *This <= 57)
 25007  013764  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25008  013768  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25009  01376C  0E2F               	movlw	47
 25010  01376E  64DF               	cpfsgt	indf2,c
 25011  013770  D01E               	goto	l11104
 25012                           
 25013                           ; BSR set to: 1
 25014  013772  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25015  013776  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25016  01377A  50DF               	movf	indf2,w,c
 25017  01377C  0101               	movlb	1	; () banked
 25018  01377E  6F7E               	movwf	??_Parse_Time& (0+255),b
 25019  013780  0E3A               	movlw	58
 25020  013782  0101               	movlb	1	; () banked
 25021  013784  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 25022  013786  B0D8               	btfsc	status,0,c
 25023  013788  D012               	goto	l11104
 25024                           
 25025                           ; BSR set to: 1
 25026                           ;RTC.c: 400: {
 25027                           ;RTC.c: 401: temp *= 10;
 25028  01378A  0E0A               	movlw	10
 25029  01378C  0101               	movlb	1	; () banked
 25030  01378E  037F               	mulwf	Parse_Time@temp& (0+255),b
 25031  013790  50F3               	movf	prodl,w,c
 25032  013792  0101               	movlb	1	; () banked
 25033  013794  6F7F               	movwf	Parse_Time@temp& (0+255),b
 25034                           
 25035                           ; BSR set to: 1
 25036                           ;RTC.c: 402: temp += *This - 48;
 25037  013796  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25038  01379A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25039  01379E  50DF               	movf	indf2,w,c
 25040  0137A0  0FD0               	addlw	208
 25041  0137A2  0101               	movlb	1	; () banked
 25042  0137A4  277F               	addwf	Parse_Time@temp& (0+255),f,b
 25043                           
 25044                           ; BSR set to: 1
 25045                           ;RTC.c: 403: This++;
 25046  0137A6  0101               	movlb	1	; () banked
 25047  0137A8  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 25048  0137AA  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 25049                           
 25050                           ;RTC.c: 404: }
 25051  0137AC  D00A               	goto	l1080
 25052  0137AE                     l11104:
 25053                           
 25054                           ; BSR set to: 1
 25055                           ;RTC.c: 405: else if(*This == ':')
 25056  0137AE  0E3A               	movlw	58
 25057  0137B0  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25058  0137B4  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25059  0137B8  62DF               	cpfseq	indf2,c
 25060  0137BA  D001               	goto	l11108
 25061  0137BC  D002               	goto	l1080
 25062  0137BE                     l11108:
 25063                           
 25064                           ; BSR set to: 1
 25065                           ;RTC.c: 409: else
 25066                           ;RTC.c: 410: {
 25067                           ;RTC.c: 411: return 0;
 25068  0137BE  0E00               	movlw	0
 25069  0137C0  0012               	return	
 25070  0137C2                     l1080:
 25071                           
 25072                           ; BSR set to: 1
 25073                           ;RTC.c: 412: }
 25074                           ;RTC.c: 413: TempTime.Hours = temp;
 25075  0137C2  C17F  F182         	movff	Parse_Time@temp,Parse_Time@TempTime+2
 25076                           
 25077                           ; BSR set to: 1
 25078                           ;RTC.c: 415: if(*This == ':')
 25079  0137C6  0E3A               	movlw	58
 25080  0137C8  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25081  0137CC  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25082  0137D0  62DF               	cpfseq	indf2,c
 25083  0137D2  D004               	goto	l11116
 25084                           
 25085                           ; BSR set to: 1
 25086                           ;RTC.c: 416: {
 25087                           ;RTC.c: 417: This++;
 25088  0137D4  0101               	movlb	1	; () banked
 25089  0137D6  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 25090  0137D8  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 25091                           
 25092                           ;RTC.c: 418: }
 25093  0137DA  D002               	goto	l11120
 25094  0137DC                     l11116:
 25095                           
 25096                           ; BSR set to: 1
 25097                           ;RTC.c: 419: else
 25098                           ;RTC.c: 420: {
 25099                           ;RTC.c: 421: return 0;
 25100  0137DC  0E00               	movlw	0
 25101  0137DE  0012               	return	
 25102  0137E0                     l11120:
 25103                           
 25104                           ; BSR set to: 1
 25105                           ;RTC.c: 422: }
 25106                           ;RTC.c: 425: if (*This >= 48 && *This <= 57)
 25107  0137E0  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25108  0137E4  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25109  0137E8  0E2F               	movlw	47
 25110  0137EA  64DF               	cpfsgt	indf2,c
 25111  0137EC  D018               	goto	l11128
 25112                           
 25113                           ; BSR set to: 1
 25114  0137EE  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25115  0137F2  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25116  0137F6  50DF               	movf	indf2,w,c
 25117  0137F8  0101               	movlb	1	; () banked
 25118  0137FA  6F7E               	movwf	??_Parse_Time& (0+255),b
 25119  0137FC  0E3A               	movlw	58
 25120  0137FE  0101               	movlb	1	; () banked
 25121  013800  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 25122  013802  B0D8               	btfsc	status,0,c
 25123  013804  D00C               	goto	l11128
 25124                           
 25125                           ; BSR set to: 1
 25126                           ;RTC.c: 426: {
 25127                           ;RTC.c: 427: temp = *This - 48;
 25128  013806  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25129  01380A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25130  01380E  50DF               	movf	indf2,w,c
 25131  013810  0FD0               	addlw	208
 25132  013812  0101               	movlb	1	; () banked
 25133  013814  6F7F               	movwf	Parse_Time@temp& (0+255),b
 25134                           
 25135                           ; BSR set to: 1
 25136                           ;RTC.c: 428: This++;
 25137  013816  0101               	movlb	1	; () banked
 25138  013818  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 25139  01381A  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 25140                           
 25141                           ;RTC.c: 429: }
 25142  01381C  D002               	goto	l11132
 25143  01381E                     l11128:
 25144                           
 25145                           ; BSR set to: 1
 25146                           ;RTC.c: 430: else
 25147                           ;RTC.c: 431: {
 25148                           ;RTC.c: 432: return 0;
 25149  01381E  0E00               	movlw	0
 25150  013820  0012               	return	
 25151  013822                     l11132:
 25152                           
 25153                           ; BSR set to: 1
 25154                           ;RTC.c: 433: }
 25155                           ;RTC.c: 435: if(*This >= 48 && *This <= 57)
 25156  013822  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25157  013826  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25158  01382A  0E2F               	movlw	47
 25159  01382C  64DF               	cpfsgt	indf2,c
 25160  01382E  D01E               	goto	l11142
 25161                           
 25162                           ; BSR set to: 1
 25163  013830  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25164  013834  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25165  013838  50DF               	movf	indf2,w,c
 25166  01383A  0101               	movlb	1	; () banked
 25167  01383C  6F7E               	movwf	??_Parse_Time& (0+255),b
 25168  01383E  0E3A               	movlw	58
 25169  013840  0101               	movlb	1	; () banked
 25170  013842  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 25171  013844  B0D8               	btfsc	status,0,c
 25172  013846  D012               	goto	l11142
 25173                           
 25174                           ; BSR set to: 1
 25175                           ;RTC.c: 436: {
 25176                           ;RTC.c: 437: temp *= 10;
 25177  013848  0E0A               	movlw	10
 25178  01384A  0101               	movlb	1	; () banked
 25179  01384C  037F               	mulwf	Parse_Time@temp& (0+255),b
 25180  01384E  50F3               	movf	prodl,w,c
 25181  013850  0101               	movlb	1	; () banked
 25182  013852  6F7F               	movwf	Parse_Time@temp& (0+255),b
 25183                           
 25184                           ; BSR set to: 1
 25185                           ;RTC.c: 438: temp += *This - 48;
 25186  013854  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25187  013858  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25188  01385C  50DF               	movf	indf2,w,c
 25189  01385E  0FD0               	addlw	208
 25190  013860  0101               	movlb	1	; () banked
 25191  013862  277F               	addwf	Parse_Time@temp& (0+255),f,b
 25192                           
 25193                           ; BSR set to: 1
 25194                           ;RTC.c: 439: This++;
 25195  013864  0101               	movlb	1	; () banked
 25196  013866  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 25197  013868  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 25198                           
 25199                           ;RTC.c: 440: }
 25200  01386A  D00A               	goto	l1088
 25201  01386C                     l11142:
 25202                           
 25203                           ; BSR set to: 1
 25204                           ;RTC.c: 441: else if(*This == ':')
 25205  01386C  0E3A               	movlw	58
 25206  01386E  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25207  013872  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25208  013876  62DF               	cpfseq	indf2,c
 25209  013878  D001               	goto	l11146
 25210  01387A  D002               	goto	l1088
 25211  01387C                     l11146:
 25212                           
 25213                           ; BSR set to: 1
 25214                           ;RTC.c: 445: else
 25215                           ;RTC.c: 446: {
 25216                           ;RTC.c: 447: return 0;
 25217  01387C  0E00               	movlw	0
 25218  01387E  0012               	return	
 25219  013880                     l1088:
 25220                           
 25221                           ; BSR set to: 1
 25222                           ;RTC.c: 448: }
 25223                           ;RTC.c: 449: TempTime.Minutes = temp;
 25224  013880  C17F  F181         	movff	Parse_Time@temp,Parse_Time@TempTime+1
 25225                           
 25226                           ; BSR set to: 1
 25227                           ;RTC.c: 451: if(*This == ':')
 25228  013884  0E3A               	movlw	58
 25229  013886  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25230  01388A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25231  01388E  62DF               	cpfseq	indf2,c
 25232  013890  D004               	goto	l11154
 25233                           
 25234                           ; BSR set to: 1
 25235                           ;RTC.c: 452: {
 25236                           ;RTC.c: 453: This++;
 25237  013892  0101               	movlb	1	; () banked
 25238  013894  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 25239  013896  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 25240                           
 25241                           ;RTC.c: 454: }
 25242  013898  D002               	goto	l11158
 25243  01389A                     l11154:
 25244                           
 25245                           ; BSR set to: 1
 25246                           ;RTC.c: 455: else
 25247                           ;RTC.c: 456: {
 25248                           ;RTC.c: 457: return 0;
 25249  01389A  0E00               	movlw	0
 25250  01389C  0012               	return	
 25251  01389E                     l11158:
 25252                           
 25253                           ; BSR set to: 1
 25254                           ;RTC.c: 458: }
 25255                           ;RTC.c: 461: if (*This >= 48 && *This <= 57)
 25256  01389E  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25257  0138A2  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25258  0138A6  0E2F               	movlw	47
 25259  0138A8  64DF               	cpfsgt	indf2,c
 25260  0138AA  D018               	goto	l11166
 25261                           
 25262                           ; BSR set to: 1
 25263  0138AC  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25264  0138B0  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25265  0138B4  50DF               	movf	indf2,w,c
 25266  0138B6  0101               	movlb	1	; () banked
 25267  0138B8  6F7E               	movwf	??_Parse_Time& (0+255),b
 25268  0138BA  0E3A               	movlw	58
 25269  0138BC  0101               	movlb	1	; () banked
 25270  0138BE  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 25271  0138C0  B0D8               	btfsc	status,0,c
 25272  0138C2  D00C               	goto	l11166
 25273                           
 25274                           ; BSR set to: 1
 25275                           ;RTC.c: 462: {
 25276                           ;RTC.c: 463: temp = *This - 48;
 25277  0138C4  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25278  0138C8  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25279  0138CC  50DF               	movf	indf2,w,c
 25280  0138CE  0FD0               	addlw	208
 25281  0138D0  0101               	movlb	1	; () banked
 25282  0138D2  6F7F               	movwf	Parse_Time@temp& (0+255),b
 25283                           
 25284                           ; BSR set to: 1
 25285                           ;RTC.c: 464: This++;
 25286  0138D4  0101               	movlb	1	; () banked
 25287  0138D6  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 25288  0138D8  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 25289                           
 25290                           ;RTC.c: 465: }
 25291  0138DA  D002               	goto	l11170
 25292  0138DC                     l11166:
 25293                           
 25294                           ; BSR set to: 1
 25295                           ;RTC.c: 466: else
 25296                           ;RTC.c: 467: {
 25297                           ;RTC.c: 468: return 0;
 25298  0138DC  0E00               	movlw	0
 25299  0138DE  0012               	return	
 25300  0138E0                     l11170:
 25301                           
 25302                           ; BSR set to: 1
 25303                           ;RTC.c: 469: }
 25304                           ;RTC.c: 470: if (*This >= 48 && *This <= 57)
 25305  0138E0  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25306  0138E4  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25307  0138E8  0E2F               	movlw	47
 25308  0138EA  64DF               	cpfsgt	indf2,c
 25309  0138EC  D01E               	goto	l11180
 25310                           
 25311                           ; BSR set to: 1
 25312  0138EE  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25313  0138F2  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25314  0138F6  50DF               	movf	indf2,w,c
 25315  0138F8  0101               	movlb	1	; () banked
 25316  0138FA  6F7E               	movwf	??_Parse_Time& (0+255),b
 25317  0138FC  0E3A               	movlw	58
 25318  0138FE  0101               	movlb	1	; () banked
 25319  013900  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 25320  013902  B0D8               	btfsc	status,0,c
 25321  013904  D012               	goto	l11180
 25322                           
 25323                           ; BSR set to: 1
 25324                           ;RTC.c: 471: {
 25325                           ;RTC.c: 472: temp *= 10;
 25326  013906  0E0A               	movlw	10
 25327  013908  0101               	movlb	1	; () banked
 25328  01390A  037F               	mulwf	Parse_Time@temp& (0+255),b
 25329  01390C  50F3               	movf	prodl,w,c
 25330  01390E  0101               	movlb	1	; () banked
 25331  013910  6F7F               	movwf	Parse_Time@temp& (0+255),b
 25332                           
 25333                           ; BSR set to: 1
 25334                           ;RTC.c: 473: temp += *This - 48;
 25335  013912  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25336  013916  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25337  01391A  50DF               	movf	indf2,w,c
 25338  01391C  0FD0               	addlw	208
 25339  01391E  0101               	movlb	1	; () banked
 25340  013920  277F               	addwf	Parse_Time@temp& (0+255),f,b
 25341                           
 25342                           ; BSR set to: 1
 25343                           ;RTC.c: 474: This++;
 25344  013922  0101               	movlb	1	; () banked
 25345  013924  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 25346  013926  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 25347                           
 25348                           ;RTC.c: 475: }
 25349  013928  D002               	goto	l1096
 25350  01392A                     l11180:
 25351                           
 25352                           ; BSR set to: 1
 25353                           ;RTC.c: 476: else
 25354                           ;RTC.c: 477: {
 25355                           ;RTC.c: 478: return 0;
 25356  01392A  0E00               	movlw	0
 25357  01392C  0012               	return	
 25358  01392E                     l1096:
 25359                           
 25360                           ; BSR set to: 1
 25361                           ;RTC.c: 479: }
 25362                           ;RTC.c: 480: TempTime.Seconds = temp;
 25363  01392E  C17F  F180         	movff	Parse_Time@temp,Parse_Time@TempTime
 25364                           
 25365                           ; BSR set to: 1
 25366                           ;RTC.c: 482: if(*This == ' ')
 25367  013932  0E20               	movlw	32
 25368  013934  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25369  013938  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25370  01393C  62DF               	cpfseq	indf2,c
 25371  01393E  D003               	goto	l11188
 25372                           
 25373                           ; BSR set to: 1
 25374                           ;RTC.c: 483: {
 25375                           ;RTC.c: 484: This++;
 25376  013940  0101               	movlb	1	; () banked
 25377  013942  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 25378  013944  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 25379  013946                     l11188:
 25380                           
 25381                           ; BSR set to: 1
 25382                           ;RTC.c: 485: }
 25383                           ;RTC.c: 486: if(*This == 'a')
 25384  013946  0E61               	movlw	97
 25385  013948  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25386  01394C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25387  013950  62DF               	cpfseq	indf2,c
 25388  013952  D00E               	goto	l11200
 25389                           
 25390                           ; BSR set to: 1
 25391                           ;RTC.c: 487: {
 25392                           ;RTC.c: 488: This++;
 25393  013954  0101               	movlb	1	; () banked
 25394  013956  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 25395  013958  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 25396                           
 25397                           ; BSR set to: 1
 25398                           ;RTC.c: 489: if(*This == 'm')
 25399  01395A  0E6D               	movlw	109
 25400  01395C  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25401  013960  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25402  013964  62DF               	cpfseq	indf2,c
 25403  013966  D002               	goto	l11196
 25404                           
 25405                           ; BSR set to: 1
 25406                           ;RTC.c: 490: {
 25407                           ;RTC.c: 491: TempTime.HoursAM_PM = 0;
 25408  013968  0E00               	movlw	0
 25409  01396A  D014               	goto	L30
 25410  01396C                     l11196:
 25411                           
 25412                           ; BSR set to: 1
 25413                           ;RTC.c: 493: else
 25414                           ;RTC.c: 494: {
 25415                           ;RTC.c: 495: return 0;
 25416  01396C  0E00               	movlw	0
 25417  01396E  0012               	return	
 25418  013970                     l11200:
 25419                           
 25420                           ; BSR set to: 1
 25421                           ;RTC.c: 498: else if(*This == 'p')
 25422  013970  0E70               	movlw	112
 25423  013972  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25424  013976  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25425  01397A  62DF               	cpfseq	indf2,c
 25426  01397C  D010               	goto	l11212
 25427                           
 25428                           ; BSR set to: 1
 25429                           ;RTC.c: 499: {
 25430                           ;RTC.c: 500: This++;
 25431  01397E  0101               	movlb	1	; () banked
 25432  013980  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 25433  013982  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 25434                           
 25435                           ; BSR set to: 1
 25436                           ;RTC.c: 501: if(*This == 'm')
 25437  013984  0E6D               	movlw	109
 25438  013986  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 25439  01398A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 25440  01398E  62DF               	cpfseq	indf2,c
 25441  013990  D004               	goto	l11208
 25442                           
 25443                           ; BSR set to: 1
 25444                           ;RTC.c: 502: {
 25445                           ;RTC.c: 503: TempTime.HoursAM_PM = 1;
 25446  013992  0E01               	movlw	1
 25447  013994                     L30:
 25448  013994  0101               	movlb	1	; () banked
 25449  013996  6F84               	movwf	(Parse_Time@TempTime+4)& (0+255),b
 25450                           
 25451                           ;RTC.c: 504: }
 25452  013998  D004               	goto	l11216
 25453  01399A                     l11208:
 25454                           
 25455                           ; BSR set to: 1
 25456                           ;RTC.c: 505: else
 25457                           ;RTC.c: 506: {
 25458                           ;RTC.c: 507: return 0;
 25459  01399A  0E00               	movlw	0
 25460  01399C  0012               	return	
 25461  01399E                     l11212:
 25462                           
 25463                           ; BSR set to: 1
 25464                           ;RTC.c: 510: else
 25465                           ;RTC.c: 511: {
 25466                           ;RTC.c: 512: return 0;
 25467  01399E  0E00               	movlw	0
 25468  0139A0  0012               	return	
 25469  0139A2                     l11216:
 25470                           
 25471                           ; BSR set to: 1
 25472                           ;RTC.c: 513: }
 25473                           ;RTC.c: 514: if(TempTime.Month > 12 || TempTime.Date > 31 || TempTime.Year > 99 || TempT
      +                          ime.Hours > 12 || TempTime.Minutes > 59 || TempTime.Seconds > 59)
 25474  0139A2  0E0D               	movlw	13
 25475  0139A4  0101               	movlb	1	; () banked
 25476  0139A6  5D87               	subwf	(Parse_Time@TempTime+7)& (0+255),w,b
 25477  0139A8  B0D8               	btfsc	status,0,c
 25478  0139AA  D018               	goto	l11228
 25479                           
 25480                           ; BSR set to: 1
 25481  0139AC  0E20               	movlw	32
 25482  0139AE  0101               	movlb	1	; () banked
 25483  0139B0  5D86               	subwf	(Parse_Time@TempTime+6)& (0+255),w,b
 25484  0139B2  B0D8               	btfsc	status,0,c
 25485  0139B4  D013               	goto	l11228
 25486                           
 25487                           ; BSR set to: 1
 25488  0139B6  0E64               	movlw	100
 25489  0139B8  0101               	movlb	1	; () banked
 25490  0139BA  5D88               	subwf	(Parse_Time@TempTime+8)& (0+255),w,b
 25491  0139BC  B0D8               	btfsc	status,0,c
 25492  0139BE  D00E               	goto	l11228
 25493                           
 25494                           ; BSR set to: 1
 25495  0139C0  0E0D               	movlw	13
 25496  0139C2  0101               	movlb	1	; () banked
 25497  0139C4  5D82               	subwf	(Parse_Time@TempTime+2)& (0+255),w,b
 25498  0139C6  B0D8               	btfsc	status,0,c
 25499  0139C8  D009               	goto	l11228
 25500                           
 25501                           ; BSR set to: 1
 25502  0139CA  0E3C               	movlw	60
 25503  0139CC  0101               	movlb	1	; () banked
 25504  0139CE  5D81               	subwf	(Parse_Time@TempTime+1)& (0+255),w,b
 25505  0139D0  B0D8               	btfsc	status,0,c
 25506  0139D2  D004               	goto	l11228
 25507                           
 25508                           ; BSR set to: 1
 25509  0139D4  0E3B               	movlw	59
 25510  0139D6  0101               	movlb	1	; () banked
 25511  0139D8  6580               	cpfsgt	Parse_Time@TempTime& (0+255),b
 25512  0139DA  D002               	goto	l1106
 25513  0139DC                     l11228:
 25514                           
 25515                           ; BSR set to: 1
 25516                           ;RTC.c: 515: {
 25517                           ;RTC.c: 516: return 0;
 25518  0139DC  0E00               	movlw	0
 25519  0139DE  0012               	return	
 25520  0139E0                     l1106:
 25521                           
 25522                           ; BSR set to: 1
 25523                           ;RTC.c: 518: else
 25524                           ;RTC.c: 519: {
 25525                           ;RTC.c: 520: NowTime.Month = TempTime.Month;
 25526  0139E0  C187  F107         	movff	Parse_Time@TempTime+7,_NowTime+7
 25527                           
 25528                           ;RTC.c: 521: NowTime.Date = TempTime.Date;
 25529  0139E4  C186  F106         	movff	Parse_Time@TempTime+6,_NowTime+6
 25530                           
 25531                           ;RTC.c: 522: NowTime.Year= TempTime.Year;
 25532  0139E8  C188  F108         	movff	Parse_Time@TempTime+8,_NowTime+8
 25533                           
 25534                           ;RTC.c: 523: NowTime.Hours = TempTime.Hours;
 25535  0139EC  C182  F102         	movff	Parse_Time@TempTime+2,_NowTime+2
 25536                           
 25537                           ;RTC.c: 524: NowTime.Minutes = TempTime.Minutes;
 25538  0139F0  C181  F101         	movff	Parse_Time@TempTime+1,_NowTime+1
 25539                           
 25540                           ;RTC.c: 525: NowTime.Seconds= TempTime.Seconds;
 25541  0139F4  C180  F100         	movff	Parse_Time@TempTime,_NowTime
 25542                           
 25543                           ;RTC.c: 526: NowTime.HoursAM_PM = TempTime.HoursAM_PM;
 25544  0139F8  C184  F104         	movff	Parse_Time@TempTime+4,_NowTime+4
 25545                           
 25546                           ; BSR set to: 1
 25547                           ;RTC.c: 527: return 1;
 25548  0139FC  0E01               	movlw	1
 25549  0139FE  0012               	return	
 25550  013A00                     __end_of_Parse_Time:
 25551                           	opt stack 0
 25552                           tblptru	equ	0xFF8
 25553                           tblptrh	equ	0xFF7
 25554                           tblptrl	equ	0xFF6
 25555                           tablat	equ	0xFF5
 25556                           prodh	equ	0xFF4
 25557                           prodl	equ	0xFF3
 25558                           intcon	equ	0xFF2
 25559                           postinc0	equ	0xFEE
 25560                           wreg	equ	0xFE8
 25561                           indf1	equ	0xFE7
 25562                           postinc1	equ	0xFE6
 25563                           postdec1	equ	0xFE5
 25564                           fsr1h	equ	0xFE2
 25565                           fsr1l	equ	0xFE1
 25566                           indf2	equ	0xFDF
 25567                           postinc2	equ	0xFDE
 25568                           postdec2	equ	0xFDD
 25569                           fsr2h	equ	0xFDA
 25570                           fsr2l	equ	0xFD9
 25571                           status	equ	0xFD8
 25572                           
 25573 ;; *************** function _LCDdisplayFeedback *****************
 25574 ;; Defined at:
 25575 ;;		line 252 in file "LCD.c"
 25576 ;; Parameters:    Size  Location     Type
 25577 ;;  Text            2   32[BANK1 ] PTR unsigned char 
 25578 ;;		 -> STR_279(16), STR_243(16), STR_241(16), STR_238(15), 
 25579 ;;		 -> STR_186(16), STR_184(16), STR_182(13), STR_169(14), 
 25580 ;;		 -> STR_167(16), STR_165(15), STR_154(16), Command@buf(200), 
 25581 ;;		 -> STR_150(14), STR_148(16), STR_146(15), STR_128(13), 
 25582 ;;		 -> STR_126(15), STR_122(14), STR_118(16), STR_105(16), 
 25583 ;;		 -> STR_97(16), STR_95(16), STR_92(15), STR_89(15), 
 25584 ;;		 -> STR_86(14), STR_83(16), STR_71(16), STR_64(16), 
 25585 ;;		 -> STR_62(15), STR_59(14), STR_56(16), STR_40(12), 
 25586 ;;		 -> STR_38(9), STR_35(8), STR_32(13), STR_29(9), 
 25587 ;;		 -> STR_26(8), STR_23(13), 
 25588 ;; Auto vars:     Size  Location     Type
 25589 ;;		None
 25590 ;; Return value:  Size  Location     Type
 25591 ;;		None               void
 25592 ;; Registers used:
 25593 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25594 ;; Tracked objects:
 25595 ;;		On entry : 0/0
 25596 ;;		On exit  : 0/0
 25597 ;;		Unchanged: 0/0
 25598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25599 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25602 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25603 ;;Total ram usage:        2 bytes
 25604 ;; Hardware stack levels used:    1
 25605 ;; Hardware stack levels required when called:   10
 25606 ;; This function calls:
 25607 ;;		_ClearLCD
 25608 ;;		_LCDPrintString
 25609 ;;		_SetLCDcursor
 25610 ;; This function is called by:
 25611 ;;		_Command
 25612 ;; This function uses a non-reentrant model
 25613 ;;
 25614                           
 25615                           	psect	text61
 25616  016D12                     __ptext61:
 25617                           	opt stack 0
 25618  016D12                     _LCDdisplayFeedback:
 25619                           	opt stack 19
 25620                           
 25621                           ;LCD.c: 254: ClearLCD();
 25622                           
 25623                           ; BSR set to: 1
 25624                           ;incstack = 0
 25625  016D12  EC0D  F0B8         	call	_ClearLCD	;wreg free
 25626                           
 25627                           ;LCD.c: 255: SetLCDcursor(1, 0);
 25628  016D16  0E00               	movlw	0
 25629  016D18  0101               	movlb	1	; () banked
 25630  016D1A  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 25631  016D1C  0E01               	movlw	1
 25632  016D1E  EC01  F0B7         	call	_SetLCDcursor
 25633                           
 25634                           ;LCD.c: 256: LCDPrintString(Text);
 25635  016D22  0101               	movlb	1	; () banked
 25636  016D24  C18F  F18B         	movff	LCDdisplayFeedback@Text+1,LCDPrintString@Text+1
 25637  016D28  0101               	movlb	1	; () banked
 25638  016D2A  C18E  F18A         	movff	LCDdisplayFeedback@Text,LCDPrintString@Text
 25639  016D2E  EC55  F0B2         	call	_LCDPrintString	;wreg free
 25640                           
 25641                           ;LCD.c: 257: LCDwait = 1;
 25642  016D32  0E01               	movlw	1
 25643  016D34  0101               	movlb	1	; () banked
 25644  016D36  6F09               	movwf	_LCDwait& (0+255),b
 25645                           
 25646                           ; BSR set to: 1
 25647                           ;LCD.c: 258: LCDclearCount =0;
 25648  016D38  0E00               	movlw	0
 25649  016D3A  0101               	movlb	1	; () banked
 25650  016D3C  6FCD               	movwf	_LCDclearCount& (0+255),b
 25651  016D3E  0E00               	movlw	0
 25652  016D40  0101               	movlb	1	; () banked
 25653  016D42  6FCE               	movwf	(_LCDclearCount+1)& (0+255),b
 25654  016D44  0E00               	movlw	0
 25655  016D46  0101               	movlb	1	; () banked
 25656  016D48  6FCF               	movwf	(_LCDclearCount+2)& (0+255),b
 25657  016D4A  0E00               	movlw	0
 25658  016D4C  0101               	movlb	1	; () banked
 25659  016D4E  6FD0               	movwf	(_LCDclearCount+3)& (0+255),b
 25660                           
 25661                           ; BSR set to: 1
 25662  016D50  0012               	return	
 25663  016D52                     __end_of_LCDdisplayFeedback:
 25664                           	opt stack 0
 25665                           tblptru	equ	0xFF8
 25666                           tblptrh	equ	0xFF7
 25667                           tblptrl	equ	0xFF6
 25668                           tablat	equ	0xFF5
 25669                           prodh	equ	0xFF4
 25670                           prodl	equ	0xFF3
 25671                           intcon	equ	0xFF2
 25672                           postinc0	equ	0xFEE
 25673                           wreg	equ	0xFE8
 25674                           indf1	equ	0xFE7
 25675                           postinc1	equ	0xFE6
 25676                           postdec1	equ	0xFE5
 25677                           fsr1h	equ	0xFE2
 25678                           fsr1l	equ	0xFE1
 25679                           indf2	equ	0xFDF
 25680                           postinc2	equ	0xFDE
 25681                           postdec2	equ	0xFDD
 25682                           fsr2h	equ	0xFDA
 25683                           fsr2l	equ	0xFD9
 25684                           status	equ	0xFD8
 25685                           
 25686 ;; *************** function _SetLCDcursor *****************
 25687 ;; Defined at:
 25688 ;;		line 192 in file "LCD.c"
 25689 ;; Parameters:    Size  Location     Type
 25690 ;;  Row             1    wreg     unsigned char 
 25691 ;;  Col             1   28[BANK1 ] unsigned char 
 25692 ;; Auto vars:     Size  Location     Type
 25693 ;;  Row             1   29[BANK1 ] unsigned char 
 25694 ;;  address         1   30[BANK1 ] unsigned char 
 25695 ;; Return value:  Size  Location     Type
 25696 ;;		None               void
 25697 ;; Registers used:
 25698 ;;		wreg, status,2, status,0, cstack
 25699 ;; Tracked objects:
 25700 ;;		On entry : 0/0
 25701 ;;		On exit  : 0/0
 25702 ;;		Unchanged: 0/0
 25703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25704 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25705 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25707 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 25708 ;;Total ram usage:        3 bytes
 25709 ;; Hardware stack levels used:    1
 25710 ;; Hardware stack levels required when called:    9
 25711 ;; This function calls:
 25712 ;;		_SendLCDbyte
 25713 ;; This function is called by:
 25714 ;;		_main
 25715 ;;		_Command
 25716 ;;		_LCDdisplayFeedback
 25717 ;;		_LCDScreenUpdate
 25718 ;; This function uses a non-reentrant model
 25719 ;;
 25720                           
 25721                           	psect	text62
 25722  016E02                     __ptext62:
 25723                           	opt stack 0
 25724  016E02                     _SetLCDcursor:
 25725                           	opt stack 21
 25726                           
 25727                           ; BSR set to: 1
 25728                           ;incstack = 0
 25729                           ;SetLCDcursor@Row stored from wreg
 25730  016E02  0101               	movlb	1	; () banked
 25731  016E04  6F8B               	movwf	SetLCDcursor@Row& (0+255),b
 25732                           
 25733                           ; BSR set to: 1
 25734                           ;LCD.c: 194: char address;
 25735                           ;LCD.c: 197: if (Row == 0)
 25736  016E06  0101               	movlb	1	; () banked
 25737  016E08  678B               	tstfsz	SetLCDcursor@Row& (0+255),b
 25738  016E0A  D002               	goto	l9646
 25739                           
 25740                           ; BSR set to: 1
 25741                           ;LCD.c: 198: {
 25742                           ;LCD.c: 199: address = 0;
 25743  016E0C  0E00               	movlw	0
 25744  016E0E  D001               	goto	L31
 25745  016E10                     l9646:
 25746                           
 25747                           ; BSR set to: 1
 25748                           ;LCD.c: 201: else
 25749                           ;LCD.c: 202: {
 25750                           ;LCD.c: 203: address = 0x40;
 25751  016E10  0E40               	movlw	64
 25752  016E12                     L31:
 25753  016E12  0101               	movlb	1	; () banked
 25754  016E14  6F8C               	movwf	SetLCDcursor@address& (0+255),b
 25755                           
 25756                           ; BSR set to: 1
 25757                           ;LCD.c: 204: }
 25758                           ;LCD.c: 206: address |= Col;
 25759                           
 25760                           ; BSR set to: 1
 25761  016E16  0101               	movlb	1	; () banked
 25762  016E18  518A               	movf	SetLCDcursor@Col& (0+255),w,b
 25763  016E1A  0101               	movlb	1	; () banked
 25764  016E1C  138C               	iorwf	SetLCDcursor@address& (0+255),f,b
 25765                           
 25766                           ; BSR set to: 1
 25767                           ;LCD.c: 207: if(!LCDwait)
 25768  016E1E  0101               	movlb	1	; () banked
 25769  016E20  6709               	tstfsz	_LCDwait& (0+255),b
 25770  016E22  0012               	return	
 25771                           
 25772                           ; BSR set to: 1
 25773                           ;LCD.c: 208: {
 25774                           ;LCD.c: 209: SendLCDbyte(0x80 | address, 0);
 25775  016E24  0E00               	movlw	0
 25776  016E26  0101               	movlb	1	; () banked
 25777  016E28  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 25778  016E2A  0101               	movlb	1	; () banked
 25779  016E2C  518C               	movf	SetLCDcursor@address& (0+255),w,b
 25780  016E2E  0980               	iorlw	128
 25781  016E30  EC65  F0AB         	call	_SendLCDbyte
 25782  016E34  0012               	return	
 25783  016E36                     __end_of_SetLCDcursor:
 25784                           	opt stack 0
 25785                           tblptru	equ	0xFF8
 25786                           tblptrh	equ	0xFF7
 25787                           tblptrl	equ	0xFF6
 25788                           tablat	equ	0xFF5
 25789                           prodh	equ	0xFF4
 25790                           prodl	equ	0xFF3
 25791                           intcon	equ	0xFF2
 25792                           postinc0	equ	0xFEE
 25793                           wreg	equ	0xFE8
 25794                           indf1	equ	0xFE7
 25795                           postinc1	equ	0xFE6
 25796                           postdec1	equ	0xFE5
 25797                           fsr1h	equ	0xFE2
 25798                           fsr1l	equ	0xFE1
 25799                           indf2	equ	0xFDF
 25800                           postinc2	equ	0xFDE
 25801                           postdec2	equ	0xFDD
 25802                           fsr2h	equ	0xFDA
 25803                           fsr2l	equ	0xFD9
 25804                           status	equ	0xFD8
 25805                           
 25806 ;; *************** function _LCDPrintString *****************
 25807 ;; Defined at:
 25808 ;;		line 233 in file "LCD.c"
 25809 ;; Parameters:    Size  Location     Type
 25810 ;;  Text            2   28[BANK1 ] PTR unsigned char 
 25811 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 25812 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 25813 ;;		 -> Scroll_2(16), Scroll_1(16), STR_279(16), STR_277(17), 
 25814 ;;		 -> STR_264(10), STR_243(16), STR_241(16), STR_238(15), 
 25815 ;;		 -> STR_210(17), STR_206(17), STR_186(16), STR_184(16), 
 25816 ;;		 -> STR_182(13), STR_169(14), STR_167(16), STR_165(15), 
 25817 ;;		 -> STR_154(16), Command@buf(200), STR_150(14), STR_148(16), 
 25818 ;;		 -> STR_146(15), STR_128(13), STR_126(15), STR_122(14), 
 25819 ;;		 -> STR_118(16), STR_105(16), STR_97(16), STR_95(16), 
 25820 ;;		 -> STR_92(15), STR_89(15), STR_86(14), STR_83(16), 
 25821 ;;		 -> STR_71(16), STR_64(16), STR_62(15), STR_59(14), 
 25822 ;;		 -> STR_56(16), STR_40(12), STR_38(9), STR_35(8), 
 25823 ;;		 -> STR_32(13), STR_29(9), STR_26(8), STR_23(13), 
 25824 ;;		 -> STR_15(10), STR_14(17), STR_13(16), STR_12(15), 
 25825 ;;		 -> STR_11(14), STR_10(13), STR_9(12), STR_8(11), 
 25826 ;;		 -> STR_7(10), STR_6(9), low_isr@LCD_TEMP(16), 
 25827 ;; Auto vars:     Size  Location     Type
 25828 ;;  c               2   30[BANK1 ] PTR unsigned char 
 25829 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 25830 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 25831 ;;		 -> Scroll_2(16), Scroll_1(16), STR_279(16), STR_277(17), 
 25832 ;;		 -> STR_264(10), STR_243(16), STR_241(16), STR_238(15), 
 25833 ;;		 -> STR_210(17), STR_206(17), STR_186(16), STR_184(16), 
 25834 ;;		 -> STR_182(13), STR_169(14), STR_167(16), STR_165(15), 
 25835 ;;		 -> STR_154(16), Command@buf(200), STR_150(14), STR_148(16), 
 25836 ;;		 -> STR_146(15), STR_128(13), STR_126(15), STR_122(14), 
 25837 ;;		 -> STR_118(16), STR_105(16), STR_97(16), STR_95(16), 
 25838 ;;		 -> STR_92(15), STR_89(15), STR_86(14), STR_83(16), 
 25839 ;;		 -> STR_71(16), STR_64(16), STR_62(15), STR_59(14), 
 25840 ;;		 -> STR_56(16), STR_40(12), STR_38(9), STR_35(8), 
 25841 ;;		 -> STR_32(13), STR_29(9), STR_26(8), STR_23(13), 
 25842 ;;		 -> STR_15(10), STR_14(17), STR_13(16), STR_12(15), 
 25843 ;;		 -> STR_11(14), STR_10(13), STR_9(12), STR_8(11), 
 25844 ;;		 -> STR_7(10), STR_6(9), low_isr@LCD_TEMP(16), 
 25845 ;; Return value:  Size  Location     Type
 25846 ;;		None               void
 25847 ;; Registers used:
 25848 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25849 ;; Tracked objects:
 25850 ;;		On entry : 0/0
 25851 ;;		On exit  : 0/0
 25852 ;;		Unchanged: 0/0
 25853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25854 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25855 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25857 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 25858 ;;Total ram usage:        4 bytes
 25859 ;; Hardware stack levels used:    1
 25860 ;; Hardware stack levels required when called:    9
 25861 ;; This function calls:
 25862 ;;		_SendLCDbyte
 25863 ;; This function is called by:
 25864 ;;		_main
 25865 ;;		_Command
 25866 ;;		_LCDdisplayFeedback
 25867 ;;		_LCDScreenUpdate
 25868 ;; This function uses a non-reentrant model
 25869 ;;
 25870                           
 25871                           	psect	text63
 25872  0164AA                     __ptext63:
 25873                           	opt stack 0
 25874  0164AA                     _LCDPrintString:
 25875                           	opt stack 20
 25876                           
 25877                           ;LCD.c: 235: unsigned char *c;
 25878                           ;LCD.c: 237: c = Text;
 25879                           
 25880                           ;incstack = 0
 25881  0164AA  0101               	movlb	1	; () banked
 25882  0164AC  C18B  F18D         	movff	LCDPrintString@Text+1,LCDPrintString@c+1
 25883  0164B0  0101               	movlb	1	; () banked
 25884  0164B2  C18A  F18C         	movff	LCDPrintString@Text,LCDPrintString@c
 25885                           
 25886                           ;LCD.c: 239: while ((c != 0) && (*c != 0))
 25887  0164B6  D01B               	goto	l9660
 25888  0164B8                     l9656:
 25889                           
 25890                           ;LCD.c: 240: {
 25891                           ;LCD.c: 241: SendLCDbyte(*c, 1);
 25892  0164B8  0E01               	movlw	1
 25893  0164BA  0101               	movlb	1	; () banked
 25894  0164BC  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 25895  0164BE  0101               	movlb	1	; () banked
 25896  0164C0  C18C  FFF6         	movff	LCDPrintString@c,tblptrl
 25897  0164C4  0101               	movlb	1	; () banked
 25898  0164C6  C18D  FFF7         	movff	LCDPrintString@c+1,tblptrh
 25899  0164CA  0E00               	movlw	low (__mediumconst shr (0+16))
 25900  0164CC  6EF8               	movwf	tblptru,c
 25901  0164CE  0E0C               	movlw	(high __ramtop+-1)
 25902  0164D0  64F7               	cpfsgt	tblptrh,c
 25903  0164D2  D003               	bra	u11777
 25904  0164D4  0008               	tblrd		*
 25905  0164D6  50F5               	movf	tablat,w,c
 25906  0164D8  D005               	bra	u11770
 25907  0164DA                     u11777:
 25908  0164DA  CFF6 FFE1          	movff	tblptrl,fsr1l
 25909  0164DE  CFF7 FFE2          	movff	tblptrh,fsr1h
 25910  0164E2  50E7               	movf	indf1,w,c
 25911  0164E4                     u11770:
 25912  0164E4  EC65  F0AB         	call	_SendLCDbyte
 25913                           
 25914                           ;LCD.c: 242: c++;
 25915  0164E8  0101               	movlb	1	; () banked
 25916  0164EA  4B8C               	infsnz	LCDPrintString@c& (0+255),f,b
 25917  0164EC  2B8D               	incf	(LCDPrintString@c+1)& (0+255),f,b
 25918  0164EE                     l9660:
 25919                           
 25920                           ; BSR set to: 1
 25921  0164EE  0101               	movlb	1	; () banked
 25922  0164F0  518D               	movf	(LCDPrintString@c+1)& (0+255),w,b
 25923  0164F2  118C               	iorwf	LCDPrintString@c& (0+255),w,b
 25924  0164F4  B4D8               	btfsc	status,2,c
 25925  0164F6  0012               	return	
 25926                           
 25927                           ; BSR set to: 1
 25928  0164F8  0101               	movlb	1	; () banked
 25929  0164FA  C18C  FFF6         	movff	LCDPrintString@c,tblptrl
 25930  0164FE  0101               	movlb	1	; () banked
 25931  016500  C18D  FFF7         	movff	LCDPrintString@c+1,tblptrh
 25932  016504  0E00               	movlw	low (__mediumconst shr (0+16))
 25933  016506  6EF8               	movwf	tblptru,c
 25934  016508  0E0C               	movlw	(high __ramtop+-1)
 25935  01650A  64F7               	cpfsgt	tblptrh,c
 25936  01650C  D003               	bra	u11797
 25937  01650E  0008               	tblrd		*
 25938  016510  50F5               	movf	tablat,w,c
 25939  016512  D005               	bra	u11790
 25940  016514                     u11797:
 25941  016514  CFF6 FFE1          	movff	tblptrl,fsr1l
 25942  016518  CFF7 FFE2          	movff	tblptrh,fsr1h
 25943  01651C  50E7               	movf	indf1,w,c
 25944  01651E                     u11790:
 25945  01651E  0900               	iorlw	0
 25946  016520  B4D8               	btfsc	status,2,c
 25947  016522  0012               	return	
 25948  016524  D7C9               	goto	l9656
 25949  016526                     __end_of_LCDPrintString:
 25950                           	opt stack 0
 25951                           tblptru	equ	0xFF8
 25952                           tblptrh	equ	0xFF7
 25953                           tblptrl	equ	0xFF6
 25954                           tablat	equ	0xFF5
 25955                           prodh	equ	0xFF4
 25956                           prodl	equ	0xFF3
 25957                           intcon	equ	0xFF2
 25958                           postinc0	equ	0xFEE
 25959                           wreg	equ	0xFE8
 25960                           indf1	equ	0xFE7
 25961                           postinc1	equ	0xFE6
 25962                           postdec1	equ	0xFE5
 25963                           fsr1h	equ	0xFE2
 25964                           fsr1l	equ	0xFE1
 25965                           indf2	equ	0xFDF
 25966                           postinc2	equ	0xFDE
 25967                           postdec2	equ	0xFDD
 25968                           fsr2h	equ	0xFDA
 25969                           fsr2l	equ	0xFD9
 25970                           status	equ	0xFD8
 25971                           
 25972 ;; *************** function _ClearLCD *****************
 25973 ;; Defined at:
 25974 ;;		line 219 in file "LCD.c"
 25975 ;; Parameters:    Size  Location     Type
 25976 ;;		None
 25977 ;; Auto vars:     Size  Location     Type
 25978 ;;		None
 25979 ;; Return value:  Size  Location     Type
 25980 ;;		None               void
 25981 ;; Registers used:
 25982 ;;		wreg, status,2, status,0, cstack
 25983 ;; Tracked objects:
 25984 ;;		On entry : 0/0
 25985 ;;		On exit  : 0/0
 25986 ;;		Unchanged: 0/0
 25987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25992 ;;Total ram usage:        0 bytes
 25993 ;; Hardware stack levels used:    1
 25994 ;; Hardware stack levels required when called:    9
 25995 ;; This function calls:
 25996 ;;		_SendLCDbyte
 25997 ;; This function is called by:
 25998 ;;		_main
 25999 ;;		_init_LCD
 26000 ;;		_LCDdisplayFeedback
 26001 ;;		_LCDScreenUpdate
 26002 ;; This function uses a non-reentrant model
 26003 ;;
 26004                           
 26005                           	psect	text64
 26006  01701A                     __ptext64:
 26007                           	opt stack 0
 26008  01701A                     _ClearLCD:
 26009                           	opt stack 20
 26010                           
 26011                           ;LCD.c: 224: SendLCDbyte(0x01, 0);
 26012                           
 26013                           ;incstack = 0
 26014  01701A  0E00               	movlw	0
 26015  01701C  0101               	movlb	1	; () banked
 26016  01701E  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 26017  017020  0E01               	movlw	1
 26018  017022  EC65  F0AB         	call	_SendLCDbyte
 26019                           
 26020                           ;LCD.c: 225: SendLCDbyte(0x02, 0);
 26021  017026  0E00               	movlw	0
 26022  017028  0101               	movlb	1	; () banked
 26023  01702A  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 26024  01702C  0E02               	movlw	2
 26025  01702E  EC65  F0AB         	call	_SendLCDbyte
 26026  017032  0012               	return	
 26027  017034                     __end_of_ClearLCD:
 26028                           	opt stack 0
 26029                           tblptru	equ	0xFF8
 26030                           tblptrh	equ	0xFF7
 26031                           tblptrl	equ	0xFF6
 26032                           tablat	equ	0xFF5
 26033                           prodh	equ	0xFF4
 26034                           prodl	equ	0xFF3
 26035                           intcon	equ	0xFF2
 26036                           postinc0	equ	0xFEE
 26037                           wreg	equ	0xFE8
 26038                           indf1	equ	0xFE7
 26039                           postinc1	equ	0xFE6
 26040                           postdec1	equ	0xFE5
 26041                           fsr1h	equ	0xFE2
 26042                           fsr1l	equ	0xFE1
 26043                           indf2	equ	0xFDF
 26044                           postinc2	equ	0xFDE
 26045                           postdec2	equ	0xFDD
 26046                           fsr2h	equ	0xFDA
 26047                           fsr2l	equ	0xFD9
 26048                           status	equ	0xFD8
 26049                           
 26050 ;; *************** function _SendLCDbyte *****************
 26051 ;; Defined at:
 26052 ;;		line 106 in file "LCD.c"
 26053 ;; Parameters:    Size  Location     Type
 26054 ;;  data            1    wreg     unsigned char 
 26055 ;;  isCommand       1   24[BANK1 ] unsigned char 
 26056 ;; Auto vars:     Size  Location     Type
 26057 ;;  data            1   25[BANK1 ] unsigned char 
 26058 ;;  LSB_nibble      1   27[BANK1 ] unsigned char 
 26059 ;;  MSB_nibble      1   26[BANK1 ] unsigned char 
 26060 ;; Return value:  Size  Location     Type
 26061 ;;		None               void
 26062 ;; Registers used:
 26063 ;;		wreg, status,2, status,0, cstack
 26064 ;; Tracked objects:
 26065 ;;		On entry : 0/0
 26066 ;;		On exit  : 0/0
 26067 ;;		Unchanged: 0/0
 26068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26069 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26070 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 26071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26072 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26073 ;;Total ram usage:        4 bytes
 26074 ;; Hardware stack levels used:    1
 26075 ;; Hardware stack levels required when called:    8
 26076 ;; This function calls:
 26077 ;;		_PulseEnablePin
 26078 ;;		_delayUS
 26079 ;; This function is called by:
 26080 ;;		_init_LCD
 26081 ;;		_SetLCDcursor
 26082 ;;		_ClearLCD
 26083 ;;		_LCDPrintString
 26084 ;;		_LCDPrintChar
 26085 ;; This function uses a non-reentrant model
 26086 ;;
 26087                           
 26088                           	psect	text65
 26089  0156CA                     __ptext65:
 26090                           	opt stack 0
 26091  0156CA                     _SendLCDbyte:
 26092                           	opt stack 21
 26093                           
 26094                           ;incstack = 0
 26095                           ;SendLCDbyte@data stored from wreg
 26096  0156CA  0101               	movlb	1	; () banked
 26097  0156CC  6F87               	movwf	SendLCDbyte@data& (0+255),b
 26098                           
 26099                           ; BSR set to: 1
 26100                           ;LCD.c: 108: unsigned char MSB_nibble=0;
 26101  0156CE  0E00               	movlw	0
 26102  0156D0  0101               	movlb	1	; () banked
 26103  0156D2  6F88               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 26104                           
 26105                           ;LCD.c: 109: unsigned char LSB_nibble=0;
 26106  0156D4  0E00               	movlw	0
 26107  0156D6  0101               	movlb	1	; () banked
 26108  0156D8  6F89               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 26109                           
 26110                           ; BSR set to: 1
 26111                           ;LCD.c: 111: LATA &= ~(0b00001000+0b00010000+0b00100000);
 26112  0156DA  0EC7               	movlw	199
 26113  0156DC  1689               	andwf	3977,f,c	;volatile
 26114                           
 26115                           ; BSR set to: 1
 26116                           ;LCD.c: 112: LATE &= ~0b00000001;
 26117  0156DE  908D               	bcf	3981,0,c	;volatile
 26118                           
 26119                           ; BSR set to: 1
 26120                           ;LCD.c: 113: LATD &= ~(0b10000000 + 0b00100000);
 26121  0156E0  0E5F               	movlw	95
 26122  0156E2  168C               	andwf	3980,f,c	;volatile
 26123                           
 26124                           ; BSR set to: 1
 26125                           ;LCD.c: 114: delayUS(10);
 26126  0156E4  0E0A               	movlw	10
 26127  0156E6  0101               	movlb	1	; () banked
 26128  0156E8  6F7C               	movwf	delayUS@US& (0+255),b
 26129  0156EA  0E00               	movlw	0
 26130  0156EC  0101               	movlb	1	; () banked
 26131  0156EE  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 26132  0156F0  0E00               	movlw	0
 26133  0156F2  0101               	movlb	1	; () banked
 26134  0156F4  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 26135  0156F6  0E00               	movlw	0
 26136  0156F8  0101               	movlb	1	; () banked
 26137  0156FA  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 26138  0156FC  EC0D  F0B3         	call	_delayUS	;wreg free
 26139                           
 26140                           ;LCD.c: 115: MSB_nibble = (data & 0xF0)>>4;
 26141  015700  0101               	movlb	1	; () banked
 26142  015702  3987               	swapf	SendLCDbyte@data& (0+255),w,b
 26143  015704  0B0F               	andlw	15
 26144  015706  0B0F               	andlw	15
 26145  015708  0101               	movlb	1	; () banked
 26146  01570A  6F88               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 26147                           
 26148                           ; BSR set to: 1
 26149                           ;LCD.c: 116: LSB_nibble = (data & 0x0F);
 26150  01570C  0101               	movlb	1	; () banked
 26151  01570E  5187               	movf	SendLCDbyte@data& (0+255),w,b
 26152  015710  0B0F               	andlw	15
 26153  015712  0101               	movlb	1	; () banked
 26154  015714  6F89               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 26155                           
 26156                           ; BSR set to: 1
 26157                           ;LCD.c: 117: if(!LCDwait)
 26158  015716  0101               	movlb	1	; () banked
 26159  015718  6709               	tstfsz	_LCDwait& (0+255),b
 26160  01571A  D035               	goto	l9454
 26161                           
 26162                           ; BSR set to: 1
 26163                           ;LCD.c: 118: {
 26164                           ;LCD.c: 119: if(isCommand)
 26165  01571C  0101               	movlb	1	; () banked
 26166  01571E  5186               	movf	SendLCDbyte@isCommand& (0+255),w,b
 26167  015720  B4D8               	btfsc	status,2,c
 26168  015722  D002               	goto	l9410
 26169                           
 26170                           ; BSR set to: 1
 26171                           ;LCD.c: 120: {
 26172                           ;LCD.c: 121: LATD |= (0b00100000);
 26173  015724  8A8C               	bsf	3980,5,c	;volatile
 26174                           
 26175                           ;LCD.c: 122: }
 26176  015726  D001               	goto	l9412
 26177  015728                     l9410:
 26178                           
 26179                           ; BSR set to: 1
 26180                           ;LCD.c: 123: else
 26181                           ;LCD.c: 124: {
 26182                           ;LCD.c: 125: LATD &= ~(0b00100000);
 26183  015728  9A8C               	bcf	3980,5,c	;volatile
 26184  01572A                     l9412:
 26185                           
 26186                           ; BSR set to: 1
 26187                           ;LCD.c: 126: }
 26188                           ;LCD.c: 127: if(MSB_nibble&0b1000)
 26189  01572A  0101               	movlb	1	; () banked
 26190  01572C  B788               	btfsc	SendLCDbyte@MSB_nibble& (0+255),3,b
 26191                           
 26192                           ; BSR set to: 1
 26193                           ;LCD.c: 128: {
 26194                           ;LCD.c: 129: LATA |= 0b00001000;
 26195  01572E  8689               	bsf	3977,3,c	;volatile
 26196                           
 26197                           ; BSR set to: 1
 26198                           ;LCD.c: 130: }
 26199                           ;LCD.c: 131: if(MSB_nibble&0b0100)
 26200                           
 26201                           ; BSR set to: 1
 26202  015730  0101               	movlb	1	; () banked
 26203  015732  B588               	btfsc	SendLCDbyte@MSB_nibble& (0+255),2,b
 26204                           
 26205                           ; BSR set to: 1
 26206                           ;LCD.c: 132: {
 26207                           ;LCD.c: 133: LATA |= 0b00010000;
 26208  015734  8889               	bsf	3977,4,c	;volatile
 26209                           
 26210                           ; BSR set to: 1
 26211                           ;LCD.c: 134: }
 26212                           ;LCD.c: 135: if(MSB_nibble&0b0010)
 26213                           
 26214                           ; BSR set to: 1
 26215  015736  0101               	movlb	1	; () banked
 26216  015738  B388               	btfsc	SendLCDbyte@MSB_nibble& (0+255),1,b
 26217                           
 26218                           ; BSR set to: 1
 26219                           ;LCD.c: 136: {
 26220                           ;LCD.c: 137: LATA |= 0b00100000;
 26221  01573A  8A89               	bsf	3977,5,c	;volatile
 26222                           
 26223                           ; BSR set to: 1
 26224                           ;LCD.c: 138: }
 26225                           ;LCD.c: 139: if(MSB_nibble&0b0001)
 26226                           
 26227                           ; BSR set to: 1
 26228  01573C  0101               	movlb	1	; () banked
 26229  01573E  B188               	btfsc	SendLCDbyte@MSB_nibble& (0+255),0,b
 26230                           
 26231                           ; BSR set to: 1
 26232                           ;LCD.c: 140: {
 26233                           ;LCD.c: 141: LATE |= 0b00000001;
 26234  015740  808D               	bsf	3981,0,c	;volatile
 26235                           
 26236                           ; BSR set to: 1
 26237                           ;LCD.c: 142: }
 26238                           ;LCD.c: 143: PulseEnablePin();
 26239                           
 26240                           ; BSR set to: 1
 26241  015742  ECA9  F0B6         	call	_PulseEnablePin	;wreg free
 26242                           
 26243                           ;LCD.c: 144: LATA &= ~(0b00001000+0b00010000+0b00100000);
 26244  015746  0EC7               	movlw	199
 26245  015748  1689               	andwf	3977,f,c	;volatile
 26246                           
 26247                           ;LCD.c: 145: LATE &= ~0b00000001;
 26248  01574A  908D               	bcf	3981,0,c	;volatile
 26249                           
 26250                           ;LCD.c: 146: delayUS(10);
 26251  01574C  0E0A               	movlw	10
 26252  01574E  0101               	movlb	1	; () banked
 26253  015750  6F7C               	movwf	delayUS@US& (0+255),b
 26254  015752  0E00               	movlw	0
 26255  015754  0101               	movlb	1	; () banked
 26256  015756  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 26257  015758  0E00               	movlw	0
 26258  01575A  0101               	movlb	1	; () banked
 26259  01575C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 26260  01575E  0E00               	movlw	0
 26261  015760  0101               	movlb	1	; () banked
 26262  015762  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 26263  015764  EC0D  F0B3         	call	_delayUS	;wreg free
 26264                           
 26265                           ;LCD.c: 147: if(LSB_nibble&0b1000)
 26266  015768  0101               	movlb	1	; () banked
 26267  01576A  B789               	btfsc	SendLCDbyte@LSB_nibble& (0+255),3,b
 26268                           
 26269                           ; BSR set to: 1
 26270                           ;LCD.c: 148: {
 26271                           ;LCD.c: 149: LATA |= 0b00001000;
 26272  01576C  8689               	bsf	3977,3,c	;volatile
 26273                           
 26274                           ; BSR set to: 1
 26275                           ;LCD.c: 150: }
 26276                           ;LCD.c: 151: if(LSB_nibble&0b0100)
 26277                           
 26278                           ; BSR set to: 1
 26279  01576E  0101               	movlb	1	; () banked
 26280  015770  B589               	btfsc	SendLCDbyte@LSB_nibble& (0+255),2,b
 26281                           
 26282                           ; BSR set to: 1
 26283                           ;LCD.c: 152: {
 26284                           ;LCD.c: 153: LATA |= 0b00010000;
 26285  015772  8889               	bsf	3977,4,c	;volatile
 26286                           
 26287                           ; BSR set to: 1
 26288                           ;LCD.c: 154: }
 26289                           ;LCD.c: 155: if(LSB_nibble&0b0010)
 26290                           
 26291                           ; BSR set to: 1
 26292  015774  0101               	movlb	1	; () banked
 26293  015776  B389               	btfsc	SendLCDbyte@LSB_nibble& (0+255),1,b
 26294                           
 26295                           ; BSR set to: 1
 26296                           ;LCD.c: 156: {
 26297                           ;LCD.c: 157: LATA |= 0b00100000;
 26298  015778  8A89               	bsf	3977,5,c	;volatile
 26299                           
 26300                           ; BSR set to: 1
 26301                           ;LCD.c: 158: }
 26302                           ;LCD.c: 159: if(LSB_nibble&0b0001)
 26303                           
 26304                           ; BSR set to: 1
 26305  01577A  0101               	movlb	1	; () banked
 26306  01577C  B189               	btfsc	SendLCDbyte@LSB_nibble& (0+255),0,b
 26307                           
 26308                           ; BSR set to: 1
 26309                           ;LCD.c: 160: {
 26310                           ;LCD.c: 161: LATE |= 0b00000001;
 26311  01577E  808D               	bsf	3981,0,c	;volatile
 26312                           
 26313                           ; BSR set to: 1
 26314                           ;LCD.c: 162: }
 26315                           ;LCD.c: 163: PulseEnablePin();
 26316                           
 26317                           ; BSR set to: 1
 26318  015780  ECA9  F0B6         	call	_PulseEnablePin	;wreg free
 26319                           
 26320                           ;LCD.c: 164: }
 26321  015784  0012               	return	
 26322  015786                     l9454:
 26323                           
 26324                           ;LCD.c: 165: else
 26325                           ;LCD.c: 166: {
 26326                           ;LCD.c: 167: delayUS(20);
 26327  015786  0E14               	movlw	20
 26328  015788  0101               	movlb	1	; () banked
 26329  01578A  6F7C               	movwf	delayUS@US& (0+255),b
 26330  01578C  0E00               	movlw	0
 26331  01578E  0101               	movlb	1	; () banked
 26332  015790  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 26333  015792  0E00               	movlw	0
 26334  015794  0101               	movlb	1	; () banked
 26335  015796  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 26336  015798  0E00               	movlw	0
 26337  01579A  0101               	movlb	1	; () banked
 26338  01579C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 26339  01579E  EC0D  F0B3         	call	_delayUS	;wreg free
 26340  0157A2  0012               	return	
 26341  0157A4                     __end_of_SendLCDbyte:
 26342                           	opt stack 0
 26343                           tblptru	equ	0xFF8
 26344                           tblptrh	equ	0xFF7
 26345                           tblptrl	equ	0xFF6
 26346                           tablat	equ	0xFF5
 26347                           prodh	equ	0xFF4
 26348                           prodl	equ	0xFF3
 26349                           intcon	equ	0xFF2
 26350                           postinc0	equ	0xFEE
 26351                           wreg	equ	0xFE8
 26352                           indf1	equ	0xFE7
 26353                           postinc1	equ	0xFE6
 26354                           postdec1	equ	0xFE5
 26355                           fsr1h	equ	0xFE2
 26356                           fsr1l	equ	0xFE1
 26357                           indf2	equ	0xFDF
 26358                           postinc2	equ	0xFDE
 26359                           postdec2	equ	0xFDD
 26360                           fsr2h	equ	0xFDA
 26361                           fsr2l	equ	0xFD9
 26362                           status	equ	0xFD8
 26363                           
 26364 ;; *************** function _PulseEnablePin *****************
 26365 ;; Defined at:
 26366 ;;		line 177 in file "LCD.c"
 26367 ;; Parameters:    Size  Location     Type
 26368 ;;		None
 26369 ;; Auto vars:     Size  Location     Type
 26370 ;;		None
 26371 ;; Return value:  Size  Location     Type
 26372 ;;		None               void
 26373 ;; Registers used:
 26374 ;;		wreg, status,2, status,0, cstack
 26375 ;; Tracked objects:
 26376 ;;		On entry : 0/0
 26377 ;;		On exit  : 0/0
 26378 ;;		Unchanged: 0/0
 26379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26384 ;;Total ram usage:        0 bytes
 26385 ;; Hardware stack levels used:    1
 26386 ;; Hardware stack levels required when called:    7
 26387 ;; This function calls:
 26388 ;;		_delayUS
 26389 ;; This function is called by:
 26390 ;;		_init_LCD
 26391 ;;		_SendLCDbyte
 26392 ;; This function uses a non-reentrant model
 26393 ;;
 26394                           
 26395                           	psect	text66
 26396  016D52                     __ptext66:
 26397                           	opt stack 0
 26398  016D52                     _PulseEnablePin:
 26399                           	opt stack 21
 26400                           
 26401                           ;LCD.c: 180: LATD |= (0b10000000);
 26402                           
 26403                           ;incstack = 0
 26404  016D52  8E8C               	bsf	3980,7,c	;volatile
 26405                           
 26406                           ;LCD.c: 181: delayUS(2500);
 26407  016D54  0EC4               	movlw	196
 26408  016D56  0101               	movlb	1	; () banked
 26409  016D58  6F7C               	movwf	delayUS@US& (0+255),b
 26410  016D5A  0E09               	movlw	9
 26411  016D5C  0101               	movlb	1	; () banked
 26412  016D5E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 26413  016D60  0E00               	movlw	0
 26414  016D62  0101               	movlb	1	; () banked
 26415  016D64  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 26416  016D66  0E00               	movlw	0
 26417  016D68  0101               	movlb	1	; () banked
 26418  016D6A  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 26419  016D6C  EC0D  F0B3         	call	_delayUS	;wreg free
 26420                           
 26421                           ;LCD.c: 183: LATD &= ~(0b10000000);
 26422  016D70  9E8C               	bcf	3980,7,c	;volatile
 26423                           
 26424                           ;LCD.c: 184: delayUS(2500);
 26425  016D72  0EC4               	movlw	196
 26426  016D74  0101               	movlb	1	; () banked
 26427  016D76  6F7C               	movwf	delayUS@US& (0+255),b
 26428  016D78  0E09               	movlw	9
 26429  016D7A  0101               	movlb	1	; () banked
 26430  016D7C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 26431  016D7E  0E00               	movlw	0
 26432  016D80  0101               	movlb	1	; () banked
 26433  016D82  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 26434  016D84  0E00               	movlw	0
 26435  016D86  0101               	movlb	1	; () banked
 26436  016D88  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 26437  016D8A  EC0D  F0B3         	call	_delayUS	;wreg free
 26438  016D8E  0012               	return	
 26439  016D90                     __end_of_PulseEnablePin:
 26440                           	opt stack 0
 26441                           tblptru	equ	0xFF8
 26442                           tblptrh	equ	0xFF7
 26443                           tblptrl	equ	0xFF6
 26444                           tablat	equ	0xFF5
 26445                           prodh	equ	0xFF4
 26446                           prodl	equ	0xFF3
 26447                           intcon	equ	0xFF2
 26448                           postinc0	equ	0xFEE
 26449                           wreg	equ	0xFE8
 26450                           indf1	equ	0xFE7
 26451                           postinc1	equ	0xFE6
 26452                           postdec1	equ	0xFE5
 26453                           fsr1h	equ	0xFE2
 26454                           fsr1l	equ	0xFE1
 26455                           indf2	equ	0xFDF
 26456                           postinc2	equ	0xFDE
 26457                           postdec2	equ	0xFDD
 26458                           fsr2h	equ	0xFDA
 26459                           fsr2l	equ	0xFD9
 26460                           status	equ	0xFD8
 26461                           
 26462 ;; *************** function _delayUS *****************
 26463 ;; Defined at:
 26464 ;;		line 55 in file "MISC.c"
 26465 ;; Parameters:    Size  Location     Type
 26466 ;;  US              4   14[BANK1 ] long 
 26467 ;; Auto vars:     Size  Location     Type
 26468 ;;  i               4   19[BANK1 ] long 
 26469 ;;  j               1   23[BANK1 ] unsigned char 
 26470 ;; Return value:  Size  Location     Type
 26471 ;;		None               void
 26472 ;; Registers used:
 26473 ;;		wreg, status,2, status,0
 26474 ;; Tracked objects:
 26475 ;;		On entry : 0/0
 26476 ;;		On exit  : 0/0
 26477 ;;		Unchanged: 0/0
 26478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26479 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26480 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 26481 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26482 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 26483 ;;Total ram usage:       10 bytes
 26484 ;; Hardware stack levels used:    1
 26485 ;; Hardware stack levels required when called:    6
 26486 ;; This function calls:
 26487 ;;		Nothing
 26488 ;; This function is called by:
 26489 ;;		_main
 26490 ;;		_InitApp
 26491 ;;		_Command
 26492 ;;		_Send_Config1
 26493 ;;		_Zero_Config1
 26494 ;;		_One_Config1
 26495 ;;		_f_Config1
 26496 ;;		_Send_Config2
 26497 ;;		_Zero_Config2
 26498 ;;		_One_Config2
 26499 ;;		_init_LCD
 26500 ;;		_SendLCDbyte
 26501 ;;		_PulseEnablePin
 26502 ;;		_LCDScreenUpdate
 26503 ;;		_ResetI2C
 26504 ;;		_UARTstringWAIT
 26505 ;; This function uses a non-reentrant model
 26506 ;;
 26507                           
 26508                           	psect	text67
 26509  01661A                     __ptext67:
 26510                           	opt stack 0
 26511  01661A                     _delayUS:
 26512                           	opt stack 23
 26513                           
 26514                           ;MISC.c: 57: long i;
 26515                           ;MISC.c: 58: unsigned char j;
 26516                           ;MISC.c: 59: for(i=0;i<US;i+=31)
 26517                           
 26518                           ;incstack = 0
 26519  01661A  0E00               	movlw	0
 26520  01661C  0101               	movlb	1	; () banked
 26521  01661E  6F81               	movwf	delayUS@i& (0+255),b
 26522  016620  0E00               	movlw	0
 26523  016622  0101               	movlb	1	; () banked
 26524  016624  6F82               	movwf	(delayUS@i+1)& (0+255),b
 26525  016626  0E00               	movlw	0
 26526  016628  0101               	movlb	1	; () banked
 26527  01662A  6F83               	movwf	(delayUS@i+2)& (0+255),b
 26528  01662C  0E00               	movlw	0
 26529  01662E  0101               	movlb	1	; () banked
 26530  016630  6F84               	movwf	(delayUS@i+3)& (0+255),b
 26531  016632  D015               	goto	l206
 26532  016634                     l9274:
 26533                           
 26534                           ; BSR set to: 1
 26535                           ;MISC.c: 60: {
 26536                           ;MISC.c: 61: for(j=0;j<41;j++)
 26537  016634  0E00               	movlw	0
 26538  016636  0101               	movlb	1	; () banked
 26539  016638  6F85               	movwf	delayUS@j& (0+255),b
 26540  01663A  D003               	goto	L32
 26541  01663C                     l208:
 26542                           
 26543                           ; BSR set to: 1
 26544                           ;MISC.c: 62: {
 26545                           ;MISC.c: 63: __nop();
 26546  01663C  F000               	nop	
 26547  01663E  0101               	movlb	1	; () banked
 26548  016640  2B85               	incf	delayUS@j& (0+255),f,b
 26549  016642                     L32:
 26550                           
 26551                           ; BSR set to: 1
 26552  016642  0E28               	movlw	40
 26553  016644  0101               	movlb	1	; () banked
 26554  016646  6585               	cpfsgt	delayUS@j& (0+255),b
 26555  016648  D7F9               	goto	l208
 26556                           
 26557                           ; BSR set to: 1
 26558                           
 26559                           ; BSR set to: 1
 26560  01664A  0E1F               	movlw	31
 26561  01664C  0101               	movlb	1	; () banked
 26562  01664E  2781               	addwf	delayUS@i& (0+255),f,b
 26563  016650  0E00               	movlw	0
 26564  016652  0101               	movlb	1	; () banked
 26565  016654  2382               	addwfc	(delayUS@i+1)& (0+255),f,b
 26566  016656  0101               	movlb	1	; () banked
 26567  016658  2383               	addwfc	(delayUS@i+2)& (0+255),f,b
 26568  01665A  0101               	movlb	1	; () banked
 26569  01665C  2384               	addwfc	(delayUS@i+3)& (0+255),f,b
 26570  01665E                     l206:
 26571                           
 26572                           ; BSR set to: 1
 26573  01665E  0101               	movlb	1	; () banked
 26574  016660  5184               	movf	(delayUS@i+3)& (0+255),w,b
 26575  016662  0A80               	xorlw	128
 26576  016664  0101               	movlb	1	; () banked
 26577  016666  6F80               	movwf	??_delayUS& (0+255),b
 26578  016668  0101               	movlb	1	; () banked
 26579  01666A  517C               	movf	delayUS@US& (0+255),w,b
 26580  01666C  0101               	movlb	1	; () banked
 26581  01666E  5D81               	subwf	delayUS@i& (0+255),w,b
 26582  016670  0101               	movlb	1	; () banked
 26583  016672  517D               	movf	(delayUS@US+1)& (0+255),w,b
 26584  016674  0101               	movlb	1	; () banked
 26585  016676  5982               	subwfb	(delayUS@i+1)& (0+255),w,b
 26586  016678  0101               	movlb	1	; () banked
 26587  01667A  517E               	movf	(delayUS@US+2)& (0+255),w,b
 26588  01667C  0101               	movlb	1	; () banked
 26589  01667E  5983               	subwfb	(delayUS@i+2)& (0+255),w,b
 26590  016680  0101               	movlb	1	; () banked
 26591  016682  517F               	movf	(delayUS@US+3)& (0+255),w,b
 26592  016684  0A80               	xorlw	128
 26593  016686  0101               	movlb	1	; () banked
 26594  016688  5980               	subwfb	??_delayUS& (0+255),w,b
 26595  01668A  B0D8               	btfsc	status,0,c
 26596                           
 26597                           ; BSR set to: 1
 26598                           
 26599                           ; BSR set to: 1
 26600  01668C  0012               	return	
 26601  01668E  D7D2               	goto	l9274
 26602  016690                     __end_of_delayUS:
 26603                           	opt stack 0
 26604                           tblptru	equ	0xFF8
 26605                           tblptrh	equ	0xFF7
 26606                           tblptrl	equ	0xFF6
 26607                           tablat	equ	0xFF5
 26608                           prodh	equ	0xFF4
 26609                           prodl	equ	0xFF3
 26610                           intcon	equ	0xFF2
 26611                           postinc0	equ	0xFEE
 26612                           wreg	equ	0xFE8
 26613                           indf1	equ	0xFE7
 26614                           postinc1	equ	0xFE6
 26615                           postdec1	equ	0xFE5
 26616                           fsr1h	equ	0xFE2
 26617                           fsr1l	equ	0xFE1
 26618                           indf2	equ	0xFDF
 26619                           postinc2	equ	0xFDE
 26620                           postdec2	equ	0xFDD
 26621                           fsr2h	equ	0xFDA
 26622                           fsr2l	equ	0xFD9
 26623                           status	equ	0xFD8
 26624                           
 26625 ;; *************** function _LCD_Scroll *****************
 26626 ;; Defined at:
 26627 ;;		line 409 in file "LCD.c"
 26628 ;; Parameters:    Size  Location     Type
 26629 ;;  This            2   29[BANK1 ] PTR unsigned char 
 26630 ;;		 -> STR_275(5), STR_274(5), STR_273(10), STR_272(16), 
 26631 ;;		 -> STR_271(11), STR_270(12), STR_269(9), STR_268(14), 
 26632 ;;		 -> STR_251(6), STR_250(9), STR_249(14), STR_233(4), 
 26633 ;;		 -> STR_232(5), STR_231(8), STR_230(10), STR_229(9), 
 26634 ;;		 -> STR_198(2), STR_197(10), STR_196(9), STR_177(10), 
 26635 ;;		 -> STR_176(10), STR_175(13), STR_160(10), STR_159(10), 
 26636 ;;		 -> STR_158(17), STR_138(6), STR_137(6), STR_136(9), 
 26637 ;;		 -> STR_135(10), STR_110(7), STR_109(4), STR_108(6), 
 26638 ;;		 -> STR_107(9), STR_106(13), STR_75(4), STR_74(6), 
 26639 ;;		 -> STR_73(9), STR_72(14), STR_50(5), STR_49(5), 
 26640 ;;		 -> STR_48(9), STR_47(9), 
 26641 ;; Auto vars:     Size  Location     Type
 26642 ;;		None
 26643 ;; Return value:  Size  Location     Type
 26644 ;;		None               void
 26645 ;; Registers used:
 26646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26647 ;; Tracked objects:
 26648 ;;		On entry : 0/0
 26649 ;;		On exit  : 0/0
 26650 ;;		Unchanged: 0/0
 26651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26652 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26655 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26656 ;;Total ram usage:        2 bytes
 26657 ;; Hardware stack levels used:    1
 26658 ;; Hardware stack levels required when called:    8
 26659 ;; This function calls:
 26660 ;;		_BufferCopy
 26661 ;; This function is called by:
 26662 ;;		_Command
 26663 ;; This function uses a non-reentrant model
 26664 ;;
 26665                           
 26666                           	psect	text68
 26667  01408E                     __ptext68:
 26668                           	opt stack 0
 26669  01408E                     _LCD_Scroll:
 26670                           	opt stack 21
 26671                           
 26672                           ;LCD.c: 411: if(!LCDwait)
 26673                           
 26674                           ; BSR set to: 1
 26675                           ;incstack = 0
 26676  01408E  0101               	movlb	1	; () banked
 26677  014090  6709               	tstfsz	_LCDwait& (0+255),b
 26678  014092  0012               	return	
 26679                           
 26680                           ; BSR set to: 1
 26681                           ;LCD.c: 412: {
 26682                           ;LCD.c: 413: LCDclearCount = 15000;
 26683  014094  0E98               	movlw	152
 26684  014096  0101               	movlb	1	; () banked
 26685  014098  6FCD               	movwf	_LCDclearCount& (0+255),b
 26686  01409A  0E3A               	movlw	58
 26687  01409C  0101               	movlb	1	; () banked
 26688  01409E  6FCE               	movwf	(_LCDclearCount+1)& (0+255),b
 26689  0140A0  0E00               	movlw	0
 26690  0140A2  0101               	movlb	1	; () banked
 26691  0140A4  6FCF               	movwf	(_LCDclearCount+2)& (0+255),b
 26692  0140A6  0E00               	movlw	0
 26693  0140A8  0101               	movlb	1	; () banked
 26694  0140AA  6FD0               	movwf	(_LCDclearCount+3)& (0+255),b
 26695                           
 26696                           ; BSR set to: 1
 26697                           ;LCD.c: 414: ScrollFIFOCount++;
 26698  0140AC  0101               	movlb	1	; () banked
 26699  0140AE  2B0C               	incf	_ScrollFIFOCount& (0+255),f,b
 26700                           
 26701                           ; BSR set to: 1
 26702                           ;LCD.c: 415: if(ScrollFIFOCount == 1)
 26703  0140B0  0101               	movlb	1	; () banked
 26704  0140B2  050C               	decf	_ScrollFIFOCount& (0+255),w,b
 26705  0140B4  A4D8               	btfss	status,2,c
 26706  0140B6  D017               	goto	l10830
 26707                           
 26708                           ; BSR set to: 1
 26709                           ;LCD.c: 416: {
 26710                           ;LCD.c: 417: BufferCopy(This,Scroll_1, 16, 0);
 26711  0140B8  0101               	movlb	1	; () banked
 26712  0140BA  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26713  0140BE  0101               	movlb	1	; () banked
 26714  0140C0  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 26715  0140C4  0101               	movlb	1	; () banked
 26716  0140C6  0E01               	movlw	high _Scroll_1
 26717  0140C8  0101               	movlb	1	; () banked
 26718  0140CA  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 26719  0140CC  0101               	movlb	1	; () banked
 26720  0140CE  0E0E               	movlw	low _Scroll_1
 26721  0140D0  0101               	movlb	1	; () banked
 26722  0140D2  6F86               	movwf	BufferCopy@to& (0+255),b
 26723  0140D4  0E10               	movlw	16
 26724  0140D6  0101               	movlb	1	; () banked
 26725  0140D8  6F88               	movwf	BufferCopy@count& (0+255),b
 26726  0140DA  0E00               	movlw	0
 26727  0140DC  0101               	movlb	1	; () banked
 26728  0140DE  6F89               	movwf	BufferCopy@shift& (0+255),b
 26729  0140E0  EC07  F0AD         	call	_BufferCopy	;wreg free
 26730                           
 26731                           ;LCD.c: 418: }
 26732  0140E4  0012               	return	
 26733  0140E6                     l10830:
 26734                           
 26735                           ;LCD.c: 419: else if(ScrollFIFOCount == 2)
 26736  0140E6  0101               	movlb	1	; () banked
 26737  0140E8  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 26738  0140EA  0A02               	xorlw	2
 26739  0140EC  A4D8               	btfss	status,2,c
 26740  0140EE  D017               	goto	l10834
 26741                           
 26742                           ; BSR set to: 1
 26743                           ;LCD.c: 420: {
 26744                           ;LCD.c: 421: BufferCopy(This,Scroll_2, 16, 0);
 26745  0140F0  0101               	movlb	1	; () banked
 26746  0140F2  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26747  0140F6  0101               	movlb	1	; () banked
 26748  0140F8  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 26749  0140FC  0101               	movlb	1	; () banked
 26750  0140FE  0E01               	movlw	high _Scroll_2
 26751  014100  0101               	movlb	1	; () banked
 26752  014102  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 26753  014104  0101               	movlb	1	; () banked
 26754  014106  0E1E               	movlw	low _Scroll_2
 26755  014108  0101               	movlb	1	; () banked
 26756  01410A  6F86               	movwf	BufferCopy@to& (0+255),b
 26757  01410C  0E10               	movlw	16
 26758  01410E  0101               	movlb	1	; () banked
 26759  014110  6F88               	movwf	BufferCopy@count& (0+255),b
 26760  014112  0E00               	movlw	0
 26761  014114  0101               	movlb	1	; () banked
 26762  014116  6F89               	movwf	BufferCopy@shift& (0+255),b
 26763  014118  EC07  F0AD         	call	_BufferCopy	;wreg free
 26764                           
 26765                           ;LCD.c: 422: }
 26766  01411C  0012               	return	
 26767  01411E                     l10834:
 26768                           
 26769                           ;LCD.c: 423: else if(ScrollFIFOCount == 3)
 26770  01411E  0101               	movlb	1	; () banked
 26771  014120  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 26772  014122  0A03               	xorlw	3
 26773  014124  A4D8               	btfss	status,2,c
 26774  014126  D017               	goto	l10838
 26775                           
 26776                           ; BSR set to: 1
 26777                           ;LCD.c: 424: {
 26778                           ;LCD.c: 425: BufferCopy(This,Scroll_3, 16, 0);
 26779  014128  0101               	movlb	1	; () banked
 26780  01412A  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26781  01412E  0101               	movlb	1	; () banked
 26782  014130  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 26783  014134  0101               	movlb	1	; () banked
 26784  014136  0E01               	movlw	high _Scroll_3
 26785  014138  0101               	movlb	1	; () banked
 26786  01413A  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 26787  01413C  0101               	movlb	1	; () banked
 26788  01413E  0E2E               	movlw	low _Scroll_3
 26789  014140  0101               	movlb	1	; () banked
 26790  014142  6F86               	movwf	BufferCopy@to& (0+255),b
 26791  014144  0E10               	movlw	16
 26792  014146  0101               	movlb	1	; () banked
 26793  014148  6F88               	movwf	BufferCopy@count& (0+255),b
 26794  01414A  0E00               	movlw	0
 26795  01414C  0101               	movlb	1	; () banked
 26796  01414E  6F89               	movwf	BufferCopy@shift& (0+255),b
 26797  014150  EC07  F0AD         	call	_BufferCopy	;wreg free
 26798                           
 26799                           ;LCD.c: 426: }
 26800  014154  0012               	return	
 26801  014156                     l10838:
 26802                           
 26803                           ;LCD.c: 427: else if(ScrollFIFOCount == 4)
 26804  014156  0101               	movlb	1	; () banked
 26805  014158  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 26806  01415A  0A04               	xorlw	4
 26807  01415C  A4D8               	btfss	status,2,c
 26808  01415E  D017               	goto	l10842
 26809                           
 26810                           ; BSR set to: 1
 26811                           ;LCD.c: 428: {
 26812                           ;LCD.c: 429: BufferCopy(This,Scroll_4, 16, 0);
 26813  014160  0101               	movlb	1	; () banked
 26814  014162  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26815  014166  0101               	movlb	1	; () banked
 26816  014168  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 26817  01416C  0101               	movlb	1	; () banked
 26818  01416E  0E01               	movlw	high _Scroll_4
 26819  014170  0101               	movlb	1	; () banked
 26820  014172  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 26821  014174  0101               	movlb	1	; () banked
 26822  014176  0E3E               	movlw	low _Scroll_4
 26823  014178  0101               	movlb	1	; () banked
 26824  01417A  6F86               	movwf	BufferCopy@to& (0+255),b
 26825  01417C  0E10               	movlw	16
 26826  01417E  0101               	movlb	1	; () banked
 26827  014180  6F88               	movwf	BufferCopy@count& (0+255),b
 26828  014182  0E00               	movlw	0
 26829  014184  0101               	movlb	1	; () banked
 26830  014186  6F89               	movwf	BufferCopy@shift& (0+255),b
 26831  014188  EC07  F0AD         	call	_BufferCopy	;wreg free
 26832                           
 26833                           ;LCD.c: 430: }
 26834  01418C  0012               	return	
 26835  01418E                     l10842:
 26836                           
 26837                           ;LCD.c: 431: else if(ScrollFIFOCount == 5)
 26838  01418E  0101               	movlb	1	; () banked
 26839  014190  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 26840  014192  0A05               	xorlw	5
 26841  014194  A4D8               	btfss	status,2,c
 26842  014196  D017               	goto	l10846
 26843                           
 26844                           ; BSR set to: 1
 26845                           ;LCD.c: 432: {
 26846                           ;LCD.c: 433: BufferCopy(This,Scroll_5, 16, 0);
 26847  014198  0101               	movlb	1	; () banked
 26848  01419A  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26849  01419E  0101               	movlb	1	; () banked
 26850  0141A0  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 26851  0141A4  0101               	movlb	1	; () banked
 26852  0141A6  0E01               	movlw	high _Scroll_5
 26853  0141A8  0101               	movlb	1	; () banked
 26854  0141AA  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 26855  0141AC  0101               	movlb	1	; () banked
 26856  0141AE  0E4E               	movlw	low _Scroll_5
 26857  0141B0  0101               	movlb	1	; () banked
 26858  0141B2  6F86               	movwf	BufferCopy@to& (0+255),b
 26859  0141B4  0E10               	movlw	16
 26860  0141B6  0101               	movlb	1	; () banked
 26861  0141B8  6F88               	movwf	BufferCopy@count& (0+255),b
 26862  0141BA  0E00               	movlw	0
 26863  0141BC  0101               	movlb	1	; () banked
 26864  0141BE  6F89               	movwf	BufferCopy@shift& (0+255),b
 26865  0141C0  EC07  F0AD         	call	_BufferCopy	;wreg free
 26866                           
 26867                           ;LCD.c: 434: }
 26868  0141C4  0012               	return	
 26869  0141C6                     l10846:
 26870                           
 26871                           ;LCD.c: 435: else if(ScrollFIFOCount == 6)
 26872  0141C6  0101               	movlb	1	; () banked
 26873  0141C8  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 26874  0141CA  0A06               	xorlw	6
 26875  0141CC  A4D8               	btfss	status,2,c
 26876  0141CE  D017               	goto	l10850
 26877                           
 26878                           ; BSR set to: 1
 26879                           ;LCD.c: 436: {
 26880                           ;LCD.c: 437: BufferCopy(This,Scroll_6, 16, 0);
 26881  0141D0  0101               	movlb	1	; () banked
 26882  0141D2  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26883  0141D6  0101               	movlb	1	; () banked
 26884  0141D8  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 26885  0141DC  0101               	movlb	1	; () banked
 26886  0141DE  0E01               	movlw	high _Scroll_6
 26887  0141E0  0101               	movlb	1	; () banked
 26888  0141E2  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 26889  0141E4  0101               	movlb	1	; () banked
 26890  0141E6  0E5E               	movlw	low _Scroll_6
 26891  0141E8  0101               	movlb	1	; () banked
 26892  0141EA  6F86               	movwf	BufferCopy@to& (0+255),b
 26893  0141EC  0E10               	movlw	16
 26894  0141EE  0101               	movlb	1	; () banked
 26895  0141F0  6F88               	movwf	BufferCopy@count& (0+255),b
 26896  0141F2  0E00               	movlw	0
 26897  0141F4  0101               	movlb	1	; () banked
 26898  0141F6  6F89               	movwf	BufferCopy@shift& (0+255),b
 26899  0141F8  EC07  F0AD         	call	_BufferCopy	;wreg free
 26900                           
 26901                           ;LCD.c: 438: }
 26902  0141FC  0012               	return	
 26903  0141FE                     l10850:
 26904                           
 26905                           ;LCD.c: 439: else if(ScrollFIFOCount == 7)
 26906  0141FE  0101               	movlb	1	; () banked
 26907  014200  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 26908  014202  0A07               	xorlw	7
 26909  014204  A4D8               	btfss	status,2,c
 26910  014206  D015               	goto	l10854
 26911                           
 26912                           ; BSR set to: 1
 26913                           ;LCD.c: 440: {
 26914                           ;LCD.c: 441: BufferCopy(This,Scroll_7, 16, 0);
 26915  014208  0101               	movlb	1	; () banked
 26916  01420A  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26917  01420E  0101               	movlb	1	; () banked
 26918  014210  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 26919  014214  0E00               	movlw	high _Scroll_7
 26920  014216  0101               	movlb	1	; () banked
 26921  014218  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 26922  01421A  0E27               	movlw	low _Scroll_7
 26923  01421C  0101               	movlb	1	; () banked
 26924  01421E  6F86               	movwf	BufferCopy@to& (0+255),b
 26925  014220  0E10               	movlw	16
 26926  014222  0101               	movlb	1	; () banked
 26927  014224  6F88               	movwf	BufferCopy@count& (0+255),b
 26928  014226  0E00               	movlw	0
 26929  014228  0101               	movlb	1	; () banked
 26930  01422A  6F89               	movwf	BufferCopy@shift& (0+255),b
 26931  01422C  EC07  F0AD         	call	_BufferCopy	;wreg free
 26932                           
 26933                           ;LCD.c: 442: }
 26934  014230  0012               	return	
 26935  014232                     l10854:
 26936                           
 26937                           ;LCD.c: 443: else if(ScrollFIFOCount == 8)
 26938  014232  0101               	movlb	1	; () banked
 26939  014234  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 26940  014236  0A08               	xorlw	8
 26941  014238  A4D8               	btfss	status,2,c
 26942  01423A  D015               	goto	l10858
 26943                           
 26944                           ; BSR set to: 1
 26945                           ;LCD.c: 444: {
 26946                           ;LCD.c: 445: BufferCopy(This,Scroll_8, 16, 0);
 26947  01423C  0101               	movlb	1	; () banked
 26948  01423E  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26949  014242  0101               	movlb	1	; () banked
 26950  014244  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 26951  014248  0E00               	movlw	high _Scroll_8
 26952  01424A  0101               	movlb	1	; () banked
 26953  01424C  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 26954  01424E  0E37               	movlw	low _Scroll_8
 26955  014250  0101               	movlb	1	; () banked
 26956  014252  6F86               	movwf	BufferCopy@to& (0+255),b
 26957  014254  0E10               	movlw	16
 26958  014256  0101               	movlb	1	; () banked
 26959  014258  6F88               	movwf	BufferCopy@count& (0+255),b
 26960  01425A  0E00               	movlw	0
 26961  01425C  0101               	movlb	1	; () banked
 26962  01425E  6F89               	movwf	BufferCopy@shift& (0+255),b
 26963  014260  EC07  F0AD         	call	_BufferCopy	;wreg free
 26964                           
 26965                           ;LCD.c: 446: }
 26966  014264  0012               	return	
 26967  014266                     l10858:
 26968                           
 26969                           ;LCD.c: 447: else if(ScrollFIFOCount == 9)
 26970  014266  0101               	movlb	1	; () banked
 26971  014268  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 26972  01426A  0A09               	xorlw	9
 26973  01426C  A4D8               	btfss	status,2,c
 26974  01426E  D017               	goto	l10862
 26975                           
 26976                           ; BSR set to: 1
 26977                           ;LCD.c: 448: {
 26978                           ;LCD.c: 449: BufferCopy(This,Scroll_9, 16, 0);
 26979  014270  0101               	movlb	1	; () banked
 26980  014272  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 26981  014276  0101               	movlb	1	; () banked
 26982  014278  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 26983  01427C  0100               	movlb	0	; () banked
 26984  01427E  0E00               	movlw	high _Scroll_9
 26985  014280  0101               	movlb	1	; () banked
 26986  014282  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 26987  014284  0100               	movlb	0	; () banked
 26988  014286  0EE9               	movlw	low _Scroll_9
 26989  014288  0101               	movlb	1	; () banked
 26990  01428A  6F86               	movwf	BufferCopy@to& (0+255),b
 26991  01428C  0E10               	movlw	16
 26992  01428E  0101               	movlb	1	; () banked
 26993  014290  6F88               	movwf	BufferCopy@count& (0+255),b
 26994  014292  0E00               	movlw	0
 26995  014294  0101               	movlb	1	; () banked
 26996  014296  6F89               	movwf	BufferCopy@shift& (0+255),b
 26997  014298  EC07  F0AD         	call	_BufferCopy	;wreg free
 26998                           
 26999                           ;LCD.c: 450: }
 27000  01429C  0012               	return	
 27001  01429E                     l10862:
 27002                           
 27003                           ;LCD.c: 451: else if(ScrollFIFOCount == 10)
 27004  01429E  0101               	movlb	1	; () banked
 27005  0142A0  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 27006  0142A2  0A0A               	xorlw	10
 27007  0142A4  A4D8               	btfss	status,2,c
 27008  0142A6  0012               	return	
 27009                           
 27010                           ; BSR set to: 1
 27011                           ;LCD.c: 452: {
 27012                           ;LCD.c: 453: BufferCopy(This,Scroll_10, 16, 0);
 27013  0142A8  0101               	movlb	1	; () banked
 27014  0142AA  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 27015  0142AE  0101               	movlb	1	; () banked
 27016  0142B0  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 27017  0142B4  0100               	movlb	0	; () banked
 27018  0142B6  0E00               	movlw	high _Scroll_10
 27019  0142B8  0101               	movlb	1	; () banked
 27020  0142BA  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 27021  0142BC  0100               	movlb	0	; () banked
 27022  0142BE  0ED9               	movlw	low _Scroll_10
 27023  0142C0  0101               	movlb	1	; () banked
 27024  0142C2  6F86               	movwf	BufferCopy@to& (0+255),b
 27025  0142C4  0E10               	movlw	16
 27026  0142C6  0101               	movlb	1	; () banked
 27027  0142C8  6F88               	movwf	BufferCopy@count& (0+255),b
 27028  0142CA  0E00               	movlw	0
 27029  0142CC  0101               	movlb	1	; () banked
 27030  0142CE  6F89               	movwf	BufferCopy@shift& (0+255),b
 27031  0142D0  EC07  F0AD         	call	_BufferCopy	;wreg free
 27032  0142D4  0012               	return	
 27033  0142D6                     __end_of_LCD_Scroll:
 27034                           	opt stack 0
 27035                           tblptru	equ	0xFF8
 27036                           tblptrh	equ	0xFF7
 27037                           tblptrl	equ	0xFF6
 27038                           tablat	equ	0xFF5
 27039                           prodh	equ	0xFF4
 27040                           prodl	equ	0xFF3
 27041                           intcon	equ	0xFF2
 27042                           postinc0	equ	0xFEE
 27043                           wreg	equ	0xFE8
 27044                           indf1	equ	0xFE7
 27045                           postinc1	equ	0xFE6
 27046                           postdec1	equ	0xFE5
 27047                           fsr1h	equ	0xFE2
 27048                           fsr1l	equ	0xFE1
 27049                           indf2	equ	0xFDF
 27050                           postinc2	equ	0xFDE
 27051                           postdec2	equ	0xFDD
 27052                           fsr2h	equ	0xFDA
 27053                           fsr2l	equ	0xFD9
 27054                           status	equ	0xFD8
 27055                           
 27056 ;; *************** function _BufferCopy *****************
 27057 ;; Defined at:
 27058 ;;		line 87 in file "MISC.c"
 27059 ;; Parameters:    Size  Location     Type
 27060 ;;  from            2   22[BANK1 ] PTR unsigned char 
 27061 ;;		 -> STR_275(5), STR_274(5), STR_273(10), STR_272(16), 
 27062 ;;		 -> STR_271(11), STR_270(12), STR_269(9), STR_268(14), 
 27063 ;;		 -> STR_251(6), STR_250(9), STR_249(14), STR_233(4), 
 27064 ;;		 -> STR_232(5), STR_231(8), STR_230(10), STR_229(9), 
 27065 ;;		 -> STR_198(2), STR_197(10), STR_196(9), STR_177(10), 
 27066 ;;		 -> STR_176(10), STR_175(13), STR_160(10), STR_159(10), 
 27067 ;;		 -> STR_158(17), STR_138(6), STR_137(6), STR_136(9), 
 27068 ;;		 -> STR_135(10), STR_110(7), STR_109(4), STR_108(6), 
 27069 ;;		 -> STR_107(9), STR_106(13), STR_75(4), STR_74(6), 
 27070 ;;		 -> STR_73(9), STR_72(14), STR_50(5), STR_49(5), 
 27071 ;;		 -> STR_48(9), STR_47(9), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 27072 ;;		 -> low_isr@TEMP_Rxdata(100), 
 27073 ;;  to              2   24[BANK1 ] PTR unsigned char 
 27074 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 27075 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 27076 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 27077 ;;  count           1   26[BANK1 ] unsigned char 
 27078 ;;  shift           1   27[BANK1 ] unsigned char 
 27079 ;; Auto vars:     Size  Location     Type
 27080 ;;  i               1   28[BANK1 ] unsigned char 
 27081 ;; Return value:  Size  Location     Type
 27082 ;;		None               void
 27083 ;; Registers used:
 27084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27085 ;; Tracked objects:
 27086 ;;		On entry : 0/0
 27087 ;;		On exit  : 0/0
 27088 ;;		Unchanged: 0/0
 27089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27090 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 27091 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27093 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 27094 ;;Total ram usage:        7 bytes
 27095 ;; Hardware stack levels used:    1
 27096 ;; Hardware stack levels required when called:    7
 27097 ;; This function calls:
 27098 ;;		_cleanBuffer
 27099 ;; This function is called by:
 27100 ;;		_RemoveSpaces
 27101 ;;		_StringAddEqual
 27102 ;;		_LCD_Scroll
 27103 ;; This function uses a non-reentrant model
 27104 ;;
 27105                           
 27106                           	psect	text69
 27107  015A0E                     __ptext69:
 27108                           	opt stack 0
 27109  015A0E                     _BufferCopy:
 27110                           	opt stack 21
 27111                           
 27112                           ;MISC.c: 89: unsigned char i=0;
 27113                           
 27114                           ;incstack = 0
 27115  015A0E  0E00               	movlw	0
 27116  015A10  0101               	movlb	1	; () banked
 27117  015A12  6F8A               	movwf	BufferCopy@i& (0+255),b
 27118                           
 27119                           ; BSR set to: 1
 27120                           ;MISC.c: 90: cleanBuffer(to,count);
 27121  015A14  0101               	movlb	1	; () banked
 27122  015A16  C187  F17D         	movff	BufferCopy@to+1,cleanBuffer@data+1
 27123  015A1A  0101               	movlb	1	; () banked
 27124  015A1C  C186  F17C         	movff	BufferCopy@to,cleanBuffer@data
 27125  015A20  0101               	movlb	1	; () banked
 27126  015A22  C188  F17E         	movff	BufferCopy@count,cleanBuffer@count
 27127  015A26  0101               	movlb	1	; () banked
 27128  015A28  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 27129  015A2A  EC7C  F0B5         	call	_cleanBuffer	;wreg free
 27130                           
 27131                           ;MISC.c: 91: for(i = shift; i>0;i--)
 27132  015A2E  C189  F18A         	movff	BufferCopy@shift,BufferCopy@i
 27133  015A32  D00B               	goto	L34
 27134  015A34                     l9674:
 27135                           
 27136                           ; BSR set to: 1
 27137                           ;MISC.c: 92: {
 27138                           ;MISC.c: 93: *to = ' ';
 27139  015A34  C186  FFD9         	movff	BufferCopy@to,fsr2l
 27140  015A38  C187  FFDA         	movff	BufferCopy@to+1,fsr2h
 27141  015A3C  0E20               	movlw	32
 27142  015A3E  6EDF               	movwf	indf2,c
 27143                           
 27144                           ; BSR set to: 1
 27145                           ;MISC.c: 94: to++;
 27146  015A40  0101               	movlb	1	; () banked
 27147  015A42  4B86               	infsnz	BufferCopy@to& (0+255),f,b
 27148  015A44  2B87               	incf	(BufferCopy@to+1)& (0+255),f,b
 27149                           
 27150                           ; BSR set to: 1
 27151  015A46  0101               	movlb	1	; () banked
 27152  015A48  078A               	decf	BufferCopy@i& (0+255),f,b
 27153  015A4A                     L34:
 27154                           
 27155                           ; BSR set to: 1
 27156  015A4A  0101               	movlb	1	; () banked
 27157  015A4C  678A               	tstfsz	BufferCopy@i& (0+255),b
 27158  015A4E  D7F2               	goto	l9674
 27159  015A50  D020               	goto	L33
 27160  015A52                     l9682:
 27161                           
 27162                           ; BSR set to: 1
 27163                           ;MISC.c: 97: {
 27164                           ;MISC.c: 98: *to = *from;
 27165  015A52  0101               	movlb	1	; () banked
 27166  015A54  C184  FFF6         	movff	BufferCopy@from,tblptrl
 27167  015A58  0101               	movlb	1	; () banked
 27168  015A5A  C185  FFF7         	movff	BufferCopy@from+1,tblptrh
 27169  015A5E  0E00               	movlw	low (__mediumconst shr (0+16))
 27170  015A60  6EF8               	movwf	tblptru,c
 27171  015A62  C186  FFD9         	movff	BufferCopy@to,fsr2l
 27172  015A66  C187  FFDA         	movff	BufferCopy@to+1,fsr2h
 27173  015A6A  0E0C               	movlw	(high __ramtop+-1)
 27174  015A6C  64F7               	cpfsgt	tblptrh,c
 27175  015A6E  D003               	bra	u11837
 27176  015A70  0008               	tblrd		*
 27177  015A72  50F5               	movf	tablat,w,c
 27178  015A74  D005               	bra	u11830
 27179  015A76                     u11837:
 27180  015A76  CFF6 FFE1          	movff	tblptrl,fsr1l
 27181  015A7A  CFF7 FFE2          	movff	tblptrh,fsr1h
 27182  015A7E  50E7               	movf	indf1,w,c
 27183  015A80                     u11830:
 27184  015A80  6EDF               	movwf	indf2,c
 27185                           
 27186                           ;MISC.c: 99: from++;
 27187  015A82  0101               	movlb	1	; () banked
 27188  015A84  4B84               	infsnz	BufferCopy@from& (0+255),f,b
 27189  015A86  2B85               	incf	(BufferCopy@from+1)& (0+255),f,b
 27190                           
 27191                           ; BSR set to: 1
 27192                           ;MISC.c: 100: to++;
 27193  015A88  0101               	movlb	1	; () banked
 27194  015A8A  4B86               	infsnz	BufferCopy@to& (0+255),f,b
 27195  015A8C  2B87               	incf	(BufferCopy@to+1)& (0+255),f,b
 27196                           
 27197                           ; BSR set to: 1
 27198                           ;MISC.c: 101: count--;
 27199  015A8E  0101               	movlb	1	; () banked
 27200  015A90  0788               	decf	BufferCopy@count& (0+255),f,b
 27201  015A92                     L33:
 27202                           
 27203                           ; BSR set to: 1
 27204                           
 27205                           ; BSR set to: 1
 27206  015A92  0101               	movlb	1	; () banked
 27207  015A94  C184  FFF6         	movff	BufferCopy@from,tblptrl
 27208  015A98  0101               	movlb	1	; () banked
 27209  015A9A  C185  FFF7         	movff	BufferCopy@from+1,tblptrh
 27210  015A9E  0E00               	movlw	low (__mediumconst shr (0+16))
 27211  015AA0  6EF8               	movwf	tblptru,c
 27212  015AA2  0E0C               	movlw	(high __ramtop+-1)
 27213  015AA4  64F7               	cpfsgt	tblptrh,c
 27214  015AA6  D003               	bra	u11847
 27215  015AA8  0008               	tblrd		*
 27216  015AAA  50F5               	movf	tablat,w,c
 27217  015AAC  D005               	bra	u11840
 27218  015AAE                     u11847:
 27219  015AAE  CFF6 FFE1          	movff	tblptrl,fsr1l
 27220  015AB2  CFF7 FFE2          	movff	tblptrh,fsr1h
 27221  015AB6  50E7               	movf	indf1,w,c
 27222  015AB8                     u11840:
 27223  015AB8  0900               	iorlw	0
 27224  015ABA  B4D8               	btfsc	status,2,c
 27225  015ABC  0012               	return	
 27226  015ABE  0101               	movlb	1	; () banked
 27227  015AC0  6788               	tstfsz	BufferCopy@count& (0+255),b
 27228  015AC2  D7C7               	goto	l9682
 27229  015AC4  0012               	return	
 27230  015AC6                     __end_of_BufferCopy:
 27231                           	opt stack 0
 27232                           tblptru	equ	0xFF8
 27233                           tblptrh	equ	0xFF7
 27234                           tblptrl	equ	0xFF6
 27235                           tablat	equ	0xFF5
 27236                           prodh	equ	0xFF4
 27237                           prodl	equ	0xFF3
 27238                           intcon	equ	0xFF2
 27239                           postinc0	equ	0xFEE
 27240                           wreg	equ	0xFE8
 27241                           indf1	equ	0xFE7
 27242                           postinc1	equ	0xFE6
 27243                           postdec1	equ	0xFE5
 27244                           fsr1h	equ	0xFE2
 27245                           fsr1l	equ	0xFE1
 27246                           indf2	equ	0xFDF
 27247                           postinc2	equ	0xFDE
 27248                           postdec2	equ	0xFDD
 27249                           fsr2h	equ	0xFDA
 27250                           fsr2l	equ	0xFD9
 27251                           status	equ	0xFD8
 27252                           
 27253 ;; *************** function _cleanBuffer *****************
 27254 ;; Defined at:
 27255 ;;		line 73 in file "MISC.c"
 27256 ;; Parameters:    Size  Location     Type
 27257 ;;  data            2   14[BANK1 ] PTR unsigned char 
 27258 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 27259 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 27260 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 27261 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 27262 ;;  count           2   16[BANK1 ] int 
 27263 ;; Auto vars:     Size  Location     Type
 27264 ;;  i               1   21[BANK1 ] unsigned char 
 27265 ;; Return value:  Size  Location     Type
 27266 ;;		None               void
 27267 ;; Registers used:
 27268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27269 ;; Tracked objects:
 27270 ;;		On entry : 0/0
 27271 ;;		On exit  : 0/0
 27272 ;;		Unchanged: 0/0
 27273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27274 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27275 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27276 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 27277 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 27278 ;;Total ram usage:        8 bytes
 27279 ;; Hardware stack levels used:    1
 27280 ;; Hardware stack levels required when called:    6
 27281 ;; This function calls:
 27282 ;;		Nothing
 27283 ;; This function is called by:
 27284 ;;		_main
 27285 ;;		_BufferCopy
 27286 ;;		_RemoveSpaces
 27287 ;;		_StringAddEqual
 27288 ;;		_Command
 27289 ;;		_LCDScreenUpdate
 27290 ;; This function uses a non-reentrant model
 27291 ;;
 27292                           
 27293                           	psect	text70
 27294  016AF8                     __ptext70:
 27295                           	opt stack 0
 27296  016AF8                     _cleanBuffer:
 27297                           	opt stack 24
 27298                           
 27299                           ;MISC.c: 75: unsigned char i=0;
 27300                           
 27301                           ;incstack = 0
 27302  016AF8  0E00               	movlw	0
 27303  016AFA  0101               	movlb	1	; () banked
 27304  016AFC  6F83               	movwf	cleanBuffer@i& (0+255),b
 27305                           
 27306                           ;MISC.c: 76: for(i=0; i<count;i++)
 27307  016AFE  0E00               	movlw	0
 27308  016B00  0101               	movlb	1	; () banked
 27309  016B02  6F83               	movwf	cleanBuffer@i& (0+255),b
 27310  016B04  D00F               	goto	l9358
 27311  016B06                     l9354:
 27312                           
 27313                           ; BSR set to: 1
 27314                           ;MISC.c: 77: {
 27315                           ;MISC.c: 78: data[i]= 0;
 27316  016B06  0101               	movlb	1	; () banked
 27317  016B08  5183               	movf	cleanBuffer@i& (0+255),w,b
 27318  016B0A  0D01               	mullw	1
 27319  016B0C  50F3               	movf	prodl,w,c
 27320  016B0E  0101               	movlb	1	; () banked
 27321  016B10  257C               	addwf	cleanBuffer@data& (0+255),w,b
 27322  016B12  6ED9               	movwf	fsr2l,c
 27323  016B14  50F4               	movf	prodh,w,c
 27324  016B16  0101               	movlb	1	; () banked
 27325  016B18  217D               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 27326  016B1A  6EDA               	movwf	fsr2h,c
 27327  016B1C  0E00               	movlw	0
 27328  016B1E  6EDF               	movwf	indf2,c
 27329                           
 27330                           ; BSR set to: 1
 27331  016B20  0101               	movlb	1	; () banked
 27332  016B22  2B83               	incf	cleanBuffer@i& (0+255),f,b
 27333  016B24                     l9358:
 27334                           
 27335                           ; BSR set to: 1
 27336  016B24  0101               	movlb	1	; () banked
 27337  016B26  5183               	movf	cleanBuffer@i& (0+255),w,b
 27338  016B28  0101               	movlb	1	; () banked
 27339  016B2A  6F80               	movwf	??_cleanBuffer& (0+255),b
 27340  016B2C  6B81               	clrf	(??_cleanBuffer+1)& (0+255),b
 27341  016B2E  0101               	movlb	1	; () banked
 27342  016B30  5181               	movf	(??_cleanBuffer+1)& (0+255),w,b
 27343  016B32  0A80               	xorlw	128
 27344  016B34  0101               	movlb	1	; () banked
 27345  016B36  6F82               	movwf	(??_cleanBuffer+2)& (0+255),b
 27346  016B38  0101               	movlb	1	; () banked
 27347  016B3A  517E               	movf	cleanBuffer@count& (0+255),w,b
 27348  016B3C  0101               	movlb	1	; () banked
 27349  016B3E  5D80               	subwf	??_cleanBuffer& (0+255),w,b
 27350  016B40  0101               	movlb	1	; () banked
 27351  016B42  517F               	movf	(cleanBuffer@count+1)& (0+255),w,b
 27352  016B44  0A80               	xorlw	128
 27353  016B46  0101               	movlb	1	; () banked
 27354  016B48  5982               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 27355  016B4A  B0D8               	btfsc	status,0,c
 27356                           
 27357                           ; BSR set to: 1
 27358                           
 27359                           ; BSR set to: 1
 27360  016B4C  0012               	return	
 27361  016B4E  D7DB               	goto	l9354
 27362  016B50                     __end_of_cleanBuffer:
 27363                           	opt stack 0
 27364                           tblptru	equ	0xFF8
 27365                           tblptrh	equ	0xFF7
 27366                           tblptrl	equ	0xFF6
 27367                           tablat	equ	0xFF5
 27368                           prodh	equ	0xFF4
 27369                           prodl	equ	0xFF3
 27370                           intcon	equ	0xFF2
 27371                           postinc0	equ	0xFEE
 27372                           wreg	equ	0xFE8
 27373                           indf1	equ	0xFE7
 27374                           postinc1	equ	0xFE6
 27375                           postdec1	equ	0xFE5
 27376                           fsr1h	equ	0xFE2
 27377                           fsr1l	equ	0xFE1
 27378                           indf2	equ	0xFDF
 27379                           postinc2	equ	0xFDE
 27380                           postdec2	equ	0xFDD
 27381                           fsr2h	equ	0xFDA
 27382                           fsr2l	equ	0xFD9
 27383                           status	equ	0xFD8
 27384                           
 27385 ;; *************** function _InternalADC_Read *****************
 27386 ;; Defined at:
 27387 ;;		line 110 in file "ADC.c"
 27388 ;; Parameters:    Size  Location     Type
 27389 ;;  channel         1    wreg     unsigned char 
 27390 ;; Auto vars:     Size  Location     Type
 27391 ;;  channel         1   33[BANK1 ] unsigned char 
 27392 ;; Return value:  Size  Location     Type
 27393 ;;                  2   29[BANK1 ] int 
 27394 ;; Registers used:
 27395 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27396 ;; Tracked objects:
 27397 ;;		On entry : 0/0
 27398 ;;		On exit  : 0/0
 27399 ;;		Unchanged: 0/0
 27400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27401 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27402 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27403 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27404 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 27405 ;;Total ram usage:        5 bytes
 27406 ;; Hardware stack levels used:    1
 27407 ;; Hardware stack levels required when called:    9
 27408 ;; This function calls:
 27409 ;;		_UARTstring
 27410 ;; This function is called by:
 27411 ;;		_Command
 27412 ;;		_RTC_INIT
 27413 ;; This function uses a non-reentrant model
 27414 ;;
 27415                           
 27416                           	psect	text71
 27417  016844                     __ptext71:
 27418                           	opt stack 0
 27419  016844                     _InternalADC_Read:
 27420                           	opt stack 20
 27421                           
 27422                           ; BSR set to: 1
 27423                           ;incstack = 0
 27424                           ;InternalADC_Read@channel stored from wreg
 27425  016844  0101               	movlb	1	; () banked
 27426  016846  6F8F               	movwf	InternalADC_Read@channel& (0+255),b
 27427                           
 27428                           ; BSR set to: 1
 27429                           ;ADC.c: 112: ADCON0 =0;
 27430  016848  0E00               	movlw	0
 27431  01684A  6EC2               	movwf	4034,c	;volatile
 27432                           
 27433                           ; BSR set to: 1
 27434                           ;ADC.c: 113: if(channel > 10)
 27435  01684C  0E0A               	movlw	10
 27436  01684E  0101               	movlb	1	; () banked
 27437  016850  658F               	cpfsgt	InternalADC_Read@channel& (0+255),b
 27438  016852  D00F               	goto	l10922
 27439                           
 27440                           ; BSR set to: 1
 27441                           ;ADC.c: 114: {
 27442                           ;ADC.c: 115: UARTstring("ADC Channel Out of Bounds");
 27443  016854  0EF6               	movlw	high STR_281
 27444  016856  0101               	movlb	1	; () banked
 27445  016858  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 27446  01685A  0EA9               	movlw	low STR_281
 27447  01685C  0101               	movlb	1	; () banked
 27448  01685E  6F87               	movwf	UARTstring@data& (0+255),b
 27449  016860  EC15  F0AE         	call	_UARTstring	;wreg free
 27450                           
 27451                           ;ADC.c: 116: return 0;
 27452  016864  0E00               	movlw	0
 27453  016866  0101               	movlb	1	; () banked
 27454  016868  6F8C               	movwf	(?_InternalADC_Read+1)& (0+255),b
 27455  01686A  0E00               	movlw	0
 27456  01686C  0101               	movlb	1	; () banked
 27457  01686E  6F8B               	movwf	?_InternalADC_Read& (0+255),b
 27458  016870  0012               	return	
 27459  016872                     l10922:
 27460                           
 27461                           ; BSR set to: 1
 27462                           ;ADC.c: 117: }
 27463                           ;ADC.c: 118: ADCON0 |= (channel << 2);
 27464  016872  0101               	movlb	1	; () banked
 27465  016874  458F               	rlncf	InternalADC_Read@channel& (0+255),w,b
 27466  016876  46E8               	rlncf	wreg,f,c
 27467  016878  0BFC               	andlw	252
 27468  01687A  12C2               	iorwf	4034,f,c	;volatile
 27469                           
 27470                           ;ADC.c: 119: ADCON2 |= 0b10100000;
 27471  01687C  0EA0               	movlw	160
 27472  01687E  12C0               	iorwf	4032,f,c	;volatile
 27473                           
 27474                           ;ADC.c: 120: ADCON2 |= 0b00000110;
 27475  016880  0E06               	movlw	6
 27476  016882  12C0               	iorwf	4032,f,c	;volatile
 27477                           
 27478                           ; BSR set to: 1
 27479                           ;ADC.c: 121: ADCON0 |= 0b00000001;
 27480  016884  80C2               	bsf	4034,0,c	;volatile
 27481                           
 27482                           ; BSR set to: 1
 27483                           ;ADC.c: 122: (PIE1bits.ADIE=0);
 27484  016886  9C9D               	bcf	3997,6,c	;volatile
 27485                           
 27486                           ; BSR set to: 1
 27487                           ;ADC.c: 123: ADCON0 |= 0b00000010;
 27488  016888  82C2               	bsf	4034,1,c	;volatile
 27489  01688A                     l803:
 27490                           
 27491                           ; BSR set to: 1
 27492  01688A  B2C2               	btfsc	4034,1,c	;volatile
 27493  01688C  D7FE               	goto	l803
 27494                           
 27495                           ; BSR set to: 1
 27496                           ;ADC.c: 125: return ((ADRESH << 8) + ADRESL);
 27497                           
 27498                           ; BSR set to: 1
 27499  01688E  50C4               	movf	4036,w,c	;volatile
 27500  016890  0101               	movlb	1	; () banked
 27501  016892  6F8E               	movwf	(??_InternalADC_Read+1)& (0+255),b
 27502  016894  6B8D               	clrf	??_InternalADC_Read& (0+255),b
 27503  016896  50C3               	movf	4035,w,c	;volatile
 27504  016898  0101               	movlb	1	; () banked
 27505  01689A  258D               	addwf	??_InternalADC_Read& (0+255),w,b
 27506  01689C  0101               	movlb	1	; () banked
 27507  01689E  6F8B               	movwf	?_InternalADC_Read& (0+255),b
 27508  0168A0  0E00               	movlw	0
 27509  0168A2  0101               	movlb	1	; () banked
 27510  0168A4  218E               	addwfc	(??_InternalADC_Read+1)& (0+255),w,b
 27511  0168A6  0101               	movlb	1	; () banked
 27512  0168A8  6F8C               	movwf	(?_InternalADC_Read+1)& (0+255),b
 27513  0168AA  0012               	return	
 27514  0168AC                     __end_of_InternalADC_Read:
 27515                           	opt stack 0
 27516                           tblptru	equ	0xFF8
 27517                           tblptrh	equ	0xFF7
 27518                           tblptrl	equ	0xFF6
 27519                           tablat	equ	0xFF5
 27520                           prodh	equ	0xFF4
 27521                           prodl	equ	0xFF3
 27522                           intcon	equ	0xFF2
 27523                           postinc0	equ	0xFEE
 27524                           wreg	equ	0xFE8
 27525                           indf1	equ	0xFE7
 27526                           postinc1	equ	0xFE6
 27527                           postdec1	equ	0xFE5
 27528                           fsr1h	equ	0xFE2
 27529                           fsr1l	equ	0xFE1
 27530                           indf2	equ	0xFDF
 27531                           postinc2	equ	0xFDE
 27532                           postdec2	equ	0xFDD
 27533                           fsr2h	equ	0xFDA
 27534                           fsr2l	equ	0xFD9
 27535                           status	equ	0xFD8
 27536                           
 27537 ;; *************** function _UARTstring *****************
 27538 ;; Defined at:
 27539 ;;		line 232 in file "UART.c"
 27540 ;; Parameters:    Size  Location     Type
 27541 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 27542 ;;		 -> STR_281(26), STR_280(5), STR_278(16), STR_276(24), 
 27543 ;;		 -> STR_265(3), STR_263(15), STR_262(22), STR_261(50), 
 27544 ;;		 -> STR_260(7), STR_259(6), STR_258(11), STR_257(17), 
 27545 ;;		 -> STR_256(12), STR_255(13), STR_254(10), STR_253(12), 
 27546 ;;		 -> STR_248(28), STR_247(68), STR_246(9), STR_245(11), 
 27547 ;;		 -> STR_244(23), STR_242(19), STR_240(20), STR_237(20), 
 27548 ;;		 -> STR_228(21), STR_227(61), STR_226(69), STR_225(7), 
 27549 ;;		 -> STR_224(7), STR_223(10), STR_222(11), STR_221(29), 
 27550 ;;		 -> STR_220(13), STR_219(33), STR_218(25), STR_217(28), 
 27551 ;;		 -> STR_216(3), STR_215(26), STR_214(2), STR_213(34), 
 27552 ;;		 -> STR_212(37), STR_209(24), STR_205(3), STR_195(13), 
 27553 ;;		 -> STR_194(73), STR_193(5), STR_192(12), STR_191(17), 
 27554 ;;		 -> STR_185(28), STR_183(30), STR_181(33), STR_174(42), 
 27555 ;;		 -> STR_173(62), STR_172(26), STR_168(43), STR_166(48), 
 27556 ;;		 -> STR_164(27), STR_157(42), STR_156(66), STR_155(25), 
 27557 ;;		 -> STR_153(49), Command@buf(200), STR_149(33), STR_147(38), 
 27558 ;;		 -> STR_145(27), STR_144(28), STR_134(37), STR_133(68), 
 27559 ;;		 -> STR_132(18), STR_131(15), STR_130(11), STR_129(28), 
 27560 ;;		 -> STR_127(18), STR_125(32), STR_121(31), STR_117(38), 
 27561 ;;		 -> STR_104(24), STR_103(68), STR_102(10), STR_101(6), 
 27562 ;;		 -> STR_100(8), STR_99(11), STR_98(21), STR_96(16), 
 27563 ;;		 -> STR_94(19), STR_91(18), STR_88(16), STR_85(15), 
 27564 ;;		 -> STR_82(22), STR_70(27), STR_69(68), STR_68(7), 
 27565 ;;		 -> STR_67(8), STR_66(11), STR_65(24), STR_63(19), 
 27566 ;;		 -> STR_61(19), STR_58(18), STR_55(25), STR_46(17), 
 27567 ;;		 -> STR_45(68), STR_44(8), STR_43(7), STR_42(11), 
 27568 ;;		 -> STR_41(17), STR_39(12), STR_37(9), STR_34(8), 
 27569 ;;		 -> STR_31(13), STR_28(9), STR_25(8), STR_22(13), 
 27570 ;;		 -> STR_18(4), STR_17(4), STR_16(29), STR_5(38), 
 27571 ;;		 -> low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), STR_2(2), 
 27572 ;;		 -> STR_1(2), 
 27573 ;; Auto vars:     Size  Location     Type
 27574 ;;		None
 27575 ;; Return value:  Size  Location     Type
 27576 ;;		None               void
 27577 ;; Registers used:
 27578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27579 ;; Tracked objects:
 27580 ;;		On entry : 0/0
 27581 ;;		On exit  : 0/0
 27582 ;;		Unchanged: 0/0
 27583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27584 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27586 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27587 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27588 ;;Total ram usage:        4 bytes
 27589 ;; Hardware stack levels used:    1
 27590 ;; Hardware stack levels required when called:    8
 27591 ;; This function calls:
 27592 ;;		_UARTchar
 27593 ;; This function is called by:
 27594 ;;		_main
 27595 ;;		_Command
 27596 ;;		_InternalADC_Read
 27597 ;; This function uses a non-reentrant model
 27598 ;;
 27599                           
 27600                           	psect	text72
 27601  015C2A                     __ptext72:
 27602                           	opt stack 0
 27603  015C2A                     _UARTstring:
 27604                           	opt stack 22
 27605  015C2A                     l410:
 27606                           
 27607                           ;UART.c: 235: {
 27608                           ;UART.c: 236: if(*data != 0)
 27609  015C2A  0101               	movlb	1	; () banked
 27610  015C2C  C187  FFF6         	movff	UARTstring@data,tblptrl
 27611  015C30  0101               	movlb	1	; () banked
 27612  015C32  C188  FFF7         	movff	UARTstring@data+1,tblptrh
 27613  015C36  0E00               	movlw	low (__mediumconst shr (0+16))
 27614  015C38  6EF8               	movwf	tblptru,c
 27615  015C3A  0E0C               	movlw	(high __ramtop+-1)
 27616  015C3C  64F7               	cpfsgt	tblptrh,c
 27617  015C3E  D003               	bra	u11697
 27618  015C40  0008               	tblrd		*
 27619  015C42  50F5               	movf	tablat,w,c
 27620  015C44  D005               	bra	u11690
 27621  015C46                     u11697:
 27622  015C46  CFF6 FFE1          	movff	tblptrl,fsr1l
 27623  015C4A  CFF7 FFE2          	movff	tblptrh,fsr1h
 27624  015C4E  50E7               	movf	indf1,w,c
 27625  015C50                     u11690:
 27626  015C50  0900               	iorlw	0
 27627  015C52  B4D8               	btfsc	status,2,c
 27628  015C54  D01D               	goto	l9638
 27629                           
 27630                           ;UART.c: 237: {
 27631                           ;UART.c: 238: UARTchar(*data, 0, 0);
 27632  015C56  0E00               	movlw	0
 27633  015C58  0101               	movlb	1	; () banked
 27634  015C5A  6F83               	movwf	UARTchar@NinethBit_override& (0+255),b
 27635  015C5C  0E00               	movlw	0
 27636  015C5E  0101               	movlb	1	; () banked
 27637  015C60  6F84               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 27638  015C62  0101               	movlb	1	; () banked
 27639  015C64  C187  FFF6         	movff	UARTstring@data,tblptrl
 27640  015C68  0101               	movlb	1	; () banked
 27641  015C6A  C188  FFF7         	movff	UARTstring@data+1,tblptrh
 27642  015C6E  0E00               	movlw	low (__mediumconst shr (0+16))
 27643  015C70  6EF8               	movwf	tblptru,c
 27644  015C72  0E0C               	movlw	(high __ramtop+-1)
 27645  015C74  64F7               	cpfsgt	tblptrh,c
 27646  015C76  D003               	bra	u11717
 27647  015C78  0008               	tblrd		*
 27648  015C7A  50F5               	movf	tablat,w,c
 27649  015C7C  D005               	bra	u11710
 27650  015C7E                     u11717:
 27651  015C7E  CFF6 FFE1          	movff	tblptrl,fsr1l
 27652  015C82  CFF7 FFE2          	movff	tblptrh,fsr1h
 27653  015C86  50E7               	movf	indf1,w,c
 27654  015C88                     u11710:
 27655  015C88  EC93  F0B2         	call	_UARTchar
 27656  015C8C                     l412:
 27657  015C8C  A2AC               	btfss	4012,1,c	;volatile
 27658  015C8E  D7FE               	goto	l412
 27659  015C90                     l9638:
 27660                           
 27661                           ;UART.c: 240: }
 27662                           ;UART.c: 241: } while( *data++);
 27663  015C90  0101               	movlb	1	; () banked
 27664  015C92  5187               	movf	UARTstring@data& (0+255),w,b
 27665  015C94  0101               	movlb	1	; () banked
 27666  015C96  6F89               	movwf	??_UARTstring& (0+255),b
 27667  015C98  0101               	movlb	1	; () banked
 27668  015C9A  5188               	movf	(UARTstring@data+1)& (0+255),w,b
 27669  015C9C  0101               	movlb	1	; () banked
 27670  015C9E  6F8A               	movwf	(??_UARTstring+1)& (0+255),b
 27671  015CA0  0101               	movlb	1	; () banked
 27672  015CA2  4B87               	infsnz	UARTstring@data& (0+255),f,b
 27673  015CA4  2B88               	incf	(UARTstring@data+1)& (0+255),f,b
 27674  015CA6  C189  FFF6         	movff	??_UARTstring,tblptrl
 27675  015CAA  C18A  FFF7         	movff	??_UARTstring+1,tblptrh
 27676  015CAE  0E00               	movlw	low (__mediumconst shr (0+16))
 27677  015CB0  6EF8               	movwf	tblptru,c
 27678  015CB2  0E0C               	movlw	(high __ramtop+-1)
 27679  015CB4  64F7               	cpfsgt	tblptrh,c
 27680  015CB6  D003               	bra	u11737
 27681  015CB8  0008               	tblrd		*
 27682  015CBA  50F5               	movf	tablat,w,c
 27683  015CBC  D005               	bra	u11730
 27684  015CBE                     u11737:
 27685  015CBE  CFF6 FFE1          	movff	tblptrl,fsr1l
 27686  015CC2  CFF7 FFE2          	movff	tblptrh,fsr1h
 27687  015CC6  50E7               	movf	indf1,w,c
 27688  015CC8                     u11730:
 27689  015CC8  0900               	iorlw	0
 27690  015CCA  B4D8               	btfsc	status,2,c
 27691  015CCC  0012               	return	
 27692  015CCE  D7AD               	goto	l410
 27693  015CD0                     __end_of_UARTstring:
 27694                           	opt stack 0
 27695                           tblptru	equ	0xFF8
 27696                           tblptrh	equ	0xFF7
 27697                           tblptrl	equ	0xFF6
 27698                           tablat	equ	0xFF5
 27699                           prodh	equ	0xFF4
 27700                           prodl	equ	0xFF3
 27701                           intcon	equ	0xFF2
 27702                           postinc0	equ	0xFEE
 27703                           wreg	equ	0xFE8
 27704                           indf1	equ	0xFE7
 27705                           postinc1	equ	0xFE6
 27706                           postdec1	equ	0xFE5
 27707                           fsr1h	equ	0xFE2
 27708                           fsr1l	equ	0xFE1
 27709                           indf2	equ	0xFDF
 27710                           postinc2	equ	0xFDE
 27711                           postdec2	equ	0xFDD
 27712                           fsr2h	equ	0xFDA
 27713                           fsr2l	equ	0xFD9
 27714                           status	equ	0xFD8
 27715                           
 27716 ;; *************** function _UARTchar *****************
 27717 ;; Defined at:
 27718 ;;		line 195 in file "UART.c"
 27719 ;; Parameters:    Size  Location     Type
 27720 ;;  data            1    wreg     unsigned char 
 27721 ;;  NinethBit_ov    1   21[BANK1 ] unsigned char 
 27722 ;;  NinethBit_ov    1   22[BANK1 ] unsigned char 
 27723 ;; Auto vars:     Size  Location     Type
 27724 ;;  data            1   24[BANK1 ] unsigned char 
 27725 ;; Return value:  Size  Location     Type
 27726 ;;		None               void
 27727 ;; Registers used:
 27728 ;;		wreg, status,2, status,0, cstack
 27729 ;; Tracked objects:
 27730 ;;		On entry : 0/0
 27731 ;;		On exit  : 0/0
 27732 ;;		Unchanged: 0/0
 27733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27734 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27735 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27736 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27737 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27738 ;;Total ram usage:        4 bytes
 27739 ;; Hardware stack levels used:    1
 27740 ;; Hardware stack levels required when called:    7
 27741 ;; This function calls:
 27742 ;;		_CheckSum_byte
 27743 ;; This function is called by:
 27744 ;;		_UARTstring
 27745 ;;		_UARTstringWAIT
 27746 ;; This function uses a non-reentrant model
 27747 ;;
 27748                           
 27749                           	psect	text73
 27750  016526                     __ptext73:
 27751                           	opt stack 0
 27752  016526                     _UARTchar:
 27753                           	opt stack 22
 27754                           
 27755                           ;incstack = 0
 27756                           ;UARTchar@data stored from wreg
 27757  016526  0101               	movlb	1	; () banked
 27758  016528  6F86               	movwf	UARTchar@data& (0+255),b
 27759                           
 27760                           ; BSR set to: 1
 27761                           ;UART.c: 197: if(TXSTAbits.TX9)
 27762  01652A  ACAC               	btfss	4012,6,c	;volatile
 27763  01652C  D037               	goto	l9388
 27764                           
 27765                           ; BSR set to: 1
 27766                           ;UART.c: 198: {
 27767                           ;UART.c: 200: if(!NinethBit_override)
 27768  01652E  0101               	movlb	1	; () banked
 27769  016530  6783               	tstfsz	UARTchar@NinethBit_override& (0+255),b
 27770  016532  D029               	goto	l9386
 27771  016534  D01C               	goto	l9384
 27772  016536                     l9378:
 27773                           
 27774                           ; BSR set to: 1
 27775                           ;UART.c: 206: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 27776  016536  0101               	movlb	1	; () banked
 27777  016538  C186  F17C         	movff	UARTchar@data,CheckSum_byte@This
 27778  01653C  0101               	movlb	1	; () banked
 27779  01653E  6B7D               	clrf	(CheckSum_byte@This+1)& (0+255),b
 27780  016540  0E03               	movlw	3
 27781  016542  0101               	movlb	1	; () banked
 27782  016544  6F7E               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 27783  016546  EC1D  F0B5         	call	_CheckSum_byte	;wreg free
 27784  01654A  D00A               	goto	L35
 27785  01654C                     l9380:
 27786                           
 27787                           ; BSR set to: 1
 27788                           ;UART.c: 209: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 27789  01654C  0101               	movlb	1	; () banked
 27790  01654E  C186  F17C         	movff	UARTchar@data,CheckSum_byte@This
 27791  016552  0101               	movlb	1	; () banked
 27792  016554  6B7D               	clrf	(CheckSum_byte@This+1)& (0+255),b
 27793  016556  0E02               	movlw	2
 27794  016558  0101               	movlb	1	; () banked
 27795  01655A  6F7E               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 27796  01655C  EC1D  F0B5         	call	_CheckSum_byte	;wreg free
 27797  016560                     L35:
 27798  016560  0101               	movlb	1	; () banked
 27799  016562  6F85               	movwf	??_UARTchar& (0+255),b
 27800  016564  D015               	goto	L36
 27801  016566                     l404:
 27802                           
 27803                           ; BSR set to: 1
 27804                           ;UART.c: 212: TXSTAbits.TX9D = 1;
 27805  016566  80AC               	bsf	4012,0,c	;volatile
 27806                           
 27807                           ;UART.c: 213: break;
 27808  016568  D019               	goto	l9388
 27809  01656A                     l405:
 27810                           
 27811                           ; BSR set to: 1
 27812                           ;UART.c: 215: TXSTAbits.TX9D = 0;
 27813  01656A  90AC               	bcf	4012,0,c	;volatile
 27814                           
 27815                           ;UART.c: 216: break;
 27816  01656C  D017               	goto	l9388
 27817  01656E                     l9384:
 27818                           
 27819                           ; BSR set to: 1
 27820  01656E  0101               	movlb	1	; () banked
 27821  016570  510A               	movf	_PARITY& (0+255),w,b
 27822                           
 27823                           ; Switch size 1, requested type "space"
 27824                           ; Number of cases is 3, Range of values is 1 to 3
 27825                           ; switch strategies available:
 27826                           ; Name         Instructions Cycles
 27827                           ; simple_byte           10     6 (average)
 27828                           ;	Chosen strategy is simple_byte
 27829  016572  0A01               	xorlw	1	; case 1
 27830  016574  B4D8               	btfsc	status,2,c
 27831  016576  D7DF               	goto	l9378
 27832  016578  0A03               	xorlw	3	; case 2
 27833  01657A  B4D8               	btfsc	status,2,c
 27834  01657C  D7E7               	goto	l9380
 27835  01657E  0A01               	xorlw	1	; case 3
 27836  016580  B4D8               	btfsc	status,2,c
 27837  016582  D7F1               	goto	l404
 27838  016584  D7F2               	goto	l405
 27839  016586                     l9386:
 27840                           
 27841                           ; BSR set to: 1
 27842                           ;UART.c: 219: else
 27843                           ;UART.c: 220: {
 27844                           ;UART.c: 221: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 27845  016586  C184  F185         	movff	UARTchar@NinethBit_override_data,??_UARTchar
 27846  01658A  0E01               	movlw	1
 27847  01658C  0101               	movlb	1	; () banked
 27848  01658E  1785               	andwf	??_UARTchar& (0+255),f,b
 27849  016590                     L36:
 27850  016590  50AC               	movf	4012,w,c	;volatile
 27851  016592  0101               	movlb	1	; () banked
 27852  016594  1985               	xorwf	??_UARTchar& (0+255),w,b
 27853  016596  0BFE               	andlw	-2
 27854  016598  1985               	xorwf	??_UARTchar& (0+255),w,b
 27855  01659A  6EAC               	movwf	4012,c	;volatile
 27856  01659C                     l9388:
 27857                           
 27858                           ; BSR set to: 1
 27859                           ;UART.c: 222: }
 27860                           ;UART.c: 223: }
 27861                           ;UART.c: 224: TXREG = data;
 27862  01659C  C186  FFAD         	movff	UARTchar@data,4013	;volatile
 27863                           
 27864                           ; BSR set to: 1
 27865  0165A0  0012               	return	
 27866  0165A2                     __end_of_UARTchar:
 27867                           	opt stack 0
 27868                           tblptru	equ	0xFF8
 27869                           tblptrh	equ	0xFF7
 27870                           tblptrl	equ	0xFF6
 27871                           tablat	equ	0xFF5
 27872                           prodh	equ	0xFF4
 27873                           prodl	equ	0xFF3
 27874                           intcon	equ	0xFF2
 27875                           postinc0	equ	0xFEE
 27876                           wreg	equ	0xFE8
 27877                           indf1	equ	0xFE7
 27878                           postinc1	equ	0xFE6
 27879                           postdec1	equ	0xFE5
 27880                           fsr1h	equ	0xFE2
 27881                           fsr1l	equ	0xFE1
 27882                           indf2	equ	0xFDF
 27883                           postinc2	equ	0xFDE
 27884                           postdec2	equ	0xFDD
 27885                           fsr2h	equ	0xFDA
 27886                           fsr2l	equ	0xFD9
 27887                           status	equ	0xFD8
 27888                           
 27889 ;; *************** function _CheckSum_byte *****************
 27890 ;; Defined at:
 27891 ;;		line 355 in file "MISC.c"
 27892 ;; Parameters:    Size  Location     Type
 27893 ;;  This            2   14[BANK1 ] unsigned int 
 27894 ;;  Odd_Even        1   16[BANK1 ] unsigned char 
 27895 ;; Auto vars:     Size  Location     Type
 27896 ;;  ThisTemp        2   17[BANK1 ] unsigned int 
 27897 ;;  i               1   20[BANK1 ] unsigned char 
 27898 ;;  Parity          1   19[BANK1 ] unsigned char 
 27899 ;; Return value:  Size  Location     Type
 27900 ;;                  1    wreg      unsigned char 
 27901 ;; Registers used:
 27902 ;;		wreg, status,2, status,0
 27903 ;; Tracked objects:
 27904 ;;		On entry : 0/0
 27905 ;;		On exit  : 0/0
 27906 ;;		Unchanged: 0/0
 27907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27908 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 27909 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27911 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 27912 ;;Total ram usage:        7 bytes
 27913 ;; Hardware stack levels used:    1
 27914 ;; Hardware stack levels required when called:    6
 27915 ;; This function calls:
 27916 ;;		Nothing
 27917 ;; This function is called by:
 27918 ;;		_UARTchar
 27919 ;; This function uses a non-reentrant model
 27920 ;;
 27921                           
 27922                           	psect	text74
 27923  016A3A                     __ptext74:
 27924                           	opt stack 0
 27925  016A3A                     _CheckSum_byte:
 27926                           	opt stack 22
 27927                           
 27928                           ;MISC.c: 357: char i = 0;
 27929                           
 27930                           ; BSR set to: 1
 27931                           ;incstack = 0
 27932  016A3A  0E00               	movlw	0
 27933  016A3C  0101               	movlb	1	; () banked
 27934  016A3E  6F82               	movwf	CheckSum_byte@i& (0+255),b
 27935                           
 27936                           ;MISC.c: 358: unsigned char Parity = 0;
 27937  016A40  0E00               	movlw	0
 27938  016A42  0101               	movlb	1	; () banked
 27939  016A44  6F81               	movwf	CheckSum_byte@Parity& (0+255),b
 27940                           
 27941                           ; BSR set to: 1
 27942                           ;MISC.c: 359: unsigned int ThisTemp = This;
 27943  016A46  C17C  F17F         	movff	CheckSum_byte@This,CheckSum_byte@ThisTemp
 27944  016A4A  C17D  F180         	movff	CheckSum_byte@This+1,CheckSum_byte@ThisTemp+1
 27945                           
 27946                           ;MISC.c: 361: for (i =0; i<8; i++)
 27947  016A4E  0E00               	movlw	0
 27948  016A50  0101               	movlb	1	; () banked
 27949  016A52  6F82               	movwf	CheckSum_byte@i& (0+255),b
 27950  016A54  D00B               	goto	L37
 27951  016A56                     l320:
 27952                           
 27953                           ; BSR set to: 1
 27954                           ;MISC.c: 362: {
 27955                           ;MISC.c: 363: if((ThisTemp & 0x01) == 1)
 27956  016A56  0101               	movlb	1	; () banked
 27957  016A58  A17F               	btfss	CheckSum_byte@ThisTemp& (0+255),0,b
 27958  016A5A  D002               	goto	l322
 27959                           
 27960                           ; BSR set to: 1
 27961                           ;MISC.c: 364: {
 27962                           ;MISC.c: 365: Parity++;
 27963  016A5C  0101               	movlb	1	; () banked
 27964  016A5E  2B81               	incf	CheckSum_byte@Parity& (0+255),f,b
 27965  016A60                     l322:
 27966                           
 27967                           ; BSR set to: 1
 27968                           ;MISC.c: 366: }
 27969                           ;MISC.c: 367: ThisTemp >>= 1;
 27970  016A60  0101               	movlb	1	; () banked
 27971  016A62  90D8               	bcf	status,0,c
 27972  016A64  3380               	rrcf	(CheckSum_byte@ThisTemp+1)& (0+255),f,b
 27973  016A66  337F               	rrcf	CheckSum_byte@ThisTemp& (0+255),f,b
 27974  016A68  0101               	movlb	1	; () banked
 27975  016A6A  2B82               	incf	CheckSum_byte@i& (0+255),f,b
 27976  016A6C                     L37:
 27977                           
 27978                           ; BSR set to: 1
 27979  016A6C  0E07               	movlw	7
 27980  016A6E  0101               	movlb	1	; () banked
 27981  016A70  6582               	cpfsgt	CheckSum_byte@i& (0+255),b
 27982  016A72  D7F1               	goto	l320
 27983                           
 27984                           ; BSR set to: 1
 27985                           ;MISC.c: 368: }
 27986                           ;MISC.c: 369: if(Odd_Even == 3)
 27987                           
 27988                           ; BSR set to: 1
 27989  016A74  0101               	movlb	1	; () banked
 27990  016A76  517E               	movf	CheckSum_byte@Odd_Even& (0+255),w,b
 27991  016A78  0A03               	xorlw	3
 27992  016A7A  A4D8               	btfss	status,2,c
 27993  016A7C  D007               	goto	l323
 27994                           
 27995                           ; BSR set to: 1
 27996                           ;MISC.c: 370: {
 27997                           ;MISC.c: 371: if(Parity % 2 == 0)
 27998  016A7E  0101               	movlb	1	; () banked
 27999  016A80  B181               	btfsc	CheckSum_byte@Parity& (0+255),0,b
 28000  016A82  D002               	goto	l9306
 28001                           
 28002                           ; BSR set to: 1
 28003                           ;MISC.c: 372: {
 28004                           ;MISC.c: 373: return 1;
 28005  016A84  0E01               	movlw	1
 28006  016A86  0012               	return	
 28007  016A88                     l9306:
 28008                           
 28009                           ; BSR set to: 1
 28010                           ;MISC.c: 374: }
 28011                           ;MISC.c: 375: return 0;
 28012  016A88  0E00               	movlw	0
 28013  016A8A  0012               	return	
 28014  016A8C                     l323:
 28015                           
 28016                           ; BSR set to: 1
 28017                           ;MISC.c: 377: else
 28018                           ;MISC.c: 378: {
 28019                           ;MISC.c: 379: if(Parity % 2 == 1)
 28020  016A8C  0101               	movlb	1	; () banked
 28021  016A8E  A181               	btfss	CheckSum_byte@Parity& (0+255),0,b
 28022  016A90  D002               	goto	l9316
 28023                           
 28024                           ; BSR set to: 1
 28025                           ;MISC.c: 380: {
 28026                           ;MISC.c: 381: return 1;
 28027  016A92  0E01               	movlw	1
 28028  016A94  0012               	return	
 28029  016A96                     l9316:
 28030                           
 28031                           ; BSR set to: 1
 28032                           ;MISC.c: 382: }
 28033                           ;MISC.c: 383: return 0;
 28034  016A96  0E00               	movlw	0
 28035  016A98  0012               	return	
 28036  016A9A                     __end_of_CheckSum_byte:
 28037                           	opt stack 0
 28038                           tblptru	equ	0xFF8
 28039                           tblptrh	equ	0xFF7
 28040                           tblptrl	equ	0xFF6
 28041                           tablat	equ	0xFF5
 28042                           prodh	equ	0xFF4
 28043                           prodl	equ	0xFF3
 28044                           intcon	equ	0xFF2
 28045                           postinc0	equ	0xFEE
 28046                           wreg	equ	0xFE8
 28047                           indf1	equ	0xFE7
 28048                           postinc1	equ	0xFE6
 28049                           postdec1	equ	0xFE5
 28050                           fsr1h	equ	0xFE2
 28051                           fsr1l	equ	0xFE1
 28052                           indf2	equ	0xFDF
 28053                           postinc2	equ	0xFDE
 28054                           postdec2	equ	0xFDD
 28055                           fsr2h	equ	0xFDA
 28056                           fsr2l	equ	0xFD9
 28057                           status	equ	0xFD8
 28058                           
 28059 ;; *************** function _GetEnteredNumber *****************
 28060 ;; Defined at:
 28061 ;;		line 200 in file "MISC.c"
 28062 ;; Parameters:    Size  Location     Type
 28063 ;;  This            2   20[BANK1 ] PTR unsigned char 
 28064 ;;		 -> Rxdata(100), 
 28065 ;; Auto vars:     Size  Location     Type
 28066 ;;  temp            2   28[BANK1 ] int 
 28067 ;;  negative        1   27[BANK1 ] unsigned char 
 28068 ;;  i               1   26[BANK1 ] unsigned char 
 28069 ;; Return value:  Size  Location     Type
 28070 ;;                  2   20[BANK1 ] int 
 28071 ;; Registers used:
 28072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28073 ;; Tracked objects:
 28074 ;;		On entry : 0/0
 28075 ;;		On exit  : 0/0
 28076 ;;		Unchanged: 0/0
 28077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28078 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28079 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28080 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28081 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 28082 ;;Total ram usage:       10 bytes
 28083 ;; Hardware stack levels used:    1
 28084 ;; Hardware stack levels required when called:    7
 28085 ;; This function calls:
 28086 ;;		___wmul
 28087 ;; This function is called by:
 28088 ;;		_Command
 28089 ;; This function uses a non-reentrant model
 28090 ;;
 28091                           
 28092                           	psect	text75
 28093  014658                     __ptext75:
 28094                           	opt stack 0
 28095  014658                     _GetEnteredNumber:
 28096                           	opt stack 22
 28097                           
 28098                           ;MISC.c: 202: unsigned char i =0;
 28099                           
 28100                           ; BSR set to: 1
 28101                           ;incstack = 0
 28102  014658  0E00               	movlw	0
 28103  01465A  0101               	movlb	1	; () banked
 28104  01465C  6F88               	movwf	GetEnteredNumber@i& (0+255),b
 28105                           
 28106                           ;MISC.c: 203: int temp =0;
 28107  01465E  0E00               	movlw	0
 28108  014660  0101               	movlb	1	; () banked
 28109  014662  6F8B               	movwf	(GetEnteredNumber@temp+1)& (0+255),b
 28110  014664  0E00               	movlw	0
 28111  014666  0101               	movlb	1	; () banked
 28112  014668  6F8A               	movwf	GetEnteredNumber@temp& (0+255),b
 28113                           
 28114                           ;MISC.c: 204: unsigned char negative =0;
 28115  01466A  0E00               	movlw	0
 28116  01466C  0101               	movlb	1	; () banked
 28117  01466E  6F89               	movwf	GetEnteredNumber@negative& (0+255),b
 28118                           
 28119                           ;MISC.c: 205: while(*This != '=' && *This != 0)
 28120  014670  D003               	goto	l10664
 28121  014672                     l10662:
 28122                           
 28123                           ; BSR set to: 1
 28124                           ;MISC.c: 206: {
 28125                           ;MISC.c: 207: This++;
 28126  014672  0101               	movlb	1	; () banked
 28127  014674  4B82               	infsnz	GetEnteredNumber@This& (0+255),f,b
 28128  014676  2B83               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 28129  014678                     l10664:
 28130                           
 28131                           ; BSR set to: 1
 28132  014678  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28133  01467C  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28134  014680  50DF               	movf	indf2,w,c
 28135  014682  0A3D               	xorlw	61
 28136  014684  B4D8               	btfsc	status,2,c
 28137  014686  D007               	goto	l10668
 28138                           
 28139                           ; BSR set to: 1
 28140  014688  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28141  01468C  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28142  014690  50DF               	movf	indf2,w,c
 28143  014692  A4D8               	btfss	status,2,c
 28144  014694  D7EE               	goto	l10662
 28145  014696                     l10668:
 28146                           
 28147                           ; BSR set to: 1
 28148                           ;MISC.c: 209: }
 28149                           ;MISC.c: 210: if(*This == 0)
 28150  014696  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28151  01469A  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28152  01469E  50DF               	movf	indf2,w,c
 28153  0146A0  A4D8               	btfss	status,2,c
 28154  0146A2  D007               	goto	l10674
 28155                           
 28156                           ; BSR set to: 1
 28157                           ;MISC.c: 211: {
 28158                           ;MISC.c: 212: return 32000;
 28159  0146A4  0E7D               	movlw	125
 28160  0146A6  0101               	movlb	1	; () banked
 28161  0146A8  6F83               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 28162  0146AA  0E00               	movlw	0
 28163  0146AC  0101               	movlb	1	; () banked
 28164  0146AE  6F82               	movwf	?_GetEnteredNumber& (0+255),b
 28165  0146B0  0012               	return	
 28166  0146B2                     l10674:
 28167                           
 28168                           ; BSR set to: 1
 28169                           ;MISC.c: 214: }
 28170                           ;MISC.c: 215: This++;
 28171  0146B2  0101               	movlb	1	; () banked
 28172  0146B4  4B82               	infsnz	GetEnteredNumber@This& (0+255),f,b
 28173  0146B6  2B83               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 28174                           
 28175                           ; BSR set to: 1
 28176                           ;MISC.c: 216: if(*This == ' ')
 28177  0146B8  0E20               	movlw	32
 28178  0146BA  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28179  0146BE  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28180  0146C2  62DF               	cpfseq	indf2,c
 28181  0146C4  D001               	goto	l10680
 28182  0146C6  D07E               	goto	l10720
 28183  0146C8                     l10680:
 28184                           
 28185                           ; BSR set to: 1
 28186                           ;MISC.c: 221: else if (*This == '=')
 28187  0146C8  0E3D               	movlw	61
 28188  0146CA  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28189  0146CE  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28190  0146D2  62DF               	cpfseq	indf2,c
 28191  0146D4  D007               	goto	l10688
 28192                           
 28193                           ; BSR set to: 1
 28194                           ;MISC.c: 222: {
 28195                           ;MISC.c: 223: return 32002;
 28196  0146D6  0E7D               	movlw	125
 28197  0146D8  0101               	movlb	1	; () banked
 28198  0146DA  6F83               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 28199  0146DC  0E02               	movlw	2
 28200  0146DE  0101               	movlb	1	; () banked
 28201  0146E0  6F82               	movwf	?_GetEnteredNumber& (0+255),b
 28202  0146E2  0012               	return	
 28203  0146E4                     l10688:
 28204                           
 28205                           ; BSR set to: 1
 28206                           ;MISC.c: 225: else if(*This == '-')
 28207  0146E4  0E2D               	movlw	45
 28208  0146E6  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28209  0146EA  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28210  0146EE  62DF               	cpfseq	indf2,c
 28211  0146F0  D004               	goto	l10694
 28212                           
 28213                           ; BSR set to: 1
 28214                           ;MISC.c: 226: {
 28215                           ;MISC.c: 227: negative = 1;
 28216  0146F2  0E01               	movlw	1
 28217  0146F4  0101               	movlb	1	; () banked
 28218  0146F6  6F89               	movwf	GetEnteredNumber@negative& (0+255),b
 28219  0146F8  D065               	goto	l10720
 28220  0146FA                     l10694:
 28221                           
 28222                           ; BSR set to: 1
 28223                           ;MISC.c: 231: else if(*This == 0)
 28224  0146FA  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28225  0146FE  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28226  014702  50DF               	movf	indf2,w,c
 28227  014704  A4D8               	btfss	status,2,c
 28228  014706  D061               	goto	l10722
 28229                           
 28230                           ; BSR set to: 1
 28231                           ;MISC.c: 232: {
 28232                           ;MISC.c: 233: return 32001;
 28233  014708  0E7D               	movlw	125
 28234  01470A  0101               	movlb	1	; () banked
 28235  01470C  6F83               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 28236  01470E  0E01               	movlw	1
 28237  014710  0101               	movlb	1	; () banked
 28238  014712  6F82               	movwf	?_GetEnteredNumber& (0+255),b
 28239  014714  0012               	return	
 28240  014716                     l10700:
 28241                           
 28242                           ; BSR set to: 1
 28243                           ;MISC.c: 237: {
 28244                           ;MISC.c: 238: temp = temp * 10;
 28245  014716  C18A  F17C         	movff	GetEnteredNumber@temp,___wmul@multiplier
 28246  01471A  C18B  F17D         	movff	GetEnteredNumber@temp+1,___wmul@multiplier+1
 28247  01471E  0E00               	movlw	0
 28248  014720  0101               	movlb	1	; () banked
 28249  014722  6F7F               	movwf	(___wmul@multiplicand+1)& (0+255),b
 28250  014724  0E0A               	movlw	10
 28251  014726  0101               	movlb	1	; () banked
 28252  014728  6F7E               	movwf	___wmul@multiplicand& (0+255),b
 28253  01472A  ECE6  F0B6         	call	___wmul	;wreg free
 28254  01472E  0101               	movlb	1	; () banked
 28255  014730  C17C  F18A         	movff	?___wmul,GetEnteredNumber@temp
 28256  014734  0101               	movlb	1	; () banked
 28257  014736  C17D  F18B         	movff	?___wmul+1,GetEnteredNumber@temp+1
 28258                           
 28259                           ; BSR set to: 1
 28260                           ;MISC.c: 239: if (*This >= 48 && *This <= 57)
 28261  01473A  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28262  01473E  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28263  014742  0E2F               	movlw	47
 28264  014744  64DF               	cpfsgt	indf2,c
 28265  014746  D02C               	goto	l10710
 28266                           
 28267                           ; BSR set to: 1
 28268  014748  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28269  01474C  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28270  014750  50DF               	movf	indf2,w,c
 28271  014752  0101               	movlb	1	; () banked
 28272  014754  6F84               	movwf	??_GetEnteredNumber& (0+255),b
 28273  014756  0E3A               	movlw	58
 28274  014758  0101               	movlb	1	; () banked
 28275  01475A  5D84               	subwf	??_GetEnteredNumber& (0+255),w,b
 28276  01475C  B0D8               	btfsc	status,0,c
 28277  01475E  D020               	goto	l10710
 28278                           
 28279                           ; BSR set to: 1
 28280                           ;MISC.c: 240: {
 28281                           ;MISC.c: 241: temp+= *This - 48;
 28282  014760  0ED0               	movlw	208
 28283  014762  0101               	movlb	1	; () banked
 28284  014764  6F84               	movwf	??_GetEnteredNumber& (0+255),b
 28285  014766  0EFF               	movlw	255
 28286  014768  6F85               	movwf	(??_GetEnteredNumber+1)& (0+255),b
 28287  01476A  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28288  01476E  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28289  014772  50DF               	movf	indf2,w,c
 28290  014774  0101               	movlb	1	; () banked
 28291  014776  6F86               	movwf	(??_GetEnteredNumber+2)& (0+255),b
 28292  014778  6B87               	clrf	(??_GetEnteredNumber+3)& (0+255),b
 28293  01477A  0101               	movlb	1	; () banked
 28294  01477C  5184               	movf	??_GetEnteredNumber& (0+255),w,b
 28295  01477E  0101               	movlb	1	; () banked
 28296  014780  2786               	addwf	(??_GetEnteredNumber+2)& (0+255),f,b
 28297  014782  0101               	movlb	1	; () banked
 28298  014784  5185               	movf	(??_GetEnteredNumber+1)& (0+255),w,b
 28299  014786  0101               	movlb	1	; () banked
 28300  014788  2387               	addwfc	(??_GetEnteredNumber+3)& (0+255),f,b
 28301  01478A  0101               	movlb	1	; () banked
 28302  01478C  5186               	movf	(??_GetEnteredNumber+2)& (0+255),w,b
 28303  01478E  0101               	movlb	1	; () banked
 28304  014790  278A               	addwf	GetEnteredNumber@temp& (0+255),f,b
 28305  014792  0101               	movlb	1	; () banked
 28306  014794  5187               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 28307  014796  0101               	movlb	1	; () banked
 28308  014798  238B               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 28309                           
 28310                           ; BSR set to: 1
 28311                           ;MISC.c: 242: i++;
 28312  01479A  0101               	movlb	1	; () banked
 28313  01479C  2B88               	incf	GetEnteredNumber@i& (0+255),f,b
 28314                           
 28315                           ;MISC.c: 243: }
 28316  01479E  D007               	goto	l10714
 28317  0147A0                     l10710:
 28318                           
 28319                           ; BSR set to: 1
 28320                           ;MISC.c: 244: else
 28321                           ;MISC.c: 245: {
 28322                           ;MISC.c: 246: return 32003;
 28323  0147A0  0E7D               	movlw	125
 28324  0147A2  0101               	movlb	1	; () banked
 28325  0147A4  6F83               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 28326  0147A6  0E03               	movlw	3
 28327  0147A8  0101               	movlb	1	; () banked
 28328  0147AA  6F82               	movwf	?_GetEnteredNumber& (0+255),b
 28329  0147AC  0012               	return	
 28330  0147AE                     l10714:
 28331                           
 28332                           ; BSR set to: 1
 28333                           ;MISC.c: 248: }
 28334                           ;MISC.c: 249: if(i>5)
 28335  0147AE  0E05               	movlw	5
 28336  0147B0  0101               	movlb	1	; () banked
 28337  0147B2  6588               	cpfsgt	GetEnteredNumber@i& (0+255),b
 28338  0147B4  D007               	goto	l10720
 28339                           
 28340                           ; BSR set to: 1
 28341                           ;MISC.c: 250: {
 28342                           ;MISC.c: 251: return 32004;
 28343  0147B6  0E7D               	movlw	125
 28344  0147B8  0101               	movlb	1	; () banked
 28345  0147BA  6F83               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 28346  0147BC  0E04               	movlw	4
 28347  0147BE  0101               	movlb	1	; () banked
 28348  0147C0  6F82               	movwf	?_GetEnteredNumber& (0+255),b
 28349  0147C2  0012               	return	
 28350  0147C4                     l10720:
 28351                           
 28352                           ; BSR set to: 1
 28353                           ;MISC.c: 253: }
 28354                           ;MISC.c: 254: This++;
 28355  0147C4  0101               	movlb	1	; () banked
 28356  0147C6  4B82               	infsnz	GetEnteredNumber@This& (0+255),f,b
 28357  0147C8  2B83               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 28358  0147CA                     l10722:
 28359                           
 28360                           ; BSR set to: 1
 28361  0147CA  C182  FFD9         	movff	GetEnteredNumber@This,fsr2l
 28362  0147CE  C183  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 28363  0147D2  50DF               	movf	indf2,w,c
 28364  0147D4  A4D8               	btfss	status,2,c
 28365  0147D6  D79F               	goto	l10700
 28366                           
 28367                           ; BSR set to: 1
 28368                           ;MISC.c: 255: }
 28369                           ;MISC.c: 256: if(negative)
 28370                           
 28371                           ; BSR set to: 1
 28372  0147D8  0101               	movlb	1	; () banked
 28373  0147DA  5189               	movf	GetEnteredNumber@negative& (0+255),w,b
 28374  0147DC  B4D8               	btfsc	status,2,c
 28375  0147DE  D006               	goto	l10728
 28376                           
 28377                           ; BSR set to: 1
 28378                           ;MISC.c: 257: {
 28379                           ;MISC.c: 258: temp = (temp * -1);
 28380  0147E0  0101               	movlb	1	; () banked
 28381  0147E2  6D8A               	negf	GetEnteredNumber@temp& (0+255),b
 28382  0147E4  0101               	movlb	1	; () banked
 28383  0147E6  1F8B               	comf	(GetEnteredNumber@temp+1)& (0+255),f,b
 28384  0147E8  B0D8               	btfsc	status,0,c
 28385  0147EA  2B8B               	incf	(GetEnteredNumber@temp+1)& (0+255),f,b
 28386  0147EC                     l10728:
 28387                           
 28388                           ; BSR set to: 1
 28389                           ;MISC.c: 259: }
 28390                           ;MISC.c: 260: return temp;
 28391  0147EC  C18A  F182         	movff	GetEnteredNumber@temp,?_GetEnteredNumber
 28392  0147F0  C18B  F183         	movff	GetEnteredNumber@temp+1,?_GetEnteredNumber+1
 28393  0147F4  0012               	return	
 28394  0147F6                     __end_of_GetEnteredNumber:
 28395                           	opt stack 0
 28396                           tblptru	equ	0xFF8
 28397                           tblptrh	equ	0xFF7
 28398                           tblptrl	equ	0xFF6
 28399                           tablat	equ	0xFF5
 28400                           prodh	equ	0xFF4
 28401                           prodl	equ	0xFF3
 28402                           intcon	equ	0xFF2
 28403                           postinc0	equ	0xFEE
 28404                           wreg	equ	0xFE8
 28405                           indf1	equ	0xFE7
 28406                           postinc1	equ	0xFE6
 28407                           postdec1	equ	0xFE5
 28408                           fsr1h	equ	0xFE2
 28409                           fsr1l	equ	0xFE1
 28410                           indf2	equ	0xFDF
 28411                           postinc2	equ	0xFDE
 28412                           postdec2	equ	0xFDD
 28413                           fsr2h	equ	0xFDA
 28414                           fsr2l	equ	0xFD9
 28415                           status	equ	0xFD8
 28416                           
 28417 ;; *************** function ___wmul *****************
 28418 ;; Defined at:
 28419 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 28420 ;; Parameters:    Size  Location     Type
 28421 ;;  multiplier      2   14[BANK1 ] unsigned int 
 28422 ;;  multiplicand    2   16[BANK1 ] unsigned int 
 28423 ;; Auto vars:     Size  Location     Type
 28424 ;;  product         2   18[BANK1 ] unsigned int 
 28425 ;; Return value:  Size  Location     Type
 28426 ;;                  2   14[BANK1 ] unsigned int 
 28427 ;; Registers used:
 28428 ;;		wreg, status,2, status,0, prodl, prodh
 28429 ;; Tracked objects:
 28430 ;;		On entry : 0/0
 28431 ;;		On exit  : 0/0
 28432 ;;		Unchanged: 0/0
 28433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28434 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28435 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28437 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 28438 ;;Total ram usage:        6 bytes
 28439 ;; Hardware stack levels used:    1
 28440 ;; Hardware stack levels required when called:    6
 28441 ;; This function calls:
 28442 ;;		Nothing
 28443 ;; This function is called by:
 28444 ;;		_GetEnteredNumber
 28445 ;;		_SetFreq
 28446 ;;		_sprintf
 28447 ;; This function uses a non-reentrant model
 28448 ;;
 28449                           
 28450                           	psect	text76
 28451  016DCC                     __ptext76:
 28452                           	opt stack 0
 28453  016DCC                     ___wmul:
 28454                           	opt stack 22
 28455                           
 28456                           ; BSR set to: 1
 28457                           ;incstack = 0
 28458  016DCC  0101               	movlb	1	; () banked
 28459  016DCE  517C               	movf	___wmul@multiplier& (0+255),w,b
 28460  016DD0  0101               	movlb	1	; () banked
 28461  016DD2  037E               	mulwf	___wmul@multiplicand& (0+255),b
 28462  016DD4  CFF3 F180          	movff	prodl,___wmul@product
 28463  016DD8  CFF4 F181          	movff	prodh,___wmul@product+1
 28464  016DDC  0101               	movlb	1	; () banked
 28465  016DDE  517C               	movf	___wmul@multiplier& (0+255),w,b
 28466  016DE0  0101               	movlb	1	; () banked
 28467  016DE2  037F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 28468  016DE4  50F3               	movf	prodl,w,c
 28469  016DE6  0101               	movlb	1	; () banked
 28470  016DE8  2781               	addwf	(___wmul@product+1)& (0+255),f,b
 28471  016DEA  0101               	movlb	1	; () banked
 28472  016DEC  517D               	movf	(___wmul@multiplier+1)& (0+255),w,b
 28473  016DEE  0101               	movlb	1	; () banked
 28474  016DF0  037E               	mulwf	___wmul@multiplicand& (0+255),b
 28475  016DF2  50F3               	movf	prodl,w,c
 28476  016DF4  0101               	movlb	1	; () banked
 28477  016DF6  2781               	addwf	(___wmul@product+1)& (0+255),f,b
 28478                           
 28479                           ; BSR set to: 1
 28480  016DF8  C180  F17C         	movff	___wmul@product,?___wmul
 28481  016DFC  C181  F17D         	movff	___wmul@product+1,?___wmul+1
 28482  016E00  0012               	return	
 28483  016E02                     __end_of___wmul:
 28484                           	opt stack 0
 28485                           tblptru	equ	0xFF8
 28486                           tblptrh	equ	0xFF7
 28487                           tblptrl	equ	0xFF6
 28488                           tablat	equ	0xFF5
 28489                           prodh	equ	0xFF4
 28490                           prodl	equ	0xFF3
 28491                           intcon	equ	0xFF2
 28492                           postinc0	equ	0xFEE
 28493                           wreg	equ	0xFE8
 28494                           indf1	equ	0xFE7
 28495                           postinc1	equ	0xFE6
 28496                           postdec1	equ	0xFE5
 28497                           fsr1h	equ	0xFE2
 28498                           fsr1l	equ	0xFE1
 28499                           indf2	equ	0xFDF
 28500                           postinc2	equ	0xFDE
 28501                           postdec2	equ	0xFDD
 28502                           fsr2h	equ	0xFDA
 28503                           fsr2l	equ	0xFD9
 28504                           status	equ	0xFD8
 28505                           
 28506 ;; *************** function _low_isr *****************
 28507 ;; Defined at:
 28508 ;;		line 100 in file "interrupts.c"
 28509 ;; Parameters:    Size  Location     Type
 28510 ;;		None
 28511 ;; Auto vars:     Size  Location     Type
 28512 ;;  TEMP_Rxdata   100    0[BANK0 ] unsigned char [100]
 28513 ;;  LCD_TEMP       16  100[BANK0 ] unsigned char [16]
 28514 ;;  i               2  116[BANK0 ] int 
 28515 ;;  rx              1  119[BANK0 ] unsigned char 
 28516 ;;  j               1  118[BANK0 ] unsigned char 
 28517 ;; Return value:  Size  Location     Type
 28518 ;;		None               void
 28519 ;; Registers used:
 28520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28521 ;; Tracked objects:
 28522 ;;		On entry : 0/0
 28523 ;;		On exit  : 0/0
 28524 ;;		Unchanged: 0/0
 28525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28527 ;;      Locals:         0     120       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28528 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28529 ;;      Totals:        20     120       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28530 ;;Total ram usage:      140 bytes
 28531 ;; Hardware stack levels used:    1
 28532 ;; Hardware stack levels required when called:    5
 28533 ;; This function calls:
 28534 ;;		_WriteUSART
 28535 ;;		i1_BufferCopy
 28536 ;;		i1_ClearLCD
 28537 ;;		i1_LCDPrintChar
 28538 ;;		i1_LCDPrintString
 28539 ;;		i1_ReadUSART
 28540 ;;		i1_SetLCDcursor
 28541 ;;		i1_UARTstring
 28542 ;;		i1_cleanBuffer
 28543 ;; This function is called by:
 28544 ;;		Interrupt level 1
 28545 ;; This function uses a non-reentrant model
 28546 ;;
 28547                           
 28548                           	psect	intcodelo
 28549  000018                     __pintcodelo:
 28550                           	opt stack 0
 28551  000018                     _low_isr:
 28552                           	opt stack 19
 28553                           
 28554                           ; BSR set to: 1
 28555                           ;incstack = 0
 28556  000018  CFD8 F016          	movff	status,??_low_isr+3
 28557  00001C  CFE8 F017          	movff	wreg,??_low_isr+4
 28558  000020  CFE0 F018          	movff	bsr,??_low_isr+5
 28559  000024  CFFA F019          	movff	pclath,??_low_isr+6
 28560  000028  CFFB F01A          	movff	pclatu,??_low_isr+7
 28561  00002C  CFE9 F01B          	movff	fsr0l,??_low_isr+8
 28562  000030  CFEA F01C          	movff	fsr0h,??_low_isr+9
 28563  000034  CFE1 F01D          	movff	fsr1l,??_low_isr+10
 28564  000038  CFE2 F01E          	movff	fsr1h,??_low_isr+11
 28565  00003C  CFD9 F01F          	movff	fsr2l,??_low_isr+12
 28566  000040  CFDA F020          	movff	fsr2h,??_low_isr+13
 28567  000044  CFF3 F021          	movff	prodl,??_low_isr+14
 28568  000048  CFF4 F022          	movff	prodh,??_low_isr+15
 28569  00004C  CFF6 F023          	movff	tblptrl,??_low_isr+16
 28570  000050  CFF7 F024          	movff	tblptrh,??_low_isr+17
 28571  000054  CFF8 F025          	movff	tblptru,??_low_isr+18
 28572  000058  CFF5 F026          	movff	tablat,??_low_isr+19
 28573                           
 28574                           ;interrupts.c: 109: unsigned char rx;
 28575                           ;interrupts.c: 110: unsigned char TEMP_Rxdata[100];
 28576                           ;interrupts.c: 111: unsigned char LCD_TEMP [16];
 28577                           ;interrupts.c: 112: int i=0;
 28578  00005C  0E00               	movlw	0
 28579  00005E  0100               	movlb	0	; () banked
 28580  000060  6FD5               	movwf	(low_isr@i+1)& (0+255),b
 28581  000062  0E00               	movlw	0
 28582  000064  0100               	movlb	0	; () banked
 28583  000066  6FD4               	movwf	low_isr@i& (0+255),b
 28584                           
 28585                           ;interrupts.c: 113: unsigned char j=0;
 28586  000068  0E00               	movlw	0
 28587  00006A  0100               	movlb	0	; () banked
 28588  00006C  6FD6               	movwf	low_isr@j& (0+255),b
 28589                           
 28590                           ; BSR set to: 0
 28591                           ;interrupts.c: 115: INTCONbits.PEIE = 0;
 28592  00006E  9CF2               	bcf	intcon,6,c	;volatile
 28593                           
 28594                           ; BSR set to: 0
 28595                           ;interrupts.c: 118: if(PIR1bits.RCIF == 1)
 28596  000070  AA9E               	btfss	3998,5,c	;volatile
 28597  000072  D156               	goto	i1l12438
 28598                           
 28599                           ; BSR set to: 0
 28600                           ;interrupts.c: 119: {
 28601                           ;interrupts.c: 120: PIE1bits.RCIE = 0;
 28602  000074  9A9D               	bcf	3997,5,c	;volatile
 28603                           
 28604                           ;interrupts.c: 121: RCSTAbits.CREN = 0;
 28605  000076  98AB               	bcf	4011,4,c	;volatile
 28606                           
 28607                           ; BSR set to: 0
 28608                           ;interrupts.c: 122: rx = ReadUSART();
 28609  000078  EC7B  F0B7         	call	i1_ReadUSART	;wreg free
 28610  00007C  0100               	movlb	0	; () banked
 28611  00007E  6FD7               	movwf	low_isr@rx& (0+255),b
 28612                           
 28613                           ; BSR set to: 0
 28614                           ;interrupts.c: 124: if(rx != '\n' && rx != '\r')
 28615  000080  0100               	movlb	0	; () banked
 28616  000082  51D7               	movf	low_isr@rx& (0+255),w,b
 28617  000084  0A0A               	xorlw	10
 28618  000086  B4D8               	btfsc	status,2,c
 28619  000088  D0CA               	goto	i1l12408
 28620                           
 28621                           ; BSR set to: 0
 28622  00008A  0100               	movlb	0	; () banked
 28623  00008C  51D7               	movf	low_isr@rx& (0+255),w,b
 28624  00008E  0A0D               	xorlw	13
 28625  000090  B4D8               	btfsc	status,2,c
 28626  000092  D0C5               	goto	i1l12408
 28627                           
 28628                           ; BSR set to: 0
 28629                           ;interrupts.c: 125: {
 28630                           ;interrupts.c: 126: if(rx == 0x07f)
 28631  000094  0100               	movlb	0	; () banked
 28632  000096  51D7               	movf	low_isr@rx& (0+255),w,b
 28633  000098  0A7F               	xorlw	127
 28634  00009A  A4D8               	btfss	status,2,c
 28635  00009C  D08C               	goto	i1l12390
 28636                           
 28637                           ; BSR set to: 0
 28638                           ;interrupts.c: 127: {
 28639                           ;interrupts.c: 128: if(bufferCount !=0)
 28640  00009E  0100               	movlb	0	; () banked
 28641  0000A0  51D8               	movf	_bufferCount& (0+255),w,b
 28642  0000A2  B4D8               	btfsc	status,2,c
 28643  0000A4  D0A5               	goto	i1l12400
 28644                           
 28645                           ; BSR set to: 0
 28646                           ;interrupts.c: 129: {
 28647                           ;interrupts.c: 130: UARTstring("\r");
 28648  0000A6  0EFF               	movlw	high STR_1
 28649  0000A8  6E0D               	movwf	i1UARTstring@data+1,c
 28650  0000AA  0EFD               	movlw	low STR_1
 28651  0000AC  6E0C               	movwf	i1UARTstring@data,c
 28652  0000AE  EC7D  F0B0         	call	i1_UARTstring	;wreg free
 28653                           
 28654                           ;interrupts.c: 131: for(i=0;i<=bufferCount;i++)
 28655  0000B2  0E00               	movlw	0
 28656  0000B4  0100               	movlb	0	; () banked
 28657  0000B6  6FD5               	movwf	(low_isr@i+1)& (0+255),b
 28658  0000B8  0E00               	movlw	0
 28659  0000BA  0100               	movlb	0	; () banked
 28660  0000BC  6FD4               	movwf	low_isr@i& (0+255),b
 28661  0000BE  D009               	goto	i1l12362
 28662  0000C0                     i1l12358:
 28663                           
 28664                           ; BSR set to: 0
 28665                           ;interrupts.c: 132: {
 28666                           ;interrupts.c: 133: UARTstring(" ");
 28667  0000C0  0EF9               	movlw	high (STR_206+15)
 28668  0000C2  6E0D               	movwf	i1UARTstring@data+1,c
 28669  0000C4  0EEE               	movlw	low (STR_206+15)
 28670  0000C6  6E0C               	movwf	i1UARTstring@data,c
 28671  0000C8  EC7D  F0B0         	call	i1_UARTstring	;wreg free
 28672  0000CC  0100               	movlb	0	; () banked
 28673  0000CE  4BD4               	infsnz	low_isr@i& (0+255),f,b
 28674  0000D0  2BD5               	incf	(low_isr@i+1)& (0+255),f,b
 28675  0000D2                     i1l12362:
 28676                           
 28677                           ; BSR set to: 0
 28678  0000D2  0100               	movlb	0	; () banked
 28679  0000D4  51D8               	movf	_bufferCount& (0+255),w,b
 28680  0000D6  6E13               	movwf	??_low_isr& (0+255),c
 28681  0000D8  6A14               	clrf	(??_low_isr+1)& (0+255),c
 28682  0000DA  5014               	movf	??_low_isr+1,w,c
 28683  0000DC  0A80               	xorlw	128
 28684  0000DE  6E15               	movwf	(??_low_isr+2)& (0+255),c
 28685  0000E0  0100               	movlb	0	; () banked
 28686  0000E2  51D4               	movf	low_isr@i& (0+255),w,b
 28687  0000E4  5C13               	subwf	??_low_isr,w,c
 28688  0000E6  0100               	movlb	0	; () banked
 28689  0000E8  51D5               	movf	(low_isr@i+1)& (0+255),w,b
 28690  0000EA  0A80               	xorlw	128
 28691  0000EC  5815               	subwfb	(??_low_isr+2)& (0+255),w,c
 28692  0000EE  B0D8               	btfsc	status,0,c
 28693  0000F0  D7E7               	goto	i1l12358
 28694                           
 28695                           ; BSR set to: 0
 28696                           ;interrupts.c: 134: }
 28697                           ;interrupts.c: 135: UARTstring("\r");
 28698                           
 28699                           ; BSR set to: 0
 28700  0000F2  0EFF               	movlw	high STR_1
 28701  0000F4  6E0D               	movwf	i1UARTstring@data+1,c
 28702  0000F6  0EFD               	movlw	low STR_1
 28703  0000F8  6E0C               	movwf	i1UARTstring@data,c
 28704  0000FA  EC7D  F0B0         	call	i1_UARTstring	;wreg free
 28705                           
 28706                           ;interrupts.c: 136: UARTstring(">");
 28707  0000FE  0EF5               	movlw	high (STR_16+27)
 28708  000100  6E0D               	movwf	i1UARTstring@data+1,c
 28709  000102  0EE5               	movlw	low (STR_16+27)
 28710  000104  6E0C               	movwf	i1UARTstring@data,c
 28711  000106  EC7D  F0B0         	call	i1_UARTstring	;wreg free
 28712                           
 28713                           ;interrupts.c: 137: bufferCount--;
 28714  00010A  0100               	movlb	0	; () banked
 28715  00010C  07D8               	decf	_bufferCount& (0+255),f,b
 28716                           
 28717                           ; BSR set to: 0
 28718                           ;interrupts.c: 138: TEMP_Rxdata[bufferCount] = 0;
 28719  00010E  0100               	movlb	0	; () banked
 28720  000110  51D8               	movf	_bufferCount& (0+255),w,b
 28721  000112  0D01               	mullw	1
 28722  000114  0100               	movlb	0	; () banked
 28723  000116  0E60               	movlw	low low_isr@TEMP_Rxdata
 28724  000118  24F3               	addwf	prodl,w,c
 28725  00011A  6ED9               	movwf	fsr2l,c
 28726  00011C  0100               	movlb	0	; () banked
 28727  00011E  0E00               	movlw	high low_isr@TEMP_Rxdata
 28728  000120  20F4               	addwfc	prodh,w,c
 28729  000122  6EDA               	movwf	fsr2h,c
 28730  000124  0E00               	movlw	0
 28731  000126  6EDF               	movwf	indf2,c
 28732                           
 28733                           ; BSR set to: 0
 28734                           ;interrupts.c: 139: UARTstring(TEMP_Rxdata);
 28735  000128  0100               	movlb	0	; () banked
 28736  00012A  0E00               	movlw	high low_isr@TEMP_Rxdata
 28737  00012C  6E0D               	movwf	i1UARTstring@data+1,c
 28738  00012E  0100               	movlb	0	; () banked
 28739  000130  0E60               	movlw	low low_isr@TEMP_Rxdata
 28740  000132  6E0C               	movwf	i1UARTstring@data,c
 28741  000134  EC7D  F0B0         	call	i1_UARTstring	;wreg free
 28742                           
 28743                           ;interrupts.c: 140: if(bufferCount <15)
 28744  000138  0E0F               	movlw	15
 28745  00013A  0100               	movlb	0	; () banked
 28746  00013C  5DD8               	subwf	_bufferCount& (0+255),w,b
 28747  00013E  B0D8               	btfsc	status,0,c
 28748  000140  D057               	goto	i1l12400
 28749                           
 28750                           ; BSR set to: 0
 28751                           ;interrupts.c: 141: {
 28752                           ;interrupts.c: 142: for(j=0; j<15;j++)
 28753  000142  0E00               	movlw	0
 28754  000144  0100               	movlb	0	; () banked
 28755  000146  6FD6               	movwf	low_isr@j& (0+255),b
 28756  000148  D01A               	goto	L40
 28757  00014A                     i1l12380:
 28758                           
 28759                           ; BSR set to: 0
 28760                           ;interrupts.c: 143: {
 28761                           ;interrupts.c: 144: LCD_TEMP[j] = TEMP_Rxdata[j];
 28762  00014A  0100               	movlb	0	; () banked
 28763  00014C  51D6               	movf	low_isr@j& (0+255),w,b
 28764  00014E  0D01               	mullw	1
 28765  000150  0100               	movlb	0	; () banked
 28766  000152  0E60               	movlw	low low_isr@TEMP_Rxdata
 28767  000154  24F3               	addwf	prodl,w,c
 28768  000156  6ED9               	movwf	fsr2l,c
 28769  000158  0100               	movlb	0	; () banked
 28770  00015A  0E00               	movlw	high low_isr@TEMP_Rxdata
 28771  00015C  20F4               	addwfc	prodh,w,c
 28772  00015E  6EDA               	movwf	fsr2h,c
 28773  000160  0100               	movlb	0	; () banked
 28774  000162  51D6               	movf	low_isr@j& (0+255),w,b
 28775  000164  0D01               	mullw	1
 28776  000166  0100               	movlb	0	; () banked
 28777  000168  0EC4               	movlw	low low_isr@LCD_TEMP
 28778  00016A  24F3               	addwf	prodl,w,c
 28779  00016C  6EE1               	movwf	fsr1l,c
 28780  00016E  0100               	movlb	0	; () banked
 28781  000170  0E00               	movlw	high low_isr@LCD_TEMP
 28782  000172  20F4               	addwfc	prodh,w,c
 28783  000174  6EE2               	movwf	fsr1h,c
 28784  000176  CFDF FFE7          	movff	indf2,indf1
 28785                           
 28786                           ; BSR set to: 0
 28787  00017A  0100               	movlb	0	; () banked
 28788  00017C  2BD6               	incf	low_isr@j& (0+255),f,b
 28789  00017E                     L40:
 28790                           
 28791                           ; BSR set to: 0
 28792  00017E  0E0E               	movlw	14
 28793  000180  0100               	movlb	0	; () banked
 28794  000182  65D6               	cpfsgt	low_isr@j& (0+255),b
 28795  000184  D7E2               	goto	i1l12380
 28796                           
 28797                           ; BSR set to: 0
 28798                           ;interrupts.c: 145: }
 28799                           ;interrupts.c: 146: ClearLCD();
 28800                           
 28801                           ; BSR set to: 0
 28802  000186  EC1A  F0B8         	call	i1_ClearLCD	;wreg free
 28803                           
 28804                           ;interrupts.c: 147: SetLCDcursor(0, 0);
 28805  00018A  0E00               	movlw	0
 28806  00018C  6E0F               	movwf	i1SetLCDcursor@Col,c
 28807  00018E  0E00               	movlw	0
 28808  000190  ECE8  F0B7         	call	i1_SetLCDcursor
 28809                           
 28810                           ;interrupts.c: 148: LCDPrintChar('>');
 28811  000194  0E3E               	movlw	62
 28812  000196  EC51  F0B8         	call	i1_LCDPrintChar
 28813                           
 28814                           ;interrupts.c: 149: SetLCDcursor(0, 1);
 28815  00019A  0E01               	movlw	1
 28816  00019C  6E0F               	movwf	i1SetLCDcursor@Col,c
 28817  00019E  0E00               	movlw	0
 28818  0001A0  ECE8  F0B7         	call	i1_SetLCDcursor
 28819                           
 28820                           ;interrupts.c: 150: LCDPrintString(LCD_TEMP);
 28821  0001A4  0100               	movlb	0	; () banked
 28822  0001A6  0E00               	movlw	high low_isr@LCD_TEMP
 28823  0001A8  6E10               	movwf	i1LCDPrintString@Text+1,c
 28824  0001AA  0100               	movlb	0	; () banked
 28825  0001AC  0EC4               	movlw	low low_isr@LCD_TEMP
 28826  0001AE  6E0F               	movwf	i1LCDPrintString@Text,c
 28827  0001B0  ECED  F0B3         	call	i1_LCDPrintString	;wreg free
 28828  0001B4  D01D               	goto	i1l12400
 28829  0001B6                     i1l12390:
 28830                           
 28831                           ;interrupts.c: 154: else
 28832                           ;interrupts.c: 155: {
 28833                           ;interrupts.c: 156: WriteUSART(rx);
 28834  0001B6  0100               	movlb	0	; () banked
 28835  0001B8  51D7               	movf	low_isr@rx& (0+255),w,b
 28836  0001BA  EC2F  F0B8         	call	_WriteUSART
 28837                           
 28838                           ;interrupts.c: 157: if(bufferCount < 15)
 28839  0001BE  0E0F               	movlw	15
 28840  0001C0  0100               	movlb	0	; () banked
 28841  0001C2  5DD8               	subwf	_bufferCount& (0+255),w,b
 28842  0001C4  B0D8               	btfsc	status,0,c
 28843  0001C6  D004               	goto	i1l12396
 28844                           
 28845                           ; BSR set to: 0
 28846                           ;interrupts.c: 158: {
 28847                           ;interrupts.c: 159: LCDPrintChar(rx);
 28848  0001C8  0100               	movlb	0	; () banked
 28849  0001CA  51D7               	movf	low_isr@rx& (0+255),w,b
 28850  0001CC  EC51  F0B8         	call	i1_LCDPrintChar
 28851  0001D0                     i1l12396:
 28852                           
 28853                           ;interrupts.c: 160: }
 28854                           ;interrupts.c: 161: TEMP_Rxdata[bufferCount] = rx;
 28855  0001D0  0100               	movlb	0	; () banked
 28856  0001D2  51D8               	movf	_bufferCount& (0+255),w,b
 28857  0001D4  0D01               	mullw	1
 28858  0001D6  0100               	movlb	0	; () banked
 28859  0001D8  0E60               	movlw	low low_isr@TEMP_Rxdata
 28860  0001DA  24F3               	addwf	prodl,w,c
 28861  0001DC  6ED9               	movwf	fsr2l,c
 28862  0001DE  0100               	movlb	0	; () banked
 28863  0001E0  0E00               	movlw	high low_isr@TEMP_Rxdata
 28864  0001E2  20F4               	addwfc	prodh,w,c
 28865  0001E4  6EDA               	movwf	fsr2h,c
 28866  0001E6  0100               	movlb	0	; () banked
 28867  0001E8  C0D7  FFDF         	movff	low_isr@rx,indf2
 28868                           
 28869                           ; BSR set to: 0
 28870                           ;interrupts.c: 162: bufferCount++;
 28871  0001EC  0100               	movlb	0	; () banked
 28872  0001EE  2BD8               	incf	_bufferCount& (0+255),f,b
 28873  0001F0                     i1l12400:
 28874                           
 28875                           ;interrupts.c: 163: }
 28876                           ;interrupts.c: 164: if(bufferCount>=99)
 28877  0001F0  0E62               	movlw	98
 28878  0001F2  0100               	movlb	0	; () banked
 28879  0001F4  65D8               	cpfsgt	_bufferCount& (0+255),b
 28880  0001F6  D092               	goto	i1l12434
 28881                           
 28882                           ; BSR set to: 0
 28883                           ;interrupts.c: 165: {
 28884                           ;interrupts.c: 166: UARTstring("\r\nBuffer overflow! Deleting Buffer \r\n");
 28885  0001F8  0EF3               	movlw	high STR_5
 28886  0001FA  6E0D               	movwf	i1UARTstring@data+1,c
 28887  0001FC  0E94               	movlw	low STR_5
 28888  0001FE  6E0C               	movwf	i1UARTstring@data,c
 28889  000200  EC7D  F0B0         	call	i1_UARTstring	;wreg free
 28890                           
 28891                           ;interrupts.c: 167: cleanBuffer(TEMP_Rxdata, 100);
 28892  000204  0100               	movlb	0	; () banked
 28893  000206  0E00               	movlw	high low_isr@TEMP_Rxdata
 28894  000208  6E02               	movwf	i1cleanBuffer@data+1,c
 28895  00020A  0100               	movlb	0	; () banked
 28896  00020C  0E60               	movlw	low low_isr@TEMP_Rxdata
 28897  00020E  6E01               	movwf	i1cleanBuffer@data,c
 28898  000210  0E00               	movlw	0
 28899  000212  6E04               	movwf	i1cleanBuffer@count+1,c
 28900  000214  0E64               	movlw	100
 28901  000216  6E03               	movwf	i1cleanBuffer@count,c
 28902  000218  ECC8  F0B6         	call	i1_cleanBuffer	;wreg free
 28903  00021C  D07C               	goto	L39
 28904  00021E                     i1l12408:
 28905                           
 28906                           ; BSR set to: 0
 28907                           ;interrupts.c: 172: else if((rx == '\n' || rx == '\r') && bufferCount == 0)
 28908  00021E  0100               	movlb	0	; () banked
 28909  000220  51D7               	movf	low_isr@rx& (0+255),w,b
 28910  000222  0A0A               	xorlw	10
 28911  000224  B4D8               	btfsc	status,2,c
 28912  000226  D005               	goto	i1l56
 28913                           
 28914                           ; BSR set to: 0
 28915  000228  0100               	movlb	0	; () banked
 28916  00022A  51D7               	movf	low_isr@rx& (0+255),w,b
 28917  00022C  0A0D               	xorlw	13
 28918  00022E  A4D8               	btfss	status,2,c
 28919  000230  D030               	goto	i1l54
 28920  000232                     i1l56:
 28921                           
 28922                           ; BSR set to: 0
 28923  000232  0100               	movlb	0	; () banked
 28924  000234  67D8               	tstfsz	_bufferCount& (0+255),b
 28925  000236  D02D               	goto	i1l54
 28926                           
 28927                           ; BSR set to: 0
 28928                           ;interrupts.c: 173: {
 28929                           ;interrupts.c: 174: TEMP_Rxdata[bufferCount] = rx;
 28930  000238  0100               	movlb	0	; () banked
 28931  00023A  51D8               	movf	_bufferCount& (0+255),w,b
 28932  00023C  0D01               	mullw	1
 28933  00023E  0100               	movlb	0	; () banked
 28934  000240  0E60               	movlw	low low_isr@TEMP_Rxdata
 28935  000242  24F3               	addwf	prodl,w,c
 28936  000244  6ED9               	movwf	fsr2l,c
 28937  000246  0100               	movlb	0	; () banked
 28938  000248  0E00               	movlw	high low_isr@TEMP_Rxdata
 28939  00024A  20F4               	addwfc	prodh,w,c
 28940  00024C  6EDA               	movwf	fsr2h,c
 28941  00024E  0100               	movlb	0	; () banked
 28942  000250  C0D7  FFDF         	movff	low_isr@rx,indf2
 28943                           
 28944                           ; BSR set to: 0
 28945                           ;interrupts.c: 175: BufferCopy(TEMP_Rxdata, Rxdata, 100,0);
 28946  000254  0100               	movlb	0	; () banked
 28947  000256  0E00               	movlw	high low_isr@TEMP_Rxdata
 28948  000258  6E0A               	movwf	i1BufferCopy@from+1,c
 28949  00025A  0100               	movlb	0	; () banked
 28950  00025C  0E60               	movlw	low low_isr@TEMP_Rxdata
 28951  00025E  6E09               	movwf	i1BufferCopy@from,c
 28952  000260  0103               	movlb	3	; () banked
 28953  000262  0E03               	movlw	high _Rxdata
 28954  000264  6E0C               	movwf	i1BufferCopy@to+1,c
 28955  000266  0103               	movlb	3	; () banked
 28956  000268  0E64               	movlw	low _Rxdata
 28957  00026A  6E0B               	movwf	i1BufferCopy@to,c
 28958  00026C  0E64               	movlw	100
 28959  00026E  6E0D               	movwf	i1BufferCopy@count,c
 28960  000270  0E00               	movlw	0
 28961  000272  6E0E               	movwf	i1BufferCopy@shift,c
 28962  000274  EC0B  F0AF         	call	i1_BufferCopy	;wreg free
 28963                           
 28964                           ;interrupts.c: 176: cleanBuffer(TEMP_Rxdata, 100);
 28965  000278  0100               	movlb	0	; () banked
 28966  00027A  0E00               	movlw	high low_isr@TEMP_Rxdata
 28967  00027C  6E02               	movwf	i1cleanBuffer@data+1,c
 28968  00027E  0100               	movlb	0	; () banked
 28969  000280  0E60               	movlw	low low_isr@TEMP_Rxdata
 28970  000282  6E01               	movwf	i1cleanBuffer@data,c
 28971  000284  0E00               	movlw	0
 28972  000286  6E04               	movwf	i1cleanBuffer@count+1,c
 28973  000288  0E64               	movlw	100
 28974  00028A  6E03               	movwf	i1cleanBuffer@count,c
 28975  00028C  ECC8  F0B6         	call	i1_cleanBuffer	;wreg free
 28976                           
 28977                           ;interrupts.c: 177: }
 28978  000290  D045               	goto	i1l12434
 28979  000292                     i1l54:
 28980                           
 28981                           ; BSR set to: 0
 28982                           ;interrupts.c: 178: else
 28983                           ;interrupts.c: 179: {
 28984                           ;interrupts.c: 180: if(TEMP_Rxdata[0] == 0 && TEMP_Rxdata[1] != 0)
 28985  000292  0100               	movlb	0	; () banked
 28986  000294  6760               	tstfsz	low_isr@TEMP_Rxdata& (0+255),b
 28987  000296  D017               	goto	i1l12422
 28988                           
 28989                           ; BSR set to: 0
 28990  000298  0100               	movlb	0	; () banked
 28991  00029A  5161               	movf	(low_isr@TEMP_Rxdata+1)& (0+255),w,b
 28992  00029C  B4D8               	btfsc	status,2,c
 28993  00029E  D013               	goto	i1l12422
 28994                           
 28995                           ; BSR set to: 0
 28996                           ;interrupts.c: 181: {
 28997                           ;interrupts.c: 182: BufferCopy(TEMP_Rxdata, Rxdata, 100,1);
 28998  0002A0  0100               	movlb	0	; () banked
 28999  0002A2  0E00               	movlw	high low_isr@TEMP_Rxdata
 29000  0002A4  6E0A               	movwf	i1BufferCopy@from+1,c
 29001  0002A6  0100               	movlb	0	; () banked
 29002  0002A8  0E60               	movlw	low low_isr@TEMP_Rxdata
 29003  0002AA  6E09               	movwf	i1BufferCopy@from,c
 29004  0002AC  0103               	movlb	3	; () banked
 29005  0002AE  0E03               	movlw	high _Rxdata
 29006  0002B0  6E0C               	movwf	i1BufferCopy@to+1,c
 29007  0002B2  0103               	movlb	3	; () banked
 29008  0002B4  0E64               	movlw	low _Rxdata
 29009  0002B6  6E0B               	movwf	i1BufferCopy@to,c
 29010  0002B8  0E64               	movlw	100
 29011  0002BA  6E0D               	movwf	i1BufferCopy@count,c
 29012  0002BC  0E01               	movlw	1
 29013  0002BE  6E0E               	movwf	i1BufferCopy@shift,c
 29014  0002C0  EC0B  F0AF         	call	i1_BufferCopy	;wreg free
 29015                           
 29016                           ;interrupts.c: 183: }
 29017  0002C4  D012               	goto	i1l12424
 29018  0002C6                     i1l12422:
 29019                           
 29020                           ;interrupts.c: 184: else
 29021                           ;interrupts.c: 185: {
 29022                           ;interrupts.c: 186: BufferCopy(TEMP_Rxdata, Rxdata, 100,0);
 29023  0002C6  0100               	movlb	0	; () banked
 29024  0002C8  0E00               	movlw	high low_isr@TEMP_Rxdata
 29025  0002CA  6E0A               	movwf	i1BufferCopy@from+1,c
 29026  0002CC  0100               	movlb	0	; () banked
 29027  0002CE  0E60               	movlw	low low_isr@TEMP_Rxdata
 29028  0002D0  6E09               	movwf	i1BufferCopy@from,c
 29029  0002D2  0103               	movlb	3	; () banked
 29030  0002D4  0E03               	movlw	high _Rxdata
 29031  0002D6  6E0C               	movwf	i1BufferCopy@to+1,c
 29032  0002D8  0103               	movlb	3	; () banked
 29033  0002DA  0E64               	movlw	low _Rxdata
 29034  0002DC  6E0B               	movwf	i1BufferCopy@to,c
 29035  0002DE  0E64               	movlw	100
 29036  0002E0  6E0D               	movwf	i1BufferCopy@count,c
 29037  0002E2  0E00               	movlw	0
 29038  0002E4  6E0E               	movwf	i1BufferCopy@shift,c
 29039  0002E6  EC0B  F0AF         	call	i1_BufferCopy	;wreg free
 29040  0002EA                     i1l12424:
 29041                           
 29042                           ;interrupts.c: 187: }
 29043                           ;interrupts.c: 188: ClearLCD();
 29044  0002EA  EC1A  F0B8         	call	i1_ClearLCD	;wreg free
 29045                           
 29046                           ;interrupts.c: 189: SetLCDcursor(0, 0);
 29047  0002EE  0E00               	movlw	0
 29048  0002F0  6E0F               	movwf	i1SetLCDcursor@Col,c
 29049  0002F2  0E00               	movlw	0
 29050  0002F4  ECE8  F0B7         	call	i1_SetLCDcursor
 29051                           
 29052                           ;interrupts.c: 190: LCDPrintChar('>');
 29053  0002F8  0E3E               	movlw	62
 29054  0002FA  EC51  F0B8         	call	i1_LCDPrintChar
 29055                           
 29056                           ;interrupts.c: 191: cleanBuffer(TEMP_Rxdata, 100);
 29057  0002FE  0100               	movlb	0	; () banked
 29058  000300  0E00               	movlw	high low_isr@TEMP_Rxdata
 29059  000302  6E02               	movwf	i1cleanBuffer@data+1,c
 29060  000304  0100               	movlb	0	; () banked
 29061  000306  0E60               	movlw	low low_isr@TEMP_Rxdata
 29062  000308  6E01               	movwf	i1cleanBuffer@data,c
 29063  00030A  0E00               	movlw	0
 29064  00030C  6E04               	movwf	i1cleanBuffer@count+1,c
 29065  00030E  0E64               	movlw	100
 29066  000310  6E03               	movwf	i1cleanBuffer@count,c
 29067  000312  ECC8  F0B6         	call	i1_cleanBuffer	;wreg free
 29068  000316                     L39:
 29069                           
 29070                           ;interrupts.c: 192: bufferCount=0;
 29071  000316  0E00               	movlw	0
 29072  000318  0100               	movlb	0	; () banked
 29073  00031A  6FD8               	movwf	_bufferCount& (0+255),b
 29074  00031C                     i1l12434:
 29075                           
 29076                           ;interrupts.c: 193: }
 29077                           ;interrupts.c: 194: PIE1bits.RCIE = 1;
 29078  00031C  8A9D               	bsf	3997,5,c	;volatile
 29079                           
 29080                           ;interrupts.c: 195: RCSTAbits.CREN = 1;
 29081  00031E  88AB               	bsf	4011,4,c	;volatile
 29082  000320                     i1l12438:
 29083                           
 29084                           ;interrupts.c: 196: }
 29085                           ;interrupts.c: 197: INTCONbits.PEIE = 1;
 29086  000320  8CF2               	bsf	intcon,6,c	;volatile
 29087  000322  C026  FFF5         	movff	??_low_isr+19,tablat
 29088  000326  C025  FFF8         	movff	??_low_isr+18,tblptru
 29089  00032A  C024  FFF7         	movff	??_low_isr+17,tblptrh
 29090  00032E  C023  FFF6         	movff	??_low_isr+16,tblptrl
 29091  000332  C022  FFF4         	movff	??_low_isr+15,prodh
 29092  000336  C021  FFF3         	movff	??_low_isr+14,prodl
 29093  00033A  C020  FFDA         	movff	??_low_isr+13,fsr2h
 29094  00033E  C01F  FFD9         	movff	??_low_isr+12,fsr2l
 29095  000342  C01E  FFE2         	movff	??_low_isr+11,fsr1h
 29096  000346  C01D  FFE1         	movff	??_low_isr+10,fsr1l
 29097  00034A  C01C  FFEA         	movff	??_low_isr+9,fsr0h
 29098  00034E  C01B  FFE9         	movff	??_low_isr+8,fsr0l
 29099  000352  C01A  FFFB         	movff	??_low_isr+7,pclatu
 29100  000356  C019  FFFA         	movff	??_low_isr+6,pclath
 29101  00035A  C018  FFE0         	movff	??_low_isr+5,bsr
 29102  00035E  C017  FFE8         	movff	??_low_isr+4,wreg
 29103  000362  C016  FFD8         	movff	??_low_isr+3,status
 29104  000366  0010               	retfie	
 29105  000368                     __end_of_low_isr:
 29106                           	opt stack 0
 29107                           pclatu	equ	0xFFB
 29108                           pclath	equ	0xFFA
 29109                           tblptru	equ	0xFF8
 29110                           tblptrh	equ	0xFF7
 29111                           tblptrl	equ	0xFF6
 29112                           tablat	equ	0xFF5
 29113                           prodh	equ	0xFF4
 29114                           prodl	equ	0xFF3
 29115                           intcon	equ	0xFF2
 29116                           postinc0	equ	0xFEE
 29117                           fsr0h	equ	0xFEA
 29118                           fsr0l	equ	0xFE9
 29119                           wreg	equ	0xFE8
 29120                           indf1	equ	0xFE7
 29121                           postinc1	equ	0xFE6
 29122                           postdec1	equ	0xFE5
 29123                           fsr1h	equ	0xFE2
 29124                           fsr1l	equ	0xFE1
 29125                           bsr	equ	0xFE0
 29126                           indf2	equ	0xFDF
 29127                           postinc2	equ	0xFDE
 29128                           postdec2	equ	0xFDD
 29129                           fsr2h	equ	0xFDA
 29130                           fsr2l	equ	0xFD9
 29131                           status	equ	0xFD8
 29132                           
 29133 ;; *************** function i1_UARTstring *****************
 29134 ;; Defined at:
 29135 ;;		line 232 in file "UART.c"
 29136 ;; Parameters:    Size  Location     Type
 29137 ;;  data            2   11[COMRAM] PTR const unsigned char 
 29138 ;;		 -> STR_281(26), STR_280(5), STR_278(16), STR_276(24), 
 29139 ;;		 -> STR_265(3), STR_263(15), STR_262(22), STR_261(50), 
 29140 ;;		 -> STR_260(7), STR_259(6), STR_258(11), STR_257(17), 
 29141 ;;		 -> STR_256(12), STR_255(13), STR_254(10), STR_253(12), 
 29142 ;;		 -> STR_248(28), STR_247(68), STR_246(9), STR_245(11), 
 29143 ;;		 -> STR_244(23), STR_242(19), STR_240(20), STR_237(20), 
 29144 ;;		 -> STR_228(21), STR_227(61), STR_226(69), STR_225(7), 
 29145 ;;		 -> STR_224(7), STR_223(10), STR_222(11), STR_221(29), 
 29146 ;;		 -> STR_220(13), STR_219(33), STR_218(25), STR_217(28), 
 29147 ;;		 -> STR_216(3), STR_215(26), STR_214(2), STR_213(34), 
 29148 ;;		 -> STR_212(37), STR_209(24), STR_205(3), STR_195(13), 
 29149 ;;		 -> STR_194(73), STR_193(5), STR_192(12), STR_191(17), 
 29150 ;;		 -> STR_185(28), STR_183(30), STR_181(33), STR_174(42), 
 29151 ;;		 -> STR_173(62), STR_172(26), STR_168(43), STR_166(48), 
 29152 ;;		 -> STR_164(27), STR_157(42), STR_156(66), STR_155(25), 
 29153 ;;		 -> STR_153(49), Command@buf(200), STR_149(33), STR_147(38), 
 29154 ;;		 -> STR_145(27), STR_144(28), STR_134(37), STR_133(68), 
 29155 ;;		 -> STR_132(18), STR_131(15), STR_130(11), STR_129(28), 
 29156 ;;		 -> STR_127(18), STR_125(32), STR_121(31), STR_117(38), 
 29157 ;;		 -> STR_104(24), STR_103(68), STR_102(10), STR_101(6), 
 29158 ;;		 -> STR_100(8), STR_99(11), STR_98(21), STR_96(16), 
 29159 ;;		 -> STR_94(19), STR_91(18), STR_88(16), STR_85(15), 
 29160 ;;		 -> STR_82(22), STR_70(27), STR_69(68), STR_68(7), 
 29161 ;;		 -> STR_67(8), STR_66(11), STR_65(24), STR_63(19), 
 29162 ;;		 -> STR_61(19), STR_58(18), STR_55(25), STR_46(17), 
 29163 ;;		 -> STR_45(68), STR_44(8), STR_43(7), STR_42(11), 
 29164 ;;		 -> STR_41(17), STR_39(12), STR_37(9), STR_34(8), 
 29165 ;;		 -> STR_31(13), STR_28(9), STR_25(8), STR_22(13), 
 29166 ;;		 -> STR_18(4), STR_17(4), STR_16(29), STR_5(38), 
 29167 ;;		 -> low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), STR_2(2), 
 29168 ;;		 -> STR_1(2), 
 29169 ;; Auto vars:     Size  Location     Type
 29170 ;;		None
 29171 ;; Return value:  Size  Location     Type
 29172 ;;		None               void
 29173 ;; Registers used:
 29174 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29175 ;; Tracked objects:
 29176 ;;		On entry : 0/0
 29177 ;;		On exit  : 0/0
 29178 ;;		Unchanged: 0/0
 29179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29183 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29184 ;;Total ram usage:        4 bytes
 29185 ;; Hardware stack levels used:    1
 29186 ;; Hardware stack levels required when called:    3
 29187 ;; This function calls:
 29188 ;;		i1_UARTchar
 29189 ;; This function is called by:
 29190 ;;		_low_isr
 29191 ;; This function uses a non-reentrant model
 29192 ;;
 29193                           
 29194                           	psect	text78
 29195  0160FA                     __ptext78:
 29196                           	opt stack 0
 29197  0160FA                     i1_UARTstring:
 29198                           	opt stack 20
 29199  0160FA                     i1l410:
 29200                           
 29201                           ;UART.c: 235: {
 29202                           ;UART.c: 236: if(*data != 0)
 29203  0160FA  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 29204  0160FE  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 29205  016102  0E00               	movlw	low (__mediumconst shr (0+16))
 29206  016104  6EF8               	movwf	tblptru,c
 29207  016106  0E0C               	movlw	(high __ramtop+-1)
 29208  016108  64F7               	cpfsgt	tblptrh,c
 29209  01610A  D003               	bra	i1u1578_27
 29210  01610C  0008               	tblrd		*
 29211  01610E  50F5               	movf	tablat,w,c
 29212  016110  D005               	bra	i1u1578_20
 29213  016112                     i1u1578_27:
 29214  016112  CFF6 FFE1          	movff	tblptrl,fsr1l
 29215  016116  CFF7 FFE2          	movff	tblptrh,fsr1h
 29216  01611A  50E7               	movf	indf1,w,c
 29217  01611C                     i1u1578_20:
 29218  01611C  0900               	iorlw	0
 29219  01611E  B4D8               	btfsc	status,2,c
 29220  016120  D019               	goto	i1l12308
 29221                           
 29222                           ;UART.c: 237: {
 29223                           ;UART.c: 238: UARTchar(*data, 0, 0);
 29224  016122  0E00               	movlw	0
 29225  016124  6E08               	movwf	i1UARTchar@NinethBit_override,c
 29226  016126  0E00               	movlw	0
 29227  016128  6E09               	movwf	i1UARTchar@NinethBit_override_data,c
 29228  01612A  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 29229  01612E  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 29230  016132  0E00               	movlw	low (__mediumconst shr (0+16))
 29231  016134  6EF8               	movwf	tblptru,c
 29232  016136  0E0C               	movlw	(high __ramtop+-1)
 29233  016138  64F7               	cpfsgt	tblptrh,c
 29234  01613A  D003               	bra	i1u1580_27
 29235  01613C  0008               	tblrd		*
 29236  01613E  50F5               	movf	tablat,w,c
 29237  016140  D005               	bra	i1u1580_20
 29238  016142                     i1u1580_27:
 29239  016142  CFF6 FFE1          	movff	tblptrl,fsr1l
 29240  016146  CFF7 FFE2          	movff	tblptrh,fsr1h
 29241  01614A  50E7               	movf	indf1,w,c
 29242  01614C                     i1u1580_20:
 29243  01614C  EC56  F0B4         	call	i1_UARTchar
 29244  016150                     i1l412:
 29245  016150  A2AC               	btfss	4012,1,c	;volatile
 29246  016152  D7FE               	goto	i1l412
 29247  016154                     i1l12308:
 29248                           
 29249                           ;UART.c: 240: }
 29250                           ;UART.c: 241: } while( *data++);
 29251  016154  500C               	movf	i1UARTstring@data,w,c
 29252  016156  6E0E               	movwf	??i1_UARTstring& (0+255),c
 29253  016158  500D               	movf	i1UARTstring@data+1,w,c
 29254  01615A  6E0F               	movwf	(??i1_UARTstring+1)& (0+255),c
 29255  01615C  4A0C               	infsnz	i1UARTstring@data,f,c
 29256  01615E  2A0D               	incf	i1UARTstring@data+1,f,c
 29257  016160  C00E  FFF6         	movff	??i1_UARTstring,tblptrl
 29258  016164  C00F  FFF7         	movff	??i1_UARTstring+1,tblptrh
 29259  016168  0E00               	movlw	low (__mediumconst shr (0+16))
 29260  01616A  6EF8               	movwf	tblptru,c
 29261  01616C  0E0C               	movlw	(high __ramtop+-1)
 29262  01616E  64F7               	cpfsgt	tblptrh,c
 29263  016170  D003               	bra	i1u1582_27
 29264  016172  0008               	tblrd		*
 29265  016174  50F5               	movf	tablat,w,c
 29266  016176  D005               	bra	i1u1582_20
 29267  016178                     i1u1582_27:
 29268  016178  CFF6 FFE1          	movff	tblptrl,fsr1l
 29269  01617C  CFF7 FFE2          	movff	tblptrh,fsr1h
 29270  016180  50E7               	movf	indf1,w,c
 29271  016182                     i1u1582_20:
 29272  016182  0900               	iorlw	0
 29273  016184  B4D8               	btfsc	status,2,c
 29274  016186  0012               	return	
 29275  016188  D7B8               	goto	i1l410
 29276  01618A                     __end_ofi1_UARTstring:
 29277                           	opt stack 0
 29278                           pclatu	equ	0xFFB
 29279                           pclath	equ	0xFFA
 29280                           tblptru	equ	0xFF8
 29281                           tblptrh	equ	0xFF7
 29282                           tblptrl	equ	0xFF6
 29283                           tablat	equ	0xFF5
 29284                           prodh	equ	0xFF4
 29285                           prodl	equ	0xFF3
 29286                           intcon	equ	0xFF2
 29287                           postinc0	equ	0xFEE
 29288                           fsr0h	equ	0xFEA
 29289                           fsr0l	equ	0xFE9
 29290                           wreg	equ	0xFE8
 29291                           indf1	equ	0xFE7
 29292                           postinc1	equ	0xFE6
 29293                           postdec1	equ	0xFE5
 29294                           fsr1h	equ	0xFE2
 29295                           fsr1l	equ	0xFE1
 29296                           bsr	equ	0xFE0
 29297                           indf2	equ	0xFDF
 29298                           postinc2	equ	0xFDE
 29299                           postdec2	equ	0xFDD
 29300                           fsr2h	equ	0xFDA
 29301                           fsr2l	equ	0xFD9
 29302                           status	equ	0xFD8
 29303                           
 29304 ;; *************** function i1_UARTchar *****************
 29305 ;; Defined at:
 29306 ;;		line 195 in file "UART.c"
 29307 ;; Parameters:    Size  Location     Type
 29308 ;;  data            1    wreg     unsigned char 
 29309 ;;  NinethBit_ov    1    7[COMRAM] unsigned char 
 29310 ;;  NinethBit_ov    1    8[COMRAM] unsigned char 
 29311 ;; Auto vars:     Size  Location     Type
 29312 ;;  data            1   10[COMRAM] unsigned char 
 29313 ;; Return value:  Size  Location     Type
 29314 ;;		None               void
 29315 ;; Registers used:
 29316 ;;		wreg, status,2, status,0, cstack
 29317 ;; Tracked objects:
 29318 ;;		On entry : 0/0
 29319 ;;		On exit  : 0/0
 29320 ;;		Unchanged: 0/0
 29321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29325 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29326 ;;Total ram usage:        4 bytes
 29327 ;; Hardware stack levels used:    1
 29328 ;; Hardware stack levels required when called:    2
 29329 ;; This function calls:
 29330 ;;		i1_CheckSum_byte
 29331 ;; This function is called by:
 29332 ;;		i1_UARTstring
 29333 ;; This function uses a non-reentrant model
 29334 ;;
 29335                           
 29336                           	psect	text79
 29337  0168AC                     __ptext79:
 29338                           	opt stack 0
 29339  0168AC                     i1_UARTchar:
 29340                           	opt stack 20
 29341                           
 29342                           ;incstack = 0
 29343                           ;i1UARTchar@data stored from wreg
 29344  0168AC  6E0B               	movwf	i1UARTchar@data,c
 29345                           
 29346                           ;UART.c: 197: if(TXSTAbits.TX9)
 29347  0168AE  ACAC               	btfss	4012,6,c	;volatile
 29348  0168B0  D02D               	goto	i1l11372
 29349                           
 29350                           ;UART.c: 198: {
 29351                           ;UART.c: 200: if(!NinethBit_override)
 29352  0168B2  6608               	tstfsz	i1UARTchar@NinethBit_override,c
 29353  0168B4  D022               	goto	i1l11370
 29354  0168B6  D015               	goto	i1l11368
 29355  0168B8                     i1l11362:
 29356                           
 29357                           ;UART.c: 206: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 29358  0168B8  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 29359  0168BC  6A02               	clrf	i1CheckSum_byte@This+1,c
 29360  0168BE  0E03               	movlw	3
 29361  0168C0  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 29362  0168C2  EC42  F0B6         	call	i1_CheckSum_byte	;wreg free
 29363  0168C6  D007               	goto	L41
 29364  0168C8                     i1l11364:
 29365                           
 29366                           ;UART.c: 209: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 29367  0168C8  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 29368  0168CC  6A02               	clrf	i1CheckSum_byte@This+1,c
 29369  0168CE  0E02               	movlw	2
 29370  0168D0  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 29371  0168D2  EC42  F0B6         	call	i1_CheckSum_byte	;wreg free
 29372  0168D6                     L41:
 29373  0168D6  6E0A               	movwf	??i1_UARTchar& (0+255),c
 29374  0168D8  D014               	goto	L42
 29375  0168DA                     i1l404:
 29376                           
 29377                           ; BSR set to: 1
 29378                           ;UART.c: 212: TXSTAbits.TX9D = 1;
 29379  0168DA  80AC               	bsf	4012,0,c	;volatile
 29380                           
 29381                           ;UART.c: 213: break;
 29382  0168DC  D017               	goto	i1l11372
 29383  0168DE                     i1l405:
 29384                           
 29385                           ; BSR set to: 1
 29386                           ;UART.c: 215: TXSTAbits.TX9D = 0;
 29387  0168DE  90AC               	bcf	4012,0,c	;volatile
 29388                           
 29389                           ;UART.c: 216: break;
 29390  0168E0  D015               	goto	i1l11372
 29391  0168E2                     i1l11368:
 29392  0168E2  0101               	movlb	1	; () banked
 29393  0168E4  510A               	movf	_PARITY& (0+255),w,b
 29394                           
 29395                           ; Switch size 1, requested type "space"
 29396                           ; Number of cases is 3, Range of values is 1 to 3
 29397                           ; switch strategies available:
 29398                           ; Name         Instructions Cycles
 29399                           ; simple_byte           10     6 (average)
 29400                           ;	Chosen strategy is simple_byte
 29401  0168E6  0A01               	xorlw	1	; case 1
 29402  0168E8  B4D8               	btfsc	status,2,c
 29403  0168EA  D7E6               	goto	i1l11362
 29404  0168EC  0A03               	xorlw	3	; case 2
 29405  0168EE  B4D8               	btfsc	status,2,c
 29406  0168F0  D7EB               	goto	i1l11364
 29407  0168F2  0A01               	xorlw	1	; case 3
 29408  0168F4  B4D8               	btfsc	status,2,c
 29409  0168F6  D7F1               	goto	i1l404
 29410  0168F8  D7F2               	goto	i1l405
 29411  0168FA                     i1l11370:
 29412                           
 29413                           ;UART.c: 219: else
 29414                           ;UART.c: 220: {
 29415                           ;UART.c: 221: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 29416  0168FA  C009  F00A         	movff	i1UARTchar@NinethBit_override_data,??i1_UARTchar
 29417  0168FE  0E01               	movlw	1
 29418  016900  160A               	andwf	??i1_UARTchar,f,c
 29419  016902                     L42:
 29420  016902  50AC               	movf	4012,w,c	;volatile
 29421  016904  180A               	xorwf	??i1_UARTchar,w,c
 29422  016906  0BFE               	andlw	-2
 29423  016908  180A               	xorwf	??i1_UARTchar,w,c
 29424  01690A  6EAC               	movwf	4012,c	;volatile
 29425  01690C                     i1l11372:
 29426                           
 29427                           ;UART.c: 222: }
 29428                           ;UART.c: 223: }
 29429                           ;UART.c: 224: TXREG = data;
 29430  01690C  C00B  FFAD         	movff	i1UARTchar@data,4013	;volatile
 29431  016910  0012               	return	
 29432  016912                     __end_ofi1_UARTchar:
 29433                           	opt stack 0
 29434                           pclatu	equ	0xFFB
 29435                           pclath	equ	0xFFA
 29436                           tblptru	equ	0xFF8
 29437                           tblptrh	equ	0xFF7
 29438                           tblptrl	equ	0xFF6
 29439                           tablat	equ	0xFF5
 29440                           prodh	equ	0xFF4
 29441                           prodl	equ	0xFF3
 29442                           intcon	equ	0xFF2
 29443                           postinc0	equ	0xFEE
 29444                           fsr0h	equ	0xFEA
 29445                           fsr0l	equ	0xFE9
 29446                           wreg	equ	0xFE8
 29447                           indf1	equ	0xFE7
 29448                           postinc1	equ	0xFE6
 29449                           postdec1	equ	0xFE5
 29450                           fsr1h	equ	0xFE2
 29451                           fsr1l	equ	0xFE1
 29452                           bsr	equ	0xFE0
 29453                           indf2	equ	0xFDF
 29454                           postinc2	equ	0xFDE
 29455                           postdec2	equ	0xFDD
 29456                           fsr2h	equ	0xFDA
 29457                           fsr2l	equ	0xFD9
 29458                           status	equ	0xFD8
 29459                           
 29460 ;; *************** function i1_CheckSum_byte *****************
 29461 ;; Defined at:
 29462 ;;		line 355 in file "MISC.c"
 29463 ;; Parameters:    Size  Location     Type
 29464 ;;  This            2    0[COMRAM] unsigned int 
 29465 ;;  Odd_Even        1    2[COMRAM] unsigned char 
 29466 ;; Auto vars:     Size  Location     Type
 29467 ;;  CheckSum_byt    2    3[COMRAM] unsigned int 
 29468 ;;  CheckSum_byt    1    6[COMRAM] unsigned char 
 29469 ;;  CheckSum_byt    1    5[COMRAM] unsigned char 
 29470 ;; Return value:  Size  Location     Type
 29471 ;;                  1    wreg      unsigned char 
 29472 ;; Registers used:
 29473 ;;		wreg, status,2, status,0
 29474 ;; Tracked objects:
 29475 ;;		On entry : 0/0
 29476 ;;		On exit  : 0/0
 29477 ;;		Unchanged: 0/0
 29478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29479 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29480 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29482 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29483 ;;Total ram usage:        7 bytes
 29484 ;; Hardware stack levels used:    1
 29485 ;; Hardware stack levels required when called:    1
 29486 ;; This function calls:
 29487 ;;		Nothing
 29488 ;; This function is called by:
 29489 ;;		i1_UARTchar
 29490 ;; This function uses a non-reentrant model
 29491 ;;
 29492                           
 29493                           	psect	text80
 29494  016C84                     __ptext80:
 29495                           	opt stack 0
 29496  016C84                     i1_CheckSum_byte:
 29497                           	opt stack 20
 29498                           
 29499                           ;MISC.c: 357: char i = 0;
 29500                           
 29501                           ;incstack = 0
 29502  016C84  0E00               	movlw	0
 29503  016C86  6E07               	movwf	i1CheckSum_byte@i,c
 29504                           
 29505                           ;MISC.c: 358: unsigned char Parity = 0;
 29506  016C88  0E00               	movlw	0
 29507  016C8A  6E06               	movwf	i1CheckSum_byte@Parity,c
 29508                           
 29509                           ;MISC.c: 359: unsigned int ThisTemp = This;
 29510  016C8C  C001  F004         	movff	i1CheckSum_byte@This,i1CheckSum_byte@ThisTemp
 29511  016C90  C002  F005         	movff	i1CheckSum_byte@This+1,i1CheckSum_byte@ThisTemp+1
 29512                           
 29513                           ;MISC.c: 361: for (i =0; i<8; i++)
 29514  016C94  0E00               	movlw	0
 29515  016C96  6E07               	movwf	i1CheckSum_byte@i,c
 29516  016C98  D006               	goto	L43
 29517  016C9A                     i1l320:
 29518                           
 29519                           ;MISC.c: 362: {
 29520                           ;MISC.c: 363: if((ThisTemp & 0x01) == 1)
 29521  016C9A  B004               	btfsc	i1CheckSum_byte@ThisTemp,0,c
 29522                           
 29523                           ;MISC.c: 364: {
 29524                           ;MISC.c: 365: Parity++;
 29525  016C9C  2A06               	incf	i1CheckSum_byte@Parity,f,c
 29526                           
 29527                           ;MISC.c: 366: }
 29528                           ;MISC.c: 367: ThisTemp >>= 1;
 29529  016C9E  90D8               	bcf	status,0,c
 29530  016CA0  3205               	rrcf	i1CheckSum_byte@ThisTemp+1,f,c
 29531  016CA2  3204               	rrcf	i1CheckSum_byte@ThisTemp,f,c
 29532  016CA4  2A07               	incf	i1CheckSum_byte@i,f,c
 29533  016CA6                     L43:
 29534  016CA6  0E07               	movlw	7
 29535  016CA8  6407               	cpfsgt	i1CheckSum_byte@i,c
 29536  016CAA  D7F7               	goto	i1l320
 29537                           
 29538                           ;MISC.c: 368: }
 29539                           ;MISC.c: 369: if(Odd_Even == 3)
 29540  016CAC  5003               	movf	i1CheckSum_byte@Odd_Even,w,c
 29541  016CAE  0A03               	xorlw	3
 29542  016CB0  A4D8               	btfss	status,2,c
 29543  016CB2  D006               	goto	i1l323
 29544                           
 29545                           ;MISC.c: 370: {
 29546                           ;MISC.c: 371: if(Parity % 2 == 0)
 29547  016CB4  B006               	btfsc	i1CheckSum_byte@Parity,0,c
 29548  016CB6  D002               	goto	i1l10508
 29549                           
 29550                           ;MISC.c: 372: {
 29551                           ;MISC.c: 373: return 1;
 29552  016CB8  0E01               	movlw	1
 29553  016CBA  0012               	return	
 29554  016CBC                     i1l10508:
 29555                           
 29556                           ;MISC.c: 374: }
 29557                           ;MISC.c: 375: return 0;
 29558  016CBC  0E00               	movlw	0
 29559  016CBE  0012               	return	
 29560  016CC0                     i1l323:
 29561                           
 29562                           ;MISC.c: 377: else
 29563                           ;MISC.c: 378: {
 29564                           ;MISC.c: 379: if(Parity % 2 == 1)
 29565  016CC0  A006               	btfss	i1CheckSum_byte@Parity,0,c
 29566  016CC2  D002               	goto	i1l10518
 29567                           
 29568                           ;MISC.c: 380: {
 29569                           ;MISC.c: 381: return 1;
 29570  016CC4  0E01               	movlw	1
 29571  016CC6  0012               	return	
 29572  016CC8                     i1l10518:
 29573                           
 29574                           ;MISC.c: 382: }
 29575                           ;MISC.c: 383: return 0;
 29576  016CC8  0E00               	movlw	0
 29577  016CCA  0012               	return	
 29578  016CCC                     __end_ofi1_CheckSum_byte:
 29579                           	opt stack 0
 29580                           pclatu	equ	0xFFB
 29581                           pclath	equ	0xFFA
 29582                           tblptru	equ	0xFF8
 29583                           tblptrh	equ	0xFF7
 29584                           tblptrl	equ	0xFF6
 29585                           tablat	equ	0xFF5
 29586                           prodh	equ	0xFF4
 29587                           prodl	equ	0xFF3
 29588                           intcon	equ	0xFF2
 29589                           postinc0	equ	0xFEE
 29590                           fsr0h	equ	0xFEA
 29591                           fsr0l	equ	0xFE9
 29592                           wreg	equ	0xFE8
 29593                           indf1	equ	0xFE7
 29594                           postinc1	equ	0xFE6
 29595                           postdec1	equ	0xFE5
 29596                           fsr1h	equ	0xFE2
 29597                           fsr1l	equ	0xFE1
 29598                           bsr	equ	0xFE0
 29599                           indf2	equ	0xFDF
 29600                           postinc2	equ	0xFDE
 29601                           postdec2	equ	0xFDD
 29602                           fsr2h	equ	0xFDA
 29603                           fsr2l	equ	0xFD9
 29604                           status	equ	0xFD8
 29605                           
 29606 ;; *************** function i1_SetLCDcursor *****************
 29607 ;; Defined at:
 29608 ;;		line 192 in file "LCD.c"
 29609 ;; Parameters:    Size  Location     Type
 29610 ;;  Row             1    wreg     unsigned char 
 29611 ;;  Col             1   14[COMRAM] unsigned char 
 29612 ;; Auto vars:     Size  Location     Type
 29613 ;;  Row             1   15[COMRAM] unsigned char 
 29614 ;;  SetLCDcursor    1   16[COMRAM] unsigned char 
 29615 ;; Return value:  Size  Location     Type
 29616 ;;		None               void
 29617 ;; Registers used:
 29618 ;;		wreg, status,2, status,0, cstack
 29619 ;; Tracked objects:
 29620 ;;		On entry : 0/0
 29621 ;;		On exit  : 0/0
 29622 ;;		Unchanged: 0/0
 29623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29627 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29628 ;;Total ram usage:        3 bytes
 29629 ;; Hardware stack levels used:    1
 29630 ;; Hardware stack levels required when called:    4
 29631 ;; This function calls:
 29632 ;;		i1_SendLCDbyte
 29633 ;; This function is called by:
 29634 ;;		_low_isr
 29635 ;; This function uses a non-reentrant model
 29636 ;;
 29637                           
 29638                           	psect	text81
 29639  016FD0                     __ptext81:
 29640                           	opt stack 0
 29641  016FD0                     i1_SetLCDcursor:
 29642                           	opt stack 19
 29643                           
 29644                           ;incstack = 0
 29645                           ;i1SetLCDcursor@Row stored from wreg
 29646  016FD0  6E10               	movwf	i1SetLCDcursor@Row,c
 29647                           
 29648                           ;LCD.c: 194: char address;
 29649                           ;LCD.c: 197: if (Row == 0)
 29650  016FD2  6610               	tstfsz	i1SetLCDcursor@Row,c
 29651  016FD4  D002               	goto	i1l12314
 29652                           
 29653                           ;LCD.c: 198: {
 29654                           ;LCD.c: 199: address = 0;
 29655  016FD6  0E00               	movlw	0
 29656  016FD8  D001               	goto	L44
 29657  016FDA                     i1l12314:
 29658                           
 29659                           ;LCD.c: 201: else
 29660                           ;LCD.c: 202: {
 29661                           ;LCD.c: 203: address = 0x40;
 29662  016FDA  0E40               	movlw	64
 29663  016FDC                     L44:
 29664  016FDC  6E11               	movwf	i1SetLCDcursor@address,c
 29665                           
 29666                           ;LCD.c: 204: }
 29667                           ;LCD.c: 206: address |= Col;
 29668  016FDE  500F               	movf	i1SetLCDcursor@Col,w,c
 29669  016FE0  1211               	iorwf	i1SetLCDcursor@address,f,c
 29670                           
 29671                           ;LCD.c: 207: if(!LCDwait)
 29672  016FE2  0101               	movlb	1	; () banked
 29673  016FE4  6709               	tstfsz	_LCDwait& (0+255),b
 29674  016FE6  0012               	return	
 29675                           
 29676                           ; BSR set to: 1
 29677                           ;LCD.c: 208: {
 29678                           ;LCD.c: 209: SendLCDbyte(0x80 | address, 0);
 29679  016FE8  0E00               	movlw	0
 29680  016FEA  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 29681  016FEC  5011               	movf	i1SetLCDcursor@address,w,c
 29682  016FEE  0980               	iorlw	128
 29683  016FF0  ECBA  F0AE         	call	i1_SendLCDbyte
 29684  016FF4  0012               	return	
 29685  016FF6                     __end_ofi1_SetLCDcursor:
 29686                           	opt stack 0
 29687                           pclatu	equ	0xFFB
 29688                           pclath	equ	0xFFA
 29689                           tblptru	equ	0xFF8
 29690                           tblptrh	equ	0xFF7
 29691                           tblptrl	equ	0xFF6
 29692                           tablat	equ	0xFF5
 29693                           prodh	equ	0xFF4
 29694                           prodl	equ	0xFF3
 29695                           intcon	equ	0xFF2
 29696                           postinc0	equ	0xFEE
 29697                           fsr0h	equ	0xFEA
 29698                           fsr0l	equ	0xFE9
 29699                           wreg	equ	0xFE8
 29700                           indf1	equ	0xFE7
 29701                           postinc1	equ	0xFE6
 29702                           postdec1	equ	0xFE5
 29703                           fsr1h	equ	0xFE2
 29704                           fsr1l	equ	0xFE1
 29705                           bsr	equ	0xFE0
 29706                           indf2	equ	0xFDF
 29707                           postinc2	equ	0xFDE
 29708                           postdec2	equ	0xFDD
 29709                           fsr2h	equ	0xFDA
 29710                           fsr2l	equ	0xFD9
 29711                           status	equ	0xFD8
 29712                           
 29713 ;; *************** function i1_ReadUSART *****************
 29714 ;; Defined at:
 29715 ;;		line 249 in file "UART.c"
 29716 ;; Parameters:    Size  Location     Type
 29717 ;;		None
 29718 ;; Auto vars:     Size  Location     Type
 29719 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 29720 ;; Return value:  Size  Location     Type
 29721 ;;                  1    wreg      unsigned char 
 29722 ;; Registers used:
 29723 ;;		wreg, status,2, status,0
 29724 ;; Tracked objects:
 29725 ;;		On entry : 0/0
 29726 ;;		On exit  : 0/0
 29727 ;;		Unchanged: 0/0
 29728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29733 ;;Total ram usage:        1 bytes
 29734 ;; Hardware stack levels used:    1
 29735 ;; Hardware stack levels required when called:    1
 29736 ;; This function calls:
 29737 ;;		Nothing
 29738 ;; This function is called by:
 29739 ;;		_low_isr
 29740 ;; This function uses a non-reentrant model
 29741 ;;
 29742                           
 29743                           	psect	text82
 29744  016EF6                     __ptext82:
 29745                           	opt stack 0
 29746  016EF6                     i1_ReadUSART:
 29747                           	opt stack 22
 29748                           
 29749                           ;UART.c: 251: char data;
 29750                           ;UART.c: 253: USART_Status.val &= 0xf2;
 29751                           
 29752                           ;incstack = 0
 29753  016EF6  0EF2               	movlw	242
 29754  016EF8  0101               	movlb	1	; () banked
 29755  016EFA  170D               	andwf	_USART_Status& (0+255),f,b
 29756                           
 29757                           ; BSR set to: 1
 29758                           ;UART.c: 255: if(RCSTAbits.RX9)
 29759  016EFC  ACAB               	btfss	4011,6,c	;volatile
 29760  016EFE  D006               	goto	i1l419
 29761                           
 29762                           ; BSR set to: 1
 29763                           ;UART.c: 256: {
 29764                           ;UART.c: 257: USART_Status.RX_NINE = 0;
 29765  016F00  0101               	movlb	1	; () banked
 29766  016F02  910D               	bcf	_USART_Status& (0+255),0,b
 29767                           
 29768                           ;UART.c: 258: if(RCSTAbits.RX9D)
 29769  016F04  A0AB               	btfss	4011,0,c	;volatile
 29770  016F06  D002               	goto	i1l419
 29771                           
 29772                           ; BSR set to: 1
 29773                           ;UART.c: 259: USART_Status.RX_NINE = 1;
 29774  016F08  0101               	movlb	1	; () banked
 29775  016F0A  810D               	bsf	_USART_Status& (0+255),0,b
 29776  016F0C                     i1l419:
 29777                           
 29778                           ; BSR set to: 1
 29779                           ;UART.c: 260: }
 29780                           ;UART.c: 262: if(RCSTAbits.FERR)
 29781  016F0C  A4AB               	btfss	4011,2,c	;volatile
 29782  016F0E  D002               	goto	i1l421
 29783                           
 29784                           ; BSR set to: 1
 29785                           ;UART.c: 263: USART_Status.FRAME_ERROR = 1;
 29786  016F10  0101               	movlb	1	; () banked
 29787  016F12  850D               	bsf	_USART_Status& (0+255),2,b
 29788  016F14                     i1l421:
 29789                           
 29790                           ; BSR set to: 1
 29791                           ;UART.c: 265: if(RCSTAbits.OERR)
 29792  016F14  A2AB               	btfss	4011,1,c	;volatile
 29793  016F16  D002               	goto	i1l422
 29794                           
 29795                           ; BSR set to: 1
 29796                           ;UART.c: 266: USART_Status.OVERRUN_ERROR = 1;
 29797  016F18  0101               	movlb	1	; () banked
 29798  016F1A  870D               	bsf	_USART_Status& (0+255),3,b
 29799  016F1C                     i1l422:
 29800                           
 29801                           ; BSR set to: 1
 29802                           ;UART.c: 268: data = RCREG;
 29803  016F1C  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 29804                           
 29805                           ; BSR set to: 1
 29806                           ;UART.c: 270: return (data);
 29807  016F20  5001               	movf	i1ReadUSART@data,w,c
 29808  016F22  0012               	return	
 29809  016F24                     __end_ofi1_ReadUSART:
 29810                           	opt stack 0
 29811                           pclatu	equ	0xFFB
 29812                           pclath	equ	0xFFA
 29813                           tblptru	equ	0xFF8
 29814                           tblptrh	equ	0xFF7
 29815                           tblptrl	equ	0xFF6
 29816                           tablat	equ	0xFF5
 29817                           prodh	equ	0xFF4
 29818                           prodl	equ	0xFF3
 29819                           intcon	equ	0xFF2
 29820                           postinc0	equ	0xFEE
 29821                           fsr0h	equ	0xFEA
 29822                           fsr0l	equ	0xFE9
 29823                           wreg	equ	0xFE8
 29824                           indf1	equ	0xFE7
 29825                           postinc1	equ	0xFE6
 29826                           postdec1	equ	0xFE5
 29827                           fsr1h	equ	0xFE2
 29828                           fsr1l	equ	0xFE1
 29829                           bsr	equ	0xFE0
 29830                           indf2	equ	0xFDF
 29831                           postinc2	equ	0xFDE
 29832                           postdec2	equ	0xFDD
 29833                           fsr2h	equ	0xFDA
 29834                           fsr2l	equ	0xFD9
 29835                           status	equ	0xFD8
 29836                           
 29837 ;; *************** function i1_LCDPrintString *****************
 29838 ;; Defined at:
 29839 ;;		line 233 in file "LCD.c"
 29840 ;; Parameters:    Size  Location     Type
 29841 ;;  Text            2   14[COMRAM] PTR unsigned char 
 29842 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 29843 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 29844 ;;		 -> Scroll_2(16), Scroll_1(16), STR_279(16), STR_277(17), 
 29845 ;;		 -> STR_264(10), STR_243(16), STR_241(16), STR_238(15), 
 29846 ;;		 -> STR_210(17), STR_206(17), STR_186(16), STR_184(16), 
 29847 ;;		 -> STR_182(13), STR_169(14), STR_167(16), STR_165(15), 
 29848 ;;		 -> STR_154(16), Command@buf(200), STR_150(14), STR_148(16), 
 29849 ;;		 -> STR_146(15), STR_128(13), STR_126(15), STR_122(14), 
 29850 ;;		 -> STR_118(16), STR_105(16), STR_97(16), STR_95(16), 
 29851 ;;		 -> STR_92(15), STR_89(15), STR_86(14), STR_83(16), 
 29852 ;;		 -> STR_71(16), STR_64(16), STR_62(15), STR_59(14), 
 29853 ;;		 -> STR_56(16), STR_40(12), STR_38(9), STR_35(8), 
 29854 ;;		 -> STR_32(13), STR_29(9), STR_26(8), STR_23(13), 
 29855 ;;		 -> STR_15(10), STR_14(17), STR_13(16), STR_12(15), 
 29856 ;;		 -> STR_11(14), STR_10(13), STR_9(12), STR_8(11), 
 29857 ;;		 -> STR_7(10), STR_6(9), low_isr@LCD_TEMP(16), 
 29858 ;; Auto vars:     Size  Location     Type
 29859 ;;  LCDPrintStri    2   16[COMRAM] PTR unsigned char 
 29860 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 29861 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 29862 ;;		 -> Scroll_2(16), Scroll_1(16), STR_279(16), STR_277(17), 
 29863 ;;		 -> STR_264(10), STR_243(16), STR_241(16), STR_238(15), 
 29864 ;;		 -> STR_210(17), STR_206(17), STR_186(16), STR_184(16), 
 29865 ;;		 -> STR_182(13), STR_169(14), STR_167(16), STR_165(15), 
 29866 ;;		 -> STR_154(16), Command@buf(200), STR_150(14), STR_148(16), 
 29867 ;;		 -> STR_146(15), STR_128(13), STR_126(15), STR_122(14), 
 29868 ;;		 -> STR_118(16), STR_105(16), STR_97(16), STR_95(16), 
 29869 ;;		 -> STR_92(15), STR_89(15), STR_86(14), STR_83(16), 
 29870 ;;		 -> STR_71(16), STR_64(16), STR_62(15), STR_59(14), 
 29871 ;;		 -> STR_56(16), STR_40(12), STR_38(9), STR_35(8), 
 29872 ;;		 -> STR_32(13), STR_29(9), STR_26(8), STR_23(13), 
 29873 ;;		 -> STR_15(10), STR_14(17), STR_13(16), STR_12(15), 
 29874 ;;		 -> STR_11(14), STR_10(13), STR_9(12), STR_8(11), 
 29875 ;;		 -> STR_7(10), STR_6(9), low_isr@LCD_TEMP(16), 
 29876 ;; Return value:  Size  Location     Type
 29877 ;;		None               void
 29878 ;; Registers used:
 29879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29880 ;; Tracked objects:
 29881 ;;		On entry : 0/0
 29882 ;;		On exit  : 0/0
 29883 ;;		Unchanged: 0/0
 29884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29886 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29888 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29889 ;;Total ram usage:        4 bytes
 29890 ;; Hardware stack levels used:    1
 29891 ;; Hardware stack levels required when called:    4
 29892 ;; This function calls:
 29893 ;;		i1_SendLCDbyte
 29894 ;; This function is called by:
 29895 ;;		_low_isr
 29896 ;; This function uses a non-reentrant model
 29897 ;;
 29898                           
 29899                           	psect	text83
 29900  0167DA                     __ptext83:
 29901                           	opt stack 0
 29902  0167DA                     i1_LCDPrintString:
 29903                           	opt stack 19
 29904                           
 29905                           ;LCD.c: 235: unsigned char *c;
 29906                           ;LCD.c: 237: c = Text;
 29907                           
 29908                           ; BSR set to: 1
 29909                           ;incstack = 0
 29910  0167DA  C010  F012         	movff	i1LCDPrintString@Text+1,i1LCDPrintString@c+1
 29911  0167DE  C00F  F011         	movff	i1LCDPrintString@Text,i1LCDPrintString@c
 29912                           
 29913                           ;LCD.c: 239: while ((c != 0) && (*c != 0))
 29914  0167E2  D017               	goto	i1l12330
 29915  0167E4                     i1l12326:
 29916                           
 29917                           ;LCD.c: 240: {
 29918                           ;LCD.c: 241: SendLCDbyte(*c, 1);
 29919  0167E4  0E01               	movlw	1
 29920  0167E6  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 29921  0167E8  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 29922  0167EC  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 29923  0167F0  0E00               	movlw	low (__mediumconst shr (0+16))
 29924  0167F2  6EF8               	movwf	tblptru,c
 29925  0167F4  0E0C               	movlw	(high __ramtop+-1)
 29926  0167F6  64F7               	cpfsgt	tblptrh,c
 29927  0167F8  D003               	bra	i1u1586_27
 29928  0167FA  0008               	tblrd		*
 29929  0167FC  50F5               	movf	tablat,w,c
 29930  0167FE  D005               	bra	i1u1586_20
 29931  016800                     i1u1586_27:
 29932  016800  CFF6 FFE1          	movff	tblptrl,fsr1l
 29933  016804  CFF7 FFE2          	movff	tblptrh,fsr1h
 29934  016808  50E7               	movf	indf1,w,c
 29935  01680A                     i1u1586_20:
 29936  01680A  ECBA  F0AE         	call	i1_SendLCDbyte
 29937                           
 29938                           ;LCD.c: 242: c++;
 29939  01680E  4A11               	infsnz	i1LCDPrintString@c,f,c
 29940  016810  2A12               	incf	i1LCDPrintString@c+1,f,c
 29941  016812                     i1l12330:
 29942  016812  5012               	movf	i1LCDPrintString@c+1,w,c
 29943  016814  1011               	iorwf	i1LCDPrintString@c,w,c
 29944  016816  B4D8               	btfsc	status,2,c
 29945  016818  0012               	return	
 29946  01681A  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 29947  01681E  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 29948  016822  0E00               	movlw	low (__mediumconst shr (0+16))
 29949  016824  6EF8               	movwf	tblptru,c
 29950  016826  0E0C               	movlw	(high __ramtop+-1)
 29951  016828  64F7               	cpfsgt	tblptrh,c
 29952  01682A  D003               	bra	i1u1588_27
 29953  01682C  0008               	tblrd		*
 29954  01682E  50F5               	movf	tablat,w,c
 29955  016830  D005               	bra	i1u1588_20
 29956  016832                     i1u1588_27:
 29957  016832  CFF6 FFE1          	movff	tblptrl,fsr1l
 29958  016836  CFF7 FFE2          	movff	tblptrh,fsr1h
 29959  01683A  50E7               	movf	indf1,w,c
 29960  01683C                     i1u1588_20:
 29961  01683C  0900               	iorlw	0
 29962  01683E  B4D8               	btfsc	status,2,c
 29963  016840  0012               	return	
 29964  016842  D7D0               	goto	i1l12326
 29965  016844                     __end_ofi1_LCDPrintString:
 29966                           	opt stack 0
 29967                           pclatu	equ	0xFFB
 29968                           pclath	equ	0xFFA
 29969                           tblptru	equ	0xFF8
 29970                           tblptrh	equ	0xFF7
 29971                           tblptrl	equ	0xFF6
 29972                           tablat	equ	0xFF5
 29973                           prodh	equ	0xFF4
 29974                           prodl	equ	0xFF3
 29975                           intcon	equ	0xFF2
 29976                           postinc0	equ	0xFEE
 29977                           fsr0h	equ	0xFEA
 29978                           fsr0l	equ	0xFE9
 29979                           wreg	equ	0xFE8
 29980                           indf1	equ	0xFE7
 29981                           postinc1	equ	0xFE6
 29982                           postdec1	equ	0xFE5
 29983                           fsr1h	equ	0xFE2
 29984                           fsr1l	equ	0xFE1
 29985                           bsr	equ	0xFE0
 29986                           indf2	equ	0xFDF
 29987                           postinc2	equ	0xFDE
 29988                           postdec2	equ	0xFDD
 29989                           fsr2h	equ	0xFDA
 29990                           fsr2l	equ	0xFD9
 29991                           status	equ	0xFD8
 29992                           
 29993 ;; *************** function i1_LCDPrintChar *****************
 29994 ;; Defined at:
 29995 ;;		line 266 in file "LCD.c"
 29996 ;; Parameters:    Size  Location     Type
 29997 ;;  character       1    wreg     unsigned char 
 29998 ;; Auto vars:     Size  Location     Type
 29999 ;;  character       1   14[COMRAM] unsigned char 
 30000 ;; Return value:  Size  Location     Type
 30001 ;;		None               void
 30002 ;; Registers used:
 30003 ;;		wreg, status,2, status,0, cstack
 30004 ;; Tracked objects:
 30005 ;;		On entry : 0/0
 30006 ;;		On exit  : 0/0
 30007 ;;		Unchanged: 0/0
 30008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30012 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30013 ;;Total ram usage:        1 bytes
 30014 ;; Hardware stack levels used:    1
 30015 ;; Hardware stack levels required when called:    4
 30016 ;; This function calls:
 30017 ;;		i1_SendLCDbyte
 30018 ;; This function is called by:
 30019 ;;		_low_isr
 30020 ;; This function uses a non-reentrant model
 30021 ;;
 30022                           
 30023                           	psect	text84
 30024  0170A2                     __ptext84:
 30025                           	opt stack 0
 30026  0170A2                     i1_LCDPrintChar:
 30027                           	opt stack 19
 30028                           
 30029                           ;incstack = 0
 30030                           ;i1LCDPrintChar@character stored from wreg
 30031  0170A2  6E0F               	movwf	i1LCDPrintChar@character,c
 30032                           
 30033                           ;LCD.c: 268: SendLCDbyte(character, 1);
 30034  0170A4  0E01               	movlw	1
 30035  0170A6  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 30036  0170A8  500F               	movf	i1LCDPrintChar@character,w,c
 30037  0170AA  ECBA  F0AE         	call	i1_SendLCDbyte
 30038  0170AE  0012               	return	
 30039  0170B0                     __end_ofi1_LCDPrintChar:
 30040                           	opt stack 0
 30041                           pclatu	equ	0xFFB
 30042                           pclath	equ	0xFFA
 30043                           tblptru	equ	0xFF8
 30044                           tblptrh	equ	0xFF7
 30045                           tblptrl	equ	0xFF6
 30046                           tablat	equ	0xFF5
 30047                           prodh	equ	0xFF4
 30048                           prodl	equ	0xFF3
 30049                           intcon	equ	0xFF2
 30050                           postinc0	equ	0xFEE
 30051                           fsr0h	equ	0xFEA
 30052                           fsr0l	equ	0xFE9
 30053                           wreg	equ	0xFE8
 30054                           indf1	equ	0xFE7
 30055                           postinc1	equ	0xFE6
 30056                           postdec1	equ	0xFE5
 30057                           fsr1h	equ	0xFE2
 30058                           fsr1l	equ	0xFE1
 30059                           bsr	equ	0xFE0
 30060                           indf2	equ	0xFDF
 30061                           postinc2	equ	0xFDE
 30062                           postdec2	equ	0xFDD
 30063                           fsr2h	equ	0xFDA
 30064                           fsr2l	equ	0xFD9
 30065                           status	equ	0xFD8
 30066                           
 30067 ;; *************** function i1_ClearLCD *****************
 30068 ;; Defined at:
 30069 ;;		line 219 in file "LCD.c"
 30070 ;; Parameters:    Size  Location     Type
 30071 ;;		None
 30072 ;; Auto vars:     Size  Location     Type
 30073 ;;		None
 30074 ;; Return value:  Size  Location     Type
 30075 ;;		None               void
 30076 ;; Registers used:
 30077 ;;		wreg, status,2, status,0, cstack
 30078 ;; Tracked objects:
 30079 ;;		On entry : 0/0
 30080 ;;		On exit  : 0/0
 30081 ;;		Unchanged: 0/0
 30082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30087 ;;Total ram usage:        0 bytes
 30088 ;; Hardware stack levels used:    1
 30089 ;; Hardware stack levels required when called:    4
 30090 ;; This function calls:
 30091 ;;		i1_SendLCDbyte
 30092 ;; This function is called by:
 30093 ;;		_low_isr
 30094 ;; This function uses a non-reentrant model
 30095 ;;
 30096                           
 30097                           	psect	text85
 30098  017034                     __ptext85:
 30099                           	opt stack 0
 30100  017034                     i1_ClearLCD:
 30101                           	opt stack 19
 30102                           
 30103                           ;LCD.c: 224: SendLCDbyte(0x01, 0);
 30104                           
 30105                           ;incstack = 0
 30106  017034  0E00               	movlw	0
 30107  017036  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 30108  017038  0E01               	movlw	1
 30109  01703A  ECBA  F0AE         	call	i1_SendLCDbyte
 30110                           
 30111                           ;LCD.c: 225: SendLCDbyte(0x02, 0);
 30112  01703E  0E00               	movlw	0
 30113  017040  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 30114  017042  0E02               	movlw	2
 30115  017044  ECBA  F0AE         	call	i1_SendLCDbyte
 30116  017048  0012               	return	
 30117  01704A                     __end_ofi1_ClearLCD:
 30118                           	opt stack 0
 30119                           pclatu	equ	0xFFB
 30120                           pclath	equ	0xFFA
 30121                           tblptru	equ	0xFF8
 30122                           tblptrh	equ	0xFF7
 30123                           tblptrl	equ	0xFF6
 30124                           tablat	equ	0xFF5
 30125                           prodh	equ	0xFF4
 30126                           prodl	equ	0xFF3
 30127                           intcon	equ	0xFF2
 30128                           postinc0	equ	0xFEE
 30129                           fsr0h	equ	0xFEA
 30130                           fsr0l	equ	0xFE9
 30131                           wreg	equ	0xFE8
 30132                           indf1	equ	0xFE7
 30133                           postinc1	equ	0xFE6
 30134                           postdec1	equ	0xFE5
 30135                           fsr1h	equ	0xFE2
 30136                           fsr1l	equ	0xFE1
 30137                           bsr	equ	0xFE0
 30138                           indf2	equ	0xFDF
 30139                           postinc2	equ	0xFDE
 30140                           postdec2	equ	0xFDD
 30141                           fsr2h	equ	0xFDA
 30142                           fsr2l	equ	0xFD9
 30143                           status	equ	0xFD8
 30144                           
 30145 ;; *************** function i1_SendLCDbyte *****************
 30146 ;; Defined at:
 30147 ;;		line 106 in file "LCD.c"
 30148 ;; Parameters:    Size  Location     Type
 30149 ;;  data            1    wreg     unsigned char 
 30150 ;;  isCommand       1   10[COMRAM] unsigned char 
 30151 ;; Auto vars:     Size  Location     Type
 30152 ;;  data            1   11[COMRAM] unsigned char 
 30153 ;;  SendLCDbyte     1   13[COMRAM] unsigned char 
 30154 ;;  SendLCDbyte     1   12[COMRAM] unsigned char 
 30155 ;; Return value:  Size  Location     Type
 30156 ;;		None               void
 30157 ;; Registers used:
 30158 ;;		wreg, status,2, status,0, cstack
 30159 ;; Tracked objects:
 30160 ;;		On entry : 0/0
 30161 ;;		On exit  : 0/0
 30162 ;;		Unchanged: 0/0
 30163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30164 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30165 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30167 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30168 ;;Total ram usage:        4 bytes
 30169 ;; Hardware stack levels used:    1
 30170 ;; Hardware stack levels required when called:    3
 30171 ;; This function calls:
 30172 ;;		i1_PulseEnablePin
 30173 ;;		i1_delayUS
 30174 ;; This function is called by:
 30175 ;;		i1_SetLCDcursor
 30176 ;;		i1_ClearLCD
 30177 ;;		i1_LCDPrintString
 30178 ;;		i1_LCDPrintChar
 30179 ;; This function uses a non-reentrant model
 30180 ;;
 30181                           
 30182                           	psect	text86
 30183  015D74                     __ptext86:
 30184                           	opt stack 0
 30185  015D74                     i1_SendLCDbyte:
 30186                           	opt stack 19
 30187                           
 30188                           ;incstack = 0
 30189                           ;i1SendLCDbyte@data stored from wreg
 30190  015D74  6E0C               	movwf	i1SendLCDbyte@data,c
 30191                           
 30192                           ;LCD.c: 108: unsigned char MSB_nibble=0;
 30193  015D76  0E00               	movlw	0
 30194  015D78  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 30195                           
 30196                           ;LCD.c: 109: unsigned char LSB_nibble=0;
 30197  015D7A  0E00               	movlw	0
 30198  015D7C  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 30199                           
 30200                           ;LCD.c: 111: LATA &= ~(0b00001000+0b00010000+0b00100000);
 30201  015D7E  0EC7               	movlw	199
 30202  015D80  1689               	andwf	3977,f,c	;volatile
 30203                           
 30204                           ;LCD.c: 112: LATE &= ~0b00000001;
 30205  015D82  908D               	bcf	3981,0,c	;volatile
 30206                           
 30207                           ;LCD.c: 113: LATD &= ~(0b10000000 + 0b00100000);
 30208  015D84  0E5F               	movlw	95
 30209  015D86  168C               	andwf	3980,f,c	;volatile
 30210                           
 30211                           ;LCD.c: 114: delayUS(10);
 30212  015D88  0E0A               	movlw	10
 30213  015D8A  6E01               	movwf	i1delayUS@US,c
 30214  015D8C  0E00               	movlw	0
 30215  015D8E  6E02               	movwf	i1delayUS@US+1,c
 30216  015D90  0E00               	movlw	0
 30217  015D92  6E03               	movwf	i1delayUS@US+2,c
 30218  015D94  0E00               	movlw	0
 30219  015D96  6E04               	movwf	i1delayUS@US+3,c
 30220  015D98  EC1C  F0B6         	call	i1_delayUS	;wreg free
 30221                           
 30222                           ;LCD.c: 115: MSB_nibble = (data & 0xF0)>>4;
 30223  015D9C  380C               	swapf	i1SendLCDbyte@data,w,c
 30224  015D9E  0B0F               	andlw	15
 30225  015DA0  0B0F               	andlw	15
 30226  015DA2  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 30227                           
 30228                           ;LCD.c: 116: LSB_nibble = (data & 0x0F);
 30229  015DA4  500C               	movf	i1SendLCDbyte@data,w,c
 30230  015DA6  0B0F               	andlw	15
 30231  015DA8  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 30232                           
 30233                           ;LCD.c: 117: if(!LCDwait)
 30234  015DAA  0101               	movlb	1	; () banked
 30235  015DAC  6709               	tstfsz	_LCDwait& (0+255),b
 30236  015DAE  D028               	goto	i1l11438
 30237                           
 30238                           ; BSR set to: 1
 30239                           ;LCD.c: 118: {
 30240                           ;LCD.c: 119: if(isCommand)
 30241  015DB0  500B               	movf	i1SendLCDbyte@isCommand,w,c
 30242  015DB2  B4D8               	btfsc	status,2,c
 30243  015DB4  D002               	goto	i1l11394
 30244                           
 30245                           ; BSR set to: 1
 30246                           ;LCD.c: 120: {
 30247                           ;LCD.c: 121: LATD |= (0b00100000);
 30248  015DB6  8A8C               	bsf	3980,5,c	;volatile
 30249                           
 30250                           ;LCD.c: 122: }
 30251  015DB8  D001               	goto	i1l11396
 30252  015DBA                     i1l11394:
 30253                           
 30254                           ; BSR set to: 1
 30255                           ;LCD.c: 123: else
 30256                           ;LCD.c: 124: {
 30257                           ;LCD.c: 125: LATD &= ~(0b00100000);
 30258  015DBA  9A8C               	bcf	3980,5,c	;volatile
 30259  015DBC                     i1l11396:
 30260                           
 30261                           ; BSR set to: 1
 30262                           ;LCD.c: 126: }
 30263                           ;LCD.c: 127: if(MSB_nibble&0b1000)
 30264  015DBC  B60D               	btfsc	i1SendLCDbyte@MSB_nibble,3,c
 30265                           
 30266                           ; BSR set to: 1
 30267                           ;LCD.c: 128: {
 30268                           ;LCD.c: 129: LATA |= 0b00001000;
 30269  015DBE  8689               	bsf	3977,3,c	;volatile
 30270                           
 30271                           ; BSR set to: 1
 30272                           ;LCD.c: 130: }
 30273                           ;LCD.c: 131: if(MSB_nibble&0b0100)
 30274                           
 30275                           ; BSR set to: 1
 30276  015DC0  B40D               	btfsc	i1SendLCDbyte@MSB_nibble,2,c
 30277                           
 30278                           ; BSR set to: 1
 30279                           ;LCD.c: 132: {
 30280                           ;LCD.c: 133: LATA |= 0b00010000;
 30281  015DC2  8889               	bsf	3977,4,c	;volatile
 30282                           
 30283                           ; BSR set to: 1
 30284                           ;LCD.c: 134: }
 30285                           ;LCD.c: 135: if(MSB_nibble&0b0010)
 30286                           
 30287                           ; BSR set to: 1
 30288  015DC4  B20D               	btfsc	i1SendLCDbyte@MSB_nibble,1,c
 30289                           
 30290                           ; BSR set to: 1
 30291                           ;LCD.c: 136: {
 30292                           ;LCD.c: 137: LATA |= 0b00100000;
 30293  015DC6  8A89               	bsf	3977,5,c	;volatile
 30294                           
 30295                           ; BSR set to: 1
 30296                           ;LCD.c: 138: }
 30297                           ;LCD.c: 139: if(MSB_nibble&0b0001)
 30298                           
 30299                           ; BSR set to: 1
 30300  015DC8  B00D               	btfsc	i1SendLCDbyte@MSB_nibble,0,c
 30301                           
 30302                           ; BSR set to: 1
 30303                           ;LCD.c: 140: {
 30304                           ;LCD.c: 141: LATE |= 0b00000001;
 30305  015DCA  808D               	bsf	3981,0,c	;volatile
 30306                           
 30307                           ; BSR set to: 1
 30308                           ;LCD.c: 142: }
 30309                           ;LCD.c: 143: PulseEnablePin();
 30310                           
 30311                           ; BSR set to: 1
 30312  015DCC  EC92  F0B7         	call	i1_PulseEnablePin	;wreg free
 30313                           
 30314                           ;LCD.c: 144: LATA &= ~(0b00001000+0b00010000+0b00100000);
 30315  015DD0  0EC7               	movlw	199
 30316  015DD2  1689               	andwf	3977,f,c	;volatile
 30317                           
 30318                           ;LCD.c: 145: LATE &= ~0b00000001;
 30319  015DD4  908D               	bcf	3981,0,c	;volatile
 30320                           
 30321                           ;LCD.c: 146: delayUS(10);
 30322  015DD6  0E0A               	movlw	10
 30323  015DD8  6E01               	movwf	i1delayUS@US,c
 30324  015DDA  0E00               	movlw	0
 30325  015DDC  6E02               	movwf	i1delayUS@US+1,c
 30326  015DDE  0E00               	movlw	0
 30327  015DE0  6E03               	movwf	i1delayUS@US+2,c
 30328  015DE2  0E00               	movlw	0
 30329  015DE4  6E04               	movwf	i1delayUS@US+3,c
 30330  015DE6  EC1C  F0B6         	call	i1_delayUS	;wreg free
 30331                           
 30332                           ;LCD.c: 147: if(LSB_nibble&0b1000)
 30333  015DEA  B60E               	btfsc	i1SendLCDbyte@LSB_nibble,3,c
 30334                           
 30335                           ;LCD.c: 148: {
 30336                           ;LCD.c: 149: LATA |= 0b00001000;
 30337  015DEC  8689               	bsf	3977,3,c	;volatile
 30338                           
 30339                           ;LCD.c: 150: }
 30340                           ;LCD.c: 151: if(LSB_nibble&0b0100)
 30341  015DEE  B40E               	btfsc	i1SendLCDbyte@LSB_nibble,2,c
 30342                           
 30343                           ;LCD.c: 152: {
 30344                           ;LCD.c: 153: LATA |= 0b00010000;
 30345  015DF0  8889               	bsf	3977,4,c	;volatile
 30346                           
 30347                           ;LCD.c: 154: }
 30348                           ;LCD.c: 155: if(LSB_nibble&0b0010)
 30349  015DF2  B20E               	btfsc	i1SendLCDbyte@LSB_nibble,1,c
 30350                           
 30351                           ;LCD.c: 156: {
 30352                           ;LCD.c: 157: LATA |= 0b00100000;
 30353  015DF4  8A89               	bsf	3977,5,c	;volatile
 30354                           
 30355                           ;LCD.c: 158: }
 30356                           ;LCD.c: 159: if(LSB_nibble&0b0001)
 30357  015DF6  B00E               	btfsc	i1SendLCDbyte@LSB_nibble,0,c
 30358                           
 30359                           ;LCD.c: 160: {
 30360                           ;LCD.c: 161: LATE |= 0b00000001;
 30361  015DF8  808D               	bsf	3981,0,c	;volatile
 30362                           
 30363                           ;LCD.c: 162: }
 30364                           ;LCD.c: 163: PulseEnablePin();
 30365  015DFA  EC92  F0B7         	call	i1_PulseEnablePin	;wreg free
 30366                           
 30367                           ;LCD.c: 164: }
 30368  015DFE  0012               	return	
 30369  015E00                     i1l11438:
 30370                           
 30371                           ;LCD.c: 165: else
 30372                           ;LCD.c: 166: {
 30373                           ;LCD.c: 167: delayUS(20);
 30374  015E00  0E14               	movlw	20
 30375  015E02  6E01               	movwf	i1delayUS@US,c
 30376  015E04  0E00               	movlw	0
 30377  015E06  6E02               	movwf	i1delayUS@US+1,c
 30378  015E08  0E00               	movlw	0
 30379  015E0A  6E03               	movwf	i1delayUS@US+2,c
 30380  015E0C  0E00               	movlw	0
 30381  015E0E  6E04               	movwf	i1delayUS@US+3,c
 30382  015E10  EC1C  F0B6         	call	i1_delayUS	;wreg free
 30383  015E14  0012               	return	
 30384  015E16                     __end_ofi1_SendLCDbyte:
 30385                           	opt stack 0
 30386                           pclatu	equ	0xFFB
 30387                           pclath	equ	0xFFA
 30388                           tblptru	equ	0xFF8
 30389                           tblptrh	equ	0xFF7
 30390                           tblptrl	equ	0xFF6
 30391                           tablat	equ	0xFF5
 30392                           prodh	equ	0xFF4
 30393                           prodl	equ	0xFF3
 30394                           intcon	equ	0xFF2
 30395                           postinc0	equ	0xFEE
 30396                           fsr0h	equ	0xFEA
 30397                           fsr0l	equ	0xFE9
 30398                           wreg	equ	0xFE8
 30399                           indf1	equ	0xFE7
 30400                           postinc1	equ	0xFE6
 30401                           postdec1	equ	0xFE5
 30402                           fsr1h	equ	0xFE2
 30403                           fsr1l	equ	0xFE1
 30404                           bsr	equ	0xFE0
 30405                           indf2	equ	0xFDF
 30406                           postinc2	equ	0xFDE
 30407                           postdec2	equ	0xFDD
 30408                           fsr2h	equ	0xFDA
 30409                           fsr2l	equ	0xFD9
 30410                           status	equ	0xFD8
 30411                           
 30412 ;; *************** function i1_PulseEnablePin *****************
 30413 ;; Defined at:
 30414 ;;		line 177 in file "LCD.c"
 30415 ;; Parameters:    Size  Location     Type
 30416 ;;		None
 30417 ;; Auto vars:     Size  Location     Type
 30418 ;;		None
 30419 ;; Return value:  Size  Location     Type
 30420 ;;		None               void
 30421 ;; Registers used:
 30422 ;;		wreg, status,2, status,0, cstack
 30423 ;; Tracked objects:
 30424 ;;		On entry : 0/0
 30425 ;;		On exit  : 0/0
 30426 ;;		Unchanged: 0/0
 30427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30432 ;;Total ram usage:        0 bytes
 30433 ;; Hardware stack levels used:    1
 30434 ;; Hardware stack levels required when called:    2
 30435 ;; This function calls:
 30436 ;;		i1_delayUS
 30437 ;; This function is called by:
 30438 ;;		i1_SendLCDbyte
 30439 ;; This function uses a non-reentrant model
 30440 ;;
 30441                           
 30442                           	psect	text87
 30443  016F24                     __ptext87:
 30444                           	opt stack 0
 30445  016F24                     i1_PulseEnablePin:
 30446                           	opt stack 19
 30447                           
 30448                           ;LCD.c: 180: LATD |= (0b10000000);
 30449                           
 30450                           ;incstack = 0
 30451  016F24  8E8C               	bsf	3980,7,c	;volatile
 30452                           
 30453                           ;LCD.c: 181: delayUS(2500);
 30454  016F26  0EC4               	movlw	196
 30455  016F28  6E01               	movwf	i1delayUS@US,c
 30456  016F2A  0E09               	movlw	9
 30457  016F2C  6E02               	movwf	i1delayUS@US+1,c
 30458  016F2E  0E00               	movlw	0
 30459  016F30  6E03               	movwf	i1delayUS@US+2,c
 30460  016F32  0E00               	movlw	0
 30461  016F34  6E04               	movwf	i1delayUS@US+3,c
 30462  016F36  EC1C  F0B6         	call	i1_delayUS	;wreg free
 30463                           
 30464                           ;LCD.c: 183: LATD &= ~(0b10000000);
 30465  016F3A  9E8C               	bcf	3980,7,c	;volatile
 30466                           
 30467                           ;LCD.c: 184: delayUS(2500);
 30468  016F3C  0EC4               	movlw	196
 30469  016F3E  6E01               	movwf	i1delayUS@US,c
 30470  016F40  0E09               	movlw	9
 30471  016F42  6E02               	movwf	i1delayUS@US+1,c
 30472  016F44  0E00               	movlw	0
 30473  016F46  6E03               	movwf	i1delayUS@US+2,c
 30474  016F48  0E00               	movlw	0
 30475  016F4A  6E04               	movwf	i1delayUS@US+3,c
 30476  016F4C  EC1C  F0B6         	call	i1_delayUS	;wreg free
 30477  016F50  0012               	return	
 30478  016F52                     __end_ofi1_PulseEnablePin:
 30479                           	opt stack 0
 30480                           pclatu	equ	0xFFB
 30481                           pclath	equ	0xFFA
 30482                           tblptru	equ	0xFF8
 30483                           tblptrh	equ	0xFF7
 30484                           tblptrl	equ	0xFF6
 30485                           tablat	equ	0xFF5
 30486                           prodh	equ	0xFF4
 30487                           prodl	equ	0xFF3
 30488                           intcon	equ	0xFF2
 30489                           postinc0	equ	0xFEE
 30490                           fsr0h	equ	0xFEA
 30491                           fsr0l	equ	0xFE9
 30492                           wreg	equ	0xFE8
 30493                           indf1	equ	0xFE7
 30494                           postinc1	equ	0xFE6
 30495                           postdec1	equ	0xFE5
 30496                           fsr1h	equ	0xFE2
 30497                           fsr1l	equ	0xFE1
 30498                           bsr	equ	0xFE0
 30499                           indf2	equ	0xFDF
 30500                           postinc2	equ	0xFDE
 30501                           postdec2	equ	0xFDD
 30502                           fsr2h	equ	0xFDA
 30503                           fsr2l	equ	0xFD9
 30504                           status	equ	0xFD8
 30505                           
 30506 ;; *************** function i1_delayUS *****************
 30507 ;; Defined at:
 30508 ;;		line 55 in file "MISC.c"
 30509 ;; Parameters:    Size  Location     Type
 30510 ;;  US              4    0[COMRAM] long 
 30511 ;; Auto vars:     Size  Location     Type
 30512 ;;  delayUS         4    5[COMRAM] long 
 30513 ;;  delayUS         1    9[COMRAM] unsigned char 
 30514 ;; Return value:  Size  Location     Type
 30515 ;;		None               void
 30516 ;; Registers used:
 30517 ;;		wreg, status,2, status,0
 30518 ;; Tracked objects:
 30519 ;;		On entry : 0/0
 30520 ;;		On exit  : 0/0
 30521 ;;		Unchanged: 0/0
 30522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30524 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30526 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30527 ;;Total ram usage:       10 bytes
 30528 ;; Hardware stack levels used:    1
 30529 ;; Hardware stack levels required when called:    1
 30530 ;; This function calls:
 30531 ;;		Nothing
 30532 ;; This function is called by:
 30533 ;;		i1_SendLCDbyte
 30534 ;;		i1_PulseEnablePin
 30535 ;; This function uses a non-reentrant model
 30536 ;;
 30537                           
 30538                           	psect	text88
 30539  016C38                     __ptext88:
 30540                           	opt stack 0
 30541  016C38                     i1_delayUS:
 30542                           	opt stack 20
 30543                           
 30544                           ;MISC.c: 57: long i;
 30545                           ;MISC.c: 58: unsigned char j;
 30546                           ;MISC.c: 59: for(i=0;i<US;i+=31)
 30547                           
 30548                           ;incstack = 0
 30549  016C38  0E00               	movlw	0
 30550  016C3A  6E06               	movwf	i1delayUS@i,c
 30551  016C3C  0E00               	movlw	0
 30552  016C3E  6E07               	movwf	i1delayUS@i+1,c
 30553  016C40  0E00               	movlw	0
 30554  016C42  6E08               	movwf	i1delayUS@i+2,c
 30555  016C44  0E00               	movlw	0
 30556  016C46  6E09               	movwf	i1delayUS@i+3,c
 30557  016C48  D00E               	goto	i1l206
 30558  016C4A                     i1l9622:
 30559                           
 30560                           ;MISC.c: 60: {
 30561                           ;MISC.c: 61: for(j=0;j<41;j++)
 30562  016C4A  0E00               	movlw	0
 30563  016C4C  6E0A               	movwf	i1delayUS@j,c
 30564  016C4E  D002               	goto	L45
 30565  016C50                     i1l208:
 30566                           
 30567                           ;MISC.c: 62: {
 30568                           ;MISC.c: 63: __nop();
 30569  016C50  F000               	nop	
 30570  016C52  2A0A               	incf	i1delayUS@j,f,c
 30571  016C54                     L45:
 30572  016C54  0E28               	movlw	40
 30573  016C56  640A               	cpfsgt	i1delayUS@j,c
 30574  016C58  D7FB               	goto	i1l208
 30575  016C5A  0E1F               	movlw	31
 30576  016C5C  2606               	addwf	i1delayUS@i,f,c
 30577  016C5E  0E00               	movlw	0
 30578  016C60  2207               	addwfc	i1delayUS@i+1,f,c
 30579  016C62  2208               	addwfc	i1delayUS@i+2,f,c
 30580  016C64  2209               	addwfc	i1delayUS@i+3,f,c
 30581  016C66                     i1l206:
 30582  016C66  5009               	movf	i1delayUS@i+3,w,c
 30583  016C68  0A80               	xorlw	128
 30584  016C6A  6E05               	movwf	??i1_delayUS& (0+255),c
 30585  016C6C  5001               	movf	i1delayUS@US,w,c
 30586  016C6E  5C06               	subwf	i1delayUS@i,w,c
 30587  016C70  5002               	movf	i1delayUS@US+1,w,c
 30588  016C72  5807               	subwfb	i1delayUS@i+1,w,c
 30589  016C74  5003               	movf	i1delayUS@US+2,w,c
 30590  016C76  5808               	subwfb	i1delayUS@i+2,w,c
 30591  016C78  5004               	movf	i1delayUS@US+3,w,c
 30592  016C7A  0A80               	xorlw	128
 30593  016C7C  5805               	subwfb	??i1_delayUS& (0+255),w,c
 30594  016C7E  B0D8               	btfsc	status,0,c
 30595  016C80  0012               	return	
 30596  016C82  D7E3               	goto	i1l9622
 30597  016C84                     __end_ofi1_delayUS:
 30598                           	opt stack 0
 30599                           pclatu	equ	0xFFB
 30600                           pclath	equ	0xFFA
 30601                           tblptru	equ	0xFF8
 30602                           tblptrh	equ	0xFF7
 30603                           tblptrl	equ	0xFF6
 30604                           tablat	equ	0xFF5
 30605                           prodh	equ	0xFF4
 30606                           prodl	equ	0xFF3
 30607                           intcon	equ	0xFF2
 30608                           postinc0	equ	0xFEE
 30609                           fsr0h	equ	0xFEA
 30610                           fsr0l	equ	0xFE9
 30611                           wreg	equ	0xFE8
 30612                           indf1	equ	0xFE7
 30613                           postinc1	equ	0xFE6
 30614                           postdec1	equ	0xFE5
 30615                           fsr1h	equ	0xFE2
 30616                           fsr1l	equ	0xFE1
 30617                           bsr	equ	0xFE0
 30618                           indf2	equ	0xFDF
 30619                           postinc2	equ	0xFDE
 30620                           postdec2	equ	0xFDD
 30621                           fsr2h	equ	0xFDA
 30622                           fsr2l	equ	0xFD9
 30623                           status	equ	0xFD8
 30624                           
 30625 ;; *************** function i1_BufferCopy *****************
 30626 ;; Defined at:
 30627 ;;		line 87 in file "MISC.c"
 30628 ;; Parameters:    Size  Location     Type
 30629 ;;  from            2    8[COMRAM] PTR unsigned char 
 30630 ;;		 -> STR_275(5), STR_274(5), STR_273(10), STR_272(16), 
 30631 ;;		 -> STR_271(11), STR_270(12), STR_269(9), STR_268(14), 
 30632 ;;		 -> STR_251(6), STR_250(9), STR_249(14), STR_233(4), 
 30633 ;;		 -> STR_232(5), STR_231(8), STR_230(10), STR_229(9), 
 30634 ;;		 -> STR_198(2), STR_197(10), STR_196(9), STR_177(10), 
 30635 ;;		 -> STR_176(10), STR_175(13), STR_160(10), STR_159(10), 
 30636 ;;		 -> STR_158(17), STR_138(6), STR_137(6), STR_136(9), 
 30637 ;;		 -> STR_135(10), STR_110(7), STR_109(4), STR_108(6), 
 30638 ;;		 -> STR_107(9), STR_106(13), STR_75(4), STR_74(6), 
 30639 ;;		 -> STR_73(9), STR_72(14), STR_50(5), STR_49(5), 
 30640 ;;		 -> STR_48(9), STR_47(9), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 30641 ;;		 -> low_isr@TEMP_Rxdata(100), 
 30642 ;;  to              2   10[COMRAM] PTR unsigned char 
 30643 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 30644 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 30645 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 30646 ;;  count           1   12[COMRAM] unsigned char 
 30647 ;;  shift           1   13[COMRAM] unsigned char 
 30648 ;; Auto vars:     Size  Location     Type
 30649 ;;  BufferCopy      1   14[COMRAM] unsigned char 
 30650 ;; Return value:  Size  Location     Type
 30651 ;;		None               void
 30652 ;; Registers used:
 30653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30654 ;; Tracked objects:
 30655 ;;		On entry : 0/0
 30656 ;;		On exit  : 0/0
 30657 ;;		Unchanged: 0/0
 30658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30659 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30662 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30663 ;;Total ram usage:        7 bytes
 30664 ;; Hardware stack levels used:    1
 30665 ;; Hardware stack levels required when called:    2
 30666 ;; This function calls:
 30667 ;;		i1_cleanBuffer
 30668 ;; This function is called by:
 30669 ;;		_low_isr
 30670 ;; This function uses a non-reentrant model
 30671 ;;
 30672                           
 30673                           	psect	text89
 30674  015E16                     __ptext89:
 30675                           	opt stack 0
 30676  015E16                     i1_BufferCopy:
 30677                           	opt stack 21
 30678                           
 30679                           ;MISC.c: 89: unsigned char i=0;
 30680                           
 30681                           ;incstack = 0
 30682  015E16  0E00               	movlw	0
 30683  015E18  6E0F               	movwf	i1BufferCopy@i,c
 30684                           
 30685                           ;MISC.c: 90: cleanBuffer(to,count);
 30686  015E1A  C00C  F002         	movff	i1BufferCopy@to+1,i1cleanBuffer@data+1
 30687  015E1E  C00B  F001         	movff	i1BufferCopy@to,i1cleanBuffer@data
 30688  015E22  C00D  F003         	movff	i1BufferCopy@count,i1cleanBuffer@count
 30689  015E26  6A04               	clrf	i1cleanBuffer@count+1,c
 30690  015E28  ECC8  F0B6         	call	i1_cleanBuffer	;wreg free
 30691                           
 30692                           ;MISC.c: 91: for(i = shift; i>0;i--)
 30693  015E2C  C00E  F00F         	movff	i1BufferCopy@shift,i1BufferCopy@i
 30694  015E30  D009               	goto	L47
 30695  015E32                     i1l12284:
 30696                           
 30697                           ;MISC.c: 92: {
 30698                           ;MISC.c: 93: *to = ' ';
 30699  015E32  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 30700  015E36  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 30701  015E3A  0E20               	movlw	32
 30702  015E3C  6EDF               	movwf	indf2,c
 30703                           
 30704                           ;MISC.c: 94: to++;
 30705  015E3E  4A0B               	infsnz	i1BufferCopy@to,f,c
 30706  015E40  2A0C               	incf	i1BufferCopy@to+1,f,c
 30707  015E42  060F               	decf	i1BufferCopy@i,f,c
 30708  015E44                     L47:
 30709  015E44  660F               	tstfsz	i1BufferCopy@i,c
 30710  015E46  D7F5               	goto	i1l12284
 30711  015E48  D01B               	goto	L46
 30712  015E4A                     i1l12292:
 30713                           
 30714                           ;MISC.c: 97: {
 30715                           ;MISC.c: 98: *to = *from;
 30716  015E4A  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 30717  015E4E  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 30718  015E52  0E00               	movlw	low (__mediumconst shr (0+16))
 30719  015E54  6EF8               	movwf	tblptru,c
 30720  015E56  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 30721  015E5A  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 30722  015E5E  0E0C               	movlw	(high __ramtop+-1)
 30723  015E60  64F7               	cpfsgt	tblptrh,c
 30724  015E62  D003               	bra	i1u1574_27
 30725  015E64  0008               	tblrd		*
 30726  015E66  50F5               	movf	tablat,w,c
 30727  015E68  D005               	bra	i1u1574_20
 30728  015E6A                     i1u1574_27:
 30729  015E6A  CFF6 FFE1          	movff	tblptrl,fsr1l
 30730  015E6E  CFF7 FFE2          	movff	tblptrh,fsr1h
 30731  015E72  50E7               	movf	indf1,w,c
 30732  015E74                     i1u1574_20:
 30733  015E74  6EDF               	movwf	indf2,c
 30734                           
 30735                           ;MISC.c: 99: from++;
 30736  015E76  4A09               	infsnz	i1BufferCopy@from,f,c
 30737  015E78  2A0A               	incf	i1BufferCopy@from+1,f,c
 30738                           
 30739                           ;MISC.c: 100: to++;
 30740  015E7A  4A0B               	infsnz	i1BufferCopy@to,f,c
 30741  015E7C  2A0C               	incf	i1BufferCopy@to+1,f,c
 30742                           
 30743                           ;MISC.c: 101: count--;
 30744  015E7E  060D               	decf	i1BufferCopy@count,f,c
 30745  015E80                     L46:
 30746  015E80  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 30747  015E84  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 30748  015E88  0E00               	movlw	low (__mediumconst shr (0+16))
 30749  015E8A  6EF8               	movwf	tblptru,c
 30750  015E8C  0E0C               	movlw	(high __ramtop+-1)
 30751  015E8E  64F7               	cpfsgt	tblptrh,c
 30752  015E90  D003               	bra	i1u1575_27
 30753  015E92  0008               	tblrd		*
 30754  015E94  50F5               	movf	tablat,w,c
 30755  015E96  D005               	bra	i1u1575_20
 30756  015E98                     i1u1575_27:
 30757  015E98  CFF6 FFE1          	movff	tblptrl,fsr1l
 30758  015E9C  CFF7 FFE2          	movff	tblptrh,fsr1h
 30759  015EA0  50E7               	movf	indf1,w,c
 30760  015EA2                     i1u1575_20:
 30761  015EA2  0900               	iorlw	0
 30762  015EA4  B4D8               	btfsc	status,2,c
 30763  015EA6  0012               	return	
 30764  015EA8  660D               	tstfsz	i1BufferCopy@count,c
 30765  015EAA  D7CF               	goto	i1l12292
 30766  015EAC  0012               	return	
 30767  015EAE                     __end_ofi1_BufferCopy:
 30768                           	opt stack 0
 30769                           pclatu	equ	0xFFB
 30770                           pclath	equ	0xFFA
 30771                           tblptru	equ	0xFF8
 30772                           tblptrh	equ	0xFF7
 30773                           tblptrl	equ	0xFF6
 30774                           tablat	equ	0xFF5
 30775                           prodh	equ	0xFF4
 30776                           prodl	equ	0xFF3
 30777                           intcon	equ	0xFF2
 30778                           postinc0	equ	0xFEE
 30779                           fsr0h	equ	0xFEA
 30780                           fsr0l	equ	0xFE9
 30781                           wreg	equ	0xFE8
 30782                           indf1	equ	0xFE7
 30783                           postinc1	equ	0xFE6
 30784                           postdec1	equ	0xFE5
 30785                           fsr1h	equ	0xFE2
 30786                           fsr1l	equ	0xFE1
 30787                           bsr	equ	0xFE0
 30788                           indf2	equ	0xFDF
 30789                           postinc2	equ	0xFDE
 30790                           postdec2	equ	0xFDD
 30791                           fsr2h	equ	0xFDA
 30792                           fsr2l	equ	0xFD9
 30793                           status	equ	0xFD8
 30794                           
 30795 ;; *************** function i1_cleanBuffer *****************
 30796 ;; Defined at:
 30797 ;;		line 73 in file "MISC.c"
 30798 ;; Parameters:    Size  Location     Type
 30799 ;;  data            2    0[COMRAM] PTR unsigned char 
 30800 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 30801 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 30802 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 30803 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 30804 ;;  count           2    2[COMRAM] int 
 30805 ;; Auto vars:     Size  Location     Type
 30806 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 30807 ;; Return value:  Size  Location     Type
 30808 ;;		None               void
 30809 ;; Registers used:
 30810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30811 ;; Tracked objects:
 30812 ;;		On entry : 0/0
 30813 ;;		On exit  : 0/0
 30814 ;;		Unchanged: 0/0
 30815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30817 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30818 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30819 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30820 ;;Total ram usage:        8 bytes
 30821 ;; Hardware stack levels used:    1
 30822 ;; Hardware stack levels required when called:    1
 30823 ;; This function calls:
 30824 ;;		Nothing
 30825 ;; This function is called by:
 30826 ;;		_low_isr
 30827 ;;		i1_BufferCopy
 30828 ;; This function uses a non-reentrant model
 30829 ;;
 30830                           
 30831                           	psect	text90
 30832  016D90                     __ptext90:
 30833                           	opt stack 0
 30834  016D90                     i1_cleanBuffer:
 30835                           	opt stack 22
 30836                           
 30837                           ;MISC.c: 75: unsigned char i=0;
 30838                           
 30839                           ;incstack = 0
 30840  016D90  0E00               	movlw	0
 30841  016D92  6E08               	movwf	i1cleanBuffer@i,c
 30842                           
 30843                           ;MISC.c: 76: for(i=0; i<count;i++)
 30844  016D94  0E00               	movlw	0
 30845  016D96  6E08               	movwf	i1cleanBuffer@i,c
 30846  016D98  D00B               	goto	i1l11354
 30847  016D9A                     i1l11350:
 30848                           
 30849                           ;MISC.c: 77: {
 30850                           ;MISC.c: 78: data[i]= 0;
 30851  016D9A  5008               	movf	i1cleanBuffer@i,w,c
 30852  016D9C  0D01               	mullw	1
 30853  016D9E  50F3               	movf	prodl,w,c
 30854  016DA0  2401               	addwf	i1cleanBuffer@data,w,c
 30855  016DA2  6ED9               	movwf	fsr2l,c
 30856  016DA4  50F4               	movf	prodh,w,c
 30857  016DA6  2002               	addwfc	i1cleanBuffer@data+1,w,c
 30858  016DA8  6EDA               	movwf	fsr2h,c
 30859  016DAA  0E00               	movlw	0
 30860  016DAC  6EDF               	movwf	indf2,c
 30861  016DAE  2A08               	incf	i1cleanBuffer@i,f,c
 30862  016DB0                     i1l11354:
 30863  016DB0  5008               	movf	i1cleanBuffer@i,w,c
 30864  016DB2  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 30865  016DB4  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 30866  016DB6  5006               	movf	??i1_cleanBuffer+1,w,c
 30867  016DB8  0A80               	xorlw	128
 30868  016DBA  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 30869  016DBC  5003               	movf	i1cleanBuffer@count,w,c
 30870  016DBE  5C05               	subwf	??i1_cleanBuffer,w,c
 30871  016DC0  5004               	movf	i1cleanBuffer@count+1,w,c
 30872  016DC2  0A80               	xorlw	128
 30873  016DC4  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 30874  016DC6  B0D8               	btfsc	status,0,c
 30875  016DC8  0012               	return	
 30876  016DCA  D7E7               	goto	i1l11350
 30877  016DCC                     __end_ofi1_cleanBuffer:
 30878                           	opt stack 0
 30879                           pclatu	equ	0xFFB
 30880                           pclath	equ	0xFFA
 30881                           tblptru	equ	0xFF8
 30882                           tblptrh	equ	0xFF7
 30883                           tblptrl	equ	0xFF6
 30884                           tablat	equ	0xFF5
 30885                           prodh	equ	0xFF4
 30886                           prodl	equ	0xFF3
 30887                           intcon	equ	0xFF2
 30888                           postinc0	equ	0xFEE
 30889                           fsr0h	equ	0xFEA
 30890                           fsr0l	equ	0xFE9
 30891                           wreg	equ	0xFE8
 30892                           indf1	equ	0xFE7
 30893                           postinc1	equ	0xFE6
 30894                           postdec1	equ	0xFE5
 30895                           fsr1h	equ	0xFE2
 30896                           fsr1l	equ	0xFE1
 30897                           bsr	equ	0xFE0
 30898                           indf2	equ	0xFDF
 30899                           postinc2	equ	0xFDE
 30900                           postdec2	equ	0xFDD
 30901                           fsr2h	equ	0xFDA
 30902                           fsr2l	equ	0xFD9
 30903                           status	equ	0xFD8
 30904                           
 30905 ;; *************** function _WriteUSART *****************
 30906 ;; Defined at:
 30907 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
 30908 ;; Parameters:    Size  Location     Type
 30909 ;;  data            1    wreg     unsigned char 
 30910 ;; Auto vars:     Size  Location     Type
 30911 ;;  data            1    0[COMRAM] unsigned char 
 30912 ;; Return value:  Size  Location     Type
 30913 ;;		None               void
 30914 ;; Registers used:
 30915 ;;		wreg
 30916 ;; Tracked objects:
 30917 ;;		On entry : 0/0
 30918 ;;		On exit  : 0/0
 30919 ;;		Unchanged: 0/0
 30920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30925 ;;Total ram usage:        1 bytes
 30926 ;; Hardware stack levels used:    1
 30927 ;; Hardware stack levels required when called:    1
 30928 ;; This function calls:
 30929 ;;		Nothing
 30930 ;; This function is called by:
 30931 ;;		_low_isr
 30932 ;; This function uses a non-reentrant model
 30933 ;;
 30934                           
 30935                           	psect	text91
 30936  01705E                     __ptext91:
 30937                           	opt stack 0
 30938  01705E                     _WriteUSART:
 30939                           	opt stack 22
 30940                           
 30941                           ;incstack = 0
 30942                           ;WriteUSART@data stored from wreg
 30943  01705E  6E01               	movwf	WriteUSART@data,c
 30944  017060  ACAC               	btfss	4012,6,c	;volatile
 30945  017062  D004               	goto	i1l8000
 30946  017064  90AC               	bcf	4012,0,c	;volatile
 30947  017066  0101               	movlb	1	; () banked
 30948  017068  B30D               	btfsc	_USART_Status& (0+255),1,b
 30949                           
 30950                           ; BSR set to: 1
 30951  01706A  80AC               	bsf	4012,0,c	;volatile
 30952  01706C                     i1l8000:
 30953  01706C  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
 30954  017070  0012               	return	
 30955  017072                     __end_of_WriteUSART:
 30956                           	opt stack 0
 30957                           pclatu	equ	0xFFB
 30958                           pclath	equ	0xFFA
 30959                           tblptru	equ	0xFF8
 30960                           tblptrh	equ	0xFF7
 30961                           tblptrl	equ	0xFF6
 30962                           tablat	equ	0xFF5
 30963                           prodh	equ	0xFF4
 30964                           prodl	equ	0xFF3
 30965                           intcon	equ	0xFF2
 30966                           postinc0	equ	0xFEE
 30967                           fsr0h	equ	0xFEA
 30968                           fsr0l	equ	0xFE9
 30969                           wreg	equ	0xFE8
 30970                           indf1	equ	0xFE7
 30971                           postinc1	equ	0xFE6
 30972                           postdec1	equ	0xFE5
 30973                           fsr1h	equ	0xFE2
 30974                           fsr1l	equ	0xFE1
 30975                           bsr	equ	0xFE0
 30976                           indf2	equ	0xFDF
 30977                           postinc2	equ	0xFDE
 30978                           postdec2	equ	0xFDD
 30979                           fsr2h	equ	0xFDA
 30980                           fsr2l	equ	0xFD9
 30981                           status	equ	0xFD8
 30982                           
 30983 ;; *************** function _high_isr *****************
 30984 ;; Defined at:
 30985 ;;		line 58 in file "interrupts.c"
 30986 ;; Parameters:    Size  Location     Type
 30987 ;;		None
 30988 ;; Auto vars:     Size  Location     Type
 30989 ;;		None
 30990 ;; Return value:  Size  Location     Type
 30991 ;;		None               void
 30992 ;; Registers used:
 30993 ;;		None
 30994 ;; Tracked objects:
 30995 ;;		On entry : 0/0
 30996 ;;		On exit  : 0/0
 30997 ;;		Unchanged: 0/0
 30998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31001 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 31002 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 31003 ;;Total ram usage:       14 bytes
 31004 ;; Hardware stack levels used:    1
 31005 ;; This function calls:
 31006 ;;		Nothing
 31007 ;; This function is called by:
 31008 ;;		Interrupt level 2
 31009 ;; This function uses a non-reentrant model
 31010 ;;
 31011                           
 31012                           	psect	intcode
 31013  000008                     __pintcode:
 31014                           	opt stack 0
 31015  000008                     _high_isr:
 31016                           	opt stack 19
 31017                           
 31018                           ;incstack = 0
 31019  000008  CFFA F16E          	movff	pclath,??_high_isr
 31020  00000C  CFFB F16F          	movff	pclatu,??_high_isr+1
 31021  000010  CFE9 F170          	movff	fsr0l,??_high_isr+2
 31022  000014  EF89  F0B4         	goto	int_func
 31023                           pclatu	equ	0xFFB
 31024                           pclath	equ	0xFFA
 31025                           tblptru	equ	0xFF8
 31026                           tblptrh	equ	0xFF7
 31027                           tblptrl	equ	0xFF6
 31028                           tablat	equ	0xFF5
 31029                           prodh	equ	0xFF4
 31030                           prodl	equ	0xFF3
 31031                           intcon	equ	0xFF2
 31032                           postinc0	equ	0xFEE
 31033                           fsr0h	equ	0xFEA
 31034                           fsr0l	equ	0xFE9
 31035                           wreg	equ	0xFE8
 31036                           indf1	equ	0xFE7
 31037                           postinc1	equ	0xFE6
 31038                           postdec1	equ	0xFE5
 31039                           fsr1h	equ	0xFE2
 31040                           fsr1l	equ	0xFE1
 31041                           bsr	equ	0xFE0
 31042                           indf2	equ	0xFDF
 31043                           postinc2	equ	0xFDE
 31044                           postdec2	equ	0xFDD
 31045                           fsr2h	equ	0xFDA
 31046                           fsr2l	equ	0xFD9
 31047                           status	equ	0xFD8
 31048                           
 31049                           	psect	intcode_body
 31050  016912                     __pintcode_body:
 31051                           	opt stack 19
 31052  016912                     int_func:
 31053                           	opt stack 19
 31054  016912  CFEA F171          	movff	fsr0h,??_high_isr+3
 31055  016916  CFE1 F172          	movff	fsr1l,??_high_isr+4
 31056  01691A  CFE2 F173          	movff	fsr1h,??_high_isr+5
 31057  01691E  CFD9 F174          	movff	fsr2l,??_high_isr+6
 31058  016922  CFDA F175          	movff	fsr2h,??_high_isr+7
 31059  016926  CFF3 F176          	movff	prodl,??_high_isr+8
 31060  01692A  CFF4 F177          	movff	prodh,??_high_isr+9
 31061  01692E  CFF6 F178          	movff	tblptrl,??_high_isr+10
 31062  016932  CFF7 F179          	movff	tblptrh,??_high_isr+11
 31063  016936  CFF8 F17A          	movff	tblptru,??_high_isr+12
 31064  01693A  CFF5 F17B          	movff	tablat,??_high_isr+13
 31065  01693E  C17B  FFF5         	movff	??_high_isr+13,tablat
 31066  016942  C17A  FFF8         	movff	??_high_isr+12,tblptru
 31067  016946  C179  FFF7         	movff	??_high_isr+11,tblptrh
 31068  01694A  C178  FFF6         	movff	??_high_isr+10,tblptrl
 31069  01694E  C177  FFF4         	movff	??_high_isr+9,prodh
 31070  016952  C176  FFF3         	movff	??_high_isr+8,prodl
 31071  016956  C175  FFDA         	movff	??_high_isr+7,fsr2h
 31072  01695A  C174  FFD9         	movff	??_high_isr+6,fsr2l
 31073  01695E  C173  FFE2         	movff	??_high_isr+5,fsr1h
 31074  016962  C172  FFE1         	movff	??_high_isr+4,fsr1l
 31075  016966  C171  FFEA         	movff	??_high_isr+3,fsr0h
 31076  01696A  C170  FFE9         	movff	??_high_isr+2,fsr0l
 31077  01696E  C16F  FFFB         	movff	??_high_isr+1,pclatu
 31078  016972  C16E  FFFA         	movff	??_high_isr,pclath
 31079  016976  0011               	retfie		f
 31080  016978                     __end_of_high_isr:
 31081                           	opt stack 0
 31082                           pclatu	equ	0xFFB
 31083                           pclath	equ	0xFFA
 31084                           tblptru	equ	0xFF8
 31085                           tblptrh	equ	0xFF7
 31086                           tblptrl	equ	0xFF6
 31087                           tablat	equ	0xFF5
 31088                           prodh	equ	0xFF4
 31089                           prodl	equ	0xFF3
 31090                           intcon	equ	0xFF2
 31091                           postinc0	equ	0xFEE
 31092                           fsr0h	equ	0xFEA
 31093                           fsr0l	equ	0xFE9
 31094                           wreg	equ	0xFE8
 31095                           indf1	equ	0xFE7
 31096                           postinc1	equ	0xFE6
 31097                           postdec1	equ	0xFE5
 31098                           fsr1h	equ	0xFE2
 31099                           fsr1l	equ	0xFE1
 31100                           bsr	equ	0xFE0
 31101                           indf2	equ	0xFDF
 31102                           postinc2	equ	0xFDE
 31103                           postdec2	equ	0xFDD
 31104                           fsr2h	equ	0xFDA
 31105                           fsr2l	equ	0xFD9
 31106                           status	equ	0xFD8
 31107                           pclatu	equ	0xFFB
 31108                           pclath	equ	0xFFA
 31109                           tblptru	equ	0xFF8
 31110                           tblptrh	equ	0xFF7
 31111                           tblptrl	equ	0xFF6
 31112                           tablat	equ	0xFF5
 31113                           prodh	equ	0xFF4
 31114                           prodl	equ	0xFF3
 31115                           intcon	equ	0xFF2
 31116                           postinc0	equ	0xFEE
 31117                           fsr0h	equ	0xFEA
 31118                           fsr0l	equ	0xFE9
 31119                           wreg	equ	0xFE8
 31120                           indf1	equ	0xFE7
 31121                           postinc1	equ	0xFE6
 31122                           postdec1	equ	0xFE5
 31123                           fsr1h	equ	0xFE2
 31124                           fsr1l	equ	0xFE1
 31125                           bsr	equ	0xFE0
 31126                           indf2	equ	0xFDF
 31127                           postinc2	equ	0xFDE
 31128                           postdec2	equ	0xFDD
 31129                           fsr2h	equ	0xFDA
 31130                           fsr2l	equ	0xFD9
 31131                           status	equ	0xFD8
 31132                           
 31133                           	psect	param1
 31134  0000                     pclatu	equ	0xFFB
 31135                           pclath	equ	0xFFA
 31136                           tblptru	equ	0xFF8
 31137                           tblptrh	equ	0xFF7
 31138                           tblptrl	equ	0xFF6
 31139                           tablat	equ	0xFF5
 31140                           prodh	equ	0xFF4
 31141                           prodl	equ	0xFF3
 31142                           intcon	equ	0xFF2
 31143                           postinc0	equ	0xFEE
 31144                           fsr0h	equ	0xFEA
 31145                           fsr0l	equ	0xFE9
 31146                           wreg	equ	0xFE8
 31147                           indf1	equ	0xFE7
 31148                           postinc1	equ	0xFE6
 31149                           postdec1	equ	0xFE5
 31150                           fsr1h	equ	0xFE2
 31151                           fsr1l	equ	0xFE1
 31152                           bsr	equ	0xFE0
 31153                           indf2	equ	0xFDF
 31154                           postinc2	equ	0xFDE
 31155                           postdec2	equ	0xFDD
 31156                           fsr2h	equ	0xFDA
 31157                           fsr2l	equ	0xFD9
 31158                           status	equ	0xFD8


Data Sizes:
    Strings     3886
    Constant    322
    Data        8
    BSS         475
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      70
    BANK0           160    120     153
    BANK1           256     91     209
    BANK2           256    103     103
    BANK3           256      0     200
    BANK4           256      0     100
    BANK5           256    214     214
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sprintf$2241	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_286(CODE[17]), STR_285(CODE[17]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_284(CODE[32]), STR_283(CODE[35]), STR_282(CODE[35]), STR_267(CODE[23]), 
		 -> STR_266(CODE[23]), STR_208(CODE[23]), STR_207(CODE[23]), STR_203(CODE[16]), 
		 -> STR_202(CODE[36]), STR_190(CODE[13]), STR_189(CODE[20]), STR_188(CODE[17]), 
		 -> STR_187(CODE[29]), STR_171(CODE[15]), STR_170(CODE[32]), STR_152(CODE[15]), 
		 -> STR_151(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK5[200]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2221$_cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    Multiple_I2C_Read@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    I2C_Read_Sequential@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    Parse_Time@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    SprintDate@ReturnBuf	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK5[200]), 

    LCD_Scroll@This	PTR unsigned char  size(2) Largest target is 17
		 -> STR_275(CODE[5]), STR_274(CODE[5]), STR_273(CODE[10]), STR_272(CODE[16]), 
		 -> STR_271(CODE[11]), STR_270(CODE[12]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_251(CODE[6]), STR_250(CODE[9]), STR_249(CODE[14]), STR_233(CODE[4]), 
		 -> STR_232(CODE[5]), STR_231(CODE[8]), STR_230(CODE[10]), STR_229(CODE[9]), 
		 -> STR_198(CODE[2]), STR_197(CODE[10]), STR_196(CODE[9]), STR_177(CODE[10]), 
		 -> STR_176(CODE[10]), STR_175(CODE[13]), STR_160(CODE[10]), STR_159(CODE[10]), 
		 -> STR_158(CODE[17]), STR_138(CODE[6]), STR_137(CODE[6]), STR_136(CODE[9]), 
		 -> STR_135(CODE[10]), STR_110(CODE[7]), STR_109(CODE[4]), STR_108(CODE[6]), 
		 -> STR_107(CODE[9]), STR_106(CODE[13]), STR_75(CODE[4]), STR_74(CODE[6]), 
		 -> STR_73(CODE[9]), STR_72(CODE[14]), STR_50(CODE[5]), STR_49(CODE[5]), 
		 -> STR_48(CODE[9]), STR_47(CODE[9]), 

    LCDdisplayFeedback@Text	PTR unsigned char  size(2) Largest target is 200
		 -> STR_279(CODE[16]), STR_243(CODE[16]), STR_241(CODE[16]), STR_238(CODE[15]), 
		 -> STR_186(CODE[16]), STR_184(CODE[16]), STR_182(CODE[13]), STR_169(CODE[14]), 
		 -> STR_167(CODE[16]), STR_165(CODE[15]), STR_154(CODE[16]), Command@buf(BANK5[200]), 
		 -> STR_150(CODE[14]), STR_148(CODE[16]), STR_146(CODE[15]), STR_128(CODE[13]), 
		 -> STR_126(CODE[15]), STR_122(CODE[14]), STR_118(CODE[16]), STR_105(CODE[16]), 
		 -> STR_97(CODE[16]), STR_95(CODE[16]), STR_92(CODE[15]), STR_89(CODE[15]), 
		 -> STR_86(CODE[14]), STR_83(CODE[16]), STR_71(CODE[16]), STR_64(CODE[16]), 
		 -> STR_62(CODE[15]), STR_59(CODE[14]), STR_56(CODE[16]), STR_40(CODE[12]), 
		 -> STR_38(CODE[9]), STR_35(CODE[8]), STR_32(CODE[13]), STR_29(CODE[9]), 
		 -> STR_26(CODE[8]), STR_23(CODE[13]), 

    LCDPrintString@Text	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_279(CODE[16]), STR_277(CODE[17]), 
		 -> STR_264(CODE[10]), STR_243(CODE[16]), STR_241(CODE[16]), STR_238(CODE[15]), 
		 -> STR_210(CODE[17]), STR_206(CODE[17]), STR_186(CODE[16]), STR_184(CODE[16]), 
		 -> STR_182(CODE[13]), STR_169(CODE[14]), STR_167(CODE[16]), STR_165(CODE[15]), 
		 -> STR_154(CODE[16]), Command@buf(BANK5[200]), STR_150(CODE[14]), STR_148(CODE[16]), 
		 -> STR_146(CODE[15]), STR_128(CODE[13]), STR_126(CODE[15]), STR_122(CODE[14]), 
		 -> STR_118(CODE[16]), STR_105(CODE[16]), STR_97(CODE[16]), STR_95(CODE[16]), 
		 -> STR_92(CODE[15]), STR_89(CODE[15]), STR_86(CODE[14]), STR_83(CODE[16]), 
		 -> STR_71(CODE[16]), STR_64(CODE[16]), STR_62(CODE[15]), STR_59(CODE[14]), 
		 -> STR_56(CODE[16]), STR_40(CODE[12]), STR_38(CODE[9]), STR_35(CODE[8]), 
		 -> STR_32(CODE[13]), STR_29(CODE[9]), STR_26(CODE[8]), STR_23(CODE[13]), 
		 -> STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[16]), STR_12(CODE[15]), 
		 -> STR_11(CODE[14]), STR_10(CODE[13]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), low_isr@LCD_TEMP(BANK0[16]), 

    LCDPrintString@c	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_279(CODE[16]), STR_277(CODE[17]), 
		 -> STR_264(CODE[10]), STR_243(CODE[16]), STR_241(CODE[16]), STR_238(CODE[15]), 
		 -> STR_210(CODE[17]), STR_206(CODE[17]), STR_186(CODE[16]), STR_184(CODE[16]), 
		 -> STR_182(CODE[13]), STR_169(CODE[14]), STR_167(CODE[16]), STR_165(CODE[15]), 
		 -> STR_154(CODE[16]), Command@buf(BANK5[200]), STR_150(CODE[14]), STR_148(CODE[16]), 
		 -> STR_146(CODE[15]), STR_128(CODE[13]), STR_126(CODE[15]), STR_122(CODE[14]), 
		 -> STR_118(CODE[16]), STR_105(CODE[16]), STR_97(CODE[16]), STR_95(CODE[16]), 
		 -> STR_92(CODE[15]), STR_89(CODE[15]), STR_86(CODE[14]), STR_83(CODE[16]), 
		 -> STR_71(CODE[16]), STR_64(CODE[16]), STR_62(CODE[15]), STR_59(CODE[14]), 
		 -> STR_56(CODE[16]), STR_40(CODE[12]), STR_38(CODE[9]), STR_35(CODE[8]), 
		 -> STR_32(CODE[13]), STR_29(CODE[9]), STR_26(CODE[8]), STR_23(CODE[13]), 
		 -> STR_15(CODE[10]), STR_14(CODE[17]), STR_13(CODE[16]), STR_12(CODE[15]), 
		 -> STR_11(CODE[14]), STR_10(CODE[13]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_7(CODE[10]), STR_6(CODE[9]), low_isr@LCD_TEMP(BANK0[16]), 

    Send_Config2@data	PTR const unsigned char  size(2) Largest target is 16
		 -> SubLightOFF(CODE[16]), SubLightON(CODE[16]), Aux2OFF(CODE[16]), Aux2ON(CODE[16]), 
		 -> BedOFF(CODE[16]), BedON(CODE[16]), AuxOFF(CODE[16]), AuxON(CODE[16]), 
		 -> fanOFF(CODE[16]), fanON(CODE[16]), 

    Send_Config1@data	PTR const unsigned char  size(2) Largest target is 12
		 -> TXdataF(CODE[12]), TXdataE(CODE[12]), TXdataD(CODE[12]), 

    Command@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    UARTstring@data	PTR const unsigned char  size(2) Largest target is 200
		 -> STR_281(CODE[26]), STR_280(CODE[5]), STR_278(CODE[16]), STR_276(CODE[24]), 
		 -> STR_265(CODE[3]), STR_263(CODE[15]), STR_262(CODE[22]), STR_261(CODE[50]), 
		 -> STR_260(CODE[7]), STR_259(CODE[6]), STR_258(CODE[11]), STR_257(CODE[17]), 
		 -> STR_256(CODE[12]), STR_255(CODE[13]), STR_254(CODE[10]), STR_253(CODE[12]), 
		 -> STR_248(CODE[28]), STR_247(CODE[68]), STR_246(CODE[9]), STR_245(CODE[11]), 
		 -> STR_244(CODE[23]), STR_242(CODE[19]), STR_240(CODE[20]), STR_237(CODE[20]), 
		 -> STR_228(CODE[21]), STR_227(CODE[61]), STR_226(CODE[69]), STR_225(CODE[7]), 
		 -> STR_224(CODE[7]), STR_223(CODE[10]), STR_222(CODE[11]), STR_221(CODE[29]), 
		 -> STR_220(CODE[13]), STR_219(CODE[33]), STR_218(CODE[25]), STR_217(CODE[28]), 
		 -> STR_216(CODE[3]), STR_215(CODE[26]), STR_214(CODE[2]), STR_213(CODE[34]), 
		 -> STR_212(CODE[37]), STR_209(CODE[24]), STR_205(CODE[3]), STR_195(CODE[13]), 
		 -> STR_194(CODE[73]), STR_193(CODE[5]), STR_192(CODE[12]), STR_191(CODE[17]), 
		 -> STR_185(CODE[28]), STR_183(CODE[30]), STR_181(CODE[33]), STR_174(CODE[42]), 
		 -> STR_173(CODE[62]), STR_172(CODE[26]), STR_168(CODE[43]), STR_166(CODE[48]), 
		 -> STR_164(CODE[27]), STR_157(CODE[42]), STR_156(CODE[66]), STR_155(CODE[25]), 
		 -> STR_153(CODE[49]), Command@buf(BANK5[200]), STR_149(CODE[33]), STR_147(CODE[38]), 
		 -> STR_145(CODE[27]), STR_144(CODE[28]), STR_134(CODE[37]), STR_133(CODE[68]), 
		 -> STR_132(CODE[18]), STR_131(CODE[15]), STR_130(CODE[11]), STR_129(CODE[28]), 
		 -> STR_127(CODE[18]), STR_125(CODE[32]), STR_121(CODE[31]), STR_117(CODE[38]), 
		 -> STR_104(CODE[24]), STR_103(CODE[68]), STR_102(CODE[10]), STR_101(CODE[6]), 
		 -> STR_100(CODE[8]), STR_99(CODE[11]), STR_98(CODE[21]), STR_96(CODE[16]), 
		 -> STR_94(CODE[19]), STR_91(CODE[18]), STR_88(CODE[16]), STR_85(CODE[15]), 
		 -> STR_82(CODE[22]), STR_70(CODE[27]), STR_69(CODE[68]), STR_68(CODE[7]), 
		 -> STR_67(CODE[8]), STR_66(CODE[11]), STR_65(CODE[24]), STR_63(CODE[19]), 
		 -> STR_61(CODE[19]), STR_58(CODE[18]), STR_55(CODE[25]), STR_46(CODE[17]), 
		 -> STR_45(CODE[68]), STR_44(CODE[8]), STR_43(CODE[7]), STR_42(CODE[11]), 
		 -> STR_41(CODE[17]), STR_39(CODE[12]), STR_37(CODE[9]), STR_34(CODE[8]), 
		 -> STR_31(CODE[13]), STR_28(CODE[9]), STR_25(CODE[8]), STR_22(CODE[13]), 
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_16(CODE[29]), STR_5(CODE[38]), 
		 -> low_isr@TEMP_Rxdata(BANK0[100]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    lowercase@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@address	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    GetEnteredNumber@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StartsWith@That	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_234(CODE[4]), STR_199(CODE[4]), STR_178(CODE[4]), STR_161(CODE[9]), 
		 -> STR_142(CODE[17]), STR_141(CODE[7]), STR_139(CODE[4]), STR_76(CODE[8]), 
		 -> STR_51(CODE[11]), STR_19(CODE[4]), 

    StartsWith@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_235(CODE[2]), STR_211(CODE[4]), STR_204(CODE[5]), STR_201(CODE[8]), 
		 -> STR_200(CODE[2]), STR_180(CODE[2]), STR_179(CODE[2]), STR_163(CODE[2]), 
		 -> STR_162(CODE[2]), STR_143(CODE[2]), STR_140(CODE[2]), STR_124(CODE[5]), 
		 -> STR_123(CODE[6]), STR_120(CODE[4]), STR_119(CODE[6]), STR_116(CODE[2]), 
		 -> STR_115(CODE[6]), STR_114(CODE[2]), STR_113(CODE[10]), STR_112(CODE[6]), 
		 -> STR_111(CODE[6]), STR_79(CODE[4]), STR_78(CODE[6]), STR_77(CODE[2]), 
		 -> STR_52(CODE[2]), STR_20(CODE[2]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_252(CODE[2]), STR_239(CODE[18]), STR_236(CODE[17]), STR_93(CODE[18]), 
		 -> STR_90(CODE[17]), STR_87(CODE[15]), STR_84(CODE[14]), STR_81(CODE[17]), 
		 -> STR_80(CODE[16]), STR_60(CODE[18]), STR_57(CODE[17]), STR_54(CODE[20]), 
		 -> STR_53(CODE[19]), STR_36(CODE[9]), STR_33(CODE[8]), STR_30(CODE[5]), 
		 -> STR_27(CODE[9]), STR_24(CODE[8]), STR_21(CODE[5]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 100
		 -> STR_275(CODE[5]), STR_274(CODE[5]), STR_273(CODE[10]), STR_272(CODE[16]), 
		 -> STR_271(CODE[11]), STR_270(CODE[12]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_251(CODE[6]), STR_250(CODE[9]), STR_249(CODE[14]), STR_233(CODE[4]), 
		 -> STR_232(CODE[5]), STR_231(CODE[8]), STR_230(CODE[10]), STR_229(CODE[9]), 
		 -> STR_198(CODE[2]), STR_197(CODE[10]), STR_196(CODE[9]), STR_177(CODE[10]), 
		 -> STR_176(CODE[10]), STR_175(CODE[13]), STR_160(CODE[10]), STR_159(CODE[10]), 
		 -> STR_158(CODE[17]), STR_138(CODE[6]), STR_137(CODE[6]), STR_136(CODE[9]), 
		 -> STR_135(CODE[10]), STR_110(CODE[7]), STR_109(CODE[4]), STR_108(CODE[6]), 
		 -> STR_107(CODE[9]), STR_106(CODE[13]), STR_75(CODE[4]), STR_74(CODE[6]), 
		 -> STR_73(CODE[9]), STR_72(CODE[14]), STR_50(CODE[5]), STR_49(CODE[5]), 
		 -> STR_48(CODE[9]), STR_47(CODE[9]), StringAddEqual@temp(BANK2[100]), RemoveSpaces@That(BANK2[100]), 
		 -> low_isr@TEMP_Rxdata(BANK0[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), Rxdata(BANK3[100]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), StringAddEqual@temp(BANK2[100]), RemoveSpaces@That(BANK2[100]), 
		 -> Rxdata(BANK3[100]), low_isr@TEMP_Rxdata(BANK0[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_LCDPrintString
    i1_UARTstring->i1_UARTchar
    i1_UARTchar->i1_CheckSum_byte
    i1_SetLCDcursor->i1_SendLCDbyte
    i1_LCDPrintString->i1_SendLCDbyte
    i1_LCDPrintChar->i1_SendLCDbyte
    i1_ClearLCD->i1_SendLCDbyte
    i1_SendLCDbyte->i1_delayUS
    i1_PulseEnablePin->i1_delayUS
    i1_BufferCopy->i1_cleanBuffer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Command
    _init_LCD->_SendLCDbyte
    _RTC_INIT->_InternalADC_Read
    _I2C_Read_At_Address->_WriteI2C
    _PWM_init->_SetDuty
    _SetFreq->___aldiv
    ___aldiv->___wmul
    _LCDScreenUpdate->_LCDPrintString
    _LCDPrintChar->_SendLCDbyte
    _InitUART->___lldiv
    _InitApp->_delayUS
    _ContrastPWM_init->_SetDuty
    _Command->_SetContrast
    _Command->_SetDuty
    ___lwtoft->___ftpack
    _StringAddEqual->_BufferCopy
    _SprintDate->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _SetDuty->___fttol
    _SetContrast->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lbtoft
    _Send_Config2->_One_Config2
    _Send_Config2->_Zero_Config2
    _Zero_Config2->_delayUS
    _One_Config2->_delayUS
    _Send_Config1->_One_Config1
    _Send_Config1->_Zero_Config1
    _Send_Config1->_f_Config1
    _f_Config1->_delayUS
    _Zero_Config1->_delayUS
    _One_Config1->_delayUS
    _SET_RTC_TIME->_I2C_Write_At_Address
    _SET_RTC_TIME->___awdiv
    _I2C_Write_At_Address->_WriteI2C
    _RemoveSpaces->_BufferCopy
    _READ_RTC_TIME->_I2C_Read_Sequential
    _ResetI2C->_delayUS
    _Init_I2C_Master->_OpenI2C
    _I2C_Read_Sequential->_Multiple_I2C_Read
    _WriteI2C->_IdleI2C
    _Multiple_I2C_Read->_readI2C
    _LCDdisplayFeedback->_LCDPrintString
    _SetLCDcursor->_SendLCDbyte
    _LCDPrintString->_SendLCDbyte
    _ClearLCD->_SendLCDbyte
    _SendLCDbyte->_delayUS
    _PulseEnablePin->_delayUS
    _LCD_Scroll->_BufferCopy
    _BufferCopy->_cleanBuffer
    _InternalADC_Read->_UARTstring
    _UARTstring->_UARTchar
    _UARTchar->_CheckSum_byte
    _GetEnteredNumber->___wmul

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _Command->_RemoveSpaces
    _Command->_StringAddEqual

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_Command

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  450896
                                             89 BANK1      2     2      0
                           _ClearLCD
                            _Command
                _ConfigureOscillator
                   _ContrastPWM_init
                  _EnableInternalADC
                            _InitApp
                           _InitUART
                    _Init_I2C_Master
                       _LCDPrintChar
                     _LCDPrintString
                    _LCDScreenUpdate
                           _PWM_init
                           _RTC_INIT
                          _ReadUSART
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             0     0      0   26624
                           _ClearLCD
                     _PulseEnablePin
                        _SendLCDbyte
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _RTC_INIT                                             0     0      0   23795
                   _InternalADC_Read
                   _RTC_Clock_Enable
               _RTC_TIME_NONMilitary
 ---------------------------------------------------------------------------------
 (2) _RTC_TIME_NONMilitary                                 5     5      0    6542
                                             24 BANK1      5     5      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (2) _RTC_Clock_Enable                                     3     3      0    6443
                                             24 BANK1      3     3      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_At_Address                                  3     1      2     432
                                             17 BANK1      3     1      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0   11848
                            _SetDuty
                            _SetFreq
 ---------------------------------------------------------------------------------
 (2) _SetFreq                                              7     5      2    1267
                                             34 BANK1      7     5      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     428
                                             20 BANK1     14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDScreenUpdate                                      4     4      0   50037
                                             32 BANK1      4     4      0
                           _ClearLCD
                       _LCDPrintChar
                     _LCDPrintString
                       _SetLCDcursor
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _LCDPrintChar                                         1     1      0    9280
                                             28 BANK1      1     1      0
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (1) _InitUART                                            17    12      5     963
                                             27 BANK1     17    12      5
                          _OpenUSART
                          _ReadUSART
                            ___lldiv
                          _baudUSART
 ---------------------------------------------------------------------------------
 (2) _baudUSART                                            1     1      0      22
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                             14 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (1) _ReadUSART                                            1     1      0      23
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     284
                                             14 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0    4063
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _EnableInternalADC                                    2     2      0     254
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ContrastPWM_init                                     0     0      0   10581
                            _SetDuty
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Command                                            220   218      2  240279
                                             83 BANK1      6     4      2
                                              0 BANK5    214   214      0
                   _GetEnteredNumber
                   _InternalADC_Read
                     _LCDPrintString
                         _LCD_Scroll
                 _LCDdisplayFeedback
                         _Parse_Time
                      _READ_RTC_TIME
                       _RemoveSpaces
                       _SET_RTC_TIME
                       _Send_Config1
                       _Send_Config2
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                         _SprintDate
                         _StartsWith
                     _StringAddEqual
                     _StringContains
                        _StringMatch
                         _UARTstring
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwmod
                           ___lwtoft
                        _cleanBuffer
                            _delayUS
                          _lowercase
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercase                                            4     2      2     439
                                             14 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2618
                                             22 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          4     0      4    3087
                                             14 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       5     1      4    4168
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     107   105      2   11074
                                             29 BANK1      4     2      2
                                              0 BANK2    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _StartsWith                                           5     1      4    1732
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _SprintDate                                          12     0     12   10252
                                             65 BANK1     12     0     12
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             39    23     16    8798
                                             26 BANK1     39    23     16
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     540
                                             21 BANK1      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     703
                                             14 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _SetDuty                                             12    12      0   10581
                                             71 BANK1     12    12      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) _SetContrast                                         12    12      0   10649
                                             71 BANK1     12    12      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2464
                                             22 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     679
                                             56 BANK1     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3651
                                             41 BANK1     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3583
                                             26 BANK1     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2433
                                             14 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _Send_Config2                                         6     4      2   18853
                                             25 BANK1      6     4      2
                        _One_Config2
                       _Zero_Config2
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config2                                         1     1      0    4125
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config2                                          1     1      0    4125
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _Send_Config1                                         7     5      2   18591
                                             25 BANK1      7     5      2
                        _One_Config1
                       _Zero_Config1
                            _delayUS
                          _f_Config1
 ---------------------------------------------------------------------------------
 (3) _f_Config1                                            1     1      0    4187
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config1                                         1     1      0    4187
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config1                                          1     1      0    4187
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SET_RTC_TIME                                        21    12      9    5638
                                             22 BANK1     21    12      9
               _I2C_Write_At_Address
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1357
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1369
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_At_Address                                 5     3      2    1664
                                             17 BANK1      5     3      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _RemoveSpaces                                       105   103      2   10319
                                             29 BANK1      2     0      2
                                              0 BANK2    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _READ_RTC_TIME                                        8     8      0    5546
                                             24 BANK1      8     8      0
                _I2C_Read_Sequential
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _ResetI2C                                             0     0      0    4304
                    _Init_I2C_Master
                            _delayUS
 ---------------------------------------------------------------------------------
 (4) _Init_I2C_Master                                      2     2      0     241
                                             16 BANK1      2     2      0
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (5) _OpenI2C                                              2     1      1     139
                                             14 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Sequential                                  5     1      4     667
                                             19 BANK1      5     1      4
                            _IdleI2C
                  _Multiple_I2C_Read
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             2     2      0      31
                                             15 BANK1      2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Multiple_I2C_Read                                    4     1      3     250
                                             15 BANK1      4     1      3
                            _readI2C
 ---------------------------------------------------------------------------------
 (5) _readI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Parse_Time                                          13    11      2    2693
                                             14 BANK1     13    11      2
 ---------------------------------------------------------------------------------
 (2) _LCDdisplayFeedback                                   2     0      2   37264
                                             32 BANK1      2     0      2
                           _ClearLCD
                     _LCDPrintString
                       _SetLCDcursor
 ---------------------------------------------------------------------------------
 (1) _SetLCDcursor                                         3     2      1   12480
                                             28 BANK1      3     2      1
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _LCDPrintString                                       4     2      2   12270
                                             28 BANK1      4     2      2
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _ClearLCD                                             0     0      0    9249
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _SendLCDbyte                                          4     3      1    9249
                                             24 BANK1      4     3      1
                     _PulseEnablePin
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _PulseEnablePin                                       0     0      0    4063
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _delayUS                                             10     6      4    4063
                                             14 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Scroll                                           2     0      2   10770
                                             29 BANK1      2     0      2
                         _BufferCopy
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    7226
                                             22 BANK1      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    2695
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     5     3      2   10810
                                             29 BANK1      5     3      2
                         _UARTstring
 ---------------------------------------------------------------------------------
 (1) _UARTstring                                           4     2      2   10748
                                             25 BANK1      4     2      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (2) _UARTchar                                             4     2      2    1009
                                             21 BANK1      4     2      2
                      _CheckSum_byte
 ---------------------------------------------------------------------------------
 (3) _CheckSum_byte                                        7     4      3     546
                                             14 BANK1      7     4      3
 ---------------------------------------------------------------------------------
 (2) _GetEnteredNumber                                    10     8      2    1460
                                             20 BANK1     10     8      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     694
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                            140   140      0    8535
                                             18 COMRAM    20    20      0
                                              0 BANK0    120   120      0
                         _WriteUSART
                       i1_BufferCopy
                         i1_ClearLCD
                     i1_LCDPrintChar
                   i1_LCDPrintString
                        i1_ReadUSART
                     i1_SetLCDcursor
                       i1_UARTstring
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_UARTstring                                         4     2      2     906
                                             11 COMRAM     4     2      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (9) i1_UARTchar                                           4     2      2     603
                                              7 COMRAM     4     2      2
                    i1_CheckSum_byte
 ---------------------------------------------------------------------------------
 (10) i1_CheckSum_byte                                     7     4      3     378
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (8) i1_SetLCDcursor                                       3     2      1    1357
                                             14 COMRAM     3     2      1
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ReadUSART                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintString                                     4     2      2    1315
                                             14 COMRAM     4     2      2
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintChar                                       1     1      0    1181
                                             14 COMRAM     1     1      0
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ClearLCD                                           0     0      0    1150
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (9) i1_SendLCDbyte                                        4     3      1    1150
                                             10 COMRAM     4     3      1
                   i1_PulseEnablePin
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_PulseEnablePin                                    0     0      0     311
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_delayUS                                          10     6      4     311
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) i1_BufferCopy                                         7     1      6    1164
                                              8 COMRAM     7     1      6
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_cleanBuffer                                        8     4      4     413
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           14    14      0       0
                                              0 BANK1     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _Command
     _GetEnteredNumber
       ___wmul
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCD_Scroll
       _BufferCopy
         _cleanBuffer
     _LCDdisplayFeedback
       _ClearLCD
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _LCDPrintString
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _SetLCDcursor
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
     _Parse_Time
     _READ_RTC_TIME
       _I2C_Read_Sequential
         _IdleI2C
         _Multiple_I2C_Read
           _readI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RemoveSpaces
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _SET_RTC_TIME
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       ___awdiv
       ___awmod
     _Send_Config1
       _One_Config1
         _delayUS
       _Zero_Config1
         _delayUS
       _delayUS
       _f_Config1
         _delayUS
     _Send_Config2
       _One_Config2
         _delayUS
       _Zero_Config2
         _delayUS
       _delayUS
     _SetContrast
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SprintDate
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _StartsWith
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringMatch
     _UARTstring
       _UARTchar
         _CheckSum_byte
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwmod
       ___lwdiv (ARG)
     ___lwtoft
       ___ftpack
     _cleanBuffer
     _delayUS
     _lowercase
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _ConfigureOscillator
   _ContrastPWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
   _EnableInternalADC
   _InitApp
     _delayUS
   _InitUART
     _OpenUSART
     _ReadUSART
     ___lldiv
     _baudUSART
   _Init_I2C_Master
     _OpenI2C
   _LCDPrintChar
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDPrintString
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDScreenUpdate
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintChar
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _cleanBuffer
     _delayUS
   _PWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetFreq
       ___aldiv
         ___wmul (ARG)
       ___wmul
   _RTC_INIT
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _RTC_Clock_Enable
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RTC_TIME_NONMilitary
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
   _ReadUSART
   _SetContrast
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetDuty
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetLCDcursor
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _UARTstring
     _UARTchar
       _CheckSum_byte
   _cleanBuffer
   _delayUS
   _init_LCD
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _PulseEnablePin
       _delayUS
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
     _delayUS

 _low_isr (ROOT)
   _WriteUSART
   i1_BufferCopy
     i1_cleanBuffer
   i1_ClearLCD
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintChar
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintString
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_ReadUSART
   i1_SetLCDcursor
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_UARTstring
     i1_UARTchar
       i1_CheckSum_byte
   i1_cleanBuffer

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100     D6      D6      15       83.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      64      13       39.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     67      67       9       40.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5B      D1       7       81.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     78      99       5       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      46       1       73.7%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     419      20        0.0%
DATA                 0      0     419       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jan 23 16:59:07 2015

                      BufferCopy@shift 0189                      i1LCDPrintString@c 0011  
              __size_of_StringContains 007E                           _Zero_Config1 5FD6  
                         _Zero_Config2 6BA0                            _SSPSTATbits 000FC7  
                          ?_LCD_Scroll 018B                           ___awdiv@sign 0181  
                                   bsr 000FE0                    ___wmul@multiplicand 017E  
                          __CFG_BORV$3 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                           __CFG_CP4$OFF 000000  
                         __CFG_CP5$OFF 000000                                    l206 665E  
                                  l320 6A56                                    l208 663C  
                                  l322 6A60                                    l410 5C2A  
                                  l306 4528                                    l323 6A8C  
                                  l404 6566                                    l412 5C8C  
                                  l405 656A                                    l173 70C4  
                                  l421 6E86                                    l422 6E8E  
                                  l419 6E7E                                    l391 66D6  
                                  l560 03CC                                    l392 66D8  
                                  l393 66E4                                    l394 66E6  
                                  l803 688A                                    l555 2450  
                                  l387 66BC                                    l575 07DC  
                                  l964 34BC                           __CFG_CPB$OFF 000000  
                                  _PR2 000FCB                           __CFG_CPD$OFF 000000  
                   _TXToiletMyBathroom EF9B                   i1LCDPrintString@Text 000F  
                                  _buf 0300                           ___awmod@sign 0181  
                                  prod 000FF3                                    wreg 000FE8  
                      _LCDScreenUpdate 2F8C                       ??i1_SetLCDcursor 0010  
                       SetContrast@LSB 01BD                         SetContrast@MSB 01BC  
                        Send_Config1@i 018C                          Send_Config2@i 018C  
                         __CFG_LVP$OFF 000000                           ___ftdiv@cntr 0191  
                      ??i1_SendLCDbyte 000C                           ___ftdiv@sign 0196  
                         __CFG_WDT$OFF 000000                                   l1016 638C  
                                 l1201 5C00                                   l1106 39E0  
                                 l1211 5C0C                                   l1203 5BF8  
                                 l1035 3F28                                   l1310 5660  
                                 l1302 56B2                                   l1214 5C16  
                                 l1303 5646                                   l1207 5C02  
                                 l1231 501E                                   l1223 4F10  
                                 l1080 37C2                                   l1232 4F4E  
                                 l1321 5698                                   l1313 56A8  
                                 l1217 5C1A                                   l1241 4FF6  
                                 l1233 4F3C                                   l1314 568A  
                                 l1306 564A                                   l1250 4FA2  
                                 l1242 4F7A                                   l1226 4F14  
                                 l1075 370A                                   l1067 365C  
                                 l1059 359E                                   l1315 568E  
                                 l2043 6610                                   l1324 569C  
                                 l1260 4FC6                                   l1236 500A  
                                 l1333 56B4                                   l1309 5668  
                                 l2053 6A30                                   l1413 26BE  
                                 l1253 4FE2                                   l1245 4F7E  
                                 l1237 4F74                                   l1166 6252  
                                 l1318 5692                                   l1254 4FBA  
                                 l1238 4F62                                   l1175 628C  
                                 l1191 5C14                                   l1183 5B84  
                                 l1271 4FE4                                   l1263 4FCC  
                                 l1096 392E                                   l1088 3880  
                                 l1344 6786                                   l1192 5BC8  
                                 l1361 6EBE                                   l1353 67C6  
                                 l1337 56BE                                   l1329 56AA  
                                 l1193 5BC0                                   l1257 4FC2  
                                 l1249 4FB4                  RTC_Clock_Enable@Error 0186  
                                 l1362 6EC0                                   l1186 5B88  
                                 l1266 4FD0                                   l1275 4FF8  
                                 l1284 55F6                                   l1196 5C0A  
                                 l1293 5624                                   l1197 5BE4  
                                 l1294 561C                                   l1198 5BDC  
                                 l1287 55FA                                   l1279 500C  
                                 l1297 56BC                                   l1298 5640  
                                 l1299 5638                                   l1483 2CE8  
                                 l1467 2BD6                                   l1904 4D94  
                                 l1980 5866                                   l8110 5CE6  
                                 l7310 66AC                                   l8130 5D2C  
                                 l8122 5D10                                   l8114 5CF4  
                                 l6700 4844                                   l8142 5D58  
                                 l8134 5D3C                                   l8126 5D1E  
                                 l8118 5D02                                   l7318 66BE  
                                 l6712 48BA                                   l8146 5D6A  
                                 l8138 5D4A                                   l8074 432A  
                                 l6714 48D2                                   l6706 488C  
                                 l8148 5D6E                                   l8076 4330  
                                 l6732 4974                                   l6724 4934  
                                 l6716 48D8                                   l6728 494E  
                                 l9306 6A88                                   l9410 5728  
                                 l9316 6A96                                   l9412 572A  
                                 l9340 7072                                   l9502 62A0  
                                 l9520 67BA                                   l9600 6602  
                                 l9354 6B06                                   l9274 6634  
                                 l9610 69F8                                   _BAUD 01C9  
                                 l9380 654C                                   l9516 6792  
                                 l9508 6772                                   l9524 67CA  
                                 l9612 69FE                                   l9358 6B24  
                                 l9454 5786                                   l9366 6B82  
                                 l9710 24C4                                   l9702 2498  
                                 l9384 656E                                   l9480 6260  
                                 l9368 6B8E                                   l9560 51B0  
                                 l9552 515C                                   l9616 6A22  
                                 l9608 69EC                                   l9800 27B2  
                                 l9704 24B2                                   l9378 6536  
                                 l9386 6586                                   l9466 6228  
                                 l9538 6F74                                   l9810 2800  
                                 l9802 27C8                                   l9722 252C  
                                 l9730 25B8                                   l9706 24B8  
                                 l9714 24CE                                   l7882 57D2  
                                 l9388 659C                                   l9660 64EE  
                                 l9484 6264                                   l9572 5226  
                                 l9564 51D6                                   l9556 5170  
                                 l9708 24BE                                   l7884 57EA  
                                 l9638 5C90                                   l9646 6E10  
                                 l9566 5202                                   l9558 5184  
                                 l9590 65CC                                   l9806 27E2  
                                 l9814 2808                                   l9750 2658  
                                 l9718 2504                                   l7894 584C  
                                 l7886 57F0                                   l9656 64B8  
                                 l9568 5216                                   l9592 65D2  
                                 l9920 2B62                                   l9912 2AFE  
                                 l9904 2AA8                                   l9832 28E4  
                                 l9816 285C                                   l9760 26B4  
                                 l9752 2660                                   l9682 5A52  
                                 l9674 5A34                                   l9498 629C  
                                 l9578 5240                                   l9906 2AB4  
                                 l9770 2700                                   l9762 26BA  
                                 l9738 25F8                                   l9588 65C0  
                                 l9924 2B9A                                   l9852 2948  
                                 l9828 28C4                                   l9780 273C  
                                 l9764 26C4                                   l9756 268E  
                                 l9926 2BA6                                   l9918 2B56  
                                 l9838 28FA                                   l9774 2728  
                                 l9758 26AC                                   STR_1 FFFD  
                                 l9784 274E                                   l9792 2784  
                                 l9776 2734                                   l9696 2476  
                                 STR_2 F9EE                                   STR_3 FFFD  
                                 l9938 2BEA                                   l9954 2C62  
                                 l9962 2C8A                                   l9866 2996  
                                 l9882 29E4                                   l9786 2764  
                                 STR_4 F5E5                                   STR_5 F394  
                                 l9972 2CBE                                   l9948 2C42  
                                 l9892 2A3A                                   l9884 2A02  
                                 l9796 27A0                                   STR_6 FF0E  
                                 STR_7 FEA1                                   l9982 2D00  
                                 l9966 2C9A                                   STR_8 FE28  
                                 STR_9 FDE5                                   l9888 2A20  
                                 l9898 2A6A                                   l9988 2D44  
                                 l9998 2D9C                EnableInternalADC@config 017C  
                ??_I2C_Read_At_Address 0181                                   _LATA 000F89  
                                 _LATC 000F8B                                   _LATD 000F8C  
                                 _LATE 000F8D                                   _PIE1 000F9D  
                                 i1l54 0292                                   i1l56 0232  
                                 u7605 4864                                   u7595 481C  
                                 u9540 43C0                                   u9545 43B4  
                         __CFG_PWRT$ON 000000                             i1delayUS@i 0006  
                           i1delayUS@j 000A                          ?_LCDPrintChar 0001  
                                 _main 3A00                           ___ftpack@arg 017C  
                         ___ftpack@exp 017F                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                       ??_PulseEnablePin 0186  
                  baudUSART@baudconfig 017C                                   pclat 000FFA  
              __end_of_Init_I2C_Master 6BA0                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0368  
                      __end_of_Aux2OFF F01D                          __CFG_IESO$OFF 000000  
                      __end_of_IdleI2C 7084                      ?_GetEnteredNumber 0182  
                         _sprintf$2241 01A1                           _sprintf$2234 019D  
                         _sprintf$2235 019F             __size_of_Multiple_I2C_Read 006A  
                        __CFG_MCLRE$ON 000000                           ___ftmul@cntr 01A4  
                      __end_of_Command 2462                         UARTstring@data 0187  
                          ?i1_UARTchar 0008                           ___ftmul@sign 01A5  
                      __end_of_TXdataD F0B9                        __end_of_TXdataE F0C5  
                      __end_of_TXdataF F0D1                        __end_of_InitApp 6AF8  
                   ??_GetEnteredNumber 0184                        SetContrast@Duty 01C0  
                      __end_of_OpenI2C 701A               I2C_Write_At_Address@data 0180  
                         ___fttol@exp1 01B4                 __size_of_READ_RTC_TIME 00E6  
                         ___fttol@lval 01B0                        __end_of_SetFreq 6770  
                      __end_of_SetDuty 594A                        SetContrast@temp 01BE  
                         f_Config1@pin 0186      i1UARTchar@NinethBit_override_data 0009  
      UARTchar@NinethBit_override_data 0184                         _LCDPrintString 64AA  
                                l10012 2E5C                                  l10004 2DB8  
                                l10020 2EDE                                  l10030 2F34  
                                l10006 2E0E                                  l10022 2EFC  
                                l10016 2E9C                                  l11010 35B8  
                                l11002 359A                                  l10026 2F10  
                                l10212 5606                                  l10036 2F58  
                                l11022 35FA                                  l11014 35BC  
                                l10038 2F7E                                  l10118 4F90  
                                l11200 3970                                  l11120 37E0  
                                l11104 37AE                                  l11040 3658  
                                l10152 5B94                                  l11026 35FE  
                                l10410 5978                                  l10322 4B76  
                                l12002 13FE                                  l11212 399E  
                                l11132 3822                                  l11116 37DC  
                                l11108 37BE                                  l11060 36B8  
                                l11052 367A                                  l11036 3648  
                                l10260 56C6                                  l10420 59B8  
                                l10340 4BE2                                  l10316 4B3C  
                                l12012 1482                                  l11142 386C  
                                l10422 59BE                                  l10430 59F0  
                                l10414 599A                                  l10270 4CB2  
                                l10350 4C2C                                  l12110 1AC4  
                                l11208 399A                                  l11216 39A2  
                                l11128 381E                                  l11064 36BC  
                                l11048 3676                                  l10336 4BC4  
                                l12200 1FC4                                  l12016 14BC  
                                l12008 144C                                  l11170 38E0  
                                l11154 389A                                  l11146 387C  
                                l11090 3760                                  l11082 3722  
                                l11074 3706                                  l10434 5A04  
                                l10426 59E2                                  l10418 59AC  
                                l11250 3E3A                                  l10346 4C0E  
                                l10610 63DC                                  l10602 63B2  
                                l12130 1C0A                                  l12042 161A  
                                l12026 1540                                  l12034 15A4  
                                l10098 4F26                                  l10700 4716  
                                l11228 39DC                                  l11180 392A  
                                l10188 5C26                                  l10380 558A  
                                l10372 5560                                  l11308 408A  
                                l11260 3EA4                                  l10276 4CEC  
                                l10444 49C6                                  l10620 641C  
                                l12212 20AE                                  l12052 16A4  
                                l11340 6394                                  l10710 47A0  
                                l11166 38DC                                  l11158 389E  
                                l11094 3764                                  l10390 55C0  
                                l10382 5590                                  l10366 5538  
                                l10462 4A6E                                  l12214 20D0  
                                l12222 2152                                  l12150 1CC8  
                                l12134 1C2C                                  l12142 1C5A  
                                l10720 47C4                                  l10296 4D4C  
                                l10480 4AF0                                  l10472 4AAC  
                                l10616 63EE                                  l12128 1BB8  
                                l12064 1760                                  l12056 16DA  
                                l12048 166A                                  l12080 1820  
                                l10714 47AE                                  l10722 47CA  
                                l10378 557E                                  l10394 55CE  
                                l10474 4AC4                                  l10466 4A8A  
                                l10642 5EFA                                  l12242 22F6  
                                l12170 1DB2                                  l11196 396C  
                                l11188 3946                                  l10476 4ACA  
                                l10628 5EB0                                  l10644 5F06  
                                l10580 646A                                  l12244 2348  
                                l12172 1DC4                                  l11700 0112  
                                l10662 4672                                  l10830 40E6  
                                l10398 55E2                                  l11278 3F4C  
                                l10902 62F4                                  l10638 5EF6  
                                l12270 2416                                  l12166 1D7E  
                                l10728 47EC                                  l10680 46C8  
                                l10664 4678                                  l10744 5B34  
                                l11288 3FB6                                  l10904 62FC  
                                l10656 5F40                                  l10808 462A  
                                l10584 646E                                  l10576 6430  
                                l10752 6192                                  l10760 61F2  
                                l12264 23EA                                  l12272 2430  
                                l12168 1D90                                  l12184 1E96  
                                l12088 18A4                                  l11608 31CE  
                                l10674 46B2                                  l10922 6872  
                                l10850 41FE                                  l10842 418E  
                                l10834 411E                                  l10738 5AFE  
                                l10746 5B3A                                  l11298 4020  
                                l10586 647A                                  l11618 323E  
                                l11570 304C                                  l11554 2FFA  
                                l10668 4696                                  l10772 450C  
                                l10596 64A6                                  l11812 0798  
                                l11804 0710                                  l11740 027C  
                                l11732 0234                                  l11724 01EC  
                                l11716 01A2                                  l11708 015A  
                                l11628 32AE                                  l11492 6FC6  
                                l10694 46FA                                  l10862 429E  
                                l10854 4232                                  l10846 41C6  
                                l10838 4156                                  l10774 452E  
                                l10758 61EE                                  l11742 02A0  
                                l11638 331A                                  l10688 46E4  
                                l10952 5500                                  l10880 52E0  
                                l10872 5260                                  l10784 4560  
                                l10768 44D4                                  l10776 4532  
                                l11824 0882                                  l11752 0344  
                                l11648 337E                                  l12528 3D0E  
                                l10858 4266                                  l10954 5504  
                                l10882 52E8                                  l10778 454E  
                                l11922 0F52                                  l11658 33E6  
                                l11578 307E                                  l12466 3A58  
                                l10876 529E                                  l10964 5090  
                                l10788 4594                                  l11908 0E68  
                                l11860 0B22                                  l11836 095C  
                                l11780 054C                                  l11668 3456  
                                l11588 30EE                                  l11676 34A4  
                                l12548 3D64                                  l10966 50EA  
                                l10798 45C0                                  l11598 315E  
                                l12558 3D98                                  l10984 353C  
                                l10976 34FE                                  l11960 11BE  
                                l11936 103C                                  l11848 0A48  
                                l11872 0BFE                                  l11792 0638  
                                l11768 0472                                  l10898 62B6  
                                l11970 1242                                  l11938 1060  
                                l11874 0C22                                  l11794 065C  
                                l10988 3540                                  l11956 118C  
                                l11948 1104                                  l11892 0D5C  
                                l10998 358A                                  l11974 127C  
                                l11966 120C                                  l11886 0CF6  
                                l11984 1300                                  l11986 1324  
                                l11994 1388                        __end_of___aldiv 4986  
                                ?_main 0001               __size_ofi1_CheckSum_byte 0048  
               __size_ofi1_cleanBuffer 003C                        __end_of___awdiv 55EC  
                          ?i1_ClearLCD 0001                                  STR_10 FDA8  
                                STR_11 FD18                                  STR_20 FAA6  
                                STR_12 FC8B                                  STR_21 FFBE  
                                STR_13 FBB8                                  STR_30 FFC8  
                                STR_22 FD74                                  STR_14 FA67  
                                STR_23 FD74                                  STR_15 FE97  
                                STR_31 FD81                                  STR_40 FACC  
                                STR_32 FD81                                  STR_24 FF3F  
                                STR_16 F5CA                                  STR_17 F5E3  
                                STR_33 FF47                                  STR_25 FF2F  
                                STR_41 F99B                                  STR_18 F15B  
                                STR_26 FF2F                                  STR_50 FFC3  
                                STR_34 FF37                                  STR_42 FDF1  
                                STR_19 FF85                                  STR_35 FF37  
                                STR_43 FF74                                  STR_27 FED8  
                                STR_51 FE1D                                  STR_52 FAA6  
                                STR_44 FF17                                  STR_36 FEE1  
                                STR_28 FEC6                                  STR_60 F90E  
                      __end_of___awmod 5A0E                                  STR_29 FEC6  
                                STR_37 FECF                                  STR_53 F8D7  
                                STR_61 F8B1                                  STR_45 F15F  
                                STR_38 FECF                                  STR_62 FC13  
                                STR_46 F9CE                                  STR_54 F863  
                                STR_70 F68E                                  STR_39 FACC  
                                STR_47 FF05                                  STR_71 FBA8  
                                STR_63 F88B                                  STR_55 F729  
                                STR_48 FEB4                                  STR_72 FD0A  
                                STR_80 FB98                                  STR_56 FB08  
                                STR_64 FA98                                  STR_73 FEB4  
                                STR_49 FFB9                                  STR_57 FA12  
                                STR_81 F9F0                                  STR_65 F742  
                                STR_66 FDF1                                  STR_74 FFA8  
                                STR_90 FA23                                  STR_58 F944  
                                STR_82 F7FB                                  STR_75 FFED  
                                STR_67 FF1F                                  STR_59 FCD2  
                                STR_83 FB18                                  STR_91 F956  
                                STR_68 FF66                                  STR_76 FF27  
                                STR_84 FCEE                                  STR_92 FC40  
                                STR_69 F15F                                  STR_77 FAA6  
                                STR_85 FC4F                                  STR_93 F920  
                                STR_78 FFAE                                  STR_86 FCE0  
                                STR_94 F8C4                                  STR_79 FFF1  
                                STR_87 FC31                                  STR_95 FB58  
                                STR_88 FB68                                  STR_96 FAA8  
                                STR_97 FAA8                                  STR_89 FC22  
                                STR_98 F811                                  STR_99 FDF1  
                      __end_of___ftdiv 4DD0                        __end_of___lldiv 5878  
                      __end_of___ftmul 4C78                        ___awdiv@divisor 017E  
                                u13111 4C90                                  u13131 4CCA  
                      __end_of___fttol 4B02                                  u11710 5C88  
                                _T2CON 000FCA                                  u13161 4B1A  
                                u11730 5CC8                                  u11717 5C7E  
                                u13181 4B54                                  u13341 499E  
                                u11830 5A80                                  u11840 5AB8  
                                u13360 49F2                                  u11737 5CBE  
                                u11690 5C50                                  u11770 64E4  
                                u11837 5A76                                  u13365 49E8  
                                u11790 651E                                  u11847 5AAE  
                                u11697 5C46                                  u11777 64DA  
                                u11797 6514                                  u15611 1D06  
                                u15701 2264                                  u15631 1D46  
                                u15561 1B0A                                  u14595 3EAE  
                      __end_of___lwdiv 661A                                  i1l206 6C66  
                                i1l208 6C50                                  i1l320 6C9A  
                                i1l410 60FA                                  i1l323 6CC0  
                                i1l404 68DA                                  i1l412 6150  
                                i1l421 6F14                                  i1l405 68DE  
                                i1l422 6F1C                        __end_of___lwmod 6A3A  
                                i1l419 6F0C                        ___awdiv@counter 0180  
                                _RCREG 000FAE                                  _RCSTA 000FAB  
                                _SPBRG 000FAF                             _BufferCopy 5A0E  
                                _BedON F05D                           InitUART@Baud 0189  
                                _TXREG 000FAD                                  _TXSTA 000FAC  
                        ??_One_Config1 0186                          ??_One_Config2 0186  
                  _ConfigureOscillator 70C4                        __end_of_delayUS 6690  
                     _InternalADC_Read 6844                                  _AuxON F03D  
                        __CFG_WRT0$OFF 000000                            i1delayUS@US 0001  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                          __CFG_WRT4$OFF 000000  
                        __CFG_WRT5$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
                       __CFG_EBTR4$OFF 000000                         __CFG_EBTR5$OFF 000000  
                         InitUART@temp 0196                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                                _fanON F09D                       __end_of_UARTchar 65A2  
                      __end_of_readI2C 6EC8                         __CFG_EBTRB$OFF 000000  
                      __end_of_dpowers F005                       __end_of_RTC_INIT 7094  
                      __end_of_isdigit 6F7E                          ___ftpack@sign 0180  
                     Command@ADC_Value 05C8                         ??_LCDPrintChar 018A  
                        ??_SendLCDbyte 0187                        __end_of_low_isr 0368  
          I2C_Read_At_Address@Register 017F                                  tablat 000FF5  
                        ?_SetLCDcursor 018A                    __size_of_LCD_Scroll 0248  
                     __end_of_PWM_init 6FD0                            ?_UARTstring 0187  
              InternalADC_Read@channel 018F                                  status 000FD8  
                      __end_of_sprintf 2F8C                       __end_of_ClearLCD 7034  
                 __size_of_cleanBuffer 0058                         __CFG_PBADEN$ON 000000  
                 ?_ConfigureOscillator 0001                     StringContains@That 017E  
                   StringContains@This 017C                     __size_ofi1_delayUS 004C  
                       WriteUSART@data 0001                             SetDuty@LSB 01BE  
                           SetDuty@MSB 01BD                        __initialization 6978  
                   StringAddEqual@temp 0200                    _I2C_Read_Sequential 55EC  
                         __end_of_main 3DCA                       __end_of_InitUART 44A0  
                        ??_SetContrast 01B5                 __end_of_LCDPrintString 6526  
                       __CFG_OSC$HSPLL 000000                __end_of_LCDScreenUpdate 34D6  
            __size_of_ContrastPWM_init 000C                          _LCDclearCount 01CD  
                               ??_main 01C7                          ___fttol@sign1 01AF  
                       SetDuty@tempPR2 01BA                        Send_Config1@pin 018D  
                      Send_Config2@pin 018B                       __end_of_ResetI2C 6FA8  
                      SendLCDbyte@data 0187                          __activetblptr 000003  
               Multiple_I2C_Read@rdptr 017D                             _Parse_Time 34D6  
                      low_isr@LCD_TEMP 00C4                   ?_I2C_Read_Sequential 0181  
                     i1CheckSum_byte@i 0007                         _StringAddEqual 44A0  
                               _ADCON0 000FC2                                 _ADCON1 000FC1  
                               _ADCON2 000FC0                    __size_ofi1_UARTchar 0066  
                               STR_100 FF1F                                 STR_101 FF96  
                               STR_110 FF89                                 STR_102 FE33  
                               STR_103 F15F                                 STR_111 FFA2  
                               STR_200 FAA6                                 STR_120 FF43  
                               STR_112 FF9C                                 STR_104 F772  
                               STR_201 FF57                                 STR_113 FE79  
                               STR_105 FAB8                                 STR_121 F553  
                               STR_130 FDF1                                 STR_114 FAA6  
                               STR_106 FD9B                                 STR_122 FCC4  
                               STR_210 FA01                                 STR_202 F404  
                               _ADRESH 000FC4                                 STR_107 FEB4  
                               STR_123 FF9C                                 STR_115 FFA2  
                               STR_211 FFF9                                 STR_131 FBD7  
                               STR_203 FB28                                 STR_116 FD58  
                               STR_140 FAA6                                 STR_124 FEDC  
                               STR_108 FFA8                                 STR_204 FFDC  
                               STR_220 FD40                                 STR_132 F8EA  
                               STR_212 F3DF                                 STR_205 F7E2  
                               STR_133 F15F                                 STR_109 FFED  
                               STR_141 FF82                                 STR_221 F590  
                               STR_125 F533                                 STR_213 F46E  
                               STR_117 F36E                                 STR_230 FE65  
                               STR_214 F5E5                                 STR_222 FDFC  
                               STR_150 FCA8                                 STR_126 FC04  
                               STR_118 FAF8                                 STR_142 FA45  
                               STR_206 F9DF                                 STR_134 F3BA  
                               _ADRESL 000FC3                                 STR_143 FD58  
                               STR_119 FF9C                                 STR_231 FF4F  
                               STR_135 FE83                                 STR_223 FE47  
                               STR_127 F8FC                                 STR_151 F7E5  
                               STR_207 F7B8                                 STR_215 F6DD  
                   _LCDdisplayFeedback 6D12                                 STR_216 F7E2  
                               STR_136 FEB4                                 STR_232 FFD7  
                               STR_224 FF7B                                 STR_160 FE51  
                               STR_128 FD5A                                 STR_152 FBF5  
                               STR_240 F84F                                 STR_208 F7A1  
                               STR_144 F61F                                 STR_137 FF9C  
                               STR_233 FFF5                                 STR_225 FF6D  
                               STR_161 FEEA                                 STR_241 FB78  
                               STR_209 F75A                                 STR_145 F673  
                               STR_217 F657                                 STR_129 F5E7  
                               STR_153 F292                                 STR_250 FEB4  
                               STR_162 FAA6                                 STR_138 FFA2  
                               STR_234 FFE9                                 STR_146 FC7C  
                               STR_154 FAC8                                 STR_242 F89E  
                               STR_218 F710                                 STR_170 F513  
                               STR_226 F11A                                 STR_163 FD58  
                               STR_235 FAA6                                 STR_139 F5C6  
                               STR_251 FFA8                                 STR_171 FBE6  
                               STR_243 FAD8                                 STR_155 F6F7  
                               STR_219 F4B1                                 STR_147 F348  
                               STR_227 F223                                 STR_164 F673  
                               STR_180 FD58                                 STR_252 FAA6  
                               STR_260 FF5F                                 STR_148 FA88  
                               STR_236 FA34                                 STR_228 F826  
                               STR_244 F78A                                 STR_172 F6C3  
                               STR_156 F1A3                                 STR_245 FDF1  
                               STR_229 FEFC                                 STR_253 FDB5  
                               STR_165 FC6D                                 STR_237 F877  
                               STR_181 F4D2                                 STR_149 F490  
                               STR_157 F31E                                 STR_261 F260  
                               STR_173 F1E5                                 STR_174 F31E  
                               STR_246 FEAB                                 STR_254 FE3D  
                               STR_270 FDD9                                 STR_190 FD67  
                               STR_182 FD4D                                 STR_238 FC5E  
                               STR_158 FA56                                 STR_262 F7CF  
                               STR_166 F2C3                                 STR_247 F15F  
                               STR_159 FE65                                 STR_271 FE12  
                               STR_175 FD8E                                 STR_255 FD33  
                               STR_263 FBC8                                 STR_167 FA78  
                               STR_191 F98A                                 STR_239 F932  
                               STR_183 F572                                 STR_280 F7E0  
                               STR_176 FE65                                 STR_264 FE8D  
                               STR_256 FDCD                                 STR_192 FDC1  
                               STR_184 FB88                                 STR_272 FAE8  
                               STR_248 F63B                                 STR_168 F2F3  
                               STR_265 F7E2                                 STR_193 FFB4  
                               STR_273 FE6F                                 STR_177 FE5B  
                               STR_249 FCFC                                 STR_169 FC9A  
                               STR_257 F9BD                                 STR_281 F6A9  
                               STR_185 F603                                 STR_266 F7B8  
                               STR_178 FFE1                                 STR_274 FFCD  
                               STR_258 FE07                                 STR_186 FB48  
                               STR_282 F428                                 STR_194 F0D1  
                               STR_179 FAA6                                 STR_267 F7A1  
                               STR_275 FFD2                                 STR_259 FF90  
                               STR_195 FD26                                 STR_187 F5AD  
                               STR_283 F44B                                 STR_276 F75A  
                               STR_196 FEF3                                 STR_268 FCB6  
                               STR_188 F9AC                                 STR_284 F4F3  
                               STR_197 FE65                                 STR_277 FA01  
                               STR_269 FEBD                                 STR_285 F968  
                               STR_189 F83B                                 STR_198 FCA6  
                               STR_278 FB38                                 STR_286 F979  
                               _CCPR1L 000FBE                                 STR_279 FB38  
                               STR_199 FFE5                       ___awdiv@dividend 017C  
                        _READ_RTC_TIME 5424                       __end_of_WriteI2C 62A4  
                      __CFG_BBSIZ$1024 000000                       __end_of___ftpack 524E  
                     __end_of___lbtoft 6E68                         ??_SetLCDcursor 018B  
                      _ScrollFIFOCount 010C              __size_ofi1_LCDPrintString 006A  
                          OpenI2C@slew 017C                                 i1l8000 706C  
                  __end_of_One_Config1 60FA                    __end_of_One_Config2 6C38  
                               i1l9622 6C4A                                 _PARITY 010A  
                     __end_of___lwtoft 6EF6                              ??_IdleI2C 017C  
                   __size_of_ReadUSART 0030                                 _OSCCON 000FD3  
                               _SPBRGH 000FB0                          i1_cleanBuffer 6D90  
                               _BedOFF F04D                                 _SSPADD 000FC8  
                               _SSPBUF 000FC9                              ??_Command 01C3  
                  ?_LCDdisplayFeedback 018E                                 _Aux2ON F01D  
                            ??_InitApp 0186                  ??_ConfigureOscillator 017C  
                  __size_ofi1_ClearLCD 0016                                 _AuxOFF F02D  
                     ?_Init_I2C_Master 0001   Command@RTC_Battery_Value_LOW_decimal 05CE  
                            ??_OpenI2C 017D                              ??_SetFreq 0192  
                            ??_SetDuty 01B5                    __end_of_SendLCDbyte 57A4  
                       __CFG_XINST$OFF 000000                          InitUART@spbrg 0192  
                     __end_of_high_isr 6978                                 _Rxdata 0364  
                   __size_of_OpenUSART 0074                         _StringContains 63B0  
                           _SubLightON F07D                                 _Txdata 0400  
                               _fanOFF F08D                              ??___aldiv 018A  
                      Command@contrast 05D0                                 ___wmul 6DCC  
                            ??___awdiv 0180               __end_ofi1_PulseEnablePin 6F52  
                       __CFG_STVREN$ON 000000                              ??___awmod 0180  
                            ??___ftdiv 018E                              ??___lldiv 0184  
                            ??___ftmul 019D                              ??___fttol 01AA  
                      ?_LCDPrintString 018A                              ??___lwdiv 0180  
                     __end_of_init_LCD 4F06                              ??___lwmod 0187  
                         ?i1_ReadUSART 0001                                 clear_0 697E  
                               clear_1 698A                                 clear_2 6996  
                               clear_3 69A2                                 clear_4 69AE  
                     ___awdiv@quotient 0182                              ??_delayUS 0180  
                      ___awmod@divisor 017E                        ___awmod@counter 0180  
        __size_of_I2C_Write_At_Address 00B0                                 main@ii 01C7  
                  SprintDate@ReturnBuf 01AF                   ??_LCDdisplayFeedback 0190  
                ___ftmul@f3_as_product 01A1                              ??_readI2C 017C  
                  __size_of_UARTstring 00A6                          ?_Send_Config1 0187  
                        ?_Send_Config2 0187                        __CFG_BOREN$BOHW 000000  
                          ?_BufferCopy 0184                    __end_of_SetContrast 5424  
                            ??_isdigit 017C                  ??_I2C_Read_Sequential 0185  
               __end_of_StringAddEqual 4658                           __mediumconst EF8E  
                    __end_ofi1_delayUS 6C84                              ??_low_isr 0013  
                      Zero_Config1@pin 0186                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                      Zero_Config2@pin 0186                 __size_of_CheckSum_byte 0060  
                    ??i1_CheckSum_byte 0004                         ?_READ_RTC_TIME 0001  
                            ??_sprintf 0198                     __size_of_f_Config1 0092  
                           _StartsWith 5EAE                         ?i1_cleanBuffer 0001  
                           _SprintDate 502A                            SetFreq@freq 0190  
                           __accesstop 0060                __end_of__initialization 69D4  
                          SetFreq@temp 0196                    StringAddEqual@Input 018B  
                           ___ftdiv@f1 0188                             ___ftdiv@f2 018B  
                           ___ftdiv@f3 0192                 __end_of_StringContains 642E  
                   __size_of_baudUSART 000E                          __end_of_BedON F06D  
                           ___lbtoft@c 0187                            SetDuty@Duty 01B9  
                           ___ftmul@f1 0197                             ___ftmul@f2 019A  
                        __end_of_AuxON F04D                             ___fttol@f1 01A6  
            __size_of_RTC_Clock_Enable 0046                             _WriteUSART 705E  
                       __pcstackCOMRAM 0001                            SetDuty@temp 01BF  
                         __pidataBANK1 70BC                          __end_of_fanON F0AD  
                            ?_UARTchar 0183                           ??_LCD_Scroll 018D  
                   InitUART@baudconfig 0194                              ?_RTC_INIT 0001  
                 __end_of_LCDPrintChar 705E                       ?_LCDScreenUpdate 0001  
                    __end_of_ReadUSART 6E98                          ?i1_UARTstring 000C  
                           ___lwtoft@c 0184                         ??_Send_Config1 0189  
                       ??_Send_Config2 0189                    __end_of_SubLightOFF F07D  
                            ?_PWM_init 0001                     LCDPrintString@Text 018A  
                          ?_Parse_Time 017C                              ?_ClearLCD 0001  
                      ?_StringAddEqual 018B                            _One_Config1 6068  
                          _One_Config2 6BEC                          ?_RemoveSpaces 018B  
                        ReadUSART@data 017C                         One_Config1@pin 0186  
                       One_Config2@pin 0186                      __end_of_OpenUSART 6704  
                     Send_Config1@data 0187                       Send_Config2@data 0187  
                         sprintf@width 01A6                             __pbssBANK0 00D8  
                           __pbssBANK1 0100                             __pbssBANK3 0300  
                           __pbssBANK4 0400                              ?_InitUART 0189  
                          _SendLCDbyte 56CA                    SET_RTC_TIME@SetTime 0184  
          RTC_Clock_Enable@tempSeconds 0187                Multiple_I2C_Read@length 017F  
                   __end_of_LCD_Scroll 42D6                          ??_StringMatch 0180  
                  SetLCDcursor@address 018C                              ?_ResetI2C 0001  
                      ?_StringContains 017C            __end_of_TXdataBedroomCLOSED EFB3  
             __end_of_InternalADC_Read 68AC                    __size_of_BufferCopy 00B8  
        __size_of_RTC_TIME_NONMilitary 0082                          _CheckSum_byte 6A3A  
                         ??i1_UARTchar 000A            __end_of_TXdataBedroomOPENED EFBF  
                        RemoveSpaces@i 0266                    i1CheckSum_byte@This 0001  
                              ?___wmul 017C                      __end_of_f_Config1 5FD6  
                           ??_UARTchar 0185                            _SetContrast 533C  
       I2C_Write_At_Address@I2Caddress 0183                             ??_RTC_INIT 0190  
                              _CCP1CON 000FBD                                _BAUDCON 000FB8  
                 __end_of_SetLCDcursor 6E36                       _ContrastPWM_init 70B0  
                              _ECCPR1L 000FBB                         ??i1_UARTstring 000E  
                            ?_WriteI2C 0001                              ?___ftpack 017C  
                            ?___lbtoft 0184                     __size_of_lowercase 008E  
                         ??i1_ClearLCD 000F                  i1CheckSum_byte@Parity 0006  
                            ?___lwtoft 0184                             ??_PWM_init 01C1  
                              i1l10508 6CBC                                i1l11350 6D9A  
                              i1l10518 6CC8                                i1l12400 01F0  
                              i1l11354 6DB0                                i1l12330 6812  
                              i1l12314 6FDA                                i1l11362 68B8  
                              i1l11370 68FA                                i1l11364 68C8  
                              i1l11372 690C                                i1l12308 6154  
                              i1l11438 5E00                                i1l12326 67E4  
                              i1l12422 02C6                                i1l11368 68E2  
                              i1l12424 02EA                                i1l12408 021E  
                              i1l11394 5DBA                                i1l12434 031C  
                              i1l12362 00D2                                i1l12292 5E4A  
                              i1l12284 5E32                                i1l11396 5DBC  
                              i1l12380 014A                                i1l12358 00C0  
                              i1l12390 01B6                                i1l12438 0320  
                              i1l12396 01D0              __size_of_GetEnteredNumber 019E  
                       ??_RemoveSpaces 018D                             ??_ClearLCD 018A  
             Command@RTC_Battery_Value 05CA                         StartsWith@That 017E  
                       StartsWith@This 017C                       i1UARTstring@data 000C  
          __end_of_I2C_Read_At_Address 502A                                _LCDwait 0109  
                      ??_READ_RTC_TIME 0186                      __end_of_baudUSART 70A2  
                  Init_I2C_Master@baud 017E                         lowercase@Input 017C  
                              _SSPCON1 000FC6                                _SSPCON2 000FC5  
                      ??i1_cleanBuffer 0005                              ?_high_isr 0001  
                              _SSPSTAT 000FC7                     __end_ofi1_UARTchar 6912  
                          ?_StartsWith 017C                       i1_LCDPrintString 67DA  
                           ??_InitUART 018E               GetEnteredNumber@negative 0189  
                              _Aux2OFF F00D                            ?_SprintDate 01AF  
                __end_ofi1_SendLCDbyte 5E16                                _IdleI2C 7072  
                            ?_init_LCD 0001                           ??_UARTstring 0189  
                              _Command 0000                                _TXdataD F0AD  
                              _TXdataE F0B9                                _TXdataF F0C5  
                              _InitApp 6A9A                          ?i1_BufferCopy 0009  
                      SetLCDcursor@Col 018A                __size_ofi1_LCDPrintChar 000E  
                           ??_ResetI2C 0186                                _OpenI2C 6FF6  
                      SetLCDcursor@Row 018B                     __end_ofi1_ClearLCD 704A  
                       InitUART@config 0195                         ?_CheckSum_byte 017C  
                              __Hparam 0000                                _SetFreq 6704  
                              _SetDuty 5878                                __Lparam 0000  
                              _NowTime 0100                          ?_SET_RTC_TIME 0184  
                  __size_of_Parse_Time 052A                         InitUART@parity 018D  
                          ?_WriteUSART 0001                i1CheckSum_byte@Odd_Even 0003  
                    i1cleanBuffer@data 0001                                ___aldiv 47F6  
                          _SubLightOFF F06D                                ___awdiv 550A  
                              ___awmod 594A                                ___ftdiv 4C78  
                              ___lldiv 57A4                    __end_of_StringMatch 64AA  
                      __size_of___wmul 0036                                ___ftmul 4B02  
                              ___fttol 4986                                ___lwdiv 65A2  
                              ___lwmod 69DA                        LCDPrintString@c 018C  
                              __pcinit 6978                             ??_WriteI2C 017D  
                              _delayUS 661A                             ??___ftpack 0181  
                           ??___lbtoft 0187                                __ramtop 0D00  
                              __ptext0 3A00                                __ptext1 4DD0  
                              __ptext2 7084                                __ptext3 632E  
                              __ptext4 6CCC                                __ptext5 4F06  
                              __ptext6 6FA8                                __ptext7 6704  
                              __ptext8 47F6                                __ptext9 2F8C  
                           ??___lwtoft 0187                                _readI2C 6E98  
                 __size_ofi1_ReadUSART 002E                      __end_of_hexpowers F00D  
              i1SendLCDbyte@LSB_nibble 000E                                _dpowers EFFB  
                   __end_of_UARTstring 5CD0                i1CheckSum_byte@ThisTemp 0004  
                              _isdigit 6F52                       ___awmod@dividend 017C  
                     ___aldiv@dividend 0182                                _low_isr 0018  
              i1SendLCDbyte@MSB_nibble 000D                                _sprintf 2462  
                           ??_high_isr 016E                         __pintcode_body 6912  
                 end_of_initialization 69D4                      __end_of_octpowers EFFB  
                        ??_cleanBuffer 0180                             ??_init_LCD 018A  
                      i1ReadUSART@data 0001                      __end_of_lowercase 6218  
                              int_func 6912                              i1u1580_20 614C  
                            i1u1580_27 6142                              i1u1574_20 5E74  
                            i1u1582_20 6182                              i1u1574_27 5E6A  
                            i1u1582_27 6178                              i1u1575_20 5EA2  
                            i1u1575_27 5E98                         ??i1_BufferCopy 000F  
                            i1u1586_20 680A                              i1u1578_20 611C  
                            i1u1586_27 6800                              i1u1578_27 6112  
                            i1u1588_20 683C                              i1u1588_27 6832  
                 __end_of_Send_Config1 533C                   __end_of_Send_Config2 632E  
                 GetEnteredNumber@This 0182                __size_ofi1_SetLCDcursor 0026  
                     ??_LCDPrintString 018C                        ___lldiv@divisor 0180  
                       ??_SET_RTC_TIME 018D                   GetEnteredNumber@temp 018A  
        I2C_Read_Sequential@I2Caddress 0185                        ___lldiv@counter 0188  
                     _RTC_Clock_Enable 6CCC                  __size_of_LCDPrintChar 0014  
                            _RCSTAbits 000FAB                       ___aldiv@quotient 018C  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                          i1BufferCopy@i 000F  
                    ?i1_PulseEnablePin 0001                     Parse_Time@TempTime 0180  
              __size_of_PulseEnablePin 003E                        i1_CheckSum_byte 6C84  
                  __size_of_StartsWith 0096                     ??i1_PulseEnablePin 000B  
              i1LCDPrintChar@character 000F                    __size_of_SprintDate 011A  
                         ??_BufferCopy 018A                              _TRISAbits 000F92  
                            _TRISCbits 000F94                              _TRISDbits 000F95  
                            _TRISEbits 000F96                         BufferCopy@from 0184  
                   low_isr@TEMP_Rxdata 0060                    __size_of_WriteUSART 0014  
          __end_of_ConfigureOscillator 70CA                              i1_delayUS 6C38  
         __end_of_I2C_Write_At_Address 5C2A                           _LCDPrintChar 704A  
                 __end_ofi1_UARTstring 618A                            ___ftdiv@exp 0195  
                      ??_CheckSum_byte 017F                              _TXSTAbits 000FAC  
                       __end_of_BedOFF F05D                            _StringMatch 642E  
                  __end_of_cleanBuffer 6B50                         __end_of_Aux2ON F02D  
                 __end_of_RemoveSpaces 5B7A                         __end_of_AuxOFF F03D  
                __size_of_SetLCDcursor 0034                     __end_of_BufferCopy 5AC6  
                          ___ftmul@exp 01A0                    RemoveSpaces@address 0264  
                        ?_Zero_Config1 0001                          ?_Zero_Config2 0001  
                CheckSum_byte@Odd_Even 017E                         __end_of_fanOFF F09D  
             __size_of_Init_I2C_Master 0050                         __end_of___wmul 6E02  
          __end_of_I2C_Read_Sequential 56CA                       ??_StringAddEqual 018D  
                    _EnableInternalADC 5CD0                      __size_of_UARTchar 007C  
                    __size_of_RTC_INIT 0010            __size_of_LCDdisplayFeedback 0040  
                    GetEnteredNumber@i 0188                     ?_EnableInternalADC 0001  
                     _GetEnteredNumber 4658                           ??_Parse_Time 017E  
                  start_initialization 6978                           ?_One_Config1 0001  
                         ?_One_Config2 0001                              _ReadUSART 6E68  
                SendLCDbyte@LSB_nibble 0189                      __size_of_PWM_init 0028  
                CheckSum_byte@ThisTemp 017F                      __size_of_ClearLCD 001A  
                     WriteI2C@data_out 017E                  SendLCDbyte@MSB_nibble 0188  
                  ??_EnableInternalADC 017C                             ?i1_delayUS 0001  
         __end_of_TXToiletAlexBathroom EF9B                           ?_SendLCDbyte 0186  
                     ??_StringContains 0180               __end_of_ContrastPWM_init 70BC  
                         _SetLCDcursor 6E02                              _OpenUSART 6690  
                    __size_of_InitUART 01CA                      i1BufferCopy@count 000D  
                       i1_LCDPrintChar 70A2                      i1BufferCopy@shift 000E  
                       Command@channel 05D2                              _Scroll_10 00D9  
              __end_ofi1_CheckSum_byte 6CCC                     SprintDate@Military 01BA  
            StringAddEqual@firstnumber 0264                      ?_InternalADC_Read 018B  
                   __end_of_Parse_Time 3A00                      __size_of_ResetI2C 002A  
                       ??_Zero_Config1 0186                         ??_Zero_Config2 0186  
                             ??___wmul 0180                     ??_InternalADC_Read 018D  
            __end_of_EnableInternalADC 5D74                           ?_SetContrast 0001  
                          __pdataBANK1 01C9                       __CFG_LPT1OSC$OFF 000000  
             __end_ofi1_LCDPrintString 6844                              _f_Config1 5F44  
                    __size_of_WriteI2C 008C                     SetContrast@tempPR2 01B9  
                    __size_of___ftpack 010A                      __size_of___lbtoft 0032  
                 __end_ofi1_BufferCopy 5EAE                  LCDPrintChar@character 018A  
                     cleanBuffer@count 017E           __end_of_RTC_TIME_NONMilitary 63B0  
                          __pbssCOMRAM 0027                             ?_ReadUSART 0001  
                    __size_of___lwtoft 002E                          __pcstackBANK0 0060  
                        __pcstackBANK1 016E                          __pcstackBANK2 0200  
                        __pcstackBANK5 0500                   __end_of_SET_RTC_TIME 408E  
                  __end_of__stringdata FFFF               __size_of_LCDScreenUpdate 054A  
                         _isdigit$2583 017D                  __size_of_Send_Config1 00EE  
                __size_of_Send_Config2 008A                           ??_StartsWith 0180  
                            _baudUSART 7094                     __end_of_SubLightON F08D  
                         ??_SprintDate 01BB                            _cleanBuffer 6AF8  
                             ?_IdleI2C 0001                 __end_ofi1_LCDPrintChar 70B0  
                           ?_OpenUSART 017C                         LCD_Scroll@This 018B  
                    __size_of_high_isr 6970                            sprintf@_val 01A8  
                          sprintf@flag 01AD                            sprintf@prec 01A5  
                             ?_Command 01C1                         i1_SetLCDcursor 6FD0  
        I2C_Read_At_Address@I2Caddress 0181                               ?_InitApp 0001  
                    __size_of_init_LCD 0136                               ?_OpenI2C 017C  
                             ?_SetFreq 0190                               ?_SetDuty 0001  
                     ___lwdiv@dividend 017C                  SprintDate@DisplayTime 01B1  
                         ??_WriteUSART 0001                              __pintcode 0008  
                        __pmediumconst EF8E                               ?___aldiv 0182  
                             ?___awdiv 017C                               ?___awmod 017C  
                      _TXdataLabCLOSED EFD7                               ?___ftdiv 0188  
                             ?___lldiv 017C                               ?___ftmul 0197  
                             ?___fttol 01A6                               ?___lwdiv 017C  
                             ?___lwmod 0183                         _PulseEnablePin 6D52  
                      _TXdataLabOPENED EFE3                            __pintcodelo 0018  
                             ?_delayUS 017C                     __end_of_StartsWith 5F44  
                 _I2C_Write_At_Address 5B7A                             ?_f_Config1 0001  
                   __end_of_SprintDate 5144                               ?_readI2C 0001  
                     RemoveSpaces@That 0200               I2C_Read_Sequential@rdptr 0182  
                     RemoveSpaces@This 018B                               _ECCP1CON 000FBA  
                         _Send_Config1 524E                           _Send_Config2 62A4  
                             ?_isdigit 0001                      ??_Init_I2C_Master 017E  
                             ?_low_isr 0001               __end_of_RTC_Clock_Enable 6D12  
                            _hexpowers F005                  __end_of_READ_RTC_TIME 550A  
                __size_ofi1_UARTstring 0090                       ___lwdiv@quotient 0181  
                             ?_sprintf 0188             UARTchar@NinethBit_override 0183  
                   __end_of_WriteUSART 7072                             ?_baudUSART 0001  
                          ??i1_delayUS 0005                             lowercase@i 017F  
                            delayUS@US 017C                  __end_ofi1_cleanBuffer 6DCC  
               __end_ofi1_SetLCDcursor 6FF6           __size_of_I2C_Read_At_Address 0124  
                      ___aldiv@divisor 0186                        ?i1_LCDPrintChar 0001  
                       Parse_Time@This 017C                  __size_of_RemoveSpaces 00B4  
                      ___aldiv@counter 018A                         ___wmul@product 0180  
                       Parse_Time@temp 017F                              _octpowers EFEF  
                             _IPR1bits 000F9F                               _PIE1bits 000F9D  
                         cleanBuffer@i 0183                            _bufferCount 00D8  
           __end_of_TXToiletMyBathroom EFA7                              _lowercase 618A  
                             _PIR1bits 000F9E                               _PIR2bits 000FA1  
                     ?i1_CheckSum_byte 0001                 __end_of_PulseEnablePin 6D90  
                             _RCONbits 000FD0                       __CFG_WDTPS$32768 000000  
           __size_of_EnableInternalADC 00A4                               _UARTchar 6526  
                             _RTC_INIT 7084                          ??i1_ReadUSART 0001  
                    i1SendLCDbyte@data 000C                  ?_I2C_Write_At_Address 017F  
                 _TXToiletAlexBathroom EF8F                            __stringdata F0D1  
               __size_ofi1_SendLCDbyte 00A2                      ___wmul@multiplier 017C  
                         i1_UARTstring 60FA                               _PWM_init 6FA8  
            EnableInternalADC@channels 017D                              main@count 01C8  
                             _ClearLCD 701A                            ??_ReadUSART 017C  
                      StringAddEqual@i 0265                        StringAddEqual@j 0266  
                         _RemoveSpaces 5AC6                   __size_of_One_Config1 0092  
                 __size_of_One_Config2 004C              __size_ofi1_PulseEnablePin 002E  
                 __end_of_Zero_Config1 6068                   __end_of_Zero_Config2 6BEC  
                            copy_data0 69C8                               _InitUART 42D6  
                     OpenI2C@sync_mode 017D                        ?i1_SetLCDcursor 000F  
                          ??_OpenUSART 017E                      ??_LCDScreenUpdate 018E  
                     __size_of_IdleI2C 0012                        OpenUSART@config 0181  
                i1SetLCDcursor@address 0011                   __size_of_SendLCDbyte 00DA  
              __end_of_TXdataLabCLOSED EFE3                               __Hparam1 0000  
                         ?_StringMatch 017C                       __size_of_Command 2462  
             __end_of_GetEnteredNumber 47F6                               _ResetI2C 6F7E  
                     i1BufferCopy@from 0009                       __size_of_InitApp 005E  
                             __Lparam1 0000                __end_of_TXdataLabOPENED EFEF  
                           ?_lowercase 017C                       __size_of_OpenI2C 0024  
                 _RTC_TIME_NONMilitary 632E                               _Scroll_1 010E  
                             _Scroll_2 011E                               _Scroll_3 012E  
                             _Scroll_4 013E                               _Scroll_5 014E  
                             _Scroll_6 015E                               _Scroll_7 0027  
                             _Scroll_8 0037                               _Scroll_9 00E9  
                       i1cleanBuffer@i 0008                       __size_of_SetFreq 006C  
                     __size_of_SetDuty 00D2                        ?_PulseEnablePin 0001  
                     __size_of___aldiv 0190                     i1cleanBuffer@count 0003  
                     __size_of___awdiv 00E2                  __size_ofi1_BufferCopy 0098  
                     __size_of___awmod 00C4                       __size_of___ftdiv 0158  
                      cleanBuffer@data 017C                       __size_of___lldiv 00D4  
                     __size_of___ftmul 0176                       __size_of___fttol 017C  
                     __size_of___lwdiv 0078                       __size_of___lwmod 0060  
          I2C_Read_Sequential@Register 0181                               _WriteI2C 6218  
                             ___ftpack 5144                               ___lbtoft 6E36  
                __size_of_SET_RTC_TIME 02C4                   __size_of_SetContrast 00E8  
                     __size_of_delayUS 0076                            ??_f_Config1 0186  
                             ___lwtoft 6EC8                             sprintf@idx 019C  
                     __size_of_readI2C 0030                      SET_RTC_TIME@Error 0198  
                  __end_ofi1_ReadUSART 6F24                       __size_of_isdigit 002C  
                      ___lwdiv@divisor 017E                        ___lwdiv@counter 0180  
                     __size_of_low_isr 0350                               __ptext10 704A  
                             __ptext11 42D6                               __ptext20 0000  
                             __ptext12 7094                               __ptext21 618A  
                             __ptext13 57A4                 LCDdisplayFeedback@Text 018E  
                             __ptext30 69DA                               __ptext22 6EC8  
                             __ptext14 6E68                               __ptext31 65A2  
                             __ptext23 642E                               __ptext15 6690  
                             __ptext40 6BA0                               __ptext32 5878  
                             __ptext24 63B0                               __ptext16 6A9A  
                             __ptext41 6BEC                               __ptext33 533C  
                             __ptext25 44A0                               __ptext17 5CD0  
                             __ptext50 5AC6                               __ptext42 524E  
                             __ptext34 6E36                               __ptext26 5EAE  
                             __ptext18 70B0                               __ptext51 5424  
                             __ptext43 5F44                               __ptext35 4986  
                             __ptext27 502A                               __ptext19 70C4  
                             __ptext60 34D6                               __ptext52 6F7E  
                             __ptext44 5FD6                               __ptext36 4B02  
                             __ptext28 2462                               __ptext61 6D12  
                             __ptext53 6B50                               __ptext45 6068  
                             __ptext37 4C78                               __ptext29 6F52  
                             __ptext70 6AF8                               __ptext62 6E02  
                             __ptext54 6FF6                               __ptext46 3DCA  
                             __ptext38 5144                               __ptext71 6844  
                             __ptext63 64AA                               __ptext55 55EC  
                             __ptext47 594A                               __ptext39 62A4  
                             __ptext80 6C84                               __ptext72 5C2A  
                             __ptext64 701A                               __ptext56 6218  
                             __ptext48 550A                               __ptext81 6FD0  
                             __ptext73 6526                               __ptext65 56CA  
                             __ptext57 7072                               __ptext49 5B7A  
                   READ_RTC_TIME@Error 018D                               __ptext90 6D90  
                             __ptext82 6EF6                               __ptext74 6A3A  
                             __ptext66 6D52                               __ptext58 6770  
                             __ptext91 705E                               __ptext83 67DA  
                             __ptext75 4658                               __ptext67 661A  
                             __ptext59 6E98                               __ptext84 70A2  
                             __ptext76 6DCC                               __ptext68 408E  
                             __ptext85 7034                               __ptext69 5A0E  
                             __ptext86 5D74                               __ptext78 60FA  
                             __ptext87 6F24                               __ptext79 68AC  
                             __ptext88 6C38                               __ptext89 5E16  
                             _high_isr 0008                            ??_baudUSART 017C  
                     __size_of_sprintf 0B2A                              low_isr@rx 00D7  
                             _init_LCD 4DD0                      ?_ContrastPWM_init 0001  
                        i1_SendLCDbyte 5D74          RTC_TIME_NONMilitary@temphours 0189  
                        __size_of_main 03CA                               delayUS@i 0181  
                             delayUS@j 0185                     ??_ContrastPWM_init 01C1  
                         i1_BufferCopy 5E16           __size_of_ConfigureOscillator 0006  
                __end_of_CheckSum_byte 6A9A                  ?_RTC_TIME_NONMilitary 0001  
                         _SET_RTC_TIME 3DCA                         CheckSum_byte@i 0182  
                    _Multiple_I2C_Read 6770                           BufferCopy@to 0186  
               ??_I2C_Write_At_Address 0181                             _LCD_Scroll 408E  
           __end_of_LCDdisplayFeedback 6D52                     ?_Multiple_I2C_Read 017D  
                    ?i1_LCDPrintString 000F                __size_of_LCDPrintString 007C  
         I2C_Write_At_Address@Register 017F                    CheckSum_byte@Parity 0181  
                   ??i1_LCDPrintString 0011                           Command@Input 01C1  
                           _INTCONbits 000FF2              __size_of_InternalADC_Read 0068  
                  ??_Multiple_I2C_Read 0180                         OpenUSART@spbrg 017C  
         __size_of_I2C_Read_Sequential 00DE                           UARTchar@data 0186  
                      StringMatch@That 017E                        StringMatch@This 017C  
         i1UARTchar@NinethBit_override 0008                               isdigit@c 017E  
Command@RTC_Battery_Value_HIGH_decimal 05CC                               intlevel1 0000  
                             intlevel2 0000                 i1SendLCDbyte@isCommand 000B  
                            sprintf@ap 01A3                              sprintf@sp 0188  
                         ?_cleanBuffer 017C                         ?i1_SendLCDbyte 000B  
                  _TXdataBedroomCLOSED EFA7                       ___lwmod@dividend 0183  
                     SET_RTC_TIME@temp 0191                       ___lldiv@dividend 017C  
                    _TXdataFrontCLOSED EFBF                    _TXdataBedroomOPENED EFB3  
                    READ_RTC_TIME@temp 0186                               low_isr@i 00D4  
                             low_isr@j 00D6                      _TXdataFrontOPENED EFCB  
                          ??_lowercase 017E              __end_of_Multiple_I2C_Read 67DA  
                           i1_UARTchar 68AC                            BufferCopy@i 018A  
                      _Init_I2C_Master 6B50                            i1_ReadUSART 6EF6  
                  _I2C_Read_At_Address 4F06                         i1BufferCopy@to 000B  
                          Command@duty 05D4                             i1_ClearLCD 7034  
                             sprintf@c 01AC                               sprintf@f 018A  
            RTC_TIME_NONMilitary@Error 0187                       ___lldiv@quotient 0184  
                __size_of_Zero_Config1 0092                  __size_of_Zero_Config2 004C  
                      ___lwmod@divisor 0185                        ___lwmod@counter 0187  
                         ___aldiv@sign 018B              I2C_Read_Sequential@length 0184  
                          _SSPCON1bits 000FC6                       ??i1_LCDPrintChar 000F  
                          _SSPCON2bits 000FC5                  _ScrollDisplayPosition 010B  
                    ?_RTC_Clock_Enable 0001                       i1_PulseEnablePin 6F24  
                    CheckSum_byte@This 017C                __size_of_StringAddEqual 01B8  
                       i1UARTchar@data 000B                             Command@buf 0500  
            __end_of_TXdataFrontCLOSED EFCB                     ??_RTC_Clock_Enable 0186  
                 ?_I2C_Read_At_Address 017F                   SendLCDbyte@isCommand 0186  
            __end_of_TXdataFrontOPENED EFD7                      i1SetLCDcursor@Col 000F  
                           _UARTstring 5C2A                      i1SetLCDcursor@Row 0010  
               ??_RTC_TIME_NONMilitary 0186                           _USART_Status 010D  
                      BufferCopy@count 0188                   __size_of_StringMatch 007C  
