

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Mar 12 19:05:00 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4685
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	idataBANK3,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    17                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	text57,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	text73,global,reloc=2,class=CODE,delta=1
    96                           	psect	text74,global,reloc=2,class=CODE,delta=1
    97                           	psect	text75,global,reloc=2,class=CODE,delta=1
    98                           	psect	text76,global,reloc=2,class=CODE,delta=1
    99                           	psect	text77,global,reloc=2,class=CODE,delta=1
   100                           	psect	text78,global,reloc=2,class=CODE,delta=1
   101                           	psect	text79,global,reloc=2,class=CODE,delta=1
   102                           	psect	text80,global,reloc=2,class=CODE,delta=1
   103                           	psect	text81,global,reloc=2,class=CODE,delta=1
   104                           	psect	text82,global,reloc=2,class=CODE,delta=1
   105                           	psect	text83,global,reloc=2,class=CODE,delta=1
   106                           	psect	text84,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   139                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   140                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   141                           	psect	param1,global,class=BANK1,space=1,delta=1
   142  0000                     
   143                           	psect	idataBANK1
   144  017F92                     __pidataBANK1:
   145                           	opt stack 0
   146                           
   147                           ;initializer for _BAUD
   148  017F92  2580               	dw	9600
   149  017F94  0000               	dw	0
   150                           
   151                           ;initializer for _LCDclearCount
   152  017F96  61A8               	dw	25000
   153  017F98  0000               	dw	0
   154                           
   155                           ;initializer for _BlueLEDcount
   156  017F9A  0019               	dw	25
   157                           
   158                           	psect	idataBANK3
   159  017EE2                     __pidataBANK3:
   160                           	opt stack 0
   161                           
   162                           ;initializer for _Version
   163  017EE2  31                 	db	49
   164  017EE3  2E                 	db	46
   165  017EE4  30                 	db	48
   166  017EE5  5F                 	db	95
   167  017EE6  44                 	db	68
   168  017EE7  57                 	db	87
   169  017EE8  30                 	db	48
   170  017EE9  00                 	db	0
   171  017EEA  00                 	db	0
   172  017EEB  00                 	db	0
   173  017EEC  00                 	db	0
   174  017EED  00                 	db	0
   175  017EEE  00                 	db	0
   176  017EEF  00                 	db	0
   177  017EF0  00                 	db	0
   178  017EF1  00                 	db	0
   179  017EF2  00                 	db	0
   180  017EF3  00                 	db	0
   181  017EF4  00                 	db	0
   182  017EF5  00                 	db	0
   183                           
   184                           	psect	mediumconst
   185  00ECEC                     __pmediumconst:
   186                           	opt stack 0
   187  00ECEC  00                 	db	0
   188  00ECED                     _octpowers:
   189                           	opt stack 0
   190  00ECED  0001               	dw	1
   191  00ECEF  0000               	dw	0
   192  00ECF1  0008               	dw	8
   193  00ECF3  0000               	dw	0
   194  00ECF5  0040               	dw	64
   195  00ECF7  0000               	dw	0
   196  00ECF9  0200               	dw	512
   197  00ECFB  0000               	dw	0
   198  00ECFD  1000               	dw	4096
   199  00ECFF  0000               	dw	0
   200  00ED01  8000               	dw	32768
   201  00ED03  0000               	dw	0
   202  00ED05  0000               	dw	0
   203  00ED07  0004               	dw	4
   204  00ED09  0000               	dw	0
   205  00ED0B  0020               	dw	32
   206  00ED0D  0000               	dw	0
   207  00ED0F  0100               	dw	256
   208  00ED11  0000               	dw	0
   209  00ED13  0800               	dw	2048
   210  00ED15  0000               	dw	0
   211  00ED17  4000               	dw	16384
   212  00ED19  0000               	dw	0
   213  00ED1B  0000               	dw	0
   214  00ED1D                     __end_of_octpowers:
   215                           	opt stack 0
   216  00ED1D                     _dpowers:
   217                           	opt stack 0
   218  00ED1D  0001               	dw	1
   219  00ED1F  0000               	dw	0
   220  00ED21  000A               	dw	10
   221  00ED23  0000               	dw	0
   222  00ED25  0064               	dw	100
   223  00ED27  0000               	dw	0
   224  00ED29  03E8               	dw	1000
   225  00ED2B  0000               	dw	0
   226  00ED2D  2710               	dw	10000
   227  00ED2F  0000               	dw	0
   228  00ED31  86A0               	dw	34464
   229  00ED33  0001               	dw	1
   230  00ED35  4240               	dw	16960
   231  00ED37  000F               	dw	15
   232  00ED39  9680               	dw	38528
   233  00ED3B  0098               	dw	152
   234  00ED3D  E100               	dw	57600
   235  00ED3F  05F5               	dw	1525
   236  00ED41  CA00               	dw	51712
   237  00ED43  3B9A               	dw	15258
   238  00ED45                     __end_of_dpowers:
   239                           	opt stack 0
   240  00ED45                     _hexpowers:
   241                           	opt stack 0
   242  00ED45  0001               	dw	1
   243  00ED47  0000               	dw	0
   244  00ED49  0010               	dw	16
   245  00ED4B  0000               	dw	0
   246  00ED4D  0100               	dw	256
   247  00ED4F  0000               	dw	0
   248  00ED51  1000               	dw	4096
   249  00ED53  0000               	dw	0
   250  00ED55  0000               	dw	0
   251  00ED57  0001               	dw	1
   252  00ED59  0000               	dw	0
   253  00ED5B  0010               	dw	16
   254  00ED5D  0000               	dw	0
   255  00ED5F  0100               	dw	256
   256  00ED61  0000               	dw	0
   257  00ED63  1000               	dw	4096
   258  00ED65                     __end_of_hexpowers:
   259                           	opt stack 0
   260  00ED65                     _TXToiletAlexBathroom:
   261                           	opt stack 0
   262  00ED65  00                 	db	0
   263  00ED66  00                 	db	0
   264  00ED67  00                 	db	0
   265  00ED68  00                 	db	0
   266  00ED69  00                 	db	0
   267  00ED6A  00                 	db	0
   268  00ED6B  00                 	db	0
   269  00ED6C  00                 	db	0
   270  00ED6D  00                 	db	0
   271  00ED6E  00                 	db	0
   272  00ED6F  00                 	db	0
   273  00ED70  02                 	db	2
   274  00ED71                     __end_of_TXToiletAlexBathroom:
   275                           	opt stack 0
   276  00ED71                     _TXToiletMyBathroom:
   277                           	opt stack 0
   278  00ED71  00                 	db	0
   279  00ED72  00                 	db	0
   280  00ED73  00                 	db	0
   281  00ED74  00                 	db	0
   282  00ED75  00                 	db	0
   283  00ED76  00                 	db	0
   284  00ED77  00                 	db	0
   285  00ED78  00                 	db	0
   286  00ED79  00                 	db	0
   287  00ED7A  00                 	db	0
   288  00ED7B  00                 	db	0
   289  00ED7C  01                 	db	1
   290  00ED7D                     __end_of_TXToiletMyBathroom:
   291                           	opt stack 0
   292  00ED7D                     _TXdataBedroomCLOSED:
   293                           	opt stack 0
   294  00ED7D  00                 	db	0
   295  00ED7E  00                 	db	0
   296  00ED7F  00                 	db	0
   297  00ED80  00                 	db	0
   298  00ED81  00                 	db	0
   299  00ED82  00                 	db	0
   300  00ED83  00                 	db	0
   301  00ED84  00                 	db	0
   302  00ED85  00                 	db	0
   303  00ED86  01                 	db	1
   304  00ED87  00                 	db	0
   305  00ED88  00                 	db	0
   306  00ED89                     __end_of_TXdataBedroomCLOSED:
   307                           	opt stack 0
   308  00ED89                     _TXdataBedroomOPENED:
   309                           	opt stack 0
   310  00ED89  00                 	db	0
   311  00ED8A  00                 	db	0
   312  00ED8B  00                 	db	0
   313  00ED8C  00                 	db	0
   314  00ED8D  00                 	db	0
   315  00ED8E  00                 	db	0
   316  00ED8F  00                 	db	0
   317  00ED90  00                 	db	0
   318  00ED91  00                 	db	0
   319  00ED92  02                 	db	2
   320  00ED93  00                 	db	0
   321  00ED94  00                 	db	0
   322  00ED95                     __end_of_TXdataBedroomOPENED:
   323                           	opt stack 0
   324  00ED95                     _TXdataFrontCLOSED:
   325                           	opt stack 0
   326  00ED95  00                 	db	0
   327  00ED96  00                 	db	0
   328  00ED97  00                 	db	0
   329  00ED98  00                 	db	0
   330  00ED99  00                 	db	0
   331  00ED9A  00                 	db	0
   332  00ED9B  00                 	db	0
   333  00ED9C  00                 	db	0
   334  00ED9D  00                 	db	0
   335  00ED9E  00                 	db	0
   336  00ED9F  02                 	db	2
   337  00EDA0  00                 	db	0
   338  00EDA1                     __end_of_TXdataFrontCLOSED:
   339                           	opt stack 0
   340  00EDA1                     _TXdataFrontOPENED:
   341                           	opt stack 0
   342  00EDA1  00                 	db	0
   343  00EDA2  00                 	db	0
   344  00EDA3  00                 	db	0
   345  00EDA4  00                 	db	0
   346  00EDA5  00                 	db	0
   347  00EDA6  00                 	db	0
   348  00EDA7  00                 	db	0
   349  00EDA8  00                 	db	0
   350  00EDA9  00                 	db	0
   351  00EDAA  00                 	db	0
   352  00EDAB  01                 	db	1
   353  00EDAC  00                 	db	0
   354  00EDAD                     __end_of_TXdataFrontOPENED:
   355                           	opt stack 0
   356  00EDAD                     _TXdataLabCLOSED:
   357                           	opt stack 0
   358  00EDAD  00                 	db	0
   359  00EDAE  00                 	db	0
   360  00EDAF  00                 	db	0
   361  00EDB0  00                 	db	0
   362  00EDB1  00                 	db	0
   363  00EDB2  00                 	db	0
   364  00EDB3  00                 	db	0
   365  00EDB4  00                 	db	0
   366  00EDB5  02                 	db	2
   367  00EDB6  00                 	db	0
   368  00EDB7  00                 	db	0
   369  00EDB8  00                 	db	0
   370  00EDB9                     __end_of_TXdataLabCLOSED:
   371                           	opt stack 0
   372  00EDB9                     _TXdataLabOPENED:
   373                           	opt stack 0
   374  00EDB9  00                 	db	0
   375  00EDBA  00                 	db	0
   376  00EDBB  00                 	db	0
   377  00EDBC  00                 	db	0
   378  00EDBD  00                 	db	0
   379  00EDBE  00                 	db	0
   380  00EDBF  00                 	db	0
   381  00EDC0  00                 	db	0
   382  00EDC1  01                 	db	1
   383  00EDC2  00                 	db	0
   384  00EDC3  00                 	db	0
   385  00EDC4  00                 	db	0
   386  00EDC5                     __end_of_TXdataLabOPENED:
   387                           	opt stack 0
   388  00EDC5                     _Aux2OFF:
   389                           	opt stack 0
   390  00EDC5  00                 	db	0
   391  00EDC6  01                 	db	1
   392  00EDC7  01                 	db	1
   393  00EDC8  00                 	db	0
   394  00EDC9  01                 	db	1
   395  00EDCA  00                 	db	0
   396  00EDCB  00                 	db	0
   397  00EDCC  00                 	db	0
   398  00EDCD  00                 	db	0
   399  00EDCE  00                 	db	0
   400  00EDCF  00                 	db	0
   401  00EDD0  01                 	db	1
   402  00EDD1  00                 	db	0
   403  00EDD2  00                 	db	0
   404  00EDD3  00                 	db	0
   405  00EDD4  01                 	db	1
   406  00EDD5                     __end_of_Aux2OFF:
   407                           	opt stack 0
   408  00EDD5                     _Aux2ON:
   409                           	opt stack 0
   410  00EDD5  00                 	db	0
   411  00EDD6  01                 	db	1
   412  00EDD7  01                 	db	1
   413  00EDD8  00                 	db	0
   414  00EDD9  01                 	db	1
   415  00EDDA  00                 	db	0
   416  00EDDB  00                 	db	0
   417  00EDDC  00                 	db	0
   418  00EDDD  00                 	db	0
   419  00EDDE  00                 	db	0
   420  00EDDF  01                 	db	1
   421  00EDE0  00                 	db	0
   422  00EDE1  00                 	db	0
   423  00EDE2  00                 	db	0
   424  00EDE3  00                 	db	0
   425  00EDE4  01                 	db	1
   426  00EDE5                     __end_of_Aux2ON:
   427                           	opt stack 0
   428  00EDE5                     _AuxOFF:
   429                           	opt stack 0
   430  00EDE5  00                 	db	0
   431  00EDE6  01                 	db	1
   432  00EDE7  01                 	db	1
   433  00EDE8  00                 	db	0
   434  00EDE9  01                 	db	1
   435  00EDEA  00                 	db	0
   436  00EDEB  01                 	db	1
   437  00EDEC  00                 	db	0
   438  00EDED  00                 	db	0
   439  00EDEE  00                 	db	0
   440  00EDEF  00                 	db	0
   441  00EDF0  00                 	db	0
   442  00EDF1  00                 	db	0
   443  00EDF2  00                 	db	0
   444  00EDF3  00                 	db	0
   445  00EDF4  00                 	db	0
   446  00EDF5                     __end_of_AuxOFF:
   447                           	opt stack 0
   448  00EDF5                     _AuxON:
   449                           	opt stack 0
   450  00EDF5  00                 	db	0
   451  00EDF6  01                 	db	1
   452  00EDF7  01                 	db	1
   453  00EDF8  00                 	db	0
   454  00EDF9  01                 	db	1
   455  00EDFA  00                 	db	0
   456  00EDFB  00                 	db	0
   457  00EDFC  01                 	db	1
   458  00EDFD  00                 	db	0
   459  00EDFE  00                 	db	0
   460  00EDFF  00                 	db	0
   461  00EE00  00                 	db	0
   462  00EE01  00                 	db	0
   463  00EE02  00                 	db	0
   464  00EE03  00                 	db	0
   465  00EE04  00                 	db	0
   466  00EE05                     __end_of_AuxON:
   467                           	opt stack 0
   468  00EE05                     _BedOFF:
   469                           	opt stack 0
   470  00EE05  00                 	db	0
   471  00EE06  01                 	db	1
   472  00EE07  01                 	db	1
   473  00EE08  00                 	db	0
   474  00EE09  01                 	db	1
   475  00EE0A  00                 	db	0
   476  00EE0B  00                 	db	0
   477  00EE0C  00                 	db	0
   478  00EE0D  00                 	db	0
   479  00EE0E  01                 	db	1
   480  00EE0F  00                 	db	0
   481  00EE10  00                 	db	0
   482  00EE11  00                 	db	0
   483  00EE12  00                 	db	0
   484  00EE13  00                 	db	0
   485  00EE14  00                 	db	0
   486  00EE15                     __end_of_BedOFF:
   487                           	opt stack 0
   488  00EE15                     _BedON:
   489                           	opt stack 0
   490  00EE15  00                 	db	0
   491  00EE16  01                 	db	1
   492  00EE17  01                 	db	1
   493  00EE18  00                 	db	0
   494  00EE19  01                 	db	1
   495  00EE1A  00                 	db	0
   496  00EE1B  00                 	db	0
   497  00EE1C  00                 	db	0
   498  00EE1D  01                 	db	1
   499  00EE1E  00                 	db	0
   500  00EE1F  00                 	db	0
   501  00EE20  00                 	db	0
   502  00EE21  00                 	db	0
   503  00EE22  00                 	db	0
   504  00EE23  00                 	db	0
   505  00EE24  00                 	db	0
   506  00EE25                     __end_of_BedON:
   507                           	opt stack 0
   508  00EE25                     _SubLightOFF:
   509                           	opt stack 0
   510  00EE25  00                 	db	0
   511  00EE26  01                 	db	1
   512  00EE27  01                 	db	1
   513  00EE28  00                 	db	0
   514  00EE29  01                 	db	1
   515  00EE2A  00                 	db	0
   516  00EE2B  00                 	db	0
   517  00EE2C  00                 	db	0
   518  00EE2D  00                 	db	0
   519  00EE2E  00                 	db	0
   520  00EE2F  00                 	db	0
   521  00EE30  01                 	db	1
   522  00EE31  00                 	db	0
   523  00EE32  01                 	db	1
   524  00EE33  00                 	db	0
   525  00EE34  00                 	db	0
   526  00EE35                     __end_of_SubLightOFF:
   527                           	opt stack 0
   528  00EE35                     _SubLightON:
   529                           	opt stack 0
   530  00EE35  00                 	db	0
   531  00EE36  01                 	db	1
   532  00EE37  01                 	db	1
   533  00EE38  00                 	db	0
   534  00EE39  01                 	db	1
   535  00EE3A  00                 	db	0
   536  00EE3B  00                 	db	0
   537  00EE3C  00                 	db	0
   538  00EE3D  00                 	db	0
   539  00EE3E  00                 	db	0
   540  00EE3F  01                 	db	1
   541  00EE40  00                 	db	0
   542  00EE41  00                 	db	0
   543  00EE42  01                 	db	1
   544  00EE43  00                 	db	0
   545  00EE44  00                 	db	0
   546  00EE45                     __end_of_SubLightON:
   547                           	opt stack 0
   548  00EE45                     _fanOFF:
   549                           	opt stack 0
   550  00EE45  00                 	db	0
   551  00EE46  01                 	db	1
   552  00EE47  01                 	db	1
   553  00EE48  00                 	db	0
   554  00EE49  01                 	db	1
   555  00EE4A  00                 	db	0
   556  00EE4B  00                 	db	0
   557  00EE4C  00                 	db	0
   558  00EE4D  00                 	db	0
   559  00EE4E  00                 	db	0
   560  00EE4F  00                 	db	0
   561  00EE50  01                 	db	1
   562  00EE51  00                 	db	0
   563  00EE52  00                 	db	0
   564  00EE53  00                 	db	0
   565  00EE54  00                 	db	0
   566  00EE55                     __end_of_fanOFF:
   567                           	opt stack 0
   568  00EE55                     _fanON:
   569                           	opt stack 0
   570  00EE55  00                 	db	0
   571  00EE56  01                 	db	1
   572  00EE57  01                 	db	1
   573  00EE58  00                 	db	0
   574  00EE59  01                 	db	1
   575  00EE5A  00                 	db	0
   576  00EE5B  00                 	db	0
   577  00EE5C  00                 	db	0
   578  00EE5D  00                 	db	0
   579  00EE5E  00                 	db	0
   580  00EE5F  01                 	db	1
   581  00EE60  00                 	db	0
   582  00EE61  00                 	db	0
   583  00EE62  00                 	db	0
   584  00EE63  00                 	db	0
   585  00EE64  00                 	db	0
   586  00EE65                     __end_of_fanON:
   587                           	opt stack 0
   588  00EE65                     _TXdataD:
   589                           	opt stack 0
   590  00EE65  02                 	db	2
   591  00EE66  02                 	db	2
   592  00EE67  02                 	db	2
   593  00EE68  02                 	db	2
   594  00EE69  02                 	db	2
   595  00EE6A  02                 	db	2
   596  00EE6B  00                 	db	0
   597  00EE6C  00                 	db	0
   598  00EE6D  01                 	db	1
   599  00EE6E  00                 	db	0
   600  00EE6F  00                 	db	0
   601  00EE70  00                 	db	0
   602  00EE71                     __end_of_TXdataD:
   603                           	opt stack 0
   604  00EE71                     _TXdataE:
   605                           	opt stack 0
   606  00EE71  00                 	db	0
   607  00EE72  02                 	db	2
   608  00EE73  02                 	db	2
   609  00EE74  02                 	db	2
   610  00EE75  02                 	db	2
   611  00EE76  02                 	db	2
   612  00EE77  00                 	db	0
   613  00EE78  00                 	db	0
   614  00EE79  01                 	db	1
   615  00EE7A  00                 	db	0
   616  00EE7B  00                 	db	0
   617  00EE7C  00                 	db	0
   618  00EE7D                     __end_of_TXdataE:
   619                           	opt stack 0
   620  00EE7D                     _TXdataF:
   621                           	opt stack 0
   622  00EE7D  02                 	db	2
   623  00EE7E  00                 	db	0
   624  00EE7F  02                 	db	2
   625  00EE80  02                 	db	2
   626  00EE81  02                 	db	2
   627  00EE82  02                 	db	2
   628  00EE83  00                 	db	0
   629  00EE84  00                 	db	0
   630  00EE85  01                 	db	1
   631  00EE86  00                 	db	0
   632  00EE87  00                 	db	0
   633  00EE88  00                 	db	0
   634  00EE89                     __end_of_TXdataF:
   635                           	opt stack 0
   636  0000                     _ADCON0	set	4034
   637  0000                     _ADCON1	set	4033
   638  0000                     _ADCON2	set	4032
   639  0000                     _ADRESH	set	4036
   640  0000                     _ADRESL	set	4035
   641  0000                     _BAUDCON	set	4024
   642  0000                     _CCP1CON	set	4029
   643  0000                     _CCPR1L	set	4030
   644  0000                     _ECCP1CON	set	4026
   645  0000                     _ECCPR1L	set	4027
   646  0000                     _EEADR	set	4009
   647  0000                     _EEADRH	set	4010
   648  0000                     _EECON1bits	set	4006
   649  0000                     _EECON2	set	4007
   650  0000                     _EEDATA	set	4008
   651  0000                     _INTCON2bits	set	4081
   652  0000                     _INTCONbits	set	4082
   653  0000                     _IPR1bits	set	3999
   654  0000                     _LATA	set	3977
   655  0000                     _LATC	set	3979
   656  0000                     _LATD	set	3980
   657  0000                     _LATE	set	3981
   658  0000                     _OSCCON	set	4051
   659  0000                     _PIE1	set	3997
   660  0000                     _PIE1bits	set	3997
   661  0000                     _PIR1bits	set	3998
   662  0000                     _PIR2bits	set	4001
   663  0000                     _PORTB	set	3969
   664  0000                     _PR2	set	4043
   665  0000                     _RCONbits	set	4048
   666  0000                     _RCREG	set	4014
   667  0000                     _RCSTA	set	4011
   668  0000                     _RCSTAbits	set	4011
   669  0000                     _SPBRG	set	4015
   670  0000                     _SPBRGH	set	4016
   671  0000                     _SSPADD	set	4040
   672  0000                     _SSPBUF	set	4041
   673  0000                     _SSPCON1	set	4038
   674  0000                     _SSPCON1bits	set	4038
   675  0000                     _SSPCON2	set	4037
   676  0000                     _SSPCON2bits	set	4037
   677  0000                     _SSPSTAT	set	4039
   678  0000                     _SSPSTATbits	set	4039
   679  0000                     _T0CONbits	set	4053
   680  0000                     _T2CON	set	4042
   681  0000                     _TMR0H	set	4055
   682  0000                     _TMR0L	set	4054
   683  0000                     _TRISAbits	set	3986
   684  0000                     _TRISBbits	set	3987
   685  0000                     _TRISCbits	set	3988
   686  0000                     _TRISDbits	set	3989
   687  0000                     _TRISEbits	set	3990
   688  0000                     _TXREG	set	4013
   689  0000                     _TXSTA	set	4012
   690  0000                     _TXSTAbits	set	4012
   691  00EE89                     STR_213:
   692  00EE89  54                 	db	84	;'T'
   693  00EE8A  6F                 	db	111	;'o'
   694  00EE8B  20                 	db	32
   695  00EE8C  72                 	db	114	;'r'
   696  00EE8D  65                 	db	101	;'e'
   697  00EE8E  61                 	db	97	;'a'
   698  00EE8F  64                 	db	100	;'d'
   699  00EE90  20                 	db	32
   700  00EE91  61                 	db	97	;'a'
   701  00EE92  6E                 	db	110	;'n'
   702  00EE93  64                 	db	100	;'d'
   703  00EE94  20                 	db	32
   704  00EE95  61                 	db	97	;'a'
   705  00EE96  64                 	db	100	;'d'
   706  00EE97  63                 	db	99	;'c'
   707  00EE98  20                 	db	32
   708  00EE99  63                 	db	99	;'c'
   709  00EE9A  68                 	db	104	;'h'
   710  00EE9B  61                 	db	97	;'a'
   711  00EE9C  6E                 	db	110	;'n'
   712  00EE9D  6E                 	db	110	;'n'
   713  00EE9E  65                 	db	101	;'e'
   714  00EE9F  6C                 	db	108	;'l'
   715  00EEA0  2C                 	db	44
   716  00EEA1  20                 	db	32
   717  00EEA2  74                 	db	116	;'t'
   718  00EEA3  79                 	db	121	;'y'
   719  00EEA4  70                 	db	112	;'p'
   720  00EEA5  65                 	db	101	;'e'
   721  00EEA6  20                 	db	32
   722  00EEA7  74                 	db	116	;'t'
   723  00EEA8  68                 	db	104	;'h'
   724  00EEA9  65                 	db	101	;'e'
   725  00EEAA  20                 	db	32
   726  00EEAB  63                 	db	99	;'c'
   727  00EEAC  6F                 	db	111	;'o'
   728  00EEAD  6D                 	db	109	;'m'
   729  00EEAE  6D                 	db	109	;'m'
   730  00EEAF  61                 	db	97	;'a'
   731  00EEB0  6E                 	db	110	;'n'
   732  00EEB1  64                 	db	100	;'d'
   733  00EEB2  0D                 	db	13
   734  00EEB3  0A                 	db	10
   735  00EEB4  20                 	db	32
   736  00EEB5  41                 	db	65	;'A'
   737  00EEB6  44                 	db	68	;'D'
   738  00EEB7  43                 	db	67	;'C'
   739  00EEB8  20                 	db	32
   740  00EEB9  66                 	db	102	;'f'
   741  00EEBA  6F                 	db	111	;'o'
   742  00EEBB  6C                 	db	108	;'l'
   743  00EEBC  6C                 	db	108	;'l'
   744  00EEBD  6F                 	db	111	;'o'
   745  00EEBE  77                 	db	119	;'w'
   746  00EEBF  65                 	db	101	;'e'
   747  00EEC0  64                 	db	100	;'d'
   748  00EEC1  20                 	db	32
   749  00EEC2  62                 	db	98	;'b'
   750  00EEC3  79                 	db	121	;'y'
   751  00EEC4  20                 	db	32
   752  00EEC5  27                 	db	39
   753  00EEC6  43                 	db	67	;'C'
   754  00EEC7  68                 	db	104	;'h'
   755  00EEC8  61                 	db	97	;'a'
   756  00EEC9  6E                 	db	110	;'n'
   757  00EECA  6E                 	db	110	;'n'
   758  00EECB  65                 	db	101	;'e'
   759  00EECC  6C                 	db	108	;'l'
   760  00EECD  27                 	db	39
   761  00EECE  20                 	db	32
   762  00EECF  0D                 	db	13
   763  00EED0  0A                 	db	10
   764  00EED1  00                 	db	0
   765  00EED2                     STR_245:
   766  00EED2  54                 	db	84	;'T'
   767  00EED3  6F                 	db	111	;'o'
   768  00EED4  20                 	db	32
   769  00EED5  63                 	db	99	;'c'
   770  00EED6  6F                 	db	111	;'o'
   771  00EED7  6D                 	db	109	;'m'
   772  00EED8  6D                 	db	109	;'m'
   773  00EED9  61                 	db	97	;'a'
   774  00EEDA  6E                 	db	110	;'n'
   775  00EEDB  64                 	db	100	;'d'
   776  00EEDC  20                 	db	32
   777  00EEDD  74                 	db	116	;'t'
   778  00EEDE  68                 	db	104	;'h'
   779  00EEDF  65                 	db	101	;'e'
   780  00EEE0  20                 	db	32
   781  00EEE1  52                 	db	82	;'R'
   782  00EEE2  54                 	db	84	;'T'
   783  00EEE3  43                 	db	67	;'C'
   784  00EEE4  2C                 	db	44
   785  00EEE5  20                 	db	32
   786  00EEE6  74                 	db	116	;'t'
   787  00EEE7  79                 	db	121	;'y'
   788  00EEE8  70                 	db	112	;'p'
   789  00EEE9  65                 	db	101	;'e'
   790  00EEEA  20                 	db	32
   791  00EEEB  74                 	db	116	;'t'
   792  00EEEC  68                 	db	104	;'h'
   793  00EEED  65                 	db	101	;'e'
   794  00EEEE  20                 	db	32
   795  00EEEF  61                 	db	97	;'a'
   796  00EEF0  63                 	db	99	;'c'
   797  00EEF1  74                 	db	116	;'t'
   798  00EEF2  69                 	db	105	;'i'
   799  00EEF3  6F                 	db	111	;'o'
   800  00EEF4  6E                 	db	110	;'n'
   801  00EEF5  0D                 	db	13
   802  00EEF6  0A                 	db	10
   803  00EEF7  20                 	db	32
   804  00EEF8  66                 	db	102	;'f'
   805  00EEF9  6F                 	db	111	;'o'
   806  00EEFA  6C                 	db	108	;'l'
   807  00EEFB  6C                 	db	108	;'l'
   808  00EEFC  6F                 	db	111	;'o'
   809  00EEFD  77                 	db	119	;'w'
   810  00EEFE  65                 	db	101	;'e'
   811  00EEFF  64                 	db	100	;'d'
   812  00EF00  20                 	db	32
   813  00EF01  62                 	db	98	;'b'
   814  00EF02  79                 	db	121	;'y'
   815  00EF03  20                 	db	32
   816  00EF04  74                 	db	116	;'t'
   817  00EF05  68                 	db	104	;'h'
   818  00EF06  65                 	db	101	;'e'
   819  00EF07  20                 	db	32
   820  00EF08  70                 	db	112	;'p'
   821  00EF09  61                 	db	97	;'a'
   822  00EF0A  72                 	db	114	;'r'
   823  00EF0B  61                 	db	97	;'a'
   824  00EF0C  6D                 	db	109	;'m'
   825  00EF0D  65                 	db	101	;'e'
   826  00EF0E  74                 	db	116	;'t'
   827  00EF0F  65                 	db	101	;'e'
   828  00EF10  72                 	db	114	;'r'
   829  00EF11  73                 	db	115	;'s'
   830  00EF12  20                 	db	32
   831  00EF13  0D                 	db	13
   832  00EF14  0A                 	db	10
   833  00EF15  0A                 	db	10
   834  00EF16  00                 	db	0
   835  00EF17                     STR_64:
   836  00EF17  54                 	db	84	;'T'
   837  00EF18  6F                 	db	111	;'o'
   838  00EF19  20                 	db	32
   839  00EF1A  63                 	db	99	;'c'
   840  00EF1B  6F                 	db	111	;'o'
   841  00EF1C  6E                 	db	110	;'n'
   842  00EF1D  74                 	db	116	;'t'
   843  00EF1E  72                 	db	114	;'r'
   844  00EF1F  6F                 	db	111	;'o'
   845  00EF20  6C                 	db	108	;'l'
   846  00EF21  20                 	db	32
   847  00EF22  61                 	db	97	;'a'
   848  00EF23  20                 	db	32
   849  00EF24  64                 	db	100	;'d'
   850  00EF25  65                 	db	101	;'e'
   851  00EF26  76                 	db	118	;'v'
   852  00EF27  69                 	db	105	;'i'
   853  00EF28  63                 	db	99	;'c'
   854  00EF29  65                 	db	101	;'e'
   855  00EF2A  20                 	db	32
   856  00EF2B  65                 	db	101	;'e'
   857  00EF2C  6E                 	db	110	;'n'
   858  00EF2D  74                 	db	116	;'t'
   859  00EF2E  65                 	db	101	;'e'
   860  00EF2F  72                 	db	114	;'r'
   861  00EF30  20                 	db	32
   862  00EF31  74                 	db	116	;'t'
   863  00EF32  68                 	db	104	;'h'
   864  00EF33  65                 	db	101	;'e'
   865  00EF34  20                 	db	32
   866  00EF35  64                 	db	100	;'d'
   867  00EF36  65                 	db	101	;'e'
   868  00EF37  76                 	db	118	;'v'
   869  00EF38  69                 	db	105	;'i'
   870  00EF39  63                 	db	99	;'c'
   871  00EF3A  65                 	db	101	;'e'
   872  00EF3B  20                 	db	32
   873  00EF3C  66                 	db	102	;'f'
   874  00EF3D  6F                 	db	111	;'o'
   875  00EF3E  6C                 	db	108	;'l'
   876  00EF3F  6C                 	db	108	;'l'
   877  00EF40  6F                 	db	111	;'o'
   878  00EF41  77                 	db	119	;'w'
   879  00EF42  65                 	db	101	;'e'
   880  00EF43  64                 	db	100	;'d'
   881  00EF44  20                 	db	32
   882  00EF45  62                 	db	98	;'b'
   883  00EF46  79                 	db	121	;'y'
   884  00EF47  20                 	db	32
   885  00EF48  27                 	db	39
   886  00EF49  3D                 	db	61	;'='
   887  00EF4A  27                 	db	39
   888  00EF4B  20                 	db	32
   889  00EF4C  61                 	db	97	;'a'
   890  00EF4D  6E                 	db	110	;'n'
   891  00EF4E  64                 	db	100	;'d'
   892  00EF4F  20                 	db	32
   893  00EF50  27                 	db	39
   894  00EF51  4F                 	db	79	;'O'
   895  00EF52  6E                 	db	110	;'n'
   896  00EF53  2F                 	db	47
   897  00EF54  4F                 	db	79	;'O'
   898  00EF55  66                 	db	102	;'f'
   899  00EF56  66                 	db	102	;'f'
   900  00EF57  27                 	db	39
   901  00EF58  0D                 	db	13
   902  00EF59  0A                 	db	10
   903  00EF5A  00                 	db	0
   904  00EF5B                     STR_175:
   905  00EF5B  54                 	db	84	;'T'
   906  00EF5C  6F                 	db	111	;'o'
   907  00EF5D  20                 	db	32
   908  00EF5E  73                 	db	115	;'s'
   909  00EF5F  65                 	db	101	;'e'
   910  00EF60  74                 	db	116	;'t'
   911  00EF61  20                 	db	32
   912  00EF62  74                 	db	116	;'t'
   913  00EF63  65                 	db	101	;'e'
   914  00EF64  20                 	db	32
   915  00EF65  50                 	db	80	;'P'
   916  00EF66  57                 	db	87	;'W'
   917  00EF67  4D                 	db	77	;'M'
   918  00EF68  20                 	db	32
   919  00EF69  62                 	db	98	;'b'
   920  00EF6A  72                 	db	114	;'r'
   921  00EF6B  69                 	db	105	;'i'
   922  00EF6C  67                 	db	103	;'g'
   923  00EF6D  68                 	db	104	;'h'
   924  00EF6E  74                 	db	116	;'t'
   925  00EF6F  6E                 	db	110	;'n'
   926  00EF70  65                 	db	101	;'e'
   927  00EF71  73                 	db	115	;'s'
   928  00EF72  73                 	db	115	;'s'
   929  00EF73  20                 	db	32
   930  00EF74  65                 	db	101	;'e'
   931  00EF75  6E                 	db	110	;'n'
   932  00EF76  74                 	db	116	;'t'
   933  00EF77  65                 	db	101	;'e'
   934  00EF78  72                 	db	114	;'r'
   935  00EF79  20                 	db	32
   936  00EF7A  27                 	db	39
   937  00EF7B  52                 	db	82	;'R'
   938  00EF7C  65                 	db	101	;'e'
   939  00EF7D  64                 	db	100	;'d'
   940  00EF7E  20                 	db	32
   941  00EF7F  4C                 	db	76	;'L'
   942  00EF80  45                 	db	69	;'E'
   943  00EF81  44                 	db	68	;'D'
   944  00EF82  20                 	db	32
   945  00EF83  62                 	db	98	;'b'
   946  00EF84  72                 	db	114	;'r'
   947  00EF85  69                 	db	105	;'i'
   948  00EF86  67                 	db	103	;'g'
   949  00EF87  68                 	db	104	;'h'
   950  00EF88  74                 	db	116	;'t'
   951  00EF89  6E                 	db	110	;'n'
   952  00EF8A  65                 	db	101	;'e'
   953  00EF8B  73                 	db	115	;'s'
   954  00EF8C  73                 	db	115	;'s'
   955  00EF8D  20                 	db	32
   956  00EF8E  3D                 	db	61	;'='
   957  00EF8F  20                 	db	32
   958  00EF90  64                 	db	100	;'d'
   959  00EF91  75                 	db	117	;'u'
   960  00EF92  74                 	db	116	;'t'
   961  00EF93  79                 	db	121	;'y'
   962  00EF94  63                 	db	99	;'c'
   963  00EF95  79                 	db	121	;'y'
   964  00EF96  63                 	db	99	;'c'
   965  00EF97  6C                 	db	108	;'l'
   966  00EF98  65                 	db	101	;'e'
   967  00EF99  27                 	db	39
   968  00EF9A  0D                 	db	13
   969  00EF9B  0A                 	db	10
   970  00EF9C  00                 	db	0
   971  00EF9D                     STR_192:
   972  00EF9D  54                 	db	84	;'T'
   973  00EF9E  6F                 	db	111	;'o'
   974  00EF9F  20                 	db	32
   975  00EFA0  73                 	db	115	;'s'
   976  00EFA1  65                 	db	101	;'e'
   977  00EFA2  74                 	db	116	;'t'
   978  00EFA3  20                 	db	32
   979  00EFA4  43                 	db	67	;'C'
   980  00EFA5  6F                 	db	111	;'o'
   981  00EFA6  6E                 	db	110	;'n'
   982  00EFA7  74                 	db	116	;'t'
   983  00EFA8  72                 	db	114	;'r'
   984  00EFA9  61                 	db	97	;'a'
   985  00EFAA  73                 	db	115	;'s'
   986  00EFAB  74                 	db	116	;'t'
   987  00EFAC  20                 	db	32
   988  00EFAD  50                 	db	80	;'P'
   989  00EFAE  57                 	db	87	;'W'
   990  00EFAF  4D                 	db	77	;'M'
   991  00EFB0  20                 	db	32
   992  00EFB1  62                 	db	98	;'b'
   993  00EFB2  72                 	db	114	;'r'
   994  00EFB3  69                 	db	105	;'i'
   995  00EFB4  67                 	db	103	;'g'
   996  00EFB5  68                 	db	104	;'h'
   997  00EFB6  74                 	db	116	;'t'
   998  00EFB7  6E                 	db	110	;'n'
   999  00EFB8  65                 	db	101	;'e'
  1000  00EFB9  73                 	db	115	;'s'
  1001  00EFBA  73                 	db	115	;'s'
  1002  00EFBB  20                 	db	32
  1003  00EFBC  65                 	db	101	;'e'
  1004  00EFBD  6E                 	db	110	;'n'
  1005  00EFBE  74                 	db	116	;'t'
  1006  00EFBF  65                 	db	101	;'e'
  1007  00EFC0  72                 	db	114	;'r'
  1008  00EFC1  20                 	db	32
  1009  00EFC2  27                 	db	39
  1010  00EFC3  43                 	db	67	;'C'
  1011  00EFC4  6F                 	db	111	;'o'
  1012  00EFC5  6E                 	db	110	;'n'
  1013  00EFC6  74                 	db	116	;'t'
  1014  00EFC7  72                 	db	114	;'r'
  1015  00EFC8  61                 	db	97	;'a'
  1016  00EFC9  73                 	db	115	;'s'
  1017  00EFCA  74                 	db	116	;'t'
  1018  00EFCB  20                 	db	32
  1019  00EFCC  3D                 	db	61	;'='
  1020  00EFCD  20                 	db	32
  1021  00EFCE  64                 	db	100	;'d'
  1022  00EFCF  75                 	db	117	;'u'
  1023  00EFD0  74                 	db	116	;'t'
  1024  00EFD1  79                 	db	121	;'y'
  1025  00EFD2  63                 	db	99	;'c'
  1026  00EFD3  79                 	db	121	;'y'
  1027  00EFD4  63                 	db	99	;'c'
  1028  00EFD5  6C                 	db	108	;'l'
  1029  00EFD6  65                 	db	101	;'e'
  1030  00EFD7  27                 	db	39
  1031  00EFD8  0D                 	db	13
  1032  00EFD9  0A                 	db	10
  1033  00EFDA  00                 	db	0
  1034  00EFDB                     STR_246:
  1035  00EFDB  66                 	db	102	;'f'
  1036  00EFDC  75                 	db	117	;'u'
  1037  00EFDD  72                 	db	114	;'r'
  1038  00EFDE  74                 	db	116	;'t'
  1039  00EFDF  68                 	db	104	;'h'
  1040  00EFE0  65                 	db	101	;'e'
  1041  00EFE1  72                 	db	114	;'r'
  1042  00EFE2  20                 	db	32
  1043  00EFE3  73                 	db	115	;'s'
  1044  00EFE4  75                 	db	117	;'u'
  1045  00EFE5  62                 	db	98	;'b'
  1046  00EFE6  20                 	db	32
  1047  00EFE7  6D                 	db	109	;'m'
  1048  00EFE8  65                 	db	101	;'e'
  1049  00EFE9  6E                 	db	110	;'n'
  1050  00EFEA  75                 	db	117	;'u'
  1051  00EFEB  73                 	db	115	;'s'
  1052  00EFEC  20                 	db	32
  1053  00EFED  61                 	db	97	;'a'
  1054  00EFEE  76                 	db	118	;'v'
  1055  00EFEF  61                 	db	97	;'a'
  1056  00EFF0  69                 	db	105	;'i'
  1057  00EFF1  6C                 	db	108	;'l'
  1058  00EFF2  61                 	db	97	;'a'
  1059  00EFF3  62                 	db	98	;'b'
  1060  00EFF4  6C                 	db	108	;'l'
  1061  00EFF5  65                 	db	101	;'e'
  1062  00EFF6  20                 	db	32
  1063  00EFF7  62                 	db	98	;'b'
  1064  00EFF8  79                 	db	121	;'y'
  1065  00EFF9  20                 	db	32
  1066  00EFFA  65                 	db	101	;'e'
  1067  00EFFB  6E                 	db	110	;'n'
  1068  00EFFC  74                 	db	116	;'t'
  1069  00EFFD  65                 	db	101	;'e'
  1070  00EFFE  72                 	db	114	;'r'
  1071  00EFFF  69                 	db	105	;'i'
  1072  00F000  6E                 	db	110	;'n'
  1073  00F001  67                 	db	103	;'g'
  1074  00F002  20                 	db	32
  1075  00F003  74                 	db	116	;'t'
  1076  00F004  68                 	db	104	;'h'
  1077  00F005  65                 	db	101	;'e'
  1078  00F006  20                 	db	32
  1079  00F007  61                 	db	97	;'a'
  1080  00F008  63                 	db	99	;'c'
  1081  00F009  74                 	db	116	;'t'
  1082  00F00A  69                 	db	105	;'i'
  1083  00F00B  6F                 	db	111	;'o'
  1084  00F00C  6E                 	db	110	;'n'
  1085  00F00D  20                 	db	32
  1086  00F00E  61                 	db	97	;'a'
  1087  00F00F  6E                 	db	110	;'n'
  1088  00F010  64                 	db	100	;'d'
  1089  00F011  20                 	db	32
  1090  00F012  61                 	db	97	;'a'
  1091  00F013  20                 	db	32
  1092  00F014  27                 	db	39
  1093  00F015  3F                 	db	63	;'?'
  1094  00F016  27                 	db	39
  1095  00F017  00                 	db	0
  1096  00F018                     STR_24:
  1097  00F018  53                 	db	83	;'S'
  1098  00F019  79                 	db	121	;'y'
  1099  00F01A  73                 	db	115	;'s'
  1100  00F01B  74                 	db	116	;'t'
  1101  00F01C  65                 	db	101	;'e'
  1102  00F01D  6D                 	db	109	;'m'
  1103  00F01E  20                 	db	32
  1104  00F01F  42                 	db	66	;'B'
  1105  00F020  61                 	db	97	;'a'
  1106  00F021  75                 	db	117	;'u'
  1107  00F022  64                 	db	100	;'d'
  1108  00F023  20                 	db	32
  1109  00F024  77                 	db	119	;'w'
  1110  00F025  69                 	db	105	;'i'
  1111  00F026  6C                 	db	108	;'l'
  1112  00F027  6C                 	db	108	;'l'
  1113  00F028  20                 	db	32
  1114  00F029  62                 	db	98	;'b'
  1115  00F02A  65                 	db	101	;'e'
  1116  00F02B  20                 	db	32
  1117  00F02C  73                 	db	115	;'s'
  1118  00F02D  65                 	db	101	;'e'
  1119  00F02E  74                 	db	116	;'t'
  1120  00F02F  20                 	db	32
  1121  00F030  74                 	db	116	;'t'
  1122  00F031  6F                 	db	111	;'o'
  1123  00F032  20                 	db	32
  1124  00F033  25                 	db	37
  1125  00F034  6C                 	db	108	;'l'
  1126  00F035  75                 	db	117	;'u'
  1127  00F036  20                 	db	32
  1128  00F037  77                 	db	119	;'w'
  1129  00F038  69                 	db	105	;'i'
  1130  00F039  74                 	db	116	;'t'
  1131  00F03A  68                 	db	104	;'h'
  1132  00F03B  20                 	db	32
  1133  00F03C  45                 	db	69	;'E'
  1134  00F03D  76                 	db	118	;'v'
  1135  00F03E  65                 	db	101	;'e'
  1136  00F03F  6E                 	db	110	;'n'
  1137  00F040  20                 	db	32
  1138  00F041  70                 	db	112	;'p'
  1139  00F042  61                 	db	97	;'a'
  1140  00F043  72                 	db	114	;'r'
  1141  00F044  69                 	db	105	;'i'
  1142  00F045  74                 	db	116	;'t'
  1143  00F046  79                 	db	121	;'y'
  1144  00F047  20                 	db	32
  1145  00F048  62                 	db	98	;'b'
  1146  00F049  69                 	db	105	;'i'
  1147  00F04A  74                 	db	116	;'t'
  1148  00F04B  0D                 	db	13
  1149  00F04C  0A                 	db	10
  1150  00F04D  00                 	db	0
  1151  00F04E                     STR_8:
  1152  00F04E  45                 	db	69	;'E'
  1153  00F04F  72                 	db	114	;'r'
  1154  00F050  72                 	db	114	;'r'
  1155  00F051  6F                 	db	111	;'o'
  1156  00F052  72                 	db	114	;'r'
  1157  00F053  3A                 	db	58	;':'
  1158  00F054  20                 	db	32
  1159  00F055  43                 	db	67	;'C'
  1160  00F056  6F                 	db	111	;'o'
  1161  00F057  75                 	db	117	;'u'
  1162  00F058  6C                 	db	108	;'l'
  1163  00F059  64                 	db	100	;'d'
  1164  00F05A  20                 	db	32
  1165  00F05B  6E                 	db	110	;'n'
  1166  00F05C  6F                 	db	111	;'o'
  1167  00F05D  74                 	db	116	;'t'
  1168  00F05E  20                 	db	32
  1169  00F05F  62                 	db	98	;'b'
  1170  00F060  75                 	db	117	;'u'
  1171  00F061  72                 	db	114	;'r'
  1172  00F062  6E                 	db	110	;'n'
  1173  00F063  20                 	db	32
  1174  00F064  64                 	db	100	;'d'
  1175  00F065  65                 	db	101	;'e'
  1176  00F066  66                 	db	102	;'f'
  1177  00F067  61                 	db	97	;'a'
  1178  00F068  75                 	db	117	;'u'
  1179  00F069  6C                 	db	108	;'l'
  1180  00F06A  74                 	db	116	;'t'
  1181  00F06B  20                 	db	32
  1182  00F06C  42                 	db	66	;'B'
  1183  00F06D  61                 	db	97	;'a'
  1184  00F06E  75                 	db	117	;'u'
  1185  00F06F  64                 	db	100	;'d'
  1186  00F070  20                 	db	32
  1187  00F071  72                 	db	114	;'r'
  1188  00F072  61                 	db	97	;'a'
  1189  00F073  74                 	db	116	;'t'
  1190  00F074  65                 	db	101	;'e'
  1191  00F075  20                 	db	32
  1192  00F076  69                 	db	105	;'i'
  1193  00F077  6E                 	db	110	;'n'
  1194  00F078  74                 	db	116	;'t'
  1195  00F079  6F                 	db	111	;'o'
  1196  00F07A  20                 	db	32
  1197  00F07B  4D                 	db	77	;'M'
  1198  00F07C  65                 	db	101	;'e'
  1199  00F07D  6D                 	db	109	;'m'
  1200  00F07E  6F                 	db	111	;'o'
  1201  00F07F  72                 	db	114	;'r'
  1202  00F080  79                 	db	121	;'y'
  1203  00F081  0D                 	db	13
  1204  00F082  0A                 	db	10
  1205  00F083  00                 	db	0
  1206  00F084                     STR_23:
  1207  00F084  53                 	db	83	;'S'
  1208  00F085  79                 	db	121	;'y'
  1209  00F086  73                 	db	115	;'s'
  1210  00F087  74                 	db	116	;'t'
  1211  00F088  65                 	db	101	;'e'
  1212  00F089  6D                 	db	109	;'m'
  1213  00F08A  20                 	db	32
  1214  00F08B  42                 	db	66	;'B'
  1215  00F08C  61                 	db	97	;'a'
  1216  00F08D  75                 	db	117	;'u'
  1217  00F08E  64                 	db	100	;'d'
  1218  00F08F  20                 	db	32
  1219  00F090  77                 	db	119	;'w'
  1220  00F091  69                 	db	105	;'i'
  1221  00F092  6C                 	db	108	;'l'
  1222  00F093  6C                 	db	108	;'l'
  1223  00F094  20                 	db	32
  1224  00F095  62                 	db	98	;'b'
  1225  00F096  65                 	db	101	;'e'
  1226  00F097  20                 	db	32
  1227  00F098  73                 	db	115	;'s'
  1228  00F099  65                 	db	101	;'e'
  1229  00F09A  74                 	db	116	;'t'
  1230  00F09B  20                 	db	32
  1231  00F09C  74                 	db	116	;'t'
  1232  00F09D  6F                 	db	111	;'o'
  1233  00F09E  20                 	db	32
  1234  00F09F  25                 	db	37
  1235  00F0A0  6C                 	db	108	;'l'
  1236  00F0A1  75                 	db	117	;'u'
  1237  00F0A2  20                 	db	32
  1238  00F0A3  77                 	db	119	;'w'
  1239  00F0A4  69                 	db	105	;'i'
  1240  00F0A5  74                 	db	116	;'t'
  1241  00F0A6  68                 	db	104	;'h'
  1242  00F0A7  20                 	db	32
  1243  00F0A8  4F                 	db	79	;'O'
  1244  00F0A9  64                 	db	100	;'d'
  1245  00F0AA  64                 	db	100	;'d'
  1246  00F0AB  20                 	db	32
  1247  00F0AC  70                 	db	112	;'p'
  1248  00F0AD  61                 	db	97	;'a'
  1249  00F0AE  72                 	db	114	;'r'
  1250  00F0AF  69                 	db	105	;'i'
  1251  00F0B0  74                 	db	116	;'t'
  1252  00F0B1  79                 	db	121	;'y'
  1253  00F0B2  20                 	db	32
  1254  00F0B3  62                 	db	98	;'b'
  1255  00F0B4  69                 	db	105	;'i'
  1256  00F0B5  74                 	db	116	;'t'
  1257  00F0B6  0D                 	db	13
  1258  00F0B7  0A                 	db	10
  1259  00F0B8  00                 	db	0
  1260  00F0B9                     STR_27:
  1261  00F0B9  53                 	db	83	;'S'
  1262  00F0BA  79                 	db	121	;'y'
  1263  00F0BB  73                 	db	115	;'s'
  1264  00F0BC  74                 	db	116	;'t'
  1265  00F0BD  65                 	db	101	;'e'
  1266  00F0BE  6D                 	db	109	;'m'
  1267  00F0BF  20                 	db	32
  1268  00F0C0  42                 	db	66	;'B'
  1269  00F0C1  61                 	db	97	;'a'
  1270  00F0C2  75                 	db	117	;'u'
  1271  00F0C3  64                 	db	100	;'d'
  1272  00F0C4  20                 	db	32
  1273  00F0C5  77                 	db	119	;'w'
  1274  00F0C6  69                 	db	105	;'i'
  1275  00F0C7  6C                 	db	108	;'l'
  1276  00F0C8  6C                 	db	108	;'l'
  1277  00F0C9  20                 	db	32
  1278  00F0CA  62                 	db	98	;'b'
  1279  00F0CB  65                 	db	101	;'e'
  1280  00F0CC  20                 	db	32
  1281  00F0CD  73                 	db	115	;'s'
  1282  00F0CE  65                 	db	101	;'e'
  1283  00F0CF  74                 	db	116	;'t'
  1284  00F0D0  20                 	db	32
  1285  00F0D1  74                 	db	116	;'t'
  1286  00F0D2  6F                 	db	111	;'o'
  1287  00F0D3  20                 	db	32
  1288  00F0D4  25                 	db	37
  1289  00F0D5  6C                 	db	108	;'l'
  1290  00F0D6  75                 	db	117	;'u'
  1291  00F0D7  20                 	db	32
  1292  00F0D8  77                 	db	119	;'w'
  1293  00F0D9  69                 	db	105	;'i'
  1294  00F0DA  74                 	db	116	;'t'
  1295  00F0DB  68                 	db	104	;'h'
  1296  00F0DC  20                 	db	32
  1297  00F0DD  6E                 	db	110	;'n'
  1298  00F0DE  6F                 	db	111	;'o'
  1299  00F0DF  20                 	db	32
  1300  00F0E0  70                 	db	112	;'p'
  1301  00F0E1  61                 	db	97	;'a'
  1302  00F0E2  72                 	db	114	;'r'
  1303  00F0E3  69                 	db	105	;'i'
  1304  00F0E4  74                 	db	116	;'t'
  1305  00F0E5  79                 	db	121	;'y'
  1306  00F0E6  20                 	db	32
  1307  00F0E7  62                 	db	98	;'b'
  1308  00F0E8  69                 	db	105	;'i'
  1309  00F0E9  74                 	db	116	;'t'
  1310  00F0EA  0D                 	db	13
  1311  00F0EB  0A                 	db	10
  1312  00F0EC  00                 	db	0
  1313  00F0ED                     STR_281:
  1314  00F0ED  46                 	db	70	;'F'
  1315  00F0EE  6F                 	db	111	;'o'
  1316  00F0EF  72                 	db	114	;'r'
  1317  00F0F0  20                 	db	32
  1318  00F0F1  44                 	db	68	;'D'
  1319  00F0F2  65                 	db	101	;'e'
  1320  00F0F3  76                 	db	118	;'v'
  1321  00F0F4  69                 	db	105	;'i'
  1322  00F0F5  63                 	db	99	;'c'
  1323  00F0F6  65                 	db	101	;'e'
  1324  00F0F7  20                 	db	32
  1325  00F0F8  68                 	db	104	;'h'
  1326  00F0F9  65                 	db	101	;'e'
  1327  00F0FA  6C                 	db	108	;'l'
  1328  00F0FB  70                 	db	112	;'p'
  1329  00F0FC  20                 	db	32
  1330  00F0FD  65                 	db	101	;'e'
  1331  00F0FE  6E                 	db	110	;'n'
  1332  00F0FF  74                 	db	116	;'t'
  1333  00F100  65                 	db	101	;'e'
  1334  00F101  72                 	db	114	;'r'
  1335  00F102  20                 	db	32
  1336  00F103  64                 	db	100	;'d'
  1337  00F104  65                 	db	101	;'e'
  1338  00F105  76                 	db	118	;'v'
  1339  00F106  69                 	db	105	;'i'
  1340  00F107  63                 	db	99	;'c'
  1341  00F108  65                 	db	101	;'e'
  1342  00F109  20                 	db	32
  1343  00F10A  66                 	db	102	;'f'
  1344  00F10B  6F                 	db	111	;'o'
  1345  00F10C  6C                 	db	108	;'l'
  1346  00F10D  6C                 	db	108	;'l'
  1347  00F10E  6F                 	db	111	;'o'
  1348  00F10F  77                 	db	119	;'w'
  1349  00F110  65                 	db	101	;'e'
  1350  00F111  64                 	db	100	;'d'
  1351  00F112  20                 	db	32
  1352  00F113  62                 	db	98	;'b'
  1353  00F114  79                 	db	121	;'y'
  1354  00F115  20                 	db	32
  1355  00F116  61                 	db	97	;'a'
  1356  00F117  20                 	db	32
  1357  00F118  27                 	db	39
  1358  00F119  3F                 	db	63	;'?'
  1359  00F11A  27                 	db	39
  1360  00F11B  20                 	db	32
  1361  00F11C  0D                 	db	13
  1362  00F11D  0A                 	db	10
  1363  00F11E  00                 	db	0
  1364  00F11F                     STR_172:
  1365  00F11F  72                 	db	114	;'r'
  1366  00F120  65                 	db	101	;'e'
  1367  00F121  64                 	db	100	;'d'
  1368  00F122  6C                 	db	108	;'l'
  1369  00F123  65                 	db	101	;'e'
  1370  00F124  64                 	db	100	;'d'
  1371  00F125  20                 	db	32
  1372  00F126  77                 	db	119	;'w'
  1373  00F127  68                 	db	104	;'h'
  1374  00F128  61                 	db	97	;'a'
  1375  00F129  74                 	db	116	;'t'
  1376  00F12A  3F                 	db	63	;'?'
  1377  00F12B  3F                 	db	63	;'?'
  1378  00F12C  3F                 	db	63	;'?'
  1379  00F12D  20                 	db	32
  1380  00F12E  44                 	db	68	;'D'
  1381  00F12F  6F                 	db	111	;'o'
  1382  00F130  20                 	db	32
  1383  00F131  79                 	db	121	;'y'
  1384  00F132  6F                 	db	111	;'o'
  1385  00F133  75                 	db	117	;'u'
  1386  00F134  20                 	db	32
  1387  00F135  6D                 	db	109	;'m'
  1388  00F136  65                 	db	101	;'e'
  1389  00F137  61                 	db	97	;'a'
  1390  00F138  6E                 	db	110	;'n'
  1391  00F139  20                 	db	32
  1392  00F13A  52                 	db	82	;'R'
  1393  00F13B  65                 	db	101	;'e'
  1394  00F13C  64                 	db	100	;'d'
  1395  00F13D  20                 	db	32
  1396  00F13E  4C                 	db	76	;'L'
  1397  00F13F  65                 	db	101	;'e'
  1398  00F140  64                 	db	100	;'d'
  1399  00F141  20                 	db	32
  1400  00F142  42                 	db	66	;'B'
  1401  00F143  72                 	db	114	;'r'
  1402  00F144  69                 	db	105	;'i'
  1403  00F145  67                 	db	103	;'g'
  1404  00F146  68                 	db	104	;'h'
  1405  00F147  74                 	db	116	;'t'
  1406  00F148  6E                 	db	110	;'n'
  1407  00F149  65                 	db	101	;'e'
  1408  00F14A  73                 	db	115	;'s'
  1409  00F14B  73                 	db	115	;'s'
  1410  00F14C  3F                 	db	63	;'?'
  1411  00F14D  3F                 	db	63	;'?'
  1412  00F14E  3F                 	db	63	;'?'
  1413  00F14F  00                 	db	0
  1414  00F150                     STR_185:
  1415  00F150  49                 	db	73	;'I'
  1416  00F151  6E                 	db	110	;'n'
  1417  00F152  76                 	db	118	;'v'
  1418  00F153  61                 	db	97	;'a'
  1419  00F154  6C                 	db	108	;'l'
  1420  00F155  69                 	db	105	;'i'
  1421  00F156  64                 	db	100	;'d'
  1422  00F157  20                 	db	32
  1423  00F158  43                 	db	67	;'C'
  1424  00F159  6F                 	db	111	;'o'
  1425  00F15A  6E                 	db	110	;'n'
  1426  00F15B  74                 	db	116	;'t'
  1427  00F15C  72                 	db	114	;'r'
  1428  00F15D  61                 	db	97	;'a'
  1429  00F15E  73                 	db	115	;'s'
  1430  00F15F  74                 	db	116	;'t'
  1431  00F160  20                 	db	32
  1432  00F161  44                 	db	68	;'D'
  1433  00F162  75                 	db	117	;'u'
  1434  00F163  74                 	db	116	;'t'
  1435  00F164  79                 	db	121	;'y'
  1436  00F165  20                 	db	32
  1437  00F166  63                 	db	99	;'c'
  1438  00F167  79                 	db	121	;'y'
  1439  00F168  63                 	db	99	;'c'
  1440  00F169  6C                 	db	108	;'l'
  1441  00F16A  65                 	db	101	;'e'
  1442  00F16B  3A                 	db	58	;':'
  1443  00F16C  20                 	db	32
  1444  00F16D  47                 	db	71	;'G'
  1445  00F16E  72                 	db	114	;'r'
  1446  00F16F  65                 	db	101	;'e'
  1447  00F170  61                 	db	97	;'a'
  1448  00F171  74                 	db	116	;'t'
  1449  00F172  65                 	db	101	;'e'
  1450  00F173  72                 	db	114	;'r'
  1451  00F174  20                 	db	32
  1452  00F175  74                 	db	116	;'t'
  1453  00F176  68                 	db	104	;'h'
  1454  00F177  61                 	db	97	;'a'
  1455  00F178  6E                 	db	110	;'n'
  1456  00F179  20                 	db	32
  1457  00F17A  31                 	db	49	;'1'
  1458  00F17B  30                 	db	48	;'0'
  1459  00F17C  30                 	db	48	;'0'
  1460  00F17D  0D                 	db	13
  1461  00F17E  0A                 	db	10
  1462  00F17F  00                 	db	0
  1463  00F180                     STR_26:
  1464  00F180  53                 	db	83	;'S'
  1465  00F181  79                 	db	121	;'y'
  1466  00F182  73                 	db	115	;'s'
  1467  00F183  74                 	db	116	;'t'
  1468  00F184  65                 	db	101	;'e'
  1469  00F185  6D                 	db	109	;'m'
  1470  00F186  20                 	db	32
  1471  00F187  42                 	db	66	;'B'
  1472  00F188  61                 	db	97	;'a'
  1473  00F189  75                 	db	117	;'u'
  1474  00F18A  64                 	db	100	;'d'
  1475  00F18B  20                 	db	32
  1476  00F18C  77                 	db	119	;'w'
  1477  00F18D  69                 	db	105	;'i'
  1478  00F18E  6C                 	db	108	;'l'
  1479  00F18F  6C                 	db	108	;'l'
  1480  00F190  20                 	db	32
  1481  00F191  62                 	db	98	;'b'
  1482  00F192  65                 	db	101	;'e'
  1483  00F193  20                 	db	32
  1484  00F194  73                 	db	115	;'s'
  1485  00F195  65                 	db	101	;'e'
  1486  00F196  74                 	db	116	;'t'
  1487  00F197  20                 	db	32
  1488  00F198  74                 	db	116	;'t'
  1489  00F199  6F                 	db	111	;'o'
  1490  00F19A  20                 	db	32
  1491  00F19B  25                 	db	37
  1492  00F19C  6C                 	db	108	;'l'
  1493  00F19D  75                 	db	117	;'u'
  1494  00F19E  20                 	db	32
  1495  00F19F  77                 	db	119	;'w'
  1496  00F1A0  69                 	db	105	;'i'
  1497  00F1A1  74                 	db	116	;'t'
  1498  00F1A2  68                 	db	104	;'h'
  1499  00F1A3  20                 	db	32
  1500  00F1A4  53                 	db	83	;'S'
  1501  00F1A5  70                 	db	112	;'p'
  1502  00F1A6  61                 	db	97	;'a'
  1503  00F1A7  63                 	db	99	;'c'
  1504  00F1A8  65                 	db	101	;'e'
  1505  00F1A9  20                 	db	32
  1506  00F1AA  62                 	db	98	;'b'
  1507  00F1AB  69                 	db	105	;'i'
  1508  00F1AC  74                 	db	116	;'t'
  1509  00F1AD  0D                 	db	13
  1510  00F1AE  0A                 	db	10
  1511  00F1AF  00                 	db	0
  1512  00F1B0                     STR_25:
  1513  00F1B0  53                 	db	83	;'S'
  1514  00F1B1  79                 	db	121	;'y'
  1515  00F1B2  73                 	db	115	;'s'
  1516  00F1B3  74                 	db	116	;'t'
  1517  00F1B4  65                 	db	101	;'e'
  1518  00F1B5  6D                 	db	109	;'m'
  1519  00F1B6  20                 	db	32
  1520  00F1B7  42                 	db	66	;'B'
  1521  00F1B8  61                 	db	97	;'a'
  1522  00F1B9  75                 	db	117	;'u'
  1523  00F1BA  64                 	db	100	;'d'
  1524  00F1BB  20                 	db	32
  1525  00F1BC  77                 	db	119	;'w'
  1526  00F1BD  69                 	db	105	;'i'
  1527  00F1BE  6C                 	db	108	;'l'
  1528  00F1BF  6C                 	db	108	;'l'
  1529  00F1C0  20                 	db	32
  1530  00F1C1  62                 	db	98	;'b'
  1531  00F1C2  65                 	db	101	;'e'
  1532  00F1C3  20                 	db	32
  1533  00F1C4  73                 	db	115	;'s'
  1534  00F1C5  65                 	db	101	;'e'
  1535  00F1C6  74                 	db	116	;'t'
  1536  00F1C7  20                 	db	32
  1537  00F1C8  74                 	db	116	;'t'
  1538  00F1C9  6F                 	db	111	;'o'
  1539  00F1CA  20                 	db	32
  1540  00F1CB  25                 	db	37
  1541  00F1CC  6C                 	db	108	;'l'
  1542  00F1CD  75                 	db	117	;'u'
  1543  00F1CE  20                 	db	32
  1544  00F1CF  77                 	db	119	;'w'
  1545  00F1D0  69                 	db	105	;'i'
  1546  00F1D1  74                 	db	116	;'t'
  1547  00F1D2  68                 	db	104	;'h'
  1548  00F1D3  20                 	db	32
  1549  00F1D4  4D                 	db	77	;'M'
  1550  00F1D5  61                 	db	97	;'a'
  1551  00F1D6  72                 	db	114	;'r'
  1552  00F1D7  6B                 	db	107	;'k'
  1553  00F1D8  20                 	db	32
  1554  00F1D9  62                 	db	98	;'b'
  1555  00F1DA  69                 	db	105	;'i'
  1556  00F1DB  74                 	db	116	;'t'
  1557  00F1DC  0D                 	db	13
  1558  00F1DD  0A                 	db	10
  1559  00F1DE  00                 	db	0
  1560  00F1DF                     STR_187:
  1561  00F1DF  49                 	db	73	;'I'
  1562  00F1E0  6E                 	db	110	;'n'
  1563  00F1E1  76                 	db	118	;'v'
  1564  00F1E2  61                 	db	97	;'a'
  1565  00F1E3  6C                 	db	108	;'l'
  1566  00F1E4  69                 	db	105	;'i'
  1567  00F1E5  64                 	db	100	;'d'
  1568  00F1E6  20                 	db	32
  1569  00F1E7  43                 	db	67	;'C'
  1570  00F1E8  6F                 	db	111	;'o'
  1571  00F1E9  6E                 	db	110	;'n'
  1572  00F1EA  74                 	db	116	;'t'
  1573  00F1EB  72                 	db	114	;'r'
  1574  00F1EC  61                 	db	97	;'a'
  1575  00F1ED  73                 	db	115	;'s'
  1576  00F1EE  74                 	db	116	;'t'
  1577  00F1EF  20                 	db	32
  1578  00F1F0  44                 	db	68	;'D'
  1579  00F1F1  75                 	db	117	;'u'
  1580  00F1F2  74                 	db	116	;'t'
  1581  00F1F3  79                 	db	121	;'y'
  1582  00F1F4  20                 	db	32
  1583  00F1F5  43                 	db	67	;'C'
  1584  00F1F6  79                 	db	121	;'y'
  1585  00F1F7  63                 	db	99	;'c'
  1586  00F1F8  6C                 	db	108	;'l'
  1587  00F1F9  65                 	db	101	;'e'
  1588  00F1FA  3A                 	db	58	;':'
  1589  00F1FB  20                 	db	32
  1590  00F1FC  4C                 	db	76	;'L'
  1591  00F1FD  65                 	db	101	;'e'
  1592  00F1FE  73                 	db	115	;'s'
  1593  00F1FF  73                 	db	115	;'s'
  1594  00F200  20                 	db	32
  1595  00F201  74                 	db	116	;'t'
  1596  00F202  68                 	db	104	;'h'
  1597  00F203  61                 	db	97	;'a'
  1598  00F204  6E                 	db	110	;'n'
  1599  00F205  20                 	db	32
  1600  00F206  30                 	db	48	;'0'
  1601  00F207  0D                 	db	13
  1602  00F208  0A                 	db	10
  1603  00F209  00                 	db	0
  1604  00F20A                     STR_176:
  1605  00F20A  77                 	db	119	;'w'
  1606  00F20B  68                 	db	104	;'h'
  1607  00F20C  65                 	db	101	;'e'
  1608  00F20D  72                 	db	114	;'r'
  1609  00F20E  65                 	db	101	;'e'
  1610  00F20F  20                 	db	32
  1611  00F210  74                 	db	116	;'t'
  1612  00F211  68                 	db	104	;'h'
  1613  00F212  65                 	db	101	;'e'
  1614  00F213  20                 	db	32
  1615  00F214  64                 	db	100	;'d'
  1616  00F215  75                 	db	117	;'u'
  1617  00F216  74                 	db	116	;'t'
  1618  00F217  79                 	db	121	;'y'
  1619  00F218  63                 	db	99	;'c'
  1620  00F219  79                 	db	121	;'y'
  1621  00F21A  63                 	db	99	;'c'
  1622  00F21B  6C                 	db	108	;'l'
  1623  00F21C  65                 	db	101	;'e'
  1624  00F21D  20                 	db	32
  1625  00F21E  69                 	db	105	;'i'
  1626  00F21F  73                 	db	115	;'s'
  1627  00F220  20                 	db	32
  1628  00F221  61                 	db	97	;'a'
  1629  00F222  20                 	db	32
  1630  00F223  6E                 	db	110	;'n'
  1631  00F224  75                 	db	117	;'u'
  1632  00F225  6D                 	db	109	;'m'
  1633  00F226  62                 	db	98	;'b'
  1634  00F227  65                 	db	101	;'e'
  1635  00F228  72                 	db	114	;'r'
  1636  00F229  20                 	db	32
  1637  00F22A  30                 	db	48	;'0'
  1638  00F22B  20                 	db	32
  1639  00F22C  2D                 	db	45
  1640  00F22D  20                 	db	32
  1641  00F22E  31                 	db	49	;'1'
  1642  00F22F  30                 	db	48	;'0'
  1643  00F230  30                 	db	48	;'0'
  1644  00F231  0D                 	db	13
  1645  00F232  0A                 	db	10
  1646  00F233  00                 	db	0
  1647  00F234                     STR_166:
  1648  00F234  49                 	db	73	;'I'
  1649  00F235  6E                 	db	110	;'n'
  1650  00F236  76                 	db	118	;'v'
  1651  00F237  61                 	db	97	;'a'
  1652  00F238  6C                 	db	108	;'l'
  1653  00F239  69                 	db	105	;'i'
  1654  00F23A  64                 	db	100	;'d'
  1655  00F23B  20                 	db	32
  1656  00F23C  44                 	db	68	;'D'
  1657  00F23D  75                 	db	117	;'u'
  1658  00F23E  74                 	db	116	;'t'
  1659  00F23F  79                 	db	121	;'y'
  1660  00F240  63                 	db	99	;'c'
  1661  00F241  79                 	db	121	;'y'
  1662  00F242  63                 	db	99	;'c'
  1663  00F243  6C                 	db	108	;'l'
  1664  00F244  65                 	db	101	;'e'
  1665  00F245  3A                 	db	58	;':'
  1666  00F246  20                 	db	32
  1667  00F247  47                 	db	71	;'G'
  1668  00F248  72                 	db	114	;'r'
  1669  00F249  65                 	db	101	;'e'
  1670  00F24A  61                 	db	97	;'a'
  1671  00F24B  74                 	db	116	;'t'
  1672  00F24C  65                 	db	101	;'e'
  1673  00F24D  72                 	db	114	;'r'
  1674  00F24E  20                 	db	32
  1675  00F24F  74                 	db	116	;'t'
  1676  00F250  68                 	db	104	;'h'
  1677  00F251  61                 	db	97	;'a'
  1678  00F252  6E                 	db	110	;'n'
  1679  00F253  20                 	db	32
  1680  00F254  31                 	db	49	;'1'
  1681  00F255  30                 	db	48	;'0'
  1682  00F256  30                 	db	48	;'0'
  1683  00F257  0D                 	db	13
  1684  00F258  0A                 	db	10
  1685  00F259  00                 	db	0
  1686  00F25A                     STR_136:
  1687  00F25A  43                 	db	67	;'C'
  1688  00F25B  68                 	db	104	;'h'
  1689  00F25C  72                 	db	114	;'r'
  1690  00F25D  69                 	db	105	;'i'
  1691  00F25E  73                 	db	115	;'s'
  1692  00F25F  74                 	db	116	;'t'
  1693  00F260  6D                 	db	109	;'m'
  1694  00F261  61                 	db	97	;'a'
  1695  00F262  73                 	db	115	;'s'
  1696  00F263  20                 	db	32
  1697  00F264  54                 	db	84	;'T'
  1698  00F265  72                 	db	114	;'r'
  1699  00F266  65                 	db	101	;'e'
  1700  00F267  65                 	db	101	;'e'
  1701  00F268  20                 	db	32
  1702  00F269  43                 	db	67	;'C'
  1703  00F26A  6F                 	db	111	;'o'
  1704  00F26B  6C                 	db	108	;'l'
  1705  00F26C  6F                 	db	111	;'o'
  1706  00F26D  72                 	db	114	;'r'
  1707  00F26E  65                 	db	101	;'e'
  1708  00F26F  64                 	db	100	;'d'
  1709  00F270  20                 	db	32
  1710  00F271  4C                 	db	76	;'L'
  1711  00F272  69                 	db	105	;'i'
  1712  00F273  67                 	db	103	;'g'
  1713  00F274  68                 	db	104	;'h'
  1714  00F275  74                 	db	116	;'t'
  1715  00F276  73                 	db	115	;'s'
  1716  00F277  20                 	db	32
  1717  00F278  54                 	db	84	;'T'
  1718  00F279  6F                 	db	111	;'o'
  1719  00F27A  67                 	db	103	;'g'
  1720  00F27B  67                 	db	103	;'g'
  1721  00F27C  6C                 	db	108	;'l'
  1722  00F27D  65                 	db	101	;'e'
  1723  00F27E  64                 	db	100	;'d'
  1724  00F27F  00                 	db	0
  1725  00F280                     STR_5:
  1726  00F280  0D                 	db	13
  1727  00F281  0A                 	db	10
  1728  00F282  42                 	db	66	;'B'
  1729  00F283  75                 	db	117	;'u'
  1730  00F284  66                 	db	102	;'f'
  1731  00F285  66                 	db	102	;'f'
  1732  00F286  65                 	db	101	;'e'
  1733  00F287  72                 	db	114	;'r'
  1734  00F288  20                 	db	32
  1735  00F289  6F                 	db	111	;'o'
  1736  00F28A  76                 	db	118	;'v'
  1737  00F28B  65                 	db	101	;'e'
  1738  00F28C  72                 	db	114	;'r'
  1739  00F28D  66                 	db	102	;'f'
  1740  00F28E  6C                 	db	108	;'l'
  1741  00F28F  6F                 	db	111	;'o'
  1742  00F290  77                 	db	119	;'w'
  1743  00F291  21                 	db	33
  1744  00F292  20                 	db	32
  1745  00F293  44                 	db	68	;'D'
  1746  00F294  65                 	db	101	;'e'
  1747  00F295  6C                 	db	108	;'l'
  1748  00F296  65                 	db	101	;'e'
  1749  00F297  74                 	db	116	;'t'
  1750  00F298  69                 	db	105	;'i'
  1751  00F299  6E                 	db	110	;'n'
  1752  00F29A  67                 	db	103	;'g'
  1753  00F29B  20                 	db	32
  1754  00F29C  42                 	db	66	;'B'
  1755  00F29D  75                 	db	117	;'u'
  1756  00F29E  66                 	db	102	;'f'
  1757  00F29F  66                 	db	102	;'f'
  1758  00F2A0  65                 	db	101	;'e'
  1759  00F2A1  72                 	db	114	;'r'
  1760  00F2A2  20                 	db	32
  1761  00F2A3  0D                 	db	13
  1762  00F2A4  0A                 	db	10
  1763  00F2A5  00                 	db	0
  1764  00F2A6                     STR_153:
  1765  00F2A6  69                 	db	105	;'i'
  1766  00F2A7  2E                 	db	46
  1767  00F2A8  65                 	db	101	;'e'
  1768  00F2A9  2E                 	db	46
  1769  00F2AA  20                 	db	32
  1770  00F2AB  43                 	db	67	;'C'
  1771  00F2AC  68                 	db	104	;'h'
  1772  00F2AD  72                 	db	114	;'r'
  1773  00F2AE  69                 	db	105	;'i'
  1774  00F2AF  73                 	db	115	;'s'
  1775  00F2B0  74                 	db	116	;'t'
  1776  00F2B1  6D                 	db	109	;'m'
  1777  00F2B2  61                 	db	97	;'a'
  1778  00F2B3  73                 	db	115	;'s'
  1779  00F2B4  20                 	db	32
  1780  00F2B5  43                 	db	67	;'C'
  1781  00F2B6  6F                 	db	111	;'o'
  1782  00F2B7  6C                 	db	108	;'l'
  1783  00F2B8  6F                 	db	111	;'o'
  1784  00F2B9  72                 	db	114	;'r'
  1785  00F2BA  65                 	db	101	;'e'
  1786  00F2BB  64                 	db	100	;'d'
  1787  00F2BC  20                 	db	32
  1788  00F2BD  6C                 	db	108	;'l'
  1789  00F2BE  69                 	db	105	;'i'
  1790  00F2BF  67                 	db	103	;'g'
  1791  00F2C0  68                 	db	104	;'h'
  1792  00F2C1  74                 	db	116	;'t'
  1793  00F2C2  73                 	db	115	;'s'
  1794  00F2C3  20                 	db	32
  1795  00F2C4  3D                 	db	61	;'='
  1796  00F2C5  20                 	db	32
  1797  00F2C6  4F                 	db	79	;'O'
  1798  00F2C7  6E                 	db	110	;'n'
  1799  00F2C8  0D                 	db	13
  1800  00F2C9  0A                 	db	10
  1801  00F2CA  00                 	db	0
  1802  00F2CB                     STR_231:
  1803  00F2CB  45                 	db	69	;'E'
  1804  00F2CC  6E                 	db	110	;'n'
  1805  00F2CD  74                 	db	116	;'t'
  1806  00F2CE  65                 	db	101	;'e'
  1807  00F2CF  72                 	db	114	;'r'
  1808  00F2D0  20                 	db	32
  1809  00F2D1  54                 	db	84	;'T'
  1810  00F2D2  69                 	db	105	;'i'
  1811  00F2D3  6D                 	db	109	;'m'
  1812  00F2D4  65                 	db	101	;'e'
  1813  00F2D5  20                 	db	32
  1814  00F2D6  4D                 	db	77	;'M'
  1815  00F2D7  4D                 	db	77	;'M'
  1816  00F2D8  2F                 	db	47
  1817  00F2D9  44                 	db	68	;'D'
  1818  00F2DA  44                 	db	68	;'D'
  1819  00F2DB  2F                 	db	47
  1820  00F2DC  59                 	db	89	;'Y'
  1821  00F2DD  59                 	db	89	;'Y'
  1822  00F2DE  20                 	db	32
  1823  00F2DF  48                 	db	72	;'H'
  1824  00F2E0  48                 	db	72	;'H'
  1825  00F2E1  3A                 	db	58	;':'
  1826  00F2E2  4D                 	db	77	;'M'
  1827  00F2E3  4D                 	db	77	;'M'
  1828  00F2E4  3A                 	db	58	;':'
  1829  00F2E5  53                 	db	83	;'S'
  1830  00F2E6  53                 	db	83	;'S'
  1831  00F2E7  20                 	db	32
  1832  00F2E8  41                 	db	65	;'A'
  1833  00F2E9  4D                 	db	77	;'M'
  1834  00F2EA  20                 	db	32
  1835  00F2EB  6F                 	db	111	;'o'
  1836  00F2EC  72                 	db	114	;'r'
  1837  00F2ED  0D                 	db	13
  1838  00F2EE  0A                 	db	10
  1839  00F2EF  00                 	db	0
  1840  00F2F0                     STR_221:
  1841  00F2F0  20                 	db	32
  1842  00F2F1  33                 	db	51	;'3'
  1843  00F2F2  20                 	db	32
  1844  00F2F3  56                 	db	86	;'V'
  1845  00F2F4  6F                 	db	111	;'o'
  1846  00F2F5  6C                 	db	108	;'l'
  1847  00F2F6  74                 	db	116	;'t'
  1848  00F2F7  20                 	db	32
  1849  00F2F8  52                 	db	82	;'R'
  1850  00F2F9  54                 	db	84	;'T'
  1851  00F2FA  43                 	db	67	;'C'
  1852  00F2FB  20                 	db	32
  1853  00F2FC  42                 	db	66	;'B'
  1854  00F2FD  61                 	db	97	;'a'
  1855  00F2FE  74                 	db	116	;'t'
  1856  00F2FF  74                 	db	116	;'t'
  1857  00F300  65                 	db	101	;'e'
  1858  00F301  72                 	db	114	;'r'
  1859  00F302  79                 	db	121	;'y'
  1860  00F303  20                 	db	32
  1861  00F304  56                 	db	86	;'V'
  1862  00F305  6F                 	db	111	;'o'
  1863  00F306  6C                 	db	108	;'l'
  1864  00F307  74                 	db	116	;'t'
  1865  00F308  61                 	db	97	;'a'
  1866  00F309  67                 	db	103	;'g'
  1867  00F30A  65                 	db	101	;'e'
  1868  00F30B  20                 	db	32
  1869  00F30C  3D                 	db	61	;'='
  1870  00F30D  20                 	db	32
  1871  00F30E  25                 	db	37
  1872  00F30F  64                 	db	100	;'d'
  1873  00F310  2E                 	db	46
  1874  00F311  25                 	db	37
  1875  00F312  64                 	db	100	;'d'
  1876  00F313  00                 	db	0
  1877  00F314                     STR_321:
  1878  00F314  25                 	db	37
  1879  00F315  30                 	db	48	;'0'
  1880  00F316  32                 	db	50	;'2'
  1881  00F317  64                 	db	100	;'d'
  1882  00F318  2F                 	db	47
  1883  00F319  25                 	db	37
  1884  00F31A  30                 	db	48	;'0'
  1885  00F31B  32                 	db	50	;'2'
  1886  00F31C  64                 	db	100	;'d'
  1887  00F31D  2F                 	db	47
  1888  00F31E  32                 	db	50	;'2'
  1889  00F31F  30                 	db	48	;'0'
  1890  00F320  25                 	db	37
  1891  00F321  30                 	db	48	;'0'
  1892  00F322  32                 	db	50	;'2'
  1893  00F323  64                 	db	100	;'d'
  1894  00F324  20                 	db	32
  1895  00F325  25                 	db	37
  1896  00F326  30                 	db	48	;'0'
  1897  00F327  32                 	db	50	;'2'
  1898  00F328  64                 	db	100	;'d'
  1899  00F329  3A                 	db	58	;':'
  1900  00F32A  25                 	db	37
  1901  00F32B  30                 	db	48	;'0'
  1902  00F32C  32                 	db	50	;'2'
  1903  00F32D  64                 	db	100	;'d'
  1904  00F32E  3A                 	db	58	;':'
  1905  00F32F  25                 	db	37
  1906  00F330  30                 	db	48	;'0'
  1907  00F331  32                 	db	50	;'2'
  1908  00F332  64                 	db	100	;'d'
  1909  00F333  20                 	db	32
  1910  00F334  41                 	db	65	;'A'
  1911  00F335  4D                 	db	77	;'M'
  1912  00F336  00                 	db	0
  1913  00F337                     STR_322:
  1914  00F337  25                 	db	37
  1915  00F338  30                 	db	48	;'0'
  1916  00F339  32                 	db	50	;'2'
  1917  00F33A  64                 	db	100	;'d'
  1918  00F33B  2F                 	db	47
  1919  00F33C  25                 	db	37
  1920  00F33D  30                 	db	48	;'0'
  1921  00F33E  32                 	db	50	;'2'
  1922  00F33F  64                 	db	100	;'d'
  1923  00F340  2F                 	db	47
  1924  00F341  32                 	db	50	;'2'
  1925  00F342  30                 	db	48	;'0'
  1926  00F343  25                 	db	37
  1927  00F344  30                 	db	48	;'0'
  1928  00F345  32                 	db	50	;'2'
  1929  00F346  64                 	db	100	;'d'
  1930  00F347  20                 	db	32
  1931  00F348  25                 	db	37
  1932  00F349  30                 	db	48	;'0'
  1933  00F34A  32                 	db	50	;'2'
  1934  00F34B  64                 	db	100	;'d'
  1935  00F34C  3A                 	db	58	;':'
  1936  00F34D  25                 	db	37
  1937  00F34E  30                 	db	48	;'0'
  1938  00F34F  32                 	db	50	;'2'
  1939  00F350  64                 	db	100	;'d'
  1940  00F351  3A                 	db	58	;':'
  1941  00F352  25                 	db	37
  1942  00F353  30                 	db	48	;'0'
  1943  00F354  32                 	db	50	;'2'
  1944  00F355  64                 	db	100	;'d'
  1945  00F356  20                 	db	32
  1946  00F357  50                 	db	80	;'P'
  1947  00F358  4D                 	db	77	;'M'
  1948  00F359  00                 	db	0
  1949  00F35A                     STR_232:
  1950  00F35A  45                 	db	69	;'E'
  1951  00F35B  6E                 	db	110	;'n'
  1952  00F35C  74                 	db	116	;'t'
  1953  00F35D  65                 	db	101	;'e'
  1954  00F35E  72                 	db	114	;'r'
  1955  00F35F  20                 	db	32
  1956  00F360  54                 	db	84	;'T'
  1957  00F361  69                 	db	105	;'i'
  1958  00F362  6D                 	db	109	;'m'
  1959  00F363  65                 	db	101	;'e'
  1960  00F364  20                 	db	32
  1961  00F365  4D                 	db	77	;'M'
  1962  00F366  4D                 	db	77	;'M'
  1963  00F367  2F                 	db	47
  1964  00F368  44                 	db	68	;'D'
  1965  00F369  44                 	db	68	;'D'
  1966  00F36A  2F                 	db	47
  1967  00F36B  59                 	db	89	;'Y'
  1968  00F36C  59                 	db	89	;'Y'
  1969  00F36D  20                 	db	32
  1970  00F36E  48                 	db	72	;'H'
  1971  00F36F  48                 	db	72	;'H'
  1972  00F370  3A                 	db	58	;':'
  1973  00F371  4D                 	db	77	;'M'
  1974  00F372  4D                 	db	77	;'M'
  1975  00F373  3A                 	db	58	;':'
  1976  00F374  53                 	db	83	;'S'
  1977  00F375  53                 	db	83	;'S'
  1978  00F376  20                 	db	32
  1979  00F377  50                 	db	80	;'P'
  1980  00F378  4D                 	db	77	;'M'
  1981  00F379  0D                 	db	13
  1982  00F37A  0A                 	db	10
  1983  00F37B  00                 	db	0
  1984  00F37C                     STR_168:
  1985  00F37C  49                 	db	73	;'I'
  1986  00F37D  6E                 	db	110	;'n'
  1987  00F37E  76                 	db	118	;'v'
  1988  00F37F  61                 	db	97	;'a'
  1989  00F380  6C                 	db	108	;'l'
  1990  00F381  69                 	db	105	;'i'
  1991  00F382  64                 	db	100	;'d'
  1992  00F383  20                 	db	32
  1993  00F384  44                 	db	68	;'D'
  1994  00F385  75                 	db	117	;'u'
  1995  00F386  74                 	db	116	;'t'
  1996  00F387  79                 	db	121	;'y'
  1997  00F388  63                 	db	99	;'c'
  1998  00F389  79                 	db	121	;'y'
  1999  00F38A  63                 	db	99	;'c'
  2000  00F38B  6C                 	db	108	;'l'
  2001  00F38C  65                 	db	101	;'e'
  2002  00F38D  3A                 	db	58	;':'
  2003  00F38E  20                 	db	32
  2004  00F38F  4C                 	db	76	;'L'
  2005  00F390  65                 	db	101	;'e'
  2006  00F391  73                 	db	115	;'s'
  2007  00F392  73                 	db	115	;'s'
  2008  00F393  20                 	db	32
  2009  00F394  74                 	db	116	;'t'
  2010  00F395  68                 	db	104	;'h'
  2011  00F396  61                 	db	97	;'a'
  2012  00F397  6E                 	db	110	;'n'
  2013  00F398  20                 	db	32
  2014  00F399  30                 	db	48	;'0'
  2015  00F39A  0D                 	db	13
  2016  00F39B  0A                 	db	10
  2017  00F39C  00                 	db	0
  2018  00F39D                     STR_238:
  2019  00F39D  46                 	db	70	;'F'
  2020  00F39E  6F                 	db	111	;'o'
  2021  00F39F  72                 	db	114	;'r'
  2022  00F3A0  6D                 	db	109	;'m'
  2023  00F3A1  61                 	db	97	;'a'
  2024  00F3A2  74                 	db	116	;'t'
  2025  00F3A3  20                 	db	32
  2026  00F3A4  69                 	db	105	;'i'
  2027  00F3A5  73                 	db	115	;'s'
  2028  00F3A6  20                 	db	32
  2029  00F3A7  4D                 	db	77	;'M'
  2030  00F3A8  4D                 	db	77	;'M'
  2031  00F3A9  2F                 	db	47
  2032  00F3AA  44                 	db	68	;'D'
  2033  00F3AB  44                 	db	68	;'D'
  2034  00F3AC  2F                 	db	47
  2035  00F3AD  59                 	db	89	;'Y'
  2036  00F3AE  59                 	db	89	;'Y'
  2037  00F3AF  20                 	db	32
  2038  00F3B0  48                 	db	72	;'H'
  2039  00F3B1  48                 	db	72	;'H'
  2040  00F3B2  3A                 	db	58	;':'
  2041  00F3B3  4D                 	db	77	;'M'
  2042  00F3B4  4D                 	db	77	;'M'
  2043  00F3B5  3A                 	db	58	;':'
  2044  00F3B6  53                 	db	83	;'S'
  2045  00F3B7  53                 	db	83	;'S'
  2046  00F3B8  20                 	db	32
  2047  00F3B9  41                 	db	65	;'A'
  2048  00F3BA  4D                 	db	77	;'M'
  2049  00F3BB  0D                 	db	13
  2050  00F3BC  0A                 	db	10
  2051  00F3BD  00                 	db	0
  2052  00F3BE                     STR_200:
  2053  00F3BE  45                 	db	69	;'E'
  2054  00F3BF  72                 	db	114	;'r'
  2055  00F3C0  72                 	db	114	;'r'
  2056  00F3C1  6F                 	db	111	;'o'
  2057  00F3C2  72                 	db	114	;'r'
  2058  00F3C3  3A                 	db	58	;':'
  2059  00F3C4  20                 	db	32
  2060  00F3C5  6F                 	db	111	;'o'
  2061  00F3C6  6E                 	db	110	;'n'
  2062  00F3C7  6C                 	db	108	;'l'
  2063  00F3C8  79                 	db	121	;'y'
  2064  00F3C9  20                 	db	32
  2065  00F3CA  75                 	db	117	;'u'
  2066  00F3CB  73                 	db	115	;'s'
  2067  00F3CC  65                 	db	101	;'e'
  2068  00F3CD  20                 	db	32
  2069  00F3CE  6F                 	db	111	;'o'
  2070  00F3CF  6E                 	db	110	;'n'
  2071  00F3D0  65                 	db	101	;'e'
  2072  00F3D1  20                 	db	32
  2073  00F3D2  65                 	db	101	;'e'
  2074  00F3D3  71                 	db	113	;'q'
  2075  00F3D4  75                 	db	117	;'u'
  2076  00F3D5  61                 	db	97	;'a'
  2077  00F3D6  6C                 	db	108	;'l'
  2078  00F3D7  20                 	db	32
  2079  00F3D8  73                 	db	115	;'s'
  2080  00F3D9  69                 	db	105	;'i'
  2081  00F3DA  67                 	db	103	;'g'
  2082  00F3DB  6E                 	db	110	;'n'
  2083  00F3DC  0D                 	db	13
  2084  00F3DD  0A                 	db	10
  2085  00F3DE  00                 	db	0
  2086  00F3DF                     STR_323:
  2087  00F3DF  25                 	db	37
  2088  00F3E0  30                 	db	48	;'0'
  2089  00F3E1  32                 	db	50	;'2'
  2090  00F3E2  64                 	db	100	;'d'
  2091  00F3E3  2F                 	db	47
  2092  00F3E4  25                 	db	37
  2093  00F3E5  30                 	db	48	;'0'
  2094  00F3E6  32                 	db	50	;'2'
  2095  00F3E7  64                 	db	100	;'d'
  2096  00F3E8  2F                 	db	47
  2097  00F3E9  32                 	db	50	;'2'
  2098  00F3EA  30                 	db	48	;'0'
  2099  00F3EB  25                 	db	37
  2100  00F3EC  30                 	db	48	;'0'
  2101  00F3ED  32                 	db	50	;'2'
  2102  00F3EE  64                 	db	100	;'d'
  2103  00F3EF  20                 	db	32
  2104  00F3F0  25                 	db	37
  2105  00F3F1  30                 	db	48	;'0'
  2106  00F3F2  32                 	db	50	;'2'
  2107  00F3F3  64                 	db	100	;'d'
  2108  00F3F4  3A                 	db	58	;':'
  2109  00F3F5  25                 	db	37
  2110  00F3F6  30                 	db	48	;'0'
  2111  00F3F7  32                 	db	50	;'2'
  2112  00F3F8  64                 	db	100	;'d'
  2113  00F3F9  3A                 	db	58	;':'
  2114  00F3FA  25                 	db	37
  2115  00F3FB  30                 	db	48	;'0'
  2116  00F3FC  32                 	db	50	;'2'
  2117  00F3FD  64                 	db	100	;'d'
  2118  00F3FE  00                 	db	0
  2119  00F3FF                     STR_189:
  2120  00F3FF  43                 	db	67	;'C'
  2121  00F400  6F                 	db	111	;'o'
  2122  00F401  6E                 	db	110	;'n'
  2123  00F402  74                 	db	116	;'t'
  2124  00F403  72                 	db	114	;'r'
  2125  00F404  61                 	db	97	;'a'
  2126  00F405  73                 	db	115	;'s'
  2127  00F406  74                 	db	116	;'t'
  2128  00F407  20                 	db	32
  2129  00F408  44                 	db	68	;'D'
  2130  00F409  75                 	db	117	;'u'
  2131  00F40A  74                 	db	116	;'t'
  2132  00F40B  79                 	db	121	;'y'
  2133  00F40C  20                 	db	32
  2134  00F40D  43                 	db	67	;'C'
  2135  00F40E  79                 	db	121	;'y'
  2136  00F40F  63                 	db	99	;'c'
  2137  00F410  6C                 	db	108	;'l'
  2138  00F411  65                 	db	101	;'e'
  2139  00F412  20                 	db	32
  2140  00F413  73                 	db	115	;'s'
  2141  00F414  65                 	db	101	;'e'
  2142  00F415  74                 	db	116	;'t'
  2143  00F416  20                 	db	32
  2144  00F417  74                 	db	116	;'t'
  2145  00F418  6F                 	db	111	;'o'
  2146  00F419  20                 	db	32
  2147  00F41A  25                 	db	37
  2148  00F41B  64                 	db	100	;'d'
  2149  00F41C  0D                 	db	13
  2150  00F41D  0A                 	db	10
  2151  00F41E  00                 	db	0
  2152  00F41F                     STR_144:
  2153  00F41F  43                 	db	67	;'C'
  2154  00F420  68                 	db	104	;'h'
  2155  00F421  72                 	db	114	;'r'
  2156  00F422  69                 	db	105	;'i'
  2157  00F423  73                 	db	115	;'s'
  2158  00F424  74                 	db	116	;'t'
  2159  00F425  6D                 	db	109	;'m'
  2160  00F426  61                 	db	97	;'a'
  2161  00F427  73                 	db	115	;'s'
  2162  00F428  20                 	db	32
  2163  00F429  54                 	db	84	;'T'
  2164  00F42A  72                 	db	114	;'r'
  2165  00F42B  65                 	db	101	;'e'
  2166  00F42C  65                 	db	101	;'e'
  2167  00F42D  20                 	db	32
  2168  00F42E  57                 	db	87	;'W'
  2169  00F42F  68                 	db	104	;'h'
  2170  00F430  69                 	db	105	;'i'
  2171  00F431  74                 	db	116	;'t'
  2172  00F432  65                 	db	101	;'e'
  2173  00F433  20                 	db	32
  2174  00F434  4C                 	db	76	;'L'
  2175  00F435  69                 	db	105	;'i'
  2176  00F436  67                 	db	103	;'g'
  2177  00F437  68                 	db	104	;'h'
  2178  00F438  74                 	db	116	;'t'
  2179  00F439  73                 	db	115	;'s'
  2180  00F43A  20                 	db	32
  2181  00F43B  4F                 	db	79	;'O'
  2182  00F43C  66                 	db	102	;'f'
  2183  00F43D  66                 	db	102	;'f'
  2184  00F43E  00                 	db	0
  2185  00F43F                     STR_140:
  2186  00F43F  43                 	db	67	;'C'
  2187  00F440  68                 	db	104	;'h'
  2188  00F441  72                 	db	114	;'r'
  2189  00F442  69                 	db	105	;'i'
  2190  00F443  73                 	db	115	;'s'
  2191  00F444  74                 	db	116	;'t'
  2192  00F445  6D                 	db	109	;'m'
  2193  00F446  61                 	db	97	;'a'
  2194  00F447  73                 	db	115	;'s'
  2195  00F448  20                 	db	32
  2196  00F449  54                 	db	84	;'T'
  2197  00F44A  72                 	db	114	;'r'
  2198  00F44B  65                 	db	101	;'e'
  2199  00F44C  65                 	db	101	;'e'
  2200  00F44D  20                 	db	32
  2201  00F44E  57                 	db	87	;'W'
  2202  00F44F  68                 	db	104	;'h'
  2203  00F450  69                 	db	105	;'i'
  2204  00F451  74                 	db	116	;'t'
  2205  00F452  65                 	db	101	;'e'
  2206  00F453  20                 	db	32
  2207  00F454  4C                 	db	76	;'L'
  2208  00F455  69                 	db	105	;'i'
  2209  00F456  67                 	db	103	;'g'
  2210  00F457  68                 	db	104	;'h'
  2211  00F458  74                 	db	116	;'t'
  2212  00F459  73                 	db	115	;'s'
  2213  00F45A  20                 	db	32
  2214  00F45B  4F                 	db	79	;'O'
  2215  00F45C  6E                 	db	110	;'n'
  2216  00F45D  00                 	db	0
  2217  00F45E                     STR_202:
  2218  00F45E  45                 	db	69	;'E'
  2219  00F45F  72                 	db	114	;'r'
  2220  00F460  72                 	db	114	;'r'
  2221  00F461  6F                 	db	111	;'o'
  2222  00F462  72                 	db	114	;'r'
  2223  00F463  3A                 	db	58	;':'
  2224  00F464  20                 	db	32
  2225  00F465  4E                 	db	78	;'N'
  2226  00F466  6F                 	db	111	;'o'
  2227  00F467  20                 	db	32
  2228  00F468  6E                 	db	110	;'n'
  2229  00F469  65                 	db	101	;'e'
  2230  00F46A  67                 	db	103	;'g'
  2231  00F46B  61                 	db	97	;'a'
  2232  00F46C  74                 	db	116	;'t'
  2233  00F46D  69                 	db	105	;'i'
  2234  00F46E  76                 	db	118	;'v'
  2235  00F46F  65                 	db	101	;'e'
  2236  00F470  20                 	db	32
  2237  00F471  63                 	db	99	;'c'
  2238  00F472  68                 	db	104	;'h'
  2239  00F473  61                 	db	97	;'a'
  2240  00F474  6E                 	db	110	;'n'
  2241  00F475  6E                 	db	110	;'n'
  2242  00F476  65                 	db	101	;'e'
  2243  00F477  6C                 	db	108	;'l'
  2244  00F478  73                 	db	115	;'s'
  2245  00F479  0D                 	db	13
  2246  00F47A  0A                 	db	10
  2247  00F47B  00                 	db	0
  2248  00F47C                     STR_240:
  2249  00F47C  52                 	db	82	;'R'
  2250  00F47D  65                 	db	101	;'e'
  2251  00F47E  61                 	db	97	;'a'
  2252  00F47F  6C                 	db	108	;'l'
  2253  00F480  20                 	db	32
  2254  00F481  54                 	db	84	;'T'
  2255  00F482  69                 	db	105	;'i'
  2256  00F483  6D                 	db	109	;'m'
  2257  00F484  65                 	db	101	;'e'
  2258  00F485  20                 	db	32
  2259  00F486  43                 	db	67	;'C'
  2260  00F487  6C                 	db	108	;'l'
  2261  00F488  6F                 	db	111	;'o'
  2262  00F489  63                 	db	99	;'c'
  2263  00F48A  6B                 	db	107	;'k'
  2264  00F48B  20                 	db	32
  2265  00F48C  48                 	db	72	;'H'
  2266  00F48D  65                 	db	101	;'e'
  2267  00F48E  6C                 	db	108	;'l'
  2268  00F48F  70                 	db	112	;'p'
  2269  00F490  20                 	db	32
  2270  00F491  4D                 	db	77	;'M'
  2271  00F492  65                 	db	101	;'e'
  2272  00F493  6E                 	db	110	;'n'
  2273  00F494  75                 	db	117	;'u'
  2274  00F495  0D                 	db	13
  2275  00F496  0A                 	db	10
  2276  00F497  0A                 	db	10
  2277  00F498  00                 	db	0
  2278  00F499                     STR_206:
  2279  00F499  43                 	db	67	;'C'
  2280  00F49A  68                 	db	104	;'h'
  2281  00F49B  61                 	db	97	;'a'
  2282  00F49C  6E                 	db	110	;'n'
  2283  00F49D  6E                 	db	110	;'n'
  2284  00F49E  65                 	db	101	;'e'
  2285  00F49F  6C                 	db	108	;'l'
  2286  00F4A0  20                 	db	32
  2287  00F4A1  25                 	db	37
  2288  00F4A2  64                 	db	100	;'d'
  2289  00F4A3  20                 	db	32
  2290  00F4A4  69                 	db	105	;'i'
  2291  00F4A5  73                 	db	115	;'s'
  2292  00F4A6  20                 	db	32
  2293  00F4A7  6E                 	db	110	;'n'
  2294  00F4A8  6F                 	db	111	;'o'
  2295  00F4A9  74                 	db	116	;'t'
  2296  00F4AA  20                 	db	32
  2297  00F4AB  63                 	db	99	;'c'
  2298  00F4AC  6F                 	db	111	;'o'
  2299  00F4AD  6E                 	db	110	;'n'
  2300  00F4AE  66                 	db	102	;'f'
  2301  00F4AF  69                 	db	105	;'i'
  2302  00F4B0  67                 	db	103	;'g'
  2303  00F4B1  75                 	db	117	;'u'
  2304  00F4B2  72                 	db	114	;'r'
  2305  00F4B3  65                 	db	101	;'e'
  2306  00F4B4  64                 	db	100	;'d'
  2307  00F4B5  00                 	db	0
  2308  00F4B6                     STR_21:
  2309  00F4B6  0D                 	db	13
  2310  00F4B7  0A                 	db	10
  2311  00F4B8  45                 	db	69	;'E'
  2312  00F4B9  6E                 	db	110	;'n'
  2313  00F4BA  74                 	db	116	;'t'
  2314  00F4BB  65                 	db	101	;'e'
  2315  00F4BC  72                 	db	114	;'r'
  2316  00F4BD  20                 	db	32
  2317  00F4BE  27                 	db	39
  2318  00F4BF  3F                 	db	63	;'?'
  2319  00F4C0  27                 	db	39
  2320  00F4C1  20                 	db	32
  2321  00F4C2  66                 	db	102	;'f'
  2322  00F4C3  6F                 	db	111	;'o'
  2323  00F4C4  72                 	db	114	;'r'
  2324  00F4C5  20                 	db	32
  2325  00F4C6  48                 	db	72	;'H'
  2326  00F4C7  65                 	db	101	;'e'
  2327  00F4C8  6C                 	db	108	;'l'
  2328  00F4C9  70                 	db	112	;'p'
  2329  00F4CA  20                 	db	32
  2330  00F4CB  4D                 	db	77	;'M'
  2331  00F4CC  65                 	db	101	;'e'
  2332  00F4CD  6E                 	db	110	;'n'
  2333  00F4CE  75                 	db	117	;'u'
  2334  00F4CF  0D                 	db	13
  2335  00F4D0  0A                 	db	10
  2336  00F4D1  3E                 	db	62	;'>'
  2337  00F4D2  00                 	db	0
  2338  00F4D3                     STR_148:
  2339  00F4D3  43                 	db	67	;'C'
  2340  00F4D4  68                 	db	104	;'h'
  2341  00F4D5  72                 	db	114	;'r'
  2342  00F4D6  69                 	db	105	;'i'
  2343  00F4D7  73                 	db	115	;'s'
  2344  00F4D8  74                 	db	116	;'t'
  2345  00F4D9  6D                 	db	109	;'m'
  2346  00F4DA  61                 	db	97	;'a'
  2347  00F4DB  73                 	db	115	;'s'
  2348  00F4DC  20                 	db	32
  2349  00F4DD  74                 	db	116	;'t'
  2350  00F4DE  72                 	db	114	;'r'
  2351  00F4DF  65                 	db	101	;'e'
  2352  00F4E0  65                 	db	101	;'e'
  2353  00F4E1  20                 	db	32
  2354  00F4E2  48                 	db	72	;'H'
  2355  00F4E3  65                 	db	101	;'e'
  2356  00F4E4  6C                 	db	108	;'l'
  2357  00F4E5  70                 	db	112	;'p'
  2358  00F4E6  20                 	db	32
  2359  00F4E7  4D                 	db	77	;'M'
  2360  00F4E8  65                 	db	101	;'e'
  2361  00F4E9  6E                 	db	110	;'n'
  2362  00F4EA  75                 	db	117	;'u'
  2363  00F4EB  0D                 	db	13
  2364  00F4EC  0A                 	db	10
  2365  00F4ED  0A                 	db	10
  2366  00F4EE  00                 	db	0
  2367  00F4EF                     STR_204:
  2368  00F4EF  45                 	db	69	;'E'
  2369  00F4F0  72                 	db	114	;'r'
  2370  00F4F1  72                 	db	114	;'r'
  2371  00F4F2  6F                 	db	111	;'o'
  2372  00F4F3  72                 	db	114	;'r'
  2373  00F4F4  3A                 	db	58	;':'
  2374  00F4F5  20                 	db	32
  2375  00F4F6  69                 	db	105	;'i'
  2376  00F4F7  6E                 	db	110	;'n'
  2377  00F4F8  20                 	db	32
  2378  00F4F9  70                 	db	112	;'p'
  2379  00F4FA  61                 	db	97	;'a'
  2380  00F4FB  72                 	db	114	;'r'
  2381  00F4FC  73                 	db	115	;'s'
  2382  00F4FD  69                 	db	105	;'i'
  2383  00F4FE  6E                 	db	110	;'n'
  2384  00F4FF  67                 	db	103	;'g'
  2385  00F500  20                 	db	32
  2386  00F501  63                 	db	99	;'c'
  2387  00F502  6F                 	db	111	;'o'
  2388  00F503  6D                 	db	109	;'m'
  2389  00F504  6D                 	db	109	;'m'
  2390  00F505  61                 	db	97	;'a'
  2391  00F506  6E                 	db	110	;'n'
  2392  00F507  64                 	db	100	;'d'
  2393  00F508  0D                 	db	13
  2394  00F509  0A                 	db	10
  2395  00F50A  00                 	db	0
  2396  00F50B                     STR_163:
  2397  00F50B  74                 	db	116	;'t'
  2398  00F50C  68                 	db	104	;'h'
  2399  00F50D  65                 	db	101	;'e'
  2400  00F50E  72                 	db	114	;'r'
  2401  00F50F  65                 	db	101	;'e'
  2402  00F510  20                 	db	32
  2403  00F511  69                 	db	105	;'i'
  2404  00F512  73                 	db	115	;'s'
  2405  00F513  20                 	db	32
  2406  00F514  6E                 	db	110	;'n'
  2407  00F515  6F                 	db	111	;'o'
  2408  00F516  20                 	db	32
  2409  00F517  71                 	db	113	;'q'
  2410  00F518  75                 	db	117	;'u'
  2411  00F519  65                 	db	101	;'e'
  2412  00F51A  73                 	db	115	;'s'
  2413  00F51B  74                 	db	116	;'t'
  2414  00F51C  69                 	db	105	;'i'
  2415  00F51D  6F                 	db	111	;'o'
  2416  00F51E  6E                 	db	110	;'n'
  2417  00F51F  20                 	db	32
  2418  00F520  6D                 	db	109	;'m'
  2419  00F521  61                 	db	97	;'a'
  2420  00F522  72                 	db	114	;'r'
  2421  00F523  6B                 	db	107	;'k'
  2422  00F524  0D                 	db	13
  2423  00F525  0A                 	db	10
  2424  00F526  00                 	db	0
  2425  00F527                     STR_267:
  2426  00F527  69                 	db	105	;'i'
  2427  00F528  2E                 	db	46
  2428  00F529  65                 	db	101	;'e'
  2429  00F52A  2E                 	db	46
  2430  00F52B  20                 	db	32
  2431  00F52C  4A                 	db	74	;'J'
  2432  00F52D  6F                 	db	111	;'o'
  2433  00F52E  65                 	db	101	;'e'
  2434  00F52F  73                 	db	115	;'s'
  2435  00F530  20                 	db	32
  2436  00F531  72                 	db	114	;'r'
  2437  00F532  6F                 	db	111	;'o'
  2438  00F533  6F                 	db	111	;'o'
  2439  00F534  6D                 	db	109	;'m'
  2440  00F535  20                 	db	32
  2441  00F536  6C                 	db	108	;'l'
  2442  00F537  69                 	db	105	;'i'
  2443  00F538  67                 	db	103	;'g'
  2444  00F539  68                 	db	104	;'h'
  2445  00F53A  74                 	db	116	;'t'
  2446  00F53B  20                 	db	32
  2447  00F53C  3D                 	db	61	;'='
  2448  00F53D  20                 	db	32
  2449  00F53E  4F                 	db	79	;'O'
  2450  00F53F  6E                 	db	110	;'n'
  2451  00F540  0D                 	db	13
  2452  00F541  0A                 	db	10
  2453  00F542  00                 	db	0
  2454  00F543                     STR_236:
  2455  00F543  0D                 	db	13
  2456  00F544  0A                 	db	10
  2457  00F545  54                 	db	84	;'T'
  2458  00F546  69                 	db	105	;'i'
  2459  00F547  6D                 	db	109	;'m'
  2460  00F548  65                 	db	101	;'e'
  2461  00F549  20                 	db	32
  2462  00F54A  4E                 	db	78	;'N'
  2463  00F54B  6F                 	db	111	;'o'
  2464  00F54C  74                 	db	116	;'t'
  2465  00F54D  20                 	db	32
  2466  00F54E  53                 	db	83	;'S'
  2467  00F54F  65                 	db	101	;'e'
  2468  00F550  74                 	db	116	;'t'
  2469  00F551  20                 	db	32
  2470  00F552  53                 	db	83	;'S'
  2471  00F553  75                 	db	117	;'u'
  2472  00F554  63                 	db	99	;'c'
  2473  00F555  63                 	db	99	;'c'
  2474  00F556  65                 	db	101	;'e'
  2475  00F557  73                 	db	115	;'s'
  2476  00F558  73                 	db	115	;'s'
  2477  00F559  66                 	db	102	;'f'
  2478  00F55A  75                 	db	117	;'u'
  2479  00F55B  6C                 	db	108	;'l'
  2480  00F55C  6C                 	db	108	;'l'
  2481  00F55D  79                 	db	121	;'y'
  2482  00F55E  00                 	db	0
  2483  00F55F                     STR_164:
  2484  00F55F  45                 	db	69	;'E'
  2485  00F560  72                 	db	114	;'r'
  2486  00F561  72                 	db	114	;'r'
  2487  00F562  6F                 	db	111	;'o'
  2488  00F563  72                 	db	114	;'r'
  2489  00F564  3A                 	db	58	;':'
  2490  00F565  20                 	db	32
  2491  00F566  4E                 	db	78	;'N'
  2492  00F567  6F                 	db	111	;'o'
  2493  00F568  20                 	db	32
  2494  00F569  6E                 	db	110	;'n'
  2495  00F56A  75                 	db	117	;'u'
  2496  00F56B  6D                 	db	109	;'m'
  2497  00F56C  62                 	db	98	;'b'
  2498  00F56D  65                 	db	101	;'e'
  2499  00F56E  72                 	db	114	;'r'
  2500  00F56F  20                 	db	32
  2501  00F570  65                 	db	101	;'e'
  2502  00F571  6E                 	db	110	;'n'
  2503  00F572  74                 	db	116	;'t'
  2504  00F573  65                 	db	101	;'e'
  2505  00F574  72                 	db	114	;'r'
  2506  00F575  65                 	db	101	;'e'
  2507  00F576  64                 	db	100	;'d'
  2508  00F577  0D                 	db	13
  2509  00F578  0A                 	db	10
  2510  00F579  00                 	db	0
  2511  00F57A                     STR_89:
  2512  00F57A  69                 	db	105	;'i'
  2513  00F57B  2E                 	db	46
  2514  00F57C  65                 	db	101	;'e'
  2515  00F57D  2E                 	db	46
  2516  00F57E  20                 	db	32
  2517  00F57F  4C                 	db	76	;'L'
  2518  00F580  69                 	db	105	;'i'
  2519  00F581  76                 	db	118	;'v'
  2520  00F582  69                 	db	105	;'i'
  2521  00F583  6E                 	db	110	;'n'
  2522  00F584  67                 	db	103	;'g'
  2523  00F585  72                 	db	114	;'r'
  2524  00F586  6F                 	db	111	;'o'
  2525  00F587  6F                 	db	111	;'o'
  2526  00F588  6D                 	db	109	;'m'
  2527  00F589  20                 	db	32
  2528  00F58A  66                 	db	102	;'f'
  2529  00F58B  61                 	db	97	;'a'
  2530  00F58C  6E                 	db	110	;'n'
  2531  00F58D  20                 	db	32
  2532  00F58E  3D                 	db	61	;'='
  2533  00F58F  20                 	db	32
  2534  00F590  4F                 	db	79	;'O'
  2535  00F591  6E                 	db	110	;'n'
  2536  00F592  0D                 	db	13
  2537  00F593  0A                 	db	10
  2538  00F594  00                 	db	0
  2539  00F595                     STR_320:
  2540  00F595  41                 	db	65	;'A'
  2541  00F596  44                 	db	68	;'D'
  2542  00F597  43                 	db	67	;'C'
  2543  00F598  20                 	db	32
  2544  00F599  43                 	db	67	;'C'
  2545  00F59A  68                 	db	104	;'h'
  2546  00F59B  61                 	db	97	;'a'
  2547  00F59C  6E                 	db	110	;'n'
  2548  00F59D  6E                 	db	110	;'n'
  2549  00F59E  65                 	db	101	;'e'
  2550  00F59F  6C                 	db	108	;'l'
  2551  00F5A0  20                 	db	32
  2552  00F5A1  4F                 	db	79	;'O'
  2553  00F5A2  75                 	db	117	;'u'
  2554  00F5A3  74                 	db	116	;'t'
  2555  00F5A4  20                 	db	32
  2556  00F5A5  6F                 	db	111	;'o'
  2557  00F5A6  66                 	db	102	;'f'
  2558  00F5A7  20                 	db	32
  2559  00F5A8  42                 	db	66	;'B'
  2560  00F5A9  6F                 	db	111	;'o'
  2561  00F5AA  75                 	db	117	;'u'
  2562  00F5AB  6E                 	db	110	;'n'
  2563  00F5AC  64                 	db	100	;'d'
  2564  00F5AD  73                 	db	115	;'s'
  2565  00F5AE  00                 	db	0
  2566  00F5AF                     STR_191:
  2567  00F5AF  43                 	db	67	;'C'
  2568  00F5B0  6F                 	db	111	;'o'
  2569  00F5B1  6E                 	db	110	;'n'
  2570  00F5B2  74                 	db	116	;'t'
  2571  00F5B3  72                 	db	114	;'r'
  2572  00F5B4  61                 	db	97	;'a'
  2573  00F5B5  73                 	db	115	;'s'
  2574  00F5B6  74                 	db	116	;'t'
  2575  00F5B7  20                 	db	32
  2576  00F5B8  50                 	db	80	;'P'
  2577  00F5B9  57                 	db	87	;'W'
  2578  00F5BA  4D                 	db	77	;'M'
  2579  00F5BB  20                 	db	32
  2580  00F5BC  48                 	db	72	;'H'
  2581  00F5BD  65                 	db	101	;'e'
  2582  00F5BE  6C                 	db	108	;'l'
  2583  00F5BF  70                 	db	112	;'p'
  2584  00F5C0  20                 	db	32
  2585  00F5C1  4D                 	db	77	;'M'
  2586  00F5C2  65                 	db	101	;'e'
  2587  00F5C3  6E                 	db	110	;'n'
  2588  00F5C4  75                 	db	117	;'u'
  2589  00F5C5  0D                 	db	13
  2590  00F5C6  0A                 	db	10
  2591  00F5C7  0A                 	db	10
  2592  00F5C8  00                 	db	0
  2593  00F5C9                     STR_234:
  2594  00F5C9  0D                 	db	13
  2595  00F5CA  0A                 	db	10
  2596  00F5CB  54                 	db	84	;'T'
  2597  00F5CC  69                 	db	105	;'i'
  2598  00F5CD  6D                 	db	109	;'m'
  2599  00F5CE  65                 	db	101	;'e'
  2600  00F5CF  20                 	db	32
  2601  00F5D0  53                 	db	83	;'S'
  2602  00F5D1  65                 	db	101	;'e'
  2603  00F5D2  74                 	db	116	;'t'
  2604  00F5D3  20                 	db	32
  2605  00F5D4  53                 	db	83	;'S'
  2606  00F5D5  75                 	db	117	;'u'
  2607  00F5D6  63                 	db	99	;'c'
  2608  00F5D7  63                 	db	99	;'c'
  2609  00F5D8  65                 	db	101	;'e'
  2610  00F5D9  73                 	db	115	;'s'
  2611  00F5DA  73                 	db	115	;'s'
  2612  00F5DB  66                 	db	102	;'f'
  2613  00F5DC  75                 	db	117	;'u'
  2614  00F5DD  6C                 	db	108	;'l'
  2615  00F5DE  6C                 	db	108	;'l'
  2616  00F5DF  79                 	db	121	;'y'
  2617  00F5E0  0D                 	db	13
  2618  00F5E1  0A                 	db	10
  2619  00F5E2  00                 	db	0
  2620  00F5E3                     STR_174:
  2621  00F5E3  52                 	db	82	;'R'
  2622  00F5E4  65                 	db	101	;'e'
  2623  00F5E5  64                 	db	100	;'d'
  2624  00F5E6  20                 	db	32
  2625  00F5E7  4C                 	db	76	;'L'
  2626  00F5E8  45                 	db	69	;'E'
  2627  00F5E9  44                 	db	68	;'D'
  2628  00F5EA  20                 	db	32
  2629  00F5EB  50                 	db	80	;'P'
  2630  00F5EC  57                 	db	87	;'W'
  2631  00F5ED  4D                 	db	77	;'M'
  2632  00F5EE  20                 	db	32
  2633  00F5EF  48                 	db	72	;'H'
  2634  00F5F0  65                 	db	101	;'e'
  2635  00F5F1  6C                 	db	108	;'l'
  2636  00F5F2  70                 	db	112	;'p'
  2637  00F5F3  20                 	db	32
  2638  00F5F4  4D                 	db	77	;'M'
  2639  00F5F5  65                 	db	101	;'e'
  2640  00F5F6  6E                 	db	110	;'n'
  2641  00F5F7  75                 	db	117	;'u'
  2642  00F5F8  0D                 	db	13
  2643  00F5F9  0A                 	db	10
  2644  00F5FA  0A                 	db	10
  2645  00F5FB  00                 	db	0
  2646  00F5FC                     STR_237:
  2647  00F5FC  0D                 	db	13
  2648  00F5FD  0A                 	db	10
  2649  00F5FE  49                 	db	73	;'I'
  2650  00F5FF  6E                 	db	110	;'n'
  2651  00F600  76                 	db	118	;'v'
  2652  00F601  61                 	db	97	;'a'
  2653  00F602  6C                 	db	108	;'l'
  2654  00F603  69                 	db	105	;'i'
  2655  00F604  64                 	db	100	;'d'
  2656  00F605  20                 	db	32
  2657  00F606  54                 	db	84	;'T'
  2658  00F607  69                 	db	105	;'i'
  2659  00F608  6D                 	db	109	;'m'
  2660  00F609  65                 	db	101	;'e'
  2661  00F60A  20                 	db	32
  2662  00F60B  45                 	db	69	;'E'
  2663  00F60C  6E                 	db	110	;'n'
  2664  00F60D  74                 	db	116	;'t'
  2665  00F60E  65                 	db	101	;'e'
  2666  00F60F  72                 	db	114	;'r'
  2667  00F610  65                 	db	101	;'e'
  2668  00F611  64                 	db	100	;'d'
  2669  00F612  0D                 	db	13
  2670  00F613  0A                 	db	10
  2671  00F614  00                 	db	0
  2672  00F615                     STR_74:
  2673  00F615  4C                 	db	76	;'L'
  2674  00F616  69                 	db	105	;'i'
  2675  00F617  76                 	db	118	;'v'
  2676  00F618  69                 	db	105	;'i'
  2677  00F619  6E                 	db	110	;'n'
  2678  00F61A  67                 	db	103	;'g'
  2679  00F61B  72                 	db	114	;'r'
  2680  00F61C  6F                 	db	111	;'o'
  2681  00F61D  6F                 	db	111	;'o'
  2682  00F61E  6D                 	db	109	;'m'
  2683  00F61F  20                 	db	32
  2684  00F620  4C                 	db	76	;'L'
  2685  00F621  69                 	db	105	;'i'
  2686  00F622  67                 	db	103	;'g'
  2687  00F623  68                 	db	104	;'h'
  2688  00F624  74                 	db	116	;'t'
  2689  00F625  20                 	db	32
  2690  00F626  54                 	db	84	;'T'
  2691  00F627  6F                 	db	111	;'o'
  2692  00F628  67                 	db	103	;'g'
  2693  00F629  67                 	db	103	;'g'
  2694  00F62A  6C                 	db	108	;'l'
  2695  00F62B  65                 	db	101	;'e'
  2696  00F62C  64                 	db	100	;'d'
  2697  00F62D  00                 	db	0
  2698  00F62E                     STR_84:
  2699  00F62E  4C                 	db	76	;'L'
  2700  00F62F  69                 	db	105	;'i'
  2701  00F630  76                 	db	118	;'v'
  2702  00F631  69                 	db	105	;'i'
  2703  00F632  6E                 	db	110	;'n'
  2704  00F633  67                 	db	103	;'g'
  2705  00F634  72                 	db	114	;'r'
  2706  00F635  6F                 	db	111	;'o'
  2707  00F636  6F                 	db	111	;'o'
  2708  00F637  6D                 	db	109	;'m'
  2709  00F638  20                 	db	32
  2710  00F639  48                 	db	72	;'H'
  2711  00F63A  65                 	db	101	;'e'
  2712  00F63B  6C                 	db	108	;'l'
  2713  00F63C  70                 	db	112	;'p'
  2714  00F63D  20                 	db	32
  2715  00F63E  4D                 	db	77	;'M'
  2716  00F63F  65                 	db	101	;'e'
  2717  00F640  6E                 	db	110	;'n'
  2718  00F641  75                 	db	117	;'u'
  2719  00F642  0D                 	db	13
  2720  00F643  0A                 	db	10
  2721  00F644  0A                 	db	10
  2722  00F645  00                 	db	0
  2723  00F646                     STR_228:
  2724  00F646  45                 	db	69	;'E'
  2725  00F647  52                 	db	82	;'R'
  2726  00F648  52                 	db	82	;'R'
  2727  00F649  4F                 	db	79	;'O'
  2728  00F64A  52                 	db	82	;'R'
  2729  00F64B  3A                 	db	58	;':'
  2730  00F64C  20                 	db	32
  2731  00F64D  43                 	db	67	;'C'
  2732  00F64E  61                 	db	97	;'a'
  2733  00F64F  6E                 	db	110	;'n'
  2734  00F650  27                 	db	39
  2735  00F651  74                 	db	116	;'t'
  2736  00F652  20                 	db	32
  2737  00F653  52                 	db	82	;'R'
  2738  00F654  65                 	db	101	;'e'
  2739  00F655  61                 	db	97	;'a'
  2740  00F656  64                 	db	100	;'d'
  2741  00F657  20                 	db	32
  2742  00F658  52                 	db	82	;'R'
  2743  00F659  54                 	db	84	;'T'
  2744  00F65A  43                 	db	67	;'C'
  2745  00F65B  0D                 	db	13
  2746  00F65C  0A                 	db	10
  2747  00F65D  00                 	db	0
  2748  00F65E                     STR_123:
  2749  00F65E  69                 	db	105	;'i'
  2750  00F65F  2E                 	db	46
  2751  00F660  65                 	db	101	;'e'
  2752  00F661  2E                 	db	46
  2753  00F662  20                 	db	32
  2754  00F663  42                 	db	66	;'B'
  2755  00F664  65                 	db	101	;'e'
  2756  00F665  64                 	db	100	;'d'
  2757  00F666  72                 	db	114	;'r'
  2758  00F667  6F                 	db	111	;'o'
  2759  00F668  6F                 	db	111	;'o'
  2760  00F669  6D                 	db	109	;'m'
  2761  00F66A  20                 	db	32
  2762  00F66B  66                 	db	102	;'f'
  2763  00F66C  61                 	db	97	;'a'
  2764  00F66D  6E                 	db	110	;'n'
  2765  00F66E  20                 	db	32
  2766  00F66F  3D                 	db	61	;'='
  2767  00F670  20                 	db	32
  2768  00F671  4F                 	db	79	;'O'
  2769  00F672  6E                 	db	110	;'n'
  2770  00F673  0D                 	db	13
  2771  00F674  0A                 	db	10
  2772  00F675  00                 	db	0
  2773  00F676                     STR_263:
  2774  00F676  4A                 	db	74	;'J'
  2775  00F677  6F                 	db	111	;'o'
  2776  00F678  65                 	db	101	;'e'
  2777  00F679  73                 	db	115	;'s'
  2778  00F67A  20                 	db	32
  2779  00F67B  52                 	db	82	;'R'
  2780  00F67C  6F                 	db	111	;'o'
  2781  00F67D  6F                 	db	111	;'o'
  2782  00F67E  6D                 	db	109	;'m'
  2783  00F67F  20                 	db	32
  2784  00F680  48                 	db	72	;'H'
  2785  00F681  65                 	db	101	;'e'
  2786  00F682  6C                 	db	108	;'l'
  2787  00F683  70                 	db	112	;'p'
  2788  00F684  20                 	db	32
  2789  00F685  4D                 	db	77	;'M'
  2790  00F686  65                 	db	101	;'e'
  2791  00F687  6E                 	db	110	;'n'
  2792  00F688  75                 	db	117	;'u'
  2793  00F689  0D                 	db	13
  2794  00F68A  0A                 	db	10
  2795  00F68B  0A                 	db	10
  2796  00F68C  00                 	db	0
  2797  00F68D                     STR_227:
  2798  00F68D  25                 	db	37
  2799  00F68E  30                 	db	48	;'0'
  2800  00F68F  32                 	db	50	;'2'
  2801  00F690  64                 	db	100	;'d'
  2802  00F691  2F                 	db	47
  2803  00F692  25                 	db	37
  2804  00F693  30                 	db	48	;'0'
  2805  00F694  32                 	db	50	;'2'
  2806  00F695  64                 	db	100	;'d'
  2807  00F696  20                 	db	32
  2808  00F697  25                 	db	37
  2809  00F698  30                 	db	48	;'0'
  2810  00F699  32                 	db	50	;'2'
  2811  00F69A  64                 	db	100	;'d'
  2812  00F69B  3A                 	db	58	;':'
  2813  00F69C  25                 	db	37
  2814  00F69D  30                 	db	48	;'0'
  2815  00F69E  32                 	db	50	;'2'
  2816  00F69F  64                 	db	100	;'d'
  2817  00F6A0  20                 	db	32
  2818  00F6A1  41                 	db	65	;'A'
  2819  00F6A2  4D                 	db	77	;'M'
  2820  00F6A3  00                 	db	0
  2821  00F6A4                     STR_226:
  2822  00F6A4  25                 	db	37
  2823  00F6A5  30                 	db	48	;'0'
  2824  00F6A6  32                 	db	50	;'2'
  2825  00F6A7  64                 	db	100	;'d'
  2826  00F6A8  2F                 	db	47
  2827  00F6A9  25                 	db	37
  2828  00F6AA  30                 	db	48	;'0'
  2829  00F6AB  32                 	db	50	;'2'
  2830  00F6AC  64                 	db	100	;'d'
  2831  00F6AD  20                 	db	32
  2832  00F6AE  25                 	db	37
  2833  00F6AF  30                 	db	48	;'0'
  2834  00F6B0  32                 	db	50	;'2'
  2835  00F6B1  64                 	db	100	;'d'
  2836  00F6B2  3A                 	db	58	;':'
  2837  00F6B3  25                 	db	37
  2838  00F6B4  30                 	db	48	;'0'
  2839  00F6B5  32                 	db	50	;'2'
  2840  00F6B6  64                 	db	100	;'d'
  2841  00F6B7  20                 	db	32
  2842  00F6B8  50                 	db	80	;'P'
  2843  00F6B9  4D                 	db	77	;'M'
  2844  00F6BA  00                 	db	0
  2845  00F6BB                     STR_282:
  2846  00F6BB  69                 	db	105	;'i'
  2847  00F6BC  2E                 	db	46
  2848  00F6BD  65                 	db	101	;'e'
  2849  00F6BE  2E                 	db	46
  2850  00F6BF  20                 	db	32
  2851  00F6C0  20                 	db	32
  2852  00F6C1  4C                 	db	76	;'L'
  2853  00F6C2  69                 	db	105	;'i'
  2854  00F6C3  76                 	db	118	;'v'
  2855  00F6C4  69                 	db	105	;'i'
  2856  00F6C5  6E                 	db	110	;'n'
  2857  00F6C6  67                 	db	103	;'g'
  2858  00F6C7  72                 	db	114	;'r'
  2859  00F6C8  6F                 	db	111	;'o'
  2860  00F6C9  6F                 	db	111	;'o'
  2861  00F6CA  6D                 	db	109	;'m'
  2862  00F6CB  3F                 	db	63	;'?'
  2863  00F6CC  0D                 	db	13
  2864  00F6CD  0A                 	db	10
  2865  00F6CE  0D                 	db	13
  2866  00F6CF  0A                 	db	10
  2867  00F6D0  00                 	db	0
  2868  00F6D1                     STR_170:
  2869  00F6D1  44                 	db	68	;'D'
  2870  00F6D2  75                 	db	117	;'u'
  2871  00F6D3  74                 	db	116	;'t'
  2872  00F6D4  79                 	db	121	;'y'
  2873  00F6D5  63                 	db	99	;'c'
  2874  00F6D6  79                 	db	121	;'y'
  2875  00F6D7  63                 	db	99	;'c'
  2876  00F6D8  6C                 	db	108	;'l'
  2877  00F6D9  65                 	db	101	;'e'
  2878  00F6DA  20                 	db	32
  2879  00F6DB  73                 	db	115	;'s'
  2880  00F6DC  65                 	db	101	;'e'
  2881  00F6DD  74                 	db	116	;'t'
  2882  00F6DE  20                 	db	32
  2883  00F6DF  74                 	db	116	;'t'
  2884  00F6E0  6F                 	db	111	;'o'
  2885  00F6E1  20                 	db	32
  2886  00F6E2  25                 	db	37
  2887  00F6E3  64                 	db	100	;'d'
  2888  00F6E4  0D                 	db	13
  2889  00F6E5  0A                 	db	10
  2890  00F6E6  00                 	db	0
  2891  00F6E7                     STR_101:
  2892  00F6E7  42                 	db	66	;'B'
  2893  00F6E8  65                 	db	101	;'e'
  2894  00F6E9  64                 	db	100	;'d'
  2895  00F6EA  72                 	db	114	;'r'
  2896  00F6EB  6F                 	db	111	;'o'
  2897  00F6EC  6F                 	db	111	;'o'
  2898  00F6ED  6D                 	db	109	;'m'
  2899  00F6EE  20                 	db	32
  2900  00F6EF  4C                 	db	76	;'L'
  2901  00F6F0  69                 	db	105	;'i'
  2902  00F6F1  67                 	db	103	;'g'
  2903  00F6F2  68                 	db	104	;'h'
  2904  00F6F3  74                 	db	116	;'t'
  2905  00F6F4  20                 	db	32
  2906  00F6F5  54                 	db	84	;'T'
  2907  00F6F6  6F                 	db	111	;'o'
  2908  00F6F7  67                 	db	103	;'g'
  2909  00F6F8  67                 	db	103	;'g'
  2910  00F6F9  6C                 	db	108	;'l'
  2911  00F6FA  65                 	db	101	;'e'
  2912  00F6FB  64                 	db	100	;'d'
  2913  00F6FC  00                 	db	0
  2914  00F6FD                     STR_29:
  2915  00F6FD  53                 	db	83	;'S'
  2916  00F6FE  79                 	db	121	;'y'
  2917  00F6FF  73                 	db	115	;'s'
  2918  00F700  74                 	db	116	;'t'
  2919  00F701  65                 	db	101	;'e'
  2920  00F702  6D                 	db	109	;'m'
  2921  00F703  20                 	db	32
  2922  00F704  50                 	db	80	;'P'
  2923  00F705  72                 	db	114	;'r'
  2924  00F706  6F                 	db	111	;'o'
  2925  00F707  67                 	db	103	;'g'
  2926  00F708  72                 	db	114	;'r'
  2927  00F709  61                 	db	97	;'a'
  2928  00F70A  6D                 	db	109	;'m'
  2929  00F70B  20                 	db	32
  2930  00F70C  46                 	db	70	;'F'
  2931  00F70D  61                 	db	97	;'a'
  2932  00F70E  69                 	db	105	;'i'
  2933  00F70F  6C                 	db	108	;'l'
  2934  00F710  0D                 	db	13
  2935  00F711  0A                 	db	10
  2936  00F712  00                 	db	0
  2937  00F713                     STR_117:
  2938  00F713  42                 	db	66	;'B'
  2939  00F714  65                 	db	101	;'e'
  2940  00F715  64                 	db	100	;'d'
  2941  00F716  72                 	db	114	;'r'
  2942  00F717  6F                 	db	111	;'o'
  2943  00F718  6F                 	db	111	;'o'
  2944  00F719  6D                 	db	109	;'m'
  2945  00F71A  20                 	db	32
  2946  00F71B  48                 	db	72	;'H'
  2947  00F71C  65                 	db	101	;'e'
  2948  00F71D  6C                 	db	108	;'l'
  2949  00F71E  70                 	db	112	;'p'
  2950  00F71F  20                 	db	32
  2951  00F720  4D                 	db	77	;'M'
  2952  00F721  65                 	db	101	;'e'
  2953  00F722  6E                 	db	110	;'n'
  2954  00F723  75                 	db	117	;'u'
  2955  00F724  0D                 	db	13
  2956  00F725  0A                 	db	10
  2957  00F726  0A                 	db	10
  2958  00F727  00                 	db	0
  2959  00F728                     STR_247:
  2960  00F728  69                 	db	105	;'i'
  2961  00F729  2E                 	db	46
  2962  00F72A  65                 	db	101	;'e'
  2963  00F72B  2E                 	db	46
  2964  00F72C  20                 	db	32
  2965  00F72D  52                 	db	82	;'R'
  2966  00F72E  54                 	db	84	;'T'
  2967  00F72F  43                 	db	67	;'C'
  2968  00F730  20                 	db	32
  2969  00F731  53                 	db	83	;'S'
  2970  00F732  65                 	db	101	;'e'
  2971  00F733  74                 	db	116	;'t'
  2972  00F734  20                 	db	32
  2973  00F735  54                 	db	84	;'T'
  2974  00F736  69                 	db	105	;'i'
  2975  00F737  6D                 	db	109	;'m'
  2976  00F738  65                 	db	101	;'e'
  2977  00F739  3F                 	db	63	;'?'
  2978  00F73A  0D                 	db	13
  2979  00F73B  0A                 	db	10
  2980  00F73C  00                 	db	0
  2981  00F73D                     STR_311:
  2982  00F73D  42                 	db	66	;'B'
  2983  00F73E  61                 	db	97	;'a'
  2984  00F73F  75                 	db	117	;'u'
  2985  00F740  64                 	db	100	;'d'
  2986  00F741  20                 	db	32
  2987  00F742  4F                 	db	79	;'O'
  2988  00F743  75                 	db	117	;'u'
  2989  00F744  74                 	db	116	;'t'
  2990  00F745  20                 	db	32
  2991  00F746  6F                 	db	111	;'o'
  2992  00F747  66                 	db	102	;'f'
  2993  00F748  20                 	db	32
  2994  00F749  72                 	db	114	;'r'
  2995  00F74A  61                 	db	97	;'a'
  2996  00F74B  6E                 	db	110	;'n'
  2997  00F74C  67                 	db	103	;'g'
  2998  00F74D  65                 	db	101	;'e'
  2999  00F74E  0D                 	db	13
  3000  00F74F  0A                 	db	10
  3001  00F750  00                 	db	0
  3002  00F751                     STR_208:
  3003  00F751  41                 	db	65	;'A'
  3004  00F752  44                 	db	68	;'D'
  3005  00F753  43                 	db	67	;'C'
  3006  00F754  20                 	db	32
  3007  00F755  63                 	db	99	;'c'
  3008  00F756  68                 	db	104	;'h'
  3009  00F757  61                 	db	97	;'a'
  3010  00F758  6E                 	db	110	;'n'
  3011  00F759  6E                 	db	110	;'n'
  3012  00F75A  65                 	db	101	;'e'
  3013  00F75B  6C                 	db	108	;'l'
  3014  00F75C  20                 	db	32
  3015  00F75D  25                 	db	37
  3016  00F75E  64                 	db	100	;'d'
  3017  00F75F  20                 	db	32
  3018  00F760  3D                 	db	61	;'='
  3019  00F761  20                 	db	32
  3020  00F762  25                 	db	37
  3021  00F763  64                 	db	100	;'d'
  3022  00F764  00                 	db	0
  3023  00F765                     STR_259:
  3024  00F765  4A                 	db	74	;'J'
  3025  00F766  6F                 	db	111	;'o'
  3026  00F767  65                 	db	101	;'e'
  3027  00F768  73                 	db	115	;'s'
  3028  00F769  20                 	db	32
  3029  00F76A  72                 	db	114	;'r'
  3030  00F76B  6F                 	db	111	;'o'
  3031  00F76C  6F                 	db	111	;'o'
  3032  00F76D  6D                 	db	109	;'m'
  3033  00F76E  20                 	db	32
  3034  00F76F  6C                 	db	108	;'l'
  3035  00F770  69                 	db	105	;'i'
  3036  00F771  67                 	db	103	;'g'
  3037  00F772  68                 	db	104	;'h'
  3038  00F773  74                 	db	116	;'t'
  3039  00F774  20                 	db	32
  3040  00F775  4F                 	db	79	;'O'
  3041  00F776  66                 	db	102	;'f'
  3042  00F777  66                 	db	102	;'f'
  3043  00F778  00                 	db	0
  3044  00F779                     STR_73:
  3045  00F779  6C                 	db	108	;'l'
  3046  00F77A  69                 	db	105	;'i'
  3047  00F77B  76                 	db	118	;'v'
  3048  00F77C  69                 	db	105	;'i'
  3049  00F77D  6E                 	db	110	;'n'
  3050  00F77E  67                 	db	103	;'g'
  3051  00F77F  72                 	db	114	;'r'
  3052  00F780  6F                 	db	111	;'o'
  3053  00F781  6F                 	db	111	;'o'
  3054  00F782  6D                 	db	109	;'m'
  3055  00F783  6C                 	db	108	;'l'
  3056  00F784  69                 	db	105	;'i'
  3057  00F785  67                 	db	103	;'g'
  3058  00F786  68                 	db	104	;'h'
  3059  00F787  74                 	db	116	;'t'
  3060  00F788  3D                 	db	61	;'='
  3061  00F789  6F                 	db	111	;'o'
  3062  00F78A  66                 	db	102	;'f'
  3063  00F78B  66                 	db	102	;'f'
  3064  00F78C  00                 	db	0
  3065  00F78D                     STR_256:
  3066  00F78D  4A                 	db	74	;'J'
  3067  00F78E  6F                 	db	111	;'o'
  3068  00F78F  65                 	db	101	;'e'
  3069  00F790  27                 	db	39
  3070  00F791  73                 	db	115	;'s'
  3071  00F792  20                 	db	32
  3072  00F793  72                 	db	114	;'r'
  3073  00F794  6F                 	db	111	;'o'
  3074  00F795  6F                 	db	111	;'o'
  3075  00F796  6D                 	db	109	;'m'
  3076  00F797  20                 	db	32
  3077  00F798  6C                 	db	108	;'l'
  3078  00F799  69                 	db	105	;'i'
  3079  00F79A  67                 	db	103	;'g'
  3080  00F79B  68                 	db	104	;'h'
  3081  00F79C  74                 	db	116	;'t'
  3082  00F79D  20                 	db	32
  3083  00F79E  4F                 	db	79	;'O'
  3084  00F79F  6E                 	db	110	;'n'
  3085  00F7A0  00                 	db	0
  3086  00F7A1                     STR_82:
  3087  00F7A1  4C                 	db	76	;'L'
  3088  00F7A2  69                 	db	105	;'i'
  3089  00F7A3  76                 	db	118	;'v'
  3090  00F7A4  69                 	db	105	;'i'
  3091  00F7A5  6E                 	db	110	;'n'
  3092  00F7A6  67                 	db	103	;'g'
  3093  00F7A7  72                 	db	114	;'r'
  3094  00F7A8  6F                 	db	111	;'o'
  3095  00F7A9  6F                 	db	111	;'o'
  3096  00F7AA  6D                 	db	109	;'m'
  3097  00F7AB  20                 	db	32
  3098  00F7AC  54                 	db	84	;'T'
  3099  00F7AD  61                 	db	97	;'a'
  3100  00F7AE  73                 	db	115	;'s'
  3101  00F7AF  6B                 	db	107	;'k'
  3102  00F7B0  3F                 	db	63	;'?'
  3103  00F7B1  3F                 	db	63	;'?'
  3104  00F7B2  3F                 	db	63	;'?'
  3105  00F7B3  00                 	db	0
  3106  00F7B4                     STR_261:
  3107  00F7B4  4A                 	db	74	;'J'
  3108  00F7B5  6F                 	db	111	;'o'
  3109  00F7B6  65                 	db	101	;'e'
  3110  00F7B7  27                 	db	39
  3111  00F7B8  73                 	db	115	;'s'
  3112  00F7B9  20                 	db	32
  3113  00F7BA  72                 	db	114	;'r'
  3114  00F7BB  6F                 	db	111	;'o'
  3115  00F7BC  6F                 	db	111	;'o'
  3116  00F7BD  6D                 	db	109	;'m'
  3117  00F7BE  20                 	db	32
  3118  00F7BF  77                 	db	119	;'w'
  3119  00F7C0  68                 	db	104	;'h'
  3120  00F7C1  61                 	db	97	;'a'
  3121  00F7C2  74                 	db	116	;'t'
  3122  00F7C3  3F                 	db	63	;'?'
  3123  00F7C4  3F                 	db	63	;'?'
  3124  00F7C5  3F                 	db	63	;'?'
  3125  00F7C6  00                 	db	0
  3126  00F7C7                     STR_80:
  3127  00F7C7  4C                 	db	76	;'L'
  3128  00F7C8  69                 	db	105	;'i'
  3129  00F7C9  76                 	db	118	;'v'
  3130  00F7CA  69                 	db	105	;'i'
  3131  00F7CB  6E                 	db	110	;'n'
  3132  00F7CC  67                 	db	103	;'g'
  3133  00F7CD  72                 	db	114	;'r'
  3134  00F7CE  6F                 	db	111	;'o'
  3135  00F7CF  6F                 	db	111	;'o'
  3136  00F7D0  6D                 	db	109	;'m'
  3137  00F7D1  20                 	db	32
  3138  00F7D2  46                 	db	70	;'F'
  3139  00F7D3  61                 	db	97	;'a'
  3140  00F7D4  6E                 	db	110	;'n'
  3141  00F7D5  20                 	db	32
  3142  00F7D6  4F                 	db	79	;'O'
  3143  00F7D7  66                 	db	102	;'f'
  3144  00F7D8  66                 	db	102	;'f'
  3145  00F7D9  00                 	db	0
  3146  00F7DA                     STR_113:
  3147  00F7DA  42                 	db	66	;'B'
  3148  00F7DB  65                 	db	101	;'e'
  3149  00F7DC  64                 	db	100	;'d'
  3150  00F7DD  72                 	db	114	;'r'
  3151  00F7DE  6F                 	db	111	;'o'
  3152  00F7DF  6F                 	db	111	;'o'
  3153  00F7E0  6D                 	db	109	;'m'
  3154  00F7E1  20                 	db	32
  3155  00F7E2  53                 	db	83	;'S'
  3156  00F7E3  68                 	db	104	;'h'
  3157  00F7E4  61                 	db	97	;'a'
  3158  00F7E5  6B                 	db	107	;'k'
  3159  00F7E6  65                 	db	101	;'e'
  3160  00F7E7  72                 	db	114	;'r'
  3161  00F7E8  20                 	db	32
  3162  00F7E9  4F                 	db	79	;'O'
  3163  00F7EA  66                 	db	102	;'f'
  3164  00F7EB  66                 	db	102	;'f'
  3165  00F7EC  00                 	db	0
  3166  00F7ED                     STR_72:
  3167  00F7ED  6C                 	db	108	;'l'
  3168  00F7EE  69                 	db	105	;'i'
  3169  00F7EF  76                 	db	118	;'v'
  3170  00F7F0  69                 	db	105	;'i'
  3171  00F7F1  6E                 	db	110	;'n'
  3172  00F7F2  67                 	db	103	;'g'
  3173  00F7F3  72                 	db	114	;'r'
  3174  00F7F4  6F                 	db	111	;'o'
  3175  00F7F5  6F                 	db	111	;'o'
  3176  00F7F6  6D                 	db	109	;'m'
  3177  00F7F7  6C                 	db	108	;'l'
  3178  00F7F8  69                 	db	105	;'i'
  3179  00F7F9  67                 	db	103	;'g'
  3180  00F7FA  68                 	db	104	;'h'
  3181  00F7FB  74                 	db	116	;'t'
  3182  00F7FC  3D                 	db	61	;'='
  3183  00F7FD  6F                 	db	111	;'o'
  3184  00F7FE  6E                 	db	110	;'n'
  3185  00F7FF  00                 	db	0
  3186  00F800                     STR_30:
  3187  00F800  53                 	db	83	;'S'
  3188  00F801  79                 	db	121	;'y'
  3189  00F802  73                 	db	115	;'s'
  3190  00F803  74                 	db	116	;'t'
  3191  00F804  65                 	db	101	;'e'
  3192  00F805  6D                 	db	109	;'m'
  3193  00F806  20                 	db	32
  3194  00F807  42                 	db	66	;'B'
  3195  00F808  61                 	db	97	;'a'
  3196  00F809  75                 	db	117	;'u'
  3197  00F80A  64                 	db	100	;'d'
  3198  00F80B  20                 	db	32
  3199  00F80C  69                 	db	105	;'i'
  3200  00F80D  73                 	db	115	;'s'
  3201  00F80E  20                 	db	32
  3202  00F80F  25                 	db	37
  3203  00F810  6C                 	db	108	;'l'
  3204  00F811  75                 	db	117	;'u'
  3205  00F812  00                 	db	0
  3206  00F813                     STR_6:
  3207  00F813  46                 	db	70	;'F'
  3208  00F814  69                 	db	105	;'i'
  3209  00F815  72                 	db	114	;'r'
  3210  00F816  6D                 	db	109	;'m'
  3211  00F817  77                 	db	119	;'w'
  3212  00F818  61                 	db	97	;'a'
  3213  00F819  72                 	db	114	;'r'
  3214  00F81A  65                 	db	101	;'e'
  3215  00F81B  20                 	db	32
  3216  00F81C  56                 	db	86	;'V'
  3217  00F81D  65                 	db	101	;'e'
  3218  00F81E  72                 	db	114	;'r'
  3219  00F81F  73                 	db	115	;'s'
  3220  00F820  69                 	db	105	;'i'
  3221  00F821  6F                 	db	111	;'o'
  3222  00F822  6E                 	db	110	;'n'
  3223  00F823  3A                 	db	58	;':'
  3224  00F824  20                 	db	32
  3225  00F825  00                 	db	0
  3226  00F826                     STR_151:
  3227  00F826  63                 	db	99	;'c'
  3228  00F827  6F                 	db	111	;'o'
  3229  00F828  6C                 	db	108	;'l'
  3230  00F829  6F                 	db	111	;'o'
  3231  00F82A  72                 	db	114	;'r'
  3232  00F82B  65                 	db	101	;'e'
  3233  00F82C  64                 	db	100	;'d'
  3234  00F82D  20                 	db	32
  3235  00F82E  6C                 	db	108	;'l'
  3236  00F82F  69                 	db	105	;'i'
  3237  00F830  67                 	db	103	;'g'
  3238  00F831  68                 	db	104	;'h'
  3239  00F832  74                 	db	116	;'t'
  3240  00F833  73                 	db	115	;'s'
  3241  00F834  0D                 	db	13
  3242  00F835  0A                 	db	10
  3243  00F836  0A                 	db	10
  3244  00F837  00                 	db	0
  3245  00F838                     STR_315:
  3246  00F838  49                 	db	73	;'I'
  3247  00F839  6E                 	db	110	;'n'
  3248  00F83A  76                 	db	118	;'v'
  3249  00F83B  61                 	db	97	;'a'
  3250  00F83C  6C                 	db	108	;'l'
  3251  00F83D  69                 	db	105	;'i'
  3252  00F83E  64                 	db	100	;'d'
  3253  00F83F  20                 	db	32
  3254  00F840  43                 	db	67	;'C'
  3255  00F841  6F                 	db	111	;'o'
  3256  00F842  6D                 	db	109	;'m'
  3257  00F843  6D                 	db	109	;'m'
  3258  00F844  61                 	db	97	;'a'
  3259  00F845  6E                 	db	110	;'n'
  3260  00F846  64                 	db	100	;'d'
  3261  00F847  0D                 	db	13
  3262  00F848  0A                 	db	10
  3263  00F849  00                 	db	0
  3264  00F84A                     STR_146:
  3265  00F84A  43                 	db	67	;'C'
  3266  00F84B  68                 	db	104	;'h'
  3267  00F84C  72                 	db	114	;'r'
  3268  00F84D  69                 	db	105	;'i'
  3269  00F84E  73                 	db	115	;'s'
  3270  00F84F  74                 	db	116	;'t'
  3271  00F850  6D                 	db	109	;'m'
  3272  00F851  61                 	db	97	;'a'
  3273  00F852  73                 	db	115	;'s'
  3274  00F853  20                 	db	32
  3275  00F854  57                 	db	87	;'W'
  3276  00F855  68                 	db	104	;'h'
  3277  00F856  61                 	db	97	;'a'
  3278  00F857  74                 	db	116	;'t'
  3279  00F858  3F                 	db	63	;'?'
  3280  00F859  3F                 	db	63	;'?'
  3281  00F85A  3F                 	db	63	;'?'
  3282  00F85B  00                 	db	0
  3283  00F85C                     STR_79:
  3284  00F85C  6C                 	db	108	;'l'
  3285  00F85D  69                 	db	105	;'i'
  3286  00F85E  76                 	db	118	;'v'
  3287  00F85F  69                 	db	105	;'i'
  3288  00F860  6E                 	db	110	;'n'
  3289  00F861  67                 	db	103	;'g'
  3290  00F862  72                 	db	114	;'r'
  3291  00F863  6F                 	db	111	;'o'
  3292  00F864  6F                 	db	111	;'o'
  3293  00F865  6D                 	db	109	;'m'
  3294  00F866  66                 	db	102	;'f'
  3295  00F867  61                 	db	97	;'a'
  3296  00F868  6E                 	db	110	;'n'
  3297  00F869  3D                 	db	61	;'='
  3298  00F86A  6F                 	db	111	;'o'
  3299  00F86B  66                 	db	102	;'f'
  3300  00F86C  66                 	db	102	;'f'
  3301  00F86D  00                 	db	0
  3302  00F86E                     STR_112:
  3303  00F86E  62                 	db	98	;'b'
  3304  00F86F  65                 	db	101	;'e'
  3305  00F870  64                 	db	100	;'d'
  3306  00F871  72                 	db	114	;'r'
  3307  00F872  6F                 	db	111	;'o'
  3308  00F873  6F                 	db	111	;'o'
  3309  00F874  6D                 	db	109	;'m'
  3310  00F875  73                 	db	115	;'s'
  3311  00F876  68                 	db	104	;'h'
  3312  00F877  61                 	db	97	;'a'
  3313  00F878  6B                 	db	107	;'k'
  3314  00F879  65                 	db	101	;'e'
  3315  00F87A  72                 	db	114	;'r'
  3316  00F87B  3D                 	db	61	;'='
  3317  00F87C  6F                 	db	111	;'o'
  3318  00F87D  66                 	db	102	;'f'
  3319  00F87E  66                 	db	102	;'f'
  3320  00F87F  00                 	db	0
  3321  00F880                     STR_258:
  3322  00F880  6A                 	db	106	;'j'
  3323  00F881  6F                 	db	111	;'o'
  3324  00F882  65                 	db	101	;'e'
  3325  00F883  73                 	db	115	;'s'
  3326  00F884  72                 	db	114	;'r'
  3327  00F885  6F                 	db	111	;'o'
  3328  00F886  6F                 	db	111	;'o'
  3329  00F887  6D                 	db	109	;'m'
  3330  00F888  6C                 	db	108	;'l'
  3331  00F889  69                 	db	105	;'i'
  3332  00F88A  67                 	db	103	;'g'
  3333  00F88B  68                 	db	104	;'h'
  3334  00F88C  74                 	db	116	;'t'
  3335  00F88D  3D                 	db	61	;'='
  3336  00F88E  6F                 	db	111	;'o'
  3337  00F88F  66                 	db	102	;'f'
  3338  00F890  66                 	db	102	;'f'
  3339  00F891  00                 	db	0
  3340  00F892                     STR_77:
  3341  00F892  4C                 	db	76	;'L'
  3342  00F893  69                 	db	105	;'i'
  3343  00F894  76                 	db	118	;'v'
  3344  00F895  69                 	db	105	;'i'
  3345  00F896  6E                 	db	110	;'n'
  3346  00F897  67                 	db	103	;'g'
  3347  00F898  72                 	db	114	;'r'
  3348  00F899  6F                 	db	111	;'o'
  3349  00F89A  6F                 	db	111	;'o'
  3350  00F89B  6D                 	db	109	;'m'
  3351  00F89C  20                 	db	32
  3352  00F89D  46                 	db	70	;'F'
  3353  00F89E  61                 	db	97	;'a'
  3354  00F89F  6E                 	db	110	;'n'
  3355  00F8A0  20                 	db	32
  3356  00F8A1  4F                 	db	79	;'O'
  3357  00F8A2  6E                 	db	110	;'n'
  3358  00F8A3  00                 	db	0
  3359  00F8A4                     STR_110:
  3360  00F8A4  42                 	db	66	;'B'
  3361  00F8A5  65                 	db	101	;'e'
  3362  00F8A6  64                 	db	100	;'d'
  3363  00F8A7  72                 	db	114	;'r'
  3364  00F8A8  6F                 	db	111	;'o'
  3365  00F8A9  6F                 	db	111	;'o'
  3366  00F8AA  6D                 	db	109	;'m'
  3367  00F8AB  20                 	db	32
  3368  00F8AC  53                 	db	83	;'S'
  3369  00F8AD  68                 	db	104	;'h'
  3370  00F8AE  61                 	db	97	;'a'
  3371  00F8AF  6B                 	db	107	;'k'
  3372  00F8B0  65                 	db	101	;'e'
  3373  00F8B1  72                 	db	114	;'r'
  3374  00F8B2  20                 	db	32
  3375  00F8B3  4F                 	db	79	;'O'
  3376  00F8B4  6E                 	db	110	;'n'
  3377  00F8B5  00                 	db	0
  3378  00F8B6                     STR_308:
  3379  00F8B6  77                 	db	119	;'w'
  3380  00F8B7  69                 	db	105	;'i'
  3381  00F8B8  74                 	db	116	;'t'
  3382  00F8B9  68                 	db	104	;'h'
  3383  00F8BA  65                 	db	101	;'e'
  3384  00F8BB  76                 	db	118	;'v'
  3385  00F8BC  65                 	db	101	;'e'
  3386  00F8BD  6E                 	db	110	;'n'
  3387  00F8BE  70                 	db	112	;'p'
  3388  00F8BF  61                 	db	97	;'a'
  3389  00F8C0  72                 	db	114	;'r'
  3390  00F8C1  69                 	db	105	;'i'
  3391  00F8C2  74                 	db	116	;'t'
  3392  00F8C3  79                 	db	121	;'y'
  3393  00F8C4  62                 	db	98	;'b'
  3394  00F8C5  69                 	db	105	;'i'
  3395  00F8C6  74                 	db	116	;'t'
  3396  00F8C7  00                 	db	0
  3397  00F8C8                     STR_324:
  3398  00F8C8  30                 	db	48	;'0'
  3399  00F8C9  31                 	db	49	;'1'
  3400  00F8CA  32                 	db	50	;'2'
  3401  00F8CB  33                 	db	51	;'3'
  3402  00F8CC  34                 	db	52	;'4'
  3403  00F8CD  35                 	db	53	;'5'
  3404  00F8CE  36                 	db	54	;'6'
  3405  00F8CF  37                 	db	55	;'7'
  3406  00F8D0  38                 	db	56	;'8'
  3407  00F8D1  39                 	db	57	;'9'
  3408  00F8D2  41                 	db	65	;'A'
  3409  00F8D3  42                 	db	66	;'B'
  3410  00F8D4  43                 	db	67	;'C'
  3411  00F8D5  44                 	db	68	;'D'
  3412  00F8D6  45                 	db	69	;'E'
  3413  00F8D7  46                 	db	70	;'F'
  3414  00F8D8  00                 	db	0
  3415  00F8D9                     STR_325:
  3416  00F8D9  30                 	db	48	;'0'
  3417  00F8DA  31                 	db	49	;'1'
  3418  00F8DB  32                 	db	50	;'2'
  3419  00F8DC  33                 	db	51	;'3'
  3420  00F8DD  34                 	db	52	;'4'
  3421  00F8DE  35                 	db	53	;'5'
  3422  00F8DF  36                 	db	54	;'6'
  3423  00F8E0  37                 	db	55	;'7'
  3424  00F8E1  38                 	db	56	;'8'
  3425  00F8E2  39                 	db	57	;'9'
  3426  00F8E3  61                 	db	97	;'a'
  3427  00F8E4  62                 	db	98	;'b'
  3428  00F8E5  63                 	db	99	;'c'
  3429  00F8E6  64                 	db	100	;'d'
  3430  00F8E7  65                 	db	101	;'e'
  3431  00F8E8  66                 	db	102	;'f'
  3432  00F8E9  00                 	db	0
  3433  00F8EA                     STR_210:
  3434  00F8EA  41                 	db	65	;'A'
  3435  00F8EB  44                 	db	68	;'D'
  3436  00F8EC  43                 	db	67	;'C'
  3437  00F8ED  20                 	db	32
  3438  00F8EE  48                 	db	72	;'H'
  3439  00F8EF  65                 	db	101	;'e'
  3440  00F8F0  6C                 	db	108	;'l'
  3441  00F8F1  70                 	db	112	;'p'
  3442  00F8F2  20                 	db	32
  3443  00F8F3  4D                 	db	77	;'M'
  3444  00F8F4  65                 	db	101	;'e'
  3445  00F8F5  6E                 	db	110	;'n'
  3446  00F8F6  75                 	db	117	;'u'
  3447  00F8F7  0D                 	db	13
  3448  00F8F8  0A                 	db	10
  3449  00F8F9  0A                 	db	10
  3450  00F8FA  00                 	db	0
  3451  00F8FB                     STR_60:
  3452  00F8FB  4C                 	db	76	;'L'
  3453  00F8FC  45                 	db	69	;'E'
  3454  00F8FD  44                 	db	68	;'D'
  3455  00F8FE  20                 	db	32
  3456  00F8FF  48                 	db	72	;'H'
  3457  00F900  65                 	db	101	;'e'
  3458  00F901  6C                 	db	108	;'l'
  3459  00F902  70                 	db	112	;'p'
  3460  00F903  20                 	db	32
  3461  00F904  4D                 	db	77	;'M'
  3462  00F905  65                 	db	101	;'e'
  3463  00F906  6E                 	db	110	;'n'
  3464  00F907  75                 	db	117	;'u'
  3465  00F908  0D                 	db	13
  3466  00F909  0A                 	db	10
  3467  00F90A  0A                 	db	10
  3468  00F90B  00                 	db	0
  3469  00F90C                     STR_207:
  3470  00F90C  43                 	db	67	;'C'
  3471  00F90D  68                 	db	104	;'h'
  3472  00F90E  6E                 	db	110	;'n'
  3473  00F90F  6C                 	db	108	;'l'
  3474  00F910  20                 	db	32
  3475  00F911  73                 	db	115	;'s'
  3476  00F912  65                 	db	101	;'e'
  3477  00F913  74                 	db	116	;'t'
  3478  00F914  20                 	db	32
  3479  00F915  74                 	db	116	;'t'
  3480  00F916  6F                 	db	111	;'o'
  3481  00F917  20                 	db	32
  3482  00F918  25                 	db	37
  3483  00F919  64                 	db	100	;'d'
  3484  00F91A  0D                 	db	13
  3485  00F91B  0A                 	db	10
  3486  00F91C  00                 	db	0
  3487  00F91D                     STR_276:
  3488  00F91D  43                 	db	67	;'C'
  3489  00F91E  68                 	db	104	;'h'
  3490  00F91F  72                 	db	114	;'r'
  3491  00F920  69                 	db	105	;'i'
  3492  00F921  73                 	db	115	;'s'
  3493  00F922  74                 	db	116	;'t'
  3494  00F923  6D                 	db	109	;'m'
  3495  00F924  61                 	db	97	;'a'
  3496  00F925  73                 	db	115	;'s'
  3497  00F926  20                 	db	32
  3498  00F927  54                 	db	84	;'T'
  3499  00F928  72                 	db	114	;'r'
  3500  00F929  65                 	db	101	;'e'
  3501  00F92A  65                 	db	101	;'e'
  3502  00F92B  0D                 	db	13
  3503  00F92C  0A                 	db	10
  3504  00F92D  00                 	db	0
  3505  00F92E                     STR_65:
  3506  00F92E  69                 	db	105	;'i'
  3507  00F92F  2E                 	db	46
  3508  00F930  65                 	db	101	;'e'
  3509  00F931  2E                 	db	46
  3510  00F932  20                 	db	32
  3511  00F933  4C                 	db	76	;'L'
  3512  00F934  45                 	db	69	;'E'
  3513  00F935  44                 	db	68	;'D'
  3514  00F936  31                 	db	49	;'1'
  3515  00F937  20                 	db	32
  3516  00F938  3D                 	db	61	;'='
  3517  00F939  20                 	db	32
  3518  00F93A  4F                 	db	79	;'O'
  3519  00F93B  6E                 	db	110	;'n'
  3520  00F93C  0D                 	db	13
  3521  00F93D  0A                 	db	10
  3522  00F93E  00                 	db	0
  3523  00F93F                     STR_225:
  3524  00F93F  52                 	db	82	;'R'
  3525  00F940  54                 	db	84	;'T'
  3526  00F941  43                 	db	67	;'C'
  3527  00F942  20                 	db	32
  3528  00F943  54                 	db	84	;'T'
  3529  00F944  69                 	db	105	;'i'
  3530  00F945  6D                 	db	109	;'m'
  3531  00F946  65                 	db	101	;'e'
  3532  00F947  20                 	db	32
  3533  00F948  69                 	db	105	;'i'
  3534  00F949  73                 	db	115	;'s'
  3535  00F94A  3A                 	db	58	;':'
  3536  00F94B  20                 	db	32
  3537  00F94C  20                 	db	32
  3538  00F94D  20                 	db	32
  3539  00F94E  20                 	db	32
  3540  00F94F  00                 	db	0
  3541  00F950                     STR_100:
  3542  00F950  62                 	db	98	;'b'
  3543  00F951  65                 	db	101	;'e'
  3544  00F952  64                 	db	100	;'d'
  3545  00F953  72                 	db	114	;'r'
  3546  00F954  6F                 	db	111	;'o'
  3547  00F955  6F                 	db	111	;'o'
  3548  00F956  6D                 	db	109	;'m'
  3549  00F957  6C                 	db	108	;'l'
  3550  00F958  69                 	db	105	;'i'
  3551  00F959  67                 	db	103	;'g'
  3552  00F95A  68                 	db	104	;'h'
  3553  00F95B  74                 	db	116	;'t'
  3554  00F95C  3D                 	db	61	;'='
  3555  00F95D  6F                 	db	111	;'o'
  3556  00F95E  66                 	db	102	;'f'
  3557  00F95F  66                 	db	102	;'f'
  3558  00F960  00                 	db	0
  3559  00F961                     STR_229:
  3560  00F961  52                 	db	82	;'R'
  3561  00F962  54                 	db	84	;'T'
  3562  00F963  43                 	db	67	;'C'
  3563  00F964  20                 	db	32
  3564  00F965  69                 	db	105	;'i'
  3565  00F966  73                 	db	115	;'s'
  3566  00F967  6E                 	db	110	;'n'
  3567  00F968  74                 	db	116	;'t'
  3568  00F969  20                 	db	32
  3569  00F96A  77                 	db	119	;'w'
  3570  00F96B  6F                 	db	111	;'o'
  3571  00F96C  72                 	db	114	;'r'
  3572  00F96D  6B                 	db	107	;'k'
  3573  00F96E  69                 	db	105	;'i'
  3574  00F96F  6E                 	db	110	;'n'
  3575  00F970  67                 	db	103	;'g'
  3576  00F971  00                 	db	0
  3577  00F972                     STR_76:
  3578  00F972  6C                 	db	108	;'l'
  3579  00F973  69                 	db	105	;'i'
  3580  00F974  76                 	db	118	;'v'
  3581  00F975  69                 	db	105	;'i'
  3582  00F976  6E                 	db	110	;'n'
  3583  00F977  67                 	db	103	;'g'
  3584  00F978  72                 	db	114	;'r'
  3585  00F979  6F                 	db	111	;'o'
  3586  00F97A  6F                 	db	111	;'o'
  3587  00F97B  6D                 	db	109	;'m'
  3588  00F97C  66                 	db	102	;'f'
  3589  00F97D  61                 	db	97	;'a'
  3590  00F97E  6E                 	db	110	;'n'
  3591  00F97F  3D                 	db	61	;'='
  3592  00F980  6F                 	db	111	;'o'
  3593  00F981  6E                 	db	110	;'n'
  3594  00F982  00                 	db	0
  3595  00F983                     STR_109:
  3596  00F983  62                 	db	98	;'b'
  3597  00F984  65                 	db	101	;'e'
  3598  00F985  64                 	db	100	;'d'
  3599  00F986  72                 	db	114	;'r'
  3600  00F987  6F                 	db	111	;'o'
  3601  00F988  6F                 	db	111	;'o'
  3602  00F989  6D                 	db	109	;'m'
  3603  00F98A  73                 	db	115	;'s'
  3604  00F98B  68                 	db	104	;'h'
  3605  00F98C  61                 	db	97	;'a'
  3606  00F98D  6B                 	db	107	;'k'
  3607  00F98E  65                 	db	101	;'e'
  3608  00F98F  72                 	db	114	;'r'
  3609  00F990  3D                 	db	61	;'='
  3610  00F991  6F                 	db	111	;'o'
  3611  00F992  6E                 	db	110	;'n'
  3612  00F993  00                 	db	0
  3613  00F994                     STR_255:
  3614  00F994  6A                 	db	106	;'j'
  3615  00F995  6F                 	db	111	;'o'
  3616  00F996  65                 	db	101	;'e'
  3617  00F997  73                 	db	115	;'s'
  3618  00F998  72                 	db	114	;'r'
  3619  00F999  6F                 	db	111	;'o'
  3620  00F99A  6F                 	db	111	;'o'
  3621  00F99B  6D                 	db	109	;'m'
  3622  00F99C  6C                 	db	108	;'l'
  3623  00F99D  69                 	db	105	;'i'
  3624  00F99E  67                 	db	103	;'g'
  3625  00F99F  68                 	db	104	;'h'
  3626  00F9A0  74                 	db	116	;'t'
  3627  00F9A1  3D                 	db	61	;'='
  3628  00F9A2  6F                 	db	111	;'o'
  3629  00F9A3  6E                 	db	110	;'n'
  3630  00F9A4  00                 	db	0
  3631  00F9A5                     STR_161:
  3632  00F9A5  72                 	db	114	;'r'
  3633  00F9A6  65                 	db	101	;'e'
  3634  00F9A7  64                 	db	100	;'d'
  3635  00F9A8  6C                 	db	108	;'l'
  3636  00F9A9  65                 	db	101	;'e'
  3637  00F9AA  64                 	db	100	;'d'
  3638  00F9AB  62                 	db	98	;'b'
  3639  00F9AC  72                 	db	114	;'r'
  3640  00F9AD  69                 	db	105	;'i'
  3641  00F9AE  67                 	db	103	;'g'
  3642  00F9AF  68                 	db	104	;'h'
  3643  00F9B0  74                 	db	116	;'t'
  3644  00F9B1  6E                 	db	110	;'n'
  3645  00F9B2  65                 	db	101	;'e'
  3646  00F9B3  73                 	db	115	;'s'
  3647  00F9B4  73                 	db	115	;'s'
  3648  00F9B5  00                 	db	0
  3649  00F9B6                     STR_307:
  3650  00F9B6  77                 	db	119	;'w'
  3651  00F9B7  69                 	db	105	;'i'
  3652  00F9B8  74                 	db	116	;'t'
  3653  00F9B9  68                 	db	104	;'h'
  3654  00F9BA  6F                 	db	111	;'o'
  3655  00F9BB  64                 	db	100	;'d'
  3656  00F9BC  64                 	db	100	;'d'
  3657  00F9BD  70                 	db	112	;'p'
  3658  00F9BE  61                 	db	97	;'a'
  3659  00F9BF  72                 	db	114	;'r'
  3660  00F9C0  69                 	db	105	;'i'
  3661  00F9C1  74                 	db	116	;'t'
  3662  00F9C2  79                 	db	121	;'y'
  3663  00F9C3  62                 	db	98	;'b'
  3664  00F9C4  69                 	db	105	;'i'
  3665  00F9C5  74                 	db	116	;'t'
  3666  00F9C6  00                 	db	0
  3667  00F9C7                     STR_177:
  3668  00F9C7  52                 	db	82	;'R'
  3669  00F9C8  65                 	db	101	;'e'
  3670  00F9C9  64                 	db	100	;'d'
  3671  00F9CA  20                 	db	32
  3672  00F9CB  4C                 	db	76	;'L'
  3673  00F9CC  45                 	db	69	;'E'
  3674  00F9CD  44                 	db	68	;'D'
  3675  00F9CE  20                 	db	32
  3676  00F9CF  43                 	db	67	;'C'
  3677  00F9D0  6F                 	db	111	;'o'
  3678  00F9D1  6E                 	db	110	;'n'
  3679  00F9D2  74                 	db	116	;'t'
  3680  00F9D3  72                 	db	114	;'r'
  3681  00F9D4  61                 	db	97	;'a'
  3682  00F9D5  73                 	db	115	;'s'
  3683  00F9D6  74                 	db	116	;'t'
  3684  00F9D7  00                 	db	0
  3685  00F9D8                     STR_19:
  3686  00F9D8  53                 	db	83	;'S'
  3687  00F9D9  74                 	db	116	;'t'
  3688  00F9DA  61                 	db	97	;'a'
  3689  00F9DB  72                 	db	114	;'r'
  3690  00F9DC  74                 	db	116	;'t'
  3691  00F9DD  69                 	db	105	;'i'
  3692  00F9DE  6E                 	db	110	;'n'
  3693  00F9DF  67                 	db	103	;'g'
  3694  00F9E0  2E                 	db	46
  3695  00F9E1  2E                 	db	46
  3696  00F9E2  2E                 	db	46
  3697  00F9E3  2E                 	db	46
  3698  00F9E4  2E                 	db	46
  3699  00F9E5  2E                 	db	46
  3700  00F9E6  2E                 	db	46
  3701  00F9E7  2E                 	db	46
  3702  00F9E8  00                 	db	0
  3703  00F9E9                     STR_186:
  3704  00F9E9  45                 	db	69	;'E'
  3705  00F9EA  52                 	db	82	;'R'
  3706  00F9EB  52                 	db	82	;'R'
  3707  00F9EC  3A                 	db	58	;':'
  3708  00F9ED  20                 	db	32
  3709  00F9EE  43                 	db	67	;'C'
  3710  00F9EF  4E                 	db	78	;'N'
  3711  00F9F0  53                 	db	83	;'S'
  3712  00F9F1  54                 	db	84	;'T'
  3713  00F9F2  20                 	db	32
  3714  00F9F3  3E                 	db	62	;'>'
  3715  00F9F4  20                 	db	32
  3716  00F9F5  31                 	db	49	;'1'
  3717  00F9F6  30                 	db	48	;'0'
  3718  00F9F7  30                 	db	48	;'0'
  3719  00F9F8  00                 	db	0
  3720  00F9F9                     STR_167:
  3721  00F9F9  45                 	db	69	;'E'
  3722  00F9FA  52                 	db	82	;'R'
  3723  00F9FB  52                 	db	82	;'R'
  3724  00F9FC  3A                 	db	58	;':'
  3725  00F9FD  20                 	db	32
  3726  00F9FE  44                 	db	68	;'D'
  3727  00F9FF  75                 	db	117	;'u'
  3728  00FA00  74                 	db	116	;'t'
  3729  00FA01  79                 	db	121	;'y'
  3730  00FA02  20                 	db	32
  3731  00FA03  3E                 	db	62	;'>'
  3732  00FA04  20                 	db	32
  3733  00FA05  31                 	db	49	;'1'
  3734  00FA06  30                 	db	48	;'0'
  3735  00FA07  30                 	db	48	;'0'
  3736  00FA08  00                 	db	0
  3737  00FA09                     STR_83:
  3738  00FA09  4C                 	db	76	;'L'
  3739  00FA0A  56                 	db	86	;'V'
  3740  00FA0B  4E                 	db	78	;'N'
  3741  00FA0C  47                 	db	71	;'G'
  3742  00FA0D  20                 	db	32
  3743  00FA0E  52                 	db	82	;'R'
  3744  00FA0F  6D                 	db	109	;'m'
  3745  00FA10  20                 	db	32
  3746  00FA11  54                 	db	84	;'T'
  3747  00FA12  61                 	db	97	;'a'
  3748  00FA13  73                 	db	115	;'s'
  3749  00FA14  6B                 	db	107	;'k'
  3750  00FA15  3F                 	db	63	;'?'
  3751  00FA16  3F                 	db	63	;'?'
  3752  00FA17  3F                 	db	63	;'?'
  3753  00FA18  00                 	db	0
  3754  00FA19                     STR_115:
  3755  00FA19  42                 	db	66	;'B'
  3756  00FA1A  65                 	db	101	;'e'
  3757  00FA1B  64                 	db	100	;'d'
  3758  00FA1C  72                 	db	114	;'r'
  3759  00FA1D  6F                 	db	111	;'o'
  3760  00FA1E  6F                 	db	111	;'o'
  3761  00FA1F  6D                 	db	109	;'m'
  3762  00FA20  20                 	db	32
  3763  00FA21  54                 	db	84	;'T'
  3764  00FA22  61                 	db	97	;'a'
  3765  00FA23  73                 	db	115	;'s'
  3766  00FA24  6B                 	db	107	;'k'
  3767  00FA25  3F                 	db	63	;'?'
  3768  00FA26  3F                 	db	63	;'?'
  3769  00FA27  3F                 	db	63	;'?'
  3770  00FA28  00                 	db	0
  3771  00FA29                     STR_124:
  3772  00FA29  42                 	db	66	;'B'
  3773  00FA2A  65                 	db	101	;'e'
  3774  00FA2B  64                 	db	100	;'d'
  3775  00FA2C  72                 	db	114	;'r'
  3776  00FA2D  6F                 	db	111	;'o'
  3777  00FA2E  6F                 	db	111	;'o'
  3778  00FA2F  6D                 	db	109	;'m'
  3779  00FA30  20                 	db	32
  3780  00FA31  48                 	db	72	;'H'
  3781  00FA32  65                 	db	101	;'e'
  3782  00FA33  6C                 	db	108	;'l'
  3783  00FA34  70                 	db	112	;'p'
  3784  00FA35  3F                 	db	63	;'?'
  3785  00FA36  3F                 	db	63	;'?'
  3786  00FA37  3F                 	db	63	;'?'
  3787  00FA38  00                 	db	0
  3788  00FA39                     STR_173:
  3789  00FA39  52                 	db	82	;'R'
  3790  00FA3A  65                 	db	101	;'e'
  3791  00FA3B  64                 	db	100	;'d'
  3792  00FA3C  20                 	db	32
  3793  00FA3D  4C                 	db	76	;'L'
  3794  00FA3E  45                 	db	69	;'E'
  3795  00FA3F  44                 	db	68	;'D'
  3796  00FA40  20                 	db	32
  3797  00FA41  57                 	db	87	;'W'
  3798  00FA42  68                 	db	104	;'h'
  3799  00FA43  61                 	db	97	;'a'
  3800  00FA44  74                 	db	116	;'t'
  3801  00FA45  3F                 	db	63	;'?'
  3802  00FA46  3F                 	db	63	;'?'
  3803  00FA47  3F                 	db	63	;'?'
  3804  00FA48  00                 	db	0
  3805  00FA49                     STR_262:
  3806  00FA49  4A                 	db	74	;'J'
  3807  00FA4A  6F                 	db	111	;'o'
  3808  00FA4B  65                 	db	101	;'e'
  3809  00FA4C  20                 	db	32
  3810  00FA4D  72                 	db	114	;'r'
  3811  00FA4E  6F                 	db	111	;'o'
  3812  00FA4F  6F                 	db	111	;'o'
  3813  00FA50  6D                 	db	109	;'m'
  3814  00FA51  20                 	db	32
  3815  00FA52  77                 	db	119	;'w'
  3816  00FA53  68                 	db	104	;'h'
  3817  00FA54  61                 	db	97	;'a'
  3818  00FA55  74                 	db	116	;'t'
  3819  00FA56  3F                 	db	63	;'?'
  3820  00FA57  3F                 	db	63	;'?'
  3821  00FA58  00                 	db	0
  3822  00FA59                     STR_294:
  3823  00FA59  43                 	db	67	;'C'
  3824  00FA5A  68                 	db	104	;'h'
  3825  00FA5B  72                 	db	114	;'r'
  3826  00FA5C  69                 	db	105	;'i'
  3827  00FA5D  73                 	db	115	;'s'
  3828  00FA5E  74                 	db	116	;'t'
  3829  00FA5F  6D                 	db	109	;'m'
  3830  00FA60  61                 	db	97	;'a'
  3831  00FA61  73                 	db	115	;'s'
  3832  00FA62  20                 	db	32
  3833  00FA63  54                 	db	84	;'T'
  3834  00FA64  72                 	db	114	;'r'
  3835  00FA65  65                 	db	101	;'e'
  3836  00FA66  65                 	db	101	;'e'
  3837  00FA67  3F                 	db	63	;'?'
  3838  00FA68  00                 	db	0
  3839  00FA69                     STR_137:
  3840  00FA69  58                 	db	88	;'X'
  3841  00FA6A  4D                 	db	77	;'M'
  3842  00FA6B  41                 	db	65	;'A'
  3843  00FA6C  53                 	db	83	;'S'
  3844  00FA6D  20                 	db	32
  3845  00FA6E  43                 	db	67	;'C'
  3846  00FA6F  6F                 	db	111	;'o'
  3847  00FA70  6C                 	db	108	;'l'
  3848  00FA71  6F                 	db	111	;'o'
  3849  00FA72  72                 	db	114	;'r'
  3850  00FA73  20                 	db	32
  3851  00FA74  54                 	db	84	;'T'
  3852  00FA75  47                 	db	71	;'G'
  3853  00FA76  4C                 	db	76	;'L'
  3854  00FA77  44                 	db	68	;'D'
  3855  00FA78  00                 	db	0
  3856  00FA79                     STR_75:
  3857  00FA79  4C                 	db	76	;'L'
  3858  00FA7A  56                 	db	86	;'V'
  3859  00FA7B  4E                 	db	78	;'N'
  3860  00FA7C  47                 	db	71	;'G'
  3861  00FA7D  20                 	db	32
  3862  00FA7E  52                 	db	82	;'R'
  3863  00FA7F  6D                 	db	109	;'m'
  3864  00FA80  20                 	db	32
  3865  00FA81  4C                 	db	76	;'L'
  3866  00FA82  74                 	db	116	;'t'
  3867  00FA83  20                 	db	32
  3868  00FA84  54                 	db	84	;'T'
  3869  00FA85  47                 	db	71	;'G'
  3870  00FA86  4C                 	db	76	;'L'
  3871  00FA87  44                 	db	68	;'D'
  3872  00FA88  00                 	db	0
  3873  00FA89                     STR_102:
  3874  00FA89  42                 	db	66	;'B'
  3875  00FA8A  65                 	db	101	;'e'
  3876  00FA8B  64                 	db	100	;'d'
  3877  00FA8C  72                 	db	114	;'r'
  3878  00FA8D  6F                 	db	111	;'o'
  3879  00FA8E  6F                 	db	111	;'o'
  3880  00FA8F  6D                 	db	109	;'m'
  3881  00FA90  20                 	db	32
  3882  00FA91  4C                 	db	76	;'L'
  3883  00FA92  74                 	db	116	;'t'
  3884  00FA93  20                 	db	32
  3885  00FA94  54                 	db	84	;'T'
  3886  00FA95  47                 	db	71	;'G'
  3887  00FA96  4C                 	db	76	;'L'
  3888  00FA97  44                 	db	68	;'D'
  3889  00FA98  00                 	db	0
  3890  00FA99                     STR_222:
  3891  00FA99  52                 	db	82	;'R'
  3892  00FA9A  54                 	db	84	;'T'
  3893  00FA9B  43                 	db	67	;'C'
  3894  00FA9C  20                 	db	32
  3895  00FA9D  42                 	db	66	;'B'
  3896  00FA9E  74                 	db	116	;'t'
  3897  00FA9F  79                 	db	121	;'y'
  3898  00FAA0  20                 	db	32
  3899  00FAA1  3D                 	db	61	;'='
  3900  00FAA2  20                 	db	32
  3901  00FAA3  25                 	db	37
  3902  00FAA4  64                 	db	100	;'d'
  3903  00FAA5  2E                 	db	46
  3904  00FAA6  25                 	db	37
  3905  00FAA7  64                 	db	100	;'d'
  3906  00FAA8  00                 	db	0
  3907  00FAA9                     STR_316:
  3908  00FAA9  49                 	db	73	;'I'
  3909  00FAAA  6E                 	db	110	;'n'
  3910  00FAAB  76                 	db	118	;'v'
  3911  00FAAC  61                 	db	97	;'a'
  3912  00FAAD  6C                 	db	108	;'l'
  3913  00FAAE  69                 	db	105	;'i'
  3914  00FAAF  64                 	db	100	;'d'
  3915  00FAB0  20                 	db	32
  3916  00FAB1  43                 	db	67	;'C'
  3917  00FAB2  6F                 	db	111	;'o'
  3918  00FAB3  6D                 	db	109	;'m'
  3919  00FAB4  6D                 	db	109	;'m'
  3920  00FAB5  61                 	db	97	;'a'
  3921  00FAB6  6E                 	db	110	;'n'
  3922  00FAB7  64                 	db	100	;'d'
  3923  00FAB8  00                 	db	0
  3924  00FAB9                     STR_205:
  3925  00FAB9  45                 	db	69	;'E'
  3926  00FABA  52                 	db	82	;'R'
  3927  00FABB  52                 	db	82	;'R'
  3928  00FABC  3A                 	db	58	;':'
  3929  00FABD  20                 	db	32
  3930  00FABE  43                 	db	67	;'C'
  3931  00FABF  61                 	db	97	;'a'
  3932  00FAC0  6E                 	db	110	;'n'
  3933  00FAC1  74                 	db	116	;'t'
  3934  00FAC2  20                 	db	32
  3935  00FAC3  70                 	db	112	;'p'
  3936  00FAC4  61                 	db	97	;'a'
  3937  00FAC5  72                 	db	114	;'r'
  3938  00FAC6  73                 	db	115	;'s'
  3939  00FAC7  65                 	db	101	;'e'
  3940  00FAC8  00                 	db	0
  3941  00FAC9                     STR_114:
  3942  00FAC9  42                 	db	66	;'B'
  3943  00FACA  65                 	db	101	;'e'
  3944  00FACB  64                 	db	100	;'d'
  3945  00FACC  72                 	db	114	;'r'
  3946  00FACD  6F                 	db	111	;'o'
  3947  00FACE  6F                 	db	111	;'o'
  3948  00FACF  6D                 	db	109	;'m'
  3949  00FAD0  20                 	db	32
  3950  00FAD1  53                 	db	83	;'S'
  3951  00FAD2  4B                 	db	75	;'K'
  3952  00FAD3  52                 	db	82	;'R'
  3953  00FAD4  20                 	db	32
  3954  00FAD5  4F                 	db	79	;'O'
  3955  00FAD6  66                 	db	102	;'f'
  3956  00FAD7  66                 	db	102	;'f'
  3957  00FAD8  00                 	db	0
  3958  00FAD9                     STR_107:
  3959  00FAD9  42                 	db	66	;'B'
  3960  00FADA  65                 	db	101	;'e'
  3961  00FADB  64                 	db	100	;'d'
  3962  00FADC  72                 	db	114	;'r'
  3963  00FADD  6F                 	db	111	;'o'
  3964  00FADE  6F                 	db	111	;'o'
  3965  00FADF  6D                 	db	109	;'m'
  3966  00FAE0  20                 	db	32
  3967  00FAE1  46                 	db	70	;'F'
  3968  00FAE2  61                 	db	97	;'a'
  3969  00FAE3  6E                 	db	110	;'n'
  3970  00FAE4  20                 	db	32
  3971  00FAE5  4F                 	db	79	;'O'
  3972  00FAE6  66                 	db	102	;'f'
  3973  00FAE7  66                 	db	102	;'f'
  3974  00FAE8  00                 	db	0
  3975  00FAE9                     STR_260:
  3976  00FAE9  4A                 	db	74	;'J'
  3977  00FAEA  6F                 	db	111	;'o'
  3978  00FAEB  65                 	db	101	;'e'
  3979  00FAEC  20                 	db	32
  3980  00FAED  72                 	db	114	;'r'
  3981  00FAEE  6F                 	db	111	;'o'
  3982  00FAEF  6F                 	db	111	;'o'
  3983  00FAF0  6D                 	db	109	;'m'
  3984  00FAF1  20                 	db	32
  3985  00FAF2  6C                 	db	108	;'l'
  3986  00FAF3  74                 	db	116	;'t'
  3987  00FAF4  20                 	db	32
  3988  00FAF5  4F                 	db	79	;'O'
  3989  00FAF6  66                 	db	102	;'f'
  3990  00FAF7  66                 	db	102	;'f'
  3991  00FAF8  00                 	db	0
  3992  00FAF9                     STR_203:
  3993  00FAF9  45                 	db	69	;'E'
  3994  00FAFA  52                 	db	82	;'R'
  3995  00FAFB  52                 	db	82	;'R'
  3996  00FAFC  3A                 	db	58	;':'
  3997  00FAFD  20                 	db	32
  3998  00FAFE  55                 	db	85	;'U'
  3999  00FAFF  73                 	db	115	;'s'
  4000  00FB00  65                 	db	101	;'e'
  4001  00FB01  20                 	db	32
  4002  00FB02  2B                 	db	43
  4003  00FB03  20                 	db	32
  4004  00FB04  43                 	db	67	;'C'
  4005  00FB05  68                 	db	104	;'h'
  4006  00FB06  6E                 	db	110	;'n'
  4007  00FB07  6C                 	db	108	;'l'
  4008  00FB08  00                 	db	0
  4009  00FB09                     STR_99:
  4010  00FB09  62                 	db	98	;'b'
  4011  00FB0A  65                 	db	101	;'e'
  4012  00FB0B  64                 	db	100	;'d'
  4013  00FB0C  72                 	db	114	;'r'
  4014  00FB0D  6F                 	db	111	;'o'
  4015  00FB0E  6F                 	db	111	;'o'
  4016  00FB0F  6D                 	db	109	;'m'
  4017  00FB10  6C                 	db	108	;'l'
  4018  00FB11  69                 	db	105	;'i'
  4019  00FB12  67                 	db	103	;'g'
  4020  00FB13  68                 	db	104	;'h'
  4021  00FB14  74                 	db	116	;'t'
  4022  00FB15  3D                 	db	61	;'='
  4023  00FB16  6F                 	db	111	;'o'
  4024  00FB17  6E                 	db	110	;'n'
  4025  00FB18  00                 	db	0
  4026  00FB19                     STR_301:
  4027  00FB19  62                 	db	98	;'b'
  4028  00FB1A  61                 	db	97	;'a'
  4029  00FB1B  75                 	db	117	;'u'
  4030  00FB1C  64                 	db	100	;'d'
  4031  00FB1D  77                 	db	119	;'w'
  4032  00FB1E  69                 	db	105	;'i'
  4033  00FB1F  6C                 	db	108	;'l'
  4034  00FB20  6C                 	db	108	;'l'
  4035  00FB21  62                 	db	98	;'b'
  4036  00FB22  65                 	db	101	;'e'
  4037  00FB23  73                 	db	115	;'s'
  4038  00FB24  65                 	db	101	;'e'
  4039  00FB25  74                 	db	116	;'t'
  4040  00FB26  74                 	db	116	;'t'
  4041  00FB27  6F                 	db	111	;'o'
  4042  00FB28  00                 	db	0
  4043  00FB29                     STR_90:
  4044  00FB29  4C                 	db	76	;'L'
  4045  00FB2A  56                 	db	86	;'V'
  4046  00FB2B  4E                 	db	78	;'N'
  4047  00FB2C  47                 	db	71	;'G'
  4048  00FB2D  20                 	db	32
  4049  00FB2E  52                 	db	82	;'R'
  4050  00FB2F  6D                 	db	109	;'m'
  4051  00FB30  20                 	db	32
  4052  00FB31  4C                 	db	76	;'L'
  4053  00FB32  74                 	db	116	;'t'
  4054  00FB33  20                 	db	32
  4055  00FB34  68                 	db	104	;'h'
  4056  00FB35  65                 	db	101	;'e'
  4057  00FB36  6C                 	db	108	;'l'
  4058  00FB37  70                 	db	112	;'p'
  4059  00FB38  00                 	db	0
  4060  00FB39                     STR_306:
  4061  00FB39  77                 	db	119	;'w'
  4062  00FB3A  69                 	db	105	;'i'
  4063  00FB3B  74                 	db	116	;'t'
  4064  00FB3C  68                 	db	104	;'h'
  4065  00FB3D  6E                 	db	110	;'n'
  4066  00FB3E  6F                 	db	111	;'o'
  4067  00FB3F  70                 	db	112	;'p'
  4068  00FB40  61                 	db	97	;'a'
  4069  00FB41  72                 	db	114	;'r'
  4070  00FB42  69                 	db	105	;'i'
  4071  00FB43  74                 	db	116	;'t'
  4072  00FB44  79                 	db	121	;'y'
  4073  00FB45  62                 	db	98	;'b'
  4074  00FB46  69                 	db	105	;'i'
  4075  00FB47  74                 	db	116	;'t'
  4076  00FB48  00                 	db	0
  4077  00FB49                     STR_18:
  4078  00FB49  53                 	db	83	;'S'
  4079  00FB4A  74                 	db	116	;'t'
  4080  00FB4B  61                 	db	97	;'a'
  4081  00FB4C  72                 	db	114	;'r'
  4082  00FB4D  74                 	db	116	;'t'
  4083  00FB4E  69                 	db	105	;'i'
  4084  00FB4F  6E                 	db	110	;'n'
  4085  00FB50  67                 	db	103	;'g'
  4086  00FB51  2E                 	db	46
  4087  00FB52  2E                 	db	46
  4088  00FB53  2E                 	db	46
  4089  00FB54  2E                 	db	46
  4090  00FB55  2E                 	db	46
  4091  00FB56  2E                 	db	46
  4092  00FB57  2E                 	db	46
  4093  00FB58  00                 	db	0
  4094  00FB59                     STR_283:
  4095  00FB59  43                 	db	67	;'C'
  4096  00FB5A  75                 	db	117	;'u'
  4097  00FB5B  72                 	db	114	;'r'
  4098  00FB5C  72                 	db	114	;'r'
  4099  00FB5D  65                 	db	101	;'e'
  4100  00FB5E  6E                 	db	110	;'n'
  4101  00FB5F  74                 	db	116	;'t'
  4102  00FB60  20                 	db	32
  4103  00FB61  54                 	db	84	;'T'
  4104  00FB62  69                 	db	105	;'i'
  4105  00FB63  6D                 	db	109	;'m'
  4106  00FB64  65                 	db	101	;'e'
  4107  00FB65  0D                 	db	13
  4108  00FB66  0A                 	db	10
  4109  00FB67  00                 	db	0
  4110  00FB68                     STR_150:
  4111  00FB68  77                 	db	119	;'w'
  4112  00FB69  68                 	db	104	;'h'
  4113  00FB6A  69                 	db	105	;'i'
  4114  00FB6B  74                 	db	116	;'t'
  4115  00FB6C  65                 	db	101	;'e'
  4116  00FB6D  20                 	db	32
  4117  00FB6E  6C                 	db	108	;'l'
  4118  00FB6F  69                 	db	105	;'i'
  4119  00FB70  67                 	db	103	;'g'
  4120  00FB71  68                 	db	104	;'h'
  4121  00FB72  74                 	db	116	;'t'
  4122  00FB73  73                 	db	115	;'s'
  4123  00FB74  0D                 	db	13
  4124  00FB75  0A                 	db	10
  4125  00FB76  00                 	db	0
  4126  00FB77                     STR_190:
  4127  00FB77  43                 	db	67	;'C'
  4128  00FB78  4E                 	db	78	;'N'
  4129  00FB79  53                 	db	83	;'S'
  4130  00FB7A  54                 	db	84	;'T'
  4131  00FB7B  20                 	db	32
  4132  00FB7C  73                 	db	115	;'s'
  4133  00FB7D  65                 	db	101	;'e'
  4134  00FB7E  74                 	db	116	;'t'
  4135  00FB7F  20                 	db	32
  4136  00FB80  74                 	db	116	;'t'
  4137  00FB81  6F                 	db	111	;'o'
  4138  00FB82  20                 	db	32
  4139  00FB83  25                 	db	37
  4140  00FB84  64                 	db	100	;'d'
  4141  00FB85  00                 	db	0
  4142  00FB86                     STR_171:
  4143  00FB86  44                 	db	68	;'D'
  4144  00FB87  75                 	db	117	;'u'
  4145  00FB88  74                 	db	116	;'t'
  4146  00FB89  79                 	db	121	;'y'
  4147  00FB8A  20                 	db	32
  4148  00FB8B  73                 	db	115	;'s'
  4149  00FB8C  65                 	db	101	;'e'
  4150  00FB8D  74                 	db	116	;'t'
  4151  00FB8E  20                 	db	32
  4152  00FB8F  74                 	db	116	;'t'
  4153  00FB90  6F                 	db	111	;'o'
  4154  00FB91  20                 	db	32
  4155  00FB92  25                 	db	37
  4156  00FB93  64                 	db	100	;'d'
  4157  00FB94  00                 	db	0
  4158  00FB95                     STR_145:
  4159  00FB95  58                 	db	88	;'X'
  4160  00FB96  4D                 	db	77	;'M'
  4161  00FB97  41                 	db	65	;'A'
  4162  00FB98  53                 	db	83	;'S'
  4163  00FB99  20                 	db	32
  4164  00FB9A  57                 	db	87	;'W'
  4165  00FB9B  68                 	db	104	;'h'
  4166  00FB9C  69                 	db	105	;'i'
  4167  00FB9D  74                 	db	116	;'t'
  4168  00FB9E  65                 	db	101	;'e'
  4169  00FB9F  20                 	db	32
  4170  00FBA0  4F                 	db	79	;'O'
  4171  00FBA1  66                 	db	102	;'f'
  4172  00FBA2  66                 	db	102	;'f'
  4173  00FBA3  00                 	db	0
  4174  00FBA4                     STR_81:
  4175  00FBA4  4C                 	db	76	;'L'
  4176  00FBA5  56                 	db	86	;'V'
  4177  00FBA6  4E                 	db	78	;'N'
  4178  00FBA7  47                 	db	71	;'G'
  4179  00FBA8  20                 	db	32
  4180  00FBA9  52                 	db	82	;'R'
  4181  00FBAA  6D                 	db	109	;'m'
  4182  00FBAB  20                 	db	32
  4183  00FBAC  4C                 	db	76	;'L'
  4184  00FBAD  74                 	db	116	;'t'
  4185  00FBAE  20                 	db	32
  4186  00FBAF  4F                 	db	79	;'O'
  4187  00FBB0  66                 	db	102	;'f'
  4188  00FBB1  66                 	db	102	;'f'
  4189  00FBB2  00                 	db	0
  4190  00FBB3                     STR_108:
  4191  00FBB3  42                 	db	66	;'B'
  4192  00FBB4  65                 	db	101	;'e'
  4193  00FBB5  64                 	db	100	;'d'
  4194  00FBB6  72                 	db	114	;'r'
  4195  00FBB7  6F                 	db	111	;'o'
  4196  00FBB8  6F                 	db	111	;'o'
  4197  00FBB9  6D                 	db	109	;'m'
  4198  00FBBA  20                 	db	32
  4199  00FBBB  4C                 	db	76	;'L'
  4200  00FBBC  74                 	db	116	;'t'
  4201  00FBBD  20                 	db	32
  4202  00FBBE  4F                 	db	79	;'O'
  4203  00FBBF  66                 	db	102	;'f'
  4204  00FBC0  66                 	db	102	;'f'
  4205  00FBC1  00                 	db	0
  4206  00FBC2                     STR_106:
  4207  00FBC2  62                 	db	98	;'b'
  4208  00FBC3  65                 	db	101	;'e'
  4209  00FBC4  64                 	db	100	;'d'
  4210  00FBC5  72                 	db	114	;'r'
  4211  00FBC6  6F                 	db	111	;'o'
  4212  00FBC7  6F                 	db	111	;'o'
  4213  00FBC8  6D                 	db	109	;'m'
  4214  00FBC9  66                 	db	102	;'f'
  4215  00FBCA  61                 	db	97	;'a'
  4216  00FBCB  6E                 	db	110	;'n'
  4217  00FBCC  3D                 	db	61	;'='
  4218  00FBCD  6F                 	db	111	;'o'
  4219  00FBCE  66                 	db	102	;'f'
  4220  00FBCF  66                 	db	102	;'f'
  4221  00FBD0  00                 	db	0
  4222  00FBD1                     STR_111:
  4223  00FBD1  42                 	db	66	;'B'
  4224  00FBD2  65                 	db	101	;'e'
  4225  00FBD3  64                 	db	100	;'d'
  4226  00FBD4  72                 	db	114	;'r'
  4227  00FBD5  6F                 	db	111	;'o'
  4228  00FBD6  6F                 	db	111	;'o'
  4229  00FBD7  6D                 	db	109	;'m'
  4230  00FBD8  20                 	db	32
  4231  00FBD9  53                 	db	83	;'S'
  4232  00FBDA  4B                 	db	75	;'K'
  4233  00FBDB  52                 	db	82	;'R'
  4234  00FBDC  20                 	db	32
  4235  00FBDD  4F                 	db	79	;'O'
  4236  00FBDE  6E                 	db	110	;'n'
  4237  00FBDF  00                 	db	0
  4238  00FBE0                     STR_104:
  4239  00FBE0  42                 	db	66	;'B'
  4240  00FBE1  65                 	db	101	;'e'
  4241  00FBE2  64                 	db	100	;'d'
  4242  00FBE3  72                 	db	114	;'r'
  4243  00FBE4  6F                 	db	111	;'o'
  4244  00FBE5  6F                 	db	111	;'o'
  4245  00FBE6  6D                 	db	109	;'m'
  4246  00FBE7  20                 	db	32
  4247  00FBE8  46                 	db	70	;'F'
  4248  00FBE9  61                 	db	97	;'a'
  4249  00FBEA  6E                 	db	110	;'n'
  4250  00FBEB  20                 	db	32
  4251  00FBEC  4F                 	db	79	;'O'
  4252  00FBED  6E                 	db	110	;'n'
  4253  00FBEE  00                 	db	0
  4254  00FBEF                     STR_257:
  4255  00FBEF  4A                 	db	74	;'J'
  4256  00FBF0  6F                 	db	111	;'o'
  4257  00FBF1  65                 	db	101	;'e'
  4258  00FBF2  20                 	db	32
  4259  00FBF3  72                 	db	114	;'r'
  4260  00FBF4  6F                 	db	111	;'o'
  4261  00FBF5  6F                 	db	111	;'o'
  4262  00FBF6  6D                 	db	109	;'m'
  4263  00FBF7  20                 	db	32
  4264  00FBF8  6C                 	db	108	;'l'
  4265  00FBF9  74                 	db	116	;'t'
  4266  00FBFA  20                 	db	32
  4267  00FBFB  4F                 	db	79	;'O'
  4268  00FBFC  6E                 	db	110	;'n'
  4269  00FBFD  00                 	db	0
  4270  00FBFE                     STR_184:
  4271  00FBFE  45                 	db	69	;'E'
  4272  00FBFF  52                 	db	82	;'R'
  4273  00FC00  52                 	db	82	;'R'
  4274  00FC01  3A                 	db	58	;':'
  4275  00FC02  20                 	db	32
  4276  00FC03  4E                 	db	78	;'N'
  4277  00FC04  6F                 	db	111	;'o'
  4278  00FC05  20                 	db	32
  4279  00FC06  6E                 	db	110	;'n'
  4280  00FC07  75                 	db	117	;'u'
  4281  00FC08  6D                 	db	109	;'m'
  4282  00FC09  62                 	db	98	;'b'
  4283  00FC0A  65                 	db	101	;'e'
  4284  00FC0B  72                 	db	114	;'r'
  4285  00FC0C  00                 	db	0
  4286  00FC0D                     STR_165:
  4287  00FC0D  45                 	db	69	;'E'
  4288  00FC0E  52                 	db	82	;'R'
  4289  00FC0F  52                 	db	82	;'R'
  4290  00FC10  3A                 	db	58	;':'
  4291  00FC11  20                 	db	32
  4292  00FC12  6E                 	db	110	;'n'
  4293  00FC13  6F                 	db	111	;'o'
  4294  00FC14  20                 	db	32
  4295  00FC15  6E                 	db	110	;'n'
  4296  00FC16  75                 	db	117	;'u'
  4297  00FC17  6D                 	db	109	;'m'
  4298  00FC18  62                 	db	98	;'b'
  4299  00FC19  65                 	db	101	;'e'
  4300  00FC1A  72                 	db	114	;'r'
  4301  00FC1B  00                 	db	0
  4302  00FC1C                     STR_17:
  4303  00FC1C  53                 	db	83	;'S'
  4304  00FC1D  74                 	db	116	;'t'
  4305  00FC1E  61                 	db	97	;'a'
  4306  00FC1F  72                 	db	114	;'r'
  4307  00FC20  74                 	db	116	;'t'
  4308  00FC21  69                 	db	105	;'i'
  4309  00FC22  6E                 	db	110	;'n'
  4310  00FC23  67                 	db	103	;'g'
  4311  00FC24  2E                 	db	46
  4312  00FC25  2E                 	db	46
  4313  00FC26  2E                 	db	46
  4314  00FC27  2E                 	db	46
  4315  00FC28  2E                 	db	46
  4316  00FC29  2E                 	db	46
  4317  00FC2A  00                 	db	0
  4318  00FC2B                     STR_188:
  4319  00FC2B  45                 	db	69	;'E'
  4320  00FC2C  52                 	db	82	;'R'
  4321  00FC2D  52                 	db	82	;'R'
  4322  00FC2E  3A                 	db	58	;':'
  4323  00FC2F  20                 	db	32
  4324  00FC30  43                 	db	67	;'C'
  4325  00FC31  4E                 	db	78	;'N'
  4326  00FC32  53                 	db	83	;'S'
  4327  00FC33  54                 	db	84	;'T'
  4328  00FC34  20                 	db	32
  4329  00FC35  3C                 	db	60	;'<'
  4330  00FC36  20                 	db	32
  4331  00FC37  30                 	db	48	;'0'
  4332  00FC38  00                 	db	0
  4333  00FC39                     STR_169:
  4334  00FC39  45                 	db	69	;'E'
  4335  00FC3A  52                 	db	82	;'R'
  4336  00FC3B  52                 	db	82	;'R'
  4337  00FC3C  3A                 	db	58	;':'
  4338  00FC3D  20                 	db	32
  4339  00FC3E  44                 	db	68	;'D'
  4340  00FC3F  75                 	db	117	;'u'
  4341  00FC40  74                 	db	116	;'t'
  4342  00FC41  79                 	db	121	;'y'
  4343  00FC42  20                 	db	32
  4344  00FC43  3C                 	db	60	;'<'
  4345  00FC44  20                 	db	32
  4346  00FC45  30                 	db	48	;'0'
  4347  00FC46  00                 	db	0
  4348  00FC47                     STR_290:
  4349  00FC47  44                 	db	68	;'D'
  4350  00FC48  65                 	db	101	;'e'
  4351  00FC49  76                 	db	118	;'v'
  4352  00FC4A  69                 	db	105	;'i'
  4353  00FC4B  63                 	db	99	;'c'
  4354  00FC4C  65                 	db	101	;'e'
  4355  00FC4D  20                 	db	32
  4356  00FC4E  4D                 	db	77	;'M'
  4357  00FC4F  65                 	db	101	;'e'
  4358  00FC50  6E                 	db	110	;'n'
  4359  00FC51  75                 	db	117	;'u'
  4360  00FC52  73                 	db	115	;'s'
  4361  00FC53  3A                 	db	58	;':'
  4362  00FC54  00                 	db	0
  4363  00FC55                     STR_313:
  4364  00FC55  65                 	db	101	;'e'
  4365  00FC56  6E                 	db	110	;'n'
  4366  00FC57  74                 	db	116	;'t'
  4367  00FC58  65                 	db	101	;'e'
  4368  00FC59  72                 	db	114	;'r'
  4369  00FC5A  62                 	db	98	;'b'
  4370  00FC5B  61                 	db	97	;'a'
  4371  00FC5C  75                 	db	117	;'u'
  4372  00FC5D  64                 	db	100	;'d'
  4373  00FC5E  72                 	db	114	;'r'
  4374  00FC5F  61                 	db	97	;'a'
  4375  00FC60  74                 	db	116	;'t'
  4376  00FC61  65                 	db	101	;'e'
  4377  00FC62  00                 	db	0
  4378  00FC63                     STR_141:
  4379  00FC63  58                 	db	88	;'X'
  4380  00FC64  4D                 	db	77	;'M'
  4381  00FC65  41                 	db	65	;'A'
  4382  00FC66  53                 	db	83	;'S'
  4383  00FC67  20                 	db	32
  4384  00FC68  57                 	db	87	;'W'
  4385  00FC69  68                 	db	104	;'h'
  4386  00FC6A  69                 	db	105	;'i'
  4387  00FC6B  74                 	db	116	;'t'
  4388  00FC6C  65                 	db	101	;'e'
  4389  00FC6D  20                 	db	32
  4390  00FC6E  4F                 	db	79	;'O'
  4391  00FC6F  6E                 	db	110	;'n'
  4392  00FC70  00                 	db	0
  4393  00FC71                     STR_78:
  4394  00FC71  4C                 	db	76	;'L'
  4395  00FC72  56                 	db	86	;'V'
  4396  00FC73  4E                 	db	78	;'N'
  4397  00FC74  47                 	db	71	;'G'
  4398  00FC75  20                 	db	32
  4399  00FC76  52                 	db	82	;'R'
  4400  00FC77  6D                 	db	109	;'m'
  4401  00FC78  20                 	db	32
  4402  00FC79  4C                 	db	76	;'L'
  4403  00FC7A  74                 	db	116	;'t'
  4404  00FC7B  20                 	db	32
  4405  00FC7C  4F                 	db	79	;'O'
  4406  00FC7D  6E                 	db	110	;'n'
  4407  00FC7E  00                 	db	0
  4408  00FC7F                     STR_105:
  4409  00FC7F  42                 	db	66	;'B'
  4410  00FC80  65                 	db	101	;'e'
  4411  00FC81  64                 	db	100	;'d'
  4412  00FC82  72                 	db	114	;'r'
  4413  00FC83  6F                 	db	111	;'o'
  4414  00FC84  6F                 	db	111	;'o'
  4415  00FC85  6D                 	db	109	;'m'
  4416  00FC86  20                 	db	32
  4417  00FC87  4C                 	db	76	;'L'
  4418  00FC88  74                 	db	116	;'t'
  4419  00FC89  20                 	db	32
  4420  00FC8A  4F                 	db	79	;'O'
  4421  00FC8B  6E                 	db	110	;'n'
  4422  00FC8C  00                 	db	0
  4423  00FC8D                     STR_103:
  4424  00FC8D  62                 	db	98	;'b'
  4425  00FC8E  65                 	db	101	;'e'
  4426  00FC8F  64                 	db	100	;'d'
  4427  00FC90  72                 	db	114	;'r'
  4428  00FC91  6F                 	db	111	;'o'
  4429  00FC92  6F                 	db	111	;'o'
  4430  00FC93  6D                 	db	109	;'m'
  4431  00FC94  66                 	db	102	;'f'
  4432  00FC95  61                 	db	97	;'a'
  4433  00FC96  6E                 	db	110	;'n'
  4434  00FC97  3D                 	db	61	;'='
  4435  00FC98  6F                 	db	111	;'o'
  4436  00FC99  6E                 	db	110	;'n'
  4437  00FC9A  00                 	db	0
  4438  00FC9B                     STR_268:
  4439  00FC9B  4A                 	db	74	;'J'
  4440  00FC9C  6F                 	db	111	;'o'
  4441  00FC9D  65                 	db	101	;'e'
  4442  00FC9E  20                 	db	32
  4443  00FC9F  72                 	db	114	;'r'
  4444  00FCA0  6F                 	db	111	;'o'
  4445  00FCA1  6F                 	db	111	;'o'
  4446  00FCA2  6D                 	db	109	;'m'
  4447  00FCA3  20                 	db	32
  4448  00FCA4  4D                 	db	77	;'M'
  4449  00FCA5  65                 	db	101	;'e'
  4450  00FCA6  6E                 	db	110	;'n'
  4451  00FCA7  75                 	db	117	;'u'
  4452  00FCA8  00                 	db	0
  4453  00FCA9                     STR_91:
  4454  00FCA9  4C                 	db	76	;'L'
  4455  00FCAA  56                 	db	86	;'V'
  4456  00FCAB  4E                 	db	78	;'N'
  4457  00FCAC  47                 	db	71	;'G'
  4458  00FCAD  72                 	db	114	;'r'
  4459  00FCAE  6F                 	db	111	;'o'
  4460  00FCAF  6F                 	db	111	;'o'
  4461  00FCB0  6D                 	db	109	;'m'
  4462  00FCB1  20                 	db	32
  4463  00FCB2  4D                 	db	77	;'M'
  4464  00FCB3  65                 	db	101	;'e'
  4465  00FCB4  6E                 	db	110	;'n'
  4466  00FCB5  75                 	db	117	;'u'
  4467  00FCB6  00                 	db	0
  4468  00FCB7                     STR_16:
  4469  00FCB7  53                 	db	83	;'S'
  4470  00FCB8  74                 	db	116	;'t'
  4471  00FCB9  61                 	db	97	;'a'
  4472  00FCBA  72                 	db	114	;'r'
  4473  00FCBB  74                 	db	116	;'t'
  4474  00FCBC  69                 	db	105	;'i'
  4475  00FCBD  6E                 	db	110	;'n'
  4476  00FCBE  67                 	db	103	;'g'
  4477  00FCBF  2E                 	db	46
  4478  00FCC0  2E                 	db	46
  4479  00FCC1  2E                 	db	46
  4480  00FCC2  2E                 	db	46
  4481  00FCC3  2E                 	db	46
  4482  00FCC4  00                 	db	0
  4483  00FCC5                     STR_9:
  4484  00FCC5  45                 	db	69	;'E'
  4485  00FCC6  72                 	db	114	;'r'
  4486  00FCC7  72                 	db	114	;'r'
  4487  00FCC8  3A                 	db	58	;':'
  4488  00FCC9  20                 	db	32
  4489  00FCCA  42                 	db	66	;'B'
  4490  00FCCB  61                 	db	97	;'a'
  4491  00FCCC  75                 	db	117	;'u'
  4492  00FCCD  64                 	db	100	;'d'
  4493  00FCCE  20                 	db	32
  4494  00FCCF  4D                 	db	77	;'M'
  4495  00FCD0  65                 	db	101	;'e'
  4496  00FCD1  6D                 	db	109	;'m'
  4497  00FCD2  00                 	db	0
  4498  00FCD3                     STR_214:
  4499  00FCD3  69                 	db	105	;'i'
  4500  00FCD4  2E                 	db	46
  4501  00FCD5  65                 	db	101	;'e'
  4502  00FCD6  2E                 	db	46
  4503  00FCD7  20                 	db	32
  4504  00FCD8  41                 	db	65	;'A'
  4505  00FCD9  44                 	db	68	;'D'
  4506  00FCDA  43                 	db	67	;'C'
  4507  00FCDB  20                 	db	32
  4508  00FCDC  30                 	db	48	;'0'
  4509  00FCDD  0D                 	db	13
  4510  00FCDE  0A                 	db	10
  4511  00FCDF  00                 	db	0
  4512  00FCE0                     STR_274:
  4513  00FCE0  4C                 	db	76	;'L'
  4514  00FCE1  69                 	db	105	;'i'
  4515  00FCE2  76                 	db	118	;'v'
  4516  00FCE3  69                 	db	105	;'i'
  4517  00FCE4  6E                 	db	110	;'n'
  4518  00FCE5  67                 	db	103	;'g'
  4519  00FCE6  72                 	db	114	;'r'
  4520  00FCE7  6F                 	db	111	;'o'
  4521  00FCE8  6F                 	db	111	;'o'
  4522  00FCE9  6D                 	db	109	;'m'
  4523  00FCEA  0D                 	db	13
  4524  00FCEB  0A                 	db	10
  4525  00FCEC  00                 	db	0
  4526  00FCED                     STR_239:
  4527  00FCED  52                 	db	82	;'R'
  4528  00FCEE  54                 	db	84	;'T'
  4529  00FCEF  43                 	db	67	;'C'
  4530  00FCF0  20                 	db	32
  4531  00FCF1  57                 	db	87	;'W'
  4532  00FCF2  68                 	db	104	;'h'
  4533  00FCF3  61                 	db	97	;'a'
  4534  00FCF4  74                 	db	116	;'t'
  4535  00FCF5  3F                 	db	63	;'?'
  4536  00FCF6  3F                 	db	63	;'?'
  4537  00FCF7  3F                 	db	63	;'?'
  4538  00FCF8  0A                 	db	10
  4539  00FCF9  00                 	db	0
  4540  00FCFA                     STR_201:
  4541  00FCFA  45                 	db	69	;'E'
  4542  00FCFB  52                 	db	82	;'R'
  4543  00FCFC  52                 	db	82	;'R'
  4544  00FCFD  3A                 	db	58	;':'
  4545  00FCFE  20                 	db	32
  4546  00FCFF  55                 	db	85	;'U'
  4547  00FD00  73                 	db	115	;'s'
  4548  00FD01  65                 	db	101	;'e'
  4549  00FD02  20                 	db	32
  4550  00FD03  31                 	db	49	;'1'
  4551  00FD04  20                 	db	32
  4552  00FD05  3D                 	db	61	;'='
  4553  00FD06  00                 	db	0
  4554  00FD07                     STR_147:
  4555  00FD07  58                 	db	88	;'X'
  4556  00FD08  4D                 	db	77	;'M'
  4557  00FD09  41                 	db	65	;'A'
  4558  00FD0A  53                 	db	83	;'S'
  4559  00FD0B  20                 	db	32
  4560  00FD0C  57                 	db	87	;'W'
  4561  00FD0D  68                 	db	104	;'h'
  4562  00FD0E  61                 	db	97	;'a'
  4563  00FD0F  74                 	db	116	;'t'
  4564  00FD10  3F                 	db	63	;'?'
  4565  00FD11  3F                 	db	63	;'?'
  4566  00FD12  3F                 	db	63	;'?'
  4567  00FD13  00                 	db	0
  4568  00FD14                     STR_209:
  4569  00FD14  43                 	db	67	;'C'
  4570  00FD15  68                 	db	104	;'h'
  4571  00FD16  6E                 	db	110	;'n'
  4572  00FD17  6C                 	db	108	;'l'
  4573  00FD18  20                 	db	32
  4574  00FD19  25                 	db	37
  4575  00FD1A  64                 	db	100	;'d'
  4576  00FD1B  20                 	db	32
  4577  00FD1C  3D                 	db	61	;'='
  4578  00FD1D  20                 	db	32
  4579  00FD1E  25                 	db	37
  4580  00FD1F  64                 	db	100	;'d'
  4581  00FD20  00                 	db	0
  4582  00FD21                     STR_41:
  4583  00FD21  4C                 	db	76	;'L'
  4584  00FD22  45                 	db	69	;'E'
  4585  00FD23  44                 	db	68	;'D'
  4586  00FD24  30                 	db	48	;'0'
  4587  00FD25  20                 	db	32
  4588  00FD26  54                 	db	84	;'T'
  4589  00FD27  6F                 	db	111	;'o'
  4590  00FD28  67                 	db	103	;'g'
  4591  00FD29  67                 	db	103	;'g'
  4592  00FD2A  6C                 	db	108	;'l'
  4593  00FD2B  65                 	db	101	;'e'
  4594  00FD2C  64                 	db	100	;'d'
  4595  00FD2D  00                 	db	0
  4596  00FD2E                     STR_50:
  4597  00FD2E  4C                 	db	76	;'L'
  4598  00FD2F  45                 	db	69	;'E'
  4599  00FD30  44                 	db	68	;'D'
  4600  00FD31  31                 	db	49	;'1'
  4601  00FD32  20                 	db	32
  4602  00FD33  54                 	db	84	;'T'
  4603  00FD34  6F                 	db	111	;'o'
  4604  00FD35  67                 	db	103	;'g'
  4605  00FD36  67                 	db	103	;'g'
  4606  00FD37  6C                 	db	108	;'l'
  4607  00FD38  65                 	db	101	;'e'
  4608  00FD39  64                 	db	100	;'d'
  4609  00FD3A  00                 	db	0
  4610  00FD3B                     STR_310:
  4611  00FD3B  77                 	db	119	;'w'
  4612  00FD3C  69                 	db	105	;'i'
  4613  00FD3D  74                 	db	116	;'t'
  4614  00FD3E  68                 	db	104	;'h'
  4615  00FD3F  73                 	db	115	;'s'
  4616  00FD40  70                 	db	112	;'p'
  4617  00FD41  61                 	db	97	;'a'
  4618  00FD42  63                 	db	99	;'c'
  4619  00FD43  65                 	db	101	;'e'
  4620  00FD44  62                 	db	98	;'b'
  4621  00FD45  69                 	db	105	;'i'
  4622  00FD46  74                 	db	116	;'t'
  4623  00FD47  00                 	db	0
  4624  00FD48                     STR_194:
  4625  00FD48  4C                 	db	76	;'L'
  4626  00FD49  43                 	db	67	;'C'
  4627  00FD4A  44                 	db	68	;'D'
  4628  00FD4B  20                 	db	32
  4629  00FD4C  43                 	db	67	;'C'
  4630  00FD4D  6F                 	db	111	;'o'
  4631  00FD4E  6E                 	db	110	;'n'
  4632  00FD4F  74                 	db	116	;'t'
  4633  00FD50  72                 	db	114	;'r'
  4634  00FD51  61                 	db	97	;'a'
  4635  00FD52  73                 	db	115	;'s'
  4636  00FD53  74                 	db	116	;'t'
  4637  00FD54  00                 	db	0
  4638  00FD55                     STR_125:
  4639  00FD55  42                 	db	66	;'B'
  4640  00FD56  65                 	db	101	;'e'
  4641  00FD57  64                 	db	100	;'d'
  4642  00FD58  72                 	db	114	;'r'
  4643  00FD59  6F                 	db	111	;'o'
  4644  00FD5A  6F                 	db	111	;'o'
  4645  00FD5B  6D                 	db	109	;'m'
  4646  00FD5C  20                 	db	32
  4647  00FD5D  4D                 	db	77	;'M'
  4648  00FD5E  65                 	db	101	;'e'
  4649  00FD5F  6E                 	db	110	;'n'
  4650  00FD60  75                 	db	117	;'u'
  4651  00FD61  00                 	db	0
  4652  00FD62                     STR_15:
  4653  00FD62  53                 	db	83	;'S'
  4654  00FD63  74                 	db	116	;'t'
  4655  00FD64  61                 	db	97	;'a'
  4656  00FD65  72                 	db	114	;'r'
  4657  00FD66  74                 	db	116	;'t'
  4658  00FD67  69                 	db	105	;'i'
  4659  00FD68  6E                 	db	110	;'n'
  4660  00FD69  67                 	db	103	;'g'
  4661  00FD6A  2E                 	db	46
  4662  00FD6B  2E                 	db	46
  4663  00FD6C  2E                 	db	46
  4664  00FD6D  2E                 	db	46
  4665  00FD6E  00                 	db	0
  4666  00FD6F                     STR_272:
  4667  00FD6F  44                 	db	68	;'D'
  4668  00FD70  65                 	db	101	;'e'
  4669  00FD71  76                 	db	118	;'v'
  4670  00FD72  69                 	db	105	;'i'
  4671  00FD73  63                 	db	99	;'c'
  4672  00FD74  65                 	db	101	;'e'
  4673  00FD75  73                 	db	115	;'s'
  4674  00FD76  3A                 	db	58	;':'
  4675  00FD77  0D                 	db	13
  4676  00FD78  0A                 	db	10
  4677  00FD79  0A                 	db	10
  4678  00FD7A  00                 	db	0
  4679  00FD7B                     STR_211:
  4680  00FD7B  43                 	db	67	;'C'
  4681  00FD7C  68                 	db	104	;'h'
  4682  00FD7D  61                 	db	97	;'a'
  4683  00FD7E  6E                 	db	110	;'n'
  4684  00FD7F  6E                 	db	110	;'n'
  4685  00FD80  65                 	db	101	;'e'
  4686  00FD81  6C                 	db	108	;'l'
  4687  00FD82  73                 	db	115	;'s'
  4688  00FD83  3A                 	db	58	;':'
  4689  00FD84  0D                 	db	13
  4690  00FD85  0A                 	db	10
  4691  00FD86  00                 	db	0
  4692  00FD87                     STR_275:
  4693  00FD87  4A                 	db	74	;'J'
  4694  00FD88  6F                 	db	111	;'o'
  4695  00FD89  65                 	db	101	;'e'
  4696  00FD8A  73                 	db	115	;'s'
  4697  00FD8B  20                 	db	32
  4698  00FD8C  72                 	db	114	;'r'
  4699  00FD8D  6F                 	db	111	;'o'
  4700  00FD8E  6F                 	db	111	;'o'
  4701  00FD8F  6D                 	db	109	;'m'
  4702  00FD90  0D                 	db	13
  4703  00FD91  0A                 	db	10
  4704  00FD92  00                 	db	0
  4705  00FD93                     STR_292:
  4706  00FD93  4C                 	db	76	;'L'
  4707  00FD94  69                 	db	105	;'i'
  4708  00FD95  76                 	db	118	;'v'
  4709  00FD96  69                 	db	105	;'i'
  4710  00FD97  6E                 	db	110	;'n'
  4711  00FD98  67                 	db	103	;'g'
  4712  00FD99  72                 	db	114	;'r'
  4713  00FD9A  6F                 	db	111	;'o'
  4714  00FD9B  6F                 	db	111	;'o'
  4715  00FD9C  6D                 	db	109	;'m'
  4716  00FD9D  3F                 	db	63	;'?'
  4717  00FD9E  00                 	db	0
  4718  00FD9F                     STR_309:
  4719  00FD9F  77                 	db	119	;'w'
  4720  00FDA0  69                 	db	105	;'i'
  4721  00FDA1  74                 	db	116	;'t'
  4722  00FDA2  68                 	db	104	;'h'
  4723  00FDA3  6D                 	db	109	;'m'
  4724  00FDA4  61                 	db	97	;'a'
  4725  00FDA5  72                 	db	114	;'r'
  4726  00FDA6  6B                 	db	107	;'k'
  4727  00FDA7  62                 	db	98	;'b'
  4728  00FDA8  69                 	db	105	;'i'
  4729  00FDA9  74                 	db	116	;'t'
  4730  00FDAA  00                 	db	0
  4731  00FDAB                     STR_11:
  4732  00FDAB  53                 	db	83	;'S'
  4733  00FDAC  74                 	db	116	;'t'
  4734  00FDAD  61                 	db	97	;'a'
  4735  00FDAE  72                 	db	114	;'r'
  4736  00FDAF  74                 	db	116	;'t'
  4737  00FDB0  69                 	db	105	;'i'
  4738  00FDB1  6E                 	db	110	;'n'
  4739  00FDB2  67                 	db	103	;'g'
  4740  00FDB3  2E                 	db	46
  4741  00FDB4  2E                 	db	46
  4742  00FDB5  2E                 	db	46
  4743  00FDB6  00                 	db	0
  4744  00FDB7                     STR_61:
  4745  00FDB7  44                 	db	68	;'D'
  4746  00FDB8  65                 	db	101	;'e'
  4747  00FDB9  76                 	db	118	;'v'
  4748  00FDBA  69                 	db	105	;'i'
  4749  00FDBB  63                 	db	99	;'c'
  4750  00FDBC  65                 	db	101	;'e'
  4751  00FDBD  73                 	db	115	;'s'
  4752  00FDBE  3A                 	db	58	;':'
  4753  00FDBF  0D                 	db	13
  4754  00FDC0  0A                 	db	10
  4755  00FDC1  00                 	db	0
  4756  00FDC2                     STR_241:
  4757  00FDC2  41                 	db	65	;'A'
  4758  00FDC3  63                 	db	99	;'c'
  4759  00FDC4  74                 	db	116	;'t'
  4760  00FDC5  69                 	db	105	;'i'
  4761  00FDC6  6F                 	db	111	;'o'
  4762  00FDC7  6E                 	db	110	;'n'
  4763  00FDC8  73                 	db	115	;'s'
  4764  00FDC9  3A                 	db	58	;':'
  4765  00FDCA  0D                 	db	13
  4766  00FDCB  0A                 	db	10
  4767  00FDCC  00                 	db	0
  4768  00FDCD                     STR_277:
  4769  00FDCD  43                 	db	67	;'C'
  4770  00FDCE  6F                 	db	111	;'o'
  4771  00FDCF  6E                 	db	110	;'n'
  4772  00FDD0  74                 	db	116	;'t'
  4773  00FDD1  72                 	db	114	;'r'
  4774  00FDD2  61                 	db	97	;'a'
  4775  00FDD3  73                 	db	115	;'s'
  4776  00FDD4  74                 	db	116	;'t'
  4777  00FDD5  0D                 	db	13
  4778  00FDD6  0A                 	db	10
  4779  00FDD7  00                 	db	0
  4780  00FDD8                     STR_293:
  4781  00FDD8  4A                 	db	74	;'J'
  4782  00FDD9  6F                 	db	111	;'o'
  4783  00FDDA  65                 	db	101	;'e'
  4784  00FDDB  73                 	db	115	;'s'
  4785  00FDDC  20                 	db	32
  4786  00FDDD  52                 	db	82	;'R'
  4787  00FDDE  6F                 	db	111	;'o'
  4788  00FDDF  6F                 	db	111	;'o'
  4789  00FDE0  6D                 	db	109	;'m'
  4790  00FDE1  3F                 	db	63	;'?'
  4791  00FDE2  00                 	db	0
  4792  00FDE3                     STR_304:
  4793  00FDE3  63                 	db	99	;'c'
  4794  00FDE4  68                 	db	104	;'h'
  4795  00FDE5  61                 	db	97	;'a'
  4796  00FDE6  6E                 	db	110	;'n'
  4797  00FDE7  67                 	db	103	;'g'
  4798  00FDE8  65                 	db	101	;'e'
  4799  00FDE9  62                 	db	98	;'b'
  4800  00FDEA  61                 	db	97	;'a'
  4801  00FDEB  75                 	db	117	;'u'
  4802  00FDEC  64                 	db	100	;'d'
  4803  00FDED  00                 	db	0
  4804  00FDEE                     STR_70:
  4805  00FDEE  6C                 	db	108	;'l'
  4806  00FDEF  69                 	db	105	;'i'
  4807  00FDF0  76                 	db	118	;'v'
  4808  00FDF1  69                 	db	105	;'i'
  4809  00FDF2  6E                 	db	110	;'n'
  4810  00FDF3  67                 	db	103	;'g'
  4811  00FDF4  72                 	db	114	;'r'
  4812  00FDF5  6F                 	db	111	;'o'
  4813  00FDF6  6F                 	db	111	;'o'
  4814  00FDF7  6D                 	db	109	;'m'
  4815  00FDF8  00                 	db	0
  4816  00FDF9                     STR_13:
  4817  00FDF9  53                 	db	83	;'S'
  4818  00FDFA  74                 	db	116	;'t'
  4819  00FDFB  61                 	db	97	;'a'
  4820  00FDFC  72                 	db	114	;'r'
  4821  00FDFD  74                 	db	116	;'t'
  4822  00FDFE  69                 	db	105	;'i'
  4823  00FDFF  6E                 	db	110	;'n'
  4824  00FE00  67                 	db	103	;'g'
  4825  00FE01  2E                 	db	46
  4826  00FE02  2E                 	db	46
  4827  00FE03  00                 	db	0
  4828  00FE04                     STR_121:
  4829  00FE04  73                 	db	115	;'s'
  4830  00FE05  68                 	db	104	;'h'
  4831  00FE06  61                 	db	97	;'a'
  4832  00FE07  6B                 	db	107	;'k'
  4833  00FE08  65                 	db	101	;'e'
  4834  00FE09  72                 	db	114	;'r'
  4835  00FE0A  0D                 	db	13
  4836  00FE0B  0A                 	db	10
  4837  00FE0C  0A                 	db	10
  4838  00FE0D  00                 	db	0
  4839  00FE0E                     STR_273:
  4840  00FE0E  42                 	db	66	;'B'
  4841  00FE0F  65                 	db	101	;'e'
  4842  00FE10  64                 	db	100	;'d'
  4843  00FE11  72                 	db	114	;'r'
  4844  00FE12  6F                 	db	111	;'o'
  4845  00FE13  6F                 	db	111	;'o'
  4846  00FE14  6D                 	db	109	;'m'
  4847  00FE15  0D                 	db	13
  4848  00FE16  0A                 	db	10
  4849  00FE17  00                 	db	0
  4850  00FE18                     STR_242:
  4851  00FE18  42                 	db	66	;'B'
  4852  00FE19  61                 	db	97	;'a'
  4853  00FE1A  74                 	db	116	;'t'
  4854  00FE1B  74                 	db	116	;'t'
  4855  00FE1C  65                 	db	101	;'e'
  4856  00FE1D  72                 	db	114	;'r'
  4857  00FE1E  79                 	db	121	;'y'
  4858  00FE1F  0D                 	db	13
  4859  00FE20  0A                 	db	10
  4860  00FE21  00                 	db	0
  4861  00FE22                     STR_179:
  4862  00FE22  52                 	db	82	;'R'
  4863  00FE23  65                 	db	101	;'e'
  4864  00FE24  64                 	db	100	;'d'
  4865  00FE25  20                 	db	32
  4866  00FE26  4C                 	db	76	;'L'
  4867  00FE27  45                 	db	69	;'E'
  4868  00FE28  44                 	db	68	;'D'
  4869  00FE29  3D                 	db	61	;'='
  4870  00FE2A  23                 	db	35
  4871  00FE2B  00                 	db	0
  4872  00FE2C                     STR_196:
  4873  00FE2C  43                 	db	67	;'C'
  4874  00FE2D  6F                 	db	111	;'o'
  4875  00FE2E  6E                 	db	110	;'n'
  4876  00FE2F  74                 	db	116	;'t'
  4877  00FE30  72                 	db	114	;'r'
  4878  00FE31  61                 	db	97	;'a'
  4879  00FE32  73                 	db	115	;'s'
  4880  00FE33  74                 	db	116	;'t'
  4881  00FE34  23                 	db	35
  4882  00FE35  00                 	db	0
  4883  00FE36                     STR_178:
  4884  00FE36  43                 	db	67	;'C'
  4885  00FE37  6F                 	db	111	;'o'
  4886  00FE38  6D                 	db	109	;'m'
  4887  00FE39  6D                 	db	109	;'m'
  4888  00FE3A  61                 	db	97	;'a'
  4889  00FE3B  6E                 	db	110	;'n'
  4890  00FE3C  64                 	db	100	;'d'
  4891  00FE3D  73                 	db	115	;'s'
  4892  00FE3E  3A                 	db	58	;':'
  4893  00FE3F  00                 	db	0
  4894  00FE40                     STR_295:
  4895  00FE40  43                 	db	67	;'C'
  4896  00FE41  6F                 	db	111	;'o'
  4897  00FE42  6E                 	db	110	;'n'
  4898  00FE43  74                 	db	116	;'t'
  4899  00FE44  72                 	db	114	;'r'
  4900  00FE45  61                 	db	97	;'a'
  4901  00FE46  73                 	db	115	;'s'
  4902  00FE47  74                 	db	116	;'t'
  4903  00FE48  3F                 	db	63	;'?'
  4904  00FE49  00                 	db	0
  4905  00FE4A                     STR_300:
  4906  00FE4A  42                 	db	66	;'B'
  4907  00FE4B  41                 	db	65	;'A'
  4908  00FE4C  55                 	db	85	;'U'
  4909  00FE4D  44                 	db	68	;'D'
  4910  00FE4E  20                 	db	32
  4911  00FE4F  3D                 	db	61	;'='
  4912  00FE50  20                 	db	32
  4913  00FE51  25                 	db	37
  4914  00FE52  64                 	db	100	;'d'
  4915  00FE53  00                 	db	0
  4916  00FE54                     STR_132:
  4917  00FE54  63                 	db	99	;'c'
  4918  00FE55  68                 	db	104	;'h'
  4919  00FE56  72                 	db	114	;'r'
  4920  00FE57  69                 	db	105	;'i'
  4921  00FE58  73                 	db	115	;'s'
  4922  00FE59  74                 	db	116	;'t'
  4923  00FE5A  6D                 	db	109	;'m'
  4924  00FE5B  61                 	db	97	;'a'
  4925  00FE5C  73                 	db	115	;'s'
  4926  00FE5D  00                 	db	0
  4927  00FE5E                     STR_154:
  4928  00FE5E  58                 	db	88	;'X'
  4929  00FE5F  4D                 	db	77	;'M'
  4930  00FE60  41                 	db	65	;'A'
  4931  00FE61  53                 	db	83	;'S'
  4932  00FE62  20                 	db	32
  4933  00FE63  4D                 	db	77	;'M'
  4934  00FE64  65                 	db	101	;'e'
  4935  00FE65  6E                 	db	110	;'n'
  4936  00FE66  75                 	db	117	;'u'
  4937  00FE67  00                 	db	0
  4938  00FE68                     STR_284:
  4939  00FE68  48                 	db	72	;'H'
  4940  00FE69  65                 	db	101	;'e'
  4941  00FE6A  6C                 	db	108	;'l'
  4942  00FE6B  70                 	db	112	;'p'
  4943  00FE6C  20                 	db	32
  4944  00FE6D  4D                 	db	77	;'M'
  4945  00FE6E  65                 	db	101	;'e'
  4946  00FE6F  6E                 	db	110	;'n'
  4947  00FE70  75                 	db	117	;'u'
  4948  00FE71  00                 	db	0
  4949  00FE72                     STR_20:
  4950  00FE72  45                 	db	69	;'E'
  4951  00FE73  6E                 	db	110	;'n'
  4952  00FE74  74                 	db	116	;'t'
  4953  00FE75  65                 	db	101	;'e'
  4954  00FE76  72                 	db	114	;'r'
  4955  00FE77  20                 	db	32
  4956  00FE78  27                 	db	39
  4957  00FE79  3F                 	db	63	;'?'
  4958  00FE7A  27                 	db	39
  4959  00FE7B  00                 	db	0
  4960  00FE7C                     STR_12:
  4961  00FE7C  53                 	db	83	;'S'
  4962  00FE7D  74                 	db	116	;'t'
  4963  00FE7E  61                 	db	97	;'a'
  4964  00FE7F  72                 	db	114	;'r'
  4965  00FE80  74                 	db	116	;'t'
  4966  00FE81  69                 	db	105	;'i'
  4967  00FE82  6E                 	db	110	;'n'
  4968  00FE83  67                 	db	103	;'g'
  4969  00FE84  2E                 	db	46
  4970  00FE85  00                 	db	0
  4971  00FE86                     STR_265:
  4972  00FE86  4C                 	db	76	;'L'
  4973  00FE87  69                 	db	105	;'i'
  4974  00FE88  67                 	db	103	;'g'
  4975  00FE89  68                 	db	104	;'h'
  4976  00FE8A  74                 	db	116	;'t'
  4977  00FE8B  0D                 	db	13
  4978  00FE8C  0A                 	db	10
  4979  00FE8D  0A                 	db	10
  4980  00FE8E  00                 	db	0
  4981  00FE8F                     STR_67:
  4982  00FE8F  44                 	db	68	;'D'
  4983  00FE90  65                 	db	101	;'e'
  4984  00FE91  76                 	db	118	;'v'
  4985  00FE92  69                 	db	105	;'i'
  4986  00FE93  63                 	db	99	;'c'
  4987  00FE94  65                 	db	101	;'e'
  4988  00FE95  73                 	db	115	;'s'
  4989  00FE96  3A                 	db	58	;':'
  4990  00FE97  00                 	db	0
  4991  00FE98                     STR_291:
  4992  00FE98  42                 	db	66	;'B'
  4993  00FE99  65                 	db	101	;'e'
  4994  00FE9A  64                 	db	100	;'d'
  4995  00FE9B  72                 	db	114	;'r'
  4996  00FE9C  6F                 	db	111	;'o'
  4997  00FE9D  6F                 	db	111	;'o'
  4998  00FE9E  6D                 	db	109	;'m'
  4999  00FE9F  3F                 	db	63	;'?'
  5000  00FEA0  00                 	db	0
  5001  00FEA1                     STR_47:
  5002  00FEA1  4C                 	db	76	;'L'
  5003  00FEA2  45                 	db	69	;'E'
  5004  00FEA3  44                 	db	68	;'D'
  5005  00FEA4  30                 	db	48	;'0'
  5006  00FEA5  20                 	db	32
  5007  00FEA6  4F                 	db	79	;'O'
  5008  00FEA7  66                 	db	102	;'f'
  5009  00FEA8  66                 	db	102	;'f'
  5010  00FEA9  00                 	db	0
  5011  00FEAA                     STR_56:
  5012  00FEAA  4C                 	db	76	;'L'
  5013  00FEAB  45                 	db	69	;'E'
  5014  00FEAC  44                 	db	68	;'D'
  5015  00FEAD  31                 	db	49	;'1'
  5016  00FEAE  20                 	db	32
  5017  00FEAF  4F                 	db	79	;'O'
  5018  00FEB0  66                 	db	102	;'f'
  5019  00FEB1  66                 	db	102	;'f'
  5020  00FEB2  00                 	db	0
  5021  00FEB3                     STR_46:
  5022  00FEB3  6C                 	db	108	;'l'
  5023  00FEB4  65                 	db	101	;'e'
  5024  00FEB5  64                 	db	100	;'d'
  5025  00FEB6  30                 	db	48	;'0'
  5026  00FEB7  3D                 	db	61	;'='
  5027  00FEB8  6F                 	db	111	;'o'
  5028  00FEB9  66                 	db	102	;'f'
  5029  00FEBA  66                 	db	102	;'f'
  5030  00FEBB  00                 	db	0
  5031  00FEBC                     STR_55:
  5032  00FEBC  6C                 	db	108	;'l'
  5033  00FEBD  65                 	db	101	;'e'
  5034  00FEBE  64                 	db	100	;'d'
  5035  00FEBF  31                 	db	49	;'1'
  5036  00FEC0  3D                 	db	61	;'='
  5037  00FEC1  6F                 	db	111	;'o'
  5038  00FEC2  66                 	db	102	;'f'
  5039  00FEC3  66                 	db	102	;'f'
  5040  00FEC4  00                 	db	0
  5041  00FEC5                     STR_180:
  5042  00FEC5  63                 	db	99	;'c'
  5043  00FEC6  6F                 	db	111	;'o'
  5044  00FEC7  6E                 	db	110	;'n'
  5045  00FEC8  74                 	db	116	;'t'
  5046  00FEC9  72                 	db	114	;'r'
  5047  00FECA  61                 	db	97	;'a'
  5048  00FECB  73                 	db	115	;'s'
  5049  00FECC  74                 	db	116	;'t'
  5050  00FECD  00                 	db	0
  5051  00FECE                     STR_215:
  5052  00FECE  41                 	db	65	;'A'
  5053  00FECF  44                 	db	68	;'D'
  5054  00FED0  43                 	db	67	;'C'
  5055  00FED1  20                 	db	32
  5056  00FED2  4D                 	db	77	;'M'
  5057  00FED3  65                 	db	101	;'e'
  5058  00FED4  6E                 	db	110	;'n'
  5059  00FED5  75                 	db	117	;'u'
  5060  00FED6  00                 	db	0
  5061  00FED7                     STR_248:
  5062  00FED7  52                 	db	82	;'R'
  5063  00FED8  54                 	db	84	;'T'
  5064  00FED9  43                 	db	67	;'C'
  5065  00FEDA  20                 	db	32
  5066  00FEDB  4D                 	db	77	;'M'
  5067  00FEDC  65                 	db	101	;'e'
  5068  00FEDD  6E                 	db	110	;'n'
  5069  00FEDE  75                 	db	117	;'u'
  5070  00FEDF  00                 	db	0
  5071  00FEE0                     STR_66:
  5072  00FEE0  4C                 	db	76	;'L'
  5073  00FEE1  45                 	db	69	;'E'
  5074  00FEE2  44                 	db	68	;'D'
  5075  00FEE3  20                 	db	32
  5076  00FEE4  4D                 	db	77	;'M'
  5077  00FEE5  65                 	db	101	;'e'
  5078  00FEE6  6E                 	db	110	;'n'
  5079  00FEE7  75                 	db	117	;'u'
  5080  00FEE8  00                 	db	0
  5081  00FEE9                     STR_10:
  5082  00FEE9  53                 	db	83	;'S'
  5083  00FEEA  74                 	db	116	;'t'
  5084  00FEEB  61                 	db	97	;'a'
  5085  00FEEC  72                 	db	114	;'r'
  5086  00FEED  74                 	db	116	;'t'
  5087  00FEEE  69                 	db	105	;'i'
  5088  00FEEF  6E                 	db	110	;'n'
  5089  00FEF0  67                 	db	103	;'g'
  5090  00FEF1  00                 	db	0
  5091  00FEF2                     STR_63:
  5092  00FEF2  4C                 	db	76	;'L'
  5093  00FEF3  45                 	db	69	;'E'
  5094  00FEF4  44                 	db	68	;'D'
  5095  00FEF5  31                 	db	49	;'1'
  5096  00FEF6  0D                 	db	13
  5097  00FEF7  0A                 	db	10
  5098  00FEF8  0A                 	db	10
  5099  00FEF9  00                 	db	0
  5100  00FEFA                     STR_280:
  5101  00FEFA  42                 	db	66	;'B'
  5102  00FEFB  61                 	db	97	;'a'
  5103  00FEFC  75                 	db	117	;'u'
  5104  00FEFD  64                 	db	100	;'d'
  5105  00FEFE  0D                 	db	13
  5106  00FEFF  0A                 	db	10
  5107  00FF00  0A                 	db	10
  5108  00FF01  00                 	db	0
  5109  00FF02                     STR_86:
  5110  00FF02  6C                 	db	108	;'l'
  5111  00FF03  69                 	db	105	;'i'
  5112  00FF04  67                 	db	103	;'g'
  5113  00FF05  68                 	db	104	;'h'
  5114  00FF06  74                 	db	116	;'t'
  5115  00FF07  0D                 	db	13
  5116  00FF08  0A                 	db	10
  5117  00FF09  00                 	db	0
  5118  00FF0A                     STR_303:
  5119  00FF0A  73                 	db	115	;'s'
  5120  00FF0B  65                 	db	101	;'e'
  5121  00FF0C  74                 	db	116	;'t'
  5122  00FF0D  62                 	db	98	;'b'
  5123  00FF0E  61                 	db	97	;'a'
  5124  00FF0F  75                 	db	117	;'u'
  5125  00FF10  64                 	db	100	;'d'
  5126  00FF11  00                 	db	0
  5127  00FF12                     STR_95:
  5128  00FF12  62                 	db	98	;'b'
  5129  00FF13  65                 	db	101	;'e'
  5130  00FF14  64                 	db	100	;'d'
  5131  00FF15  72                 	db	114	;'r'
  5132  00FF16  6F                 	db	111	;'o'
  5133  00FF17  6F                 	db	111	;'o'
  5134  00FF18  6D                 	db	109	;'m'
  5135  00FF19  00                 	db	0
  5136  00FF1A                     STR_44:
  5137  00FF1A  4C                 	db	76	;'L'
  5138  00FF1B  45                 	db	69	;'E'
  5139  00FF1C  44                 	db	68	;'D'
  5140  00FF1D  30                 	db	48	;'0'
  5141  00FF1E  20                 	db	32
  5142  00FF1F  4F                 	db	79	;'O'
  5143  00FF20  6E                 	db	110	;'n'
  5144  00FF21  00                 	db	0
  5145  00FF22                     STR_53:
  5146  00FF22  4C                 	db	76	;'L'
  5147  00FF23  45                 	db	69	;'E'
  5148  00FF24  44                 	db	68	;'D'
  5149  00FF25  31                 	db	49	;'1'
  5150  00FF26  20                 	db	32
  5151  00FF27  4F                 	db	79	;'O'
  5152  00FF28  6E                 	db	110	;'n'
  5153  00FF29  00                 	db	0
  5154  00FF2A                     STR_43:
  5155  00FF2A  6C                 	db	108	;'l'
  5156  00FF2B  65                 	db	101	;'e'
  5157  00FF2C  64                 	db	100	;'d'
  5158  00FF2D  30                 	db	48	;'0'
  5159  00FF2E  3D                 	db	61	;'='
  5160  00FF2F  6F                 	db	111	;'o'
  5161  00FF30  6E                 	db	110	;'n'
  5162  00FF31  00                 	db	0
  5163  00FF32                     STR_52:
  5164  00FF32  6C                 	db	108	;'l'
  5165  00FF33  65                 	db	101	;'e'
  5166  00FF34  64                 	db	100	;'d'
  5167  00FF35  31                 	db	49	;'1'
  5168  00FF36  3D                 	db	61	;'='
  5169  00FF37  6F                 	db	111	;'o'
  5170  00FF38  6E                 	db	110	;'n'
  5171  00FF39  00                 	db	0
  5172  00FF3A                     STR_302:
  5173  00FF3A  72                 	db	114	;'r'
  5174  00FF3B  65                 	db	101	;'e'
  5175  00FF3C  73                 	db	115	;'s'
  5176  00FF3D  65                 	db	101	;'e'
  5177  00FF3E  74                 	db	116	;'t'
  5178  00FF3F  74                 	db	116	;'t'
  5179  00FF40  6F                 	db	111	;'o'
  5180  00FF41  00                 	db	0
  5181  00FF42                     STR_250:
  5182  00FF42  42                 	db	66	;'B'
  5183  00FF43  61                 	db	97	;'a'
  5184  00FF44  74                 	db	116	;'t'
  5185  00FF45  74                 	db	116	;'t'
  5186  00FF46  65                 	db	101	;'e'
  5187  00FF47  72                 	db	114	;'r'
  5188  00FF48  79                 	db	121	;'y'
  5189  00FF49  00                 	db	0
  5190  00FF4A                     STR_220:
  5191  00FF4A  62                 	db	98	;'b'
  5192  00FF4B  61                 	db	97	;'a'
  5193  00FF4C  74                 	db	116	;'t'
  5194  00FF4D  74                 	db	116	;'t'
  5195  00FF4E  65                 	db	101	;'e'
  5196  00FF4F  72                 	db	114	;'r'
  5197  00FF50  79                 	db	121	;'y'
  5198  00FF51  00                 	db	0
  5199  00FF52                     STR_87:
  5200  00FF52  66                 	db	102	;'f'
  5201  00FF53  61                 	db	97	;'a'
  5202  00FF54  6E                 	db	110	;'n'
  5203  00FF55  0D                 	db	13
  5204  00FF56  0A                 	db	10
  5205  00FF57  0A                 	db	10
  5206  00FF58  00                 	db	0
  5207  00FF59                     STR_244:
  5208  00FF59  53                 	db	83	;'S'
  5209  00FF5A  65                 	db	101	;'e'
  5210  00FF5B  74                 	db	116	;'t'
  5211  00FF5C  0D                 	db	13
  5212  00FF5D  0A                 	db	10
  5213  00FF5E  0A                 	db	10
  5214  00FF5F  00                 	db	0
  5215  00FF60                     STR_62:
  5216  00FF60  4C                 	db	76	;'L'
  5217  00FF61  45                 	db	69	;'E'
  5218  00FF62  44                 	db	68	;'D'
  5219  00FF63  30                 	db	48	;'0'
  5220  00FF64  0D                 	db	13
  5221  00FF65  0A                 	db	10
  5222  00FF66  00                 	db	0
  5223  00FF67                     STR_243:
  5224  00FF67  52                 	db	82	;'R'
  5225  00FF68  65                 	db	101	;'e'
  5226  00FF69  61                 	db	97	;'a'
  5227  00FF6A  64                 	db	100	;'d'
  5228  00FF6B  0D                 	db	13
  5229  00FF6C  0A                 	db	10
  5230  00FF6D  00                 	db	0
  5231  00FF6E                     STR_160:
  5232  00FF6E  72                 	db	114	;'r'
  5233  00FF6F  65                 	db	101	;'e'
  5234  00FF70  64                 	db	100	;'d'
  5235  00FF71  6C                 	db	108	;'l'
  5236  00FF72  65                 	db	101	;'e'
  5237  00FF73  64                 	db	100	;'d'
  5238  00FF74  00                 	db	0
  5239  00FF75                     STR_129:
  5240  00FF75  53                 	db	83	;'S'
  5241  00FF76  68                 	db	104	;'h'
  5242  00FF77  61                 	db	97	;'a'
  5243  00FF78  6B                 	db	107	;'k'
  5244  00FF79  65                 	db	101	;'e'
  5245  00FF7A  72                 	db	114	;'r'
  5246  00FF7B  00                 	db	0
  5247  00FF7C                     STR_312:
  5248  00FF7C  62                 	db	98	;'b'
  5249  00FF7D  61                 	db	97	;'a'
  5250  00FF7E  75                 	db	117	;'u'
  5251  00FF7F  64                 	db	100	;'d'
  5252  00FF80  69                 	db	105	;'i'
  5253  00FF81  73                 	db	115	;'s'
  5254  00FF82  00                 	db	0
  5255  00FF83                     STR_278:
  5256  00FF83  41                 	db	65	;'A'
  5257  00FF84  44                 	db	68	;'D'
  5258  00FF85  43                 	db	67	;'C'
  5259  00FF86  0D                 	db	13
  5260  00FF87  0A                 	db	10
  5261  00FF88  00                 	db	0
  5262  00FF89                     STR_120:
  5263  00FF89  66                 	db	102	;'f'
  5264  00FF8A  61                 	db	97	;'a'
  5265  00FF8B  6E                 	db	110	;'n'
  5266  00FF8C  0D                 	db	13
  5267  00FF8D  0A                 	db	10
  5268  00FF8E  00                 	db	0
  5269  00FF8F                     STR_298:
  5270  00FF8F  42                 	db	66	;'B'
  5271  00FF90  61                 	db	97	;'a'
  5272  00FF91  75                 	db	117	;'u'
  5273  00FF92  64                 	db	100	;'d'
  5274  00FF93  3F                 	db	63	;'?'
  5275  00FF94  00                 	db	0
  5276  00FF95                     STR_299:
  5277  00FF95  62                 	db	98	;'b'
  5278  00FF96  61                 	db	97	;'a'
  5279  00FF97  75                 	db	117	;'u'
  5280  00FF98  64                 	db	100	;'d'
  5281  00FF99  3F                 	db	63	;'?'
  5282  00FF9A  00                 	db	0
  5283  00FF9B                     STR_131:
  5284  00FF9B  77                 	db	119	;'w'
  5285  00FF9C  68                 	db	104	;'h'
  5286  00FF9D  69                 	db	105	;'i'
  5287  00FF9E  74                 	db	116	;'t'
  5288  00FF9F  65                 	db	101	;'e'
  5289  00FFA0  00                 	db	0
  5290  00FFA1                     STR_130:
  5291  00FFA1  63                 	db	99	;'c'
  5292  00FFA2  6F                 	db	111	;'o'
  5293  00FFA3  6C                 	db	108	;'l'
  5294  00FFA4  6F                 	db	111	;'o'
  5295  00FFA5  72                 	db	114	;'r'
  5296  00FFA6  00                 	db	0
  5297  00FFA7                     STR_93:
  5298  00FFA7  4C                 	db	76	;'L'
  5299  00FFA8  69                 	db	105	;'i'
  5300  00FFA9  67                 	db	103	;'g'
  5301  00FFAA  68                 	db	104	;'h'
  5302  00FFAB  74                 	db	116	;'t'
  5303  00FFAC  00                 	db	0
  5304  00FFAD                     STR_97:
  5305  00FFAD  6C                 	db	108	;'l'
  5306  00FFAE  69                 	db	105	;'i'
  5307  00FFAF  67                 	db	103	;'g'
  5308  00FFB0  68                 	db	104	;'h'
  5309  00FFB1  74                 	db	116	;'t'
  5310  00FFB2  00                 	db	0
  5311  00FFB3                     STR_212:
  5312  00FFB3  30                 	db	48	;'0'
  5313  00FFB4  0D                 	db	13
  5314  00FFB5  0A                 	db	10
  5315  00FFB6  0A                 	db	10
  5316  00FFB7  00                 	db	0
  5317  00FFB8                     STR_68:
  5318  00FFB8  4C                 	db	76	;'L'
  5319  00FFB9  45                 	db	69	;'E'
  5320  00FFBA  44                 	db	68	;'D'
  5321  00FFBB  30                 	db	48	;'0'
  5322  00FFBC  00                 	db	0
  5323  00FFBD                     STR_40:
  5324  00FFBD  6C                 	db	108	;'l'
  5325  00FFBE  65                 	db	101	;'e'
  5326  00FFBF  64                 	db	100	;'d'
  5327  00FFC0  30                 	db	48	;'0'
  5328  00FFC1  00                 	db	0
  5329  00FFC2                     STR_69:
  5330  00FFC2  4C                 	db	76	;'L'
  5331  00FFC3  45                 	db	69	;'E'
  5332  00FFC4  44                 	db	68	;'D'
  5333  00FFC5  31                 	db	49	;'1'
  5334  00FFC6  00                 	db	0
  5335  00FFC7                     STR_49:
  5336  00FFC7  6C                 	db	108	;'l'
  5337  00FFC8  65                 	db	101	;'e'
  5338  00FFC9  64                 	db	100	;'d'
  5339  00FFCA  31                 	db	49	;'1'
  5340  00FFCB  00                 	db	0
  5341  00FFCC                     STR_296:
  5342  00FFCC  41                 	db	65	;'A'
  5343  00FFCD  44                 	db	68	;'D'
  5344  00FFCE  43                 	db	67	;'C'
  5345  00FFCF  3F                 	db	63	;'?'
  5346  00FFD0  00                 	db	0
  5347  00FFD1                     STR_297:
  5348  00FFD1  52                 	db	82	;'R'
  5349  00FFD2  54                 	db	84	;'T'
  5350  00FFD3  43                 	db	67	;'C'
  5351  00FFD4  3F                 	db	63	;'?'
  5352  00FFD5  00                 	db	0
  5353  00FFD6                     STR_251:
  5354  00FFD6  52                 	db	82	;'R'
  5355  00FFD7  65                 	db	101	;'e'
  5356  00FFD8  61                 	db	97	;'a'
  5357  00FFD9  64                 	db	100	;'d'
  5358  00FFDA  00                 	db	0
  5359  00FFDB                     STR_223:
  5360  00FFDB  72                 	db	114	;'r'
  5361  00FFDC  65                 	db	101	;'e'
  5362  00FFDD  61                 	db	97	;'a'
  5363  00FFDE  64                 	db	100	;'d'
  5364  00FFDF  00                 	db	0
  5365  00FFE0                     STR_197:
  5366  00FFE0  61                 	db	97	;'a'
  5367  00FFE1  64                 	db	100	;'d'
  5368  00FFE2  63                 	db	99	;'c'
  5369  00FFE3  00                 	db	0
  5370  00FFE4                     STR_218:
  5371  00FFE4  72                 	db	114	;'r'
  5372  00FFE5  74                 	db	116	;'t'
  5373  00FFE6  63                 	db	99	;'c'
  5374  00FFE7  00                 	db	0
  5375  00FFE8                     STR_253:
  5376  00FFE8  6A                 	db	106	;'j'
  5377  00FFE9  6F                 	db	111	;'o'
  5378  00FFEA  65                 	db	101	;'e'
  5379  00FFEB  00                 	db	0
  5380  00FFEC                     STR_94:
  5381  00FFEC  46                 	db	70	;'F'
  5382  00FFED  61                 	db	97	;'a'
  5383  00FFEE  6E                 	db	110	;'n'
  5384  00FFEF  00                 	db	0
  5385  00FFF0                     STR_98:
  5386  00FFF0  66                 	db	102	;'f'
  5387  00FFF1  61                 	db	97	;'a'
  5388  00FFF2  6E                 	db	110	;'n'
  5389  00FFF3  00                 	db	0
  5390  00FFF4                     STR_252:
  5391  00FFF4  53                 	db	83	;'S'
  5392  00FFF5  65                 	db	101	;'e'
  5393  00FFF6  74                 	db	116	;'t'
  5394  00FFF7  00                 	db	0
  5395  00FFF8                     STR_230:
  5396  00FFF8  73                 	db	115	;'s'
  5397  00FFF9  65                 	db	101	;'e'
  5398  00FFFA  74                 	db	116	;'t'
  5399  00FFFB  00                 	db	0
  5400  00FFFC                     STR_1:
  5401  00FFFC  0D                 	db	13
  5402  00FFFD  00                 	db	0
  5403  0000                     
  5404                           ; #config settings
  5405  00FFFE  00                 	db	0	; dummy byte at the end
  5406  0000                     
  5407                           	psect	cinit
  5408  016C3E                     __pcinit:
  5409                           	opt stack 0
  5410  016C3E                     start_initialization:
  5411                           	opt stack 0
  5412  016C3E                     __initialization:
  5413                           	opt stack 0
  5414                           
  5415                           ; Clear objects allocated to BANK4 (244 bytes)
  5416  016C3E  EE04  F000         	lfsr	0,__pbssBANK4
  5417  016C42  0EF4               	movlw	244
  5418  016C44                     clear_0:
  5419  016C44  6AEE               	clrf	postinc0,c
  5420  016C46  06E8               	decf	wreg,f,c
  5421  016C48  E1FD               	bnz	clear_0
  5422                           
  5423                           ; Clear objects allocated to BANK3 (200 bytes)
  5424  016C4A  EE03  F000         	lfsr	0,__pbssBANK3
  5425  016C4E  0EC8               	movlw	200
  5426  016C50                     clear_1:
  5427  016C50  6AEE               	clrf	postinc0,c
  5428  016C52  06E8               	decf	wreg,f,c
  5429  016C54  E1FD               	bnz	clear_1
  5430                           
  5431                           ; Clear objects allocated to BANK2 (16 bytes)
  5432  016C56  EE02  F067         	lfsr	0,__pbssBANK2
  5433  016C5A  0E10               	movlw	16
  5434  016C5C                     clear_2:
  5435  016C5C  6AEE               	clrf	postinc0,c
  5436  016C5E  06E8               	decf	wreg,f,c
  5437  016C60  E1FD               	bnz	clear_2
  5438                           
  5439                           ; Clear objects allocated to BANK1 (110 bytes)
  5440  016C62  EE01  F000         	lfsr	0,__pbssBANK1
  5441  016C66  0E6E               	movlw	110
  5442  016C68                     clear_3:
  5443  016C68  6AEE               	clrf	postinc0,c
  5444  016C6A  06E8               	decf	wreg,f,c
  5445  016C6C  E1FD               	bnz	clear_3
  5446                           
  5447                           ; Clear objects allocated to BANK0 (27 bytes)
  5448  016C6E  EE00  F0D9         	lfsr	0,__pbssBANK0
  5449  016C72  0E1B               	movlw	27
  5450  016C74                     clear_4:
  5451  016C74  6AEE               	clrf	postinc0,c
  5452  016C76  06E8               	decf	wreg,f,c
  5453  016C78  E1FD               	bnz	clear_4
  5454                           
  5455                           ; Clear objects allocated to COMRAM (37 bytes)
  5456  016C7A  EE00  F028         	lfsr	0,__pbssCOMRAM
  5457  016C7E  0E25               	movlw	37
  5458  016C80                     clear_5:
  5459  016C80  6AEE               	clrf	postinc0,c
  5460  016C82  06E8               	decf	wreg,f,c
  5461  016C84  E1FD               	bnz	clear_5
  5462                           
  5463                           ; Initialize objects allocated to BANK3 (20 bytes)
  5464                           ; load TBLPTR registers with __pidataBANK3
  5465  016C86  0EE2               	movlw	low __pidataBANK3
  5466  016C88  6EF6               	movwf	tblptrl,c
  5467  016C8A  0E7E               	movlw	high __pidataBANK3
  5468  016C8C  6EF7               	movwf	tblptrh,c
  5469  016C8E  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  5470  016C90  6EF8               	movwf	tblptru,c
  5471  016C92  EE03  F0C8         	lfsr	0,__pdataBANK3
  5472  016C96  EE10 F014          	lfsr	1,20
  5473  016C9A                     copy_data0:
  5474  016C9A  0009               	tblrd		*+
  5475  016C9C  CFF5 FFEE          	movff	tablat,postinc0
  5476  016CA0  50E5               	movf	postdec1,w,c
  5477  016CA2  50E1               	movf	fsr1l,w,c
  5478  016CA4  E1FA               	bnz	copy_data0
  5479                           
  5480                           ; Initialize objects allocated to BANK1 (10 bytes)
  5481                           ; load TBLPTR registers with __pidataBANK1
  5482  016CA6  0E92               	movlw	low __pidataBANK1
  5483  016CA8  6EF6               	movwf	tblptrl,c
  5484  016CAA  0E7F               	movlw	high __pidataBANK1
  5485  016CAC  6EF7               	movwf	tblptrh,c
  5486  016CAE  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  5487  016CB0  6EF8               	movwf	tblptru,c
  5488  016CB2  EE01  F0D3         	lfsr	0,__pdataBANK1
  5489  016CB6  EE10 F00A          	lfsr	1,10
  5490  016CBA                     copy_data1:
  5491  016CBA  0009               	tblrd		*+
  5492  016CBC  CFF5 FFEE          	movff	tablat,postinc0
  5493  016CC0  50E5               	movf	postdec1,w,c
  5494  016CC2  50E1               	movf	fsr1l,w,c
  5495  016CC4  E1FA               	bnz	copy_data1
  5496  016CC6                     end_of_initialization:
  5497                           	opt stack 0
  5498  016CC6                     __end_of__initialization:
  5499                           	opt stack 0
  5500  016CC6  0100               	movlb	0
  5501  016CC8  EFD6  F099         	goto	_main	;jump to C main() function
  5502                           tblptru	equ	0xFF8
  5503                           tblptrh	equ	0xFF7
  5504                           tblptrl	equ	0xFF6
  5505                           tablat	equ	0xFF5
  5506                           postinc0	equ	0xFEE
  5507                           wreg	equ	0xFE8
  5508                           postdec1	equ	0xFE5
  5509                           fsr1l	equ	0xFE1
  5510                           
  5511                           	psect	bssCOMRAM
  5512  000028                     __pbssCOMRAM:
  5513                           	opt stack 0
  5514  000028                     _NEC_Stored1:
  5515                           	opt stack 0
  5516  000028                     	ds	4
  5517  00002C                     _IRfault:
  5518                           	opt stack 0
  5519  00002C                     	ds	1
  5520  00002D                     _Scroll_7:
  5521                           	opt stack 0
  5522  00002D                     	ds	16
  5523  00003D                     _Scroll_8:
  5524                           	opt stack 0
  5525  00003D                     	ds	16
  5526                           tblptru	equ	0xFF8
  5527                           tblptrh	equ	0xFF7
  5528                           tblptrl	equ	0xFF6
  5529                           tablat	equ	0xFF5
  5530                           postinc0	equ	0xFEE
  5531                           wreg	equ	0xFE8
  5532                           postdec1	equ	0xFE5
  5533                           fsr1l	equ	0xFE1
  5534                           
  5535                           	psect	bssBANK0
  5536  0000D9                     __pbssBANK0:
  5537                           	opt stack 0
  5538  0000D9                     _IRrawCount:
  5539                           	opt stack 0
  5540  0000D9                     	ds	2
  5541  0000DB                     _IRpinOLD:
  5542                           	opt stack 0
  5543  0000DB                     	ds	1
  5544  0000DC                     _IRrawCodeNum:
  5545                           	opt stack 0
  5546  0000DC                     	ds	1
  5547  0000DD                     _TX_OLD:
  5548                           	opt stack 0
  5549  0000DD                     	ds	1
  5550  0000DE                     _bufferCount:
  5551                           	opt stack 0
  5552  0000DE                     	ds	1
  5553  0000DF                     _Scroll_9:
  5554                           	opt stack 0
  5555  0000DF                     	ds	16
  5556  0000EF                     _IR_NEC:
  5557                           	opt stack 0
  5558  0000EF                     	ds	4
  5559  0000F3                     _IR_New_Code:
  5560                           	opt stack 0
  5561  0000F3                     	ds	1
  5562                           tblptru	equ	0xFF8
  5563                           tblptrh	equ	0xFF7
  5564                           tblptrl	equ	0xFF6
  5565                           tablat	equ	0xFF5
  5566                           postinc0	equ	0xFEE
  5567                           wreg	equ	0xFE8
  5568                           postdec1	equ	0xFE5
  5569                           fsr1l	equ	0xFE1
  5570                           
  5571                           	psect	bssBANK1
  5572  000100                     __pbssBANK1:
  5573                           	opt stack 0
  5574  000100                     _NowTime:
  5575                           	opt stack 0
  5576  000100                     	ds	9
  5577  000109                     _LCDwait:
  5578                           	opt stack 0
  5579  000109                     	ds	1
  5580  00010A                     _PARITY:
  5581                           	opt stack 0
  5582  00010A                     	ds	1
  5583  00010B                     _ScrollDisplayPosition:
  5584                           	opt stack 0
  5585  00010B                     	ds	1
  5586  00010C                     _ScrollFIFOCount:
  5587                           	opt stack 0
  5588  00010C                     	ds	1
  5589  00010D                     _USART_Status:
  5590                           	opt stack 0
  5591  00010D                     	ds	1
  5592  00010E                     _Scroll_1:
  5593                           	opt stack 0
  5594  00010E                     	ds	16
  5595  00011E                     _Scroll_2:
  5596                           	opt stack 0
  5597  00011E                     	ds	16
  5598  00012E                     _Scroll_3:
  5599                           	opt stack 0
  5600  00012E                     	ds	16
  5601  00013E                     _Scroll_4:
  5602                           	opt stack 0
  5603  00013E                     	ds	16
  5604  00014E                     _Scroll_5:
  5605                           	opt stack 0
  5606  00014E                     	ds	16
  5607  00015E                     _Scroll_6:
  5608                           	opt stack 0
  5609  00015E                     	ds	16
  5610                           tblptru	equ	0xFF8
  5611                           tblptrh	equ	0xFF7
  5612                           tblptrl	equ	0xFF6
  5613                           tablat	equ	0xFF5
  5614                           postinc0	equ	0xFEE
  5615                           wreg	equ	0xFE8
  5616                           postdec1	equ	0xFE5
  5617                           fsr1l	equ	0xFE1
  5618                           
  5619                           	psect	dataBANK1
  5620  0001D3                     __pdataBANK1:
  5621                           	opt stack 0
  5622  0001D3                     _BAUD:
  5623                           	opt stack 0
  5624  0001D3                     	ds	4
  5625  0001D7                     _LCDclearCount:
  5626                           	opt stack 0
  5627  0001D7                     	ds	4
  5628  0001DB                     _BlueLEDcount:
  5629                           	opt stack 0
  5630  0001DB                     	ds	2
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           postinc0	equ	0xFEE
  5636                           wreg	equ	0xFE8
  5637                           postdec1	equ	0xFE5
  5638                           fsr1l	equ	0xFE1
  5639                           
  5640                           	psect	bssBANK2
  5641  000267                     __pbssBANK2:
  5642                           	opt stack 0
  5643  000267                     _Scroll_10:
  5644                           	opt stack 0
  5645  000267                     	ds	16
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           postinc0	equ	0xFEE
  5651                           wreg	equ	0xFE8
  5652                           postdec1	equ	0xFE5
  5653                           fsr1l	equ	0xFE1
  5654                           
  5655                           	psect	bssBANK3
  5656  000300                     __pbssBANK3:
  5657                           	opt stack 0
  5658  000300                     _buf:
  5659                           	opt stack 0
  5660  000300                     	ds	100
  5661  000364                     _Rxdata:
  5662                           	opt stack 0
  5663  000364                     	ds	100
  5664                           tblptru	equ	0xFF8
  5665                           tblptrh	equ	0xFF7
  5666                           tblptrl	equ	0xFF6
  5667                           tablat	equ	0xFF5
  5668                           postinc0	equ	0xFEE
  5669                           wreg	equ	0xFE8
  5670                           postdec1	equ	0xFE5
  5671                           fsr1l	equ	0xFE1
  5672                           
  5673                           	psect	dataBANK3
  5674  0003C8                     __pdataBANK3:
  5675                           	opt stack 0
  5676  0003C8                     _Version:
  5677                           	opt stack 0
  5678  0003C8                     	ds	20
  5679                           tblptru	equ	0xFF8
  5680                           tblptrh	equ	0xFF7
  5681                           tblptrl	equ	0xFF6
  5682                           tablat	equ	0xFF5
  5683                           postinc0	equ	0xFEE
  5684                           wreg	equ	0xFE8
  5685                           postdec1	equ	0xFE5
  5686                           fsr1l	equ	0xFE1
  5687                           
  5688                           	psect	bssBANK4
  5689  000400                     __pbssBANK4:
  5690                           	opt stack 0
  5691  000400                     _Txdata:
  5692                           	opt stack 0
  5693  000400                     	ds	100
  5694  000464                     _IRRawCode:
  5695                           	opt stack 0
  5696  000464                     	ds	144
  5697                           tblptru	equ	0xFF8
  5698                           tblptrh	equ	0xFF7
  5699                           tblptrl	equ	0xFF6
  5700                           tablat	equ	0xFF5
  5701                           postinc0	equ	0xFEE
  5702                           wreg	equ	0xFE8
  5703                           postdec1	equ	0xFE5
  5704                           fsr1l	equ	0xFE1
  5705                           
  5706                           	psect	cstackBANK5
  5707  000500                     __pcstackBANK5:
  5708                           	opt stack 0
  5709  000500                     Command@buf:
  5710                           	opt stack 0
  5711                           
  5712                           ; 200 bytes @ 0x0
  5713  000500                     	ds	200
  5714  0005C8                     Command@ADC_Value:
  5715                           	opt stack 0
  5716                           
  5717                           ; 2 bytes @ 0xC8
  5718  0005C8                     	ds	2
  5719  0005CA                     Command@RTC_Battery_Value:
  5720                           	opt stack 0
  5721                           
  5722                           ; 2 bytes @ 0xCA
  5723  0005CA                     	ds	2
  5724  0005CC                     Command@RTC_Battery_Value_HIGH_decimal:
  5725                           	opt stack 0
  5726                           
  5727                           ; 2 bytes @ 0xCC
  5728  0005CC                     	ds	2
  5729  0005CE                     Command@BAUDtemp:
  5730                           	opt stack 0
  5731                           
  5732                           ; 4 bytes @ 0xCE
  5733  0005CE                     	ds	4
  5734  0005D2                     Command@RTC_Battery_Value_LOW_decimal:
  5735                           	opt stack 0
  5736                           
  5737                           ; 2 bytes @ 0xD2
  5738  0005D2                     	ds	2
  5739  0005D4                     Command@PARITYtemp:
  5740                           	opt stack 0
  5741                           
  5742                           ; 4 bytes @ 0xD4
  5743  0005D4                     	ds	4
  5744  0005D8                     Command@contrast:
  5745                           	opt stack 0
  5746                           
  5747                           ; 2 bytes @ 0xD8
  5748  0005D8                     	ds	2
  5749  0005DA                     Command@channel:
  5750                           	opt stack 0
  5751                           
  5752                           ; 2 bytes @ 0xDA
  5753  0005DA                     	ds	2
  5754  0005DC                     Command@duty:
  5755                           	opt stack 0
  5756                           
  5757                           ; 2 bytes @ 0xDC
  5758  0005DC                     	ds	2
  5759  0005DE                     Command@tempLONG:
  5760                           	opt stack 0
  5761                           
  5762                           ; 4 bytes @ 0xDE
  5763  0005DE                     	ds	4
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           postinc0	equ	0xFEE
  5769                           wreg	equ	0xFE8
  5770                           postdec1	equ	0xFE5
  5771                           fsr1l	equ	0xFE1
  5772                           
  5773                           	psect	cstackBANK2
  5774  000200                     __pcstackBANK2:
  5775                           	opt stack 0
  5776  000200                     SetBaud@buf:
  5777                           	opt stack 0
  5778  000200                     RemoveSpaces@That:
  5779                           	opt stack 0
  5780  000200                     StringAddEqual@temp:
  5781                           	opt stack 0
  5782                           
  5783                           ; 100 bytes @ 0x0
  5784  000200                     	ds	50
  5785  000232                     SetBaud@status:
  5786                           	opt stack 0
  5787                           
  5788                           ; 1 bytes @ 0x32
  5789  000232                     	ds	50
  5790  000264                     StringAddEqual@firstnumber:
  5791                           	opt stack 0
  5792  000264                     RemoveSpaces@address:
  5793                           	opt stack 0
  5794                           
  5795                           ; 2 bytes @ 0x64
  5796  000264                     	ds	1
  5797  000265                     StringAddEqual@i:
  5798                           	opt stack 0
  5799                           
  5800                           ; 1 bytes @ 0x65
  5801  000265                     	ds	1
  5802  000266                     RemoveSpaces@i:
  5803                           	opt stack 0
  5804  000266                     StringAddEqual@j:
  5805                           	opt stack 0
  5806                           
  5807                           ; 1 bytes @ 0x66
  5808  000266                     	ds	1
  5809                           tblptru	equ	0xFF8
  5810                           tblptrh	equ	0xFF7
  5811                           tblptrl	equ	0xFF6
  5812                           tablat	equ	0xFF5
  5813                           postinc0	equ	0xFEE
  5814                           wreg	equ	0xFE8
  5815                           postdec1	equ	0xFE5
  5816                           fsr1l	equ	0xFE1
  5817                           
  5818                           	psect	cstackBANK1
  5819  00016E                     __pcstackBANK1:
  5820                           	opt stack 0
  5821  00016E                     ??_high_isr:
  5822                           
  5823                           ; 0 bytes @ 0x0
  5824  00016E                     	ds	14
  5825  00017C                     ??_isdigit:
  5826  00017C                     ??_IdleI2C:
  5827  00017C                     ?_ReadEEPROM_1Byte:
  5828                           	opt stack 0
  5829  00017C                     ?___wmul:
  5830                           	opt stack 0
  5831  00017C                     ?___awdiv:
  5832                           	opt stack 0
  5833  00017C                     ?___awmod:
  5834                           	opt stack 0
  5835  00017C                     ?___lwmod:
  5836                           	opt stack 0
  5837  00017C                     ?___ftpack:
  5838                           	opt stack 0
  5839  00017C                     ?_GetBaud:
  5840                           	opt stack 0
  5841  00017C                     ?___lmul:
  5842                           	opt stack 0
  5843  00017C                     ?___lldiv:
  5844                           	opt stack 0
  5845  00017C                     ISNUMBER@ascii:
  5846                           	opt stack 0
  5847  00017C                     baudUSART@baudconfig:
  5848                           	opt stack 0
  5849  00017C                     ReadUSART@data:
  5850                           	opt stack 0
  5851  00017C                     EnableInternalADC@config:
  5852                           	opt stack 0
  5853  00017C                     OpenI2C@slew:
  5854                           	opt stack 0
  5855  00017C                     cleanBuffer@data:
  5856                           	opt stack 0
  5857  00017C                     cleanBuffer16bit@data:
  5858                           	opt stack 0
  5859  00017C                     StringMatch@This:
  5860                           	opt stack 0
  5861  00017C                     StringContains@This:
  5862                           	opt stack 0
  5863  00017C                     StartsWith@This:
  5864                           	opt stack 0
  5865  00017C                     lowercase@Input:
  5866                           	opt stack 0
  5867  00017C                     CheckSum_byte@This:
  5868                           	opt stack 0
  5869  00017C                     OpenUSART@spbrg:
  5870                           	opt stack 0
  5871  00017C                     Parse_Time@This:
  5872                           	opt stack 0
  5873  00017C                     Multiple_I2C_Read@rdptr:
  5874                           	opt stack 0
  5875  00017C                     ReadEEPROM_1Byte@address:
  5876                           	opt stack 0
  5877  00017C                     WriteEEPROM_1Byte@address:
  5878                           	opt stack 0
  5879  00017C                     ___wmul@multiplier:
  5880                           	opt stack 0
  5881  00017C                     ___awdiv@dividend:
  5882                           	opt stack 0
  5883  00017C                     ___awmod@dividend:
  5884                           	opt stack 0
  5885  00017C                     ___lwmod@dividend:
  5886                           	opt stack 0
  5887  00017C                     ___ftpack@arg:
  5888                           	opt stack 0
  5889  00017C                     delayUS@US:
  5890                           	opt stack 0
  5891  00017C                     ___lmul@multiplier:
  5892                           	opt stack 0
  5893  00017C                     ___lldiv@dividend:
  5894                           	opt stack 0
  5895                           
  5896                           ; 4 bytes @ 0xE
  5897  00017C                     	ds	1
  5898  00017D                     EnableInternalADC@channels:
  5899                           	opt stack 0
  5900  00017D                     OpenI2C@sync_mode:
  5901                           	opt stack 0
  5902  00017D                     WriteI2C@data_out:
  5903                           	opt stack 0
  5904  00017D                     _isdigit$3120:
  5905                           	opt stack 0
  5906                           
  5907                           ; 1 bytes @ 0xF
  5908  00017D                     	ds	1
  5909  00017E                     ?_I2C_Read_At_Address:
  5910                           	opt stack 0
  5911  00017E                     CheckSum_byte@Odd_Even:
  5912                           	opt stack 0
  5913  00017E                     OpenUSART@config:
  5914                           	opt stack 0
  5915  00017E                     I2C_Write_At_Address@Register:
  5916                           	opt stack 0
  5917  00017E                     I2C_Read_At_Address@Register:
  5918                           	opt stack 0
  5919  00017E                     Multiple_I2C_Read@length:
  5920                           	opt stack 0
  5921  00017E                     ReadEEPROM_1Byte@GIEstatus:
  5922                           	opt stack 0
  5923  00017E                     WriteEEPROM_1Byte@data:
  5924                           	opt stack 0
  5925  00017E                     isdigit@c:
  5926                           	opt stack 0
  5927  00017E                     cleanBuffer@count:
  5928                           	opt stack 0
  5929  00017E                     cleanBuffer16bit@count:
  5930                           	opt stack 0
  5931  00017E                     StringMatch@That:
  5932                           	opt stack 0
  5933  00017E                     StringContains@That:
  5934                           	opt stack 0
  5935  00017E                     StartsWith@That:
  5936                           	opt stack 0
  5937  00017E                     Init_I2C_Master@baud:
  5938                           	opt stack 0
  5939  00017E                     ___wmul@multiplicand:
  5940                           	opt stack 0
  5941  00017E                     ___awdiv@divisor:
  5942                           	opt stack 0
  5943  00017E                     ___awmod@divisor:
  5944                           	opt stack 0
  5945  00017E                     ___lwmod@divisor:
  5946                           	opt stack 0
  5947                           
  5948                           ; 2 bytes @ 0x10
  5949  00017E                     	ds	1
  5950  00017F                     ?_GetMemoryBaud:
  5951                           	opt stack 0
  5952  00017F                     lowercase@i:
  5953                           	opt stack 0
  5954  00017F                     Parse_Time@temp:
  5955                           	opt stack 0
  5956  00017F                     I2C_Write_At_Address@data:
  5957                           	opt stack 0
  5958  00017F                     I2C_Read_Sequential@Register:
  5959                           	opt stack 0
  5960  00017F                     WriteEEPROM_1Byte@GIEstatus:
  5961                           	opt stack 0
  5962  00017F                     GetMemoryParity@Parity:
  5963                           	opt stack 0
  5964  00017F                     ___ftpack@exp:
  5965                           	opt stack 0
  5966  00017F                     CheckSum_byte@ThisTemp:
  5967                           	opt stack 0
  5968                           
  5969                           ; 2 bytes @ 0x11
  5970  00017F                     	ds	1
  5971  000180                     ??_cleanBuffer:
  5972  000180                     ??_cleanBuffer16bit:
  5973  000180                     ??_delayUS:
  5974  000180                     ??_I2C_Write_At_Address:
  5975  000180                     ??_StringMatch:
  5976  000180                     ??_StringContains:
  5977  000180                     ??_StartsWith:
  5978  000180                     I2C_Read_At_Address@I2Caddress:
  5979                           	opt stack 0
  5980  000180                     SetMemoryParity@Test:
  5981                           	opt stack 0
  5982  000180                     ___awdiv@counter:
  5983                           	opt stack 0
  5984  000180                     ___awmod@counter:
  5985                           	opt stack 0
  5986  000180                     ___ftpack@sign:
  5987                           	opt stack 0
  5988  000180                     ___lwmod@counter:
  5989                           	opt stack 0
  5990  000180                     I2C_Read_Sequential@rdptr:
  5991                           	opt stack 0
  5992  000180                     ___wmul@product:
  5993                           	opt stack 0
  5994  000180                     ___lmul@multiplicand:
  5995                           	opt stack 0
  5996  000180                     ___lldiv@divisor:
  5997                           	opt stack 0
  5998  000180                     Parse_Time@TempTime:
  5999                           	opt stack 0
  6000                           
  6001                           ; 9 bytes @ 0x12
  6002  000180                     	ds	1
  6003  000181                     ??___ftpack:
  6004  000181                     CheckSum_byte@Parity:
  6005                           	opt stack 0
  6006  000181                     SetMemoryParity@Parity:
  6007                           	opt stack 0
  6008  000181                     ___awdiv@sign:
  6009                           	opt stack 0
  6010  000181                     ___awmod@sign:
  6011                           	opt stack 0
  6012  000181                     delayUS@i:
  6013                           	opt stack 0
  6014                           
  6015                           ; 4 bytes @ 0x13
  6016  000181                     	ds	1
  6017  000182                     ?___aldiv:
  6018                           	opt stack 0
  6019  000182                     CheckSum_byte@i:
  6020                           	opt stack 0
  6021  000182                     I2C_Write_At_Address@I2Caddress:
  6022                           	opt stack 0
  6023  000182                     I2C_Read_Sequential@length:
  6024                           	opt stack 0
  6025  000182                     ___awdiv@quotient:
  6026                           	opt stack 0
  6027  000182                     ___aldiv@dividend:
  6028                           	opt stack 0
  6029                           
  6030                           ; 4 bytes @ 0x14
  6031  000182                     	ds	1
  6032  000183                     ??_GetMemoryBaud:
  6033  000183                     cleanBuffer@i:
  6034                           	opt stack 0
  6035  000183                     cleanBuffer16bit@i:
  6036                           	opt stack 0
  6037  000183                     UARTchar@NinethBit_override:
  6038                           	opt stack 0
  6039  000183                     I2C_Read_Sequential@I2Caddress:
  6040                           	opt stack 0
  6041                           
  6042                           ; 1 bytes @ 0x15
  6043  000183                     	ds	1
  6044  000184                     ?___lbtoft:
  6045                           	opt stack 0
  6046  000184                     ?___lwtoft:
  6047                           	opt stack 0
  6048  000184                     UARTchar@NinethBit_override_data:
  6049                           	opt stack 0
  6050  000184                     BufferCopy@from:
  6051                           	opt stack 0
  6052  000184                     ___lwtoft@c:
  6053                           	opt stack 0
  6054  000184                     ___lmul@product:
  6055                           	opt stack 0
  6056  000184                     ___lldiv@quotient:
  6057                           	opt stack 0
  6058  000184                     SET_RTC_TIME@SetTime:
  6059                           	opt stack 0
  6060                           
  6061                           ; 9 bytes @ 0x16
  6062  000184                     	ds	1
  6063  000185                     ??_UARTchar:
  6064  000185                     delayUS@j:
  6065                           	opt stack 0
  6066                           
  6067                           ; 1 bytes @ 0x17
  6068  000185                     	ds	1
  6069  000186                     ??_RTC_TIME_NONMilitary:
  6070  000186                     UARTchar@data:
  6071                           	opt stack 0
  6072  000186                     Zero_Config1@pin:
  6073                           	opt stack 0
  6074  000186                     One_Config1@pin:
  6075                           	opt stack 0
  6076  000186                     f_Config1@pin:
  6077                           	opt stack 0
  6078  000186                     Zero_Config2@pin:
  6079                           	opt stack 0
  6080  000186                     One_Config2@pin:
  6081                           	opt stack 0
  6082  000186                     SendLCDbyte@isCommand:
  6083                           	opt stack 0
  6084  000186                     BufferCopy@to:
  6085                           	opt stack 0
  6086  000186                     RTC_Clock_Enable@tempSeconds:
  6087                           	opt stack 0
  6088  000186                     ___aldiv@divisor:
  6089                           	opt stack 0
  6090  000186                     READ_RTC_TIME@temp:
  6091                           	opt stack 0
  6092                           
  6093                           ; 7 bytes @ 0x18
  6094  000186                     	ds	1
  6095  000187                     SendLCDbyte@data:
  6096                           	opt stack 0
  6097  000187                     ___lbtoft@c:
  6098                           	opt stack 0
  6099  000187                     UARTstring@data:
  6100                           	opt stack 0
  6101  000187                     UARTstringWAIT@data:
  6102                           	opt stack 0
  6103  000187                     Send_Config1@data:
  6104                           	opt stack 0
  6105  000187                     Send_Config2@data:
  6106                           	opt stack 0
  6107  000187                     RTC_TIME_NONMilitary@Error:
  6108                           	opt stack 0
  6109                           
  6110                           ; 2 bytes @ 0x19
  6111  000187                     	ds	1
  6112  000188                     ?___ftdiv:
  6113                           	opt stack 0
  6114  000188                     ?_GetEnteredNumber:
  6115                           	opt stack 0
  6116  000188                     BufferCopy@count:
  6117                           	opt stack 0
  6118  000188                     SendLCDbyte@MSB_nibble:
  6119                           	opt stack 0
  6120  000188                     RTC_Clock_Enable@Error:
  6121                           	opt stack 0
  6122  000188                     ___lldiv@counter:
  6123                           	opt stack 0
  6124  000188                     GetEnteredNumber@This:
  6125                           	opt stack 0
  6126  000188                     ___ftdiv@f1:
  6127                           	opt stack 0
  6128                           
  6129                           ; 3 bytes @ 0x1A
  6130  000188                     	ds	1
  6131  000189                     ??_UARTstring:
  6132  000189                     ??_Send_Config1:
  6133  000189                     ??_Send_Config2:
  6134  000189                     ?___llmod:
  6135                           	opt stack 0
  6136  000189                     BufferCopy@shift:
  6137                           	opt stack 0
  6138  000189                     SendLCDbyte@LSB_nibble:
  6139                           	opt stack 0
  6140  000189                     RTC_TIME_NONMilitary@temphours:
  6141                           	opt stack 0
  6142  000189                     InitUART@Baud:
  6143                           	opt stack 0
  6144  000189                     ___llmod@dividend:
  6145                           	opt stack 0
  6146                           
  6147                           ; 4 bytes @ 0x1B
  6148  000189                     	ds	1
  6149  00018A                     BufferCopy@i:
  6150                           	opt stack 0
  6151  00018A                     SetLCDcursor@Col:
  6152                           	opt stack 0
  6153  00018A                     LCDPrintChar@character:
  6154                           	opt stack 0
  6155  00018A                     ___aldiv@counter:
  6156                           	opt stack 0
  6157  00018A                     LCDPrintString@Text:
  6158                           	opt stack 0
  6159                           
  6160                           ; 2 bytes @ 0x1C
  6161  00018A                     	ds	1
  6162  00018B                     ?_InternalADC_Read:
  6163                           	opt stack 0
  6164  00018B                     Send_Config1@i:
  6165                           	opt stack 0
  6166  00018B                     Send_Config2@pin:
  6167                           	opt stack 0
  6168  00018B                     SetLCDcursor@Row:
  6169                           	opt stack 0
  6170  00018B                     ___aldiv@sign:
  6171                           	opt stack 0
  6172  00018B                     RemoveSpaces@This:
  6173                           	opt stack 0
  6174  00018B                     StringAddEqual@Input:
  6175                           	opt stack 0
  6176  00018B                     LCD_Scroll@This:
  6177                           	opt stack 0
  6178  00018B                     ___ftdiv@f2:
  6179                           	opt stack 0
  6180                           
  6181                           ; 3 bytes @ 0x1D
  6182  00018B                     	ds	1
  6183  00018C                     ??_GetEnteredNumber:
  6184  00018C                     Send_Config1@pin:
  6185                           	opt stack 0
  6186  00018C                     Send_Config2@i:
  6187                           	opt stack 0
  6188  00018C                     SetLCDcursor@address:
  6189                           	opt stack 0
  6190  00018C                     LCDPrintString@c:
  6191                           	opt stack 0
  6192  00018C                     ___aldiv@quotient:
  6193                           	opt stack 0
  6194                           
  6195                           ; 4 bytes @ 0x1E
  6196  00018C                     	ds	1
  6197  00018D                     ??_InternalADC_Read:
  6198  00018D                     ??_SET_RTC_TIME:
  6199  00018D                     ??_StringAddEqual:
  6200  00018D                     InitUART@parity:
  6201                           	opt stack 0
  6202  00018D                     READ_RTC_TIME@Error:
  6203                           	opt stack 0
  6204  00018D                     ___llmod@divisor:
  6205                           	opt stack 0
  6206                           
  6207                           ; 4 bytes @ 0x1F
  6208  00018D                     	ds	1
  6209  00018E                     ??_InitUART:
  6210  00018E                     ??___ftdiv:
  6211  00018E                     LCDdisplayFeedback@Text:
  6212                           	opt stack 0
  6213                           
  6214                           ; 2 bytes @ 0x20
  6215  00018E                     	ds	1
  6216  00018F                     InternalADC_Read@channel:
  6217                           	opt stack 0
  6218                           
  6219                           ; 1 bytes @ 0x21
  6220  00018F                     	ds	1
  6221  000190                     SetFreq@freq:
  6222                           	opt stack 0
  6223                           
  6224                           ; 2 bytes @ 0x22
  6225  000190                     	ds	1
  6226  000191                     GetEnteredNumber@i:
  6227                           	opt stack 0
  6228  000191                     ___ftdiv@cntr:
  6229                           	opt stack 0
  6230  000191                     ___llmod@counter:
  6231                           	opt stack 0
  6232  000191                     SET_RTC_TIME@temp:
  6233                           	opt stack 0
  6234                           
  6235                           ; 7 bytes @ 0x23
  6236  000191                     	ds	1
  6237  000192                     ?_sprintf:
  6238                           	opt stack 0
  6239  000192                     GetEnteredNumber@negative:
  6240                           	opt stack 0
  6241  000192                     SetFreq@temp:
  6242                           	opt stack 0
  6243  000192                     InitUART@spbrg:
  6244                           	opt stack 0
  6245  000192                     sprintf@sp:
  6246                           	opt stack 0
  6247  000192                     ___ftdiv@f3:
  6248                           	opt stack 0
  6249                           
  6250                           ; 3 bytes @ 0x24
  6251  000192                     	ds	1
  6252  000193                     GetEnteredNumber@temp:
  6253                           	opt stack 0
  6254                           
  6255                           ; 4 bytes @ 0x25
  6256  000193                     	ds	1
  6257  000194                     InitUART@baudconfig:
  6258                           	opt stack 0
  6259  000194                     sprintf@f:
  6260                           	opt stack 0
  6261                           
  6262                           ; 2 bytes @ 0x26
  6263  000194                     	ds	1
  6264  000195                     InitUART@config:
  6265                           	opt stack 0
  6266  000195                     ___ftdiv@exp:
  6267                           	opt stack 0
  6268                           
  6269                           ; 1 bytes @ 0x27
  6270  000195                     	ds	1
  6271  000196                     ___ftdiv@sign:
  6272                           	opt stack 0
  6273  000196                     InitUART@temp:
  6274                           	opt stack 0
  6275                           
  6276                           ; 4 bytes @ 0x28
  6277  000196                     	ds	1
  6278  000197                     ?___ftmul:
  6279                           	opt stack 0
  6280  000197                     ___ftmul@f1:
  6281                           	opt stack 0
  6282  000197                     GetMemoryBaud@baud:
  6283                           	opt stack 0
  6284                           
  6285                           ; 4 bytes @ 0x29
  6286  000197                     	ds	1
  6287  000198                     SET_RTC_TIME@Error:
  6288                           	opt stack 0
  6289                           
  6290                           ; 1 bytes @ 0x2A
  6291  000198                     	ds	2
  6292  00019A                     ___ftmul@f2:
  6293                           	opt stack 0
  6294                           
  6295                           ; 3 bytes @ 0x2C
  6296  00019A                     	ds	1
  6297  00019B                     GetMemoryBaud@BaudTempH:
  6298                           	opt stack 0
  6299                           
  6300                           ; 1 bytes @ 0x2D
  6301  00019B                     	ds	1
  6302  00019C                     GetMemoryBaud@BaudTempMH:
  6303                           	opt stack 0
  6304                           
  6305                           ; 1 bytes @ 0x2E
  6306  00019C                     	ds	1
  6307  00019D                     ??___ftmul:
  6308  00019D                     GetMemoryBaud@BaudTempML:
  6309                           	opt stack 0
  6310                           
  6311                           ; 1 bytes @ 0x2F
  6312  00019D                     	ds	1
  6313  00019E                     GetMemoryBaud@BaudTempL:
  6314                           	opt stack 0
  6315                           
  6316                           ; 1 bytes @ 0x30
  6317  00019E                     	ds	1
  6318  00019F                     SetMemoryBaud@Baud:
  6319                           	opt stack 0
  6320                           
  6321                           ; 4 bytes @ 0x31
  6322  00019F                     	ds	1
  6323  0001A0                     ___ftmul@exp:
  6324                           	opt stack 0
  6325                           
  6326                           ; 1 bytes @ 0x32
  6327  0001A0                     	ds	1
  6328  0001A1                     ___ftmul@f3_as_product:
  6329                           	opt stack 0
  6330                           
  6331                           ; 3 bytes @ 0x33
  6332  0001A1                     	ds	1
  6333  0001A2                     ??_sprintf:
  6334                           
  6335                           ; 0 bytes @ 0x34
  6336  0001A2                     	ds	1
  6337  0001A3                     ??_SetMemoryBaud:
  6338                           
  6339                           ; 0 bytes @ 0x35
  6340  0001A3                     	ds	1
  6341  0001A4                     ___ftmul@cntr:
  6342                           	opt stack 0
  6343                           
  6344                           ; 1 bytes @ 0x36
  6345  0001A4                     	ds	1
  6346  0001A5                     ___ftmul@sign:
  6347                           	opt stack 0
  6348                           
  6349                           ; 1 bytes @ 0x37
  6350  0001A5                     	ds	1
  6351  0001A6                     ?___fttol:
  6352                           	opt stack 0
  6353  0001A6                     sprintf@idx:
  6354                           	opt stack 0
  6355  0001A6                     ___fttol@f1:
  6356                           	opt stack 0
  6357                           
  6358                           ; 3 bytes @ 0x38
  6359  0001A6                     	ds	1
  6360  0001A7                     sprintf@cp:
  6361                           	opt stack 0
  6362  0001A7                     SetMemoryBaud@Test:
  6363                           	opt stack 0
  6364                           
  6365                           ; 4 bytes @ 0x39
  6366  0001A7                     	ds	2
  6367  0001A9                     _sprintf$2834:
  6368                           	opt stack 0
  6369                           
  6370                           ; 2 bytes @ 0x3B
  6371  0001A9                     	ds	1
  6372  0001AA                     ??___fttol:
  6373                           
  6374                           ; 0 bytes @ 0x3C
  6375  0001AA                     	ds	1
  6376  0001AB                     SetMemoryBaud@BaudTempH:
  6377                           	opt stack 0
  6378  0001AB                     _sprintf$2835:
  6379                           	opt stack 0
  6380                           
  6381                           ; 2 bytes @ 0x3D
  6382  0001AB                     	ds	1
  6383  0001AC                     SetMemoryBaud@BaudTempMH:
  6384                           	opt stack 0
  6385                           
  6386                           ; 1 bytes @ 0x3E
  6387  0001AC                     	ds	1
  6388  0001AD                     SetMemoryBaud@BaudTempML:
  6389                           	opt stack 0
  6390  0001AD                     _sprintf$2841:
  6391                           	opt stack 0
  6392                           
  6393                           ; 2 bytes @ 0x3F
  6394  0001AD                     	ds	1
  6395  0001AE                     SetMemoryBaud@BaudTempL:
  6396                           	opt stack 0
  6397                           
  6398                           ; 1 bytes @ 0x40
  6399  0001AE                     	ds	1
  6400  0001AF                     ___fttol@sign1:
  6401                           	opt stack 0
  6402  0001AF                     sprintf@len:
  6403                           	opt stack 0
  6404                           
  6405                           ; 2 bytes @ 0x41
  6406  0001AF                     	ds	1
  6407  0001B0                     ___fttol@lval:
  6408                           	opt stack 0
  6409                           
  6410                           ; 4 bytes @ 0x42
  6411  0001B0                     	ds	1
  6412  0001B1                     sprintf@ap:
  6413                           	opt stack 0
  6414                           
  6415                           ; 2 bytes @ 0x43
  6416  0001B1                     	ds	2
  6417  0001B3                     sprintf@val:
  6418                           	opt stack 0
  6419                           
  6420                           ; 4 bytes @ 0x45
  6421  0001B3                     	ds	1
  6422  0001B4                     ___fttol@exp1:
  6423                           	opt stack 0
  6424                           
  6425                           ; 1 bytes @ 0x46
  6426  0001B4                     	ds	1
  6427  0001B5                     SetDuty@Duty:
  6428                           	opt stack 0
  6429  0001B5                     SetContrast@tempPR2:
  6430                           	opt stack 0
  6431                           
  6432                           ; 3 bytes @ 0x47
  6433  0001B5                     	ds	1
  6434  0001B6                     SetDuty@tempPR2:
  6435                           	opt stack 0
  6436                           
  6437                           ; 3 bytes @ 0x48
  6438  0001B6                     	ds	1
  6439  0001B7                     sprintf@prec:
  6440                           	opt stack 0
  6441                           
  6442                           ; 2 bytes @ 0x49
  6443  0001B7                     	ds	1
  6444  0001B8                     SetContrast@MSB:
  6445                           	opt stack 0
  6446                           
  6447                           ; 1 bytes @ 0x4A
  6448  0001B8                     	ds	1
  6449  0001B9                     SetContrast@LSB:
  6450                           	opt stack 0
  6451  0001B9                     SetDuty@MSB:
  6452                           	opt stack 0
  6453  0001B9                     sprintf@width:
  6454                           	opt stack 0
  6455                           
  6456                           ; 2 bytes @ 0x4B
  6457  0001B9                     	ds	1
  6458  0001BA                     SetDuty@LSB:
  6459                           	opt stack 0
  6460  0001BA                     SetContrast@temp:
  6461                           	opt stack 0
  6462                           
  6463                           ; 2 bytes @ 0x4C
  6464  0001BA                     	ds	1
  6465  0001BB                     sprintf@c:
  6466                           	opt stack 0
  6467  0001BB                     SetDuty@temp:
  6468                           	opt stack 0
  6469                           
  6470                           ; 2 bytes @ 0x4D
  6471  0001BB                     	ds	1
  6472  0001BC                     SetContrast@Duty:
  6473                           	opt stack 0
  6474  0001BC                     sprintf@flag:
  6475                           	opt stack 0
  6476                           
  6477                           ; 2 bytes @ 0x4E
  6478  0001BC                     	ds	1
  6479  0001BD                     
  6480                           ; 0 bytes @ 0x4F
  6481  0001BD                     	ds	1
  6482  0001BE                     SprintDate@ReturnBuf:
  6483                           	opt stack 0
  6484  0001BE                     SetBaud@Baud:
  6485                           	opt stack 0
  6486                           
  6487                           ; 4 bytes @ 0x50
  6488  0001BE                     	ds	2
  6489  0001C0                     SprintDate@DisplayTime:
  6490                           	opt stack 0
  6491                           
  6492                           ; 9 bytes @ 0x52
  6493  0001C0                     	ds	2
  6494  0001C2                     SetBaud@Parity:
  6495                           	opt stack 0
  6496                           
  6497                           ; 1 bytes @ 0x54
  6498  0001C2                     	ds	1
  6499  0001C3                     
  6500                           ; 0 bytes @ 0x55
  6501  0001C3                     	ds	6
  6502  0001C9                     SprintDate@Military:
  6503                           	opt stack 0
  6504                           
  6505                           ; 1 bytes @ 0x5B
  6506  0001C9                     	ds	1
  6507  0001CA                     Command@Input:
  6508                           	opt stack 0
  6509                           
  6510                           ; 2 bytes @ 0x5C
  6511  0001CA                     	ds	2
  6512  0001CC                     main@MemoryBurnflag:
  6513                           	opt stack 0
  6514                           
  6515                           ; 1 bytes @ 0x5E
  6516  0001CC                     	ds	1
  6517  0001CD                     main@ii:
  6518                           	opt stack 0
  6519                           
  6520                           ; 1 bytes @ 0x5F
  6521  0001CD                     	ds	1
  6522  0001CE                     main@Baudtemp:
  6523                           	opt stack 0
  6524                           
  6525                           ; 4 bytes @ 0x60
  6526  0001CE                     	ds	4
  6527  0001D2                     main@count:
  6528                           	opt stack 0
  6529                           
  6530                           ; 1 bytes @ 0x64
  6531  0001D2                     	ds	1
  6532                           tblptru	equ	0xFF8
  6533                           tblptrh	equ	0xFF7
  6534                           tblptrl	equ	0xFF6
  6535                           tablat	equ	0xFF5
  6536                           postinc0	equ	0xFEE
  6537                           wreg	equ	0xFE8
  6538                           postdec1	equ	0xFE5
  6539                           fsr1l	equ	0xFE1
  6540                           
  6541                           	psect	cstackBANK0
  6542  000060                     __pcstackBANK0:
  6543                           	opt stack 0
  6544  000060                     low_isr@TEMP_Rxdata:
  6545                           	opt stack 0
  6546                           
  6547                           ; 100 bytes @ 0x0
  6548  000060                     	ds	100
  6549  0000C4                     low_isr@LCD_TEMP:
  6550                           	opt stack 0
  6551                           
  6552                           ; 16 bytes @ 0x64
  6553  0000C4                     	ds	16
  6554  0000D4                     low_isr@i:
  6555                           	opt stack 0
  6556                           
  6557                           ; 2 bytes @ 0x74
  6558  0000D4                     	ds	2
  6559  0000D6                     low_isr@IRpin:
  6560                           	opt stack 0
  6561                           
  6562                           ; 1 bytes @ 0x76
  6563  0000D6                     	ds	1
  6564  0000D7                     low_isr@j:
  6565                           	opt stack 0
  6566                           
  6567                           ; 1 bytes @ 0x77
  6568  0000D7                     	ds	1
  6569  0000D8                     low_isr@rx:
  6570                           	opt stack 0
  6571                           
  6572                           ; 1 bytes @ 0x78
  6573  0000D8                     	ds	1
  6574                           tblptru	equ	0xFF8
  6575                           tblptrh	equ	0xFF7
  6576                           tblptrl	equ	0xFF6
  6577                           tablat	equ	0xFF5
  6578                           postinc0	equ	0xFEE
  6579                           wreg	equ	0xFE8
  6580                           postdec1	equ	0xFE5
  6581                           fsr1l	equ	0xFE1
  6582                           
  6583                           	psect	cstackCOMRAM
  6584  000001                     __pcstackCOMRAM:
  6585                           	opt stack 0
  6586  000001                     IsPrintableASCII@data:
  6587                           	opt stack 0
  6588  000001                     i1ReadUSART@data:
  6589                           	opt stack 0
  6590  000001                     IRrawToNEC@Raw:
  6591                           	opt stack 0
  6592  000001                     i1cleanBuffer@data:
  6593                           	opt stack 0
  6594  000001                     i1cleanBuffer16bit@data:
  6595                           	opt stack 0
  6596  000001                     i1CheckSum_byte@This:
  6597                           	opt stack 0
  6598  000001                     i1delayUS@US:
  6599                           	opt stack 0
  6600                           
  6601                           ; 4 bytes @ 0x0
  6602  000001                     	ds	2
  6603  000003                     i1CheckSum_byte@Odd_Even:
  6604                           	opt stack 0
  6605  000003                     IRrawToNEC@NEC:
  6606                           	opt stack 0
  6607  000003                     i1cleanBuffer@count:
  6608                           	opt stack 0
  6609  000003                     i1cleanBuffer16bit@count:
  6610                           	opt stack 0
  6611                           
  6612                           ; 2 bytes @ 0x2
  6613  000003                     	ds	1
  6614  000004                     i1CheckSum_byte@ThisTemp:
  6615                           	opt stack 0
  6616                           
  6617                           ; 2 bytes @ 0x3
  6618  000004                     	ds	1
  6619  000005                     ??i1_delayUS:
  6620  000005                     ??i1_cleanBuffer:
  6621  000005                     ??i1_cleanBuffer16bit:
  6622  000005                     IRrawToNEC@Invert:
  6623                           	opt stack 0
  6624                           
  6625                           ; 1 bytes @ 0x4
  6626  000005                     	ds	1
  6627  000006                     ??_IRrawToNEC:
  6628  000006                     i1CheckSum_byte@Parity:
  6629                           	opt stack 0
  6630  000006                     i1delayUS@i:
  6631                           	opt stack 0
  6632                           
  6633                           ; 4 bytes @ 0x5
  6634  000006                     	ds	1
  6635  000007                     i1CheckSum_byte@i:
  6636                           	opt stack 0
  6637                           
  6638                           ; 1 bytes @ 0x6
  6639  000007                     	ds	1
  6640  000008                     i1cleanBuffer@i:
  6641                           	opt stack 0
  6642  000008                     i1cleanBuffer16bit@i:
  6643                           	opt stack 0
  6644  000008                     i1UARTchar@NinethBit_override:
  6645                           	opt stack 0
  6646  000008                     IRrawToNEC@NECtemp:
  6647                           	opt stack 0
  6648                           
  6649                           ; 4 bytes @ 0x7
  6650  000008                     	ds	1
  6651  000009                     i1UARTchar@NinethBit_override_data:
  6652                           	opt stack 0
  6653  000009                     i1BufferCopy@from:
  6654                           	opt stack 0
  6655                           
  6656                           ; 2 bytes @ 0x8
  6657  000009                     	ds	1
  6658  00000A                     ??i1_UARTchar:
  6659  00000A                     i1delayUS@j:
  6660                           	opt stack 0
  6661                           
  6662                           ; 1 bytes @ 0x9
  6663  00000A                     	ds	1
  6664  00000B                     i1UARTchar@data:
  6665                           	opt stack 0
  6666  00000B                     i1SendLCDbyte@isCommand:
  6667                           	opt stack 0
  6668  00000B                     UseIRCode@Code:
  6669                           	opt stack 0
  6670  00000B                     i1BufferCopy@to:
  6671                           	opt stack 0
  6672                           
  6673                           ; 2 bytes @ 0xA
  6674  00000B                     	ds	1
  6675  00000C                     IRrawToNEC@Pause:
  6676                           	opt stack 0
  6677  00000C                     i1SendLCDbyte@data:
  6678                           	opt stack 0
  6679  00000C                     i1UARTstring@data:
  6680                           	opt stack 0
  6681                           
  6682                           ; 2 bytes @ 0xB
  6683  00000C                     	ds	1
  6684  00000D                     IRrawToNEC@first:
  6685                           	opt stack 0
  6686  00000D                     i1BufferCopy@count:
  6687                           	opt stack 0
  6688  00000D                     i1SendLCDbyte@MSB_nibble:
  6689                           	opt stack 0
  6690  00000D                     UseIRCode@NEC:
  6691                           	opt stack 0
  6692                           
  6693                           ; 4 bytes @ 0xC
  6694  00000D                     	ds	1
  6695  00000E                     ??i1_UARTstring:
  6696  00000E                     IRrawToNEC@i:
  6697                           	opt stack 0
  6698  00000E                     i1BufferCopy@shift:
  6699                           	opt stack 0
  6700  00000E                     i1SendLCDbyte@LSB_nibble:
  6701                           	opt stack 0
  6702                           
  6703                           ; 1 bytes @ 0xD
  6704  00000E                     	ds	1
  6705  00000F                     IRrawToNEC@StartBit:
  6706                           	opt stack 0
  6707  00000F                     i1BufferCopy@i:
  6708                           	opt stack 0
  6709  00000F                     i1SetLCDcursor@Col:
  6710                           	opt stack 0
  6711  00000F                     i1LCDPrintChar@character:
  6712                           	opt stack 0
  6713  00000F                     i1LCDPrintString@Text:
  6714                           	opt stack 0
  6715                           
  6716                           ; 2 bytes @ 0xE
  6717  00000F                     	ds	1
  6718  000010                     i1SetLCDcursor@Row:
  6719                           	opt stack 0
  6720                           
  6721                           ; 1 bytes @ 0xF
  6722  000010                     	ds	1
  6723  000011                     i1SetLCDcursor@address:
  6724                           	opt stack 0
  6725  000011                     i1LCDPrintString@c:
  6726                           	opt stack 0
  6727                           
  6728                           ; 2 bytes @ 0x10
  6729  000011                     	ds	1
  6730  000012                     UseIRCode@i:
  6731                           	opt stack 0
  6732                           
  6733                           ; 1 bytes @ 0x11
  6734  000012                     	ds	1
  6735  000013                     ??_low_isr:
  6736                           
  6737                           ; 0 bytes @ 0x12
  6738  000013                     	ds	21
  6739                           tblptru	equ	0xFF8
  6740                           tblptrh	equ	0xFF7
  6741                           tblptrl	equ	0xFF6
  6742                           tablat	equ	0xFF5
  6743                           postinc0	equ	0xFEE
  6744                           wreg	equ	0xFE8
  6745                           postdec1	equ	0xFE5
  6746                           fsr1l	equ	0xFE1
  6747                           
  6748 ;;
  6749 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6750 ;;
  6751 ;; *************** function _main *****************
  6752 ;; Defined at:
  6753 ;;		line 79 in file "main.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;		None
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  Baudtemp        4   96[BANK1 ] unsigned long 
  6758 ;;  count           1  100[BANK1 ] unsigned char 
  6759 ;;  ii              1   95[BANK1 ] unsigned char 
  6760 ;;  MemoryBurnfl    1   94[BANK1 ] unsigned char 
  6761 ;; Return value:  Size  Location     Type
  6762 ;;		None               void
  6763 ;; Registers used:
  6764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;Total ram usage:        7 bytes
  6775 ;; Hardware stack levels required when called:   12
  6776 ;; This function calls:
  6777 ;;		_ClearLCD
  6778 ;;		_Command
  6779 ;;		_ConfigureOscillator
  6780 ;;		_ContrastPWM_init
  6781 ;;		_EnableInternalADC
  6782 ;;		_GetMemoryBaud
  6783 ;;		_GetMemoryParity
  6784 ;;		_InitApp
  6785 ;;		_InitUART
  6786 ;;		_Init_I2C_Master
  6787 ;;		_LCDPrintChar
  6788 ;;		_LCDPrintString
  6789 ;;		_LCDScreenUpdate
  6790 ;;		_PWM_init
  6791 ;;		_RTC_INIT
  6792 ;;		_ReadUSART
  6793 ;;		_SetContrast
  6794 ;;		_SetDuty
  6795 ;;		_SetLCDcursor
  6796 ;;		_SetMemoryBaud
  6797 ;;		_SetMemoryParity
  6798 ;;		_UARTstring
  6799 ;;		_cleanBuffer
  6800 ;;		_delayUS
  6801 ;;		_init_IR
  6802 ;;		_init_LCD
  6803 ;; This function is called by:
  6804 ;;		Startup code after reset
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text0
  6809  0133AC                     __ptext0:
  6810                           	opt stack 0
  6811  0133AC                     _main:
  6812                           	opt stack 19
  6813                           
  6814                           ;main.c: 81: unsigned char ii = 0;
  6815                           
  6816                           ;incstack = 0
  6817  0133AC  0E00               	movlw	0
  6818  0133AE  0101               	movlb	1	; () banked
  6819  0133B0  6FCD               	movwf	main@ii& (0+255),b
  6820                           
  6821                           ;main.c: 82: unsigned char count = 0;
  6822  0133B2  0E00               	movlw	0
  6823  0133B4  0101               	movlb	1	; () banked
  6824  0133B6  6FD2               	movwf	main@count& (0+255),b
  6825                           
  6826                           ;main.c: 83: unsigned long Baudtemp = 0;
  6827  0133B8  0E00               	movlw	0
  6828  0133BA  0101               	movlb	1	; () banked
  6829  0133BC  6FCE               	movwf	main@Baudtemp& (0+255),b
  6830  0133BE  0E00               	movlw	0
  6831  0133C0  6FCF               	movwf	(main@Baudtemp+1)& (0+255),b
  6832  0133C2  0E00               	movlw	0
  6833  0133C4  6FD0               	movwf	(main@Baudtemp+2)& (0+255),b
  6834  0133C6  0E00               	movlw	0
  6835  0133C8  6FD1               	movwf	(main@Baudtemp+3)& (0+255),b
  6836                           
  6837                           ;main.c: 84: unsigned char MemoryBurnflag = 0;
  6838  0133CA  0E00               	movlw	0
  6839  0133CC  0101               	movlb	1	; () banked
  6840  0133CE  6FCC               	movwf	main@MemoryBurnflag& (0+255),b
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;main.c: 86: ConfigureOscillator();
  6844  0133D0  ECD3  F0BF         	call	_ConfigureOscillator	;wreg free
  6845                           
  6846                           ;main.c: 87: InitApp();
  6847  0133D4  EC9D  F0BB         	call	_InitApp	;wreg free
  6848                           
  6849                           ;main.c: 88: EnableInternalADC(1);
  6850  0133D8  0E01               	movlw	1
  6851  0133DA  ECF3  F0B3         	call	_EnableInternalADC
  6852                           
  6853                           ;main.c: 89: PWM_init();
  6854  0133DE  EC59  F0BE         	call	_PWM_init	;wreg free
  6855                           
  6856                           ;main.c: 90: ContrastPWM_init();
  6857  0133E2  ECC3  F0BF         	call	_ContrastPWM_init	;wreg free
  6858                           
  6859                           ;main.c: 91: Init_I2C_Master();
  6860  0133E6  EC21  F0BC         	call	_Init_I2C_Master	;wreg free
  6861                           
  6862                           ;main.c: 92: RTC_INIT();
  6863  0133EA  EC98  F0BF         	call	_RTC_INIT	;wreg free
  6864                           
  6865                           ;main.c: 93: init_IR();
  6866  0133EE  ECBB  F0BC         	call	_init_IR	;wreg free
  6867                           
  6868                           ;main.c: 94: init_LCD();
  6869  0133F2  EC38  F0AD         	call	_init_LCD	;wreg free
  6870                           
  6871                           ;main.c: 96: Baudtemp = GetMemoryBaud();
  6872  0133F6  EC7D  F0A9         	call	_GetMemoryBaud	;wreg free
  6873  0133FA  C17F  F1CE         	movff	?_GetMemoryBaud,main@Baudtemp
  6874  0133FE  C180  F1CF         	movff	?_GetMemoryBaud+1,main@Baudtemp+1
  6875  013402  C181  F1D0         	movff	?_GetMemoryBaud+2,main@Baudtemp+2
  6876  013406  C182  F1D1         	movff	?_GetMemoryBaud+3,main@Baudtemp+3
  6877                           
  6878                           ;main.c: 97: if(Baudtemp < 2400 || Baudtemp > 115200)
  6879  01340A  0101               	movlb	1	; () banked
  6880  01340C  51D1               	movf	(main@Baudtemp+3)& (0+255),w,b
  6881  01340E  0101               	movlb	1	; () banked
  6882  013410  11D0               	iorwf	(main@Baudtemp+2)& (0+255),w,b
  6883  013412  E108               	bnz	u19640
  6884  013414  0E60               	movlw	96
  6885  013416  0101               	movlb	1	; () banked
  6886  013418  5DCE               	subwf	main@Baudtemp& (0+255),w,b
  6887  01341A  0E09               	movlw	9
  6888  01341C  0101               	movlb	1	; () banked
  6889  01341E  59CF               	subwfb	(main@Baudtemp+1)& (0+255),w,b
  6890  013420  A0D8               	btfss	status,0,c
  6891  013422  D00F               	goto	l14899
  6892  013424                     u19640:
  6893                           
  6894                           ; BSR set to: 1
  6895  013424  0101               	movlb	1	; () banked
  6896  013426  51D1               	movf	(main@Baudtemp+3)& (0+255),w,b
  6897  013428  E10C               	bnz	l14899
  6898  01342A  0101               	movlb	1	; () banked
  6899  01342C  05CE               	decf	main@Baudtemp& (0+255),w,b
  6900  01342E  0EC2               	movlw	194
  6901  013430  0101               	movlb	1	; () banked
  6902  013432  59CF               	subwfb	(main@Baudtemp+1)& (0+255),w,b
  6903  013434  0E01               	movlw	1
  6904  013436  0101               	movlb	1	; () banked
  6905  013438  59D0               	subwfb	(main@Baudtemp+2)& (0+255),w,b
  6906  01343A  B0D8               	btfsc	status,0,c
  6907  01343C  D002               	goto	l14899
  6908  01343E  D01F               	goto	l14905
  6909  013440  D000               	goto	l14899
  6910  013442                     l14899:
  6911                           
  6912                           ; BSR set to: 1
  6913                           ;main.c: 98: {
  6914                           ;main.c: 99: if(SetMemoryBaud(9600))
  6915  013442  0E80               	movlw	128
  6916  013444  0101               	movlb	1	; () banked
  6917  013446  6F9F               	movwf	SetMemoryBaud@Baud& (0+255),b
  6918  013448  0E25               	movlw	37
  6919  01344A  6FA0               	movwf	(SetMemoryBaud@Baud+1)& (0+255),b
  6920  01344C  0E00               	movlw	0
  6921  01344E  6FA1               	movwf	(SetMemoryBaud@Baud+2)& (0+255),b
  6922  013450  0E00               	movlw	0
  6923  013452  6FA2               	movwf	(SetMemoryBaud@Baud+3)& (0+255),b
  6924  013454  ECB0  F0AF         	call	_SetMemoryBaud	;wreg free
  6925  013458  0900               	iorlw	0
  6926  01345A  B4D8               	btfsc	status,2,c
  6927  01345C  D003               	goto	l228
  6928                           
  6929                           ;main.c: 100: {
  6930                           ;main.c: 101: MemoryBurnflag = 1;
  6931  01345E  0E01               	movlw	1
  6932  013460  0101               	movlb	1	; () banked
  6933  013462  6FCC               	movwf	main@MemoryBurnflag& (0+255),b
  6934  013464                     l228:
  6935                           
  6936                           ;main.c: 102: }
  6937                           ;main.c: 103: Baudtemp = 9600;
  6938  013464  0E80               	movlw	128
  6939  013466  0101               	movlb	1	; () banked
  6940  013468  6FCE               	movwf	main@Baudtemp& (0+255),b
  6941  01346A  0E25               	movlw	37
  6942  01346C  6FCF               	movwf	(main@Baudtemp+1)& (0+255),b
  6943  01346E  0E00               	movlw	0
  6944  013470  6FD0               	movwf	(main@Baudtemp+2)& (0+255),b
  6945  013472  0E00               	movlw	0
  6946  013474  6FD1               	movwf	(main@Baudtemp+3)& (0+255),b
  6947                           
  6948                           ; BSR set to: 1
  6949                           ;main.c: 104: SetMemoryParity(0);
  6950  013476  0E00               	movlw	0
  6951  013478  ECF3  F0BD         	call	_SetMemoryParity
  6952  01347C  D000               	goto	l14905
  6953  01347E                     l14905:
  6954                           
  6955                           ;main.c: 105: }
  6956                           ;main.c: 106: InitUART(Baudtemp, GetMemoryParity());
  6957  01347E  C1CE  F189         	movff	main@Baudtemp,InitUART@Baud
  6958  013482  C1CF  F18A         	movff	main@Baudtemp+1,InitUART@Baud+1
  6959  013486  C1D0  F18B         	movff	main@Baudtemp+2,InitUART@Baud+2
  6960  01348A  C1D1  F18C         	movff	main@Baudtemp+3,InitUART@Baud+3
  6961  01348E  EC19  F0BF         	call	_GetMemoryParity	;wreg free
  6962  013492  0101               	movlb	1	; () banked
  6963  013494  6F8D               	movwf	InitUART@parity& (0+255),b
  6964  013496  EC08  F0A8         	call	_InitUART	;wreg free
  6965                           
  6966                           ;main.c: 107: UARTstring("Firmware Version: ");
  6967  01349A  0E13               	movlw	low STR_6
  6968  01349C  0101               	movlb	1	; () banked
  6969  01349E  6F87               	movwf	UARTstring@data& (0+255),b
  6970  0134A0  0EF8               	movlw	high STR_6
  6971  0134A2  0101               	movlb	1	; () banked
  6972  0134A4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  6973  0134A6  ECEB  F0B4         	call	_UARTstring	;wreg free
  6974                           
  6975                           ;main.c: 108: UARTstring(Version);
  6976  0134AA  0EC8               	movlw	low _Version
  6977  0134AC  0101               	movlb	1	; () banked
  6978  0134AE  6F87               	movwf	UARTstring@data& (0+255),b
  6979  0134B0  0E03               	movlw	high _Version
  6980  0134B2  0101               	movlb	1	; () banked
  6981  0134B4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  6982  0134B6  ECEB  F0B4         	call	_UARTstring	;wreg free
  6983                           
  6984                           ;main.c: 109: UARTstring("\r\n");
  6985  0134BA  0ECE               	movlw	low (STR_282+19)
  6986  0134BC  0101               	movlb	1	; () banked
  6987  0134BE  6F87               	movwf	UARTstring@data& (0+255),b
  6988  0134C0  0EF6               	movlw	high (STR_282+19)
  6989  0134C2  0101               	movlb	1	; () banked
  6990  0134C4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  6991  0134C6  ECEB  F0B4         	call	_UARTstring	;wreg free
  6992                           
  6993                           ;main.c: 111: for(ii =0; ii <10;ii++)
  6994  0134CA  0E00               	movlw	0
  6995  0134CC  0101               	movlb	1	; () banked
  6996  0134CE  6FCD               	movwf	main@ii& (0+255),b
  6997  0134D0                     l14915:
  6998                           
  6999                           ; BSR set to: 1
  7000  0134D0  0E09               	movlw	9
  7001  0134D2  0101               	movlb	1	; () banked
  7002  0134D4  65CD               	cpfsgt	main@ii& (0+255),b
  7003  0134D6  D001               	goto	l14919
  7004                           
  7005                           ; BSR set to: 1
  7006  0134D8  D01D               	goto	l14931
  7007  0134DA                     l14919:
  7008                           
  7009                           ; BSR set to: 1
  7010                           ;main.c: 112: {
  7011                           ;main.c: 113: LATD |= 0b00000010;
  7012  0134DA  828C               	bsf	3980,1,c	;volatile
  7013                           
  7014                           ;main.c: 114: LATD &= ~0b00000100;
  7015  0134DC  948C               	bcf	3980,2,c	;volatile
  7016                           
  7017                           ; BSR set to: 1
  7018                           ;main.c: 115: delayUS(50000);
  7019  0134DE  0E50               	movlw	80
  7020  0134E0  0101               	movlb	1	; () banked
  7021  0134E2  6F7C               	movwf	delayUS@US& (0+255),b
  7022  0134E4  0EC3               	movlw	195
  7023  0134E6  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7024  0134E8  0E00               	movlw	0
  7025  0134EA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7026  0134EC  0E00               	movlw	0
  7027  0134EE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7028  0134F0  EC38  F0BA         	call	_delayUS	;wreg free
  7029                           
  7030                           ;main.c: 116: LATD |= 0b00000100;
  7031  0134F4  848C               	bsf	3980,2,c	;volatile
  7032                           
  7033                           ;main.c: 117: LATD &= ~0b00000010;
  7034  0134F6  928C               	bcf	3980,1,c	;volatile
  7035                           
  7036                           ;main.c: 118: delayUS(50000);
  7037  0134F8  0E50               	movlw	80
  7038  0134FA  0101               	movlb	1	; () banked
  7039  0134FC  6F7C               	movwf	delayUS@US& (0+255),b
  7040  0134FE  0EC3               	movlw	195
  7041  013500  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7042  013502  0E00               	movlw	0
  7043  013504  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7044  013506  0E00               	movlw	0
  7045  013508  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7046  01350A  EC38  F0BA         	call	_delayUS	;wreg free
  7047  01350E  0101               	movlb	1	; () banked
  7048  013510  2BCD               	incf	main@ii& (0+255),f,b
  7049  013512  D7DE               	goto	l14915
  7050  013514                     l14931:
  7051                           
  7052                           ; BSR set to: 1
  7053                           ;main.c: 119: }
  7054                           ;main.c: 120: LATD &= ~0b00000100;
  7055  013514  948C               	bcf	3980,2,c	;volatile
  7056                           
  7057                           ; BSR set to: 1
  7058                           ;main.c: 121: SetContrast(65);
  7059  013516  0E41               	movlw	65
  7060  013518  EC5C  F0B1         	call	_SetContrast
  7061                           
  7062                           ;main.c: 122: delayUS(20);
  7063  01351C  0E14               	movlw	20
  7064  01351E  0101               	movlb	1	; () banked
  7065  013520  6F7C               	movwf	delayUS@US& (0+255),b
  7066  013522  0E00               	movlw	0
  7067  013524  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7068  013526  0E00               	movlw	0
  7069  013528  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7070  01352A  0E00               	movlw	0
  7071  01352C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7072  01352E  EC38  F0BA         	call	_delayUS	;wreg free
  7073                           
  7074                           ;main.c: 123: SetLCDcursor(0, 0);
  7075  013532  0E00               	movlw	0
  7076  013534  0101               	movlb	1	; () banked
  7077  013536  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7078  013538  0E00               	movlw	0
  7079  01353A  EC60  F0BD         	call	_SetLCDcursor
  7080                           
  7081                           ;main.c: 124: if(MemoryBurnflag)
  7082  01353E  0101               	movlb	1	; () banked
  7083  013540  51CC               	movf	main@MemoryBurnflag& (0+255),w,b
  7084  013542  0101               	movlb	1	; () banked
  7085  013544  B4D8               	btfsc	status,2,c
  7086  013546  D024               	goto	l14949
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;main.c: 125: {
  7090                           ;main.c: 126: UARTstring("Error: Could not burn default Baud rate into Memory\r\n");
  7091  013548  0E4E               	movlw	low STR_8
  7092  01354A  0101               	movlb	1	; () banked
  7093  01354C  6F87               	movwf	UARTstring@data& (0+255),b
  7094  01354E  0EF0               	movlw	high STR_8
  7095  013550  0101               	movlb	1	; () banked
  7096  013552  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  7097  013554  ECEB  F0B4         	call	_UARTstring	;wreg free
  7098                           
  7099                           ;main.c: 127: LCDPrintString("Err: Baud Mem");
  7100  013558  0EC5               	movlw	low STR_9
  7101  01355A  0101               	movlb	1	; () banked
  7102  01355C  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7103  01355E  0EFC               	movlw	high STR_9
  7104  013560  0101               	movlb	1	; () banked
  7105  013562  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7106  013564  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7107                           
  7108                           ;main.c: 128: delayUS(100000);
  7109  013568  0EA0               	movlw	160
  7110  01356A  0101               	movlb	1	; () banked
  7111  01356C  6F7C               	movwf	delayUS@US& (0+255),b
  7112  01356E  0E86               	movlw	134
  7113  013570  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7114  013572  0E01               	movlw	1
  7115  013574  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7116  013576  0E00               	movlw	0
  7117  013578  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7118  01357A  EC38  F0BA         	call	_delayUS	;wreg free
  7119                           
  7120                           ;main.c: 129: ClearLCD();
  7121  01357E  EC37  F0BF         	call	_ClearLCD	;wreg free
  7122                           
  7123                           ;main.c: 130: SetLCDcursor(0, 0);
  7124  013582  0E00               	movlw	0
  7125  013584  0101               	movlb	1	; () banked
  7126  013586  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7127  013588  0E00               	movlw	0
  7128  01358A  EC60  F0BD         	call	_SetLCDcursor
  7129  01358E  D000               	goto	l14949
  7130  013590                     l14949:
  7131                           
  7132                           ;main.c: 131: }
  7133                           ;main.c: 132: LCDPrintString("Starting");
  7134  013590  0EE9               	movlw	low STR_10
  7135  013592  0101               	movlb	1	; () banked
  7136  013594  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7137  013596  0EFE               	movlw	high STR_10
  7138  013598  0101               	movlb	1	; () banked
  7139  01359A  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7140  01359C  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7141                           
  7142                           ;main.c: 133: UARTstring("Starting...");
  7143  0135A0  0EAB               	movlw	low STR_11
  7144  0135A2  0101               	movlb	1	; () banked
  7145  0135A4  6F87               	movwf	UARTstring@data& (0+255),b
  7146  0135A6  0EFD               	movlw	high STR_11
  7147  0135A8  0101               	movlb	1	; () banked
  7148  0135AA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  7149  0135AC  ECEB  F0B4         	call	_UARTstring	;wreg free
  7150                           
  7151                           ;main.c: 134: delayUS(100000);
  7152  0135B0  0EA0               	movlw	160
  7153  0135B2  0101               	movlb	1	; () banked
  7154  0135B4  6F7C               	movwf	delayUS@US& (0+255),b
  7155  0135B6  0E86               	movlw	134
  7156  0135B8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7157  0135BA  0E01               	movlw	1
  7158  0135BC  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7159  0135BE  0E00               	movlw	0
  7160  0135C0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7161  0135C2  EC38  F0BA         	call	_delayUS	;wreg free
  7162                           
  7163                           ;main.c: 135: SetLCDcursor(0, 0);
  7164  0135C6  0E00               	movlw	0
  7165  0135C8  0101               	movlb	1	; () banked
  7166  0135CA  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7167  0135CC  0E00               	movlw	0
  7168  0135CE  EC60  F0BD         	call	_SetLCDcursor
  7169                           
  7170                           ;main.c: 136: LCDPrintString("Starting.");
  7171  0135D2  0E7C               	movlw	low STR_12
  7172  0135D4  0101               	movlb	1	; () banked
  7173  0135D6  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7174  0135D8  0EFE               	movlw	high STR_12
  7175  0135DA  0101               	movlb	1	; () banked
  7176  0135DC  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7177  0135DE  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7178                           
  7179                           ;main.c: 137: delayUS(100000);
  7180  0135E2  0EA0               	movlw	160
  7181  0135E4  0101               	movlb	1	; () banked
  7182  0135E6  6F7C               	movwf	delayUS@US& (0+255),b
  7183  0135E8  0E86               	movlw	134
  7184  0135EA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7185  0135EC  0E01               	movlw	1
  7186  0135EE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7187  0135F0  0E00               	movlw	0
  7188  0135F2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7189  0135F4  EC38  F0BA         	call	_delayUS	;wreg free
  7190                           
  7191                           ;main.c: 138: SetLCDcursor(0, 0);
  7192  0135F8  0E00               	movlw	0
  7193  0135FA  0101               	movlb	1	; () banked
  7194  0135FC  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7195  0135FE  0E00               	movlw	0
  7196  013600  EC60  F0BD         	call	_SetLCDcursor
  7197                           
  7198                           ;main.c: 139: LCDPrintString("Starting..");
  7199  013604  0EF9               	movlw	low STR_13
  7200  013606  0101               	movlb	1	; () banked
  7201  013608  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7202  01360A  0EFD               	movlw	high STR_13
  7203  01360C  0101               	movlb	1	; () banked
  7204  01360E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7205  013610  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7206                           
  7207                           ;main.c: 140: delayUS(100000);
  7208  013614  0EA0               	movlw	160
  7209  013616  0101               	movlb	1	; () banked
  7210  013618  6F7C               	movwf	delayUS@US& (0+255),b
  7211  01361A  0E86               	movlw	134
  7212  01361C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7213  01361E  0E01               	movlw	1
  7214  013620  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7215  013622  0E00               	movlw	0
  7216  013624  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7217  013626  EC38  F0BA         	call	_delayUS	;wreg free
  7218                           
  7219                           ;main.c: 141: SetLCDcursor(0, 0);
  7220  01362A  0E00               	movlw	0
  7221  01362C  0101               	movlb	1	; () banked
  7222  01362E  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7223  013630  0E00               	movlw	0
  7224  013632  EC60  F0BD         	call	_SetLCDcursor
  7225                           
  7226                           ;main.c: 142: LCDPrintString("Starting...");
  7227  013636  0EAB               	movlw	low STR_11
  7228  013638  0101               	movlb	1	; () banked
  7229  01363A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7230  01363C  0EFD               	movlw	high STR_11
  7231  01363E  0101               	movlb	1	; () banked
  7232  013640  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7233  013642  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7234                           
  7235                           ;main.c: 143: delayUS(100000);
  7236  013646  0EA0               	movlw	160
  7237  013648  0101               	movlb	1	; () banked
  7238  01364A  6F7C               	movwf	delayUS@US& (0+255),b
  7239  01364C  0E86               	movlw	134
  7240  01364E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7241  013650  0E01               	movlw	1
  7242  013652  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7243  013654  0E00               	movlw	0
  7244  013656  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7245  013658  EC38  F0BA         	call	_delayUS	;wreg free
  7246                           
  7247                           ;main.c: 144: SetLCDcursor(0, 0);
  7248  01365C  0E00               	movlw	0
  7249  01365E  0101               	movlb	1	; () banked
  7250  013660  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7251  013662  0E00               	movlw	0
  7252  013664  EC60  F0BD         	call	_SetLCDcursor
  7253                           
  7254                           ;main.c: 145: LCDPrintString("Starting....");
  7255  013668  0E62               	movlw	low STR_15
  7256  01366A  0101               	movlb	1	; () banked
  7257  01366C  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7258  01366E  0EFD               	movlw	high STR_15
  7259  013670  0101               	movlb	1	; () banked
  7260  013672  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7261  013674  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7262                           
  7263                           ;main.c: 146: delayUS(100000);
  7264  013678  0EA0               	movlw	160
  7265  01367A  0101               	movlb	1	; () banked
  7266  01367C  6F7C               	movwf	delayUS@US& (0+255),b
  7267  01367E  0E86               	movlw	134
  7268  013680  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7269  013682  0E01               	movlw	1
  7270  013684  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7271  013686  0E00               	movlw	0
  7272  013688  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7273  01368A  EC38  F0BA         	call	_delayUS	;wreg free
  7274                           
  7275                           ;main.c: 147: SetLCDcursor(0, 0);
  7276  01368E  0E00               	movlw	0
  7277  013690  0101               	movlb	1	; () banked
  7278  013692  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7279  013694  0E00               	movlw	0
  7280  013696  EC60  F0BD         	call	_SetLCDcursor
  7281                           
  7282                           ;main.c: 148: LCDPrintString("Starting.....");
  7283  01369A  0EB7               	movlw	low STR_16
  7284  01369C  0101               	movlb	1	; () banked
  7285  01369E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7286  0136A0  0EFC               	movlw	high STR_16
  7287  0136A2  0101               	movlb	1	; () banked
  7288  0136A4  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7289  0136A6  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7290                           
  7291                           ;main.c: 149: delayUS(100000);
  7292  0136AA  0EA0               	movlw	160
  7293  0136AC  0101               	movlb	1	; () banked
  7294  0136AE  6F7C               	movwf	delayUS@US& (0+255),b
  7295  0136B0  0E86               	movlw	134
  7296  0136B2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7297  0136B4  0E01               	movlw	1
  7298  0136B6  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7299  0136B8  0E00               	movlw	0
  7300  0136BA  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7301  0136BC  EC38  F0BA         	call	_delayUS	;wreg free
  7302                           
  7303                           ;main.c: 150: SetLCDcursor(0, 0);
  7304  0136C0  0E00               	movlw	0
  7305  0136C2  0101               	movlb	1	; () banked
  7306  0136C4  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7307  0136C6  0E00               	movlw	0
  7308  0136C8  EC60  F0BD         	call	_SetLCDcursor
  7309                           
  7310                           ;main.c: 151: LCDPrintString("Starting......");
  7311  0136CC  0E1C               	movlw	low STR_17
  7312  0136CE  0101               	movlb	1	; () banked
  7313  0136D0  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7314  0136D2  0EFC               	movlw	high STR_17
  7315  0136D4  0101               	movlb	1	; () banked
  7316  0136D6  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7317  0136D8  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7318                           
  7319                           ;main.c: 152: delayUS(100000);
  7320  0136DC  0EA0               	movlw	160
  7321  0136DE  0101               	movlb	1	; () banked
  7322  0136E0  6F7C               	movwf	delayUS@US& (0+255),b
  7323  0136E2  0E86               	movlw	134
  7324  0136E4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7325  0136E6  0E01               	movlw	1
  7326  0136E8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7327  0136EA  0E00               	movlw	0
  7328  0136EC  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7329  0136EE  EC38  F0BA         	call	_delayUS	;wreg free
  7330                           
  7331                           ;main.c: 153: SetLCDcursor(0, 0);
  7332  0136F2  0E00               	movlw	0
  7333  0136F4  0101               	movlb	1	; () banked
  7334  0136F6  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7335  0136F8  0E00               	movlw	0
  7336  0136FA  EC60  F0BD         	call	_SetLCDcursor
  7337                           
  7338                           ;main.c: 154: LCDPrintString("Starting.......");
  7339  0136FE  0E49               	movlw	low STR_18
  7340  013700  0101               	movlb	1	; () banked
  7341  013702  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7342  013704  0EFB               	movlw	high STR_18
  7343  013706  0101               	movlb	1	; () banked
  7344  013708  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7345  01370A  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7346                           
  7347                           ;main.c: 155: delayUS(100000);
  7348  01370E  0EA0               	movlw	160
  7349  013710  0101               	movlb	1	; () banked
  7350  013712  6F7C               	movwf	delayUS@US& (0+255),b
  7351  013714  0E86               	movlw	134
  7352  013716  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7353  013718  0E01               	movlw	1
  7354  01371A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7355  01371C  0E00               	movlw	0
  7356  01371E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7357  013720  EC38  F0BA         	call	_delayUS	;wreg free
  7358                           
  7359                           ;main.c: 156: SetLCDcursor(0, 0);
  7360  013724  0E00               	movlw	0
  7361  013726  0101               	movlb	1	; () banked
  7362  013728  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7363  01372A  0E00               	movlw	0
  7364  01372C  EC60  F0BD         	call	_SetLCDcursor
  7365                           
  7366                           ;main.c: 157: LCDPrintString("Starting........");
  7367  013730  0ED8               	movlw	low STR_19
  7368  013732  0101               	movlb	1	; () banked
  7369  013734  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7370  013736  0EF9               	movlw	high STR_19
  7371  013738  0101               	movlb	1	; () banked
  7372  01373A  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7373  01373C  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7374                           
  7375                           ;main.c: 158: delayUS(100000);
  7376  013740  0EA0               	movlw	160
  7377  013742  0101               	movlb	1	; () banked
  7378  013744  6F7C               	movwf	delayUS@US& (0+255),b
  7379  013746  0E86               	movlw	134
  7380  013748  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7381  01374A  0E01               	movlw	1
  7382  01374C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7383  01374E  0E00               	movlw	0
  7384  013750  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7385  013752  EC38  F0BA         	call	_delayUS	;wreg free
  7386                           
  7387                           ;main.c: 159: SetLCDcursor(1, 0);
  7388  013756  0E00               	movlw	0
  7389  013758  0101               	movlb	1	; () banked
  7390  01375A  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7391  01375C  0E01               	movlw	1
  7392  01375E  EC60  F0BD         	call	_SetLCDcursor
  7393                           
  7394                           ;main.c: 160: LCDPrintString("Enter '?'");
  7395  013762  0E72               	movlw	low STR_20
  7396  013764  0101               	movlb	1	; () banked
  7397  013766  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7398  013768  0EFE               	movlw	high STR_20
  7399  01376A  0101               	movlb	1	; () banked
  7400  01376C  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7401  01376E  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  7402                           
  7403                           ;main.c: 161: delayUS(100000);
  7404  013772  0EA0               	movlw	160
  7405  013774  0101               	movlb	1	; () banked
  7406  013776  6F7C               	movwf	delayUS@US& (0+255),b
  7407  013778  0E86               	movlw	134
  7408  01377A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7409  01377C  0E01               	movlw	1
  7410  01377E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7411  013780  0E00               	movlw	0
  7412  013782  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7413  013784  EC38  F0BA         	call	_delayUS	;wreg free
  7414                           
  7415                           ;main.c: 162: UARTstring("\r\nEnter '?' for Help Menu\r\n>");
  7416  013788  0EB6               	movlw	low STR_21
  7417  01378A  0101               	movlb	1	; () banked
  7418  01378C  6F87               	movwf	UARTstring@data& (0+255),b
  7419  01378E  0EF4               	movlw	high STR_21
  7420  013790  0101               	movlb	1	; () banked
  7421  013792  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  7422  013794  ECEB  F0B4         	call	_UARTstring	;wreg free
  7423                           
  7424                           ;main.c: 164: for(count =100; count >0; count-=5)
  7425  013798  0E64               	movlw	100
  7426  01379A  0101               	movlb	1	; () banked
  7427  01379C  6FD2               	movwf	main@count& (0+255),b
  7428  01379E                     l14995:
  7429                           
  7430                           ; BSR set to: 1
  7431  01379E  0101               	movlb	1	; () banked
  7432  0137A0  51D2               	movf	main@count& (0+255),w,b
  7433  0137A2  0101               	movlb	1	; () banked
  7434  0137A4  B4D8               	btfsc	status,2,c
  7435  0137A6  D015               	goto	l15005
  7436  0137A8  D001               	goto	l14999
  7437                           
  7438                           ; BSR set to: 1
  7439  0137AA  D013               	goto	l15005
  7440  0137AC                     l14999:
  7441                           
  7442                           ; BSR set to: 1
  7443                           ;main.c: 165: {
  7444                           ;main.c: 166: SetDuty(count);
  7445  0137AC  0101               	movlb	1	; () banked
  7446  0137AE  51D2               	movf	main@count& (0+255),w,b
  7447  0137B0  EC9A  F0B3         	call	_SetDuty
  7448                           
  7449                           ;main.c: 167: delayUS(50000);
  7450  0137B4  0E50               	movlw	80
  7451  0137B6  0101               	movlb	1	; () banked
  7452  0137B8  6F7C               	movwf	delayUS@US& (0+255),b
  7453  0137BA  0EC3               	movlw	195
  7454  0137BC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7455  0137BE  0E00               	movlw	0
  7456  0137C0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7457  0137C2  0E00               	movlw	0
  7458  0137C4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7459  0137C6  EC38  F0BA         	call	_delayUS	;wreg free
  7460  0137CA  0E05               	movlw	5
  7461  0137CC  0101               	movlb	1	; () banked
  7462  0137CE  5FD2               	subwf	main@count& (0+255),f,b
  7463  0137D0  D7E6               	goto	l14995
  7464  0137D2                     l15005:
  7465                           
  7466                           ; BSR set to: 1
  7467                           ;main.c: 168: }
  7468                           ;main.c: 170: LATD &= ~(0b00000010+0b00000100);
  7469  0137D2  0EF9               	movlw	249
  7470  0137D4  168C               	andwf	3980,f,c	;volatile
  7471                           
  7472                           ; BSR set to: 1
  7473                           ;main.c: 171: ReadUSART();
  7474  0137D6  EC0D  F0BE         	call	_ReadUSART	;wreg free
  7475                           
  7476                           ;main.c: 172: ReadUSART();
  7477  0137DA  EC0D  F0BE         	call	_ReadUSART	;wreg free
  7478                           
  7479                           ;main.c: 173: ReadUSART();
  7480  0137DE  EC0D  F0BE         	call	_ReadUSART	;wreg free
  7481                           
  7482                           ;main.c: 175: ClearLCD();
  7483  0137E2  EC37  F0BF         	call	_ClearLCD	;wreg free
  7484                           
  7485                           ;main.c: 176: SetLCDcursor(0, 0);
  7486  0137E6  0E00               	movlw	0
  7487  0137E8  0101               	movlb	1	; () banked
  7488  0137EA  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7489  0137EC  0E00               	movlw	0
  7490  0137EE  EC60  F0BD         	call	_SetLCDcursor
  7491                           
  7492                           ;main.c: 177: LCDPrintChar('>');
  7493  0137F2  0E3E               	movlw	62
  7494  0137F4  EC7B  F0BF         	call	_LCDPrintChar
  7495  0137F8  D000               	goto	l15019
  7496  0137FA                     l15019:
  7497                           
  7498                           ;main.c: 180: {
  7499                           ;main.c: 182: LCDScreenUpdate();
  7500  0137FA  ECA9  F09E         	call	_LCDScreenUpdate	;wreg free
  7501                           
  7502                           ;main.c: 183: if(BlueLEDcount < 25)
  7503  0137FE  0101               	movlb	1	; () banked
  7504  013800  51DC               	movf	(_BlueLEDcount+1)& (0+255),w,b
  7505  013802  E109               	bnz	l15025
  7506  013804  0E19               	movlw	25
  7507  013806  0101               	movlb	1	; () banked
  7508  013808  5DDB               	subwf	_BlueLEDcount& (0+255),w,b
  7509  01380A  B0D8               	btfsc	status,0,c
  7510  01380C  D004               	goto	l15025
  7511                           
  7512                           ; BSR set to: 1
  7513                           ;main.c: 184: {
  7514                           ;main.c: 185: BlueLEDcount++;
  7515  01380E  0101               	movlb	1	; () banked
  7516  013810  4BDB               	infsnz	_BlueLEDcount& (0+255),f,b
  7517  013812  2BDC               	incf	(_BlueLEDcount+1)& (0+255),f,b
  7518                           
  7519                           ;main.c: 186: }
  7520  013814  D003               	goto	l15027
  7521  013816                     l15025:
  7522                           
  7523                           ; BSR set to: 1
  7524                           ;main.c: 187: else
  7525                           ;main.c: 188: {
  7526                           ;main.c: 189: LATD &= ~0b00000010;
  7527  013816  928C               	bcf	3980,1,c	;volatile
  7528                           
  7529                           ;main.c: 190: LATD &= ~0b00000100;
  7530  013818  948C               	bcf	3980,2,c	;volatile
  7531  01381A  D000               	goto	l15027
  7532  01381C                     l15027:
  7533                           
  7534                           ; BSR set to: 1
  7535                           ;main.c: 191: }
  7536                           ;main.c: 192: if(Rxdata[0] != 0)
  7537  01381C  0103               	movlb	3	; () banked
  7538  01381E  5164               	movf	_Rxdata& (0+255),w,b
  7539  013820  B4D8               	btfsc	status,2,c
  7540  013822  D7EB               	goto	l15019
  7541                           
  7542                           ; BSR set to: 3
  7543                           ;main.c: 193: {
  7544                           ;main.c: 194: if (Rxdata[0] != '\r' && Rxdata[0] != '\n')
  7545  013824  0E0D               	movlw	13
  7546  013826  0103               	movlb	3	; () banked
  7547  013828  1964               	xorwf	_Rxdata& (0+255),w,b
  7548  01382A  B4D8               	btfsc	status,2,c
  7549  01382C  D019               	goto	l15037
  7550                           
  7551                           ; BSR set to: 3
  7552  01382E  0E0A               	movlw	10
  7553  013830  0103               	movlb	3	; () banked
  7554  013832  1964               	xorwf	_Rxdata& (0+255),w,b
  7555  013834  B4D8               	btfsc	status,2,c
  7556  013836  D014               	goto	l15037
  7557                           
  7558                           ; BSR set to: 3
  7559                           ;main.c: 195: {
  7560                           ;main.c: 196: if(Command(Rxdata))
  7561  013838  0E64               	movlw	low _Rxdata
  7562  01383A  0101               	movlb	1	; () banked
  7563  01383C  6FCA               	movwf	Command@Input& (0+255),b
  7564  01383E  0E03               	movlw	high _Rxdata
  7565  013840  0101               	movlb	1	; () banked
  7566  013842  6FCB               	movwf	(Command@Input+1)& (0+255),b
  7567  013844  EC00  F080         	call	_Command	;wreg free
  7568  013848  0900               	iorlw	0
  7569  01384A  B4D8               	btfsc	status,2,c
  7570  01384C  D009               	goto	l15037
  7571                           
  7572                           ;main.c: 197: {
  7573                           ;main.c: 198: UARTstring("\r\n>");
  7574  01384E  0ECF               	movlw	low (STR_21+25)
  7575  013850  0101               	movlb	1	; () banked
  7576  013852  6F87               	movwf	UARTstring@data& (0+255),b
  7577  013854  0EF4               	movlw	high (STR_21+25)
  7578  013856  0101               	movlb	1	; () banked
  7579  013858  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  7580  01385A  ECEB  F0B4         	call	_UARTstring	;wreg free
  7581  01385E  D000               	goto	l15037
  7582  013860                     l15037:
  7583                           
  7584                           ;main.c: 199: }
  7585                           ;main.c: 200: }
  7586                           ;main.c: 201: cleanBuffer(Rxdata, 100);
  7587  013860  0E64               	movlw	low _Rxdata
  7588  013862  0101               	movlb	1	; () banked
  7589  013864  6F7C               	movwf	cleanBuffer@data& (0+255),b
  7590  013866  0E03               	movlw	high _Rxdata
  7591  013868  0101               	movlb	1	; () banked
  7592  01386A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  7593  01386C  0E00               	movlw	0
  7594  01386E  0101               	movlb	1	; () banked
  7595  013870  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  7596  013872  0E64               	movlw	100
  7597  013874  6F7E               	movwf	cleanBuffer@count& (0+255),b
  7598  013876  ECCB  F0BB         	call	_cleanBuffer	;wreg free
  7599  01387A  D7BF               	goto	l15019
  7600  01387C  EF5E  F002         	goto	start
  7601  013880                     __end_of_main:
  7602                           	opt stack 0
  7603                           tblptru	equ	0xFF8
  7604                           tblptrh	equ	0xFF7
  7605                           tblptrl	equ	0xFF6
  7606                           tablat	equ	0xFF5
  7607                           postinc0	equ	0xFEE
  7608                           wreg	equ	0xFE8
  7609                           postdec1	equ	0xFE5
  7610                           fsr1l	equ	0xFE1
  7611                           status	equ	0xFD8
  7612                           
  7613 ;; *************** function _init_LCD *****************
  7614 ;; Defined at:
  7615 ;;		line 66 in file "LCD.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;		None
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;		None               void
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;Total ram usage:        0 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:   10
  7636 ;; This function calls:
  7637 ;;		_ClearLCD
  7638 ;;		_PulseEnablePin
  7639 ;;		_SendLCDbyte
  7640 ;;		_delayUS
  7641 ;; This function is called by:
  7642 ;;		_main
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text1
  7647  015A70                     __ptext1:
  7648                           	opt stack 0
  7649  015A70                     _init_LCD:
  7650                           	opt stack 20
  7651                           
  7652                           ;LCD.c: 68: LATD &= ~(0b01000000);
  7653                           
  7654                           ;incstack = 0
  7655  015A70  9C8C               	bcf	3980,6,c	;volatile
  7656                           
  7657                           ;LCD.c: 69: PulseEnablePin();
  7658  015A72  EC27  F0BE         	call	_PulseEnablePin	;wreg free
  7659                           
  7660                           ;LCD.c: 70: LATD &= ~(0b10000000 + 0b00100000);
  7661  015A76  0E5F               	movlw	95
  7662  015A78  168C               	andwf	3980,f,c	;volatile
  7663                           
  7664                           ;LCD.c: 71: PulseEnablePin();
  7665  015A7A  EC27  F0BE         	call	_PulseEnablePin	;wreg free
  7666                           
  7667                           ;LCD.c: 73: delayUS(50000);
  7668  015A7E  0E50               	movlw	80
  7669  015A80  0101               	movlb	1	; () banked
  7670  015A82  6F7C               	movwf	delayUS@US& (0+255),b
  7671  015A84  0EC3               	movlw	195
  7672  015A86  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7673  015A88  0E00               	movlw	0
  7674  015A8A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7675  015A8C  0E00               	movlw	0
  7676  015A8E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7677  015A90  EC38  F0BA         	call	_delayUS	;wreg free
  7678                           
  7679                           ;LCD.c: 74: SendLCDbyte(0x00, 1);
  7680  015A94  0E01               	movlw	1
  7681  015A96  0101               	movlb	1	; () banked
  7682  015A98  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  7683  015A9A  0E00               	movlw	0
  7684  015A9C  ECC3  F0AE         	call	_SendLCDbyte
  7685                           
  7686                           ;LCD.c: 75: delayUS(50000);
  7687  015AA0  0E50               	movlw	80
  7688  015AA2  0101               	movlb	1	; () banked
  7689  015AA4  6F7C               	movwf	delayUS@US& (0+255),b
  7690  015AA6  0EC3               	movlw	195
  7691  015AA8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7692  015AAA  0E00               	movlw	0
  7693  015AAC  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7694  015AAE  0E00               	movlw	0
  7695  015AB0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7696  015AB2  EC38  F0BA         	call	_delayUS	;wreg free
  7697                           
  7698                           ;LCD.c: 76: SendLCDbyte(0x00, 0);
  7699  015AB6  0E00               	movlw	0
  7700  015AB8  0101               	movlb	1	; () banked
  7701  015ABA  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  7702  015ABC  0E00               	movlw	0
  7703  015ABE  ECC3  F0AE         	call	_SendLCDbyte
  7704                           
  7705                           ;LCD.c: 77: delayUS(50000);
  7706  015AC2  0E50               	movlw	80
  7707  015AC4  0101               	movlb	1	; () banked
  7708  015AC6  6F7C               	movwf	delayUS@US& (0+255),b
  7709  015AC8  0EC3               	movlw	195
  7710  015ACA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7711  015ACC  0E00               	movlw	0
  7712  015ACE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7713  015AD0  0E00               	movlw	0
  7714  015AD2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7715  015AD4  EC38  F0BA         	call	_delayUS	;wreg free
  7716                           
  7717                           ;LCD.c: 79: LATA |= (0b00100000);
  7718  015AD8  8A89               	bsf	3977,5,c	;volatile
  7719                           
  7720                           ;LCD.c: 80: delayUS(50000);
  7721  015ADA  0E50               	movlw	80
  7722  015ADC  0101               	movlb	1	; () banked
  7723  015ADE  6F7C               	movwf	delayUS@US& (0+255),b
  7724  015AE0  0EC3               	movlw	195
  7725  015AE2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7726  015AE4  0E00               	movlw	0
  7727  015AE6  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7728  015AE8  0E00               	movlw	0
  7729  015AEA  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7730  015AEC  EC38  F0BA         	call	_delayUS	;wreg free
  7731                           
  7732                           ;LCD.c: 81: PulseEnablePin();
  7733  015AF0  EC27  F0BE         	call	_PulseEnablePin	;wreg free
  7734                           
  7735                           ;LCD.c: 82: delayUS(50000);
  7736  015AF4  0E50               	movlw	80
  7737  015AF6  0101               	movlb	1	; () banked
  7738  015AF8  6F7C               	movwf	delayUS@US& (0+255),b
  7739  015AFA  0EC3               	movlw	195
  7740  015AFC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7741  015AFE  0E00               	movlw	0
  7742  015B00  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7743  015B02  0E00               	movlw	0
  7744  015B04  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7745  015B06  EC38  F0BA         	call	_delayUS	;wreg free
  7746                           
  7747                           ;LCD.c: 86: SendLCDbyte(0x28, 0);
  7748  015B0A  0E00               	movlw	0
  7749  015B0C  0101               	movlb	1	; () banked
  7750  015B0E  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  7751  015B10  0E28               	movlw	40
  7752  015B12  ECC3  F0AE         	call	_SendLCDbyte
  7753                           
  7754                           ;LCD.c: 87: delayUS(50000);
  7755  015B16  0E50               	movlw	80
  7756  015B18  0101               	movlb	1	; () banked
  7757  015B1A  6F7C               	movwf	delayUS@US& (0+255),b
  7758  015B1C  0EC3               	movlw	195
  7759  015B1E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7760  015B20  0E00               	movlw	0
  7761  015B22  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7762  015B24  0E00               	movlw	0
  7763  015B26  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7764  015B28  EC38  F0BA         	call	_delayUS	;wreg free
  7765                           
  7766                           ;LCD.c: 90: SendLCDbyte(0x0C, 0);
  7767  015B2C  0E00               	movlw	0
  7768  015B2E  0101               	movlb	1	; () banked
  7769  015B30  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  7770  015B32  0E0C               	movlw	12
  7771  015B34  ECC3  F0AE         	call	_SendLCDbyte
  7772                           
  7773                           ;LCD.c: 91: delayUS(50000);
  7774  015B38  0E50               	movlw	80
  7775  015B3A  0101               	movlb	1	; () banked
  7776  015B3C  6F7C               	movwf	delayUS@US& (0+255),b
  7777  015B3E  0EC3               	movlw	195
  7778  015B40  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7779  015B42  0E00               	movlw	0
  7780  015B44  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7781  015B46  0E00               	movlw	0
  7782  015B48  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7783  015B4A  EC38  F0BA         	call	_delayUS	;wreg free
  7784                           
  7785                           ;LCD.c: 94: SendLCDbyte(0x06, 0);
  7786  015B4E  0E00               	movlw	0
  7787  015B50  0101               	movlb	1	; () banked
  7788  015B52  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  7789  015B54  0E06               	movlw	6
  7790  015B56  ECC3  F0AE         	call	_SendLCDbyte
  7791                           
  7792                           ;LCD.c: 95: delayUS(50000);
  7793  015B5A  0E50               	movlw	80
  7794  015B5C  0101               	movlb	1	; () banked
  7795  015B5E  6F7C               	movwf	delayUS@US& (0+255),b
  7796  015B60  0EC3               	movlw	195
  7797  015B62  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7798  015B64  0E00               	movlw	0
  7799  015B66  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7800  015B68  0E00               	movlw	0
  7801  015B6A  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7802  015B6C  EC38  F0BA         	call	_delayUS	;wreg free
  7803                           
  7804                           ;LCD.c: 97: ClearLCD();
  7805  015B70  EC37  F0BF         	call	_ClearLCD	;wreg free
  7806                           
  7807                           ;LCD.c: 98: delayUS(50000);
  7808  015B74  0E50               	movlw	80
  7809  015B76  0101               	movlb	1	; () banked
  7810  015B78  6F7C               	movwf	delayUS@US& (0+255),b
  7811  015B7A  0EC3               	movlw	195
  7812  015B7C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7813  015B7E  0E00               	movlw	0
  7814  015B80  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7815  015B82  0E00               	movlw	0
  7816  015B84  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7817  015B86  EC38  F0BA         	call	_delayUS	;wreg free
  7818  015B8A  0012               	return		;funcret
  7819  015B8C                     __end_of_init_LCD:
  7820                           	opt stack 0
  7821                           tblptru	equ	0xFF8
  7822                           tblptrh	equ	0xFF7
  7823                           tblptrl	equ	0xFF6
  7824                           tablat	equ	0xFF5
  7825                           postinc0	equ	0xFEE
  7826                           wreg	equ	0xFE8
  7827                           postdec1	equ	0xFE5
  7828                           fsr1l	equ	0xFE1
  7829                           status	equ	0xFD8
  7830                           
  7831 ;; *************** function _init_IR *****************
  7832 ;; Defined at:
  7833 ;;		line 61 in file "IR.c"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;		None
  7838 ;; Return value:  Size  Location     Type
  7839 ;;		None               void
  7840 ;; Registers used:
  7841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7842 ;; Tracked objects:
  7843 ;;		On entry : 0/0
  7844 ;;		On exit  : 0/0
  7845 ;;		Unchanged: 0/0
  7846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;Total ram usage:        0 bytes
  7852 ;; Hardware stack levels used:    1
  7853 ;; Hardware stack levels required when called:    8
  7854 ;; This function calls:
  7855 ;;		_ReadIRpin
  7856 ;;		_Start_Timer0
  7857 ;;		_cleanBuffer16bit
  7858 ;;		_init_Timer0
  7859 ;; This function is called by:
  7860 ;;		_main
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text2
  7865  017976                     __ptext2:
  7866                           	opt stack 0
  7867  017976                     _init_IR:
  7868                           	opt stack 22
  7869                           
  7870                           ;IR.c: 64: INTCON2bits.RBPU = 0;
  7871                           
  7872                           ;incstack = 0
  7873  017976  9EF1               	bcf	intcon2,7,c	;volatile
  7874                           
  7875                           ;IR.c: 66: INTCON2bits.RBIP = 0;
  7876  017978  90F1               	bcf	intcon2,0,c	;volatile
  7877                           
  7878                           ;IR.c: 68: IRpinOLD = ReadIRpin();
  7879  01797A  ECA0  F0BF         	call	_ReadIRpin	;wreg free
  7880  01797E  0100               	movlb	0	; () banked
  7881  017980  6FDB               	movwf	_IRpinOLD& (0+255),b
  7882                           
  7883                           ;IR.c: 70: init_Timer0();
  7884  017982  EC50  F0BF         	call	_init_Timer0	;wreg free
  7885                           
  7886                           ;IR.c: 72: cleanBuffer16bit(IRRawCode, 72);
  7887  017986  0E64               	movlw	low _IRRawCode
  7888  017988  0101               	movlb	1	; () banked
  7889  01798A  6F7C               	movwf	cleanBuffer16bit@data& (0+255),b
  7890  01798C  0E04               	movlw	high _IRRawCode
  7891  01798E  0101               	movlb	1	; () banked
  7892  017990  6F7D               	movwf	(cleanBuffer16bit@data+1)& (0+255),b
  7893  017992  0E00               	movlw	0
  7894  017994  0101               	movlb	1	; () banked
  7895  017996  6F7F               	movwf	(cleanBuffer16bit@count+1)& (0+255),b
  7896  017998  0E48               	movlw	72
  7897  01799A  6F7E               	movwf	cleanBuffer16bit@count& (0+255),b
  7898  01799C  EC6E  F0BB         	call	_cleanBuffer16bit	;wreg free
  7899                           
  7900                           ;IR.c: 73: IR_NEC = 0;
  7901  0179A0  0E00               	movlw	0
  7902  0179A2  0100               	movlb	0	; () banked
  7903  0179A4  6FEF               	movwf	_IR_NEC& (0+255),b
  7904  0179A6  0E00               	movlw	0
  7905  0179A8  6FF0               	movwf	(_IR_NEC+1)& (0+255),b
  7906  0179AA  0E00               	movlw	0
  7907  0179AC  6FF1               	movwf	(_IR_NEC+2)& (0+255),b
  7908  0179AE  0E00               	movlw	0
  7909  0179B0  6FF2               	movwf	(_IR_NEC+3)& (0+255),b
  7910                           
  7911                           ; BSR set to: 0
  7912                           ;IR.c: 75: Start_Timer0();
  7913  0179B2  ECD9  F0BF         	call	_Start_Timer0	;wreg free
  7914                           
  7915                           ;IR.c: 77: INTCONbits.TMR0IF = 0;
  7916  0179B6  94F2               	bcf	intcon,2,c	;volatile
  7917                           
  7918                           ;IR.c: 78: INTCONbits.TMR0IE = 0;
  7919  0179B8  9AF2               	bcf	intcon,5,c	;volatile
  7920                           
  7921                           ;IR.c: 80: INTCONbits.RBIE = 1;
  7922  0179BA  86F2               	bsf	intcon,3,c	;volatile
  7923  0179BC  0012               	return		;funcret
  7924  0179BE                     __end_of_init_IR:
  7925                           	opt stack 0
  7926                           tblptru	equ	0xFF8
  7927                           tblptrh	equ	0xFF7
  7928                           tblptrl	equ	0xFF6
  7929                           tablat	equ	0xFF5
  7930                           intcon	equ	0xFF2
  7931                           intcon2	equ	0xFF1
  7932                           postinc0	equ	0xFEE
  7933                           wreg	equ	0xFE8
  7934                           postdec1	equ	0xFE5
  7935                           fsr1l	equ	0xFE1
  7936                           status	equ	0xFD8
  7937                           
  7938 ;; *************** function _init_Timer0 *****************
  7939 ;; Defined at:
  7940 ;;		line 58 in file "Timer.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;		None
  7943 ;; Auto vars:     Size  Location     Type
  7944 ;;		None
  7945 ;; Return value:  Size  Location     Type
  7946 ;;		None               void
  7947 ;; Registers used:
  7948 ;;		wreg, status,2, cstack
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;Total ram usage:        0 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; Hardware stack levels required when called:    7
  7961 ;; This function calls:
  7962 ;;		_Stop_Timer0
  7963 ;; This function is called by:
  7964 ;;		_init_IR
  7965 ;;		_init_Timers
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text3
  7970  017EA0                     __ptext3:
  7971                           	opt stack 0
  7972  017EA0                     _init_Timer0:
  7973                           	opt stack 22
  7974                           
  7975                           ;Timer.c: 60: Stop_Timer0();
  7976                           
  7977                           ;incstack = 0
  7978  017EA0  ECD7  F0BF         	call	_Stop_Timer0	;wreg free
  7979                           
  7980                           ;Timer.c: 62: INTCON2bits.T0IP = 0;
  7981  017EA4  94F1               	bcf	intcon2,2,c	;volatile
  7982                           
  7983                           ;Timer.c: 64: T0CONbits.T08BIT = 0;
  7984  017EA6  9CD5               	bcf	4053,6,c	;volatile
  7985                           
  7986                           ;Timer.c: 66: T0CONbits.T0CS = 0;
  7987  017EA8  9AD5               	bcf	4053,5,c	;volatile
  7988                           
  7989                           ;Timer.c: 68: T0CONbits.PSA = 0;
  7990  017EAA  96D5               	bcf	4053,3,c	;volatile
  7991                           
  7992                           ;Timer.c: 70: T0CONbits.T0PS = 0x4;
  7993  017EAC  50D5               	movf	4053,w,c	;volatile
  7994  017EAE  0BF8               	andlw	-8
  7995  017EB0  0904               	iorlw	4
  7996  017EB2  6ED5               	movwf	4053,c	;volatile
  7997  017EB4  0012               	return		;funcret
  7998  017EB6                     __end_of_init_Timer0:
  7999                           	opt stack 0
  8000                           tblptru	equ	0xFF8
  8001                           tblptrh	equ	0xFF7
  8002                           tblptrl	equ	0xFF6
  8003                           tablat	equ	0xFF5
  8004                           intcon	equ	0xFF2
  8005                           intcon2	equ	0xFF1
  8006                           postinc0	equ	0xFEE
  8007                           wreg	equ	0xFE8
  8008                           postdec1	equ	0xFE5
  8009                           fsr1l	equ	0xFE1
  8010                           status	equ	0xFD8
  8011                           
  8012 ;; *************** function _Stop_Timer0 *****************
  8013 ;; Defined at:
  8014 ;;		line 79 in file "Timer.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;		None               void
  8021 ;; Registers used:
  8022 ;;		None
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;Total ram usage:        0 bytes
  8033 ;; Hardware stack levels used:    1
  8034 ;; Hardware stack levels required when called:    6
  8035 ;; This function calls:
  8036 ;;		Nothing
  8037 ;; This function is called by:
  8038 ;;		_init_Timer0
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text4
  8043  017FAE                     __ptext4:
  8044                           	opt stack 0
  8045  017FAE                     _Stop_Timer0:
  8046                           	opt stack 22
  8047                           
  8048                           ;Timer.c: 82: T0CONbits.TMR0ON =0;
  8049                           
  8050                           ;incstack = 0
  8051  017FAE  9ED5               	bcf	4053,7,c	;volatile
  8052  017FB0  0012               	return		;funcret
  8053  017FB2                     __end_of_Stop_Timer0:
  8054                           	opt stack 0
  8055                           tblptru	equ	0xFF8
  8056                           tblptrh	equ	0xFF7
  8057                           tblptrl	equ	0xFF6
  8058                           tablat	equ	0xFF5
  8059                           intcon	equ	0xFF2
  8060                           intcon2	equ	0xFF1
  8061                           postinc0	equ	0xFEE
  8062                           wreg	equ	0xFE8
  8063                           postdec1	equ	0xFE5
  8064                           fsr1l	equ	0xFE1
  8065                           status	equ	0xFD8
  8066                           
  8067 ;; *************** function _cleanBuffer16bit *****************
  8068 ;; Defined at:
  8069 ;;		line 89 in file "MISC.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  data            2   14[BANK1 ] PTR unsigned int 
  8072 ;;		 -> IRRawCode(144), 
  8073 ;;  count           2   16[BANK1 ] int 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  i               1   21[BANK1 ] unsigned char 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;		None               void
  8078 ;; Registers used:
  8079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8085 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;Total ram usage:        8 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    6
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_init_IR
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           	psect	text5
  8100  0176DC                     __ptext5:
  8101                           	opt stack 0
  8102  0176DC                     _cleanBuffer16bit:
  8103                           	opt stack 23
  8104                           
  8105                           ;MISC.c: 91: unsigned char i=0;
  8106                           
  8107                           ;incstack = 0
  8108  0176DC  0E00               	movlw	0
  8109  0176DE  0101               	movlb	1	; () banked
  8110  0176E0  6F83               	movwf	cleanBuffer16bit@i& (0+255),b
  8111                           
  8112                           ;MISC.c: 92: for(i=0; i<count;i++)
  8113  0176E2  0E00               	movlw	0
  8114  0176E4  0101               	movlb	1	; () banked
  8115  0176E6  6F83               	movwf	cleanBuffer16bit@i& (0+255),b
  8116  0176E8  D012               	goto	l8459
  8117  0176EA                     l8455:
  8118                           
  8119                           ; BSR set to: 1
  8120                           ;MISC.c: 93: {
  8121                           ;MISC.c: 94: data[i]= 0;
  8122  0176EA  0101               	movlb	1	; () banked
  8123  0176EC  5183               	movf	cleanBuffer16bit@i& (0+255),w,b
  8124  0176EE  0D02               	mullw	2
  8125  0176F0  50F3               	movf	prodl,w,c
  8126  0176F2  0101               	movlb	1	; () banked
  8127  0176F4  257C               	addwf	cleanBuffer16bit@data& (0+255),w,b
  8128  0176F6  6ED9               	movwf	fsr2l,c
  8129  0176F8  50F4               	movf	prodh,w,c
  8130  0176FA  0101               	movlb	1	; () banked
  8131  0176FC  217D               	addwfc	(cleanBuffer16bit@data+1)& (0+255),w,b
  8132  0176FE  6EDA               	movwf	fsr2h,c
  8133  017700  0E00               	movlw	0
  8134  017702  6EDE               	movwf	postinc2,c
  8135  017704  0E00               	movlw	0
  8136  017706  6EDD               	movwf	postdec2,c
  8137                           
  8138                           ; BSR set to: 1
  8139  017708  0101               	movlb	1	; () banked
  8140  01770A  2B83               	incf	cleanBuffer16bit@i& (0+255),f,b
  8141  01770C  D000               	goto	l8459
  8142  01770E                     l8459:
  8143                           
  8144                           ; BSR set to: 1
  8145  01770E  0101               	movlb	1	; () banked
  8146  017710  5183               	movf	cleanBuffer16bit@i& (0+255),w,b
  8147  017712  0101               	movlb	1	; () banked
  8148  017714  6F80               	movwf	??_cleanBuffer16bit& (0+255),b
  8149  017716  6B81               	clrf	(??_cleanBuffer16bit+1)& (0+255),b
  8150  017718  0101               	movlb	1	; () banked
  8151  01771A  517E               	movf	cleanBuffer16bit@count& (0+255),w,b
  8152  01771C  0101               	movlb	1	; () banked
  8153  01771E  5D80               	subwf	??_cleanBuffer16bit& (0+255),w,b
  8154  017720  0101               	movlb	1	; () banked
  8155  017722  5181               	movf	(??_cleanBuffer16bit+1)& (0+255),w,b
  8156  017724  0A80               	xorlw	128
  8157  017726  0101               	movlb	1	; () banked
  8158  017728  6F82               	movwf	(??_cleanBuffer16bit+2)& (0+255),b
  8159  01772A  0101               	movlb	1	; () banked
  8160  01772C  517F               	movf	(cleanBuffer16bit@count+1)& (0+255),w,b
  8161  01772E  0A80               	xorlw	128
  8162  017730  0101               	movlb	1	; () banked
  8163  017732  5982               	subwfb	(??_cleanBuffer16bit+2)& (0+255),w,b
  8164  017734  A0D8               	btfss	status,0,c
  8165  017736  D7D9               	goto	l8455
  8166                           
  8167                           ; BSR set to: 1
  8168                           
  8169                           ; BSR set to: 1
  8170  017738  0012               	return		;funcret
  8171  01773A                     __end_of_cleanBuffer16bit:
  8172                           	opt stack 0
  8173                           tblptru	equ	0xFF8
  8174                           tblptrh	equ	0xFF7
  8175                           tblptrl	equ	0xFF6
  8176                           tablat	equ	0xFF5
  8177                           prodh	equ	0xFF4
  8178                           prodl	equ	0xFF3
  8179                           intcon	equ	0xFF2
  8180                           intcon2	equ	0xFF1
  8181                           postinc0	equ	0xFEE
  8182                           wreg	equ	0xFE8
  8183                           postdec1	equ	0xFE5
  8184                           fsr1l	equ	0xFE1
  8185                           postinc2	equ	0xFDE
  8186                           postdec2	equ	0xFDD
  8187                           fsr2h	equ	0xFDA
  8188                           fsr2l	equ	0xFD9
  8189                           status	equ	0xFD8
  8190                           
  8191 ;; *************** function _Start_Timer0 *****************
  8192 ;; Defined at:
  8193 ;;		line 90 in file "Timer.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;		None
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;		None
  8198 ;; Return value:  Size  Location     Type
  8199 ;;		None               void
  8200 ;; Registers used:
  8201 ;;		None
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8211 ;;Total ram usage:        0 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    6
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_init_IR
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           	psect	text6
  8222  017FB2                     __ptext6:
  8223                           	opt stack 0
  8224  017FB2                     _Start_Timer0:
  8225                           	opt stack 23
  8226                           
  8227                           ;Timer.c: 93: T0CONbits.TMR0ON =1;
  8228                           
  8229                           ; BSR set to: 1
  8230                           ;incstack = 0
  8231  017FB2  8ED5               	bsf	4053,7,c	;volatile
  8232  017FB4  0012               	return		;funcret
  8233  017FB6                     __end_of_Start_Timer0:
  8234                           	opt stack 0
  8235                           tblptru	equ	0xFF8
  8236                           tblptrh	equ	0xFF7
  8237                           tblptrl	equ	0xFF6
  8238                           tablat	equ	0xFF5
  8239                           prodh	equ	0xFF4
  8240                           prodl	equ	0xFF3
  8241                           intcon	equ	0xFF2
  8242                           intcon2	equ	0xFF1
  8243                           postinc0	equ	0xFEE
  8244                           wreg	equ	0xFE8
  8245                           postdec1	equ	0xFE5
  8246                           fsr1l	equ	0xFE1
  8247                           postinc2	equ	0xFDE
  8248                           postdec2	equ	0xFDD
  8249                           fsr2h	equ	0xFDA
  8250                           fsr2l	equ	0xFD9
  8251                           status	equ	0xFD8
  8252                           
  8253 ;; *************** function _ReadIRpin *****************
  8254 ;; Defined at:
  8255 ;;		line 88 in file "IR.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;		None
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;		None
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1    wreg      unsigned char 
  8262 ;; Registers used:
  8263 ;;		wreg
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;Total ram usage:        0 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:    6
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_init_IR
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text7
  8284  017F40                     __ptext7:
  8285                           	opt stack 0
  8286  017F40                     _ReadIRpin:
  8287                           	opt stack 23
  8288                           
  8289                           ;IR.c: 91: if((PORTB & 0b00010000) == 0b00010000)
  8290                           
  8291                           ;incstack = 0
  8292  017F40  A881               	btfss	3969,4,c	;volatile
  8293  017F42  D002               	goto	l8449
  8294                           
  8295                           ;IR.c: 92: {
  8296                           ;IR.c: 93: return (1);
  8297  017F44  0E01               	movlw	1
  8298                           
  8299                           ;IR.c: 94: }
  8300  017F46  0012               	return	
  8301  017F48                     l8449:
  8302                           
  8303                           ;IR.c: 95: else
  8304                           ;IR.c: 96: {
  8305                           ;IR.c: 97: return 0;
  8306  017F48  0E00               	movlw	0
  8307  017F4A  0012               	return	
  8308  017F4C  0012               	return		;funcret
  8309  017F4E                     __end_of_ReadIRpin:
  8310                           	opt stack 0
  8311                           tblptru	equ	0xFF8
  8312                           tblptrh	equ	0xFF7
  8313                           tblptrl	equ	0xFF6
  8314                           tablat	equ	0xFF5
  8315                           prodh	equ	0xFF4
  8316                           prodl	equ	0xFF3
  8317                           intcon	equ	0xFF2
  8318                           intcon2	equ	0xFF1
  8319                           postinc0	equ	0xFEE
  8320                           wreg	equ	0xFE8
  8321                           postdec1	equ	0xFE5
  8322                           fsr1l	equ	0xFE1
  8323                           postinc2	equ	0xFDE
  8324                           postdec2	equ	0xFDD
  8325                           fsr2h	equ	0xFDA
  8326                           fsr2l	equ	0xFD9
  8327                           status	equ	0xFD8
  8328                           
  8329 ;; *************** function _RTC_INIT *****************
  8330 ;; Defined at:
  8331 ;;		line 57 in file "RTC.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;		None
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;		None               void
  8338 ;; Registers used:
  8339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;Total ram usage:        0 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:   10
  8352 ;; This function calls:
  8353 ;;		_InternalADC_Read
  8354 ;;		_RTC_Clock_Enable
  8355 ;;		_RTC_TIME_NONMilitary
  8356 ;; This function is called by:
  8357 ;;		_main
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text8
  8362  017F30                     __ptext8:
  8363                           	opt stack 0
  8364  017F30                     _RTC_INIT:
  8365                           	opt stack 20
  8366                           
  8367                           ;RTC.c: 59: RTC_Clock_Enable();
  8368                           
  8369                           ;incstack = 0
  8370  017F30  EC6F  F0BC         	call	_RTC_Clock_Enable	;wreg free
  8371                           
  8372                           ;RTC.c: 60: RTC_TIME_NONMilitary();
  8373  017F34  EC6E  F0BA         	call	_RTC_TIME_NONMilitary	;wreg free
  8374                           
  8375                           ;RTC.c: 61: InternalADC_Read(2);
  8376  017F38  0E02               	movlw	2
  8377  017F3A  ECA3  F0BA         	call	_InternalADC_Read
  8378  017F3E  0012               	return		;funcret
  8379  017F40                     __end_of_RTC_INIT:
  8380                           	opt stack 0
  8381                           tblptru	equ	0xFF8
  8382                           tblptrh	equ	0xFF7
  8383                           tblptrl	equ	0xFF6
  8384                           tablat	equ	0xFF5
  8385                           prodh	equ	0xFF4
  8386                           prodl	equ	0xFF3
  8387                           intcon	equ	0xFF2
  8388                           intcon2	equ	0xFF1
  8389                           postinc0	equ	0xFEE
  8390                           wreg	equ	0xFE8
  8391                           postdec1	equ	0xFE5
  8392                           fsr1l	equ	0xFE1
  8393                           postinc2	equ	0xFDE
  8394                           postdec2	equ	0xFDD
  8395                           fsr2h	equ	0xFDA
  8396                           fsr2l	equ	0xFD9
  8397                           status	equ	0xFD8
  8398                           
  8399 ;; *************** function _RTC_TIME_NONMilitary *****************
  8400 ;; Defined at:
  8401 ;;		line 89 in file "RTC.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;		None
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  temphours       2   27[BANK1 ] int 
  8406 ;;  Error           2   25[BANK1 ] int 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;		None               void
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0, cstack
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;Total ram usage:        5 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    9
  8423 ;; This function calls:
  8424 ;;		_I2C_Read_At_Address
  8425 ;;		_I2C_Write_At_Address
  8426 ;;		_ResetI2C
  8427 ;; This function is called by:
  8428 ;;		_RTC_INIT
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text9
  8433  0174DC                     __ptext9:
  8434                           	opt stack 0
  8435  0174DC                     _RTC_TIME_NONMilitary:
  8436                           	opt stack 20
  8437                           
  8438                           ;RTC.c: 91: int temphours = 0;
  8439                           
  8440                           ;incstack = 0
  8441  0174DC  0E00               	movlw	0
  8442  0174DE  0101               	movlb	1	; () banked
  8443  0174E0  6F8A               	movwf	(RTC_TIME_NONMilitary@temphours+1)& (0+255),b
  8444  0174E2  0E00               	movlw	0
  8445  0174E4  6F89               	movwf	RTC_TIME_NONMilitary@temphours& (0+255),b
  8446                           
  8447                           ; BSR set to: 1
  8448                           ;RTC.c: 92: int Error = -1;
  8449  0174E6  0101               	movlb	1	; () banked
  8450  0174E8  6987               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  8451  0174EA  6988               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  8452                           
  8453                           ; BSR set to: 1
  8454                           ;RTC.c: 94: temphours = I2C_Read_At_Address(0b1101000, 0x02);
  8455  0174EC  0E02               	movlw	2
  8456  0174EE  0101               	movlb	1	; () banked
  8457  0174F0  6F7E               	movwf	I2C_Read_At_Address@Register& (0+255),b
  8458  0174F2  0E68               	movlw	104
  8459  0174F4  EC7B  F0AB         	call	_I2C_Read_At_Address
  8460  0174F8  C17E  F189         	movff	?_I2C_Read_At_Address,RTC_TIME_NONMilitary@temphours
  8461  0174FC  C17F  F18A         	movff	?_I2C_Read_At_Address+1,RTC_TIME_NONMilitary@temphours+1
  8462                           
  8463                           ;RTC.c: 95: if(temphours >= 0)
  8464  017500  0101               	movlb	1	; () banked
  8465  017502  BF8A               	btfsc	(RTC_TIME_NONMilitary@temphours+1)& (0+255),7,b
  8466  017504  D015               	goto	l1193
  8467                           
  8468                           ; BSR set to: 1
  8469                           ;RTC.c: 96: {
  8470                           ;RTC.c: 97: if((temphours & 0x40) == 0)
  8471  017506  0101               	movlb	1	; () banked
  8472  017508  BD89               	btfsc	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  8473  01750A  D016               	goto	l13529
  8474                           
  8475                           ; BSR set to: 1
  8476                           ;RTC.c: 98: {
  8477                           ;RTC.c: 99: temphours |= 0x40;
  8478  01750C  0101               	movlb	1	; () banked
  8479  01750E  8D89               	bsf	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  8480                           
  8481                           ; BSR set to: 1
  8482                           ;RTC.c: 100: Error = I2C_Write_At_Address( 0b1101000, 0x02, temphours );
  8483  017510  0E02               	movlw	2
  8484  017512  0101               	movlb	1	; () banked
  8485  017514  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
  8486  017516  C189  F17F         	movff	RTC_TIME_NONMilitary@temphours,I2C_Write_At_Address@data
  8487  01751A  0E68               	movlw	104
  8488  01751C  ECF5  F0B0         	call	_I2C_Write_At_Address
  8489  017520  0101               	movlb	1	; () banked
  8490  017522  6F86               	movwf	??_RTC_TIME_NONMilitary& (0+255),b
  8491  017524  0101               	movlb	1	; () banked
  8492  017526  5186               	movf	??_RTC_TIME_NONMilitary& (0+255),w,b
  8493  017528  0101               	movlb	1	; () banked
  8494  01752A  6F87               	movwf	RTC_TIME_NONMilitary@Error& (0+255),b
  8495  01752C  6B88               	clrf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  8496                           
  8497                           ; BSR set to: 1
  8498                           ;RTC.c: 101: }
  8499                           ;RTC.c: 102: }
  8500  01752E  D004               	goto	l13529
  8501  017530                     l1193:
  8502                           
  8503                           ; BSR set to: 1
  8504                           ;RTC.c: 103: else
  8505                           ;RTC.c: 104: {
  8506                           ;RTC.c: 105: Error = -1;
  8507  017530  0101               	movlb	1	; () banked
  8508  017532  6987               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  8509  017534  6988               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  8510  017536  D000               	goto	l13529
  8511  017538                     l13529:
  8512                           
  8513                           ; BSR set to: 1
  8514                           ;RTC.c: 106: }
  8515                           ;RTC.c: 107: if(Error < 0 )
  8516  017538  0101               	movlb	1	; () banked
  8517  01753A  AF88               	btfss	(RTC_TIME_NONMilitary@Error+1)& (0+255),7,b
  8518  01753C  0012               	return	
  8519                           
  8520                           ; BSR set to: 1
  8521                           ;RTC.c: 108: {
  8522                           ;RTC.c: 109: ResetI2C();
  8523  01753E  ECE4  F0BE         	call	_ResetI2C	;wreg free
  8524  017542  0012               	return	
  8525  017544  0012               	return		;funcret
  8526  017546                     __end_of_RTC_TIME_NONMilitary:
  8527                           	opt stack 0
  8528                           tblptru	equ	0xFF8
  8529                           tblptrh	equ	0xFF7
  8530                           tblptrl	equ	0xFF6
  8531                           tablat	equ	0xFF5
  8532                           prodh	equ	0xFF4
  8533                           prodl	equ	0xFF3
  8534                           intcon	equ	0xFF2
  8535                           intcon2	equ	0xFF1
  8536                           postinc0	equ	0xFEE
  8537                           wreg	equ	0xFE8
  8538                           postdec1	equ	0xFE5
  8539                           fsr1l	equ	0xFE1
  8540                           postinc2	equ	0xFDE
  8541                           postdec2	equ	0xFDD
  8542                           fsr2h	equ	0xFDA
  8543                           fsr2l	equ	0xFD9
  8544                           status	equ	0xFD8
  8545                           
  8546 ;; *************** function _RTC_Clock_Enable *****************
  8547 ;; Defined at:
  8548 ;;		line 70 in file "RTC.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  tempSeconds     2   24[BANK1 ] int 
  8553 ;;  Error           1   26[BANK1 ] char 
  8554 ;; Return value:  Size  Location     Type
  8555 ;;		None               void
  8556 ;; Registers used:
  8557 ;;		wreg, status,2, status,0, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;Total ram usage:        3 bytes
  8568 ;; Hardware stack levels used:    1
  8569 ;; Hardware stack levels required when called:    9
  8570 ;; This function calls:
  8571 ;;		_I2C_Read_At_Address
  8572 ;;		_I2C_Write_At_Address
  8573 ;;		_ResetI2C
  8574 ;; This function is called by:
  8575 ;;		_RTC_INIT
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579                           	psect	text10
  8580  0178DE                     __ptext10:
  8581                           	opt stack 0
  8582  0178DE                     _RTC_Clock_Enable:
  8583                           	opt stack 20
  8584                           
  8585                           ;RTC.c: 72: int tempSeconds =0;
  8586                           
  8587                           ;incstack = 0
  8588  0178DE  0E00               	movlw	0
  8589  0178E0  0101               	movlb	1	; () banked
  8590  0178E2  6F87               	movwf	(RTC_Clock_Enable@tempSeconds+1)& (0+255),b
  8591  0178E4  0E00               	movlw	0
  8592  0178E6  6F86               	movwf	RTC_Clock_Enable@tempSeconds& (0+255),b
  8593                           
  8594                           ;RTC.c: 73: signed char Error=0;
  8595  0178E8  0E00               	movlw	0
  8596  0178EA  0101               	movlb	1	; () banked
  8597  0178EC  6F88               	movwf	RTC_Clock_Enable@Error& (0+255),b
  8598                           
  8599                           ; BSR set to: 1
  8600                           ;RTC.c: 75: tempSeconds = I2C_Read_At_Address(0b1101000, 0x00);
  8601  0178EE  0E00               	movlw	0
  8602  0178F0  0101               	movlb	1	; () banked
  8603  0178F2  6F7E               	movwf	I2C_Read_At_Address@Register& (0+255),b
  8604  0178F4  0E68               	movlw	104
  8605  0178F6  EC7B  F0AB         	call	_I2C_Read_At_Address
  8606  0178FA  C17E  F186         	movff	?_I2C_Read_At_Address,RTC_Clock_Enable@tempSeconds
  8607  0178FE  C17F  F187         	movff	?_I2C_Read_At_Address+1,RTC_Clock_Enable@tempSeconds+1
  8608                           
  8609                           ;RTC.c: 76: Error = I2C_Write_At_Address( 0b1101000, 0x00, (tempSeconds & 0x7F) );
  8610  017902  0E00               	movlw	0
  8611  017904  0101               	movlb	1	; () banked
  8612  017906  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
  8613  017908  0101               	movlb	1	; () banked
  8614  01790A  5186               	movf	RTC_Clock_Enable@tempSeconds& (0+255),w,b
  8615  01790C  0B7F               	andlw	127
  8616  01790E  0101               	movlb	1	; () banked
  8617  017910  6F7F               	movwf	I2C_Write_At_Address@data& (0+255),b
  8618  017912  0E68               	movlw	104
  8619  017914  ECF5  F0B0         	call	_I2C_Write_At_Address
  8620  017918  0101               	movlb	1	; () banked
  8621  01791A  6F88               	movwf	RTC_Clock_Enable@Error& (0+255),b
  8622                           
  8623                           ; BSR set to: 1
  8624                           ;RTC.c: 78: if(Error < 0 )
  8625  01791C  0101               	movlb	1	; () banked
  8626  01791E  AF88               	btfss	RTC_Clock_Enable@Error& (0+255),7,b
  8627  017920  0012               	return	
  8628                           
  8629                           ; BSR set to: 1
  8630                           ;RTC.c: 79: {
  8631                           ;RTC.c: 80: ResetI2C();
  8632  017922  ECE4  F0BE         	call	_ResetI2C	;wreg free
  8633  017926  0012               	return	
  8634  017928  0012               	return		;funcret
  8635  01792A                     __end_of_RTC_Clock_Enable:
  8636                           	opt stack 0
  8637                           tblptru	equ	0xFF8
  8638                           tblptrh	equ	0xFF7
  8639                           tblptrl	equ	0xFF6
  8640                           tablat	equ	0xFF5
  8641                           prodh	equ	0xFF4
  8642                           prodl	equ	0xFF3
  8643                           intcon	equ	0xFF2
  8644                           intcon2	equ	0xFF1
  8645                           postinc0	equ	0xFEE
  8646                           wreg	equ	0xFE8
  8647                           postdec1	equ	0xFE5
  8648                           fsr1l	equ	0xFE1
  8649                           postinc2	equ	0xFDE
  8650                           postdec2	equ	0xFDD
  8651                           fsr2h	equ	0xFDA
  8652                           fsr2l	equ	0xFD9
  8653                           status	equ	0xFD8
  8654                           
  8655 ;; *************** function _I2C_Read_At_Address *****************
  8656 ;; Defined at:
  8657 ;;		line 224 in file "I2C.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  I2Caddress      1    wreg     unsigned char 
  8660 ;;  Register        1   16[BANK1 ] unsigned char 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;  I2Caddress      1   18[BANK1 ] unsigned char 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  2   16[BANK1 ] int 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0, cstack
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8672 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8675 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8676 ;;Total ram usage:        3 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    8
  8679 ;; This function calls:
  8680 ;;		_IdleI2C
  8681 ;;		_WriteI2C
  8682 ;; This function is called by:
  8683 ;;		_RTC_Clock_Enable
  8684 ;;		_RTC_TIME_NONMilitary
  8685 ;;		_RTC_Clock_Disable
  8686 ;;		_READ_RTC_SECONDS
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           	psect	text11
  8691  0156F6                     __ptext11:
  8692                           	opt stack 0
  8693  0156F6                     _I2C_Read_At_Address:
  8694                           	opt stack 20
  8695                           
  8696                           ;incstack = 0
  8697                           ;I2C_Read_At_Address@I2Caddress stored from wreg
  8698  0156F6  0101               	movlb	1	; () banked
  8699  0156F8  6F80               	movwf	I2C_Read_At_Address@I2Caddress& (0+255),b
  8700                           
  8701                           ; BSR set to: 1
  8702                           ;I2C.c: 226: IdleI2C();
  8703  0156FA  EC85  F0BF         	call	_IdleI2C	;wreg free
  8704                           
  8705                           ;I2C.c: 227: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  8706  0156FE  80C5               	bsf	4037,0,c	;volatile
  8707  015700  D000               	goto	l1400
  8708  015702                     l1400:
  8709  015702  A0C5               	btfss	4037,0,c	;volatile
  8710  015704  D002               	goto	l1403
  8711  015706  D7FD               	goto	l1400
  8712                           
  8713                           ;I2C.c: 228: while ( SSPCON2bits.SEN );
  8714  015708  D000               	goto	l1403
  8715  01570A                     l1403:
  8716  01570A  B0C5               	btfsc	4037,0,c	;volatile
  8717  01570C  D7FE               	goto	l1403
  8718                           
  8719                           ;I2C.c: 229: if ( PIR2bits.BCLIF )
  8720  01570E  A6A1               	btfss	4001,3,c	;volatile
  8721  015710  D005               	goto	l12219
  8722  015712                     l12215:
  8723                           
  8724                           ;I2C.c: 230: {
  8725                           ;I2C.c: 231: return ( -1 );
  8726  015712  0101               	movlb	1	; () banked
  8727  015714  697E               	setf	?_I2C_Read_At_Address& (0+255),b
  8728  015716  697F               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  8729  015718  0012               	return	
  8730                           
  8731                           ; BSR set to: 1
  8732                           ;I2C.c: 232: }
  8733  01571A  D07F               	goto	l1408
  8734  01571C                     l12219:
  8735                           
  8736                           ;I2C.c: 233: else
  8737                           ;I2C.c: 234: {
  8738                           ;I2C.c: 235: if ( WriteI2C( (I2Caddress << 1 ) & 0xFE ) )
  8739  01571C  0101               	movlb	1	; () banked
  8740  01571E  5180               	movf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  8741  015720  2580               	addwf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  8742  015722  0BFE               	andlw	254
  8743  015724  EC02  F0BA         	call	_WriteI2C
  8744  015728  0900               	iorlw	0
  8745  01572A  B4D8               	btfsc	status,2,c
  8746  01572C  D00A               	goto	l1409
  8747                           
  8748                           ;I2C.c: 236: {
  8749                           ;I2C.c: 237: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8750  01572E  84C5               	bsf	4037,2,c	;volatile
  8751  015730  D000               	goto	l1410
  8752  015732                     l1410:
  8753  015732  B4C5               	btfsc	4037,2,c	;volatile
  8754  015734  D7FE               	goto	l1410
  8755                           
  8756                           ;I2C.c: 238: return ( -3 );
  8757  015736  0EFF               	movlw	255
  8758  015738  0101               	movlb	1	; () banked
  8759  01573A  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8760  01573C  0EFD               	movlw	253
  8761  01573E  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  8762                           
  8763                           ; BSR set to: 1
  8764  015740  0012               	return	
  8765  015742                     l1409:
  8766                           
  8767                           ;I2C.c: 239: }
  8768                           ;I2C.c: 242: if ( !SSPCON2bits.ACKSTAT )
  8769  015742  BCC5               	btfsc	4037,6,c	;volatile
  8770  015744  D060               	goto	l1413
  8771                           
  8772                           ;I2C.c: 243: {
  8773                           ;I2C.c: 244: if ( WriteI2C( Register ) )
  8774  015746  0101               	movlb	1	; () banked
  8775  015748  517E               	movf	I2C_Read_At_Address@Register& (0+255),w,b
  8776  01574A  EC02  F0BA         	call	_WriteI2C
  8777  01574E  0900               	iorlw	0
  8778  015750  B4D8               	btfsc	status,2,c
  8779  015752  D00A               	goto	l1414
  8780                           
  8781                           ;I2C.c: 245: {
  8782                           ;I2C.c: 246: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8783  015754  84C5               	bsf	4037,2,c	;volatile
  8784  015756  D000               	goto	l1415
  8785  015758                     l1415:
  8786  015758  B4C5               	btfsc	4037,2,c	;volatile
  8787  01575A  D7FE               	goto	l1415
  8788                           
  8789                           ;I2C.c: 247: return ( -3 );
  8790  01575C  0EFF               	movlw	255
  8791  01575E  0101               	movlb	1	; () banked
  8792  015760  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8793  015762  0EFD               	movlw	253
  8794  015764  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  8795                           
  8796                           ; BSR set to: 1
  8797  015766  0012               	return	
  8798  015768                     l1414:
  8799                           
  8800                           ;I2C.c: 248: }
  8801                           ;I2C.c: 251: if ( !SSPCON2bits.ACKSTAT )
  8802  015768  BCC5               	btfsc	4037,6,c	;volatile
  8803  01576A  D046               	goto	l1418
  8804                           
  8805                           ;I2C.c: 252: {
  8806                           ;I2C.c: 253: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  8807  01576C  82C5               	bsf	4037,1,c	;volatile
  8808  01576E  D000               	goto	l1419
  8809  015770                     l1419:
  8810  015770  A2C5               	btfss	4037,1,c	;volatile
  8811  015772  D002               	goto	l1422
  8812  015774  D7FD               	goto	l1419
  8813                           
  8814                           ;I2C.c: 254: while ( SSPCON2bits.RSEN );
  8815  015776  D000               	goto	l1422
  8816  015778                     l1422:
  8817  015778  B2C5               	btfsc	4037,1,c	;volatile
  8818  01577A  D7FE               	goto	l1422
  8819                           
  8820                           ;I2C.c: 255: if ( PIR2bits.BCLIF )
  8821  01577C  A6A1               	btfss	4001,3,c	;volatile
  8822  01577E  D004               	goto	l12239
  8823                           
  8824                           ;I2C.c: 256: {
  8825                           ;I2C.c: 257: return ( -1 );
  8826  015780  0101               	movlb	1	; () banked
  8827  015782  697E               	setf	?_I2C_Read_At_Address& (0+255),b
  8828  015784  697F               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  8829  015786  0012               	return	
  8830  015788                     l12239:
  8831                           
  8832                           ;I2C.c: 258: }
  8833                           ;I2C.c: 260: if ( WriteI2C( (I2Caddress << 1) + 1 ) )
  8834  015788  80D8               	bsf	status,0,c
  8835  01578A  0101               	movlb	1	; () banked
  8836  01578C  3580               	rlcf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  8837  01578E  EC02  F0BA         	call	_WriteI2C
  8838  015792  0900               	iorlw	0
  8839  015794  B4D8               	btfsc	status,2,c
  8840  015796  D00A               	goto	l1426
  8841                           
  8842                           ;I2C.c: 261: {
  8843                           ;I2C.c: 262: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8844  015798  84C5               	bsf	4037,2,c	;volatile
  8845  01579A  D000               	goto	l1427
  8846  01579C                     l1427:
  8847  01579C  B4C5               	btfsc	4037,2,c	;volatile
  8848  01579E  D7FE               	goto	l1427
  8849                           
  8850                           ;I2C.c: 263: return ( -3 );
  8851  0157A0  0EFF               	movlw	255
  8852  0157A2  0101               	movlb	1	; () banked
  8853  0157A4  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8854  0157A6  0EFD               	movlw	253
  8855  0157A8  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  8856                           
  8857                           ; BSR set to: 1
  8858  0157AA  0012               	return	
  8859  0157AC                     l1426:
  8860                           
  8861                           ;I2C.c: 264: }
  8862                           ;I2C.c: 267: if ( !SSPCON2bits.ACKSTAT )
  8863  0157AC  BCC5               	btfsc	4037,6,c	;volatile
  8864  0157AE  D019               	goto	l1430
  8865                           
  8866                           ;I2C.c: 268: {
  8867                           ;I2C.c: 269: SSPCON2bits.RCEN = 1;
  8868  0157B0  86C5               	bsf	4037,3,c	;volatile
  8869                           
  8870                           ;I2C.c: 270: while ( SSPCON2bits.RCEN );
  8871  0157B2  D000               	goto	l1431
  8872  0157B4                     l1431:
  8873  0157B4  B6C5               	btfsc	4037,3,c	;volatile
  8874  0157B6  D7FE               	goto	l1431
  8875                           
  8876                           ;I2C.c: 271: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  8877  0157B8  8AC5               	bsf	4037,5,c	;volatile
  8878  0157BA  88C5               	bsf	4037,4,c	;volatile
  8879  0157BC  D000               	goto	l1434
  8880  0157BE                     l1434:
  8881  0157BE  A8C5               	btfss	4037,4,c	;volatile
  8882  0157C0  D002               	goto	l1437
  8883  0157C2  D7FD               	goto	l1434
  8884                           
  8885                           ;I2C.c: 272: while ( SSPCON2bits.ACKEN );
  8886  0157C4  D000               	goto	l1437
  8887  0157C6                     l1437:
  8888  0157C6  B8C5               	btfsc	4037,4,c	;volatile
  8889  0157C8  D7FE               	goto	l1437
  8890                           
  8891                           ;I2C.c: 273: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8892  0157CA  84C5               	bsf	4037,2,c	;volatile
  8893  0157CC  D000               	goto	l1440
  8894  0157CE                     l1440:
  8895  0157CE  A4C5               	btfss	4037,2,c	;volatile
  8896  0157D0  D002               	goto	l1443
  8897  0157D2  D7FD               	goto	l1440
  8898                           
  8899                           ;I2C.c: 274: while ( SSPCON2bits.PEN );
  8900  0157D4  D000               	goto	l1443
  8901  0157D6                     l1443:
  8902  0157D6  B4C5               	btfsc	4037,2,c	;volatile
  8903  0157D8  D7FE               	goto	l1443
  8904                           
  8905                           ;I2C.c: 275: if ( PIR2bits.BCLIF )
  8906  0157DA  A6A1               	btfss	4001,3,c	;volatile
  8907  0157DC  D01E               	goto	l1408
  8908  0157DE  D799               	goto	l12215
  8909                           
  8910                           ; BSR set to: 1
  8911                           ;I2C.c: 278: }
  8912                           ;I2C.c: 279: }
  8913                           
  8914                           ;I2C.c: 276: {
  8915                           ;I2C.c: 277: return ( -1 );
  8916  0157E0  D01C               	goto	l1408
  8917  0157E2                     l1430:
  8918                           
  8919                           ;I2C.c: 280: else
  8920                           ;I2C.c: 281: {
  8921                           ;I2C.c: 282: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8922  0157E2  84C5               	bsf	4037,2,c	;volatile
  8923  0157E4  D000               	goto	l1448
  8924  0157E6                     l1448:
  8925  0157E6  B4C5               	btfsc	4037,2,c	;volatile
  8926  0157E8  D7FE               	goto	l1448
  8927  0157EA                     l12251:
  8928                           
  8929                           ;I2C.c: 283: return ( -2 );
  8930  0157EA  0EFF               	movlw	255
  8931  0157EC  0101               	movlb	1	; () banked
  8932  0157EE  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8933  0157F0  0EFE               	movlw	254
  8934  0157F2  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  8935                           
  8936                           ; BSR set to: 1
  8937  0157F4  0012               	return	
  8938                           
  8939                           ; BSR set to: 1
  8940                           ;I2C.c: 284: }
  8941                           ;I2C.c: 286: }
  8942  0157F6  D011               	goto	l1408
  8943  0157F8                     l1418:
  8944                           
  8945                           ;I2C.c: 287: else
  8946                           ;I2C.c: 288: {
  8947                           ;I2C.c: 289: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8948  0157F8  84C5               	bsf	4037,2,c	;volatile
  8949  0157FA  D000               	goto	l1452
  8950  0157FC                     l1452:
  8951  0157FC  B4C5               	btfsc	4037,2,c	;volatile
  8952  0157FE  D7FE               	goto	l1452
  8953  015800  D7F4               	goto	l12251
  8954                           
  8955                           ; BSR set to: 1
  8956                           
  8957                           ;I2C.c: 290: return ( -2 );
  8958  015802  0012               	return	
  8959                           
  8960                           ; BSR set to: 1
  8961                           ;I2C.c: 291: }
  8962                           ;I2C.c: 292: }
  8963  015804  D00A               	goto	l1408
  8964  015806                     l1413:
  8965                           
  8966                           ;I2C.c: 293: else
  8967                           ;I2C.c: 294: {
  8968                           ;I2C.c: 295: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8969  015806  84C5               	bsf	4037,2,c	;volatile
  8970  015808  D000               	goto	l1456
  8971  01580A                     l1456:
  8972  01580A  B4C5               	btfsc	4037,2,c	;volatile
  8973  01580C  D7FE               	goto	l1456
  8974                           
  8975                           ;I2C.c: 296: return ( -2 );
  8976  01580E  0EFF               	movlw	255
  8977  015810  0101               	movlb	1	; () banked
  8978  015812  6F7F               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8979  015814  0EFE               	movlw	254
  8980  015816  6F7E               	movwf	?_I2C_Read_At_Address& (0+255),b
  8981                           
  8982                           ; BSR set to: 1
  8983  015818  0012               	return	
  8984  01581A                     l1408:
  8985                           
  8986                           ;I2C.c: 297: }
  8987                           ;I2C.c: 298: }
  8988                           ;I2C.c: 299: return ( (unsigned int) SSPBUF );
  8989  01581A  CFC9 F17E          	movff	4041,?_I2C_Read_At_Address	;volatile
  8990  01581E  0101               	movlb	1	; () banked
  8991  015820  6B7F               	clrf	(?_I2C_Read_At_Address+1)& (0+255),b
  8992                           
  8993                           ; BSR set to: 1
  8994  015822  0012               	return		;funcret
  8995  015824                     __end_of_I2C_Read_At_Address:
  8996                           	opt stack 0
  8997                           tblptru	equ	0xFF8
  8998                           tblptrh	equ	0xFF7
  8999                           tblptrl	equ	0xFF6
  9000                           tablat	equ	0xFF5
  9001                           prodh	equ	0xFF4
  9002                           prodl	equ	0xFF3
  9003                           intcon	equ	0xFF2
  9004                           intcon2	equ	0xFF1
  9005                           postinc0	equ	0xFEE
  9006                           wreg	equ	0xFE8
  9007                           postdec1	equ	0xFE5
  9008                           fsr1l	equ	0xFE1
  9009                           postinc2	equ	0xFDE
  9010                           postdec2	equ	0xFDD
  9011                           fsr2h	equ	0xFDA
  9012                           fsr2l	equ	0xFD9
  9013                           status	equ	0xFD8
  9014                           
  9015 ;; *************** function _PWM_init *****************
  9016 ;; Defined at:
  9017 ;;		line 54 in file "PWM.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;		None
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;		None
  9022 ;; Return value:  Size  Location     Type
  9023 ;;		None               void
  9024 ;; Registers used:
  9025 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;Total ram usage:        0 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:    9
  9038 ;; This function calls:
  9039 ;;		_SetDuty
  9040 ;;		_SetFreq
  9041 ;; This function is called by:
  9042 ;;		_main
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text12
  9047  017CB2                     __ptext12:
  9048                           	opt stack 0
  9049  017CB2                     _PWM_init:
  9050                           	opt stack 21
  9051                           
  9052                           ;PWM.c: 57: SetFreq(60);
  9053                           
  9054                           ; BSR set to: 1
  9055                           ;incstack = 0
  9056  017CB2  0E00               	movlw	0
  9057  017CB4  0101               	movlb	1	; () banked
  9058  017CB6  6F91               	movwf	(SetFreq@freq+1)& (0+255),b
  9059  017CB8  0E3C               	movlw	60
  9060  017CBA  6F90               	movwf	SetFreq@freq& (0+255),b
  9061  017CBC  ECF8  F0BB         	call	_SetFreq	;wreg free
  9062                           
  9063                           ;PWM.c: 58: SetDuty(0);
  9064  017CC0  0E00               	movlw	0
  9065  017CC2  EC9A  F0B3         	call	_SetDuty
  9066                           
  9067                           ;PWM.c: 59: T2CON &= ~0x03;
  9068  017CC6  0EFC               	movlw	252
  9069  017CC8  16CA               	andwf	4042,f,c	;volatile
  9070                           
  9071                           ;PWM.c: 60: if(16 == 1)
  9072  017CCA  D005               	goto	l13741
  9073                           
  9074                           ;PWM.c: 61: {
  9075                           ;PWM.c: 62: __nop();
  9076  017CCC  F000               	nop	
  9077                           
  9078                           ;PWM.c: 63: }
  9079  017CCE  D005               	goto	l1007
  9080                           
  9081                           ;PWM.c: 64: else if (16 == 4)
  9082  017CD0  D002               	goto	l13741
  9083                           
  9084                           ;PWM.c: 65: {
  9085                           ;PWM.c: 66: T2CON |= 0x01;
  9086  017CD2  80CA               	bsf	4042,0,c	;volatile
  9087                           
  9088                           ;PWM.c: 67: }
  9089  017CD4  D002               	goto	l1007
  9090  017CD6                     l13741:
  9091                           
  9092                           ;PWM.c: 68: else
  9093                           ;PWM.c: 69: {
  9094                           ;PWM.c: 70: T2CON |= 0x10;
  9095  017CD6  88CA               	bsf	4042,4,c	;volatile
  9096  017CD8  D000               	goto	l1007
  9097  017CDA                     l1007:
  9098                           
  9099                           ;PWM.c: 71: }
  9100                           ;PWM.c: 72: T2CON |= 0b00000100;
  9101  017CDA  84CA               	bsf	4042,2,c	;volatile
  9102                           
  9103                           ;PWM.c: 73: CCP1CON |= 0b00001100;
  9104  017CDC  0E0C               	movlw	12
  9105  017CDE  12BD               	iorwf	4029,f,c	;volatile
  9106  017CE0  0012               	return		;funcret
  9107  017CE2                     __end_of_PWM_init:
  9108                           	opt stack 0
  9109                           tblptru	equ	0xFF8
  9110                           tblptrh	equ	0xFF7
  9111                           tblptrl	equ	0xFF6
  9112                           tablat	equ	0xFF5
  9113                           prodh	equ	0xFF4
  9114                           prodl	equ	0xFF3
  9115                           intcon	equ	0xFF2
  9116                           intcon2	equ	0xFF1
  9117                           postinc0	equ	0xFEE
  9118                           wreg	equ	0xFE8
  9119                           postdec1	equ	0xFE5
  9120                           fsr1l	equ	0xFE1
  9121                           postinc2	equ	0xFDE
  9122                           postdec2	equ	0xFDD
  9123                           fsr2h	equ	0xFDA
  9124                           fsr2l	equ	0xFD9
  9125                           status	equ	0xFD8
  9126                           
  9127 ;; *************** function _SetFreq *****************
  9128 ;; Defined at:
  9129 ;;		line 144 in file "PWM.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  freq            2   34[BANK1 ] unsigned int 
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  temp            1   36[BANK1 ] unsigned char 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;		None               void
  9136 ;; Registers used:
  9137 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9143 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;Total ram usage:        3 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; Hardware stack levels required when called:    7
  9150 ;; This function calls:
  9151 ;;		___aldiv
  9152 ;;		___wmul
  9153 ;; This function is called by:
  9154 ;;		_PWM_init
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text13
  9159  0177F0                     __ptext13:
  9160                           	opt stack 0
  9161  0177F0                     _SetFreq:
  9162                           	opt stack 22
  9163                           
  9164                           ;PWM.c: 147: unsigned char temp =0;
  9165                           
  9166                           ;incstack = 0
  9167  0177F0  0E00               	movlw	0
  9168  0177F2  0101               	movlb	1	; () banked
  9169  0177F4  6F92               	movwf	SetFreq@temp& (0+255),b
  9170                           
  9171                           ; BSR set to: 1
  9172                           ;PWM.c: 148: temp = (unsigned char)(((40960000L >> 2)/(freq*1000))-1);
  9173  0177F6  0E00               	movlw	0
  9174  0177F8  0101               	movlb	1	; () banked
  9175  0177FA  6F82               	movwf	___aldiv@dividend& (0+255),b
  9176  0177FC  0E40               	movlw	64
  9177  0177FE  6F83               	movwf	(___aldiv@dividend+1)& (0+255),b
  9178  017800  0E9C               	movlw	156
  9179  017802  6F84               	movwf	(___aldiv@dividend+2)& (0+255),b
  9180  017804  0E00               	movlw	0
  9181  017806  6F85               	movwf	(___aldiv@dividend+3)& (0+255),b
  9182  017808  C190  F17C         	movff	SetFreq@freq,___wmul@multiplier
  9183  01780C  C191  F17D         	movff	SetFreq@freq+1,___wmul@multiplier+1
  9184  017810  0E03               	movlw	3
  9185  017812  0101               	movlb	1	; () banked
  9186  017814  6F7F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9187  017816  0EE8               	movlw	232
  9188  017818  6F7E               	movwf	___wmul@multiplicand& (0+255),b
  9189  01781A  ECBC  F0BD         	call	___wmul	;wreg free
  9190  01781E  0101               	movlb	1	; () banked
  9191  017820  C17C  F186         	movff	?___wmul,___aldiv@divisor
  9192  017824  0101               	movlb	1	; () banked
  9193  017826  C17D  F187         	movff	?___wmul+1,___aldiv@divisor+1
  9194  01782A  0101               	movlb	1	; () banked
  9195  01782C  6B88               	clrf	(___aldiv@divisor+2)& (0+255),b
  9196  01782E  6B89               	clrf	(___aldiv@divisor+3)& (0+255),b
  9197  017830  EC12  F0AC         	call	___aldiv	;wreg free
  9198  017834  0101               	movlb	1	; () banked
  9199  017836  0582               	decf	?___aldiv& (0+255),w,b
  9200  017838  0101               	movlb	1	; () banked
  9201  01783A  6F92               	movwf	SetFreq@temp& (0+255),b
  9202                           
  9203                           ; BSR set to: 1
  9204                           ;PWM.c: 150: PR2 = temp;
  9205  01783C  C192  FFCB         	movff	SetFreq@temp,4043	;volatile
  9206                           
  9207                           ; BSR set to: 1
  9208  017840  0012               	return		;funcret
  9209  017842                     __end_of_SetFreq:
  9210                           	opt stack 0
  9211                           tblptru	equ	0xFF8
  9212                           tblptrh	equ	0xFF7
  9213                           tblptrl	equ	0xFF6
  9214                           tablat	equ	0xFF5
  9215                           prodh	equ	0xFF4
  9216                           prodl	equ	0xFF3
  9217                           intcon	equ	0xFF2
  9218                           intcon2	equ	0xFF1
  9219                           postinc0	equ	0xFEE
  9220                           wreg	equ	0xFE8
  9221                           postdec1	equ	0xFE5
  9222                           fsr1l	equ	0xFE1
  9223                           postinc2	equ	0xFDE
  9224                           postdec2	equ	0xFDD
  9225                           fsr2h	equ	0xFDA
  9226                           fsr2l	equ	0xFD9
  9227                           status	equ	0xFD8
  9228                           
  9229 ;; *************** function ___aldiv *****************
  9230 ;; Defined at:
  9231 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  9232 ;; Parameters:    Size  Location     Type
  9233 ;;  dividend        4   20[BANK1 ] long 
  9234 ;;  divisor         4   24[BANK1 ] long 
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;  quotient        4   30[BANK1 ] long 
  9237 ;;  sign            1   29[BANK1 ] unsigned char 
  9238 ;;  counter         1   28[BANK1 ] unsigned char 
  9239 ;; Return value:  Size  Location     Type
  9240 ;;                  4   20[BANK1 ] long 
  9241 ;; Registers used:
  9242 ;;		wreg, status,2, status,0
  9243 ;; Tracked objects:
  9244 ;;		On entry : 0/0
  9245 ;;		On exit  : 0/0
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9248 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  9249 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;Total ram usage:       14 bytes
  9253 ;; Hardware stack levels used:    1
  9254 ;; Hardware stack levels required when called:    6
  9255 ;; This function calls:
  9256 ;;		Nothing
  9257 ;; This function is called by:
  9258 ;;		_SetFreq
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           
  9262                           	psect	text14
  9263  015824                     __ptext14:
  9264                           	opt stack 0
  9265  015824                     ___aldiv:
  9266                           	opt stack 22
  9267                           
  9268                           ; BSR set to: 1
  9269                           ;incstack = 0
  9270  015824  0E00               	movlw	0
  9271  015826  0101               	movlb	1	; () banked
  9272  015828  6F8B               	movwf	___aldiv@sign& (0+255),b
  9273                           
  9274                           ; BSR set to: 1
  9275  01582A  0101               	movlb	1	; () banked
  9276  01582C  AF89               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  9277  01582E  D00D               	goto	l8139
  9278                           
  9279                           ; BSR set to: 1
  9280  015830  0101               	movlb	1	; () banked
  9281  015832  1F89               	comf	(___aldiv@divisor+3)& (0+255),f,b
  9282  015834  1F88               	comf	(___aldiv@divisor+2)& (0+255),f,b
  9283  015836  1F87               	comf	(___aldiv@divisor+1)& (0+255),f,b
  9284  015838  6D86               	negf	___aldiv@divisor& (0+255),b
  9285  01583A  0E00               	movlw	0
  9286  01583C  2387               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  9287  01583E  2388               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  9288  015840  2389               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  9289                           
  9290                           ; BSR set to: 1
  9291  015842  0E01               	movlw	1
  9292  015844  0101               	movlb	1	; () banked
  9293  015846  6F8B               	movwf	___aldiv@sign& (0+255),b
  9294  015848  D000               	goto	l8139
  9295  01584A                     l8139:
  9296                           
  9297                           ; BSR set to: 1
  9298  01584A  0101               	movlb	1	; () banked
  9299  01584C  AF85               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  9300  01584E  D00D               	goto	l8145
  9301                           
  9302                           ; BSR set to: 1
  9303  015850  0101               	movlb	1	; () banked
  9304  015852  1F85               	comf	(___aldiv@dividend+3)& (0+255),f,b
  9305  015854  1F84               	comf	(___aldiv@dividend+2)& (0+255),f,b
  9306  015856  1F83               	comf	(___aldiv@dividend+1)& (0+255),f,b
  9307  015858  6D82               	negf	___aldiv@dividend& (0+255),b
  9308  01585A  0E00               	movlw	0
  9309  01585C  2383               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  9310  01585E  2384               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  9311  015860  2385               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  9312                           
  9313                           ; BSR set to: 1
  9314  015862  0E01               	movlw	1
  9315  015864  0101               	movlb	1	; () banked
  9316  015866  1B8B               	xorwf	___aldiv@sign& (0+255),f,b
  9317  015868  D000               	goto	l8145
  9318  01586A                     l8145:
  9319                           
  9320                           ; BSR set to: 1
  9321  01586A  0E00               	movlw	0
  9322  01586C  0101               	movlb	1	; () banked
  9323  01586E  6F8C               	movwf	___aldiv@quotient& (0+255),b
  9324  015870  0E00               	movlw	0
  9325  015872  6F8D               	movwf	(___aldiv@quotient+1)& (0+255),b
  9326  015874  0E00               	movlw	0
  9327  015876  6F8E               	movwf	(___aldiv@quotient+2)& (0+255),b
  9328  015878  0E00               	movlw	0
  9329  01587A  6F8F               	movwf	(___aldiv@quotient+3)& (0+255),b
  9330                           
  9331                           ; BSR set to: 1
  9332  01587C  0101               	movlb	1	; () banked
  9333  01587E  5186               	movf	___aldiv@divisor& (0+255),w,b
  9334  015880  0101               	movlb	1	; () banked
  9335  015882  1187               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  9336  015884  0101               	movlb	1	; () banked
  9337  015886  1188               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  9338  015888  0101               	movlb	1	; () banked
  9339  01588A  1189               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  9340  01588C  B4D8               	btfsc	status,2,c
  9341  01588E  D047               	goto	l8167
  9342                           
  9343                           ; BSR set to: 1
  9344  015890  0E01               	movlw	1
  9345  015892  0101               	movlb	1	; () banked
  9346  015894  6F8A               	movwf	___aldiv@counter& (0+255),b
  9347  015896  D009               	goto	l8153
  9348  015898                     l8151:
  9349                           
  9350                           ; BSR set to: 1
  9351  015898  0101               	movlb	1	; () banked
  9352  01589A  90D8               	bcf	status,0,c
  9353  01589C  3786               	rlcf	___aldiv@divisor& (0+255),f,b
  9354  01589E  3787               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  9355  0158A0  3788               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  9356  0158A2  3789               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  9357  0158A4  0101               	movlb	1	; () banked
  9358  0158A6  2B8A               	incf	___aldiv@counter& (0+255),f,b
  9359  0158A8  D000               	goto	l8153
  9360  0158AA                     l8153:
  9361                           
  9362                           ; BSR set to: 1
  9363  0158AA  0101               	movlb	1	; () banked
  9364  0158AC  BF89               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  9365  0158AE  D002               	goto	l8155
  9366  0158B0  D7F3               	goto	l8151
  9367                           
  9368                           ; BSR set to: 1
  9369  0158B2  D000               	goto	l8155
  9370  0158B4                     l8155:
  9371                           
  9372                           ; BSR set to: 1
  9373  0158B4  0101               	movlb	1	; () banked
  9374  0158B6  90D8               	bcf	status,0,c
  9375  0158B8  378C               	rlcf	___aldiv@quotient& (0+255),f,b
  9376  0158BA  378D               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  9377  0158BC  378E               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  9378  0158BE  378F               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  9379                           
  9380                           ; BSR set to: 1
  9381  0158C0  0101               	movlb	1	; () banked
  9382  0158C2  5186               	movf	___aldiv@divisor& (0+255),w,b
  9383  0158C4  0101               	movlb	1	; () banked
  9384  0158C6  5D82               	subwf	___aldiv@dividend& (0+255),w,b
  9385  0158C8  0101               	movlb	1	; () banked
  9386  0158CA  5187               	movf	(___aldiv@divisor+1)& (0+255),w,b
  9387  0158CC  0101               	movlb	1	; () banked
  9388  0158CE  5983               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  9389  0158D0  0101               	movlb	1	; () banked
  9390  0158D2  5188               	movf	(___aldiv@divisor+2)& (0+255),w,b
  9391  0158D4  0101               	movlb	1	; () banked
  9392  0158D6  5984               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  9393  0158D8  0101               	movlb	1	; () banked
  9394  0158DA  5189               	movf	(___aldiv@divisor+3)& (0+255),w,b
  9395  0158DC  0101               	movlb	1	; () banked
  9396  0158DE  5985               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  9397  0158E0  A0D8               	btfss	status,0,c
  9398  0158E2  D013               	goto	l8163
  9399                           
  9400                           ; BSR set to: 1
  9401  0158E4  0101               	movlb	1	; () banked
  9402  0158E6  5186               	movf	___aldiv@divisor& (0+255),w,b
  9403  0158E8  0101               	movlb	1	; () banked
  9404  0158EA  5F82               	subwf	___aldiv@dividend& (0+255),f,b
  9405  0158EC  0101               	movlb	1	; () banked
  9406  0158EE  5187               	movf	(___aldiv@divisor+1)& (0+255),w,b
  9407  0158F0  0101               	movlb	1	; () banked
  9408  0158F2  5B83               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  9409  0158F4  0101               	movlb	1	; () banked
  9410  0158F6  5188               	movf	(___aldiv@divisor+2)& (0+255),w,b
  9411  0158F8  0101               	movlb	1	; () banked
  9412  0158FA  5B84               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  9413  0158FC  0101               	movlb	1	; () banked
  9414  0158FE  5189               	movf	(___aldiv@divisor+3)& (0+255),w,b
  9415  015900  0101               	movlb	1	; () banked
  9416  015902  5B85               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  9417                           
  9418                           ; BSR set to: 1
  9419  015904  0101               	movlb	1	; () banked
  9420  015906  818C               	bsf	___aldiv@quotient& (0+255),0,b
  9421  015908  D000               	goto	l8163
  9422  01590A                     l8163:
  9423                           
  9424                           ; BSR set to: 1
  9425  01590A  0101               	movlb	1	; () banked
  9426  01590C  90D8               	bcf	status,0,c
  9427  01590E  3389               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  9428  015910  3388               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  9429  015912  3387               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  9430  015914  3386               	rrcf	___aldiv@divisor& (0+255),f,b
  9431                           
  9432                           ; BSR set to: 1
  9433  015916  0101               	movlb	1	; () banked
  9434  015918  2F8A               	decfsz	___aldiv@counter& (0+255),f,b
  9435  01591A  D7CC               	goto	l8155
  9436                           
  9437                           ; BSR set to: 1
  9438  01591C  D000               	goto	l8167
  9439  01591E                     l8167:
  9440                           
  9441                           ; BSR set to: 1
  9442  01591E  0101               	movlb	1	; () banked
  9443  015920  518B               	movf	___aldiv@sign& (0+255),w,b
  9444  015922  0101               	movlb	1	; () banked
  9445  015924  B4D8               	btfsc	status,2,c
  9446  015926  D00A               	goto	l8171
  9447                           
  9448                           ; BSR set to: 1
  9449  015928  0101               	movlb	1	; () banked
  9450  01592A  1F8F               	comf	(___aldiv@quotient+3)& (0+255),f,b
  9451  01592C  1F8E               	comf	(___aldiv@quotient+2)& (0+255),f,b
  9452  01592E  1F8D               	comf	(___aldiv@quotient+1)& (0+255),f,b
  9453  015930  6D8C               	negf	___aldiv@quotient& (0+255),b
  9454  015932  0E00               	movlw	0
  9455  015934  238D               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  9456  015936  238E               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  9457  015938  238F               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  9458  01593A  D000               	goto	l8171
  9459  01593C                     l8171:
  9460                           
  9461                           ; BSR set to: 1
  9462  01593C  C18C  F182         	movff	___aldiv@quotient,?___aldiv
  9463  015940  C18D  F183         	movff	___aldiv@quotient+1,?___aldiv+1
  9464  015944  C18E  F184         	movff	___aldiv@quotient+2,?___aldiv+2
  9465  015948  C18F  F185         	movff	___aldiv@quotient+3,?___aldiv+3
  9466  01594C  0012               	return	
  9467                           
  9468                           ; BSR set to: 1
  9469                           
  9470                           ; BSR set to: 1
  9471  01594E  0012               	return		;funcret
  9472  015950                     __end_of___aldiv:
  9473                           	opt stack 0
  9474                           tblptru	equ	0xFF8
  9475                           tblptrh	equ	0xFF7
  9476                           tblptrl	equ	0xFF6
  9477                           tablat	equ	0xFF5
  9478                           prodh	equ	0xFF4
  9479                           prodl	equ	0xFF3
  9480                           intcon	equ	0xFF2
  9481                           intcon2	equ	0xFF1
  9482                           postinc0	equ	0xFEE
  9483                           wreg	equ	0xFE8
  9484                           postdec1	equ	0xFE5
  9485                           fsr1l	equ	0xFE1
  9486                           postinc2	equ	0xFDE
  9487                           postdec2	equ	0xFDD
  9488                           fsr2h	equ	0xFDA
  9489                           fsr2l	equ	0xFD9
  9490                           status	equ	0xFD8
  9491                           
  9492 ;; *************** function _LCDScreenUpdate *****************
  9493 ;; Defined at:
  9494 ;;		line 278 in file "LCD.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;		None
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;		None
  9499 ;; Return value:  Size  Location     Type
  9500 ;;		None               void
  9501 ;; Registers used:
  9502 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9512 ;;Total ram usage:        0 bytes
  9513 ;; Hardware stack levels used:    1
  9514 ;; Hardware stack levels required when called:   10
  9515 ;; This function calls:
  9516 ;;		_ClearLCD
  9517 ;;		_LCDPrintChar
  9518 ;;		_LCDPrintString
  9519 ;;		_SetLCDcursor
  9520 ;;		_cleanBuffer
  9521 ;;		_delayUS
  9522 ;; This function is called by:
  9523 ;;		_main
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           	psect	text15
  9528  013D52                     __ptext15:
  9529                           	opt stack 0
  9530  013D52                     _LCDScreenUpdate:
  9531                           	opt stack 20
  9532                           
  9533                           ;LCD.c: 281: delayUS(10);
  9534                           
  9535                           ; BSR set to: 1
  9536                           ;incstack = 0
  9537  013D52  0E0A               	movlw	10
  9538  013D54  0101               	movlb	1	; () banked
  9539  013D56  6F7C               	movwf	delayUS@US& (0+255),b
  9540  013D58  0E00               	movlw	0
  9541  013D5A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  9542  013D5C  0E00               	movlw	0
  9543  013D5E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  9544  013D60  0E00               	movlw	0
  9545  013D62  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  9546  013D64  EC38  F0BA         	call	_delayUS	;wreg free
  9547                           
  9548                           ;LCD.c: 282: if(LCDclearCount<(25000-1))
  9549  013D68  0101               	movlb	1	; () banked
  9550  013D6A  51DA               	movf	(_LCDclearCount+3)& (0+255),w,b
  9551  013D6C  0101               	movlb	1	; () banked
  9552  013D6E  11D9               	iorwf	(_LCDclearCount+2)& (0+255),w,b
  9553  013D70  E113               	bnz	l13803
  9554  013D72  0EA7               	movlw	167
  9555  013D74  0101               	movlb	1	; () banked
  9556  013D76  5DD7               	subwf	_LCDclearCount& (0+255),w,b
  9557  013D78  0E61               	movlw	97
  9558  013D7A  0101               	movlb	1	; () banked
  9559  013D7C  59D8               	subwfb	(_LCDclearCount+1)& (0+255),w,b
  9560  013D7E  B0D8               	btfsc	status,0,c
  9561  013D80  D00B               	goto	l13803
  9562                           
  9563                           ; BSR set to: 1
  9564                           ;LCD.c: 283: {
  9565                           ;LCD.c: 284: LCDclearCount++;
  9566  013D82  0E01               	movlw	1
  9567  013D84  0101               	movlb	1	; () banked
  9568  013D86  27D7               	addwf	_LCDclearCount& (0+255),f,b
  9569  013D88  0E00               	movlw	0
  9570  013D8A  23D8               	addwfc	(_LCDclearCount+1)& (0+255),f,b
  9571  013D8C  23D9               	addwfc	(_LCDclearCount+2)& (0+255),f,b
  9572  013D8E  23DA               	addwfc	(_LCDclearCount+3)& (0+255),f,b
  9573                           
  9574                           ; BSR set to: 1
  9575                           ;LCD.c: 285: LCDwait = 1;
  9576  013D90  0E01               	movlw	1
  9577  013D92  0101               	movlb	1	; () banked
  9578  013D94  6F09               	movwf	_LCDwait& (0+255),b
  9579                           
  9580                           ;LCD.c: 286: }
  9581  013D96  0012               	return	
  9582  013D98                     l13803:
  9583                           
  9584                           ; BSR set to: 1
  9585                           ;LCD.c: 287: else if(LCDclearCount == (25000-1))
  9586  013D98  0EA7               	movlw	167
  9587  013D9A  0101               	movlb	1	; () banked
  9588  013D9C  19D7               	xorwf	_LCDclearCount& (0+255),w,b
  9589  013D9E  E108               	bnz	u17971
  9590  013DA0  0E61               	movlw	97
  9591  013DA2  0101               	movlb	1	; () banked
  9592  013DA4  19D8               	xorwf	(_LCDclearCount+1)& (0+255),w,b
  9593  013DA6  0101               	movlb	1	; () banked
  9594  013DA8  11D9               	iorwf	(_LCDclearCount+2)& (0+255),w,b
  9595  013DAA  0101               	movlb	1	; () banked
  9596  013DAC  11DA               	iorwf	(_LCDclearCount+3)& (0+255),w,b
  9597  013DAE  A4D8               	btfss	status,2,c
  9598  013DB0                     u17971:
  9599  013DB0  0012               	return	
  9600                           
  9601                           ; BSR set to: 1
  9602                           ;LCD.c: 288: {
  9603                           ;LCD.c: 289: LCDclearCount++;
  9604  013DB2  0E01               	movlw	1
  9605  013DB4  0101               	movlb	1	; () banked
  9606  013DB6  27D7               	addwf	_LCDclearCount& (0+255),f,b
  9607  013DB8  0E00               	movlw	0
  9608  013DBA  23D8               	addwfc	(_LCDclearCount+1)& (0+255),f,b
  9609  013DBC  23D9               	addwfc	(_LCDclearCount+2)& (0+255),f,b
  9610  013DBE  23DA               	addwfc	(_LCDclearCount+3)& (0+255),f,b
  9611                           
  9612                           ; BSR set to: 1
  9613                           ;LCD.c: 290: LCDwait = 0;
  9614  013DC0  0E00               	movlw	0
  9615  013DC2  0101               	movlb	1	; () banked
  9616  013DC4  6F09               	movwf	_LCDwait& (0+255),b
  9617                           
  9618                           ; BSR set to: 1
  9619                           ;LCD.c: 291: if(ScrollFIFOCount == 0)
  9620  013DC6  0101               	movlb	1	; () banked
  9621  013DC8  510C               	movf	_ScrollFIFOCount& (0+255),w,b
  9622  013DCA  A4D8               	btfss	status,2,c
  9623  013DCC  D00F               	goto	l13819
  9624                           
  9625                           ; BSR set to: 1
  9626                           ;LCD.c: 292: {
  9627                           ;LCD.c: 293: ScrollDisplayPosition = 0;
  9628  013DCE  0E00               	movlw	0
  9629  013DD0  0101               	movlb	1	; () banked
  9630  013DD2  6F0B               	movwf	_ScrollDisplayPosition& (0+255),b
  9631                           
  9632                           ; BSR set to: 1
  9633                           ;LCD.c: 294: ClearLCD();
  9634  013DD4  EC37  F0BF         	call	_ClearLCD	;wreg free
  9635                           
  9636                           ;LCD.c: 295: SetLCDcursor(0, 0);
  9637  013DD8  0E00               	movlw	0
  9638  013DDA  0101               	movlb	1	; () banked
  9639  013DDC  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9640  013DDE  0E00               	movlw	0
  9641  013DE0  EC60  F0BD         	call	_SetLCDcursor
  9642                           
  9643                           ;LCD.c: 296: LCDPrintChar('>');
  9644  013DE4  0E3E               	movlw	62
  9645  013DE6  EC7B  F0BF         	call	_LCDPrintChar
  9646                           
  9647                           ;LCD.c: 297: }
  9648  013DEA  0012               	return	
  9649  013DEC                     l13819:
  9650                           
  9651                           ;LCD.c: 298: else
  9652                           ;LCD.c: 299: {
  9653                           ;LCD.c: 300: ScrollDisplayPosition++;
  9654  013DEC  0101               	movlb	1	; () banked
  9655  013DEE  2B0B               	incf	_ScrollDisplayPosition& (0+255),f,b
  9656                           
  9657                           ; BSR set to: 1
  9658                           ;LCD.c: 301: if(ScrollDisplayPosition == 1)
  9659  013DF0  0101               	movlb	1	; () banked
  9660  013DF2  050B               	decf	_ScrollDisplayPosition& (0+255),w,b
  9661  013DF4  A4D8               	btfss	status,2,c
  9662  013DF6  D011               	goto	l13827
  9663                           
  9664                           ; BSR set to: 1
  9665                           ;LCD.c: 302: {
  9666                           ;LCD.c: 303: ClearLCD();
  9667  013DF8  EC37  F0BF         	call	_ClearLCD	;wreg free
  9668                           
  9669                           ;LCD.c: 304: SetLCDcursor(1, 0);
  9670  013DFC  0E00               	movlw	0
  9671  013DFE  0101               	movlb	1	; () banked
  9672  013E00  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9673  013E02  0E01               	movlw	1
  9674  013E04  EC60  F0BD         	call	_SetLCDcursor
  9675                           
  9676                           ;LCD.c: 305: LCDPrintString(Scroll_1);
  9677  013E08  0E0E               	movlw	low _Scroll_1
  9678  013E0A  0101               	movlb	1	; () banked
  9679  013E0C  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9680  013E0E  0E01               	movlw	high _Scroll_1
  9681  013E10  0101               	movlb	1	; () banked
  9682  013E12  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9683  013E14  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9684                           
  9685                           ;LCD.c: 306: }
  9686  013E18  D1DC               	goto	l13925
  9687  013E1A                     l13827:
  9688                           
  9689                           ;LCD.c: 307: else if(ScrollDisplayPosition == 2)
  9690  013E1A  0E02               	movlw	2
  9691  013E1C  0101               	movlb	1	; () banked
  9692  013E1E  190B               	xorwf	_ScrollDisplayPosition& (0+255),w,b
  9693  013E20  A4D8               	btfss	status,2,c
  9694  013E22  D02C               	goto	l13837
  9695                           
  9696                           ; BSR set to: 1
  9697                           ;LCD.c: 308: {
  9698                           ;LCD.c: 309: ClearLCD();
  9699  013E24  EC37  F0BF         	call	_ClearLCD	;wreg free
  9700                           
  9701                           ;LCD.c: 310: SetLCDcursor(0, 0);
  9702  013E28  0E00               	movlw	0
  9703  013E2A  0101               	movlb	1	; () banked
  9704  013E2C  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9705  013E2E  0E00               	movlw	0
  9706  013E30  EC60  F0BD         	call	_SetLCDcursor
  9707                           
  9708                           ;LCD.c: 311: LCDPrintString(Scroll_1);
  9709  013E34  0E0E               	movlw	low _Scroll_1
  9710  013E36  0101               	movlb	1	; () banked
  9711  013E38  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9712  013E3A  0E01               	movlw	high _Scroll_1
  9713  013E3C  0101               	movlb	1	; () banked
  9714  013E3E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9715  013E40  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9716                           
  9717                           ;LCD.c: 312: SetLCDcursor(1, 0);
  9718  013E44  0E00               	movlw	0
  9719  013E46  0101               	movlb	1	; () banked
  9720  013E48  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9721  013E4A  0E01               	movlw	1
  9722  013E4C  EC60  F0BD         	call	_SetLCDcursor
  9723                           
  9724                           ;LCD.c: 313: LCDPrintString(Scroll_2);
  9725  013E50  0E1E               	movlw	low _Scroll_2
  9726  013E52  0101               	movlb	1	; () banked
  9727  013E54  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9728  013E56  0E01               	movlw	high _Scroll_2
  9729  013E58  0101               	movlb	1	; () banked
  9730  013E5A  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9731  013E5C  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9732                           
  9733                           ;LCD.c: 314: cleanBuffer(Scroll_1, 16);
  9734  013E60  0E0E               	movlw	low _Scroll_1
  9735  013E62  0101               	movlb	1	; () banked
  9736  013E64  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9737  013E66  0E01               	movlw	high _Scroll_1
  9738  013E68  0101               	movlb	1	; () banked
  9739  013E6A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9740  013E6C  0E00               	movlw	0
  9741  013E6E  0101               	movlb	1	; () banked
  9742  013E70  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9743  013E72  0E10               	movlw	16
  9744  013E74  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9745  013E76  ECCB  F0BB         	call	_cleanBuffer	;wreg free
  9746                           
  9747                           ;LCD.c: 315: }
  9748  013E7A  D1AB               	goto	l13925
  9749  013E7C                     l13837:
  9750                           
  9751                           ;LCD.c: 316: else if(ScrollDisplayPosition == 3)
  9752  013E7C  0E03               	movlw	3
  9753  013E7E  0101               	movlb	1	; () banked
  9754  013E80  190B               	xorwf	_ScrollDisplayPosition& (0+255),w,b
  9755  013E82  A4D8               	btfss	status,2,c
  9756  013E84  D02C               	goto	l13847
  9757                           
  9758                           ; BSR set to: 1
  9759                           ;LCD.c: 317: {
  9760                           ;LCD.c: 318: ClearLCD();
  9761  013E86  EC37  F0BF         	call	_ClearLCD	;wreg free
  9762                           
  9763                           ;LCD.c: 319: SetLCDcursor(0, 0);
  9764  013E8A  0E00               	movlw	0
  9765  013E8C  0101               	movlb	1	; () banked
  9766  013E8E  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9767  013E90  0E00               	movlw	0
  9768  013E92  EC60  F0BD         	call	_SetLCDcursor
  9769                           
  9770                           ;LCD.c: 320: LCDPrintString(Scroll_2);
  9771  013E96  0E1E               	movlw	low _Scroll_2
  9772  013E98  0101               	movlb	1	; () banked
  9773  013E9A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9774  013E9C  0E01               	movlw	high _Scroll_2
  9775  013E9E  0101               	movlb	1	; () banked
  9776  013EA0  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9777  013EA2  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9778                           
  9779                           ;LCD.c: 321: SetLCDcursor(1, 0);
  9780  013EA6  0E00               	movlw	0
  9781  013EA8  0101               	movlb	1	; () banked
  9782  013EAA  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9783  013EAC  0E01               	movlw	1
  9784  013EAE  EC60  F0BD         	call	_SetLCDcursor
  9785                           
  9786                           ;LCD.c: 322: LCDPrintString(Scroll_3);
  9787  013EB2  0E2E               	movlw	low _Scroll_3
  9788  013EB4  0101               	movlb	1	; () banked
  9789  013EB6  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9790  013EB8  0E01               	movlw	high _Scroll_3
  9791  013EBA  0101               	movlb	1	; () banked
  9792  013EBC  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9793  013EBE  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9794                           
  9795                           ;LCD.c: 323: cleanBuffer(Scroll_2, 16);
  9796  013EC2  0E1E               	movlw	low _Scroll_2
  9797  013EC4  0101               	movlb	1	; () banked
  9798  013EC6  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9799  013EC8  0E01               	movlw	high _Scroll_2
  9800  013ECA  0101               	movlb	1	; () banked
  9801  013ECC  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9802  013ECE  0E00               	movlw	0
  9803  013ED0  0101               	movlb	1	; () banked
  9804  013ED2  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9805  013ED4  0E10               	movlw	16
  9806  013ED6  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9807  013ED8  ECCB  F0BB         	call	_cleanBuffer	;wreg free
  9808                           
  9809                           ;LCD.c: 324: }
  9810  013EDC  D17A               	goto	l13925
  9811  013EDE                     l13847:
  9812                           
  9813                           ;LCD.c: 325: else if(ScrollDisplayPosition == 4)
  9814  013EDE  0E04               	movlw	4
  9815  013EE0  0101               	movlb	1	; () banked
  9816  013EE2  190B               	xorwf	_ScrollDisplayPosition& (0+255),w,b
  9817  013EE4  A4D8               	btfss	status,2,c
  9818  013EE6  D02C               	goto	l13857
  9819                           
  9820                           ; BSR set to: 1
  9821                           ;LCD.c: 326: {
  9822                           ;LCD.c: 327: ClearLCD();
  9823  013EE8  EC37  F0BF         	call	_ClearLCD	;wreg free
  9824                           
  9825                           ;LCD.c: 328: SetLCDcursor(0, 0);
  9826  013EEC  0E00               	movlw	0
  9827  013EEE  0101               	movlb	1	; () banked
  9828  013EF0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9829  013EF2  0E00               	movlw	0
  9830  013EF4  EC60  F0BD         	call	_SetLCDcursor
  9831                           
  9832                           ;LCD.c: 329: LCDPrintString(Scroll_3);
  9833  013EF8  0E2E               	movlw	low _Scroll_3
  9834  013EFA  0101               	movlb	1	; () banked
  9835  013EFC  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9836  013EFE  0E01               	movlw	high _Scroll_3
  9837  013F00  0101               	movlb	1	; () banked
  9838  013F02  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9839  013F04  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9840                           
  9841                           ;LCD.c: 330: SetLCDcursor(1, 0);
  9842  013F08  0E00               	movlw	0
  9843  013F0A  0101               	movlb	1	; () banked
  9844  013F0C  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9845  013F0E  0E01               	movlw	1
  9846  013F10  EC60  F0BD         	call	_SetLCDcursor
  9847                           
  9848                           ;LCD.c: 331: LCDPrintString(Scroll_4);
  9849  013F14  0E3E               	movlw	low _Scroll_4
  9850  013F16  0101               	movlb	1	; () banked
  9851  013F18  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9852  013F1A  0E01               	movlw	high _Scroll_4
  9853  013F1C  0101               	movlb	1	; () banked
  9854  013F1E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9855  013F20  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9856                           
  9857                           ;LCD.c: 332: cleanBuffer(Scroll_3, 16);
  9858  013F24  0E2E               	movlw	low _Scroll_3
  9859  013F26  0101               	movlb	1	; () banked
  9860  013F28  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9861  013F2A  0E01               	movlw	high _Scroll_3
  9862  013F2C  0101               	movlb	1	; () banked
  9863  013F2E  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9864  013F30  0E00               	movlw	0
  9865  013F32  0101               	movlb	1	; () banked
  9866  013F34  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9867  013F36  0E10               	movlw	16
  9868  013F38  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9869  013F3A  ECCB  F0BB         	call	_cleanBuffer	;wreg free
  9870                           
  9871                           ;LCD.c: 333: }
  9872  013F3E  D149               	goto	l13925
  9873  013F40                     l13857:
  9874                           
  9875                           ;LCD.c: 334: else if(ScrollDisplayPosition == 5)
  9876  013F40  0E05               	movlw	5
  9877  013F42  0101               	movlb	1	; () banked
  9878  013F44  190B               	xorwf	_ScrollDisplayPosition& (0+255),w,b
  9879  013F46  A4D8               	btfss	status,2,c
  9880  013F48  D02C               	goto	l13867
  9881                           
  9882                           ; BSR set to: 1
  9883                           ;LCD.c: 335: {
  9884                           ;LCD.c: 336: ClearLCD();
  9885  013F4A  EC37  F0BF         	call	_ClearLCD	;wreg free
  9886                           
  9887                           ;LCD.c: 337: SetLCDcursor(0, 0);
  9888  013F4E  0E00               	movlw	0
  9889  013F50  0101               	movlb	1	; () banked
  9890  013F52  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9891  013F54  0E00               	movlw	0
  9892  013F56  EC60  F0BD         	call	_SetLCDcursor
  9893                           
  9894                           ;LCD.c: 338: LCDPrintString(Scroll_4);
  9895  013F5A  0E3E               	movlw	low _Scroll_4
  9896  013F5C  0101               	movlb	1	; () banked
  9897  013F5E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9898  013F60  0E01               	movlw	high _Scroll_4
  9899  013F62  0101               	movlb	1	; () banked
  9900  013F64  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9901  013F66  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9902                           
  9903                           ;LCD.c: 339: SetLCDcursor(1, 0);
  9904  013F6A  0E00               	movlw	0
  9905  013F6C  0101               	movlb	1	; () banked
  9906  013F6E  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9907  013F70  0E01               	movlw	1
  9908  013F72  EC60  F0BD         	call	_SetLCDcursor
  9909                           
  9910                           ;LCD.c: 340: LCDPrintString(Scroll_5);
  9911  013F76  0E4E               	movlw	low _Scroll_5
  9912  013F78  0101               	movlb	1	; () banked
  9913  013F7A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9914  013F7C  0E01               	movlw	high _Scroll_5
  9915  013F7E  0101               	movlb	1	; () banked
  9916  013F80  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9917  013F82  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9918                           
  9919                           ;LCD.c: 341: cleanBuffer(Scroll_4, 16);
  9920  013F86  0E3E               	movlw	low _Scroll_4
  9921  013F88  0101               	movlb	1	; () banked
  9922  013F8A  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9923  013F8C  0E01               	movlw	high _Scroll_4
  9924  013F8E  0101               	movlb	1	; () banked
  9925  013F90  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9926  013F92  0E00               	movlw	0
  9927  013F94  0101               	movlb	1	; () banked
  9928  013F96  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9929  013F98  0E10               	movlw	16
  9930  013F9A  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9931  013F9C  ECCB  F0BB         	call	_cleanBuffer	;wreg free
  9932                           
  9933                           ;LCD.c: 342: }
  9934  013FA0  D118               	goto	l13925
  9935  013FA2                     l13867:
  9936                           
  9937                           ;LCD.c: 343: else if(ScrollDisplayPosition == 6)
  9938  013FA2  0E06               	movlw	6
  9939  013FA4  0101               	movlb	1	; () banked
  9940  013FA6  190B               	xorwf	_ScrollDisplayPosition& (0+255),w,b
  9941  013FA8  A4D8               	btfss	status,2,c
  9942  013FAA  D02C               	goto	l13877
  9943                           
  9944                           ; BSR set to: 1
  9945                           ;LCD.c: 344: {
  9946                           ;LCD.c: 345: ClearLCD();
  9947  013FAC  EC37  F0BF         	call	_ClearLCD	;wreg free
  9948                           
  9949                           ;LCD.c: 346: SetLCDcursor(0, 0);
  9950  013FB0  0E00               	movlw	0
  9951  013FB2  0101               	movlb	1	; () banked
  9952  013FB4  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9953  013FB6  0E00               	movlw	0
  9954  013FB8  EC60  F0BD         	call	_SetLCDcursor
  9955                           
  9956                           ;LCD.c: 347: LCDPrintString(Scroll_5);
  9957  013FBC  0E4E               	movlw	low _Scroll_5
  9958  013FBE  0101               	movlb	1	; () banked
  9959  013FC0  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9960  013FC2  0E01               	movlw	high _Scroll_5
  9961  013FC4  0101               	movlb	1	; () banked
  9962  013FC6  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9963  013FC8  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9964                           
  9965                           ;LCD.c: 348: SetLCDcursor(1, 0);
  9966  013FCC  0E00               	movlw	0
  9967  013FCE  0101               	movlb	1	; () banked
  9968  013FD0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9969  013FD2  0E01               	movlw	1
  9970  013FD4  EC60  F0BD         	call	_SetLCDcursor
  9971                           
  9972                           ;LCD.c: 349: LCDPrintString(Scroll_6);
  9973  013FD8  0E5E               	movlw	low _Scroll_6
  9974  013FDA  0101               	movlb	1	; () banked
  9975  013FDC  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9976  013FDE  0E01               	movlw	high _Scroll_6
  9977  013FE0  0101               	movlb	1	; () banked
  9978  013FE2  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9979  013FE4  ECA7  F0B8         	call	_LCDPrintString	;wreg free
  9980                           
  9981                           ;LCD.c: 350: cleanBuffer(Scroll_5, 16);
  9982  013FE8  0E4E               	movlw	low _Scroll_5
  9983  013FEA  0101               	movlb	1	; () banked
  9984  013FEC  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9985  013FEE  0E01               	movlw	high _Scroll_5
  9986  013FF0  0101               	movlb	1	; () banked
  9987  013FF2  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9988  013FF4  0E00               	movlw	0
  9989  013FF6  0101               	movlb	1	; () banked
  9990  013FF8  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9991  013FFA  0E10               	movlw	16
  9992  013FFC  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9993  013FFE  ECCB  F0BB         	call	_cleanBuffer	;wreg free
  9994                           
  9995                           ;LCD.c: 351: }
  9996  014002  D0E7               	goto	l13925
  9997  014004                     l13877:
  9998                           
  9999                           ;LCD.c: 352: else if(ScrollDisplayPosition == 7)
 10000  014004  0E07               	movlw	7
 10001  014006  0101               	movlb	1	; () banked
 10002  014008  190B               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 10003  01400A  A4D8               	btfss	status,2,c
 10004  01400C  D02C               	goto	l13887
 10005                           
 10006                           ; BSR set to: 1
 10007                           ;LCD.c: 353: {
 10008                           ;LCD.c: 354: ClearLCD();
 10009  01400E  EC37  F0BF         	call	_ClearLCD	;wreg free
 10010                           
 10011                           ;LCD.c: 355: SetLCDcursor(0, 0);
 10012  014012  0E00               	movlw	0
 10013  014014  0101               	movlb	1	; () banked
 10014  014016  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 10015  014018  0E00               	movlw	0
 10016  01401A  EC60  F0BD         	call	_SetLCDcursor
 10017                           
 10018                           ;LCD.c: 356: LCDPrintString(Scroll_6);
 10019  01401E  0E5E               	movlw	low _Scroll_6
 10020  014020  0101               	movlb	1	; () banked
 10021  014022  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 10022  014024  0E01               	movlw	high _Scroll_6
 10023  014026  0101               	movlb	1	; () banked
 10024  014028  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 10025  01402A  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 10026                           
 10027                           ;LCD.c: 357: SetLCDcursor(1, 0);
 10028  01402E  0E00               	movlw	0
 10029  014030  0101               	movlb	1	; () banked
 10030  014032  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 10031  014034  0E01               	movlw	1
 10032  014036  EC60  F0BD         	call	_SetLCDcursor
 10033                           
 10034                           ;LCD.c: 358: LCDPrintString(Scroll_7);
 10035  01403A  0E2D               	movlw	low _Scroll_7
 10036  01403C  0101               	movlb	1	; () banked
 10037  01403E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 10038  014040  0E00               	movlw	high _Scroll_7
 10039  014042  0101               	movlb	1	; () banked
 10040  014044  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 10041  014046  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 10042                           
 10043                           ;LCD.c: 359: cleanBuffer(Scroll_6, 16);
 10044  01404A  0E5E               	movlw	low _Scroll_6
 10045  01404C  0101               	movlb	1	; () banked
 10046  01404E  6F7C               	movwf	cleanBuffer@data& (0+255),b
 10047  014050  0E01               	movlw	high _Scroll_6
 10048  014052  0101               	movlb	1	; () banked
 10049  014054  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 10050  014056  0E00               	movlw	0
 10051  014058  0101               	movlb	1	; () banked
 10052  01405A  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 10053  01405C  0E10               	movlw	16
 10054  01405E  6F7E               	movwf	cleanBuffer@count& (0+255),b
 10055  014060  ECCB  F0BB         	call	_cleanBuffer	;wreg free
 10056                           
 10057                           ;LCD.c: 360: }
 10058  014064  D0B6               	goto	l13925
 10059  014066                     l13887:
 10060                           
 10061                           ;LCD.c: 361: else if(ScrollDisplayPosition == 8)
 10062  014066  0E08               	movlw	8
 10063  014068  0101               	movlb	1	; () banked
 10064  01406A  190B               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 10065  01406C  A4D8               	btfss	status,2,c
 10066  01406E  D02C               	goto	l13897
 10067                           
 10068                           ; BSR set to: 1
 10069                           ;LCD.c: 362: {
 10070                           ;LCD.c: 363: ClearLCD();
 10071  014070  EC37  F0BF         	call	_ClearLCD	;wreg free
 10072                           
 10073                           ;LCD.c: 364: SetLCDcursor(0, 0);
 10074  014074  0E00               	movlw	0
 10075  014076  0101               	movlb	1	; () banked
 10076  014078  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 10077  01407A  0E00               	movlw	0
 10078  01407C  EC60  F0BD         	call	_SetLCDcursor
 10079                           
 10080                           ;LCD.c: 365: LCDPrintString(Scroll_7);
 10081  014080  0E2D               	movlw	low _Scroll_7
 10082  014082  0101               	movlb	1	; () banked
 10083  014084  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 10084  014086  0E00               	movlw	high _Scroll_7
 10085  014088  0101               	movlb	1	; () banked
 10086  01408A  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 10087  01408C  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 10088                           
 10089                           ;LCD.c: 366: SetLCDcursor(1, 0);
 10090  014090  0E00               	movlw	0
 10091  014092  0101               	movlb	1	; () banked
 10092  014094  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 10093  014096  0E01               	movlw	1
 10094  014098  EC60  F0BD         	call	_SetLCDcursor
 10095                           
 10096                           ;LCD.c: 367: LCDPrintString(Scroll_8);
 10097  01409C  0E3D               	movlw	low _Scroll_8
 10098  01409E  0101               	movlb	1	; () banked
 10099  0140A0  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 10100  0140A2  0E00               	movlw	high _Scroll_8
 10101  0140A4  0101               	movlb	1	; () banked
 10102  0140A6  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 10103  0140A8  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 10104                           
 10105                           ;LCD.c: 368: cleanBuffer(Scroll_7, 16);
 10106  0140AC  0E2D               	movlw	low _Scroll_7
 10107  0140AE  0101               	movlb	1	; () banked
 10108  0140B0  6F7C               	movwf	cleanBuffer@data& (0+255),b
 10109  0140B2  0E00               	movlw	high _Scroll_7
 10110  0140B4  0101               	movlb	1	; () banked
 10111  0140B6  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 10112  0140B8  0E00               	movlw	0
 10113  0140BA  0101               	movlb	1	; () banked
 10114  0140BC  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 10115  0140BE  0E10               	movlw	16
 10116  0140C0  6F7E               	movwf	cleanBuffer@count& (0+255),b
 10117  0140C2  ECCB  F0BB         	call	_cleanBuffer	;wreg free
 10118                           
 10119                           ;LCD.c: 369: }
 10120  0140C6  D085               	goto	l13925
 10121  0140C8                     l13897:
 10122                           
 10123                           ;LCD.c: 370: else if(ScrollDisplayPosition == 9)
 10124  0140C8  0E09               	movlw	9
 10125  0140CA  0101               	movlb	1	; () banked
 10126  0140CC  190B               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 10127  0140CE  A4D8               	btfss	status,2,c
 10128  0140D0  D02C               	goto	l13907
 10129                           
 10130                           ; BSR set to: 1
 10131                           ;LCD.c: 371: {
 10132                           ;LCD.c: 372: ClearLCD();
 10133  0140D2  EC37  F0BF         	call	_ClearLCD	;wreg free
 10134                           
 10135                           ;LCD.c: 373: SetLCDcursor(0, 0);
 10136  0140D6  0E00               	movlw	0
 10137  0140D8  0101               	movlb	1	; () banked
 10138  0140DA  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 10139  0140DC  0E00               	movlw	0
 10140  0140DE  EC60  F0BD         	call	_SetLCDcursor
 10141                           
 10142                           ;LCD.c: 374: LCDPrintString(Scroll_8);
 10143  0140E2  0E3D               	movlw	low _Scroll_8
 10144  0140E4  0101               	movlb	1	; () banked
 10145  0140E6  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 10146  0140E8  0E00               	movlw	high _Scroll_8
 10147  0140EA  0101               	movlb	1	; () banked
 10148  0140EC  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 10149  0140EE  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 10150                           
 10151                           ;LCD.c: 375: SetLCDcursor(1, 0);
 10152  0140F2  0E00               	movlw	0
 10153  0140F4  0101               	movlb	1	; () banked
 10154  0140F6  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 10155  0140F8  0E01               	movlw	1
 10156  0140FA  EC60  F0BD         	call	_SetLCDcursor
 10157                           
 10158                           ;LCD.c: 376: LCDPrintString(Scroll_9);
 10159  0140FE  0EDF               	movlw	low _Scroll_9
 10160  014100  0101               	movlb	1	; () banked
 10161  014102  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 10162  014104  0E00               	movlw	high _Scroll_9
 10163  014106  0101               	movlb	1	; () banked
 10164  014108  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 10165  01410A  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 10166                           
 10167                           ;LCD.c: 377: cleanBuffer(Scroll_8, 16);
 10168  01410E  0E3D               	movlw	low _Scroll_8
 10169  014110  0101               	movlb	1	; () banked
 10170  014112  6F7C               	movwf	cleanBuffer@data& (0+255),b
 10171  014114  0E00               	movlw	high _Scroll_8
 10172  014116  0101               	movlb	1	; () banked
 10173  014118  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 10174  01411A  0E00               	movlw	0
 10175  01411C  0101               	movlb	1	; () banked
 10176  01411E  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 10177  014120  0E10               	movlw	16
 10178  014122  6F7E               	movwf	cleanBuffer@count& (0+255),b
 10179  014124  ECCB  F0BB         	call	_cleanBuffer	;wreg free
 10180                           
 10181                           ;LCD.c: 378: }
 10182  014128  D054               	goto	l13925
 10183  01412A                     l13907:
 10184                           
 10185                           ;LCD.c: 379: else if(ScrollDisplayPosition == 10)
 10186  01412A  0E0A               	movlw	10
 10187  01412C  0101               	movlb	1	; () banked
 10188  01412E  190B               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 10189  014130  A4D8               	btfss	status,2,c
 10190  014132  D02C               	goto	l13917
 10191                           
 10192                           ; BSR set to: 1
 10193                           ;LCD.c: 380: {
 10194                           ;LCD.c: 381: ClearLCD();
 10195  014134  EC37  F0BF         	call	_ClearLCD	;wreg free
 10196                           
 10197                           ;LCD.c: 382: SetLCDcursor(0, 0);
 10198  014138  0E00               	movlw	0
 10199  01413A  0101               	movlb	1	; () banked
 10200  01413C  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 10201  01413E  0E00               	movlw	0
 10202  014140  EC60  F0BD         	call	_SetLCDcursor
 10203                           
 10204                           ;LCD.c: 383: LCDPrintString(Scroll_9);
 10205  014144  0EDF               	movlw	low _Scroll_9
 10206  014146  0101               	movlb	1	; () banked
 10207  014148  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 10208  01414A  0E00               	movlw	high _Scroll_9
 10209  01414C  0101               	movlb	1	; () banked
 10210  01414E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 10211  014150  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 10212                           
 10213                           ;LCD.c: 384: SetLCDcursor(1, 0);
 10214  014154  0E00               	movlw	0
 10215  014156  0101               	movlb	1	; () banked
 10216  014158  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 10217  01415A  0E01               	movlw	1
 10218  01415C  EC60  F0BD         	call	_SetLCDcursor
 10219                           
 10220                           ;LCD.c: 385: LCDPrintString(Scroll_10);
 10221  014160  0E67               	movlw	low _Scroll_10
 10222  014162  0101               	movlb	1	; () banked
 10223  014164  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 10224  014166  0E02               	movlw	high _Scroll_10
 10225  014168  0101               	movlb	1	; () banked
 10226  01416A  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 10227  01416C  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 10228                           
 10229                           ;LCD.c: 386: cleanBuffer(Scroll_9, 16);
 10230  014170  0EDF               	movlw	low _Scroll_9
 10231  014172  0101               	movlb	1	; () banked
 10232  014174  6F7C               	movwf	cleanBuffer@data& (0+255),b
 10233  014176  0E00               	movlw	high _Scroll_9
 10234  014178  0101               	movlb	1	; () banked
 10235  01417A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 10236  01417C  0E00               	movlw	0
 10237  01417E  0101               	movlb	1	; () banked
 10238  014180  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 10239  014182  0E10               	movlw	16
 10240  014184  6F7E               	movwf	cleanBuffer@count& (0+255),b
 10241  014186  ECCB  F0BB         	call	_cleanBuffer	;wreg free
 10242                           
 10243                           ;LCD.c: 387: }
 10244  01418A  D023               	goto	l13925
 10245  01418C                     l13917:
 10246                           
 10247                           ;LCD.c: 388: else if(ScrollDisplayPosition == 11)
 10248  01418C  0E0B               	movlw	11
 10249  01418E  0101               	movlb	1	; () banked
 10250  014190  190B               	xorwf	_ScrollDisplayPosition& (0+255),w,b
 10251  014192  A4D8               	btfss	status,2,c
 10252  014194  D01E               	goto	l13925
 10253                           
 10254                           ; BSR set to: 1
 10255                           ;LCD.c: 389: {
 10256                           ;LCD.c: 390: ClearLCD();
 10257  014196  EC37  F0BF         	call	_ClearLCD	;wreg free
 10258                           
 10259                           ;LCD.c: 391: SetLCDcursor(0, 0);
 10260  01419A  0E00               	movlw	0
 10261  01419C  0101               	movlb	1	; () banked
 10262  01419E  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 10263  0141A0  0E00               	movlw	0
 10264  0141A2  EC60  F0BD         	call	_SetLCDcursor
 10265                           
 10266                           ;LCD.c: 392: LCDPrintString(Scroll_10);
 10267  0141A6  0E67               	movlw	low _Scroll_10
 10268  0141A8  0101               	movlb	1	; () banked
 10269  0141AA  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 10270  0141AC  0E02               	movlw	high _Scroll_10
 10271  0141AE  0101               	movlb	1	; () banked
 10272  0141B0  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 10273  0141B2  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 10274                           
 10275                           ;LCD.c: 393: cleanBuffer(Scroll_10, 16);
 10276  0141B6  0E67               	movlw	low _Scroll_10
 10277  0141B8  0101               	movlb	1	; () banked
 10278  0141BA  6F7C               	movwf	cleanBuffer@data& (0+255),b
 10279  0141BC  0E02               	movlw	high _Scroll_10
 10280  0141BE  0101               	movlb	1	; () banked
 10281  0141C0  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 10282  0141C2  0E00               	movlw	0
 10283  0141C4  0101               	movlb	1	; () banked
 10284  0141C6  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 10285  0141C8  0E10               	movlw	16
 10286  0141CA  6F7E               	movwf	cleanBuffer@count& (0+255),b
 10287  0141CC  ECCB  F0BB         	call	_cleanBuffer	;wreg free
 10288  0141D0  D000               	goto	l13925
 10289  0141D2                     l13925:
 10290                           
 10291                           ;LCD.c: 394: }
 10292                           ;LCD.c: 395: if(ScrollDisplayPosition > ScrollFIFOCount)
 10293  0141D2  0101               	movlb	1	; () banked
 10294  0141D4  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
 10295  0141D6  0101               	movlb	1	; () banked
 10296  0141D8  5D0C               	subwf	_ScrollFIFOCount& (0+255),w,b
 10297  0141DA  B0D8               	btfsc	status,0,c
 10298  0141DC  D006               	goto	l1141
 10299                           
 10300                           ; BSR set to: 1
 10301                           ;LCD.c: 396: {
 10302                           ;LCD.c: 397: ScrollFIFOCount=0;
 10303  0141DE  0E00               	movlw	0
 10304  0141E0  0101               	movlb	1	; () banked
 10305  0141E2  6F0C               	movwf	_ScrollFIFOCount& (0+255),b
 10306                           
 10307                           ;LCD.c: 398: ScrollDisplayPosition=0;
 10308  0141E4  0E00               	movlw	0
 10309  0141E6  0101               	movlb	1	; () banked
 10310  0141E8  6F0B               	movwf	_ScrollDisplayPosition& (0+255),b
 10311  0141EA                     l1141:
 10312                           
 10313                           ; BSR set to: 1
 10314                           ;LCD.c: 399: }
 10315                           ;LCD.c: 400: LCDclearCount = 15000;
 10316  0141EA  0E98               	movlw	152
 10317  0141EC  0101               	movlb	1	; () banked
 10318  0141EE  6FD7               	movwf	_LCDclearCount& (0+255),b
 10319  0141F0  0E3A               	movlw	58
 10320  0141F2  6FD8               	movwf	(_LCDclearCount+1)& (0+255),b
 10321  0141F4  0E00               	movlw	0
 10322  0141F6  6FD9               	movwf	(_LCDclearCount+2)& (0+255),b
 10323  0141F8  0E00               	movlw	0
 10324  0141FA  6FDA               	movwf	(_LCDclearCount+3)& (0+255),b
 10325                           
 10326                           ; BSR set to: 1
 10327                           
 10328                           ; BSR set to: 1
 10329  0141FC  0012               	return	
 10330                           
 10331                           ; BSR set to: 1
 10332  0141FE  0012               	return		;funcret
 10333  014200                     __end_of_LCDScreenUpdate:
 10334                           	opt stack 0
 10335                           tblptru	equ	0xFF8
 10336                           tblptrh	equ	0xFF7
 10337                           tblptrl	equ	0xFF6
 10338                           tablat	equ	0xFF5
 10339                           prodh	equ	0xFF4
 10340                           prodl	equ	0xFF3
 10341                           intcon	equ	0xFF2
 10342                           intcon2	equ	0xFF1
 10343                           postinc0	equ	0xFEE
 10344                           wreg	equ	0xFE8
 10345                           postdec1	equ	0xFE5
 10346                           fsr1l	equ	0xFE1
 10347                           postinc2	equ	0xFDE
 10348                           postdec2	equ	0xFDD
 10349                           fsr2h	equ	0xFDA
 10350                           fsr2l	equ	0xFD9
 10351                           status	equ	0xFD8
 10352                           
 10353 ;; *************** function _LCDPrintChar *****************
 10354 ;; Defined at:
 10355 ;;		line 267 in file "LCD.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;  character       1    wreg     unsigned char 
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;  character       1   28[BANK1 ] unsigned char 
 10360 ;; Return value:  Size  Location     Type
 10361 ;;		None               void
 10362 ;; Registers used:
 10363 ;;		wreg, status,2, status,0, cstack
 10364 ;; Tracked objects:
 10365 ;;		On entry : 0/0
 10366 ;;		On exit  : 0/0
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10370 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10372 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10373 ;;Total ram usage:        1 bytes
 10374 ;; Hardware stack levels used:    1
 10375 ;; Hardware stack levels required when called:    9
 10376 ;; This function calls:
 10377 ;;		_SendLCDbyte
 10378 ;; This function is called by:
 10379 ;;		_main
 10380 ;;		_LCDScreenUpdate
 10381 ;; This function uses a non-reentrant model
 10382 ;;
 10383                           
 10384                           	psect	text16
 10385  017EF6                     __ptext16:
 10386                           	opt stack 0
 10387  017EF6                     _LCDPrintChar:
 10388                           	opt stack 20
 10389                           
 10390                           ;incstack = 0
 10391                           ;LCDPrintChar@character stored from wreg
 10392  017EF6  0101               	movlb	1	; () banked
 10393  017EF8  6F8A               	movwf	LCDPrintChar@character& (0+255),b
 10394                           
 10395                           ; BSR set to: 1
 10396                           ;LCD.c: 269: SendLCDbyte(character, 1);
 10397  017EFA  0E01               	movlw	1
 10398  017EFC  0101               	movlb	1	; () banked
 10399  017EFE  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 10400  017F00  0101               	movlb	1	; () banked
 10401  017F02  518A               	movf	LCDPrintChar@character& (0+255),w,b
 10402  017F04  ECC3  F0AE         	call	_SendLCDbyte
 10403  017F08  0012               	return		;funcret
 10404  017F0A                     __end_of_LCDPrintChar:
 10405                           	opt stack 0
 10406                           tblptru	equ	0xFF8
 10407                           tblptrh	equ	0xFF7
 10408                           tblptrl	equ	0xFF6
 10409                           tablat	equ	0xFF5
 10410                           prodh	equ	0xFF4
 10411                           prodl	equ	0xFF3
 10412                           intcon	equ	0xFF2
 10413                           intcon2	equ	0xFF1
 10414                           postinc0	equ	0xFEE
 10415                           wreg	equ	0xFE8
 10416                           postdec1	equ	0xFE5
 10417                           fsr1l	equ	0xFE1
 10418                           postinc2	equ	0xFDE
 10419                           postdec2	equ	0xFDD
 10420                           fsr2h	equ	0xFDA
 10421                           fsr2l	equ	0xFD9
 10422                           status	equ	0xFD8
 10423                           
 10424 ;; *************** function _InitApp *****************
 10425 ;; Defined at:
 10426 ;;		line 53 in file "user.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;		None               void
 10433 ;; Registers used:
 10434 ;;		wreg, status,2, status,0, cstack
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;Total ram usage:        0 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    7
 10447 ;; This function calls:
 10448 ;;		_delayUS
 10449 ;; This function is called by:
 10450 ;;		_main
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           	psect	text17
 10455  01773A                     __ptext17:
 10456                           	opt stack 0
 10457  01773A                     _InitApp:
 10458                           	opt stack 23
 10459                           
 10460                           ;user.c: 55: TRISDbits.TRISD1 = 0;
 10461                           
 10462                           ;incstack = 0
 10463  01773A  9295               	bcf	3989,1,c	;volatile
 10464                           
 10465                           ;user.c: 56: TRISDbits.TRISD2 = 0;
 10466  01773C  9495               	bcf	3989,2,c	;volatile
 10467                           
 10468                           ;user.c: 57: TRISDbits.TRISD0 = 0;
 10469  01773E  9095               	bcf	3989,0,c	;volatile
 10470                           
 10471                           ;user.c: 58: TRISAbits.TRISA0 = 1;
 10472  017740  8092               	bsf	3986,0,c	;volatile
 10473                           
 10474                           ;user.c: 59: TRISCbits.TRISC2 = 0;
 10475  017742  9494               	bcf	3988,2,c	;volatile
 10476                           
 10477                           ;user.c: 60: TRISCbits.TRISC1 = 0;
 10478  017744  9294               	bcf	3988,1,c	;volatile
 10479                           
 10480                           ;user.c: 61: TRISEbits.TRISE2 = 1;
 10481  017746  8496               	bsf	3990,2,c	;volatile
 10482                           
 10483                           ;user.c: 62: TRISEbits.TRISE1 = 0;
 10484  017748  9296               	bcf	3990,1,c	;volatile
 10485                           
 10486                           ;user.c: 64: TRISCbits.TRISC3 = 0;
 10487  01774A  9694               	bcf	3988,3,c	;volatile
 10488                           
 10489                           ;user.c: 65: TRISCbits.TRISC4 = 0;
 10490  01774C  9894               	bcf	3988,4,c	;volatile
 10491                           
 10492                           ;user.c: 67: LATC &= ~0b00001000;
 10493  01774E  968B               	bcf	3979,3,c	;volatile
 10494                           
 10495                           ;user.c: 68: delayUS(200);
 10496  017750  0EC8               	movlw	200
 10497  017752  0101               	movlb	1	; () banked
 10498  017754  6F7C               	movwf	delayUS@US& (0+255),b
 10499  017756  0E00               	movlw	0
 10500  017758  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 10501  01775A  0E00               	movlw	0
 10502  01775C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 10503  01775E  0E00               	movlw	0
 10504  017760  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 10505  017762  EC38  F0BA         	call	_delayUS	;wreg free
 10506                           
 10507                           ;user.c: 69: TRISCbits.TRISC3 = 1;
 10508  017766  8694               	bsf	3988,3,c	;volatile
 10509                           
 10510                           ;user.c: 71: LATD &= ~(0b00000010 + 0b00000100 + 0b00000001);
 10511  017768  0EF8               	movlw	248
 10512  01776A  168C               	andwf	3980,f,c	;volatile
 10513                           
 10514                           ;user.c: 72: LATE &= ~0b00000010;
 10515  01776C  928D               	bcf	3981,1,c	;volatile
 10516                           
 10517                           ;user.c: 73: LATC &= ~(0b00000010);
 10518  01776E  928B               	bcf	3979,1,c	;volatile
 10519                           
 10520                           ;user.c: 76: TRISAbits.TRISA3 = 0;
 10521  017770  9692               	bcf	3986,3,c	;volatile
 10522                           
 10523                           ;user.c: 77: TRISAbits.TRISA4 = 0;
 10524  017772  9892               	bcf	3986,4,c	;volatile
 10525                           
 10526                           ;user.c: 78: TRISAbits.TRISA5 = 0;
 10527  017774  9A92               	bcf	3986,5,c	;volatile
 10528                           
 10529                           ;user.c: 79: TRISEbits.TRISE0 = 0;
 10530  017776  9096               	bcf	3990,0,c	;volatile
 10531                           
 10532                           ;user.c: 80: TRISDbits.TRISD4 = 0;
 10533  017778  9895               	bcf	3989,4,c	;volatile
 10534                           
 10535                           ;user.c: 81: TRISDbits.TRISD7 = 0;
 10536  01777A  9E95               	bcf	3989,7,c	;volatile
 10537                           
 10538                           ;user.c: 82: TRISDbits.TRISD6 = 0;
 10539  01777C  9C95               	bcf	3989,6,c	;volatile
 10540                           
 10541                           ;user.c: 83: TRISDbits.TRISD5 = 0;
 10542  01777E  9A95               	bcf	3989,5,c	;volatile
 10543                           
 10544                           ;user.c: 85: LATA &= ~(0b00001000+0b00010000+0b00100000);
 10545  017780  0EC7               	movlw	199
 10546  017782  1689               	andwf	3977,f,c	;volatile
 10547                           
 10548                           ;user.c: 86: LATD &= ~(0b10000000 + 0b00100000 + 0b01000000);
 10549  017784  0E1F               	movlw	31
 10550  017786  168C               	andwf	3980,f,c	;volatile
 10551                           
 10552                           ;user.c: 87: LATE &= ~0b00000001;
 10553  017788  908D               	bcf	3981,0,c	;volatile
 10554                           
 10555                           ;user.c: 90: TRISBbits.TRISB4 = 1;
 10556  01778A  8893               	bsf	3987,4,c	;volatile
 10557                           
 10558                           ;user.c: 93: TRISBbits.TRISB0 = 1;
 10559  01778C  8093               	bsf	3987,0,c	;volatile
 10560                           
 10561                           ;user.c: 95: RCONbits.IPEN = 1;
 10562  01778E  8ED0               	bsf	4048,7,c	;volatile
 10563                           
 10564                           ;user.c: 96: INTCONbits.PEIE = 1;
 10565  017790  8CF2               	bsf	intcon,6,c	;volatile
 10566                           
 10567                           ;user.c: 97: INTCONbits.GIE = 1;
 10568  017792  8EF2               	bsf	intcon,7,c	;volatile
 10569  017794  0012               	return		;funcret
 10570  017796                     __end_of_InitApp:
 10571                           	opt stack 0
 10572                           tblptru	equ	0xFF8
 10573                           tblptrh	equ	0xFF7
 10574                           tblptrl	equ	0xFF6
 10575                           tablat	equ	0xFF5
 10576                           prodh	equ	0xFF4
 10577                           prodl	equ	0xFF3
 10578                           intcon	equ	0xFF2
 10579                           intcon2	equ	0xFF1
 10580                           postinc0	equ	0xFEE
 10581                           wreg	equ	0xFE8
 10582                           postdec1	equ	0xFE5
 10583                           fsr1l	equ	0xFE1
 10584                           postinc2	equ	0xFDE
 10585                           postdec2	equ	0xFDD
 10586                           fsr2h	equ	0xFDA
 10587                           fsr2l	equ	0xFD9
 10588                           status	equ	0xFD8
 10589                           
 10590 ;; *************** function _EnableInternalADC *****************
 10591 ;; Defined at:
 10592 ;;		line 53 in file "ADC.c"
 10593 ;; Parameters:    Size  Location     Type
 10594 ;;  channels        1    wreg     unsigned char 
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;  channels        1   15[BANK1 ] unsigned char 
 10597 ;;  config          1   14[BANK1 ] unsigned char 
 10598 ;; Return value:  Size  Location     Type
 10599 ;;		None               void
 10600 ;; Registers used:
 10601 ;;		wreg, status,2, status,0
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10608 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10610 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10611 ;;Total ram usage:        2 bytes
 10612 ;; Hardware stack levels used:    1
 10613 ;; Hardware stack levels required when called:    6
 10614 ;; This function calls:
 10615 ;;		Nothing
 10616 ;; This function is called by:
 10617 ;;		_main
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           
 10621                           	psect	text18
 10622  0167E6                     __ptext18:
 10623                           	opt stack 0
 10624  0167E6                     _EnableInternalADC:
 10625                           	opt stack 24
 10626                           
 10627                           ;incstack = 0
 10628                           ;EnableInternalADC@channels stored from wreg
 10629  0167E6  0101               	movlb	1	; () banked
 10630  0167E8  6F7D               	movwf	EnableInternalADC@channels& (0+255),b
 10631                           
 10632                           ; BSR set to: 1
 10633                           ;ADC.c: 55: unsigned char config =0;
 10634  0167EA  0E00               	movlw	0
 10635  0167EC  0101               	movlb	1	; () banked
 10636  0167EE  6F7C               	movwf	EnableInternalADC@config& (0+255),b
 10637                           
 10638                           ; BSR set to: 1
 10639                           ;ADC.c: 57: if(channels == 1)
 10640  0167F0  0101               	movlb	1	; () banked
 10641  0167F2  057D               	decf	EnableInternalADC@channels& (0+255),w,b
 10642  0167F4  A4D8               	btfss	status,2,c
 10643  0167F6  D002               	goto	l9729
 10644                           
 10645                           ; BSR set to: 1
 10646                           ;ADC.c: 58: {
 10647                           ;ADC.c: 59: config |= 0b00001110;
 10648  0167F8  0E0E               	movlw	14
 10649  0167FA  D03F               	goto	L8
 10650  0167FC                     l9729:
 10651                           
 10652                           ; BSR set to: 1
 10653                           ;ADC.c: 61: else if(channels ==2)
 10654  0167FC  0E02               	movlw	2
 10655  0167FE  0101               	movlb	1	; () banked
 10656  016800  197D               	xorwf	EnableInternalADC@channels& (0+255),w,b
 10657  016802  A4D8               	btfss	status,2,c
 10658  016804  D002               	goto	l9733
 10659                           
 10660                           ; BSR set to: 1
 10661                           ;ADC.c: 62: {
 10662                           ;ADC.c: 63: config |= 0b00001101;
 10663  016806  0E0D               	movlw	13
 10664  016808  D038               	goto	L8
 10665  01680A                     l9733:
 10666                           
 10667                           ; BSR set to: 1
 10668                           ;ADC.c: 65: else if(channels ==3)
 10669  01680A  0E03               	movlw	3
 10670  01680C  0101               	movlb	1	; () banked
 10671  01680E  197D               	xorwf	EnableInternalADC@channels& (0+255),w,b
 10672  016810  A4D8               	btfss	status,2,c
 10673  016812  D002               	goto	l9737
 10674                           
 10675                           ; BSR set to: 1
 10676                           ;ADC.c: 66: {
 10677                           ;ADC.c: 67: config |= 0b00001100;
 10678  016814  0E0C               	movlw	12
 10679  016816  D031               	goto	L8
 10680  016818                     l9737:
 10681                           
 10682                           ; BSR set to: 1
 10683                           ;ADC.c: 69: else if(channels ==4)
 10684  016818  0E04               	movlw	4
 10685  01681A  0101               	movlb	1	; () banked
 10686  01681C  197D               	xorwf	EnableInternalADC@channels& (0+255),w,b
 10687  01681E  A4D8               	btfss	status,2,c
 10688  016820  D002               	goto	l9741
 10689                           
 10690                           ; BSR set to: 1
 10691                           ;ADC.c: 70: {
 10692                           ;ADC.c: 71: config |= 0b00001011;
 10693  016822  0E0B               	movlw	11
 10694  016824  D02A               	goto	L8
 10695  016826                     l9741:
 10696                           
 10697                           ; BSR set to: 1
 10698                           ;ADC.c: 73: else if(channels ==5)
 10699  016826  0E05               	movlw	5
 10700  016828  0101               	movlb	1	; () banked
 10701  01682A  197D               	xorwf	EnableInternalADC@channels& (0+255),w,b
 10702  01682C  A4D8               	btfss	status,2,c
 10703  01682E  D002               	goto	l9745
 10704                           
 10705                           ; BSR set to: 1
 10706                           ;ADC.c: 74: {
 10707                           ;ADC.c: 75: config |= 0b00001010;
 10708  016830  0E0A               	movlw	10
 10709  016832  D023               	goto	L8
 10710  016834                     l9745:
 10711                           
 10712                           ; BSR set to: 1
 10713                           ;ADC.c: 77: else if(channels ==6)
 10714  016834  0E06               	movlw	6
 10715  016836  0101               	movlb	1	; () banked
 10716  016838  197D               	xorwf	EnableInternalADC@channels& (0+255),w,b
 10717  01683A  A4D8               	btfss	status,2,c
 10718  01683C  D002               	goto	l9749
 10719                           
 10720                           ; BSR set to: 1
 10721                           ;ADC.c: 78: {
 10722                           ;ADC.c: 79: config |= 0b00001001;
 10723  01683E  0E09               	movlw	9
 10724  016840  D01C               	goto	L8
 10725  016842                     l9749:
 10726                           
 10727                           ; BSR set to: 1
 10728                           ;ADC.c: 81: else if(channels ==7)
 10729  016842  0E07               	movlw	7
 10730  016844  0101               	movlb	1	; () banked
 10731  016846  197D               	xorwf	EnableInternalADC@channels& (0+255),w,b
 10732  016848  A4D8               	btfss	status,2,c
 10733  01684A  D003               	goto	l9753
 10734                           
 10735                           ; BSR set to: 1
 10736                           ;ADC.c: 82: {
 10737                           ;ADC.c: 83: config |= 0b00001000;
 10738  01684C  0101               	movlb	1	; () banked
 10739  01684E  877C               	bsf	EnableInternalADC@config& (0+255),3,b
 10740                           
 10741                           ;ADC.c: 84: }
 10742  016850  D01A               	goto	l9767
 10743  016852                     l9753:
 10744                           
 10745                           ; BSR set to: 1
 10746                           ;ADC.c: 85: else if(channels ==8)
 10747  016852  0E08               	movlw	8
 10748  016854  0101               	movlb	1	; () banked
 10749  016856  197D               	xorwf	EnableInternalADC@channels& (0+255),w,b
 10750  016858  A4D8               	btfss	status,2,c
 10751  01685A  D002               	goto	l9757
 10752                           
 10753                           ; BSR set to: 1
 10754                           ;ADC.c: 86: {
 10755                           ;ADC.c: 87: config |= 0b00000111;
 10756  01685C  0E07               	movlw	7
 10757  01685E  D00D               	goto	L8
 10758  016860                     l9757:
 10759                           
 10760                           ; BSR set to: 1
 10761                           ;ADC.c: 89: else if(channels ==9)
 10762  016860  0E09               	movlw	9
 10763  016862  0101               	movlb	1	; () banked
 10764  016864  197D               	xorwf	EnableInternalADC@channels& (0+255),w,b
 10765  016866  A4D8               	btfss	status,2,c
 10766  016868  D002               	goto	l9761
 10767                           
 10768                           ; BSR set to: 1
 10769                           ;ADC.c: 90: {
 10770                           ;ADC.c: 91: config |= 0b00000110;
 10771  01686A  0E06               	movlw	6
 10772  01686C  D006               	goto	L8
 10773  01686E                     l9761:
 10774                           
 10775                           ; BSR set to: 1
 10776                           ;ADC.c: 93: else if(channels ==10)
 10777  01686E  0E0A               	movlw	10
 10778  016870  0101               	movlb	1	; () banked
 10779  016872  197D               	xorwf	EnableInternalADC@channels& (0+255),w,b
 10780  016874  A4D8               	btfss	status,2,c
 10781  016876  D004               	goto	l9765
 10782                           
 10783                           ; BSR set to: 1
 10784                           ;ADC.c: 94: {
 10785                           ;ADC.c: 95: config |= 0b00000101;
 10786  016878  0E05               	movlw	5
 10787  01687A                     L8:
 10788  01687A  0101               	movlb	1	; () banked
 10789  01687C  137C               	iorwf	EnableInternalADC@config& (0+255),f,b
 10790                           
 10791                           ;ADC.c: 96: }
 10792  01687E  D003               	goto	l9767
 10793  016880                     l9765:
 10794                           
 10795                           ; BSR set to: 1
 10796                           ;ADC.c: 97: else
 10797                           ;ADC.c: 98: {
 10798                           ;ADC.c: 99: config |= 0b00000100;
 10799  016880  0101               	movlb	1	; () banked
 10800  016882  857C               	bsf	EnableInternalADC@config& (0+255),2,b
 10801                           
 10802                           ; BSR set to: 1
 10803                           
 10804                           ; BSR set to: 1
 10805                           
 10806                           ; BSR set to: 1
 10807                           
 10808                           ; BSR set to: 1
 10809                           
 10810                           ; BSR set to: 1
 10811                           
 10812                           ; BSR set to: 1
 10813                           
 10814                           ; BSR set to: 1
 10815                           
 10816                           ; BSR set to: 1
 10817                           
 10818                           ; BSR set to: 1
 10819  016884  D000               	goto	l9767
 10820  016886                     l9767:
 10821                           
 10822                           ; BSR set to: 1
 10823                           ;ADC.c: 100: }
 10824                           ;ADC.c: 102: ADCON1 = config;
 10825  016886  C17C  FFC1         	movff	EnableInternalADC@config,4033	;volatile
 10826                           
 10827                           ; BSR set to: 1
 10828  01688A  0012               	return		;funcret
 10829  01688C                     __end_of_EnableInternalADC:
 10830                           	opt stack 0
 10831                           tblptru	equ	0xFF8
 10832                           tblptrh	equ	0xFF7
 10833                           tblptrl	equ	0xFF6
 10834                           tablat	equ	0xFF5
 10835                           prodh	equ	0xFF4
 10836                           prodl	equ	0xFF3
 10837                           intcon	equ	0xFF2
 10838                           intcon2	equ	0xFF1
 10839                           postinc0	equ	0xFEE
 10840                           wreg	equ	0xFE8
 10841                           postdec1	equ	0xFE5
 10842                           fsr1l	equ	0xFE1
 10843                           postinc2	equ	0xFDE
 10844                           postdec2	equ	0xFDD
 10845                           fsr2h	equ	0xFDA
 10846                           fsr2l	equ	0xFD9
 10847                           status	equ	0xFD8
 10848                           
 10849 ;; *************** function _ContrastPWM_init *****************
 10850 ;; Defined at:
 10851 ;;		line 81 in file "PWM.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;		None
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;		None
 10856 ;; Return value:  Size  Location     Type
 10857 ;;		None               void
 10858 ;; Registers used:
 10859 ;;		wreg, status,2, status,0, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10869 ;;Total ram usage:        0 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; Hardware stack levels required when called:    9
 10872 ;; This function calls:
 10873 ;;		_SetDuty
 10874 ;; This function is called by:
 10875 ;;		_main
 10876 ;; This function uses a non-reentrant model
 10877 ;;
 10878                           
 10879                           	psect	text19
 10880  017F86                     __ptext19:
 10881                           	opt stack 0
 10882  017F86                     _ContrastPWM_init:
 10883                           	opt stack 21
 10884                           
 10885                           ;PWM.c: 85: SetDuty(0);
 10886                           
 10887                           ; BSR set to: 1
 10888                           ;incstack = 0
 10889  017F86  0E00               	movlw	0
 10890  017F88  EC9A  F0B3         	call	_SetDuty
 10891                           
 10892                           ;PWM.c: 86: ECCP1CON |= 0b00001100;
 10893  017F8C  0E0C               	movlw	12
 10894  017F8E  12BA               	iorwf	4026,f,c	;volatile
 10895  017F90  0012               	return		;funcret
 10896  017F92                     __end_of_ContrastPWM_init:
 10897                           	opt stack 0
 10898                           tblptru	equ	0xFF8
 10899                           tblptrh	equ	0xFF7
 10900                           tblptrl	equ	0xFF6
 10901                           tablat	equ	0xFF5
 10902                           prodh	equ	0xFF4
 10903                           prodl	equ	0xFF3
 10904                           intcon	equ	0xFF2
 10905                           intcon2	equ	0xFF1
 10906                           postinc0	equ	0xFEE
 10907                           wreg	equ	0xFE8
 10908                           postdec1	equ	0xFE5
 10909                           fsr1l	equ	0xFE1
 10910                           postinc2	equ	0xFDE
 10911                           postdec2	equ	0xFDD
 10912                           fsr2h	equ	0xFDA
 10913                           fsr2l	equ	0xFD9
 10914                           status	equ	0xFD8
 10915                           
 10916 ;; *************** function _ConfigureOscillator *****************
 10917 ;; Defined at:
 10918 ;;		line 52 in file "system.c"
 10919 ;; Parameters:    Size  Location     Type
 10920 ;;		None
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;		None               void
 10925 ;; Registers used:
 10926 ;;		None
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10936 ;;Total ram usage:        0 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:    6
 10939 ;; This function calls:
 10940 ;;		Nothing
 10941 ;; This function is called by:
 10942 ;;		_main
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           	psect	text20
 10947  017FA6                     __ptext20:
 10948                           	opt stack 0
 10949  017FA6                     _ConfigureOscillator:
 10950                           	opt stack 24
 10951                           
 10952                           ;system.c: 56: while(!(OSCCON & 0b00001000));
 10953                           
 10954                           ;incstack = 0
 10955  017FA6  D000               	goto	l247
 10956  017FA8                     l247:
 10957  017FA8  A6D3               	btfss	4051,3,c	;volatile
 10958  017FAA  D7FE               	goto	l247
 10959  017FAC  0012               	return		;funcret
 10960  017FAE                     __end_of_ConfigureOscillator:
 10961                           	opt stack 0
 10962                           tblptru	equ	0xFF8
 10963                           tblptrh	equ	0xFF7
 10964                           tblptrl	equ	0xFF6
 10965                           tablat	equ	0xFF5
 10966                           prodh	equ	0xFF4
 10967                           prodl	equ	0xFF3
 10968                           intcon	equ	0xFF2
 10969                           intcon2	equ	0xFF1
 10970                           postinc0	equ	0xFEE
 10971                           wreg	equ	0xFE8
 10972                           postdec1	equ	0xFE5
 10973                           fsr1l	equ	0xFE1
 10974                           postinc2	equ	0xFDE
 10975                           postdec2	equ	0xFDD
 10976                           fsr2h	equ	0xFDA
 10977                           fsr2l	equ	0xFD9
 10978                           status	equ	0xFD8
 10979                           
 10980 ;; *************** function _Command *****************
 10981 ;; Defined at:
 10982 ;;		line 67 in file "StringCommand.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  Input           2   92[BANK1 ] PTR unsigned char 
 10985 ;;		 -> Rxdata(100), 
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;  buf           200    0[BANK5 ] unsigned char [200]
 10988 ;;  tempLONG        4  222[BANK5 ] long 
 10989 ;;  PARITYtemp      4  212[BANK5 ] unsigned long 
 10990 ;;  BAUDtemp        4  206[BANK5 ] unsigned long 
 10991 ;;  duty            2  220[BANK5 ] int 
 10992 ;;  channel         2  218[BANK5 ] int 
 10993 ;;  contrast        2  216[BANK5 ] int 
 10994 ;;  RTC_Battery_    2  210[BANK5 ] unsigned int 
 10995 ;;  RTC_Battery_    2  204[BANK5 ] unsigned int 
 10996 ;;  RTC_Battery_    2  202[BANK5 ] unsigned int 
 10997 ;;  ADC_Value       2  200[BANK5 ] unsigned int 
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      unsigned char 
 11000 ;; Registers used:
 11001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11007 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11008 ;;      Locals:         0       0       0       0       0       0     226       0       0       0       0       0       
      +0       0
 11009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11010 ;;      Totals:         0       0       2       0       0       0     226       0       0       0       0       0       
      +0       0
 11011 ;;Total ram usage:      228 bytes
 11012 ;; Hardware stack levels used:    1
 11013 ;; Hardware stack levels required when called:   11
 11014 ;; This function calls:
 11015 ;;		_GetBaud
 11016 ;;		_GetEnteredNumber
 11017 ;;		_ISNUMBER
 11018 ;;		_InternalADC_Read
 11019 ;;		_LCDPrintString
 11020 ;;		_LCD_Scroll
 11021 ;;		_LCDdisplayFeedback
 11022 ;;		_Parse_Time
 11023 ;;		_READ_RTC_TIME
 11024 ;;		_RemoveSpaces
 11025 ;;		_SET_RTC_TIME
 11026 ;;		_Send_Config1
 11027 ;;		_Send_Config2
 11028 ;;		_SetBaud
 11029 ;;		_SetContrast
 11030 ;;		_SetDuty
 11031 ;;		_SetLCDcursor
 11032 ;;		_SprintDate
 11033 ;;		_StartsWith
 11034 ;;		_StringAddEqual
 11035 ;;		_StringContains
 11036 ;;		_StringMatch
 11037 ;;		_UARTstring
 11038 ;;		___ftdiv
 11039 ;;		___ftmul
 11040 ;;		___fttol
 11041 ;;		___lwmod
 11042 ;;		___lwtoft
 11043 ;;		_cleanBuffer
 11044 ;;		_delayUS
 11045 ;;		_lowercase
 11046 ;;		_sprintf
 11047 ;; This function is called by:
 11048 ;;		_main
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           	psect	text21
 11053  010000                     __ptext21:
 11054                           	opt stack 0
 11055  010000                     _Command:
 11056                           	opt stack 19
 11057                           
 11058                           ;StringCommand.c: 69: int channel = 20;
 11059                           
 11060                           ;incstack = 0
 11061  010000  0E00               	movlw	0
 11062  010002  0105               	movlb	5	; () banked
 11063  010004  6FDB               	movwf	(Command@channel+1)& (0+255),b
 11064  010006  0E14               	movlw	20
 11065  010008  6FDA               	movwf	Command@channel& (0+255),b
 11066                           
 11067                           ;StringCommand.c: 70: unsigned int ADC_Value = 0;
 11068  01000A  0E00               	movlw	0
 11069  01000C  0105               	movlb	5	; () banked
 11070  01000E  6FC9               	movwf	(Command@ADC_Value+1)& (0+255),b
 11071  010010  0E00               	movlw	0
 11072  010012  6FC8               	movwf	Command@ADC_Value& (0+255),b
 11073                           
 11074                           ;StringCommand.c: 71: unsigned int RTC_Battery_Value =0;
 11075  010014  0E00               	movlw	0
 11076  010016  0105               	movlb	5	; () banked
 11077  010018  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 11078  01001A  0E00               	movlw	0
 11079  01001C  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 11080                           
 11081                           ;StringCommand.c: 72: unsigned int RTC_Battery_Value_HIGH_decimal =0;
 11082  01001E  0E00               	movlw	0
 11083  010020  0105               	movlb	5	; () banked
 11084  010022  6FCD               	movwf	(Command@RTC_Battery_Value_HIGH_decimal+1)& (0+255),b
 11085  010024  0E00               	movlw	0
 11086  010026  6FCC               	movwf	Command@RTC_Battery_Value_HIGH_decimal& (0+255),b
 11087                           
 11088                           ;StringCommand.c: 73: unsigned int RTC_Battery_Value_LOW_decimal =0;
 11089  010028  0E00               	movlw	0
 11090  01002A  0105               	movlb	5	; () banked
 11091  01002C  6FD3               	movwf	(Command@RTC_Battery_Value_LOW_decimal+1)& (0+255),b
 11092  01002E  0E00               	movlw	0
 11093  010030  6FD2               	movwf	Command@RTC_Battery_Value_LOW_decimal& (0+255),b
 11094                           
 11095                           ;StringCommand.c: 74: int duty = 0;
 11096  010032  0E00               	movlw	0
 11097  010034  0105               	movlb	5	; () banked
 11098  010036  6FDD               	movwf	(Command@duty+1)& (0+255),b
 11099  010038  0E00               	movlw	0
 11100  01003A  6FDC               	movwf	Command@duty& (0+255),b
 11101                           
 11102                           ;StringCommand.c: 75: long tempLONG;
 11103                           ;StringCommand.c: 76: int contrast = 0;
 11104  01003C  0E00               	movlw	0
 11105  01003E  0105               	movlb	5	; () banked
 11106  010040  6FD9               	movwf	(Command@contrast+1)& (0+255),b
 11107  010042  0E00               	movlw	0
 11108  010044  6FD8               	movwf	Command@contrast& (0+255),b
 11109                           
 11110                           ;StringCommand.c: 77: unsigned char buf[200];
 11111                           ;StringCommand.c: 78: unsigned long BAUDtemp = 0;
 11112  010046  0E00               	movlw	0
 11113  010048  0105               	movlb	5	; () banked
 11114  01004A  6FCE               	movwf	Command@BAUDtemp& (0+255),b
 11115  01004C  0E00               	movlw	0
 11116  01004E  6FCF               	movwf	(Command@BAUDtemp+1)& (0+255),b
 11117  010050  0E00               	movlw	0
 11118  010052  6FD0               	movwf	(Command@BAUDtemp+2)& (0+255),b
 11119  010054  0E00               	movlw	0
 11120  010056  6FD1               	movwf	(Command@BAUDtemp+3)& (0+255),b
 11121                           
 11122                           ;StringCommand.c: 79: unsigned long PARITYtemp = 0;
 11123  010058  0E00               	movlw	0
 11124  01005A  0105               	movlb	5	; () banked
 11125  01005C  6FD4               	movwf	Command@PARITYtemp& (0+255),b
 11126  01005E  0E00               	movlw	0
 11127  010060  6FD5               	movwf	(Command@PARITYtemp+1)& (0+255),b
 11128  010062  0E00               	movlw	0
 11129  010064  6FD6               	movwf	(Command@PARITYtemp+2)& (0+255),b
 11130  010066  0E00               	movlw	0
 11131  010068  6FD7               	movwf	(Command@PARITYtemp+3)& (0+255),b
 11132                           
 11133                           ; BSR set to: 5
 11134                           ;StringCommand.c: 81: UARTstring("\r\n\n");
 11135  01006A  0E13               	movlw	low (STR_245+65)
 11136  01006C  0101               	movlb	1	; () banked
 11137  01006E  6F87               	movwf	UARTstring@data& (0+255),b
 11138  010070  0EEF               	movlw	high (STR_245+65)
 11139  010072  0101               	movlb	1	; () banked
 11140  010074  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11141  010076  ECEB  F0B4         	call	_UARTstring	;wreg free
 11142                           
 11143                           ;StringCommand.c: 82: lowercase(Input);
 11144  01007A  C1CA  F17C         	movff	Command@Input,lowercase@Input
 11145  01007E  C1CB  F17D         	movff	Command@Input+1,lowercase@Input+1
 11146  010082  EC66  F0B6         	call	_lowercase	;wreg free
 11147                           
 11148                           ;StringCommand.c: 83: RemoveSpaces(Input);
 11149  010086  C1CA  F18B         	movff	Command@Input,RemoveSpaces@This
 11150  01008A  C1CB  F18C         	movff	Command@Input+1,RemoveSpaces@This+1
 11151  01008E  EC3D  F0B5         	call	_RemoveSpaces	;wreg free
 11152                           
 11153                           ;StringCommand.c: 85: if(StringMatch(Input, ">"))
 11154  010092  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11155  010096  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11156  01009A  0ED1               	movlw	low (STR_21+27)
 11157  01009C  0101               	movlb	1	; () banked
 11158  01009E  6F7E               	movwf	StringMatch@That& (0+255),b
 11159  0100A0  0EF4               	movlw	high (STR_21+27)
 11160  0100A2  0101               	movlb	1	; () banked
 11161  0100A4  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11162  0100A6  EC74  F0B7         	call	_StringMatch	;wreg free
 11163  0100AA  0900               	iorlw	0
 11164  0100AC  B4D8               	btfsc	status,2,c
 11165  0100AE  D004               	goto	l13945
 11166                           
 11167                           ;StringCommand.c: 86: {
 11168                           ;StringCommand.c: 87: return 0;
 11169  0100B0  0E00               	movlw	0
 11170  0100B2  0012               	return	
 11171                           
 11172                           ;StringCommand.c: 88: }
 11173  0100B4  EF7C  F093         	goto	l685
 11174  0100B8                     l13945:
 11175                           
 11176                           ;StringCommand.c: 89: else if (StartsWith(Input, "led"))
 11177  0100B8  C1CA  F17C         	movff	Command@Input,StartsWith@This
 11178  0100BC  C1CB  F17D         	movff	Command@Input+1,StartsWith@This+1
 11179  0100C0  0E71               	movlw	low (STR_160+3)
 11180  0100C2  0101               	movlb	1	; () banked
 11181  0100C4  6F7E               	movwf	StartsWith@That& (0+255),b
 11182  0100C6  0EFF               	movlw	high (STR_160+3)
 11183  0100C8  0101               	movlb	1	; () banked
 11184  0100CA  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 11185  0100CC  ECD5  F0B5         	call	_StartsWith	;wreg free
 11186  0100D0  0900               	iorlw	0
 11187  0100D2  B4D8               	btfsc	status,2,c
 11188  0100D4  D141               	goto	l14009
 11189                           
 11190                           ;StringCommand.c: 90: {
 11191                           ;StringCommand.c: 91: if (!StringContains(Input, "?"))
 11192  0100D6  C1CA  F17C         	movff	Command@Input,StringContains@This
 11193  0100DA  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 11194  0100DE  0E17               	movlw	low (STR_83+14)
 11195  0100E0  0101               	movlb	1	; () banked
 11196  0100E2  6F7E               	movwf	StringContains@That& (0+255),b
 11197  0100E4  0EFA               	movlw	high (STR_83+14)
 11198  0100E6  0101               	movlb	1	; () banked
 11199  0100E8  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 11200  0100EA  EC34  F0B7         	call	_StringContains	;wreg free
 11201  0100EE  0900               	iorlw	0
 11202  0100F0  A4D8               	btfss	status,2,c
 11203  0100F2  D0E0               	goto	l13999
 11204                           
 11205                           ;StringCommand.c: 92: {
 11206                           ;StringCommand.c: 93: if (StringMatch(Input, "led0"))
 11207  0100F4  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11208  0100F8  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11209  0100FC  0EBD               	movlw	low STR_40
 11210  0100FE  0101               	movlb	1	; () banked
 11211  010100  6F7E               	movwf	StringMatch@That& (0+255),b
 11212  010102  0EFF               	movlw	high STR_40
 11213  010104  0101               	movlb	1	; () banked
 11214  010106  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11215  010108  EC74  F0B7         	call	_StringMatch	;wreg free
 11216  01010C  0900               	iorlw	0
 11217  01010E  B4D8               	btfsc	status,2,c
 11218  010110  D014               	goto	l13957
 11219                           
 11220                           ;StringCommand.c: 94: {
 11221                           ;StringCommand.c: 95: LATD ^= 0b00000010;
 11222  010112  0E02               	movlw	2
 11223  010114  1A8C               	xorwf	3980,f,c	;volatile
 11224                           
 11225                           ;StringCommand.c: 96: UARTstring("LED0 Toggled");
 11226  010116  0E21               	movlw	low STR_41
 11227  010118  0101               	movlb	1	; () banked
 11228  01011A  6F87               	movwf	UARTstring@data& (0+255),b
 11229  01011C  0EFD               	movlw	high STR_41
 11230  01011E  0101               	movlb	1	; () banked
 11231  010120  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11232  010122  ECEB  F0B4         	call	_UARTstring	;wreg free
 11233                           
 11234                           ;StringCommand.c: 97: LCDdisplayFeedback("LED0 Toggled");
 11235  010126  0E21               	movlw	low STR_41
 11236  010128  0101               	movlb	1	; () banked
 11237  01012A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11238  01012C  0EFD               	movlw	high STR_41
 11239  01012E  0101               	movlb	1	; () banked
 11240  010130  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11241  010132  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 11242                           
 11243                           ;StringCommand.c: 98: }
 11244  010136  EF7C  F093         	goto	l685
 11245  01013A                     l13957:
 11246                           
 11247                           ;StringCommand.c: 99: else if (StringMatch(Input, "led0=on"))
 11248  01013A  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11249  01013E  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11250  010142  0E2A               	movlw	low STR_43
 11251  010144  0101               	movlb	1	; () banked
 11252  010146  6F7E               	movwf	StringMatch@That& (0+255),b
 11253  010148  0EFF               	movlw	high STR_43
 11254  01014A  0101               	movlb	1	; () banked
 11255  01014C  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11256  01014E  EC74  F0B7         	call	_StringMatch	;wreg free
 11257  010152  0900               	iorlw	0
 11258  010154  B4D8               	btfsc	status,2,c
 11259  010156  D013               	goto	l13965
 11260                           
 11261                           ;StringCommand.c: 100: {
 11262                           ;StringCommand.c: 101: LATD |= 0b00000010;
 11263  010158  828C               	bsf	3980,1,c	;volatile
 11264                           
 11265                           ;StringCommand.c: 102: UARTstring("LED0 On");
 11266  01015A  0E1A               	movlw	low STR_44
 11267  01015C  0101               	movlb	1	; () banked
 11268  01015E  6F87               	movwf	UARTstring@data& (0+255),b
 11269  010160  0EFF               	movlw	high STR_44
 11270  010162  0101               	movlb	1	; () banked
 11271  010164  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11272  010166  ECEB  F0B4         	call	_UARTstring	;wreg free
 11273                           
 11274                           ;StringCommand.c: 103: LCDdisplayFeedback("LED0 On");
 11275  01016A  0E1A               	movlw	low STR_44
 11276  01016C  0101               	movlb	1	; () banked
 11277  01016E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11278  010170  0EFF               	movlw	high STR_44
 11279  010172  0101               	movlb	1	; () banked
 11280  010174  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11281  010176  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 11282                           
 11283                           ;StringCommand.c: 104: }
 11284  01017A  EF7C  F093         	goto	l685
 11285  01017E                     l13965:
 11286                           
 11287                           ;StringCommand.c: 105: else if (StringMatch(Input, "led0=off"))
 11288  01017E  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11289  010182  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11290  010186  0EB3               	movlw	low STR_46
 11291  010188  0101               	movlb	1	; () banked
 11292  01018A  6F7E               	movwf	StringMatch@That& (0+255),b
 11293  01018C  0EFE               	movlw	high STR_46
 11294  01018E  0101               	movlb	1	; () banked
 11295  010190  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11296  010192  EC74  F0B7         	call	_StringMatch	;wreg free
 11297  010196  0900               	iorlw	0
 11298  010198  B4D8               	btfsc	status,2,c
 11299  01019A  D013               	goto	l13973
 11300                           
 11301                           ;StringCommand.c: 106: {
 11302                           ;StringCommand.c: 107: LATD &= ~0b00000010;
 11303  01019C  928C               	bcf	3980,1,c	;volatile
 11304                           
 11305                           ;StringCommand.c: 108: UARTstring("LED0 Off");
 11306  01019E  0EA1               	movlw	low STR_47
 11307  0101A0  0101               	movlb	1	; () banked
 11308  0101A2  6F87               	movwf	UARTstring@data& (0+255),b
 11309  0101A4  0EFE               	movlw	high STR_47
 11310  0101A6  0101               	movlb	1	; () banked
 11311  0101A8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11312  0101AA  ECEB  F0B4         	call	_UARTstring	;wreg free
 11313                           
 11314                           ;StringCommand.c: 109: LCDdisplayFeedback("LED0 Off");
 11315  0101AE  0EA1               	movlw	low STR_47
 11316  0101B0  0101               	movlb	1	; () banked
 11317  0101B2  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11318  0101B4  0EFE               	movlw	high STR_47
 11319  0101B6  0101               	movlb	1	; () banked
 11320  0101B8  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11321  0101BA  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 11322                           
 11323                           ;StringCommand.c: 110: }
 11324  0101BE  EF7C  F093         	goto	l685
 11325  0101C2                     l13973:
 11326                           
 11327                           ;StringCommand.c: 111: else if (StringMatch(Input, "led1"))
 11328  0101C2  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11329  0101C6  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11330  0101CA  0EC7               	movlw	low STR_49
 11331  0101CC  0101               	movlb	1	; () banked
 11332  0101CE  6F7E               	movwf	StringMatch@That& (0+255),b
 11333  0101D0  0EFF               	movlw	high STR_49
 11334  0101D2  0101               	movlb	1	; () banked
 11335  0101D4  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11336  0101D6  EC74  F0B7         	call	_StringMatch	;wreg free
 11337  0101DA  0900               	iorlw	0
 11338  0101DC  B4D8               	btfsc	status,2,c
 11339  0101DE  D014               	goto	l13981
 11340                           
 11341                           ;StringCommand.c: 112: {
 11342                           ;StringCommand.c: 113: LATD ^= 0b00000100;
 11343  0101E0  0E04               	movlw	4
 11344  0101E2  1A8C               	xorwf	3980,f,c	;volatile
 11345                           
 11346                           ;StringCommand.c: 114: UARTstring("LED1 Toggled");
 11347  0101E4  0E2E               	movlw	low STR_50
 11348  0101E6  0101               	movlb	1	; () banked
 11349  0101E8  6F87               	movwf	UARTstring@data& (0+255),b
 11350  0101EA  0EFD               	movlw	high STR_50
 11351  0101EC  0101               	movlb	1	; () banked
 11352  0101EE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11353  0101F0  ECEB  F0B4         	call	_UARTstring	;wreg free
 11354                           
 11355                           ;StringCommand.c: 115: LCDdisplayFeedback("LED1 Toggled");
 11356  0101F4  0E2E               	movlw	low STR_50
 11357  0101F6  0101               	movlb	1	; () banked
 11358  0101F8  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11359  0101FA  0EFD               	movlw	high STR_50
 11360  0101FC  0101               	movlb	1	; () banked
 11361  0101FE  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11362  010200  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 11363                           
 11364                           ;StringCommand.c: 116: }
 11365  010204  EF7C  F093         	goto	l685
 11366  010208                     l13981:
 11367                           
 11368                           ;StringCommand.c: 117: else if (StringMatch(Input, "led1=on"))
 11369  010208  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11370  01020C  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11371  010210  0E32               	movlw	low STR_52
 11372  010212  0101               	movlb	1	; () banked
 11373  010214  6F7E               	movwf	StringMatch@That& (0+255),b
 11374  010216  0EFF               	movlw	high STR_52
 11375  010218  0101               	movlb	1	; () banked
 11376  01021A  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11377  01021C  EC74  F0B7         	call	_StringMatch	;wreg free
 11378  010220  0900               	iorlw	0
 11379  010222  B4D8               	btfsc	status,2,c
 11380  010224  D013               	goto	l13989
 11381                           
 11382                           ;StringCommand.c: 118: {
 11383                           ;StringCommand.c: 119: LATD |= 0b00000100;
 11384  010226  848C               	bsf	3980,2,c	;volatile
 11385                           
 11386                           ;StringCommand.c: 120: UARTstring("LED1 On");
 11387  010228  0E22               	movlw	low STR_53
 11388  01022A  0101               	movlb	1	; () banked
 11389  01022C  6F87               	movwf	UARTstring@data& (0+255),b
 11390  01022E  0EFF               	movlw	high STR_53
 11391  010230  0101               	movlb	1	; () banked
 11392  010232  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11393  010234  ECEB  F0B4         	call	_UARTstring	;wreg free
 11394                           
 11395                           ;StringCommand.c: 121: LCDdisplayFeedback("LED1 On");
 11396  010238  0E22               	movlw	low STR_53
 11397  01023A  0101               	movlb	1	; () banked
 11398  01023C  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11399  01023E  0EFF               	movlw	high STR_53
 11400  010240  0101               	movlb	1	; () banked
 11401  010242  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11402  010244  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 11403                           
 11404                           ;StringCommand.c: 122: }
 11405  010248  EF7C  F093         	goto	l685
 11406  01024C                     l13989:
 11407                           
 11408                           ;StringCommand.c: 123: else if (StringMatch(Input, "led1=off"))
 11409  01024C  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11410  010250  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11411  010254  0EBC               	movlw	low STR_55
 11412  010256  0101               	movlb	1	; () banked
 11413  010258  6F7E               	movwf	StringMatch@That& (0+255),b
 11414  01025A  0EFE               	movlw	high STR_55
 11415  01025C  0101               	movlb	1	; () banked
 11416  01025E  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11417  010260  EC74  F0B7         	call	_StringMatch	;wreg free
 11418  010264  0900               	iorlw	0
 11419  010266  B4D8               	btfsc	status,2,c
 11420  010268  D013               	goto	l13997
 11421                           
 11422                           ;StringCommand.c: 124: {
 11423                           ;StringCommand.c: 125: LATD &= ~0b00000100;
 11424  01026A  948C               	bcf	3980,2,c	;volatile
 11425                           
 11426                           ;StringCommand.c: 126: UARTstring("LED1 Off");
 11427  01026C  0EAA               	movlw	low STR_56
 11428  01026E  0101               	movlb	1	; () banked
 11429  010270  6F87               	movwf	UARTstring@data& (0+255),b
 11430  010272  0EFE               	movlw	high STR_56
 11431  010274  0101               	movlb	1	; () banked
 11432  010276  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11433  010278  ECEB  F0B4         	call	_UARTstring	;wreg free
 11434                           
 11435                           ;StringCommand.c: 127: LCDdisplayFeedback("LED1 Off");
 11436  01027C  0EAA               	movlw	low STR_56
 11437  01027E  0101               	movlb	1	; () banked
 11438  010280  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11439  010282  0EFE               	movlw	high STR_56
 11440  010284  0101               	movlb	1	; () banked
 11441  010286  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11442  010288  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 11443                           
 11444                           ;StringCommand.c: 128: }
 11445  01028C  EF7C  F093         	goto	l685
 11446  010290                     l13997:
 11447                           
 11448                           ;StringCommand.c: 129: else
 11449                           ;StringCommand.c: 130: {
 11450                           ;StringCommand.c: 131: UARTstring("LED What???");
 11451  010290  0E3D               	movlw	low (STR_173+4)
 11452  010292  0101               	movlb	1	; () banked
 11453  010294  6F87               	movwf	UARTstring@data& (0+255),b
 11454  010296  0EFA               	movlw	high (STR_173+4)
 11455  010298  0101               	movlb	1	; () banked
 11456  01029A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11457  01029C  ECEB  F0B4         	call	_UARTstring	;wreg free
 11458                           
 11459                           ;StringCommand.c: 132: LCDdisplayFeedback("LED What???");
 11460  0102A0  0E3D               	movlw	low (STR_173+4)
 11461  0102A2  0101               	movlb	1	; () banked
 11462  0102A4  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11463  0102A6  0EFA               	movlw	high (STR_173+4)
 11464  0102A8  0101               	movlb	1	; () banked
 11465  0102AA  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11466  0102AC  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 11467                           
 11468                           ;StringCommand.c: 133: }
 11469                           ;StringCommand.c: 134: }
 11470  0102B0  EF7C  F093         	goto	l685
 11471  0102B4                     l13999:
 11472                           
 11473                           ;StringCommand.c: 135: else
 11474                           ;StringCommand.c: 136: {
 11475                           ;StringCommand.c: 137: UARTstring("LED Help Menu\r\n\n");
 11476  0102B4  0EFB               	movlw	low STR_60
 11477  0102B6  0101               	movlb	1	; () banked
 11478  0102B8  6F87               	movwf	UARTstring@data& (0+255),b
 11479  0102BA  0EF8               	movlw	high STR_60
 11480  0102BC  0101               	movlb	1	; () banked
 11481  0102BE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11482  0102C0  ECEB  F0B4         	call	_UARTstring	;wreg free
 11483                           
 11484                           ;StringCommand.c: 138: UARTstring("Devices:\r\n");
 11485  0102C4  0EB7               	movlw	low STR_61
 11486  0102C6  0101               	movlb	1	; () banked
 11487  0102C8  6F87               	movwf	UARTstring@data& (0+255),b
 11488  0102CA  0EFD               	movlw	high STR_61
 11489  0102CC  0101               	movlb	1	; () banked
 11490  0102CE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11491  0102D0  ECEB  F0B4         	call	_UARTstring	;wreg free
 11492                           
 11493                           ;StringCommand.c: 139: UARTstring("LED0\r\n");
 11494  0102D4  0E60               	movlw	low STR_62
 11495  0102D6  0101               	movlb	1	; () banked
 11496  0102D8  6F87               	movwf	UARTstring@data& (0+255),b
 11497  0102DA  0EFF               	movlw	high STR_62
 11498  0102DC  0101               	movlb	1	; () banked
 11499  0102DE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11500  0102E0  ECEB  F0B4         	call	_UARTstring	;wreg free
 11501                           
 11502                           ;StringCommand.c: 140: UARTstring("LED1\r\n\n");
 11503  0102E4  0EF2               	movlw	low STR_63
 11504  0102E6  0101               	movlb	1	; () banked
 11505  0102E8  6F87               	movwf	UARTstring@data& (0+255),b
 11506  0102EA  0EFE               	movlw	high STR_63
 11507  0102EC  0101               	movlb	1	; () banked
 11508  0102EE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11509  0102F0  ECEB  F0B4         	call	_UARTstring	;wreg free
 11510                           
 11511                           ;StringCommand.c: 141: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 11512  0102F4  0E17               	movlw	low STR_64
 11513  0102F6  0101               	movlb	1	; () banked
 11514  0102F8  6F87               	movwf	UARTstring@data& (0+255),b
 11515  0102FA  0EEF               	movlw	high STR_64
 11516  0102FC  0101               	movlb	1	; () banked
 11517  0102FE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11518  010300  ECEB  F0B4         	call	_UARTstring	;wreg free
 11519                           
 11520                           ;StringCommand.c: 142: UARTstring("i.e. LED1 = On\r\n");
 11521  010304  0E2E               	movlw	low STR_65
 11522  010306  0101               	movlb	1	; () banked
 11523  010308  6F87               	movwf	UARTstring@data& (0+255),b
 11524  01030A  0EF9               	movlw	high STR_65
 11525  01030C  0101               	movlb	1	; () banked
 11526  01030E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11527  010310  ECEB  F0B4         	call	_UARTstring	;wreg free
 11528                           
 11529                           ;StringCommand.c: 143: LCD_Scroll("LED Menu");
 11530  010314  0EE0               	movlw	low STR_66
 11531  010316  0101               	movlb	1	; () banked
 11532  010318  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11533  01031A  0EFE               	movlw	high STR_66
 11534  01031C  0101               	movlb	1	; () banked
 11535  01031E  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11536  010320  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 11537                           
 11538                           ;StringCommand.c: 144: LCD_Scroll("Devices:");
 11539  010324  0E8F               	movlw	low STR_67
 11540  010326  0101               	movlb	1	; () banked
 11541  010328  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11542  01032A  0EFE               	movlw	high STR_67
 11543  01032C  0101               	movlb	1	; () banked
 11544  01032E  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11545  010330  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 11546                           
 11547                           ;StringCommand.c: 145: LCD_Scroll("LED0");
 11548  010334  0EB8               	movlw	low STR_68
 11549  010336  0101               	movlb	1	; () banked
 11550  010338  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11551  01033A  0EFF               	movlw	high STR_68
 11552  01033C  0101               	movlb	1	; () banked
 11553  01033E  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11554  010340  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 11555                           
 11556                           ;StringCommand.c: 146: LCD_Scroll("LED1");
 11557  010344  0EC2               	movlw	low STR_69
 11558  010346  0101               	movlb	1	; () banked
 11559  010348  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11560  01034A  0EFF               	movlw	high STR_69
 11561  01034C  0101               	movlb	1	; () banked
 11562  01034E  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11563  010350  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 11564                           
 11565                           ;StringCommand.c: 147: }
 11566                           ;StringCommand.c: 148: }
 11567  010354  EF7C  F093         	goto	l685
 11568  010358                     l14009:
 11569                           
 11570                           ;StringCommand.c: 150: else if (StartsWith(Input, "livingroom"))
 11571  010358  C1CA  F17C         	movff	Command@Input,StartsWith@This
 11572  01035C  C1CB  F17D         	movff	Command@Input+1,StartsWith@This+1
 11573  010360  0EEE               	movlw	low STR_70
 11574  010362  0101               	movlb	1	; () banked
 11575  010364  6F7E               	movwf	StartsWith@That& (0+255),b
 11576  010366  0EFD               	movlw	high STR_70
 11577  010368  0101               	movlb	1	; () banked
 11578  01036A  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 11579  01036C  ECD5  F0B5         	call	_StartsWith	;wreg free
 11580  010370  0900               	iorlw	0
 11581  010372  B4D8               	btfsc	status,2,c
 11582  010374  D1CB               	goto	l14061
 11583                           
 11584                           ;StringCommand.c: 151: {
 11585                           ;StringCommand.c: 152: if (!StringContains(Input, "?"))
 11586  010376  C1CA  F17C         	movff	Command@Input,StringContains@This
 11587  01037A  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 11588  01037E  0E17               	movlw	low (STR_83+14)
 11589  010380  0101               	movlb	1	; () banked
 11590  010382  6F7E               	movwf	StringContains@That& (0+255),b
 11591  010384  0EFA               	movlw	high (STR_83+14)
 11592  010386  0101               	movlb	1	; () banked
 11593  010388  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 11594  01038A  EC34  F0B7         	call	_StringContains	;wreg free
 11595  01038E  0900               	iorlw	0
 11596  010390  A4D8               	btfss	status,2,c
 11597  010392  D162               	goto	l14051
 11598                           
 11599                           ;StringCommand.c: 153: {
 11600                           ;StringCommand.c: 154: if (StringMatch(Input, "livingroomlight=on") || StringMatch(Input
      +                          , "livingroomlight=off"))
 11601  010394  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11602  010398  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11603  01039C  0EED               	movlw	low STR_72
 11604  01039E  0101               	movlb	1	; () banked
 11605  0103A0  6F7E               	movwf	StringMatch@That& (0+255),b
 11606  0103A2  0EF7               	movlw	high STR_72
 11607  0103A4  0101               	movlb	1	; () banked
 11608  0103A6  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11609  0103A8  EC74  F0B7         	call	_StringMatch	;wreg free
 11610  0103AC  0900               	iorlw	0
 11611  0103AE  A4D8               	btfss	status,2,c
 11612  0103B0  D00F               	goto	l706
 11613  0103B2  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11614  0103B6  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11615  0103BA  0E79               	movlw	low STR_73
 11616  0103BC  0101               	movlb	1	; () banked
 11617  0103BE  6F7E               	movwf	StringMatch@That& (0+255),b
 11618  0103C0  0EF7               	movlw	high STR_73
 11619  0103C2  0101               	movlb	1	; () banked
 11620  0103C4  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11621  0103C6  EC74  F0B7         	call	_StringMatch	;wreg free
 11622  0103CA  0900               	iorlw	0
 11623  0103CC  B4D8               	btfsc	status,2,c
 11624  0103CE  D053               	goto	l14025
 11625  0103D0                     l706:
 11626                           
 11627                           ;StringCommand.c: 155: {
 11628                           ;StringCommand.c: 156: INTCONbits.GIE = 0;
 11629  0103D0  9EF2               	bcf	intcon,7,c	;volatile
 11630                           
 11631                           ;StringCommand.c: 157: Send_Config1(0b00000001, TXdataD);
 11632  0103D2  0E65               	movlw	low _TXdataD
 11633  0103D4  0101               	movlb	1	; () banked
 11634  0103D6  6F87               	movwf	Send_Config1@data& (0+255),b
 11635  0103D8  0EEE               	movlw	high _TXdataD
 11636  0103DA  0101               	movlb	1	; () banked
 11637  0103DC  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11638  0103DE  0E01               	movlw	1
 11639  0103E0  EC20  F0B0         	call	_Send_Config1
 11640                           
 11641                           ;StringCommand.c: 158: Send_Config1(0b00000001, TXdataD);
 11642  0103E4  0E65               	movlw	low _TXdataD
 11643  0103E6  0101               	movlb	1	; () banked
 11644  0103E8  6F87               	movwf	Send_Config1@data& (0+255),b
 11645  0103EA  0EEE               	movlw	high _TXdataD
 11646  0103EC  0101               	movlb	1	; () banked
 11647  0103EE  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11648  0103F0  0E01               	movlw	1
 11649  0103F2  EC20  F0B0         	call	_Send_Config1
 11650                           
 11651                           ;StringCommand.c: 159: Send_Config1(0b00000001, TXdataD);
 11652  0103F6  0E65               	movlw	low _TXdataD
 11653  0103F8  0101               	movlb	1	; () banked
 11654  0103FA  6F87               	movwf	Send_Config1@data& (0+255),b
 11655  0103FC  0EEE               	movlw	high _TXdataD
 11656  0103FE  0101               	movlb	1	; () banked
 11657  010400  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11658  010402  0E01               	movlw	1
 11659  010404  EC20  F0B0         	call	_Send_Config1
 11660                           
 11661                           ;StringCommand.c: 160: Send_Config1(0b00000001, TXdataD);
 11662  010408  0E65               	movlw	low _TXdataD
 11663  01040A  0101               	movlb	1	; () banked
 11664  01040C  6F87               	movwf	Send_Config1@data& (0+255),b
 11665  01040E  0EEE               	movlw	high _TXdataD
 11666  010410  0101               	movlb	1	; () banked
 11667  010412  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11668  010414  0E01               	movlw	1
 11669  010416  EC20  F0B0         	call	_Send_Config1
 11670                           
 11671                           ;StringCommand.c: 161: Send_Config1(0b00000001, TXdataD);
 11672  01041A  0E65               	movlw	low _TXdataD
 11673  01041C  0101               	movlb	1	; () banked
 11674  01041E  6F87               	movwf	Send_Config1@data& (0+255),b
 11675  010420  0EEE               	movlw	high _TXdataD
 11676  010422  0101               	movlb	1	; () banked
 11677  010424  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11678  010426  0E01               	movlw	1
 11679  010428  EC20  F0B0         	call	_Send_Config1
 11680                           
 11681                           ;StringCommand.c: 162: Send_Config1(0b00000001, TXdataD);
 11682  01042C  0E65               	movlw	low _TXdataD
 11683  01042E  0101               	movlb	1	; () banked
 11684  010430  6F87               	movwf	Send_Config1@data& (0+255),b
 11685  010432  0EEE               	movlw	high _TXdataD
 11686  010434  0101               	movlb	1	; () banked
 11687  010436  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11688  010438  0E01               	movlw	1
 11689  01043A  EC20  F0B0         	call	_Send_Config1
 11690                           
 11691                           ;StringCommand.c: 163: Send_Config1(0b00000001, TXdataD);
 11692  01043E  0E65               	movlw	low _TXdataD
 11693  010440  0101               	movlb	1	; () banked
 11694  010442  6F87               	movwf	Send_Config1@data& (0+255),b
 11695  010444  0EEE               	movlw	high _TXdataD
 11696  010446  0101               	movlb	1	; () banked
 11697  010448  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11698  01044A  0E01               	movlw	1
 11699  01044C  EC20  F0B0         	call	_Send_Config1
 11700                           
 11701                           ;StringCommand.c: 164: INTCONbits.GIE = 1;
 11702  010450  8EF2               	bsf	intcon,7,c	;volatile
 11703                           
 11704                           ;StringCommand.c: 165: UARTstring("Livingroom Light Toggled");
 11705  010452  0E15               	movlw	low STR_74
 11706  010454  0101               	movlb	1	; () banked
 11707  010456  6F87               	movwf	UARTstring@data& (0+255),b
 11708  010458  0EF6               	movlw	high STR_74
 11709  01045A  0101               	movlb	1	; () banked
 11710  01045C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11711  01045E  ECEB  F0B4         	call	_UARTstring	;wreg free
 11712                           
 11713                           ;StringCommand.c: 166: LCDdisplayFeedback("LVNG Rm Lt TGLD");
 11714  010462  0E79               	movlw	low STR_75
 11715  010464  0101               	movlb	1	; () banked
 11716  010466  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11717  010468  0EFA               	movlw	high STR_75
 11718  01046A  0101               	movlb	1	; () banked
 11719  01046C  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11720  01046E  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 11721                           
 11722                           ;StringCommand.c: 167: }
 11723  010472  EF7C  F093         	goto	l685
 11724  010476                     l14025:
 11725                           
 11726                           ;StringCommand.c: 168: else if (StringMatch(Input, "livingroomfan=on"))
 11727  010476  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11728  01047A  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11729  01047E  0E72               	movlw	low STR_76
 11730  010480  0101               	movlb	1	; () banked
 11731  010482  6F7E               	movwf	StringMatch@That& (0+255),b
 11732  010484  0EF9               	movlw	high STR_76
 11733  010486  0101               	movlb	1	; () banked
 11734  010488  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11735  01048A  EC74  F0B7         	call	_StringMatch	;wreg free
 11736  01048E  0900               	iorlw	0
 11737  010490  B4D8               	btfsc	status,2,c
 11738  010492  D05C               	goto	l14037
 11739                           
 11740                           ;StringCommand.c: 169: {
 11741                           ;StringCommand.c: 170: INTCONbits.GIE = 0;
 11742  010494  9EF2               	bcf	intcon,7,c	;volatile
 11743                           
 11744                           ;StringCommand.c: 171: Send_Config2(0b00000001, fanON);
 11745  010496  0E55               	movlw	low _fanON
 11746  010498  0101               	movlb	1	; () banked
 11747  01049A  6F87               	movwf	Send_Config2@data& (0+255),b
 11748  01049C  0EEE               	movlw	high _fanON
 11749  01049E  0101               	movlb	1	; () banked
 11750  0104A0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11751  0104A2  0E01               	movlw	1
 11752  0104A4  ECF2  F0B6         	call	_Send_Config2
 11753                           
 11754                           ;StringCommand.c: 172: Send_Config2(0b00000001, fanON);
 11755  0104A8  0E55               	movlw	low _fanON
 11756  0104AA  0101               	movlb	1	; () banked
 11757  0104AC  6F87               	movwf	Send_Config2@data& (0+255),b
 11758  0104AE  0EEE               	movlw	high _fanON
 11759  0104B0  0101               	movlb	1	; () banked
 11760  0104B2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11761  0104B4  0E01               	movlw	1
 11762  0104B6  ECF2  F0B6         	call	_Send_Config2
 11763                           
 11764                           ;StringCommand.c: 173: Send_Config2(0b00000001, fanON);
 11765  0104BA  0E55               	movlw	low _fanON
 11766  0104BC  0101               	movlb	1	; () banked
 11767  0104BE  6F87               	movwf	Send_Config2@data& (0+255),b
 11768  0104C0  0EEE               	movlw	high _fanON
 11769  0104C2  0101               	movlb	1	; () banked
 11770  0104C4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11771  0104C6  0E01               	movlw	1
 11772  0104C8  ECF2  F0B6         	call	_Send_Config2
 11773                           
 11774                           ;StringCommand.c: 174: Send_Config2(0b00000001, fanON);
 11775  0104CC  0E55               	movlw	low _fanON
 11776  0104CE  0101               	movlb	1	; () banked
 11777  0104D0  6F87               	movwf	Send_Config2@data& (0+255),b
 11778  0104D2  0EEE               	movlw	high _fanON
 11779  0104D4  0101               	movlb	1	; () banked
 11780  0104D6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11781  0104D8  0E01               	movlw	1
 11782  0104DA  ECF2  F0B6         	call	_Send_Config2
 11783                           
 11784                           ;StringCommand.c: 175: Send_Config2(0b00000001, fanON);
 11785  0104DE  0E55               	movlw	low _fanON
 11786  0104E0  0101               	movlb	1	; () banked
 11787  0104E2  6F87               	movwf	Send_Config2@data& (0+255),b
 11788  0104E4  0EEE               	movlw	high _fanON
 11789  0104E6  0101               	movlb	1	; () banked
 11790  0104E8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11791  0104EA  0E01               	movlw	1
 11792  0104EC  ECF2  F0B6         	call	_Send_Config2
 11793                           
 11794                           ;StringCommand.c: 176: Send_Config2(0b00000001, fanON);
 11795  0104F0  0E55               	movlw	low _fanON
 11796  0104F2  0101               	movlb	1	; () banked
 11797  0104F4  6F87               	movwf	Send_Config2@data& (0+255),b
 11798  0104F6  0EEE               	movlw	high _fanON
 11799  0104F8  0101               	movlb	1	; () banked
 11800  0104FA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11801  0104FC  0E01               	movlw	1
 11802  0104FE  ECF2  F0B6         	call	_Send_Config2
 11803                           
 11804                           ;StringCommand.c: 177: Send_Config2(0b00000001, fanON);
 11805  010502  0E55               	movlw	low _fanON
 11806  010504  0101               	movlb	1	; () banked
 11807  010506  6F87               	movwf	Send_Config2@data& (0+255),b
 11808  010508  0EEE               	movlw	high _fanON
 11809  01050A  0101               	movlb	1	; () banked
 11810  01050C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11811  01050E  0E01               	movlw	1
 11812  010510  ECF2  F0B6         	call	_Send_Config2
 11813                           
 11814                           ;StringCommand.c: 178: Send_Config2(0b00000001, fanON);
 11815  010514  0E55               	movlw	low _fanON
 11816  010516  0101               	movlb	1	; () banked
 11817  010518  6F87               	movwf	Send_Config2@data& (0+255),b
 11818  01051A  0EEE               	movlw	high _fanON
 11819  01051C  0101               	movlb	1	; () banked
 11820  01051E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11821  010520  0E01               	movlw	1
 11822  010522  ECF2  F0B6         	call	_Send_Config2
 11823                           
 11824                           ;StringCommand.c: 179: INTCONbits.GIE = 1;
 11825  010526  8EF2               	bsf	intcon,7,c	;volatile
 11826                           
 11827                           ;StringCommand.c: 180: UARTstring("Livingroom Fan On");
 11828  010528  0E92               	movlw	low STR_77
 11829  01052A  0101               	movlb	1	; () banked
 11830  01052C  6F87               	movwf	UARTstring@data& (0+255),b
 11831  01052E  0EF8               	movlw	high STR_77
 11832  010530  0101               	movlb	1	; () banked
 11833  010532  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11834  010534  ECEB  F0B4         	call	_UARTstring	;wreg free
 11835                           
 11836                           ;StringCommand.c: 181: LCDdisplayFeedback("LVNG Rm Lt On");
 11837  010538  0E71               	movlw	low STR_78
 11838  01053A  0101               	movlb	1	; () banked
 11839  01053C  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11840  01053E  0EFC               	movlw	high STR_78
 11841  010540  0101               	movlb	1	; () banked
 11842  010542  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11843  010544  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 11844                           
 11845                           ;StringCommand.c: 182: }
 11846  010548  EF7C  F093         	goto	l685
 11847  01054C                     l14037:
 11848                           
 11849                           ;StringCommand.c: 183: else if (StringMatch(Input, "livingroomfan=off"))
 11850  01054C  C1CA  F17C         	movff	Command@Input,StringMatch@This
 11851  010550  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 11852  010554  0E5C               	movlw	low STR_79
 11853  010556  0101               	movlb	1	; () banked
 11854  010558  6F7E               	movwf	StringMatch@That& (0+255),b
 11855  01055A  0EF8               	movlw	high STR_79
 11856  01055C  0101               	movlb	1	; () banked
 11857  01055E  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11858  010560  EC74  F0B7         	call	_StringMatch	;wreg free
 11859  010564  0900               	iorlw	0
 11860  010566  B4D8               	btfsc	status,2,c
 11861  010568  D065               	goto	l14049
 11862                           
 11863                           ;StringCommand.c: 184: {
 11864                           ;StringCommand.c: 185: INTCONbits.GIE = 0;
 11865  01056A  9EF2               	bcf	intcon,7,c	;volatile
 11866                           
 11867                           ;StringCommand.c: 186: Send_Config2(0b00000001, fanOFF);
 11868  01056C  0E45               	movlw	low _fanOFF
 11869  01056E  0101               	movlb	1	; () banked
 11870  010570  6F87               	movwf	Send_Config2@data& (0+255),b
 11871  010572  0EEE               	movlw	high _fanOFF
 11872  010574  0101               	movlb	1	; () banked
 11873  010576  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11874  010578  0E01               	movlw	1
 11875  01057A  ECF2  F0B6         	call	_Send_Config2
 11876                           
 11877                           ;StringCommand.c: 187: Send_Config2(0b00000001, fanOFF);
 11878  01057E  0E45               	movlw	low _fanOFF
 11879  010580  0101               	movlb	1	; () banked
 11880  010582  6F87               	movwf	Send_Config2@data& (0+255),b
 11881  010584  0EEE               	movlw	high _fanOFF
 11882  010586  0101               	movlb	1	; () banked
 11883  010588  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11884  01058A  0E01               	movlw	1
 11885  01058C  ECF2  F0B6         	call	_Send_Config2
 11886                           
 11887                           ;StringCommand.c: 188: Send_Config2(0b00000001, fanOFF);
 11888  010590  0E45               	movlw	low _fanOFF
 11889  010592  0101               	movlb	1	; () banked
 11890  010594  6F87               	movwf	Send_Config2@data& (0+255),b
 11891  010596  0EEE               	movlw	high _fanOFF
 11892  010598  0101               	movlb	1	; () banked
 11893  01059A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11894  01059C  0E01               	movlw	1
 11895  01059E  ECF2  F0B6         	call	_Send_Config2
 11896                           
 11897                           ;StringCommand.c: 189: Send_Config2(0b00000001, fanOFF);
 11898  0105A2  0E45               	movlw	low _fanOFF
 11899  0105A4  0101               	movlb	1	; () banked
 11900  0105A6  6F87               	movwf	Send_Config2@data& (0+255),b
 11901  0105A8  0EEE               	movlw	high _fanOFF
 11902  0105AA  0101               	movlb	1	; () banked
 11903  0105AC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11904  0105AE  0E01               	movlw	1
 11905  0105B0  ECF2  F0B6         	call	_Send_Config2
 11906                           
 11907                           ;StringCommand.c: 190: Send_Config2(0b00000001, fanOFF);
 11908  0105B4  0E45               	movlw	low _fanOFF
 11909  0105B6  0101               	movlb	1	; () banked
 11910  0105B8  6F87               	movwf	Send_Config2@data& (0+255),b
 11911  0105BA  0EEE               	movlw	high _fanOFF
 11912  0105BC  0101               	movlb	1	; () banked
 11913  0105BE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11914  0105C0  0E01               	movlw	1
 11915  0105C2  ECF2  F0B6         	call	_Send_Config2
 11916                           
 11917                           ;StringCommand.c: 191: Send_Config2(0b00000001, fanOFF);
 11918  0105C6  0E45               	movlw	low _fanOFF
 11919  0105C8  0101               	movlb	1	; () banked
 11920  0105CA  6F87               	movwf	Send_Config2@data& (0+255),b
 11921  0105CC  0EEE               	movlw	high _fanOFF
 11922  0105CE  0101               	movlb	1	; () banked
 11923  0105D0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11924  0105D2  0E01               	movlw	1
 11925  0105D4  ECF2  F0B6         	call	_Send_Config2
 11926                           
 11927                           ;StringCommand.c: 192: Send_Config2(0b00000001, fanOFF);
 11928  0105D8  0E45               	movlw	low _fanOFF
 11929  0105DA  0101               	movlb	1	; () banked
 11930  0105DC  6F87               	movwf	Send_Config2@data& (0+255),b
 11931  0105DE  0EEE               	movlw	high _fanOFF
 11932  0105E0  0101               	movlb	1	; () banked
 11933  0105E2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11934  0105E4  0E01               	movlw	1
 11935  0105E6  ECF2  F0B6         	call	_Send_Config2
 11936                           
 11937                           ;StringCommand.c: 193: Send_Config2(0b00000001, fanOFF);
 11938  0105EA  0E45               	movlw	low _fanOFF
 11939  0105EC  0101               	movlb	1	; () banked
 11940  0105EE  6F87               	movwf	Send_Config2@data& (0+255),b
 11941  0105F0  0EEE               	movlw	high _fanOFF
 11942  0105F2  0101               	movlb	1	; () banked
 11943  0105F4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11944  0105F6  0E01               	movlw	1
 11945  0105F8  ECF2  F0B6         	call	_Send_Config2
 11946                           
 11947                           ;StringCommand.c: 194: Send_Config2(0b00000001, fanOFF);
 11948  0105FC  0E45               	movlw	low _fanOFF
 11949  0105FE  0101               	movlb	1	; () banked
 11950  010600  6F87               	movwf	Send_Config2@data& (0+255),b
 11951  010602  0EEE               	movlw	high _fanOFF
 11952  010604  0101               	movlb	1	; () banked
 11953  010606  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11954  010608  0E01               	movlw	1
 11955  01060A  ECF2  F0B6         	call	_Send_Config2
 11956                           
 11957                           ;StringCommand.c: 195: INTCONbits.GIE = 1;
 11958  01060E  8EF2               	bsf	intcon,7,c	;volatile
 11959                           
 11960                           ;StringCommand.c: 196: UARTstring("Livingroom Fan Off");
 11961  010610  0EC7               	movlw	low STR_80
 11962  010612  0101               	movlb	1	; () banked
 11963  010614  6F87               	movwf	UARTstring@data& (0+255),b
 11964  010616  0EF7               	movlw	high STR_80
 11965  010618  0101               	movlb	1	; () banked
 11966  01061A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11967  01061C  ECEB  F0B4         	call	_UARTstring	;wreg free
 11968                           
 11969                           ;StringCommand.c: 197: LCDdisplayFeedback("LVNG Rm Lt Off");
 11970  010620  0EA4               	movlw	low STR_81
 11971  010622  0101               	movlb	1	; () banked
 11972  010624  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11973  010626  0EFB               	movlw	high STR_81
 11974  010628  0101               	movlb	1	; () banked
 11975  01062A  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11976  01062C  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 11977                           
 11978                           ;StringCommand.c: 198: }
 11979  010630  EF7C  F093         	goto	l685
 11980  010634                     l14049:
 11981                           
 11982                           ;StringCommand.c: 199: else
 11983                           ;StringCommand.c: 200: {
 11984                           ;StringCommand.c: 201: UARTstring("Livingroom Task???");
 11985  010634  0EA1               	movlw	low STR_82
 11986  010636  0101               	movlb	1	; () banked
 11987  010638  6F87               	movwf	UARTstring@data& (0+255),b
 11988  01063A  0EF7               	movlw	high STR_82
 11989  01063C  0101               	movlb	1	; () banked
 11990  01063E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11991  010640  ECEB  F0B4         	call	_UARTstring	;wreg free
 11992                           
 11993                           ;StringCommand.c: 202: LCDdisplayFeedback("LVNG Rm Task???");
 11994  010644  0E09               	movlw	low STR_83
 11995  010646  0101               	movlb	1	; () banked
 11996  010648  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11997  01064A  0EFA               	movlw	high STR_83
 11998  01064C  0101               	movlb	1	; () banked
 11999  01064E  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12000  010650  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 12001                           
 12002                           ;StringCommand.c: 203: }
 12003                           ;StringCommand.c: 204: }
 12004  010654  EF7C  F093         	goto	l685
 12005  010658                     l14051:
 12006                           
 12007                           ;StringCommand.c: 205: else
 12008                           ;StringCommand.c: 206: {
 12009                           ;StringCommand.c: 207: UARTstring("Livingroom Help Menu\r\n\n");
 12010  010658  0E2E               	movlw	low STR_84
 12011  01065A  0101               	movlb	1	; () banked
 12012  01065C  6F87               	movwf	UARTstring@data& (0+255),b
 12013  01065E  0EF6               	movlw	high STR_84
 12014  010660  0101               	movlb	1	; () banked
 12015  010662  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12016  010664  ECEB  F0B4         	call	_UARTstring	;wreg free
 12017                           
 12018                           ;StringCommand.c: 208: UARTstring("Devices:\r\n");
 12019  010668  0EB7               	movlw	low STR_61
 12020  01066A  0101               	movlb	1	; () banked
 12021  01066C  6F87               	movwf	UARTstring@data& (0+255),b
 12022  01066E  0EFD               	movlw	high STR_61
 12023  010670  0101               	movlb	1	; () banked
 12024  010672  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12025  010674  ECEB  F0B4         	call	_UARTstring	;wreg free
 12026                           
 12027                           ;StringCommand.c: 209: UARTstring("light\r\n");
 12028  010678  0E02               	movlw	low STR_86
 12029  01067A  0101               	movlb	1	; () banked
 12030  01067C  6F87               	movwf	UARTstring@data& (0+255),b
 12031  01067E  0EFF               	movlw	high STR_86
 12032  010680  0101               	movlb	1	; () banked
 12033  010682  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12034  010684  ECEB  F0B4         	call	_UARTstring	;wreg free
 12035                           
 12036                           ;StringCommand.c: 210: UARTstring("fan\r\n\n");
 12037  010688  0E52               	movlw	low STR_87
 12038  01068A  0101               	movlb	1	; () banked
 12039  01068C  6F87               	movwf	UARTstring@data& (0+255),b
 12040  01068E  0EFF               	movlw	high STR_87
 12041  010690  0101               	movlb	1	; () banked
 12042  010692  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12043  010694  ECEB  F0B4         	call	_UARTstring	;wreg free
 12044                           
 12045                           ;StringCommand.c: 211: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12046  010698  0E17               	movlw	low STR_64
 12047  01069A  0101               	movlb	1	; () banked
 12048  01069C  6F87               	movwf	UARTstring@data& (0+255),b
 12049  01069E  0EEF               	movlw	high STR_64
 12050  0106A0  0101               	movlb	1	; () banked
 12051  0106A2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12052  0106A4  ECEB  F0B4         	call	_UARTstring	;wreg free
 12053                           
 12054                           ;StringCommand.c: 212: UARTstring("i.e. Livingroom fan = On\r\n");
 12055  0106A8  0E7A               	movlw	low STR_89
 12056  0106AA  0101               	movlb	1	; () banked
 12057  0106AC  6F87               	movwf	UARTstring@data& (0+255),b
 12058  0106AE  0EF5               	movlw	high STR_89
 12059  0106B0  0101               	movlb	1	; () banked
 12060  0106B2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12061  0106B4  ECEB  F0B4         	call	_UARTstring	;wreg free
 12062                           
 12063                           ;StringCommand.c: 213: LCDdisplayFeedback("LVNG Rm Lt help");
 12064  0106B8  0E29               	movlw	low STR_90
 12065  0106BA  0101               	movlb	1	; () banked
 12066  0106BC  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12067  0106BE  0EFB               	movlw	high STR_90
 12068  0106C0  0101               	movlb	1	; () banked
 12069  0106C2  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12070  0106C4  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 12071                           
 12072                           ;StringCommand.c: 214: LCD_Scroll("LVNGroom Menu");
 12073  0106C8  0EA9               	movlw	low STR_91
 12074  0106CA  0101               	movlb	1	; () banked
 12075  0106CC  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12076  0106CE  0EFC               	movlw	high STR_91
 12077  0106D0  0101               	movlb	1	; () banked
 12078  0106D2  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12079  0106D4  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 12080                           
 12081                           ;StringCommand.c: 215: LCD_Scroll("Devices:");
 12082  0106D8  0E8F               	movlw	low STR_67
 12083  0106DA  0101               	movlb	1	; () banked
 12084  0106DC  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12085  0106DE  0EFE               	movlw	high STR_67
 12086  0106E0  0101               	movlb	1	; () banked
 12087  0106E2  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12088  0106E4  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 12089                           
 12090                           ;StringCommand.c: 216: LCD_Scroll("Light");
 12091  0106E8  0EA7               	movlw	low STR_93
 12092  0106EA  0101               	movlb	1	; () banked
 12093  0106EC  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12094  0106EE  0EFF               	movlw	high STR_93
 12095  0106F0  0101               	movlb	1	; () banked
 12096  0106F2  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12097  0106F4  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 12098                           
 12099                           ;StringCommand.c: 217: LCD_Scroll("Fan");
 12100  0106F8  0EEC               	movlw	low STR_94
 12101  0106FA  0101               	movlb	1	; () banked
 12102  0106FC  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12103  0106FE  0EFF               	movlw	high STR_94
 12104  010700  0101               	movlb	1	; () banked
 12105  010702  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12106  010704  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 12107                           
 12108                           ;StringCommand.c: 218: }
 12109                           ;StringCommand.c: 219: }
 12110  010708  EF7C  F093         	goto	l685
 12111  01070C                     l14061:
 12112                           
 12113                           ;StringCommand.c: 221: else if (StartsWith(Input, "bedroom"))
 12114  01070C  C1CA  F17C         	movff	Command@Input,StartsWith@This
 12115  010710  C1CB  F17D         	movff	Command@Input+1,StartsWith@This+1
 12116  010714  0E12               	movlw	low STR_95
 12117  010716  0101               	movlb	1	; () banked
 12118  010718  6F7E               	movwf	StartsWith@That& (0+255),b
 12119  01071A  0EFF               	movlw	high STR_95
 12120  01071C  0101               	movlb	1	; () banked
 12121  01071E  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 12122  010720  ECD5  F0B5         	call	_StartsWith	;wreg free
 12123  010724  0900               	iorlw	0
 12124  010726  B4D8               	btfsc	status,2,c
 12125  010728  D2D0               	goto	l14143
 12126                           
 12127                           ;StringCommand.c: 222: {
 12128                           ;StringCommand.c: 223: if (!StringContains(Input, "?"))
 12129  01072A  C1CA  F17C         	movff	Command@Input,StringContains@This
 12130  01072E  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 12131  010732  0E17               	movlw	low (STR_83+14)
 12132  010734  0101               	movlb	1	; () banked
 12133  010736  6F7E               	movwf	StringContains@That& (0+255),b
 12134  010738  0EFA               	movlw	high (STR_83+14)
 12135  01073A  0101               	movlb	1	; () banked
 12136  01073C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12137  01073E  EC34  F0B7         	call	_StringContains	;wreg free
 12138  010742  0900               	iorlw	0
 12139  010744  A4D8               	btfss	status,2,c
 12140  010746  D257               	goto	l14131
 12141                           
 12142                           ;StringCommand.c: 224: {
 12143                           ;StringCommand.c: 225: if (StringContains(Input, "light") || StringContains(Input, "fan"
      +                          ))
 12144  010748  C1CA  F17C         	movff	Command@Input,StringContains@This
 12145  01074C  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 12146  010750  0EAD               	movlw	low STR_97
 12147  010752  0101               	movlb	1	; () banked
 12148  010754  6F7E               	movwf	StringContains@That& (0+255),b
 12149  010756  0EFF               	movlw	high STR_97
 12150  010758  0101               	movlb	1	; () banked
 12151  01075A  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12152  01075C  EC34  F0B7         	call	_StringContains	;wreg free
 12153  010760  0900               	iorlw	0
 12154  010762  A4D8               	btfss	status,2,c
 12155  010764  D00F               	goto	l14069
 12156  010766  C1CA  F17C         	movff	Command@Input,StringContains@This
 12157  01076A  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 12158  01076E  0EF0               	movlw	low STR_98
 12159  010770  0101               	movlb	1	; () banked
 12160  010772  6F7E               	movwf	StringContains@That& (0+255),b
 12161  010774  0EFF               	movlw	high STR_98
 12162  010776  0101               	movlb	1	; () banked
 12163  010778  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12164  01077A  EC34  F0B7         	call	_StringContains	;wreg free
 12165  01077E  0900               	iorlw	0
 12166  010780  B4D8               	btfsc	status,2,c
 12167  010782  D227               	goto	l14129
 12168  010784                     l14069:
 12169                           
 12170                           ;StringCommand.c: 226: {
 12171                           ;StringCommand.c: 227: if (StringMatch(Input, "bedroomlight=on") || StringMatch(Input, "
      +                          bedroomlight=off"))
 12172  010784  C1CA  F17C         	movff	Command@Input,StringMatch@This
 12173  010788  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 12174  01078C  0E09               	movlw	low STR_99
 12175  01078E  0101               	movlb	1	; () banked
 12176  010790  6F7E               	movwf	StringMatch@That& (0+255),b
 12177  010792  0EFB               	movlw	high STR_99
 12178  010794  0101               	movlb	1	; () banked
 12179  010796  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 12180  010798  EC74  F0B7         	call	_StringMatch	;wreg free
 12181  01079C  0900               	iorlw	0
 12182  01079E  A4D8               	btfss	status,2,c
 12183  0107A0  D00F               	goto	l721
 12184  0107A2  C1CA  F17C         	movff	Command@Input,StringMatch@This
 12185  0107A6  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 12186  0107AA  0E50               	movlw	low STR_100
 12187  0107AC  0101               	movlb	1	; () banked
 12188  0107AE  6F7E               	movwf	StringMatch@That& (0+255),b
 12189  0107B0  0EF9               	movlw	high STR_100
 12190  0107B2  0101               	movlb	1	; () banked
 12191  0107B4  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 12192  0107B6  EC74  F0B7         	call	_StringMatch	;wreg free
 12193  0107BA  0900               	iorlw	0
 12194  0107BC  B4D8               	btfsc	status,2,c
 12195  0107BE  D053               	goto	l14081
 12196  0107C0                     l721:
 12197                           
 12198                           ;StringCommand.c: 228: {
 12199                           ;StringCommand.c: 229: INTCONbits.GIE = 0;
 12200  0107C0  9EF2               	bcf	intcon,7,c	;volatile
 12201                           
 12202                           ;StringCommand.c: 230: Send_Config1(0b00000001, TXdataE);
 12203  0107C2  0E71               	movlw	low _TXdataE
 12204  0107C4  0101               	movlb	1	; () banked
 12205  0107C6  6F87               	movwf	Send_Config1@data& (0+255),b
 12206  0107C8  0EEE               	movlw	high _TXdataE
 12207  0107CA  0101               	movlb	1	; () banked
 12208  0107CC  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12209  0107CE  0E01               	movlw	1
 12210  0107D0  EC20  F0B0         	call	_Send_Config1
 12211                           
 12212                           ;StringCommand.c: 231: Send_Config1(0b00000001, TXdataE);
 12213  0107D4  0E71               	movlw	low _TXdataE
 12214  0107D6  0101               	movlb	1	; () banked
 12215  0107D8  6F87               	movwf	Send_Config1@data& (0+255),b
 12216  0107DA  0EEE               	movlw	high _TXdataE
 12217  0107DC  0101               	movlb	1	; () banked
 12218  0107DE  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12219  0107E0  0E01               	movlw	1
 12220  0107E2  EC20  F0B0         	call	_Send_Config1
 12221                           
 12222                           ;StringCommand.c: 232: Send_Config1(0b00000001, TXdataE);
 12223  0107E6  0E71               	movlw	low _TXdataE
 12224  0107E8  0101               	movlb	1	; () banked
 12225  0107EA  6F87               	movwf	Send_Config1@data& (0+255),b
 12226  0107EC  0EEE               	movlw	high _TXdataE
 12227  0107EE  0101               	movlb	1	; () banked
 12228  0107F0  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12229  0107F2  0E01               	movlw	1
 12230  0107F4  EC20  F0B0         	call	_Send_Config1
 12231                           
 12232                           ;StringCommand.c: 233: Send_Config1(0b00000001, TXdataE);
 12233  0107F8  0E71               	movlw	low _TXdataE
 12234  0107FA  0101               	movlb	1	; () banked
 12235  0107FC  6F87               	movwf	Send_Config1@data& (0+255),b
 12236  0107FE  0EEE               	movlw	high _TXdataE
 12237  010800  0101               	movlb	1	; () banked
 12238  010802  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12239  010804  0E01               	movlw	1
 12240  010806  EC20  F0B0         	call	_Send_Config1
 12241                           
 12242                           ;StringCommand.c: 234: Send_Config1(0b00000001, TXdataE);
 12243  01080A  0E71               	movlw	low _TXdataE
 12244  01080C  0101               	movlb	1	; () banked
 12245  01080E  6F87               	movwf	Send_Config1@data& (0+255),b
 12246  010810  0EEE               	movlw	high _TXdataE
 12247  010812  0101               	movlb	1	; () banked
 12248  010814  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12249  010816  0E01               	movlw	1
 12250  010818  EC20  F0B0         	call	_Send_Config1
 12251                           
 12252                           ;StringCommand.c: 235: Send_Config1(0b00000001, TXdataE);
 12253  01081C  0E71               	movlw	low _TXdataE
 12254  01081E  0101               	movlb	1	; () banked
 12255  010820  6F87               	movwf	Send_Config1@data& (0+255),b
 12256  010822  0EEE               	movlw	high _TXdataE
 12257  010824  0101               	movlb	1	; () banked
 12258  010826  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12259  010828  0E01               	movlw	1
 12260  01082A  EC20  F0B0         	call	_Send_Config1
 12261                           
 12262                           ;StringCommand.c: 236: Send_Config1(0b00000001, TXdataE);
 12263  01082E  0E71               	movlw	low _TXdataE
 12264  010830  0101               	movlb	1	; () banked
 12265  010832  6F87               	movwf	Send_Config1@data& (0+255),b
 12266  010834  0EEE               	movlw	high _TXdataE
 12267  010836  0101               	movlb	1	; () banked
 12268  010838  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12269  01083A  0E01               	movlw	1
 12270  01083C  EC20  F0B0         	call	_Send_Config1
 12271                           
 12272                           ;StringCommand.c: 237: INTCONbits.GIE = 1;
 12273  010840  8EF2               	bsf	intcon,7,c	;volatile
 12274                           
 12275                           ;StringCommand.c: 238: UARTstring("Bedroom Light Toggled");
 12276  010842  0EE7               	movlw	low STR_101
 12277  010844  0101               	movlb	1	; () banked
 12278  010846  6F87               	movwf	UARTstring@data& (0+255),b
 12279  010848  0EF6               	movlw	high STR_101
 12280  01084A  0101               	movlb	1	; () banked
 12281  01084C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12282  01084E  ECEB  F0B4         	call	_UARTstring	;wreg free
 12283                           
 12284                           ;StringCommand.c: 239: LCDdisplayFeedback("Bedroom Lt TGLD");
 12285  010852  0E89               	movlw	low STR_102
 12286  010854  0101               	movlb	1	; () banked
 12287  010856  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12288  010858  0EFA               	movlw	high STR_102
 12289  01085A  0101               	movlb	1	; () banked
 12290  01085C  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12291  01085E  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 12292                           
 12293                           ;StringCommand.c: 240: }
 12294  010862  EF7C  F093         	goto	l685
 12295  010866                     l14081:
 12296                           
 12297                           ;StringCommand.c: 241: else if (StringMatch(Input, "bedroomfan=on"))
 12298  010866  C1CA  F17C         	movff	Command@Input,StringMatch@This
 12299  01086A  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 12300  01086E  0E8D               	movlw	low STR_103
 12301  010870  0101               	movlb	1	; () banked
 12302  010872  6F7E               	movwf	StringMatch@That& (0+255),b
 12303  010874  0EFC               	movlw	high STR_103
 12304  010876  0101               	movlb	1	; () banked
 12305  010878  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 12306  01087A  EC74  F0B7         	call	_StringMatch	;wreg free
 12307  01087E  0900               	iorlw	0
 12308  010880  B4D8               	btfsc	status,2,c
 12309  010882  D05C               	goto	l14093
 12310                           
 12311                           ;StringCommand.c: 242: {
 12312                           ;StringCommand.c: 243: INTCONbits.GIE = 0;
 12313  010884  9EF2               	bcf	intcon,7,c	;volatile
 12314                           
 12315                           ;StringCommand.c: 244: Send_Config2(0b00000001, AuxON);
 12316  010886  0EF5               	movlw	low _AuxON
 12317  010888  0101               	movlb	1	; () banked
 12318  01088A  6F87               	movwf	Send_Config2@data& (0+255),b
 12319  01088C  0EED               	movlw	high _AuxON
 12320  01088E  0101               	movlb	1	; () banked
 12321  010890  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12322  010892  0E01               	movlw	1
 12323  010894  ECF2  F0B6         	call	_Send_Config2
 12324                           
 12325                           ;StringCommand.c: 245: Send_Config2(0b00000001, AuxON);
 12326  010898  0EF5               	movlw	low _AuxON
 12327  01089A  0101               	movlb	1	; () banked
 12328  01089C  6F87               	movwf	Send_Config2@data& (0+255),b
 12329  01089E  0EED               	movlw	high _AuxON
 12330  0108A0  0101               	movlb	1	; () banked
 12331  0108A2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12332  0108A4  0E01               	movlw	1
 12333  0108A6  ECF2  F0B6         	call	_Send_Config2
 12334                           
 12335                           ;StringCommand.c: 246: Send_Config2(0b00000001, AuxON);
 12336  0108AA  0EF5               	movlw	low _AuxON
 12337  0108AC  0101               	movlb	1	; () banked
 12338  0108AE  6F87               	movwf	Send_Config2@data& (0+255),b
 12339  0108B0  0EED               	movlw	high _AuxON
 12340  0108B2  0101               	movlb	1	; () banked
 12341  0108B4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12342  0108B6  0E01               	movlw	1
 12343  0108B8  ECF2  F0B6         	call	_Send_Config2
 12344                           
 12345                           ;StringCommand.c: 247: Send_Config2(0b00000001, AuxON);
 12346  0108BC  0EF5               	movlw	low _AuxON
 12347  0108BE  0101               	movlb	1	; () banked
 12348  0108C0  6F87               	movwf	Send_Config2@data& (0+255),b
 12349  0108C2  0EED               	movlw	high _AuxON
 12350  0108C4  0101               	movlb	1	; () banked
 12351  0108C6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12352  0108C8  0E01               	movlw	1
 12353  0108CA  ECF2  F0B6         	call	_Send_Config2
 12354                           
 12355                           ;StringCommand.c: 248: Send_Config2(0b00000001, AuxON);
 12356  0108CE  0EF5               	movlw	low _AuxON
 12357  0108D0  0101               	movlb	1	; () banked
 12358  0108D2  6F87               	movwf	Send_Config2@data& (0+255),b
 12359  0108D4  0EED               	movlw	high _AuxON
 12360  0108D6  0101               	movlb	1	; () banked
 12361  0108D8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12362  0108DA  0E01               	movlw	1
 12363  0108DC  ECF2  F0B6         	call	_Send_Config2
 12364                           
 12365                           ;StringCommand.c: 249: Send_Config2(0b00000001, AuxON);
 12366  0108E0  0EF5               	movlw	low _AuxON
 12367  0108E2  0101               	movlb	1	; () banked
 12368  0108E4  6F87               	movwf	Send_Config2@data& (0+255),b
 12369  0108E6  0EED               	movlw	high _AuxON
 12370  0108E8  0101               	movlb	1	; () banked
 12371  0108EA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12372  0108EC  0E01               	movlw	1
 12373  0108EE  ECF2  F0B6         	call	_Send_Config2
 12374                           
 12375                           ;StringCommand.c: 250: Send_Config2(0b00000001, AuxON);
 12376  0108F2  0EF5               	movlw	low _AuxON
 12377  0108F4  0101               	movlb	1	; () banked
 12378  0108F6  6F87               	movwf	Send_Config2@data& (0+255),b
 12379  0108F8  0EED               	movlw	high _AuxON
 12380  0108FA  0101               	movlb	1	; () banked
 12381  0108FC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12382  0108FE  0E01               	movlw	1
 12383  010900  ECF2  F0B6         	call	_Send_Config2
 12384                           
 12385                           ;StringCommand.c: 251: Send_Config2(0b00000001, AuxON);
 12386  010904  0EF5               	movlw	low _AuxON
 12387  010906  0101               	movlb	1	; () banked
 12388  010908  6F87               	movwf	Send_Config2@data& (0+255),b
 12389  01090A  0EED               	movlw	high _AuxON
 12390  01090C  0101               	movlb	1	; () banked
 12391  01090E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12392  010910  0E01               	movlw	1
 12393  010912  ECF2  F0B6         	call	_Send_Config2
 12394                           
 12395                           ;StringCommand.c: 252: INTCONbits.GIE = 1;
 12396  010916  8EF2               	bsf	intcon,7,c	;volatile
 12397                           
 12398                           ;StringCommand.c: 253: UARTstring("Bedroom Fan On");
 12399  010918  0EE0               	movlw	low STR_104
 12400  01091A  0101               	movlb	1	; () banked
 12401  01091C  6F87               	movwf	UARTstring@data& (0+255),b
 12402  01091E  0EFB               	movlw	high STR_104
 12403  010920  0101               	movlb	1	; () banked
 12404  010922  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12405  010924  ECEB  F0B4         	call	_UARTstring	;wreg free
 12406                           
 12407                           ;StringCommand.c: 254: LCDdisplayFeedback("Bedroom Lt On");
 12408  010928  0E7F               	movlw	low STR_105
 12409  01092A  0101               	movlb	1	; () banked
 12410  01092C  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12411  01092E  0EFC               	movlw	high STR_105
 12412  010930  0101               	movlb	1	; () banked
 12413  010932  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12414  010934  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 12415                           
 12416                           ;StringCommand.c: 255: }
 12417  010938  EF7C  F093         	goto	l685
 12418  01093C                     l14093:
 12419                           
 12420                           ;StringCommand.c: 256: else if (StringMatch(Input, "bedroomfan=off"))
 12421  01093C  C1CA  F17C         	movff	Command@Input,StringMatch@This
 12422  010940  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 12423  010944  0EC2               	movlw	low STR_106
 12424  010946  0101               	movlb	1	; () banked
 12425  010948  6F7E               	movwf	StringMatch@That& (0+255),b
 12426  01094A  0EFB               	movlw	high STR_106
 12427  01094C  0101               	movlb	1	; () banked
 12428  01094E  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 12429  010950  EC74  F0B7         	call	_StringMatch	;wreg free
 12430  010954  0900               	iorlw	0
 12431  010956  B4D8               	btfsc	status,2,c
 12432  010958  D065               	goto	l14105
 12433                           
 12434                           ;StringCommand.c: 257: {
 12435                           ;StringCommand.c: 258: INTCONbits.GIE = 0;
 12436  01095A  9EF2               	bcf	intcon,7,c	;volatile
 12437                           
 12438                           ;StringCommand.c: 259: Send_Config2(0b00000001, AuxOFF);
 12439  01095C  0EE5               	movlw	low _AuxOFF
 12440  01095E  0101               	movlb	1	; () banked
 12441  010960  6F87               	movwf	Send_Config2@data& (0+255),b
 12442  010962  0EED               	movlw	high _AuxOFF
 12443  010964  0101               	movlb	1	; () banked
 12444  010966  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12445  010968  0E01               	movlw	1
 12446  01096A  ECF2  F0B6         	call	_Send_Config2
 12447                           
 12448                           ;StringCommand.c: 260: Send_Config2(0b00000001, AuxOFF);
 12449  01096E  0EE5               	movlw	low _AuxOFF
 12450  010970  0101               	movlb	1	; () banked
 12451  010972  6F87               	movwf	Send_Config2@data& (0+255),b
 12452  010974  0EED               	movlw	high _AuxOFF
 12453  010976  0101               	movlb	1	; () banked
 12454  010978  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12455  01097A  0E01               	movlw	1
 12456  01097C  ECF2  F0B6         	call	_Send_Config2
 12457                           
 12458                           ;StringCommand.c: 261: Send_Config2(0b00000001, AuxOFF);
 12459  010980  0EE5               	movlw	low _AuxOFF
 12460  010982  0101               	movlb	1	; () banked
 12461  010984  6F87               	movwf	Send_Config2@data& (0+255),b
 12462  010986  0EED               	movlw	high _AuxOFF
 12463  010988  0101               	movlb	1	; () banked
 12464  01098A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12465  01098C  0E01               	movlw	1
 12466  01098E  ECF2  F0B6         	call	_Send_Config2
 12467                           
 12468                           ;StringCommand.c: 262: Send_Config2(0b00000001, AuxOFF);
 12469  010992  0EE5               	movlw	low _AuxOFF
 12470  010994  0101               	movlb	1	; () banked
 12471  010996  6F87               	movwf	Send_Config2@data& (0+255),b
 12472  010998  0EED               	movlw	high _AuxOFF
 12473  01099A  0101               	movlb	1	; () banked
 12474  01099C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12475  01099E  0E01               	movlw	1
 12476  0109A0  ECF2  F0B6         	call	_Send_Config2
 12477                           
 12478                           ;StringCommand.c: 263: Send_Config2(0b00000001, AuxOFF);
 12479  0109A4  0EE5               	movlw	low _AuxOFF
 12480  0109A6  0101               	movlb	1	; () banked
 12481  0109A8  6F87               	movwf	Send_Config2@data& (0+255),b
 12482  0109AA  0EED               	movlw	high _AuxOFF
 12483  0109AC  0101               	movlb	1	; () banked
 12484  0109AE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12485  0109B0  0E01               	movlw	1
 12486  0109B2  ECF2  F0B6         	call	_Send_Config2
 12487                           
 12488                           ;StringCommand.c: 264: Send_Config2(0b00000001, AuxOFF);
 12489  0109B6  0EE5               	movlw	low _AuxOFF
 12490  0109B8  0101               	movlb	1	; () banked
 12491  0109BA  6F87               	movwf	Send_Config2@data& (0+255),b
 12492  0109BC  0EED               	movlw	high _AuxOFF
 12493  0109BE  0101               	movlb	1	; () banked
 12494  0109C0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12495  0109C2  0E01               	movlw	1
 12496  0109C4  ECF2  F0B6         	call	_Send_Config2
 12497                           
 12498                           ;StringCommand.c: 265: Send_Config2(0b00000001, AuxOFF);
 12499  0109C8  0EE5               	movlw	low _AuxOFF
 12500  0109CA  0101               	movlb	1	; () banked
 12501  0109CC  6F87               	movwf	Send_Config2@data& (0+255),b
 12502  0109CE  0EED               	movlw	high _AuxOFF
 12503  0109D0  0101               	movlb	1	; () banked
 12504  0109D2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12505  0109D4  0E01               	movlw	1
 12506  0109D6  ECF2  F0B6         	call	_Send_Config2
 12507                           
 12508                           ;StringCommand.c: 266: Send_Config2(0b00000001, AuxOFF);
 12509  0109DA  0EE5               	movlw	low _AuxOFF
 12510  0109DC  0101               	movlb	1	; () banked
 12511  0109DE  6F87               	movwf	Send_Config2@data& (0+255),b
 12512  0109E0  0EED               	movlw	high _AuxOFF
 12513  0109E2  0101               	movlb	1	; () banked
 12514  0109E4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12515  0109E6  0E01               	movlw	1
 12516  0109E8  ECF2  F0B6         	call	_Send_Config2
 12517                           
 12518                           ;StringCommand.c: 267: Send_Config2(0b00000001, AuxOFF);
 12519  0109EC  0EE5               	movlw	low _AuxOFF
 12520  0109EE  0101               	movlb	1	; () banked
 12521  0109F0  6F87               	movwf	Send_Config2@data& (0+255),b
 12522  0109F2  0EED               	movlw	high _AuxOFF
 12523  0109F4  0101               	movlb	1	; () banked
 12524  0109F6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12525  0109F8  0E01               	movlw	1
 12526  0109FA  ECF2  F0B6         	call	_Send_Config2
 12527                           
 12528                           ;StringCommand.c: 268: INTCONbits.GIE = 1;
 12529  0109FE  8EF2               	bsf	intcon,7,c	;volatile
 12530                           
 12531                           ;StringCommand.c: 269: UARTstring("Bedroom Fan Off");
 12532  010A00  0ED9               	movlw	low STR_107
 12533  010A02  0101               	movlb	1	; () banked
 12534  010A04  6F87               	movwf	UARTstring@data& (0+255),b
 12535  010A06  0EFA               	movlw	high STR_107
 12536  010A08  0101               	movlb	1	; () banked
 12537  010A0A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12538  010A0C  ECEB  F0B4         	call	_UARTstring	;wreg free
 12539                           
 12540                           ;StringCommand.c: 270: LCDdisplayFeedback("Bedroom Lt Off");
 12541  010A10  0EB3               	movlw	low STR_108
 12542  010A12  0101               	movlb	1	; () banked
 12543  010A14  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12544  010A16  0EFB               	movlw	high STR_108
 12545  010A18  0101               	movlb	1	; () banked
 12546  010A1A  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12547  010A1C  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 12548                           
 12549                           ;StringCommand.c: 271: }
 12550  010A20  EF7C  F093         	goto	l685
 12551  010A24                     l14105:
 12552                           
 12553                           ;StringCommand.c: 272: else if (StringMatch(Input, "bedroomshaker=on"))
 12554  010A24  C1CA  F17C         	movff	Command@Input,StringMatch@This
 12555  010A28  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 12556  010A2C  0E83               	movlw	low STR_109
 12557  010A2E  0101               	movlb	1	; () banked
 12558  010A30  6F7E               	movwf	StringMatch@That& (0+255),b
 12559  010A32  0EF9               	movlw	high STR_109
 12560  010A34  0101               	movlb	1	; () banked
 12561  010A36  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 12562  010A38  EC74  F0B7         	call	_StringMatch	;wreg free
 12563  010A3C  0900               	iorlw	0
 12564  010A3E  B4D8               	btfsc	status,2,c
 12565  010A40  D05C               	goto	l14117
 12566                           
 12567                           ;StringCommand.c: 273: {
 12568                           ;StringCommand.c: 274: INTCONbits.GIE = 0;
 12569  010A42  9EF2               	bcf	intcon,7,c	;volatile
 12570                           
 12571                           ;StringCommand.c: 275: Send_Config2(0b00000001, BedON);
 12572  010A44  0E15               	movlw	low _BedON
 12573  010A46  0101               	movlb	1	; () banked
 12574  010A48  6F87               	movwf	Send_Config2@data& (0+255),b
 12575  010A4A  0EEE               	movlw	high _BedON
 12576  010A4C  0101               	movlb	1	; () banked
 12577  010A4E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12578  010A50  0E01               	movlw	1
 12579  010A52  ECF2  F0B6         	call	_Send_Config2
 12580                           
 12581                           ;StringCommand.c: 276: Send_Config2(0b00000001, BedON);
 12582  010A56  0E15               	movlw	low _BedON
 12583  010A58  0101               	movlb	1	; () banked
 12584  010A5A  6F87               	movwf	Send_Config2@data& (0+255),b
 12585  010A5C  0EEE               	movlw	high _BedON
 12586  010A5E  0101               	movlb	1	; () banked
 12587  010A60  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12588  010A62  0E01               	movlw	1
 12589  010A64  ECF2  F0B6         	call	_Send_Config2
 12590                           
 12591                           ;StringCommand.c: 277: Send_Config2(0b00000001, BedON);
 12592  010A68  0E15               	movlw	low _BedON
 12593  010A6A  0101               	movlb	1	; () banked
 12594  010A6C  6F87               	movwf	Send_Config2@data& (0+255),b
 12595  010A6E  0EEE               	movlw	high _BedON
 12596  010A70  0101               	movlb	1	; () banked
 12597  010A72  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12598  010A74  0E01               	movlw	1
 12599  010A76  ECF2  F0B6         	call	_Send_Config2
 12600                           
 12601                           ;StringCommand.c: 278: Send_Config2(0b00000001, BedON);
 12602  010A7A  0E15               	movlw	low _BedON
 12603  010A7C  0101               	movlb	1	; () banked
 12604  010A7E  6F87               	movwf	Send_Config2@data& (0+255),b
 12605  010A80  0EEE               	movlw	high _BedON
 12606  010A82  0101               	movlb	1	; () banked
 12607  010A84  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12608  010A86  0E01               	movlw	1
 12609  010A88  ECF2  F0B6         	call	_Send_Config2
 12610                           
 12611                           ;StringCommand.c: 279: Send_Config2(0b00000001, BedON);
 12612  010A8C  0E15               	movlw	low _BedON
 12613  010A8E  0101               	movlb	1	; () banked
 12614  010A90  6F87               	movwf	Send_Config2@data& (0+255),b
 12615  010A92  0EEE               	movlw	high _BedON
 12616  010A94  0101               	movlb	1	; () banked
 12617  010A96  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12618  010A98  0E01               	movlw	1
 12619  010A9A  ECF2  F0B6         	call	_Send_Config2
 12620                           
 12621                           ;StringCommand.c: 280: Send_Config2(0b00000001, BedON);
 12622  010A9E  0E15               	movlw	low _BedON
 12623  010AA0  0101               	movlb	1	; () banked
 12624  010AA2  6F87               	movwf	Send_Config2@data& (0+255),b
 12625  010AA4  0EEE               	movlw	high _BedON
 12626  010AA6  0101               	movlb	1	; () banked
 12627  010AA8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12628  010AAA  0E01               	movlw	1
 12629  010AAC  ECF2  F0B6         	call	_Send_Config2
 12630                           
 12631                           ;StringCommand.c: 281: Send_Config2(0b00000001, BedON);
 12632  010AB0  0E15               	movlw	low _BedON
 12633  010AB2  0101               	movlb	1	; () banked
 12634  010AB4  6F87               	movwf	Send_Config2@data& (0+255),b
 12635  010AB6  0EEE               	movlw	high _BedON
 12636  010AB8  0101               	movlb	1	; () banked
 12637  010ABA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12638  010ABC  0E01               	movlw	1
 12639  010ABE  ECF2  F0B6         	call	_Send_Config2
 12640                           
 12641                           ;StringCommand.c: 282: Send_Config2(0b00000001, BedON);
 12642  010AC2  0E15               	movlw	low _BedON
 12643  010AC4  0101               	movlb	1	; () banked
 12644  010AC6  6F87               	movwf	Send_Config2@data& (0+255),b
 12645  010AC8  0EEE               	movlw	high _BedON
 12646  010ACA  0101               	movlb	1	; () banked
 12647  010ACC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12648  010ACE  0E01               	movlw	1
 12649  010AD0  ECF2  F0B6         	call	_Send_Config2
 12650                           
 12651                           ;StringCommand.c: 283: INTCONbits.GIE = 1;
 12652  010AD4  8EF2               	bsf	intcon,7,c	;volatile
 12653                           
 12654                           ;StringCommand.c: 284: UARTstring("Bedroom Shaker On");
 12655  010AD6  0EA4               	movlw	low STR_110
 12656  010AD8  0101               	movlb	1	; () banked
 12657  010ADA  6F87               	movwf	UARTstring@data& (0+255),b
 12658  010ADC  0EF8               	movlw	high STR_110
 12659  010ADE  0101               	movlb	1	; () banked
 12660  010AE0  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12661  010AE2  ECEB  F0B4         	call	_UARTstring	;wreg free
 12662                           
 12663                           ;StringCommand.c: 285: LCDdisplayFeedback("Bedroom SKR On");
 12664  010AE6  0ED1               	movlw	low STR_111
 12665  010AE8  0101               	movlb	1	; () banked
 12666  010AEA  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12667  010AEC  0EFB               	movlw	high STR_111
 12668  010AEE  0101               	movlb	1	; () banked
 12669  010AF0  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12670  010AF2  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 12671                           
 12672                           ;StringCommand.c: 286: }
 12673  010AF6  EF7C  F093         	goto	l685
 12674  010AFA                     l14117:
 12675                           
 12676                           ;StringCommand.c: 287: else if (StringMatch(Input, "bedroomshaker=off"))
 12677  010AFA  C1CA  F17C         	movff	Command@Input,StringMatch@This
 12678  010AFE  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 12679  010B02  0E6E               	movlw	low STR_112
 12680  010B04  0101               	movlb	1	; () banked
 12681  010B06  6F7E               	movwf	StringMatch@That& (0+255),b
 12682  010B08  0EF8               	movlw	high STR_112
 12683  010B0A  0101               	movlb	1	; () banked
 12684  010B0C  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 12685  010B0E  EC74  F0B7         	call	_StringMatch	;wreg free
 12686  010B12  0900               	iorlw	0
 12687  010B14  B4D8               	btfsc	status,2,c
 12688  010B16  EF7C  F093         	goto	l685
 12689                           
 12690                           ;StringCommand.c: 288: {
 12691                           ;StringCommand.c: 289: INTCONbits.GIE = 0;
 12692  010B1A  9EF2               	bcf	intcon,7,c	;volatile
 12693                           
 12694                           ;StringCommand.c: 290: Send_Config2(0b00000001, BedOFF);
 12695  010B1C  0E05               	movlw	low _BedOFF
 12696  010B1E  0101               	movlb	1	; () banked
 12697  010B20  6F87               	movwf	Send_Config2@data& (0+255),b
 12698  010B22  0EEE               	movlw	high _BedOFF
 12699  010B24  0101               	movlb	1	; () banked
 12700  010B26  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12701  010B28  0E01               	movlw	1
 12702  010B2A  ECF2  F0B6         	call	_Send_Config2
 12703                           
 12704                           ;StringCommand.c: 291: Send_Config2(0b00000001, BedOFF);
 12705  010B2E  0E05               	movlw	low _BedOFF
 12706  010B30  0101               	movlb	1	; () banked
 12707  010B32  6F87               	movwf	Send_Config2@data& (0+255),b
 12708  010B34  0EEE               	movlw	high _BedOFF
 12709  010B36  0101               	movlb	1	; () banked
 12710  010B38  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12711  010B3A  0E01               	movlw	1
 12712  010B3C  ECF2  F0B6         	call	_Send_Config2
 12713                           
 12714                           ;StringCommand.c: 292: Send_Config2(0b00000001, BedOFF);
 12715  010B40  0E05               	movlw	low _BedOFF
 12716  010B42  0101               	movlb	1	; () banked
 12717  010B44  6F87               	movwf	Send_Config2@data& (0+255),b
 12718  010B46  0EEE               	movlw	high _BedOFF
 12719  010B48  0101               	movlb	1	; () banked
 12720  010B4A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12721  010B4C  0E01               	movlw	1
 12722  010B4E  ECF2  F0B6         	call	_Send_Config2
 12723                           
 12724                           ;StringCommand.c: 293: Send_Config2(0b00000001, BedOFF);
 12725  010B52  0E05               	movlw	low _BedOFF
 12726  010B54  0101               	movlb	1	; () banked
 12727  010B56  6F87               	movwf	Send_Config2@data& (0+255),b
 12728  010B58  0EEE               	movlw	high _BedOFF
 12729  010B5A  0101               	movlb	1	; () banked
 12730  010B5C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12731  010B5E  0E01               	movlw	1
 12732  010B60  ECF2  F0B6         	call	_Send_Config2
 12733                           
 12734                           ;StringCommand.c: 294: Send_Config2(0b00000001, BedOFF);
 12735  010B64  0E05               	movlw	low _BedOFF
 12736  010B66  0101               	movlb	1	; () banked
 12737  010B68  6F87               	movwf	Send_Config2@data& (0+255),b
 12738  010B6A  0EEE               	movlw	high _BedOFF
 12739  010B6C  0101               	movlb	1	; () banked
 12740  010B6E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12741  010B70  0E01               	movlw	1
 12742  010B72  ECF2  F0B6         	call	_Send_Config2
 12743                           
 12744                           ;StringCommand.c: 295: Send_Config2(0b00000001, BedOFF);
 12745  010B76  0E05               	movlw	low _BedOFF
 12746  010B78  0101               	movlb	1	; () banked
 12747  010B7A  6F87               	movwf	Send_Config2@data& (0+255),b
 12748  010B7C  0EEE               	movlw	high _BedOFF
 12749  010B7E  0101               	movlb	1	; () banked
 12750  010B80  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12751  010B82  0E01               	movlw	1
 12752  010B84  ECF2  F0B6         	call	_Send_Config2
 12753                           
 12754                           ;StringCommand.c: 296: Send_Config2(0b00000001, BedOFF);
 12755  010B88  0E05               	movlw	low _BedOFF
 12756  010B8A  0101               	movlb	1	; () banked
 12757  010B8C  6F87               	movwf	Send_Config2@data& (0+255),b
 12758  010B8E  0EEE               	movlw	high _BedOFF
 12759  010B90  0101               	movlb	1	; () banked
 12760  010B92  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12761  010B94  0E01               	movlw	1
 12762  010B96  ECF2  F0B6         	call	_Send_Config2
 12763                           
 12764                           ;StringCommand.c: 297: Send_Config2(0b00000001, BedOFF);
 12765  010B9A  0E05               	movlw	low _BedOFF
 12766  010B9C  0101               	movlb	1	; () banked
 12767  010B9E  6F87               	movwf	Send_Config2@data& (0+255),b
 12768  010BA0  0EEE               	movlw	high _BedOFF
 12769  010BA2  0101               	movlb	1	; () banked
 12770  010BA4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12771  010BA6  0E01               	movlw	1
 12772  010BA8  ECF2  F0B6         	call	_Send_Config2
 12773                           
 12774                           ;StringCommand.c: 298: INTCONbits.GIE = 1;
 12775  010BAC  8EF2               	bsf	intcon,7,c	;volatile
 12776                           
 12777                           ;StringCommand.c: 299: UARTstring("Bedroom Shaker Off");
 12778  010BAE  0EDA               	movlw	low STR_113
 12779  010BB0  0101               	movlb	1	; () banked
 12780  010BB2  6F87               	movwf	UARTstring@data& (0+255),b
 12781  010BB4  0EF7               	movlw	high STR_113
 12782  010BB6  0101               	movlb	1	; () banked
 12783  010BB8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12784  010BBA  ECEB  F0B4         	call	_UARTstring	;wreg free
 12785                           
 12786                           ;StringCommand.c: 300: LCDdisplayFeedback("Bedroom SKR Off");
 12787  010BBE  0EC9               	movlw	low STR_114
 12788  010BC0  0101               	movlb	1	; () banked
 12789  010BC2  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12790  010BC4  0EFA               	movlw	high STR_114
 12791  010BC6  0101               	movlb	1	; () banked
 12792  010BC8  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12793  010BCA  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 12794                           
 12795                           ;StringCommand.c: 301: }
 12796                           ;StringCommand.c: 302: }
 12797  010BCE  EF7C  F093         	goto	l685
 12798  010BD2                     l14129:
 12799                           
 12800                           ;StringCommand.c: 303: else
 12801                           ;StringCommand.c: 304: {
 12802                           ;StringCommand.c: 305: UARTstring("Bedroom Task???");
 12803  010BD2  0E19               	movlw	low STR_115
 12804  010BD4  0101               	movlb	1	; () banked
 12805  010BD6  6F87               	movwf	UARTstring@data& (0+255),b
 12806  010BD8  0EFA               	movlw	high STR_115
 12807  010BDA  0101               	movlb	1	; () banked
 12808  010BDC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12809  010BDE  ECEB  F0B4         	call	_UARTstring	;wreg free
 12810                           
 12811                           ;StringCommand.c: 306: LCDdisplayFeedback("Bedroom Task???");
 12812  010BE2  0E19               	movlw	low STR_115
 12813  010BE4  0101               	movlb	1	; () banked
 12814  010BE6  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12815  010BE8  0EFA               	movlw	high STR_115
 12816  010BEA  0101               	movlb	1	; () banked
 12817  010BEC  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12818  010BEE  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 12819                           
 12820                           ;StringCommand.c: 307: }
 12821                           ;StringCommand.c: 308: }
 12822  010BF2  EF7C  F093         	goto	l685
 12823  010BF6                     l14131:
 12824                           
 12825                           ;StringCommand.c: 309: else
 12826                           ;StringCommand.c: 310: {
 12827                           ;StringCommand.c: 311: UARTstring("Bedroom Help Menu\r\n\n");
 12828  010BF6  0E13               	movlw	low STR_117
 12829  010BF8  0101               	movlb	1	; () banked
 12830  010BFA  6F87               	movwf	UARTstring@data& (0+255),b
 12831  010BFC  0EF7               	movlw	high STR_117
 12832  010BFE  0101               	movlb	1	; () banked
 12833  010C00  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12834  010C02  ECEB  F0B4         	call	_UARTstring	;wreg free
 12835                           
 12836                           ;StringCommand.c: 312: UARTstring("Devices:\r\n");
 12837  010C06  0EB7               	movlw	low STR_61
 12838  010C08  0101               	movlb	1	; () banked
 12839  010C0A  6F87               	movwf	UARTstring@data& (0+255),b
 12840  010C0C  0EFD               	movlw	high STR_61
 12841  010C0E  0101               	movlb	1	; () banked
 12842  010C10  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12843  010C12  ECEB  F0B4         	call	_UARTstring	;wreg free
 12844                           
 12845                           ;StringCommand.c: 313: UARTstring("light\r\n");
 12846  010C16  0E02               	movlw	low STR_86
 12847  010C18  0101               	movlb	1	; () banked
 12848  010C1A  6F87               	movwf	UARTstring@data& (0+255),b
 12849  010C1C  0EFF               	movlw	high STR_86
 12850  010C1E  0101               	movlb	1	; () banked
 12851  010C20  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12852  010C22  ECEB  F0B4         	call	_UARTstring	;wreg free
 12853                           
 12854                           ;StringCommand.c: 314: UARTstring("fan\r\n");
 12855  010C26  0E89               	movlw	low STR_120
 12856  010C28  0101               	movlb	1	; () banked
 12857  010C2A  6F87               	movwf	UARTstring@data& (0+255),b
 12858  010C2C  0EFF               	movlw	high STR_120
 12859  010C2E  0101               	movlb	1	; () banked
 12860  010C30  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12861  010C32  ECEB  F0B4         	call	_UARTstring	;wreg free
 12862                           
 12863                           ;StringCommand.c: 315: UARTstring("shaker\r\n\n");
 12864  010C36  0E04               	movlw	low STR_121
 12865  010C38  0101               	movlb	1	; () banked
 12866  010C3A  6F87               	movwf	UARTstring@data& (0+255),b
 12867  010C3C  0EFE               	movlw	high STR_121
 12868  010C3E  0101               	movlb	1	; () banked
 12869  010C40  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12870  010C42  ECEB  F0B4         	call	_UARTstring	;wreg free
 12871                           
 12872                           ;StringCommand.c: 316: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12873  010C46  0E17               	movlw	low STR_64
 12874  010C48  0101               	movlb	1	; () banked
 12875  010C4A  6F87               	movwf	UARTstring@data& (0+255),b
 12876  010C4C  0EEF               	movlw	high STR_64
 12877  010C4E  0101               	movlb	1	; () banked
 12878  010C50  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12879  010C52  ECEB  F0B4         	call	_UARTstring	;wreg free
 12880                           
 12881                           ;StringCommand.c: 317: UARTstring("i.e. Bedroom fan = On\r\n");
 12882  010C56  0E5E               	movlw	low STR_123
 12883  010C58  0101               	movlb	1	; () banked
 12884  010C5A  6F87               	movwf	UARTstring@data& (0+255),b
 12885  010C5C  0EF6               	movlw	high STR_123
 12886  010C5E  0101               	movlb	1	; () banked
 12887  010C60  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12888  010C62  ECEB  F0B4         	call	_UARTstring	;wreg free
 12889                           
 12890                           ;StringCommand.c: 318: LCDdisplayFeedback("Bedroom Help???");
 12891  010C66  0E29               	movlw	low STR_124
 12892  010C68  0101               	movlb	1	; () banked
 12893  010C6A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12894  010C6C  0EFA               	movlw	high STR_124
 12895  010C6E  0101               	movlb	1	; () banked
 12896  010C70  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12897  010C72  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 12898                           
 12899                           ;StringCommand.c: 319: LCD_Scroll("Bedroom Menu");
 12900  010C76  0E55               	movlw	low STR_125
 12901  010C78  0101               	movlb	1	; () banked
 12902  010C7A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12903  010C7C  0EFD               	movlw	high STR_125
 12904  010C7E  0101               	movlb	1	; () banked
 12905  010C80  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12906  010C82  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 12907                           
 12908                           ;StringCommand.c: 320: LCD_Scroll("Devices:");
 12909  010C86  0E8F               	movlw	low STR_67
 12910  010C88  0101               	movlb	1	; () banked
 12911  010C8A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12912  010C8C  0EFE               	movlw	high STR_67
 12913  010C8E  0101               	movlb	1	; () banked
 12914  010C90  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12915  010C92  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 12916                           
 12917                           ;StringCommand.c: 321: LCD_Scroll("Light");
 12918  010C96  0EA7               	movlw	low STR_93
 12919  010C98  0101               	movlb	1	; () banked
 12920  010C9A  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12921  010C9C  0EFF               	movlw	high STR_93
 12922  010C9E  0101               	movlb	1	; () banked
 12923  010CA0  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12924  010CA2  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 12925                           
 12926                           ;StringCommand.c: 322: LCD_Scroll("Fan");
 12927  010CA6  0EEC               	movlw	low STR_94
 12928  010CA8  0101               	movlb	1	; () banked
 12929  010CAA  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12930  010CAC  0EFF               	movlw	high STR_94
 12931  010CAE  0101               	movlb	1	; () banked
 12932  010CB0  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12933  010CB2  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 12934                           
 12935                           ;StringCommand.c: 323: LCD_Scroll("Shaker");
 12936  010CB6  0E75               	movlw	low STR_129
 12937  010CB8  0101               	movlb	1	; () banked
 12938  010CBA  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12939  010CBC  0EFF               	movlw	high STR_129
 12940  010CBE  0101               	movlb	1	; () banked
 12941  010CC0  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12942  010CC2  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 12943                           
 12944                           ;StringCommand.c: 324: }
 12945                           ;StringCommand.c: 325: }
 12946  010CC6  EF7C  F093         	goto	l685
 12947  010CCA                     l14143:
 12948                           
 12949                           ;StringCommand.c: 327: else if (StringContains(Input, "color") || StringContains(Input, 
      +                          "white") || StringContains(Input, "christmas"))
 12950  010CCA  C1CA  F17C         	movff	Command@Input,StringContains@This
 12951  010CCE  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 12952  010CD2  0EA1               	movlw	low STR_130
 12953  010CD4  0101               	movlb	1	; () banked
 12954  010CD6  6F7E               	movwf	StringContains@That& (0+255),b
 12955  010CD8  0EFF               	movlw	high STR_130
 12956  010CDA  0101               	movlb	1	; () banked
 12957  010CDC  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12958  010CDE  EC34  F0B7         	call	_StringContains	;wreg free
 12959  010CE2  0900               	iorlw	0
 12960  010CE4  A4D8               	btfss	status,2,c
 12961  010CE6  D01E               	goto	l14149
 12962  010CE8  C1CA  F17C         	movff	Command@Input,StringContains@This
 12963  010CEC  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 12964  010CF0  0E9B               	movlw	low STR_131
 12965  010CF2  0101               	movlb	1	; () banked
 12966  010CF4  6F7E               	movwf	StringContains@That& (0+255),b
 12967  010CF6  0EFF               	movlw	high STR_131
 12968  010CF8  0101               	movlb	1	; () banked
 12969  010CFA  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12970  010CFC  EC34  F0B7         	call	_StringContains	;wreg free
 12971  010D00  0900               	iorlw	0
 12972  010D02  A4D8               	btfss	status,2,c
 12973  010D04  D00F               	goto	l14149
 12974  010D06  C1CA  F17C         	movff	Command@Input,StringContains@This
 12975  010D0A  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 12976  010D0E  0E54               	movlw	low STR_132
 12977  010D10  0101               	movlb	1	; () banked
 12978  010D12  6F7E               	movwf	StringContains@That& (0+255),b
 12979  010D14  0EFE               	movlw	high STR_132
 12980  010D16  0101               	movlb	1	; () banked
 12981  010D18  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12982  010D1A  EC34  F0B7         	call	_StringContains	;wreg free
 12983  010D1E  0900               	iorlw	0
 12984  010D20  B4D8               	btfsc	status,2,c
 12985  010D22  D1C6               	goto	l14205
 12986  010D24                     l14149:
 12987                           
 12988                           ;StringCommand.c: 328: {
 12989                           ;StringCommand.c: 329: if (!StringContains(Input, "?"))
 12990  010D24  C1CA  F17C         	movff	Command@Input,StringContains@This
 12991  010D28  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 12992  010D2C  0E17               	movlw	low (STR_83+14)
 12993  010D2E  0101               	movlb	1	; () banked
 12994  010D30  6F7E               	movwf	StringContains@That& (0+255),b
 12995  010D32  0EFA               	movlw	high (STR_83+14)
 12996  010D34  0101               	movlb	1	; () banked
 12997  010D36  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12998  010D38  EC34  F0B7         	call	_StringContains	;wreg free
 12999  010D3C  0900               	iorlw	0
 13000  010D3E  A4D8               	btfss	status,2,c
 13001  010D40  D165               	goto	l14195
 13002                           
 13003                           ;StringCommand.c: 330: {
 13004                           ;StringCommand.c: 331: if (StringContains(Input, "color") && StringContains(Input, "="))
 13005  010D42  C1CA  F17C         	movff	Command@Input,StringContains@This
 13006  010D46  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 13007  010D4A  0EA1               	movlw	low STR_130
 13008  010D4C  0101               	movlb	1	; () banked
 13009  010D4E  6F7E               	movwf	StringContains@That& (0+255),b
 13010  010D50  0EFF               	movlw	high STR_130
 13011  010D52  0101               	movlb	1	; () banked
 13012  010D54  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13013  010D56  EC34  F0B7         	call	_StringContains	;wreg free
 13014  010D5A  0900               	iorlw	0
 13015  010D5C  B4D8               	btfsc	status,2,c
 13016  010D5E  D062               	goto	l14165
 13017  010D60  C1CA  F17C         	movff	Command@Input,StringContains@This
 13018  010D64  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 13019  010D68  0E05               	movlw	low (STR_201+11)
 13020  010D6A  0101               	movlb	1	; () banked
 13021  010D6C  6F7E               	movwf	StringContains@That& (0+255),b
 13022  010D6E  0EFD               	movlw	high (STR_201+11)
 13023  010D70  0101               	movlb	1	; () banked
 13024  010D72  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13025  010D74  EC34  F0B7         	call	_StringContains	;wreg free
 13026  010D78  0900               	iorlw	0
 13027  010D7A  B4D8               	btfsc	status,2,c
 13028  010D7C  D053               	goto	l14165
 13029                           
 13030                           ;StringCommand.c: 332: {
 13031                           ;StringCommand.c: 333: INTCONbits.GIE = 0;
 13032  010D7E  9EF2               	bcf	intcon,7,c	;volatile
 13033                           
 13034                           ;StringCommand.c: 334: Send_Config1(0b00000001, TXdataF);
 13035  010D80  0E7D               	movlw	low _TXdataF
 13036  010D82  0101               	movlb	1	; () banked
 13037  010D84  6F87               	movwf	Send_Config1@data& (0+255),b
 13038  010D86  0EEE               	movlw	high _TXdataF
 13039  010D88  0101               	movlb	1	; () banked
 13040  010D8A  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 13041  010D8C  0E01               	movlw	1
 13042  010D8E  EC20  F0B0         	call	_Send_Config1
 13043                           
 13044                           ;StringCommand.c: 335: Send_Config1(0b00000001, TXdataF);
 13045  010D92  0E7D               	movlw	low _TXdataF
 13046  010D94  0101               	movlb	1	; () banked
 13047  010D96  6F87               	movwf	Send_Config1@data& (0+255),b
 13048  010D98  0EEE               	movlw	high _TXdataF
 13049  010D9A  0101               	movlb	1	; () banked
 13050  010D9C  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 13051  010D9E  0E01               	movlw	1
 13052  010DA0  EC20  F0B0         	call	_Send_Config1
 13053                           
 13054                           ;StringCommand.c: 336: Send_Config1(0b00000001, TXdataF);
 13055  010DA4  0E7D               	movlw	low _TXdataF
 13056  010DA6  0101               	movlb	1	; () banked
 13057  010DA8  6F87               	movwf	Send_Config1@data& (0+255),b
 13058  010DAA  0EEE               	movlw	high _TXdataF
 13059  010DAC  0101               	movlb	1	; () banked
 13060  010DAE  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 13061  010DB0  0E01               	movlw	1
 13062  010DB2  EC20  F0B0         	call	_Send_Config1
 13063                           
 13064                           ;StringCommand.c: 337: Send_Config1(0b00000001, TXdataF);
 13065  010DB6  0E7D               	movlw	low _TXdataF
 13066  010DB8  0101               	movlb	1	; () banked
 13067  010DBA  6F87               	movwf	Send_Config1@data& (0+255),b
 13068  010DBC  0EEE               	movlw	high _TXdataF
 13069  010DBE  0101               	movlb	1	; () banked
 13070  010DC0  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 13071  010DC2  0E01               	movlw	1
 13072  010DC4  EC20  F0B0         	call	_Send_Config1
 13073                           
 13074                           ;StringCommand.c: 338: Send_Config1(0b00000001, TXdataF);
 13075  010DC8  0E7D               	movlw	low _TXdataF
 13076  010DCA  0101               	movlb	1	; () banked
 13077  010DCC  6F87               	movwf	Send_Config1@data& (0+255),b
 13078  010DCE  0EEE               	movlw	high _TXdataF
 13079  010DD0  0101               	movlb	1	; () banked
 13080  010DD2  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 13081  010DD4  0E01               	movlw	1
 13082  010DD6  EC20  F0B0         	call	_Send_Config1
 13083                           
 13084                           ;StringCommand.c: 339: Send_Config1(0b00000001, TXdataF);
 13085  010DDA  0E7D               	movlw	low _TXdataF
 13086  010DDC  0101               	movlb	1	; () banked
 13087  010DDE  6F87               	movwf	Send_Config1@data& (0+255),b
 13088  010DE0  0EEE               	movlw	high _TXdataF
 13089  010DE2  0101               	movlb	1	; () banked
 13090  010DE4  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 13091  010DE6  0E01               	movlw	1
 13092  010DE8  EC20  F0B0         	call	_Send_Config1
 13093                           
 13094                           ;StringCommand.c: 340: Send_Config1(0b00000001, TXdataF);
 13095  010DEC  0E7D               	movlw	low _TXdataF
 13096  010DEE  0101               	movlb	1	; () banked
 13097  010DF0  6F87               	movwf	Send_Config1@data& (0+255),b
 13098  010DF2  0EEE               	movlw	high _TXdataF
 13099  010DF4  0101               	movlb	1	; () banked
 13100  010DF6  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 13101  010DF8  0E01               	movlw	1
 13102  010DFA  EC20  F0B0         	call	_Send_Config1
 13103                           
 13104                           ;StringCommand.c: 341: INTCONbits.GIE = 1;
 13105  010DFE  8EF2               	bsf	intcon,7,c	;volatile
 13106                           
 13107                           ;StringCommand.c: 342: UARTstring("Christmas Tree Colored Lights Toggled");
 13108  010E00  0E5A               	movlw	low STR_136
 13109  010E02  0101               	movlb	1	; () banked
 13110  010E04  6F87               	movwf	UARTstring@data& (0+255),b
 13111  010E06  0EF2               	movlw	high STR_136
 13112  010E08  0101               	movlb	1	; () banked
 13113  010E0A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13114  010E0C  ECEB  F0B4         	call	_UARTstring	;wreg free
 13115                           
 13116                           ;StringCommand.c: 343: LCDdisplayFeedback("XMAS Color TGLD");
 13117  010E10  0E69               	movlw	low STR_137
 13118  010E12  0101               	movlb	1	; () banked
 13119  010E14  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13120  010E16  0EFA               	movlw	high STR_137
 13121  010E18  0101               	movlb	1	; () banked
 13122  010E1A  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13123  010E1C  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 13124                           
 13125                           ;StringCommand.c: 344: }
 13126  010E20  EF7C  F093         	goto	l685
 13127  010E24                     l14165:
 13128                           
 13129                           ;StringCommand.c: 345: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=on"))
 13130  010E24  C1CA  F17C         	movff	Command@Input,StringContains@This
 13131  010E28  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 13132  010E2C  0E9B               	movlw	low STR_131
 13133  010E2E  0101               	movlb	1	; () banked
 13134  010E30  6F7E               	movwf	StringContains@That& (0+255),b
 13135  010E32  0EFF               	movlw	high STR_131
 13136  010E34  0101               	movlb	1	; () banked
 13137  010E36  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13138  010E38  EC34  F0B7         	call	_StringContains	;wreg free
 13139  010E3C  0900               	iorlw	0
 13140  010E3E  B4D8               	btfsc	status,2,c
 13141  010E40  D062               	goto	l14179
 13142  010E42  C1CA  F17C         	movff	Command@Input,StringContains@This
 13143  010E46  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 13144  010E4A  0E2E               	movlw	low (STR_43+4)
 13145  010E4C  0101               	movlb	1	; () banked
 13146  010E4E  6F7E               	movwf	StringContains@That& (0+255),b
 13147  010E50  0EFF               	movlw	high (STR_43+4)
 13148  010E52  0101               	movlb	1	; () banked
 13149  010E54  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13150  010E56  EC34  F0B7         	call	_StringContains	;wreg free
 13151  010E5A  0900               	iorlw	0
 13152  010E5C  B4D8               	btfsc	status,2,c
 13153  010E5E  D053               	goto	l14179
 13154                           
 13155                           ;StringCommand.c: 346: {
 13156                           ;StringCommand.c: 347: INTCONbits.GIE = 0;
 13157  010E60  9EF2               	bcf	intcon,7,c	;volatile
 13158                           
 13159                           ;StringCommand.c: 348: Send_Config2(0b00000001, Aux2ON);
 13160  010E62  0ED5               	movlw	low _Aux2ON
 13161  010E64  0101               	movlb	1	; () banked
 13162  010E66  6F87               	movwf	Send_Config2@data& (0+255),b
 13163  010E68  0EED               	movlw	high _Aux2ON
 13164  010E6A  0101               	movlb	1	; () banked
 13165  010E6C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13166  010E6E  0E01               	movlw	1
 13167  010E70  ECF2  F0B6         	call	_Send_Config2
 13168                           
 13169                           ;StringCommand.c: 349: Send_Config2(0b00000001, Aux2ON);
 13170  010E74  0ED5               	movlw	low _Aux2ON
 13171  010E76  0101               	movlb	1	; () banked
 13172  010E78  6F87               	movwf	Send_Config2@data& (0+255),b
 13173  010E7A  0EED               	movlw	high _Aux2ON
 13174  010E7C  0101               	movlb	1	; () banked
 13175  010E7E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13176  010E80  0E01               	movlw	1
 13177  010E82  ECF2  F0B6         	call	_Send_Config2
 13178                           
 13179                           ;StringCommand.c: 350: Send_Config2(0b00000001, Aux2ON);
 13180  010E86  0ED5               	movlw	low _Aux2ON
 13181  010E88  0101               	movlb	1	; () banked
 13182  010E8A  6F87               	movwf	Send_Config2@data& (0+255),b
 13183  010E8C  0EED               	movlw	high _Aux2ON
 13184  010E8E  0101               	movlb	1	; () banked
 13185  010E90  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13186  010E92  0E01               	movlw	1
 13187  010E94  ECF2  F0B6         	call	_Send_Config2
 13188                           
 13189                           ;StringCommand.c: 351: Send_Config2(0b00000001, Aux2ON);
 13190  010E98  0ED5               	movlw	low _Aux2ON
 13191  010E9A  0101               	movlb	1	; () banked
 13192  010E9C  6F87               	movwf	Send_Config2@data& (0+255),b
 13193  010E9E  0EED               	movlw	high _Aux2ON
 13194  010EA0  0101               	movlb	1	; () banked
 13195  010EA2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13196  010EA4  0E01               	movlw	1
 13197  010EA6  ECF2  F0B6         	call	_Send_Config2
 13198                           
 13199                           ;StringCommand.c: 352: Send_Config2(0b00000001, Aux2ON);
 13200  010EAA  0ED5               	movlw	low _Aux2ON
 13201  010EAC  0101               	movlb	1	; () banked
 13202  010EAE  6F87               	movwf	Send_Config2@data& (0+255),b
 13203  010EB0  0EED               	movlw	high _Aux2ON
 13204  010EB2  0101               	movlb	1	; () banked
 13205  010EB4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13206  010EB6  0E01               	movlw	1
 13207  010EB8  ECF2  F0B6         	call	_Send_Config2
 13208                           
 13209                           ;StringCommand.c: 353: Send_Config2(0b00000001, Aux2ON);
 13210  010EBC  0ED5               	movlw	low _Aux2ON
 13211  010EBE  0101               	movlb	1	; () banked
 13212  010EC0  6F87               	movwf	Send_Config2@data& (0+255),b
 13213  010EC2  0EED               	movlw	high _Aux2ON
 13214  010EC4  0101               	movlb	1	; () banked
 13215  010EC6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13216  010EC8  0E01               	movlw	1
 13217  010ECA  ECF2  F0B6         	call	_Send_Config2
 13218                           
 13219                           ;StringCommand.c: 354: Send_Config2(0b00000001, Aux2ON);
 13220  010ECE  0ED5               	movlw	low _Aux2ON
 13221  010ED0  0101               	movlb	1	; () banked
 13222  010ED2  6F87               	movwf	Send_Config2@data& (0+255),b
 13223  010ED4  0EED               	movlw	high _Aux2ON
 13224  010ED6  0101               	movlb	1	; () banked
 13225  010ED8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13226  010EDA  0E01               	movlw	1
 13227  010EDC  ECF2  F0B6         	call	_Send_Config2
 13228                           
 13229                           ;StringCommand.c: 355: INTCONbits.GIE = 1;
 13230  010EE0  8EF2               	bsf	intcon,7,c	;volatile
 13231                           
 13232                           ;StringCommand.c: 356: UARTstring("Christmas Tree White Lights On");
 13233  010EE2  0E3F               	movlw	low STR_140
 13234  010EE4  0101               	movlb	1	; () banked
 13235  010EE6  6F87               	movwf	UARTstring@data& (0+255),b
 13236  010EE8  0EF4               	movlw	high STR_140
 13237  010EEA  0101               	movlb	1	; () banked
 13238  010EEC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13239  010EEE  ECEB  F0B4         	call	_UARTstring	;wreg free
 13240                           
 13241                           ;StringCommand.c: 357: LCDdisplayFeedback("XMAS White On");
 13242  010EF2  0E63               	movlw	low STR_141
 13243  010EF4  0101               	movlb	1	; () banked
 13244  010EF6  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13245  010EF8  0EFC               	movlw	high STR_141
 13246  010EFA  0101               	movlb	1	; () banked
 13247  010EFC  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13248  010EFE  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 13249                           
 13250                           ;StringCommand.c: 358: }
 13251  010F02  EF7C  F093         	goto	l685
 13252  010F06                     l14179:
 13253                           
 13254                           ;StringCommand.c: 359: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=off"))
 13255  010F06  C1CA  F17C         	movff	Command@Input,StringContains@This
 13256  010F0A  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 13257  010F0E  0E9B               	movlw	low STR_131
 13258  010F10  0101               	movlb	1	; () banked
 13259  010F12  6F7E               	movwf	StringContains@That& (0+255),b
 13260  010F14  0EFF               	movlw	high STR_131
 13261  010F16  0101               	movlb	1	; () banked
 13262  010F18  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13263  010F1A  EC34  F0B7         	call	_StringContains	;wreg free
 13264  010F1E  0900               	iorlw	0
 13265  010F20  B4D8               	btfsc	status,2,c
 13266  010F22  D062               	goto	l14193
 13267  010F24  C1CA  F17C         	movff	Command@Input,StringContains@This
 13268  010F28  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 13269  010F2C  0EB7               	movlw	low (STR_46+4)
 13270  010F2E  0101               	movlb	1	; () banked
 13271  010F30  6F7E               	movwf	StringContains@That& (0+255),b
 13272  010F32  0EFE               	movlw	high (STR_46+4)
 13273  010F34  0101               	movlb	1	; () banked
 13274  010F36  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13275  010F38  EC34  F0B7         	call	_StringContains	;wreg free
 13276  010F3C  0900               	iorlw	0
 13277  010F3E  B4D8               	btfsc	status,2,c
 13278  010F40  D053               	goto	l14193
 13279                           
 13280                           ;StringCommand.c: 360: {
 13281                           ;StringCommand.c: 361: INTCONbits.GIE = 0;
 13282  010F42  9EF2               	bcf	intcon,7,c	;volatile
 13283                           
 13284                           ;StringCommand.c: 362: Send_Config2(0b00000001, Aux2OFF);
 13285  010F44  0EC5               	movlw	low _Aux2OFF
 13286  010F46  0101               	movlb	1	; () banked
 13287  010F48  6F87               	movwf	Send_Config2@data& (0+255),b
 13288  010F4A  0EED               	movlw	high _Aux2OFF
 13289  010F4C  0101               	movlb	1	; () banked
 13290  010F4E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13291  010F50  0E01               	movlw	1
 13292  010F52  ECF2  F0B6         	call	_Send_Config2
 13293                           
 13294                           ;StringCommand.c: 363: Send_Config2(0b00000001, Aux2OFF);
 13295  010F56  0EC5               	movlw	low _Aux2OFF
 13296  010F58  0101               	movlb	1	; () banked
 13297  010F5A  6F87               	movwf	Send_Config2@data& (0+255),b
 13298  010F5C  0EED               	movlw	high _Aux2OFF
 13299  010F5E  0101               	movlb	1	; () banked
 13300  010F60  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13301  010F62  0E01               	movlw	1
 13302  010F64  ECF2  F0B6         	call	_Send_Config2
 13303                           
 13304                           ;StringCommand.c: 364: Send_Config2(0b00000001, Aux2OFF);
 13305  010F68  0EC5               	movlw	low _Aux2OFF
 13306  010F6A  0101               	movlb	1	; () banked
 13307  010F6C  6F87               	movwf	Send_Config2@data& (0+255),b
 13308  010F6E  0EED               	movlw	high _Aux2OFF
 13309  010F70  0101               	movlb	1	; () banked
 13310  010F72  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13311  010F74  0E01               	movlw	1
 13312  010F76  ECF2  F0B6         	call	_Send_Config2
 13313                           
 13314                           ;StringCommand.c: 365: Send_Config2(0b00000001, Aux2OFF);
 13315  010F7A  0EC5               	movlw	low _Aux2OFF
 13316  010F7C  0101               	movlb	1	; () banked
 13317  010F7E  6F87               	movwf	Send_Config2@data& (0+255),b
 13318  010F80  0EED               	movlw	high _Aux2OFF
 13319  010F82  0101               	movlb	1	; () banked
 13320  010F84  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13321  010F86  0E01               	movlw	1
 13322  010F88  ECF2  F0B6         	call	_Send_Config2
 13323                           
 13324                           ;StringCommand.c: 366: Send_Config2(0b00000001, Aux2OFF);
 13325  010F8C  0EC5               	movlw	low _Aux2OFF
 13326  010F8E  0101               	movlb	1	; () banked
 13327  010F90  6F87               	movwf	Send_Config2@data& (0+255),b
 13328  010F92  0EED               	movlw	high _Aux2OFF
 13329  010F94  0101               	movlb	1	; () banked
 13330  010F96  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13331  010F98  0E01               	movlw	1
 13332  010F9A  ECF2  F0B6         	call	_Send_Config2
 13333                           
 13334                           ;StringCommand.c: 367: Send_Config2(0b00000001, Aux2OFF);
 13335  010F9E  0EC5               	movlw	low _Aux2OFF
 13336  010FA0  0101               	movlb	1	; () banked
 13337  010FA2  6F87               	movwf	Send_Config2@data& (0+255),b
 13338  010FA4  0EED               	movlw	high _Aux2OFF
 13339  010FA6  0101               	movlb	1	; () banked
 13340  010FA8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13341  010FAA  0E01               	movlw	1
 13342  010FAC  ECF2  F0B6         	call	_Send_Config2
 13343                           
 13344                           ;StringCommand.c: 368: Send_Config2(0b00000001, Aux2OFF);
 13345  010FB0  0EC5               	movlw	low _Aux2OFF
 13346  010FB2  0101               	movlb	1	; () banked
 13347  010FB4  6F87               	movwf	Send_Config2@data& (0+255),b
 13348  010FB6  0EED               	movlw	high _Aux2OFF
 13349  010FB8  0101               	movlb	1	; () banked
 13350  010FBA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 13351  010FBC  0E01               	movlw	1
 13352  010FBE  ECF2  F0B6         	call	_Send_Config2
 13353                           
 13354                           ;StringCommand.c: 369: INTCONbits.GIE = 1;
 13355  010FC2  8EF2               	bsf	intcon,7,c	;volatile
 13356                           
 13357                           ;StringCommand.c: 370: UARTstring("Christmas Tree White Lights Off");
 13358  010FC4  0E1F               	movlw	low STR_144
 13359  010FC6  0101               	movlb	1	; () banked
 13360  010FC8  6F87               	movwf	UARTstring@data& (0+255),b
 13361  010FCA  0EF4               	movlw	high STR_144
 13362  010FCC  0101               	movlb	1	; () banked
 13363  010FCE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13364  010FD0  ECEB  F0B4         	call	_UARTstring	;wreg free
 13365                           
 13366                           ;StringCommand.c: 371: LCDdisplayFeedback("XMAS White Off");
 13367  010FD4  0E95               	movlw	low STR_145
 13368  010FD6  0101               	movlb	1	; () banked
 13369  010FD8  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13370  010FDA  0EFB               	movlw	high STR_145
 13371  010FDC  0101               	movlb	1	; () banked
 13372  010FDE  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13373  010FE0  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 13374                           
 13375                           ;StringCommand.c: 372: }
 13376  010FE4  EF7C  F093         	goto	l685
 13377  010FE8                     l14193:
 13378                           
 13379                           ;StringCommand.c: 373: else
 13380                           ;StringCommand.c: 374: {
 13381                           ;StringCommand.c: 375: UARTstring("Christmas What???");
 13382  010FE8  0E4A               	movlw	low STR_146
 13383  010FEA  0101               	movlb	1	; () banked
 13384  010FEC  6F87               	movwf	UARTstring@data& (0+255),b
 13385  010FEE  0EF8               	movlw	high STR_146
 13386  010FF0  0101               	movlb	1	; () banked
 13387  010FF2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13388  010FF4  ECEB  F0B4         	call	_UARTstring	;wreg free
 13389                           
 13390                           ;StringCommand.c: 376: LCDdisplayFeedback("XMAS What???");
 13391  010FF8  0E07               	movlw	low STR_147
 13392  010FFA  0101               	movlb	1	; () banked
 13393  010FFC  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13394  010FFE  0EFD               	movlw	high STR_147
 13395  011000  0101               	movlb	1	; () banked
 13396  011002  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13397  011004  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 13398                           
 13399                           ;StringCommand.c: 377: }
 13400                           ;StringCommand.c: 378: }
 13401  011008  EF7C  F093         	goto	l685
 13402  01100C                     l14195:
 13403                           
 13404                           ;StringCommand.c: 379: else
 13405                           ;StringCommand.c: 380: {
 13406                           ;StringCommand.c: 381: UARTstring("Christmas tree Help Menu\r\n\n");
 13407  01100C  0ED3               	movlw	low STR_148
 13408  01100E  0101               	movlb	1	; () banked
 13409  011010  6F87               	movwf	UARTstring@data& (0+255),b
 13410  011012  0EF4               	movlw	high STR_148
 13411  011014  0101               	movlb	1	; () banked
 13412  011016  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13413  011018  ECEB  F0B4         	call	_UARTstring	;wreg free
 13414                           
 13415                           ;StringCommand.c: 382: UARTstring("Devices:\r\n");
 13416  01101C  0EB7               	movlw	low STR_61
 13417  01101E  0101               	movlb	1	; () banked
 13418  011020  6F87               	movwf	UARTstring@data& (0+255),b
 13419  011022  0EFD               	movlw	high STR_61
 13420  011024  0101               	movlb	1	; () banked
 13421  011026  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13422  011028  ECEB  F0B4         	call	_UARTstring	;wreg free
 13423                           
 13424                           ;StringCommand.c: 383: UARTstring("white lights\r\n");
 13425  01102C  0E68               	movlw	low STR_150
 13426  01102E  0101               	movlb	1	; () banked
 13427  011030  6F87               	movwf	UARTstring@data& (0+255),b
 13428  011032  0EFB               	movlw	high STR_150
 13429  011034  0101               	movlb	1	; () banked
 13430  011036  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13431  011038  ECEB  F0B4         	call	_UARTstring	;wreg free
 13432                           
 13433                           ;StringCommand.c: 384: UARTstring("colored lights\r\n\n");
 13434  01103C  0E26               	movlw	low STR_151
 13435  01103E  0101               	movlb	1	; () banked
 13436  011040  6F87               	movwf	UARTstring@data& (0+255),b
 13437  011042  0EF8               	movlw	high STR_151
 13438  011044  0101               	movlb	1	; () banked
 13439  011046  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13440  011048  ECEB  F0B4         	call	_UARTstring	;wreg free
 13441                           
 13442                           ;StringCommand.c: 385: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 13443  01104C  0E17               	movlw	low STR_64
 13444  01104E  0101               	movlb	1	; () banked
 13445  011050  6F87               	movwf	UARTstring@data& (0+255),b
 13446  011052  0EEF               	movlw	high STR_64
 13447  011054  0101               	movlb	1	; () banked
 13448  011056  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13449  011058  ECEB  F0B4         	call	_UARTstring	;wreg free
 13450                           
 13451                           ;StringCommand.c: 386: UARTstring("i.e. Christmas Colored lights = On\r\n");
 13452  01105C  0EA6               	movlw	low STR_153
 13453  01105E  0101               	movlb	1	; () banked
 13454  011060  6F87               	movwf	UARTstring@data& (0+255),b
 13455  011062  0EF2               	movlw	high STR_153
 13456  011064  0101               	movlb	1	; () banked
 13457  011066  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13458  011068  ECEB  F0B4         	call	_UARTstring	;wreg free
 13459                           
 13460                           ;StringCommand.c: 387: LCD_Scroll("XMAS Menu");
 13461  01106C  0E5E               	movlw	low STR_154
 13462  01106E  0101               	movlb	1	; () banked
 13463  011070  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13464  011072  0EFE               	movlw	high STR_154
 13465  011074  0101               	movlb	1	; () banked
 13466  011076  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13467  011078  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 13468                           
 13469                           ;StringCommand.c: 388: LCD_Scroll("Devices:");
 13470  01107C  0E8F               	movlw	low STR_67
 13471  01107E  0101               	movlb	1	; () banked
 13472  011080  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13473  011082  0EFE               	movlw	high STR_67
 13474  011084  0101               	movlb	1	; () banked
 13475  011086  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13476  011088  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 13477                           
 13478                           ;StringCommand.c: 389: LCD_Scroll("white");
 13479  01108C  0E9B               	movlw	low STR_131
 13480  01108E  0101               	movlb	1	; () banked
 13481  011090  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13482  011092  0EFF               	movlw	high STR_131
 13483  011094  0101               	movlb	1	; () banked
 13484  011096  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13485  011098  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 13486                           
 13487                           ;StringCommand.c: 390: LCD_Scroll("color");
 13488  01109C  0EA1               	movlw	low STR_130
 13489  01109E  0101               	movlb	1	; () banked
 13490  0110A0  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13491  0110A2  0EFF               	movlw	high STR_130
 13492  0110A4  0101               	movlb	1	; () banked
 13493  0110A6  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13494  0110A8  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 13495                           
 13496                           ;StringCommand.c: 391: }
 13497                           ;StringCommand.c: 392: }
 13498  0110AC  EF7C  F093         	goto	l685
 13499  0110B0                     l14205:
 13500                           
 13501                           ;StringCommand.c: 394: else if (StartsWith(Input, "red"))
 13502  0110B0  C1CA  F17C         	movff	Command@Input,StartsWith@This
 13503  0110B4  C1CB  F17D         	movff	Command@Input+1,StartsWith@This+1
 13504  0110B8  0EB2               	movlw	low (STR_206+25)
 13505  0110BA  0101               	movlb	1	; () banked
 13506  0110BC  6F7E               	movwf	StartsWith@That& (0+255),b
 13507  0110BE  0EF4               	movlw	high (STR_206+25)
 13508  0110C0  0101               	movlb	1	; () banked
 13509  0110C2  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 13510  0110C4  ECD5  F0B5         	call	_StartsWith	;wreg free
 13511  0110C8  0900               	iorlw	0
 13512  0110CA  B4D8               	btfsc	status,2,c
 13513  0110CC  D13C               	goto	l14257
 13514                           
 13515                           ;StringCommand.c: 395: {
 13516                           ;StringCommand.c: 396: if (!StringContains(Input, "?"))
 13517  0110CE  C1CA  F17C         	movff	Command@Input,StringContains@This
 13518  0110D2  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 13519  0110D6  0E17               	movlw	low (STR_83+14)
 13520  0110D8  0101               	movlb	1	; () banked
 13521  0110DA  6F7E               	movwf	StringContains@That& (0+255),b
 13522  0110DC  0EFA               	movlw	high (STR_83+14)
 13523  0110DE  0101               	movlb	1	; () banked
 13524  0110E0  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13525  0110E2  EC34  F0B7         	call	_StringContains	;wreg free
 13526  0110E6  0900               	iorlw	0
 13527  0110E8  A4D8               	btfss	status,2,c
 13528  0110EA  D0FB               	goto	l14249
 13529                           
 13530                           ;StringCommand.c: 397: {
 13531                           ;StringCommand.c: 398: if (StartsWith(Input, "redled") || StartsWith(Input, "redledbrigh
      +                          tness"))
 13532  0110EC  C1CA  F17C         	movff	Command@Input,StartsWith@This
 13533  0110F0  C1CB  F17D         	movff	Command@Input+1,StartsWith@This+1
 13534  0110F4  0E6E               	movlw	low STR_160
 13535  0110F6  0101               	movlb	1	; () banked
 13536  0110F8  6F7E               	movwf	StartsWith@That& (0+255),b
 13537  0110FA  0EFF               	movlw	high STR_160
 13538  0110FC  0101               	movlb	1	; () banked
 13539  0110FE  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 13540  011100  ECD5  F0B5         	call	_StartsWith	;wreg free
 13541  011104  0900               	iorlw	0
 13542  011106  A4D8               	btfss	status,2,c
 13543  011108  D00F               	goto	l14213
 13544  01110A  C1CA  F17C         	movff	Command@Input,StartsWith@This
 13545  01110E  C1CB  F17D         	movff	Command@Input+1,StartsWith@This+1
 13546  011112  0EA5               	movlw	low STR_161
 13547  011114  0101               	movlb	1	; () banked
 13548  011116  6F7E               	movwf	StartsWith@That& (0+255),b
 13549  011118  0EF9               	movlw	high STR_161
 13550  01111A  0101               	movlb	1	; () banked
 13551  01111C  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 13552  01111E  ECD5  F0B5         	call	_StartsWith	;wreg free
 13553  011122  0900               	iorlw	0
 13554  011124  B4D8               	btfsc	status,2,c
 13555  011126  D0CB               	goto	l14247
 13556  011128                     l14213:
 13557                           
 13558                           ;StringCommand.c: 399: {
 13559                           ;StringCommand.c: 400: if (!StringContains(Input, "="))
 13560  011128  C1CA  F17C         	movff	Command@Input,StringContains@This
 13561  01112C  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 13562  011130  0E05               	movlw	low (STR_201+11)
 13563  011132  0101               	movlb	1	; () banked
 13564  011134  6F7E               	movwf	StringContains@That& (0+255),b
 13565  011136  0EFD               	movlw	high (STR_201+11)
 13566  011138  0101               	movlb	1	; () banked
 13567  01113A  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13568  01113C  EC34  F0B7         	call	_StringContains	;wreg free
 13569  011140  0900               	iorlw	0
 13570  011142  A4D8               	btfss	status,2,c
 13571  011144  D009               	goto	l14217
 13572                           
 13573                           ;StringCommand.c: 401: {
 13574                           ;StringCommand.c: 402: UARTstring("there is no question mark\r\n");
 13575  011146  0E0B               	movlw	low STR_163
 13576  011148  0101               	movlb	1	; () banked
 13577  01114A  6F87               	movwf	UARTstring@data& (0+255),b
 13578  01114C  0EF5               	movlw	high STR_163
 13579  01114E  0101               	movlb	1	; () banked
 13580  011150  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13581  011152  ECEB  F0B4         	call	_UARTstring	;wreg free
 13582  011156  D000               	goto	l14217
 13583  011158                     l14217:
 13584                           
 13585                           ;StringCommand.c: 403: }
 13586                           ;StringCommand.c: 404: tempLONG = GetEnteredNumber(Input);
 13587  011158  C1CA  F188         	movff	Command@Input,GetEnteredNumber@This
 13588  01115C  C1CB  F189         	movff	Command@Input+1,GetEnteredNumber@This+1
 13589  011160  EC44  F0A6         	call	_GetEnteredNumber	;wreg free
 13590  011164  C188  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 13591  011168  C189  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 13592  01116C  C18A  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 13593  011170  C18B  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 13594                           
 13595                           ;StringCommand.c: 405: if(tempLONG < 1000 && tempLONG >= 0 )
 13596  011174  0105               	movlb	5	; () banked
 13597  011176  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 13598  011178  D00D               	goto	l14221
 13599  01117A  0105               	movlb	5	; () banked
 13600  01117C  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 13601  01117E  0105               	movlb	5	; () banked
 13602  011180  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 13603  011182  E110               	bnz	l14225
 13604  011184  0EE8               	movlw	232
 13605  011186  0105               	movlb	5	; () banked
 13606  011188  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 13607  01118A  0E03               	movlw	3
 13608  01118C  0105               	movlb	5	; () banked
 13609  01118E  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 13610  011190  B0D8               	btfsc	status,0,c
 13611  011192  D008               	goto	l14225
 13612  011194                     l14221:
 13613                           
 13614                           ; BSR set to: 5
 13615  011194  0105               	movlb	5	; () banked
 13616  011196  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 13617  011198  D005               	goto	l14225
 13618                           
 13619                           ; BSR set to: 5
 13620                           ;StringCommand.c: 406: {
 13621                           ;StringCommand.c: 407: duty = (int)tempLONG;
 13622  01119A  C5DE  F5DC         	movff	Command@tempLONG,Command@duty
 13623  01119E  C5DF  F5DD         	movff	Command@tempLONG+1,Command@duty+1
 13624  0111A2  D000               	goto	l14225
 13625  0111A4                     l14225:
 13626                           
 13627                           ; BSR set to: 5
 13628                           ;StringCommand.c: 408: }
 13629                           ;StringCommand.c: 409: if (tempLONG == 2147483645L)
 13630  0111A4  0EFD               	movlw	253
 13631  0111A6  0105               	movlb	5	; () banked
 13632  0111A8  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 13633  0111AA  E11D               	bnz	l14229
 13634  0111AC  0105               	movlb	5	; () banked
 13635  0111AE  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 13636  0111B0  E11A               	bnz	l14229
 13637  0111B2  0105               	movlb	5	; () banked
 13638  0111B4  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 13639  0111B6  E117               	bnz	l14229
 13640  0111B8  0E7F               	movlw	127
 13641  0111BA  0105               	movlb	5	; () banked
 13642  0111BC  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 13643  0111BE  A4D8               	btfss	status,2,c
 13644  0111C0  D012               	goto	l14229
 13645                           
 13646                           ; BSR set to: 5
 13647                           ;StringCommand.c: 410: {
 13648                           ;StringCommand.c: 411: UARTstring("Error: No number entered\r\n");
 13649  0111C2  0E5F               	movlw	low STR_164
 13650  0111C4  0101               	movlb	1	; () banked
 13651  0111C6  6F87               	movwf	UARTstring@data& (0+255),b
 13652  0111C8  0EF5               	movlw	high STR_164
 13653  0111CA  0101               	movlb	1	; () banked
 13654  0111CC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13655  0111CE  ECEB  F0B4         	call	_UARTstring	;wreg free
 13656                           
 13657                           ;StringCommand.c: 412: LCDdisplayFeedback("ERR: no number");
 13658  0111D2  0E0D               	movlw	low STR_165
 13659  0111D4  0101               	movlb	1	; () banked
 13660  0111D6  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13661  0111D8  0EFC               	movlw	high STR_165
 13662  0111DA  0101               	movlb	1	; () banked
 13663  0111DC  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13664  0111DE  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 13665                           
 13666                           ;StringCommand.c: 413: }
 13667  0111E2  EF7C  F093         	goto	l685
 13668  0111E6                     l14229:
 13669                           
 13670                           ;StringCommand.c: 414: else if (duty > 100)
 13671  0111E6  0105               	movlb	5	; () banked
 13672  0111E8  BFDD               	btfsc	(Command@duty+1)& (0+255),7,b
 13673  0111EA  D01A               	goto	l14233
 13674  0111EC  0105               	movlb	5	; () banked
 13675  0111EE  51DD               	movf	(Command@duty+1)& (0+255),w,b
 13676  0111F0  E105               	bnz	u18540
 13677  0111F2  0E65               	movlw	101
 13678  0111F4  0105               	movlb	5	; () banked
 13679  0111F6  5DDC               	subwf	Command@duty& (0+255),w,b
 13680  0111F8  A0D8               	btfss	status,0,c
 13681  0111FA  D012               	goto	l14233
 13682  0111FC                     u18540:
 13683                           
 13684                           ; BSR set to: 5
 13685                           ;StringCommand.c: 415: {
 13686                           ;StringCommand.c: 416: UARTstring("Invalid Dutycycle: Greater than 100\r\n");
 13687  0111FC  0E34               	movlw	low STR_166
 13688  0111FE  0101               	movlb	1	; () banked
 13689  011200  6F87               	movwf	UARTstring@data& (0+255),b
 13690  011202  0EF2               	movlw	high STR_166
 13691  011204  0101               	movlb	1	; () banked
 13692  011206  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13693  011208  ECEB  F0B4         	call	_UARTstring	;wreg free
 13694                           
 13695                           ;StringCommand.c: 417: LCDdisplayFeedback("ERR: Duty > 100");
 13696  01120C  0EF9               	movlw	low STR_167
 13697  01120E  0101               	movlb	1	; () banked
 13698  011210  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13699  011212  0EF9               	movlw	high STR_167
 13700  011214  0101               	movlb	1	; () banked
 13701  011216  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13702  011218  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 13703                           
 13704                           ;StringCommand.c: 418: }
 13705  01121C  EF7C  F093         	goto	l685
 13706  011220                     l14233:
 13707                           
 13708                           ;StringCommand.c: 419: else if (duty < 0)
 13709  011220  0105               	movlb	5	; () banked
 13710  011222  AFDD               	btfss	(Command@duty+1)& (0+255),7,b
 13711  011224  D012               	goto	l14237
 13712                           
 13713                           ; BSR set to: 5
 13714                           ;StringCommand.c: 420: {
 13715                           ;StringCommand.c: 421: UARTstring("Invalid Dutycycle: Less than 0\r\n");
 13716  011226  0E7C               	movlw	low STR_168
 13717  011228  0101               	movlb	1	; () banked
 13718  01122A  6F87               	movwf	UARTstring@data& (0+255),b
 13719  01122C  0EF3               	movlw	high STR_168
 13720  01122E  0101               	movlb	1	; () banked
 13721  011230  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13722  011232  ECEB  F0B4         	call	_UARTstring	;wreg free
 13723                           
 13724                           ;StringCommand.c: 422: LCDdisplayFeedback("ERR: Duty < 0");
 13725  011236  0E39               	movlw	low STR_169
 13726  011238  0101               	movlb	1	; () banked
 13727  01123A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13728  01123C  0EFC               	movlw	high STR_169
 13729  01123E  0101               	movlb	1	; () banked
 13730  011240  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13731  011242  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 13732                           
 13733                           ;StringCommand.c: 423: }
 13734  011246  EF7C  F093         	goto	l685
 13735  01124A                     l14237:
 13736                           
 13737                           ;StringCommand.c: 424: else
 13738                           ;StringCommand.c: 425: {
 13739                           ;StringCommand.c: 426: SetDuty(duty);
 13740  01124A  0105               	movlb	5	; () banked
 13741  01124C  51DC               	movf	Command@duty& (0+255),w,b
 13742  01124E  EC9A  F0B3         	call	_SetDuty
 13743                           
 13744                           ;StringCommand.c: 427: sprintf(buf, "Dutycycle set to %d\r\n", duty);
 13745  011252  0E00               	movlw	low Command@buf
 13746  011254  0101               	movlb	1	; () banked
 13747  011256  6F92               	movwf	sprintf@sp& (0+255),b
 13748  011258  0E05               	movlw	high Command@buf
 13749  01125A  0101               	movlb	1	; () banked
 13750  01125C  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 13751  01125E  0ED1               	movlw	low STR_170
 13752  011260  0101               	movlb	1	; () banked
 13753  011262  6F94               	movwf	sprintf@f& (0+255),b
 13754  011264  0EF6               	movlw	high STR_170
 13755  011266  0101               	movlb	1	; () banked
 13756  011268  6F95               	movwf	(sprintf@f+1)& (0+255),b
 13757  01126A  C5DC  F196         	movff	Command@duty,?_sprintf+4
 13758  01126E  C5DD  F197         	movff	Command@duty+1,?_sprintf+5
 13759  011272  EC87  F093         	call	_sprintf	;wreg free
 13760                           
 13761                           ;StringCommand.c: 428: UARTstring(buf);
 13762  011276  0E00               	movlw	low Command@buf
 13763  011278  0101               	movlb	1	; () banked
 13764  01127A  6F87               	movwf	UARTstring@data& (0+255),b
 13765  01127C  0E05               	movlw	high Command@buf
 13766  01127E  0101               	movlb	1	; () banked
 13767  011280  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13768  011282  ECEB  F0B4         	call	_UARTstring	;wreg free
 13769                           
 13770                           ;StringCommand.c: 429: sprintf(buf, "Duty set to %d", duty);
 13771  011286  0E00               	movlw	low Command@buf
 13772  011288  0101               	movlb	1	; () banked
 13773  01128A  6F92               	movwf	sprintf@sp& (0+255),b
 13774  01128C  0E05               	movlw	high Command@buf
 13775  01128E  0101               	movlb	1	; () banked
 13776  011290  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 13777  011292  0E86               	movlw	low STR_171
 13778  011294  0101               	movlb	1	; () banked
 13779  011296  6F94               	movwf	sprintf@f& (0+255),b
 13780  011298  0EFB               	movlw	high STR_171
 13781  01129A  0101               	movlb	1	; () banked
 13782  01129C  6F95               	movwf	(sprintf@f+1)& (0+255),b
 13783  01129E  C5DC  F196         	movff	Command@duty,?_sprintf+4
 13784  0112A2  C5DD  F197         	movff	Command@duty+1,?_sprintf+5
 13785  0112A6  EC87  F093         	call	_sprintf	;wreg free
 13786                           
 13787                           ;StringCommand.c: 430: LCDdisplayFeedback(buf);
 13788  0112AA  0E00               	movlw	low Command@buf
 13789  0112AC  0101               	movlb	1	; () banked
 13790  0112AE  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13791  0112B0  0E05               	movlw	high Command@buf
 13792  0112B2  0101               	movlb	1	; () banked
 13793  0112B4  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13794  0112B6  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 13795                           
 13796                           ;StringCommand.c: 431: }
 13797                           ;StringCommand.c: 432: }
 13798  0112BA  EF7C  F093         	goto	l685
 13799  0112BE                     l14247:
 13800                           
 13801                           ;StringCommand.c: 433: else
 13802                           ;StringCommand.c: 434: {
 13803                           ;StringCommand.c: 435: UARTstring("redled what??? Do you mean Red Led Brightness???");
 13804  0112BE  0E1F               	movlw	low STR_172
 13805  0112C0  0101               	movlb	1	; () banked
 13806  0112C2  6F87               	movwf	UARTstring@data& (0+255),b
 13807  0112C4  0EF1               	movlw	high STR_172
 13808  0112C6  0101               	movlb	1	; () banked
 13809  0112C8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13810  0112CA  ECEB  F0B4         	call	_UARTstring	;wreg free
 13811                           
 13812                           ;StringCommand.c: 436: LCDdisplayFeedback("Red LED What???");
 13813  0112CE  0E39               	movlw	low STR_173
 13814  0112D0  0101               	movlb	1	; () banked
 13815  0112D2  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13816  0112D4  0EFA               	movlw	high STR_173
 13817  0112D6  0101               	movlb	1	; () banked
 13818  0112D8  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13819  0112DA  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 13820                           
 13821                           ;StringCommand.c: 437: }
 13822                           ;StringCommand.c: 438: }
 13823  0112DE  EF7C  F093         	goto	l685
 13824  0112E2                     l14249:
 13825                           
 13826                           ;StringCommand.c: 439: else
 13827                           ;StringCommand.c: 440: {
 13828                           ;StringCommand.c: 441: UARTstring("Red LED PWM Help Menu\r\n\n");
 13829  0112E2  0EE3               	movlw	low STR_174
 13830  0112E4  0101               	movlb	1	; () banked
 13831  0112E6  6F87               	movwf	UARTstring@data& (0+255),b
 13832  0112E8  0EF5               	movlw	high STR_174
 13833  0112EA  0101               	movlb	1	; () banked
 13834  0112EC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13835  0112EE  ECEB  F0B4         	call	_UARTstring	;wreg free
 13836                           
 13837                           ;StringCommand.c: 442: UARTstring("To set te PWM brightness enter 'Red LED brightness = 
      +                          dutycycle'\r\n");
 13838  0112F2  0E5B               	movlw	low STR_175
 13839  0112F4  0101               	movlb	1	; () banked
 13840  0112F6  6F87               	movwf	UARTstring@data& (0+255),b
 13841  0112F8  0EEF               	movlw	high STR_175
 13842  0112FA  0101               	movlb	1	; () banked
 13843  0112FC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13844  0112FE  ECEB  F0B4         	call	_UARTstring	;wreg free
 13845                           
 13846                           ;StringCommand.c: 443: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 13847  011302  0E0A               	movlw	low STR_176
 13848  011304  0101               	movlb	1	; () banked
 13849  011306  6F87               	movwf	UARTstring@data& (0+255),b
 13850  011308  0EF2               	movlw	high STR_176
 13851  01130A  0101               	movlb	1	; () banked
 13852  01130C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13853  01130E  ECEB  F0B4         	call	_UARTstring	;wreg free
 13854                           
 13855                           ;StringCommand.c: 444: LCD_Scroll("Red LED Contrast");
 13856  011312  0EC7               	movlw	low STR_177
 13857  011314  0101               	movlb	1	; () banked
 13858  011316  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13859  011318  0EF9               	movlw	high STR_177
 13860  01131A  0101               	movlb	1	; () banked
 13861  01131C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13862  01131E  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 13863                           
 13864                           ;StringCommand.c: 445: LCD_Scroll("Commands:");
 13865  011322  0E36               	movlw	low STR_178
 13866  011324  0101               	movlb	1	; () banked
 13867  011326  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13868  011328  0EFE               	movlw	high STR_178
 13869  01132A  0101               	movlb	1	; () banked
 13870  01132C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13871  01132E  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 13872                           
 13873                           ;StringCommand.c: 446: LCD_Scroll("Red LED=#");
 13874  011332  0E22               	movlw	low STR_179
 13875  011334  0101               	movlb	1	; () banked
 13876  011336  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13877  011338  0EFE               	movlw	high STR_179
 13878  01133A  0101               	movlb	1	; () banked
 13879  01133C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13880  01133E  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 13881                           
 13882                           ;StringCommand.c: 447: }
 13883                           ;StringCommand.c: 448: }
 13884  011342  EF7C  F093         	goto	l685
 13885  011346                     l14257:
 13886                           
 13887                           ;StringCommand.c: 450: else if (StartsWith(Input, "contrast"))
 13888  011346  C1CA  F17C         	movff	Command@Input,StartsWith@This
 13889  01134A  C1CB  F17D         	movff	Command@Input+1,StartsWith@This+1
 13890  01134E  0EC5               	movlw	low STR_180
 13891  011350  0101               	movlb	1	; () banked
 13892  011352  6F7E               	movwf	StartsWith@That& (0+255),b
 13893  011354  0EFE               	movlw	high STR_180
 13894  011356  0101               	movlb	1	; () banked
 13895  011358  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 13896  01135A  ECD5  F0B5         	call	_StartsWith	;wreg free
 13897  01135E  0900               	iorlw	0
 13898  011360  B4D8               	btfsc	status,2,c
 13899  011362  D10A               	goto	l14303
 13900                           
 13901                           ;StringCommand.c: 451: {
 13902                           ;StringCommand.c: 452: if (!StringContains(Input, "?"))
 13903  011364  C1CA  F17C         	movff	Command@Input,StringContains@This
 13904  011368  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 13905  01136C  0E17               	movlw	low (STR_83+14)
 13906  01136E  0101               	movlb	1	; () banked
 13907  011370  6F7E               	movwf	StringContains@That& (0+255),b
 13908  011372  0EFA               	movlw	high (STR_83+14)
 13909  011374  0101               	movlb	1	; () banked
 13910  011376  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13911  011378  EC34  F0B7         	call	_StringContains	;wreg free
 13912  01137C  0900               	iorlw	0
 13913  01137E  A4D8               	btfss	status,2,c
 13914  011380  D0C9               	goto	l14295
 13915                           
 13916                           ;StringCommand.c: 453: {
 13917                           ;StringCommand.c: 454: if (!StringContains(Input, "="))
 13918  011382  C1CA  F17C         	movff	Command@Input,StringContains@This
 13919  011386  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 13920  01138A  0E05               	movlw	low (STR_201+11)
 13921  01138C  0101               	movlb	1	; () banked
 13922  01138E  6F7E               	movwf	StringContains@That& (0+255),b
 13923  011390  0EFD               	movlw	high (STR_201+11)
 13924  011392  0101               	movlb	1	; () banked
 13925  011394  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13926  011396  EC34  F0B7         	call	_StringContains	;wreg free
 13927  01139A  0900               	iorlw	0
 13928  01139C  A4D8               	btfss	status,2,c
 13929  01139E  D007               	goto	l14265
 13930                           
 13931                           ;StringCommand.c: 455: {
 13932                           ;StringCommand.c: 456: StringAddEqual(Input);
 13933  0113A0  C1CA  F18B         	movff	Command@Input,StringAddEqual@Input
 13934  0113A4  C1CB  F18C         	movff	Command@Input+1,StringAddEqual@Input+1
 13935  0113A8  EC2F  F0A7         	call	_StringAddEqual	;wreg free
 13936  0113AC  D000               	goto	l14265
 13937  0113AE                     l14265:
 13938                           
 13939                           ;StringCommand.c: 457: }
 13940                           ;StringCommand.c: 458: tempLONG = GetEnteredNumber(Input);
 13941  0113AE  C1CA  F188         	movff	Command@Input,GetEnteredNumber@This
 13942  0113B2  C1CB  F189         	movff	Command@Input+1,GetEnteredNumber@This+1
 13943  0113B6  EC44  F0A6         	call	_GetEnteredNumber	;wreg free
 13944  0113BA  C188  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 13945  0113BE  C189  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 13946  0113C2  C18A  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 13947  0113C6  C18B  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 13948                           
 13949                           ;StringCommand.c: 459: if(tempLONG < 1000 && tempLONG >= 0 )
 13950  0113CA  0105               	movlb	5	; () banked
 13951  0113CC  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 13952  0113CE  D00D               	goto	l14269
 13953  0113D0  0105               	movlb	5	; () banked
 13954  0113D2  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 13955  0113D4  0105               	movlb	5	; () banked
 13956  0113D6  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 13957  0113D8  E110               	bnz	l14273
 13958  0113DA  0EE8               	movlw	232
 13959  0113DC  0105               	movlb	5	; () banked
 13960  0113DE  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 13961  0113E0  0E03               	movlw	3
 13962  0113E2  0105               	movlb	5	; () banked
 13963  0113E4  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 13964  0113E6  B0D8               	btfsc	status,0,c
 13965  0113E8  D008               	goto	l14273
 13966  0113EA                     l14269:
 13967                           
 13968                           ; BSR set to: 5
 13969  0113EA  0105               	movlb	5	; () banked
 13970  0113EC  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 13971  0113EE  D005               	goto	l14273
 13972                           
 13973                           ; BSR set to: 5
 13974                           ;StringCommand.c: 460: {
 13975                           ;StringCommand.c: 461: contrast = (int)tempLONG;
 13976  0113F0  C5DE  F5D8         	movff	Command@tempLONG,Command@contrast
 13977  0113F4  C5DF  F5D9         	movff	Command@tempLONG+1,Command@contrast+1
 13978  0113F8  D000               	goto	l14273
 13979  0113FA                     l14273:
 13980                           
 13981                           ; BSR set to: 5
 13982                           ;StringCommand.c: 462: }
 13983                           ;StringCommand.c: 463: if (tempLONG == 2147483645L)
 13984  0113FA  0EFD               	movlw	253
 13985  0113FC  0105               	movlb	5	; () banked
 13986  0113FE  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 13987  011400  E11D               	bnz	l14277
 13988  011402  0105               	movlb	5	; () banked
 13989  011404  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 13990  011406  E11A               	bnz	l14277
 13991  011408  0105               	movlb	5	; () banked
 13992  01140A  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 13993  01140C  E117               	bnz	l14277
 13994  01140E  0E7F               	movlw	127
 13995  011410  0105               	movlb	5	; () banked
 13996  011412  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 13997  011414  A4D8               	btfss	status,2,c
 13998  011416  D012               	goto	l14277
 13999                           
 14000                           ; BSR set to: 5
 14001                           ;StringCommand.c: 464: {
 14002                           ;StringCommand.c: 465: UARTstring("Error: No number entered\r\n");
 14003  011418  0E5F               	movlw	low STR_164
 14004  01141A  0101               	movlb	1	; () banked
 14005  01141C  6F87               	movwf	UARTstring@data& (0+255),b
 14006  01141E  0EF5               	movlw	high STR_164
 14007  011420  0101               	movlb	1	; () banked
 14008  011422  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14009  011424  ECEB  F0B4         	call	_UARTstring	;wreg free
 14010                           
 14011                           ;StringCommand.c: 466: LCDdisplayFeedback("ERR: No number");
 14012  011428  0EFE               	movlw	low STR_184
 14013  01142A  0101               	movlb	1	; () banked
 14014  01142C  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14015  01142E  0EFB               	movlw	high STR_184
 14016  011430  0101               	movlb	1	; () banked
 14017  011432  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14018  011434  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 14019                           
 14020                           ;StringCommand.c: 467: }
 14021  011438  EF7C  F093         	goto	l685
 14022  01143C                     l14277:
 14023                           
 14024                           ;StringCommand.c: 468: else if (contrast > 100)
 14025  01143C  0105               	movlb	5	; () banked
 14026  01143E  BFD9               	btfsc	(Command@contrast+1)& (0+255),7,b
 14027  011440  D01A               	goto	l14281
 14028  011442  0105               	movlb	5	; () banked
 14029  011444  51D9               	movf	(Command@contrast+1)& (0+255),w,b
 14030  011446  E105               	bnz	u18620
 14031  011448  0E65               	movlw	101
 14032  01144A  0105               	movlb	5	; () banked
 14033  01144C  5DD8               	subwf	Command@contrast& (0+255),w,b
 14034  01144E  A0D8               	btfss	status,0,c
 14035  011450  D012               	goto	l14281
 14036  011452                     u18620:
 14037                           
 14038                           ; BSR set to: 5
 14039                           ;StringCommand.c: 469: {
 14040                           ;StringCommand.c: 470: UARTstring("Invalid Contrast Duty cycle: Greater than 100\r\n");
 14041  011452  0E50               	movlw	low STR_185
 14042  011454  0101               	movlb	1	; () banked
 14043  011456  6F87               	movwf	UARTstring@data& (0+255),b
 14044  011458  0EF1               	movlw	high STR_185
 14045  01145A  0101               	movlb	1	; () banked
 14046  01145C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14047  01145E  ECEB  F0B4         	call	_UARTstring	;wreg free
 14048                           
 14049                           ;StringCommand.c: 471: LCDdisplayFeedback("ERR: CNST > 100");
 14050  011462  0EE9               	movlw	low STR_186
 14051  011464  0101               	movlb	1	; () banked
 14052  011466  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14053  011468  0EF9               	movlw	high STR_186
 14054  01146A  0101               	movlb	1	; () banked
 14055  01146C  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14056  01146E  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 14057                           
 14058                           ;StringCommand.c: 472: }
 14059  011472  EF7C  F093         	goto	l685
 14060  011476                     l14281:
 14061                           
 14062                           ;StringCommand.c: 473: else if (contrast < 0)
 14063  011476  0105               	movlb	5	; () banked
 14064  011478  AFD9               	btfss	(Command@contrast+1)& (0+255),7,b
 14065  01147A  D012               	goto	l14285
 14066                           
 14067                           ; BSR set to: 5
 14068                           ;StringCommand.c: 474: {
 14069                           ;StringCommand.c: 475: UARTstring("Invalid Contrast Duty Cycle: Less than 0\r\n");
 14070  01147C  0EDF               	movlw	low STR_187
 14071  01147E  0101               	movlb	1	; () banked
 14072  011480  6F87               	movwf	UARTstring@data& (0+255),b
 14073  011482  0EF1               	movlw	high STR_187
 14074  011484  0101               	movlb	1	; () banked
 14075  011486  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14076  011488  ECEB  F0B4         	call	_UARTstring	;wreg free
 14077                           
 14078                           ;StringCommand.c: 476: LCDdisplayFeedback("ERR: CNST < 0");
 14079  01148C  0E2B               	movlw	low STR_188
 14080  01148E  0101               	movlb	1	; () banked
 14081  011490  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14082  011492  0EFC               	movlw	high STR_188
 14083  011494  0101               	movlb	1	; () banked
 14084  011496  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14085  011498  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 14086                           
 14087                           ;StringCommand.c: 477: }
 14088  01149C  EF7C  F093         	goto	l685
 14089  0114A0                     l14285:
 14090                           
 14091                           ;StringCommand.c: 478: else
 14092                           ;StringCommand.c: 479: {
 14093                           ;StringCommand.c: 480: SetContrast(contrast);
 14094  0114A0  0105               	movlb	5	; () banked
 14095  0114A2  51D8               	movf	Command@contrast& (0+255),w,b
 14096  0114A4  EC5C  F0B1         	call	_SetContrast
 14097                           
 14098                           ;StringCommand.c: 481: sprintf(buf, "Contrast Duty Cycle set to %d\r\n", contrast);
 14099  0114A8  0E00               	movlw	low Command@buf
 14100  0114AA  0101               	movlb	1	; () banked
 14101  0114AC  6F92               	movwf	sprintf@sp& (0+255),b
 14102  0114AE  0E05               	movlw	high Command@buf
 14103  0114B0  0101               	movlb	1	; () banked
 14104  0114B2  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14105  0114B4  0EFF               	movlw	low STR_189
 14106  0114B6  0101               	movlb	1	; () banked
 14107  0114B8  6F94               	movwf	sprintf@f& (0+255),b
 14108  0114BA  0EF3               	movlw	high STR_189
 14109  0114BC  0101               	movlb	1	; () banked
 14110  0114BE  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14111  0114C0  C5D8  F196         	movff	Command@contrast,?_sprintf+4
 14112  0114C4  C5D9  F197         	movff	Command@contrast+1,?_sprintf+5
 14113  0114C8  EC87  F093         	call	_sprintf	;wreg free
 14114                           
 14115                           ;StringCommand.c: 482: UARTstring(buf);
 14116  0114CC  0E00               	movlw	low Command@buf
 14117  0114CE  0101               	movlb	1	; () banked
 14118  0114D0  6F87               	movwf	UARTstring@data& (0+255),b
 14119  0114D2  0E05               	movlw	high Command@buf
 14120  0114D4  0101               	movlb	1	; () banked
 14121  0114D6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14122  0114D8  ECEB  F0B4         	call	_UARTstring	;wreg free
 14123                           
 14124                           ;StringCommand.c: 483: sprintf(buf, "CNST set to %d", duty);
 14125  0114DC  0E00               	movlw	low Command@buf
 14126  0114DE  0101               	movlb	1	; () banked
 14127  0114E0  6F92               	movwf	sprintf@sp& (0+255),b
 14128  0114E2  0E05               	movlw	high Command@buf
 14129  0114E4  0101               	movlb	1	; () banked
 14130  0114E6  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14131  0114E8  0E77               	movlw	low STR_190
 14132  0114EA  0101               	movlb	1	; () banked
 14133  0114EC  6F94               	movwf	sprintf@f& (0+255),b
 14134  0114EE  0EFB               	movlw	high STR_190
 14135  0114F0  0101               	movlb	1	; () banked
 14136  0114F2  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14137  0114F4  C5DC  F196         	movff	Command@duty,?_sprintf+4
 14138  0114F8  C5DD  F197         	movff	Command@duty+1,?_sprintf+5
 14139  0114FC  EC87  F093         	call	_sprintf	;wreg free
 14140                           
 14141                           ;StringCommand.c: 484: LCDdisplayFeedback(buf);
 14142  011500  0E00               	movlw	low Command@buf
 14143  011502  0101               	movlb	1	; () banked
 14144  011504  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14145  011506  0E05               	movlw	high Command@buf
 14146  011508  0101               	movlb	1	; () banked
 14147  01150A  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14148  01150C  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 14149                           
 14150                           ;StringCommand.c: 485: }
 14151                           ;StringCommand.c: 486: }
 14152  011510  EF7C  F093         	goto	l685
 14153  011514                     l14295:
 14154                           
 14155                           ;StringCommand.c: 487: else
 14156                           ;StringCommand.c: 488: {
 14157                           ;StringCommand.c: 489: UARTstring("Contrast PWM Help Menu\r\n\n");
 14158  011514  0EAF               	movlw	low STR_191
 14159  011516  0101               	movlb	1	; () banked
 14160  011518  6F87               	movwf	UARTstring@data& (0+255),b
 14161  01151A  0EF5               	movlw	high STR_191
 14162  01151C  0101               	movlb	1	; () banked
 14163  01151E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14164  011520  ECEB  F0B4         	call	_UARTstring	;wreg free
 14165                           
 14166                           ;StringCommand.c: 490: UARTstring("To set Contrast PWM brightness enter 'Contrast = duty
      +                          cycle'\r\n");
 14167  011524  0E9D               	movlw	low STR_192
 14168  011526  0101               	movlb	1	; () banked
 14169  011528  6F87               	movwf	UARTstring@data& (0+255),b
 14170  01152A  0EEF               	movlw	high STR_192
 14171  01152C  0101               	movlb	1	; () banked
 14172  01152E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14173  011530  ECEB  F0B4         	call	_UARTstring	;wreg free
 14174                           
 14175                           ;StringCommand.c: 491: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 14176  011534  0E0A               	movlw	low STR_176
 14177  011536  0101               	movlb	1	; () banked
 14178  011538  6F87               	movwf	UARTstring@data& (0+255),b
 14179  01153A  0EF2               	movlw	high STR_176
 14180  01153C  0101               	movlb	1	; () banked
 14181  01153E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14182  011540  ECEB  F0B4         	call	_UARTstring	;wreg free
 14183                           
 14184                           ;StringCommand.c: 492: LCD_Scroll("LCD Contrast");
 14185  011544  0E48               	movlw	low STR_194
 14186  011546  0101               	movlb	1	; () banked
 14187  011548  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14188  01154A  0EFD               	movlw	high STR_194
 14189  01154C  0101               	movlb	1	; () banked
 14190  01154E  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14191  011550  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 14192                           
 14193                           ;StringCommand.c: 493: LCD_Scroll("Commands:");
 14194  011554  0E36               	movlw	low STR_178
 14195  011556  0101               	movlb	1	; () banked
 14196  011558  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14197  01155A  0EFE               	movlw	high STR_178
 14198  01155C  0101               	movlb	1	; () banked
 14199  01155E  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14200  011560  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 14201                           
 14202                           ;StringCommand.c: 494: LCD_Scroll("Contrast#");
 14203  011564  0E2C               	movlw	low STR_196
 14204  011566  0101               	movlb	1	; () banked
 14205  011568  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14206  01156A  0EFE               	movlw	high STR_196
 14207  01156C  0101               	movlb	1	; () banked
 14208  01156E  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14209  011570  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 14210                           
 14211                           ;StringCommand.c: 495: }
 14212                           ;StringCommand.c: 496: }
 14213  011574  EF7C  F093         	goto	l685
 14214  011578                     l14303:
 14215                           
 14216                           ;StringCommand.c: 498: else if (StartsWith(Input, "adc"))
 14217  011578  C1CA  F17C         	movff	Command@Input,StartsWith@This
 14218  01157C  C1CB  F17D         	movff	Command@Input+1,StartsWith@This+1
 14219  011580  0EE0               	movlw	low STR_197
 14220  011582  0101               	movlb	1	; () banked
 14221  011584  6F7E               	movwf	StartsWith@That& (0+255),b
 14222  011586  0EFF               	movlw	high STR_197
 14223  011588  0101               	movlb	1	; () banked
 14224  01158A  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 14225  01158C  ECD5  F0B5         	call	_StartsWith	;wreg free
 14226  011590  0900               	iorlw	0
 14227  011592  B4D8               	btfsc	status,2,c
 14228  011594  D16C               	goto	l14363
 14229                           
 14230                           ;StringCommand.c: 499: {
 14231                           ;StringCommand.c: 500: if (!StringContains(Input, "?"))
 14232  011596  C1CA  F17C         	movff	Command@Input,StringContains@This
 14233  01159A  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 14234  01159E  0E17               	movlw	low (STR_83+14)
 14235  0115A0  0101               	movlb	1	; () banked
 14236  0115A2  6F7E               	movwf	StringContains@That& (0+255),b
 14237  0115A4  0EFA               	movlw	high (STR_83+14)
 14238  0115A6  0101               	movlb	1	; () banked
 14239  0115A8  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14240  0115AA  EC34  F0B7         	call	_StringContains	;wreg free
 14241  0115AE  0900               	iorlw	0
 14242  0115B0  A4D8               	btfss	status,2,c
 14243  0115B2  D11B               	goto	l14355
 14244                           
 14245                           ;StringCommand.c: 501: {
 14246                           ;StringCommand.c: 502: if (!StringContains(Input, "="))
 14247  0115B4  C1CA  F17C         	movff	Command@Input,StringContains@This
 14248  0115B8  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 14249  0115BC  0E05               	movlw	low (STR_201+11)
 14250  0115BE  0101               	movlb	1	; () banked
 14251  0115C0  6F7E               	movwf	StringContains@That& (0+255),b
 14252  0115C2  0EFD               	movlw	high (STR_201+11)
 14253  0115C4  0101               	movlb	1	; () banked
 14254  0115C6  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14255  0115C8  EC34  F0B7         	call	_StringContains	;wreg free
 14256  0115CC  0900               	iorlw	0
 14257  0115CE  A4D8               	btfss	status,2,c
 14258  0115D0  D007               	goto	l14311
 14259                           
 14260                           ;StringCommand.c: 503: {
 14261                           ;StringCommand.c: 504: StringAddEqual(Input);
 14262  0115D2  C1CA  F18B         	movff	Command@Input,StringAddEqual@Input
 14263  0115D6  C1CB  F18C         	movff	Command@Input+1,StringAddEqual@Input+1
 14264  0115DA  EC2F  F0A7         	call	_StringAddEqual	;wreg free
 14265  0115DE  D000               	goto	l14311
 14266  0115E0                     l14311:
 14267                           
 14268                           ;StringCommand.c: 505: }
 14269                           ;StringCommand.c: 506: tempLONG = GetEnteredNumber(Input);
 14270  0115E0  C1CA  F188         	movff	Command@Input,GetEnteredNumber@This
 14271  0115E4  C1CB  F189         	movff	Command@Input+1,GetEnteredNumber@This+1
 14272  0115E8  EC44  F0A6         	call	_GetEnteredNumber	;wreg free
 14273  0115EC  C188  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 14274  0115F0  C189  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 14275  0115F4  C18A  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 14276  0115F8  C18B  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 14277                           
 14278                           ;StringCommand.c: 507: if(tempLONG < 1000 && tempLONG >= 0 )
 14279  0115FC  0105               	movlb	5	; () banked
 14280  0115FE  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 14281  011600  D00D               	goto	l14315
 14282  011602  0105               	movlb	5	; () banked
 14283  011604  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 14284  011606  0105               	movlb	5	; () banked
 14285  011608  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 14286  01160A  E110               	bnz	l14319
 14287  01160C  0EE8               	movlw	232
 14288  01160E  0105               	movlb	5	; () banked
 14289  011610  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 14290  011612  0E03               	movlw	3
 14291  011614  0105               	movlb	5	; () banked
 14292  011616  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 14293  011618  B0D8               	btfsc	status,0,c
 14294  01161A  D008               	goto	l14319
 14295  01161C                     l14315:
 14296                           
 14297                           ; BSR set to: 5
 14298  01161C  0105               	movlb	5	; () banked
 14299  01161E  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 14300  011620  D005               	goto	l14319
 14301                           
 14302                           ; BSR set to: 5
 14303                           ;StringCommand.c: 508: {
 14304                           ;StringCommand.c: 509: channel = (int)tempLONG;
 14305  011622  C5DE  F5DA         	movff	Command@tempLONG,Command@channel
 14306  011626  C5DF  F5DB         	movff	Command@tempLONG+1,Command@channel+1
 14307  01162A  D000               	goto	l14319
 14308  01162C                     l14319:
 14309                           
 14310                           ; BSR set to: 5
 14311                           ;StringCommand.c: 510: }
 14312                           ;StringCommand.c: 511: if (tempLONG == 2147483645L) {
 14313  01162C  0EFD               	movlw	253
 14314  01162E  0105               	movlb	5	; () banked
 14315  011630  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 14316  011632  E11D               	bnz	l14323
 14317  011634  0105               	movlb	5	; () banked
 14318  011636  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 14319  011638  E11A               	bnz	l14323
 14320  01163A  0105               	movlb	5	; () banked
 14321  01163C  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 14322  01163E  E117               	bnz	l14323
 14323  011640  0E7F               	movlw	127
 14324  011642  0105               	movlb	5	; () banked
 14325  011644  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 14326  011646  A4D8               	btfss	status,2,c
 14327  011648  D012               	goto	l14323
 14328                           
 14329                           ; BSR set to: 5
 14330                           ;StringCommand.c: 512: UARTstring("Error: only use one equal sign\r\n");
 14331  01164A  0EBE               	movlw	low STR_200
 14332  01164C  0101               	movlb	1	; () banked
 14333  01164E  6F87               	movwf	UARTstring@data& (0+255),b
 14334  011650  0EF3               	movlw	high STR_200
 14335  011652  0101               	movlb	1	; () banked
 14336  011654  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14337  011656  ECEB  F0B4         	call	_UARTstring	;wreg free
 14338                           
 14339                           ;StringCommand.c: 513: LCDdisplayFeedback("ERR: Use 1 =");
 14340  01165A  0EFA               	movlw	low STR_201
 14341  01165C  0101               	movlb	1	; () banked
 14342  01165E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14343  011660  0EFC               	movlw	high STR_201
 14344  011662  0101               	movlb	1	; () banked
 14345  011664  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14346  011666  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 14347                           
 14348                           ;StringCommand.c: 514: }
 14349  01166A  EF7C  F093         	goto	l685
 14350  01166E                     l14323:
 14351                           
 14352                           ;StringCommand.c: 515: else if (channel < 0)
 14353  01166E  0105               	movlb	5	; () banked
 14354  011670  AFDB               	btfss	(Command@channel+1)& (0+255),7,b
 14355  011672  D012               	goto	l14327
 14356                           
 14357                           ; BSR set to: 5
 14358                           ;StringCommand.c: 516: {
 14359                           ;StringCommand.c: 517: UARTstring("Error: No negative channels\r\n");
 14360  011674  0E5E               	movlw	low STR_202
 14361  011676  0101               	movlb	1	; () banked
 14362  011678  6F87               	movwf	UARTstring@data& (0+255),b
 14363  01167A  0EF4               	movlw	high STR_202
 14364  01167C  0101               	movlb	1	; () banked
 14365  01167E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14366  011680  ECEB  F0B4         	call	_UARTstring	;wreg free
 14367                           
 14368                           ;StringCommand.c: 518: LCDdisplayFeedback("ERR: Use + Chnl");
 14369  011684  0EF9               	movlw	low STR_203
 14370  011686  0101               	movlb	1	; () banked
 14371  011688  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14372  01168A  0EFA               	movlw	high STR_203
 14373  01168C  0101               	movlb	1	; () banked
 14374  01168E  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14375  011690  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 14376                           
 14377                           ;StringCommand.c: 519: }
 14378  011694  EF7C  F093         	goto	l685
 14379  011698                     l14327:
 14380                           
 14381                           ;StringCommand.c: 520: else if (channel >= 32000)
 14382  011698  0105               	movlb	5	; () banked
 14383  01169A  BFDB               	btfsc	(Command@channel+1)& (0+255),7,b
 14384  01169C  D017               	goto	l14331
 14385  01169E  0E7D               	movlw	125
 14386  0116A0  0105               	movlb	5	; () banked
 14387  0116A2  5DDB               	subwf	(Command@channel+1)& (0+255),w,b
 14388  0116A4  A0D8               	btfss	status,0,c
 14389  0116A6  D012               	goto	l14331
 14390                           
 14391                           ; BSR set to: 5
 14392                           ;StringCommand.c: 521: {
 14393                           ;StringCommand.c: 522: UARTstring("Error: in parsing command\r\n");
 14394  0116A8  0EEF               	movlw	low STR_204
 14395  0116AA  0101               	movlb	1	; () banked
 14396  0116AC  6F87               	movwf	UARTstring@data& (0+255),b
 14397  0116AE  0EF4               	movlw	high STR_204
 14398  0116B0  0101               	movlb	1	; () banked
 14399  0116B2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14400  0116B4  ECEB  F0B4         	call	_UARTstring	;wreg free
 14401                           
 14402                           ;StringCommand.c: 523: LCDdisplayFeedback("ERR: Cant parse");
 14403  0116B8  0EB9               	movlw	low STR_205
 14404  0116BA  0101               	movlb	1	; () banked
 14405  0116BC  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14406  0116BE  0EFA               	movlw	high STR_205
 14407  0116C0  0101               	movlb	1	; () banked
 14408  0116C2  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14409  0116C4  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 14410                           
 14411                           ;StringCommand.c: 524: }
 14412  0116C8  EF7C  F093         	goto	l685
 14413  0116CC                     l14331:
 14414                           
 14415                           ;StringCommand.c: 525: else if (channel != 0)
 14416  0116CC  0105               	movlb	5	; () banked
 14417  0116CE  51DA               	movf	Command@channel& (0+255),w,b
 14418  0116D0  0105               	movlb	5	; () banked
 14419  0116D2  11DB               	iorwf	(Command@channel+1)& (0+255),w,b
 14420  0116D4  B4D8               	btfsc	status,2,c
 14421  0116D6  D036               	goto	l14339
 14422                           
 14423                           ; BSR set to: 5
 14424                           ;StringCommand.c: 526: {
 14425                           ;StringCommand.c: 527: sprintf(buf, "Channel %d is not configured", channel);
 14426  0116D8  0E00               	movlw	low Command@buf
 14427  0116DA  0101               	movlb	1	; () banked
 14428  0116DC  6F92               	movwf	sprintf@sp& (0+255),b
 14429  0116DE  0E05               	movlw	high Command@buf
 14430  0116E0  0101               	movlb	1	; () banked
 14431  0116E2  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14432  0116E4  0E99               	movlw	low STR_206
 14433  0116E6  0101               	movlb	1	; () banked
 14434  0116E8  6F94               	movwf	sprintf@f& (0+255),b
 14435  0116EA  0EF4               	movlw	high STR_206
 14436  0116EC  0101               	movlb	1	; () banked
 14437  0116EE  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14438  0116F0  C5DA  F196         	movff	Command@channel,?_sprintf+4
 14439  0116F4  C5DB  F197         	movff	Command@channel+1,?_sprintf+5
 14440  0116F8  EC87  F093         	call	_sprintf	;wreg free
 14441                           
 14442                           ;StringCommand.c: 528: UARTstring(buf);
 14443  0116FC  0E00               	movlw	low Command@buf
 14444  0116FE  0101               	movlb	1	; () banked
 14445  011700  6F87               	movwf	UARTstring@data& (0+255),b
 14446  011702  0E05               	movlw	high Command@buf
 14447  011704  0101               	movlb	1	; () banked
 14448  011706  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14449  011708  ECEB  F0B4         	call	_UARTstring	;wreg free
 14450                           
 14451                           ;StringCommand.c: 529: sprintf(buf, "Chnl set to %d\r\n", duty);
 14452  01170C  0E00               	movlw	low Command@buf
 14453  01170E  0101               	movlb	1	; () banked
 14454  011710  6F92               	movwf	sprintf@sp& (0+255),b
 14455  011712  0E05               	movlw	high Command@buf
 14456  011714  0101               	movlb	1	; () banked
 14457  011716  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14458  011718  0E0C               	movlw	low STR_207
 14459  01171A  0101               	movlb	1	; () banked
 14460  01171C  6F94               	movwf	sprintf@f& (0+255),b
 14461  01171E  0EF9               	movlw	high STR_207
 14462  011720  0101               	movlb	1	; () banked
 14463  011722  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14464  011724  C5DC  F196         	movff	Command@duty,?_sprintf+4
 14465  011728  C5DD  F197         	movff	Command@duty+1,?_sprintf+5
 14466  01172C  EC87  F093         	call	_sprintf	;wreg free
 14467                           
 14468                           ;StringCommand.c: 530: LCDdisplayFeedback(buf);
 14469  011730  0E00               	movlw	low Command@buf
 14470  011732  0101               	movlb	1	; () banked
 14471  011734  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14472  011736  0E05               	movlw	high Command@buf
 14473  011738  0101               	movlb	1	; () banked
 14474  01173A  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14475  01173C  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 14476                           
 14477                           ;StringCommand.c: 531: }
 14478  011740  EF7C  F093         	goto	l685
 14479  011744                     l14339:
 14480                           
 14481                           ;StringCommand.c: 532: else
 14482                           ;StringCommand.c: 533: {
 14483                           ;StringCommand.c: 534: LATE |= 0b00000010;
 14484  011744  828D               	bsf	3981,1,c	;volatile
 14485                           
 14486                           ;StringCommand.c: 535: delayUS(1000);
 14487  011746  0EE8               	movlw	232
 14488  011748  0101               	movlb	1	; () banked
 14489  01174A  6F7C               	movwf	delayUS@US& (0+255),b
 14490  01174C  0E03               	movlw	3
 14491  01174E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 14492  011750  0E00               	movlw	0
 14493  011752  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 14494  011754  0E00               	movlw	0
 14495  011756  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 14496  011758  EC38  F0BA         	call	_delayUS	;wreg free
 14497                           
 14498                           ;StringCommand.c: 536: ADC_Value = InternalADC_Read(channel);
 14499  01175C  0105               	movlb	5	; () banked
 14500  01175E  51DA               	movf	Command@channel& (0+255),w,b
 14501  011760  ECA3  F0BA         	call	_InternalADC_Read
 14502  011764  C18B  F5C8         	movff	?_InternalADC_Read,Command@ADC_Value
 14503  011768  C18C  F5C9         	movff	?_InternalADC_Read+1,Command@ADC_Value+1
 14504                           
 14505                           ;StringCommand.c: 537: sprintf(buf, "ADC channel %d = %d", channel, ADC_Value);
 14506  01176C  0E00               	movlw	low Command@buf
 14507  01176E  0101               	movlb	1	; () banked
 14508  011770  6F92               	movwf	sprintf@sp& (0+255),b
 14509  011772  0E05               	movlw	high Command@buf
 14510  011774  0101               	movlb	1	; () banked
 14511  011776  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14512  011778  0E51               	movlw	low STR_208
 14513  01177A  0101               	movlb	1	; () banked
 14514  01177C  6F94               	movwf	sprintf@f& (0+255),b
 14515  01177E  0EF7               	movlw	high STR_208
 14516  011780  0101               	movlb	1	; () banked
 14517  011782  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14518  011784  C5DA  F196         	movff	Command@channel,?_sprintf+4
 14519  011788  C5DB  F197         	movff	Command@channel+1,?_sprintf+5
 14520  01178C  C5C8  F198         	movff	Command@ADC_Value,?_sprintf+6
 14521  011790  C5C9  F199         	movff	Command@ADC_Value+1,?_sprintf+7
 14522  011794  EC87  F093         	call	_sprintf	;wreg free
 14523                           
 14524                           ;StringCommand.c: 538: LATE &= ~0b00000010;
 14525  011798  928D               	bcf	3981,1,c	;volatile
 14526                           
 14527                           ;StringCommand.c: 539: UARTstring(buf);
 14528  01179A  0E00               	movlw	low Command@buf
 14529  01179C  0101               	movlb	1	; () banked
 14530  01179E  6F87               	movwf	UARTstring@data& (0+255),b
 14531  0117A0  0E05               	movlw	high Command@buf
 14532  0117A2  0101               	movlb	1	; () banked
 14533  0117A4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14534  0117A6  ECEB  F0B4         	call	_UARTstring	;wreg free
 14535                           
 14536                           ;StringCommand.c: 540: sprintf(buf, "Chnl %d = %d", channel, ADC_Value);
 14537  0117AA  0E00               	movlw	low Command@buf
 14538  0117AC  0101               	movlb	1	; () banked
 14539  0117AE  6F92               	movwf	sprintf@sp& (0+255),b
 14540  0117B0  0E05               	movlw	high Command@buf
 14541  0117B2  0101               	movlb	1	; () banked
 14542  0117B4  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14543  0117B6  0E14               	movlw	low STR_209
 14544  0117B8  0101               	movlb	1	; () banked
 14545  0117BA  6F94               	movwf	sprintf@f& (0+255),b
 14546  0117BC  0EFD               	movlw	high STR_209
 14547  0117BE  0101               	movlb	1	; () banked
 14548  0117C0  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14549  0117C2  C5DA  F196         	movff	Command@channel,?_sprintf+4
 14550  0117C6  C5DB  F197         	movff	Command@channel+1,?_sprintf+5
 14551  0117CA  C5C8  F198         	movff	Command@ADC_Value,?_sprintf+6
 14552  0117CE  C5C9  F199         	movff	Command@ADC_Value+1,?_sprintf+7
 14553  0117D2  EC87  F093         	call	_sprintf	;wreg free
 14554                           
 14555                           ;StringCommand.c: 541: LCDdisplayFeedback(buf);
 14556  0117D6  0E00               	movlw	low Command@buf
 14557  0117D8  0101               	movlb	1	; () banked
 14558  0117DA  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14559  0117DC  0E05               	movlw	high Command@buf
 14560  0117DE  0101               	movlb	1	; () banked
 14561  0117E0  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14562  0117E2  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 14563                           
 14564                           ;StringCommand.c: 542: }
 14565                           ;StringCommand.c: 543: }
 14566  0117E6  EF7C  F093         	goto	l685
 14567  0117EA                     l14355:
 14568                           
 14569                           ;StringCommand.c: 544: else
 14570                           ;StringCommand.c: 545: {
 14571                           ;StringCommand.c: 546: UARTstring("ADC Help Menu\r\n\n");
 14572  0117EA  0EEA               	movlw	low STR_210
 14573  0117EC  0101               	movlb	1	; () banked
 14574  0117EE  6F87               	movwf	UARTstring@data& (0+255),b
 14575  0117F0  0EF8               	movlw	high STR_210
 14576  0117F2  0101               	movlb	1	; () banked
 14577  0117F4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14578  0117F6  ECEB  F0B4         	call	_UARTstring	;wreg free
 14579                           
 14580                           ;StringCommand.c: 547: UARTstring("Channels:\r\n");
 14581  0117FA  0E7B               	movlw	low STR_211
 14582  0117FC  0101               	movlb	1	; () banked
 14583  0117FE  6F87               	movwf	UARTstring@data& (0+255),b
 14584  011800  0EFD               	movlw	high STR_211
 14585  011802  0101               	movlb	1	; () banked
 14586  011804  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14587  011806  ECEB  F0B4         	call	_UARTstring	;wreg free
 14588                           
 14589                           ;StringCommand.c: 548: UARTstring("0\r\n\n");
 14590  01180A  0EB3               	movlw	low STR_212
 14591  01180C  0101               	movlb	1	; () banked
 14592  01180E  6F87               	movwf	UARTstring@data& (0+255),b
 14593  011810  0EFF               	movlw	high STR_212
 14594  011812  0101               	movlb	1	; () banked
 14595  011814  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14596  011816  ECEB  F0B4         	call	_UARTstring	;wreg free
 14597                           
 14598                           ;StringCommand.c: 549: UARTstring("To read and adc channel, type the command\r\n ADC"
 14599                           ;StringCommand.c: 550: " followed by 'Channel' \r\n");
 14600  01181A  0E89               	movlw	low STR_213
 14601  01181C  0101               	movlb	1	; () banked
 14602  01181E  6F87               	movwf	UARTstring@data& (0+255),b
 14603  011820  0EEE               	movlw	high STR_213
 14604  011822  0101               	movlb	1	; () banked
 14605  011824  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14606  011826  ECEB  F0B4         	call	_UARTstring	;wreg free
 14607                           
 14608                           ;StringCommand.c: 551: UARTstring("i.e. ADC 0\r\n");
 14609  01182A  0ED3               	movlw	low STR_214
 14610  01182C  0101               	movlb	1	; () banked
 14611  01182E  6F87               	movwf	UARTstring@data& (0+255),b
 14612  011830  0EFC               	movlw	high STR_214
 14613  011832  0101               	movlb	1	; () banked
 14614  011834  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14615  011836  ECEB  F0B4         	call	_UARTstring	;wreg free
 14616                           
 14617                           ;StringCommand.c: 552: LCD_Scroll("ADC Menu");
 14618  01183A  0ECE               	movlw	low STR_215
 14619  01183C  0101               	movlb	1	; () banked
 14620  01183E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14621  011840  0EFE               	movlw	high STR_215
 14622  011842  0101               	movlb	1	; () banked
 14623  011844  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14624  011846  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 14625                           
 14626                           ;StringCommand.c: 553: LCD_Scroll("Commands:");
 14627  01184A  0E36               	movlw	low STR_178
 14628  01184C  0101               	movlb	1	; () banked
 14629  01184E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14630  011850  0EFE               	movlw	high STR_178
 14631  011852  0101               	movlb	1	; () banked
 14632  011854  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14633  011856  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 14634                           
 14635                           ;StringCommand.c: 554: LCD_Scroll("0");
 14636  01185A  0E37               	movlw	low (STR_188+12)
 14637  01185C  0101               	movlb	1	; () banked
 14638  01185E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14639  011860  0EFC               	movlw	high (STR_188+12)
 14640  011862  0101               	movlb	1	; () banked
 14641  011864  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14642  011866  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 14643                           
 14644                           ;StringCommand.c: 555: }
 14645                           ;StringCommand.c: 556: }
 14646  01186A  EF7C  F093         	goto	l685
 14647  01186E                     l14363:
 14648                           
 14649                           ;StringCommand.c: 558: else if (StartsWith(Input, "rtc"))
 14650  01186E  C1CA  F17C         	movff	Command@Input,StartsWith@This
 14651  011872  C1CB  F17D         	movff	Command@Input+1,StartsWith@This+1
 14652  011876  0EE4               	movlw	low STR_218
 14653  011878  0101               	movlb	1	; () banked
 14654  01187A  6F7E               	movwf	StartsWith@That& (0+255),b
 14655  01187C  0EFF               	movlw	high STR_218
 14656  01187E  0101               	movlb	1	; () banked
 14657  011880  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 14658  011882  ECD5  F0B5         	call	_StartsWith	;wreg free
 14659  011886  0900               	iorlw	0
 14660  011888  B4D8               	btfsc	status,2,c
 14661  01188A  D2B1               	goto	l14459
 14662                           
 14663                           ;StringCommand.c: 559: {
 14664                           ;StringCommand.c: 560: if (!StringContains(Input, "?"))
 14665  01188C  C1CA  F17C         	movff	Command@Input,StringContains@This
 14666  011890  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 14667  011894  0E17               	movlw	low (STR_83+14)
 14668  011896  0101               	movlb	1	; () banked
 14669  011898  6F7E               	movwf	StringContains@That& (0+255),b
 14670  01189A  0EFA               	movlw	high (STR_83+14)
 14671  01189C  0101               	movlb	1	; () banked
 14672  01189E  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14673  0118A0  EC34  F0B7         	call	_StringContains	;wreg free
 14674  0118A4  0900               	iorlw	0
 14675  0118A6  A4D8               	btfss	status,2,c
 14676  0118A8  D238               	goto	l14447
 14677                           
 14678                           ;StringCommand.c: 561: {
 14679                           ;StringCommand.c: 562: if (StringContains(Input, "battery"))
 14680  0118AA  C1CA  F17C         	movff	Command@Input,StringContains@This
 14681  0118AE  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 14682  0118B2  0E4A               	movlw	low STR_220
 14683  0118B4  0101               	movlb	1	; () banked
 14684  0118B6  6F7E               	movwf	StringContains@That& (0+255),b
 14685  0118B8  0EFF               	movlw	high STR_220
 14686  0118BA  0101               	movlb	1	; () banked
 14687  0118BC  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14688  0118BE  EC34  F0B7         	call	_StringContains	;wreg free
 14689  0118C2  0900               	iorlw	0
 14690  0118C4  B4D8               	btfsc	status,2,c
 14691  0118C6  D0C2               	goto	l14385
 14692                           
 14693                           ;StringCommand.c: 563: {
 14694                           ;StringCommand.c: 564: RTC_Battery_Value = (InternalADC_Read(2) + 8);
 14695  0118C8  0E02               	movlw	2
 14696  0118CA  ECA3  F0BA         	call	_InternalADC_Read
 14697  0118CE  0E08               	movlw	8
 14698  0118D0  0101               	movlb	1	; () banked
 14699  0118D2  258B               	addwf	?_InternalADC_Read& (0+255),w,b
 14700  0118D4  0105               	movlb	5	; () banked
 14701  0118D6  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 14702  0118D8  0E00               	movlw	0
 14703  0118DA  0101               	movlb	1	; () banked
 14704  0118DC  218C               	addwfc	(?_InternalADC_Read+1)& (0+255),w,b
 14705  0118DE  0105               	movlb	5	; () banked
 14706  0118E0  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 14707                           
 14708                           ; BSR set to: 5
 14709                           ;StringCommand.c: 565: RTC_Battery_Value_HIGH_decimal = (unsigned int)(((float)RTC_Batte
      +                          ry_Value / 1024) * 5);
 14710  0118E2  0E00               	movlw	0
 14711  0118E4  0101               	movlb	1	; () banked
 14712  0118E6  6F9A               	movwf	___ftmul@f2& (0+255),b
 14713  0118E8  0EA0               	movlw	160
 14714  0118EA  0101               	movlb	1	; () banked
 14715  0118EC  6F9B               	movwf	(___ftmul@f2+1)& (0+255),b
 14716  0118EE  0E40               	movlw	64
 14717  0118F0  0101               	movlb	1	; () banked
 14718  0118F2  6F9C               	movwf	(___ftmul@f2+2)& (0+255),b
 14719  0118F4  0E00               	movlw	0
 14720  0118F6  0101               	movlb	1	; () banked
 14721  0118F8  6F8B               	movwf	___ftdiv@f2& (0+255),b
 14722  0118FA  0E80               	movlw	128
 14723  0118FC  0101               	movlb	1	; () banked
 14724  0118FE  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 14725  011900  0E44               	movlw	68
 14726  011902  0101               	movlb	1	; () banked
 14727  011904  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 14728  011906  C5CA  F184         	movff	Command@RTC_Battery_Value,___lwtoft@c
 14729  01190A  C5CB  F185         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 14730  01190E  ECCE  F0BE         	call	___lwtoft	;wreg free
 14731  011912  C184  F188         	movff	?___lwtoft,___ftdiv@f1
 14732  011916  C185  F189         	movff	?___lwtoft+1,___ftdiv@f1+1
 14733  01191A  C186  F18A         	movff	?___lwtoft+2,___ftdiv@f1+2
 14734  01191E  ECD2  F0AA         	call	___ftdiv	;wreg free
 14735  011922  C188  F197         	movff	?___ftdiv,___ftmul@f1
 14736  011926  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 14737  01192A  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 14738  01192E  ECC7  F0A8         	call	___ftmul	;wreg free
 14739  011932  C197  F1A6         	movff	?___ftmul,___fttol@f1
 14740  011936  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 14741  01193A  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 14742  01193E  EC29  F0AA         	call	___fttol	;wreg free
 14743  011942  C1A6  F5CC         	movff	?___fttol,Command@RTC_Battery_Value_HIGH_decimal
 14744  011946  C1A7  F5CD         	movff	?___fttol+1,Command@RTC_Battery_Value_HIGH_decimal+1
 14745                           
 14746                           ;StringCommand.c: 566: RTC_Battery_Value_LOW_decimal = (unsigned int)((((float)RTC_Batte
      +                          ry_Value / 1024) * 500));
 14747  01194A  0E00               	movlw	0
 14748  01194C  0101               	movlb	1	; () banked
 14749  01194E  6F9A               	movwf	___ftmul@f2& (0+255),b
 14750  011950  0EFA               	movlw	250
 14751  011952  0101               	movlb	1	; () banked
 14752  011954  6F9B               	movwf	(___ftmul@f2+1)& (0+255),b
 14753  011956  0E43               	movlw	67
 14754  011958  0101               	movlb	1	; () banked
 14755  01195A  6F9C               	movwf	(___ftmul@f2+2)& (0+255),b
 14756  01195C  0E00               	movlw	0
 14757  01195E  0101               	movlb	1	; () banked
 14758  011960  6F8B               	movwf	___ftdiv@f2& (0+255),b
 14759  011962  0E80               	movlw	128
 14760  011964  0101               	movlb	1	; () banked
 14761  011966  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 14762  011968  0E44               	movlw	68
 14763  01196A  0101               	movlb	1	; () banked
 14764  01196C  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 14765  01196E  C5CA  F184         	movff	Command@RTC_Battery_Value,___lwtoft@c
 14766  011972  C5CB  F185         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 14767  011976  ECCE  F0BE         	call	___lwtoft	;wreg free
 14768  01197A  C184  F188         	movff	?___lwtoft,___ftdiv@f1
 14769  01197E  C185  F189         	movff	?___lwtoft+1,___ftdiv@f1+1
 14770  011982  C186  F18A         	movff	?___lwtoft+2,___ftdiv@f1+2
 14771  011986  ECD2  F0AA         	call	___ftdiv	;wreg free
 14772  01198A  C188  F197         	movff	?___ftdiv,___ftmul@f1
 14773  01198E  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 14774  011992  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 14775  011996  ECC7  F0A8         	call	___ftmul	;wreg free
 14776  01199A  C197  F1A6         	movff	?___ftmul,___fttol@f1
 14777  01199E  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 14778  0119A2  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 14779  0119A6  EC29  F0AA         	call	___fttol	;wreg free
 14780  0119AA  C1A6  F5D2         	movff	?___fttol,Command@RTC_Battery_Value_LOW_decimal
 14781  0119AE  C1A7  F5D3         	movff	?___fttol+1,Command@RTC_Battery_Value_LOW_decimal+1
 14782                           
 14783                           ;StringCommand.c: 567: RTC_Battery_Value_LOW_decimal = RTC_Battery_Value_LOW_decimal % 1
      +                          00;
 14784  0119B2  C5D2  F17C         	movff	Command@RTC_Battery_Value_LOW_decimal,___lwmod@dividend
 14785  0119B6  C5D3  F17D         	movff	Command@RTC_Battery_Value_LOW_decimal+1,___lwmod@dividend+1
 14786  0119BA  0E00               	movlw	0
 14787  0119BC  0101               	movlb	1	; () banked
 14788  0119BE  6F7F               	movwf	(___lwmod@divisor+1)& (0+255),b
 14789  0119C0  0E64               	movlw	100
 14790  0119C2  6F7E               	movwf	___lwmod@divisor& (0+255),b
 14791  0119C4  ECCC  F0B9         	call	___lwmod	;wreg free
 14792  0119C8  C17C  F5D2         	movff	?___lwmod,Command@RTC_Battery_Value_LOW_decimal
 14793  0119CC  C17D  F5D3         	movff	?___lwmod+1,Command@RTC_Battery_Value_LOW_decimal+1
 14794                           
 14795                           ;StringCommand.c: 568: sprintf(buf, " 3 Volt RTC Battery Voltage = %d.%d",
 14796                           ;StringCommand.c: 569: RTC_Battery_Value_HIGH_decimal, RTC_Battery_Value_LOW_decimal);
 14797  0119D0  0E00               	movlw	low Command@buf
 14798  0119D2  0101               	movlb	1	; () banked
 14799  0119D4  6F92               	movwf	sprintf@sp& (0+255),b
 14800  0119D6  0E05               	movlw	high Command@buf
 14801  0119D8  0101               	movlb	1	; () banked
 14802  0119DA  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14803  0119DC  0EF0               	movlw	low STR_221
 14804  0119DE  0101               	movlb	1	; () banked
 14805  0119E0  6F94               	movwf	sprintf@f& (0+255),b
 14806  0119E2  0EF2               	movlw	high STR_221
 14807  0119E4  0101               	movlb	1	; () banked
 14808  0119E6  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14809  0119E8  C5CC  F196         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 14810  0119EC  C5CD  F197         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 14811  0119F0  C5D2  F198         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 14812  0119F4  C5D3  F199         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 14813  0119F8  EC87  F093         	call	_sprintf	;wreg free
 14814                           
 14815                           ;StringCommand.c: 570: UARTstring(buf);
 14816  0119FC  0E00               	movlw	low Command@buf
 14817  0119FE  0101               	movlb	1	; () banked
 14818  011A00  6F87               	movwf	UARTstring@data& (0+255),b
 14819  011A02  0E05               	movlw	high Command@buf
 14820  011A04  0101               	movlb	1	; () banked
 14821  011A06  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14822  011A08  ECEB  F0B4         	call	_UARTstring	;wreg free
 14823                           
 14824                           ;StringCommand.c: 571: sprintf(buf, "RTC Bty = %d.%d", RTC_Battery_Value_HIGH_decimal,
 14825                           ;StringCommand.c: 572: RTC_Battery_Value_LOW_decimal);
 14826  011A0C  0E00               	movlw	low Command@buf
 14827  011A0E  0101               	movlb	1	; () banked
 14828  011A10  6F92               	movwf	sprintf@sp& (0+255),b
 14829  011A12  0E05               	movlw	high Command@buf
 14830  011A14  0101               	movlb	1	; () banked
 14831  011A16  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14832  011A18  0E99               	movlw	low STR_222
 14833  011A1A  0101               	movlb	1	; () banked
 14834  011A1C  6F94               	movwf	sprintf@f& (0+255),b
 14835  011A1E  0EFA               	movlw	high STR_222
 14836  011A20  0101               	movlb	1	; () banked
 14837  011A22  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14838  011A24  C5CC  F196         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 14839  011A28  C5CD  F197         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 14840  011A2C  C5D2  F198         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 14841  011A30  C5D3  F199         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 14842  011A34  EC87  F093         	call	_sprintf	;wreg free
 14843                           
 14844                           ;StringCommand.c: 573: LCDdisplayFeedback(buf);
 14845  011A38  0E00               	movlw	low Command@buf
 14846  011A3A  0101               	movlb	1	; () banked
 14847  011A3C  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14848  011A3E  0E05               	movlw	high Command@buf
 14849  011A40  0101               	movlb	1	; () banked
 14850  011A42  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14851  011A44  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 14852                           
 14853                           ;StringCommand.c: 574: }
 14854  011A48  EF7C  F093         	goto	l685
 14855  011A4C                     l14385:
 14856                           
 14857                           ;StringCommand.c: 575: else if(StringContains(Input, "read"))
 14858  011A4C  C1CA  F17C         	movff	Command@Input,StringContains@This
 14859  011A50  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 14860  011A54  0EDB               	movlw	low STR_223
 14861  011A56  0101               	movlb	1	; () banked
 14862  011A58  6F7E               	movwf	StringContains@That& (0+255),b
 14863  011A5A  0EFF               	movlw	high STR_223
 14864  011A5C  0101               	movlb	1	; () banked
 14865  011A5E  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14866  011A60  EC34  F0B7         	call	_StringContains	;wreg free
 14867  011A64  0900               	iorlw	0
 14868  011A66  B4D8               	btfsc	status,2,c
 14869  011A68  D0A8               	goto	l14417
 14870                           
 14871                           ;StringCommand.c: 576: {
 14872                           ;StringCommand.c: 577: if(!READ_RTC_TIME())
 14873  011A6A  EC3B  F0AF         	call	_READ_RTC_TIME	;wreg free
 14874  011A6E  0900               	iorlw	0
 14875  011A70  A4D8               	btfss	status,2,c
 14876  011A72  D08B               	goto	l14409
 14877                           
 14878                           ;StringCommand.c: 578: {
 14879                           ;StringCommand.c: 579: SprintDate(buf, NowTime, 0);
 14880  011A74  0E00               	movlw	low Command@buf
 14881  011A76  0101               	movlb	1	; () banked
 14882  011A78  6FBE               	movwf	SprintDate@ReturnBuf& (0+255),b
 14883  011A7A  0E05               	movlw	high Command@buf
 14884  011A7C  0101               	movlb	1	; () banked
 14885  011A7E  6FBF               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 14886  011A80  EE21  F000         	lfsr	2,_NowTime
 14887  011A84  EE01  F0C0         	lfsr	0,SprintDate@DisplayTime
 14888  011A88  0E08               	movlw	8
 14889  011A8A                     u18781:
 14890  011A8A  CFDB FFEB          	movff	plusw2,plusw0
 14891  011A8E  06E8               	decf	wreg,f,c
 14892  011A90  E2FC               	bc	u18781
 14893  011A92  0E00               	movlw	0
 14894  011A94  0101               	movlb	1	; () banked
 14895  011A96  6FC9               	movwf	SprintDate@Military& (0+255),b
 14896  011A98  EC4A  F0AE         	call	_SprintDate	;wreg free
 14897                           
 14898                           ;StringCommand.c: 580: UARTstring(buf);
 14899  011A9C  0E00               	movlw	low Command@buf
 14900  011A9E  0101               	movlb	1	; () banked
 14901  011AA0  6F87               	movwf	UARTstring@data& (0+255),b
 14902  011AA2  0E05               	movlw	high Command@buf
 14903  011AA4  0101               	movlb	1	; () banked
 14904  011AA6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14905  011AA8  ECEB  F0B4         	call	_UARTstring	;wreg free
 14906                           
 14907                           ;StringCommand.c: 581: UARTstring("\r\n");
 14908  011AAC  0ECE               	movlw	low (STR_282+19)
 14909  011AAE  0101               	movlb	1	; () banked
 14910  011AB0  6F87               	movwf	UARTstring@data& (0+255),b
 14911  011AB2  0EF6               	movlw	high (STR_282+19)
 14912  011AB4  0101               	movlb	1	; () banked
 14913  011AB6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14914  011AB8  ECEB  F0B4         	call	_UARTstring	;wreg free
 14915                           
 14916                           ;StringCommand.c: 582: SetLCDcursor(0, 0);
 14917  011ABC  0E00               	movlw	0
 14918  011ABE  0101               	movlb	1	; () banked
 14919  011AC0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 14920  011AC2  0E00               	movlw	0
 14921  011AC4  EC60  F0BD         	call	_SetLCDcursor
 14922                           
 14923                           ;StringCommand.c: 583: LCDPrintString("RTC Time is:    ");
 14924  011AC8  0E3F               	movlw	low STR_225
 14925  011ACA  0101               	movlb	1	; () banked
 14926  011ACC  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 14927  011ACE  0EF9               	movlw	high STR_225
 14928  011AD0  0101               	movlb	1	; () banked
 14929  011AD2  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14930  011AD4  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 14931                           
 14932                           ;StringCommand.c: 584: if(NowTime.HoursAM_PM)
 14933  011AD8  0101               	movlb	1	; () banked
 14934  011ADA  5104               	movf	(_NowTime+4)& (0+255),w,b
 14935  011ADC  B4D8               	btfsc	status,2,c
 14936  011ADE  D023               	goto	l14403
 14937                           
 14938                           ; BSR set to: 1
 14939                           ;StringCommand.c: 585: {
 14940                           ;StringCommand.c: 586: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 14941  011AE0  0E00               	movlw	low Command@buf
 14942  011AE2  0101               	movlb	1	; () banked
 14943  011AE4  6F92               	movwf	sprintf@sp& (0+255),b
 14944  011AE6  0E05               	movlw	high Command@buf
 14945  011AE8  0101               	movlb	1	; () banked
 14946  011AEA  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14947  011AEC  0EA4               	movlw	low STR_226
 14948  011AEE  0101               	movlb	1	; () banked
 14949  011AF0  6F94               	movwf	sprintf@f& (0+255),b
 14950  011AF2  0EF6               	movlw	high STR_226
 14951  011AF4  0101               	movlb	1	; () banked
 14952  011AF6  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14953  011AF8  C107  F196         	movff	_NowTime+7,?_sprintf+4
 14954  011AFC  0101               	movlb	1	; () banked
 14955  011AFE  6B97               	clrf	(?_sprintf+5)& (0+255),b
 14956  011B00  C106  F198         	movff	_NowTime+6,?_sprintf+6
 14957  011B04  0101               	movlb	1	; () banked
 14958  011B06  6B99               	clrf	(?_sprintf+7)& (0+255),b
 14959  011B08  C102  F19A         	movff	_NowTime+2,?_sprintf+8
 14960  011B0C  0101               	movlb	1	; () banked
 14961  011B0E  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 14962  011B10  C101  F19C         	movff	_NowTime+1,?_sprintf+10
 14963  011B14  0101               	movlb	1	; () banked
 14964  011B16  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 14965  011B18  C100  F19E         	movff	_NowTime,?_sprintf+12
 14966  011B1C  0101               	movlb	1	; () banked
 14967  011B1E  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 14968  011B20  EC87  F093         	call	_sprintf	;wreg free
 14969                           
 14970                           ;StringCommand.c: 587: }
 14971  011B24  D023               	goto	l14405
 14972  011B26                     l14403:
 14973                           
 14974                           ;StringCommand.c: 588: else
 14975                           ;StringCommand.c: 589: {
 14976                           ;StringCommand.c: 590: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 14977  011B26  0E00               	movlw	low Command@buf
 14978  011B28  0101               	movlb	1	; () banked
 14979  011B2A  6F92               	movwf	sprintf@sp& (0+255),b
 14980  011B2C  0E05               	movlw	high Command@buf
 14981  011B2E  0101               	movlb	1	; () banked
 14982  011B30  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14983  011B32  0E8D               	movlw	low STR_227
 14984  011B34  0101               	movlb	1	; () banked
 14985  011B36  6F94               	movwf	sprintf@f& (0+255),b
 14986  011B38  0EF6               	movlw	high STR_227
 14987  011B3A  0101               	movlb	1	; () banked
 14988  011B3C  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14989  011B3E  C107  F196         	movff	_NowTime+7,?_sprintf+4
 14990  011B42  0101               	movlb	1	; () banked
 14991  011B44  6B97               	clrf	(?_sprintf+5)& (0+255),b
 14992  011B46  C106  F198         	movff	_NowTime+6,?_sprintf+6
 14993  011B4A  0101               	movlb	1	; () banked
 14994  011B4C  6B99               	clrf	(?_sprintf+7)& (0+255),b
 14995  011B4E  C102  F19A         	movff	_NowTime+2,?_sprintf+8
 14996  011B52  0101               	movlb	1	; () banked
 14997  011B54  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 14998  011B56  C101  F19C         	movff	_NowTime+1,?_sprintf+10
 14999  011B5A  0101               	movlb	1	; () banked
 15000  011B5C  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 15001  011B5E  C100  F19E         	movff	_NowTime,?_sprintf+12
 15002  011B62  0101               	movlb	1	; () banked
 15003  011B64  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 15004  011B66  EC87  F093         	call	_sprintf	;wreg free
 15005  011B6A  D000               	goto	l14405
 15006  011B6C                     l14405:
 15007                           
 15008                           ;StringCommand.c: 591: }
 15009                           ;StringCommand.c: 592: SetLCDcursor(1, 0);
 15010  011B6C  0E00               	movlw	0
 15011  011B6E  0101               	movlb	1	; () banked
 15012  011B70  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 15013  011B72  0E01               	movlw	1
 15014  011B74  EC60  F0BD         	call	_SetLCDcursor
 15015                           
 15016                           ;StringCommand.c: 593: LCDPrintString(buf);
 15017  011B78  0E00               	movlw	low Command@buf
 15018  011B7A  0101               	movlb	1	; () banked
 15019  011B7C  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 15020  011B7E  0E05               	movlw	high Command@buf
 15021  011B80  0101               	movlb	1	; () banked
 15022  011B82  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15023  011B84  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 15024                           
 15025                           ;StringCommand.c: 594: }
 15026  011B88  D3EB               	goto	l14547
 15027  011B8A                     l14409:
 15028                           
 15029                           ;StringCommand.c: 595: else
 15030                           ;StringCommand.c: 596: {
 15031                           ;StringCommand.c: 597: UARTstring("ERROR: Can't Read RTC\r\n");
 15032  011B8A  0E46               	movlw	low STR_228
 15033  011B8C  0101               	movlb	1	; () banked
 15034  011B8E  6F87               	movwf	UARTstring@data& (0+255),b
 15035  011B90  0EF6               	movlw	high STR_228
 15036  011B92  0101               	movlb	1	; () banked
 15037  011B94  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15038  011B96  ECEB  F0B4         	call	_UARTstring	;wreg free
 15039                           
 15040                           ;StringCommand.c: 598: SetLCDcursor(1, 0);
 15041  011B9A  0E00               	movlw	0
 15042  011B9C  0101               	movlb	1	; () banked
 15043  011B9E  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 15044  011BA0  0E01               	movlw	1
 15045  011BA2  EC60  F0BD         	call	_SetLCDcursor
 15046                           
 15047                           ;StringCommand.c: 599: LCDPrintString("RTC isnt working");
 15048  011BA6  0E61               	movlw	low STR_229
 15049  011BA8  0101               	movlb	1	; () banked
 15050  011BAA  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 15051  011BAC  0EF9               	movlw	high STR_229
 15052  011BAE  0101               	movlb	1	; () banked
 15053  011BB0  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15054  011BB2  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 15055  011BB6  D3D4               	goto	l14547
 15056  011BB8  D3D3               	goto	l14547
 15057  011BBA                     l14417:
 15058                           
 15059                           ;StringCommand.c: 603: else if(StringContains(Input, "set"))
 15060  011BBA  C1CA  F17C         	movff	Command@Input,StringContains@This
 15061  011BBE  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 15062  011BC2  0EF8               	movlw	low STR_230
 15063  011BC4  0101               	movlb	1	; () banked
 15064  011BC6  6F7E               	movwf	StringContains@That& (0+255),b
 15065  011BC8  0EFF               	movlw	high STR_230
 15066  011BCA  0101               	movlb	1	; () banked
 15067  011BCC  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 15068  011BCE  EC34  F0B7         	call	_StringContains	;wreg free
 15069  011BD2  0900               	iorlw	0
 15070  011BD4  B4D8               	btfsc	status,2,c
 15071  011BD6  D097               	goto	l14445
 15072                           
 15073                           ;StringCommand.c: 604: {
 15074                           ;StringCommand.c: 605: UARTstring("Enter Time MM/DD/YY HH:MM:SS AM or\r\n");
 15075  011BD8  0ECB               	movlw	low STR_231
 15076  011BDA  0101               	movlb	1	; () banked
 15077  011BDC  6F87               	movwf	UARTstring@data& (0+255),b
 15078  011BDE  0EF2               	movlw	high STR_231
 15079  011BE0  0101               	movlb	1	; () banked
 15080  011BE2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15081  011BE4  ECEB  F0B4         	call	_UARTstring	;wreg free
 15082                           
 15083                           ;StringCommand.c: 606: UARTstring("Enter Time MM/DD/YY HH:MM:SS PM\r\n");
 15084  011BE8  0E5A               	movlw	low STR_232
 15085  011BEA  0101               	movlb	1	; () banked
 15086  011BEC  6F87               	movwf	UARTstring@data& (0+255),b
 15087  011BEE  0EF3               	movlw	high STR_232
 15088  011BF0  0101               	movlb	1	; () banked
 15089  011BF2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15090  011BF4  ECEB  F0B4         	call	_UARTstring	;wreg free
 15091                           
 15092                           ;StringCommand.c: 607: cleanBuffer(Input, 100);
 15093  011BF8  C1CA  F17C         	movff	Command@Input,cleanBuffer@data
 15094  011BFC  C1CB  F17D         	movff	Command@Input+1,cleanBuffer@data+1
 15095  011C00  0E00               	movlw	0
 15096  011C02  0101               	movlb	1	; () banked
 15097  011C04  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 15098  011C06  0E64               	movlw	100
 15099  011C08  6F7E               	movwf	cleanBuffer@count& (0+255),b
 15100  011C0A  ECCB  F0BB         	call	_cleanBuffer	;wreg free
 15101                           
 15102                           ;StringCommand.c: 608: UARTstring(">");
 15103  011C0E  0ED1               	movlw	low (STR_21+27)
 15104  011C10  0101               	movlb	1	; () banked
 15105  011C12  6F87               	movwf	UARTstring@data& (0+255),b
 15106  011C14  0EF4               	movlw	high (STR_21+27)
 15107  011C16  0101               	movlb	1	; () banked
 15108  011C18  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15109  011C1A  ECEB  F0B4         	call	_UARTstring	;wreg free
 15110  011C1E  D000               	goto	l14425
 15111  011C20                     l14425:
 15112                           
 15113                           ;StringCommand.c: 610: {
 15114                           ;StringCommand.c: 611: if(Input[0] != 0)
 15115  011C20  C1CA  FFD9         	movff	Command@Input,fsr2l
 15116  011C24  C1CB  FFDA         	movff	Command@Input+1,fsr2h
 15117  011C28  50DF               	movf	indf2,w,c
 15118  011C2A  B4D8               	btfsc	status,2,c
 15119  011C2C  D7F9               	goto	l14425
 15120                           
 15121                           ;StringCommand.c: 612: {
 15122                           ;StringCommand.c: 613: lowercase(Input);
 15123  011C2E  C1CA  F17C         	movff	Command@Input,lowercase@Input
 15124  011C32  C1CB  F17D         	movff	Command@Input+1,lowercase@Input+1
 15125  011C36  EC66  F0B6         	call	_lowercase	;wreg free
 15126                           
 15127                           ;StringCommand.c: 614: if(Parse_Time(Input))
 15128  011C3A  C1CA  F17C         	movff	Command@Input,Parse_Time@This
 15129  011C3E  C1CB  F17D         	movff	Command@Input+1,Parse_Time@This+1
 15130  011C42  EC40  F09C         	call	_Parse_Time	;wreg free
 15131  011C46  0900               	iorlw	0
 15132  011C48  B4D8               	btfsc	status,2,c
 15133  011C4A  D048               	goto	l14443
 15134                           
 15135                           ;StringCommand.c: 615: {
 15136                           ;StringCommand.c: 616: if(!SET_RTC_TIME(NowTime))
 15137  011C4C  EE21  F000         	lfsr	2,_NowTime
 15138  011C50  EE01  F084         	lfsr	0,SET_RTC_TIME@SetTime
 15139  011C54  0E08               	movlw	8
 15140  011C56                     u18831:
 15141  011C56  CFDB FFEB          	movff	plusw2,plusw0
 15142  011C5A  06E8               	decf	wreg,f,c
 15143  011C5C  E2FC               	bc	u18831
 15144  011C5E  ECAF  F0A2         	call	_SET_RTC_TIME	;wreg free
 15145  011C62  0900               	iorlw	0
 15146  011C64  A4D8               	btfss	status,2,c
 15147  011C66  D030               	goto	l14441
 15148                           
 15149                           ;StringCommand.c: 617: {
 15150                           ;StringCommand.c: 618: UARTstring("\r\nTime Set Successfully\r\n");
 15151  011C68  0EC9               	movlw	low STR_234
 15152  011C6A  0101               	movlb	1	; () banked
 15153  011C6C  6F87               	movwf	UARTstring@data& (0+255),b
 15154  011C6E  0EF5               	movlw	high STR_234
 15155  011C70  0101               	movlb	1	; () banked
 15156  011C72  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15157  011C74  ECEB  F0B4         	call	_UARTstring	;wreg free
 15158                           
 15159                           ;StringCommand.c: 619: READ_RTC_TIME();
 15160  011C78  EC3B  F0AF         	call	_READ_RTC_TIME	;wreg free
 15161                           
 15162                           ;StringCommand.c: 620: SprintDate(buf, NowTime, 0);
 15163  011C7C  0E00               	movlw	low Command@buf
 15164  011C7E  0101               	movlb	1	; () banked
 15165  011C80  6FBE               	movwf	SprintDate@ReturnBuf& (0+255),b
 15166  011C82  0E05               	movlw	high Command@buf
 15167  011C84  0101               	movlb	1	; () banked
 15168  011C86  6FBF               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 15169  011C88  EE21  F000         	lfsr	2,_NowTime
 15170  011C8C  EE01  F0C0         	lfsr	0,SprintDate@DisplayTime
 15171  011C90  0E08               	movlw	8
 15172  011C92                     u18851:
 15173  011C92  CFDB FFEB          	movff	plusw2,plusw0
 15174  011C96  06E8               	decf	wreg,f,c
 15175  011C98  E2FC               	bc	u18851
 15176  011C9A  0E00               	movlw	0
 15177  011C9C  0101               	movlb	1	; () banked
 15178  011C9E  6FC9               	movwf	SprintDate@Military& (0+255),b
 15179  011CA0  EC4A  F0AE         	call	_SprintDate	;wreg free
 15180                           
 15181                           ;StringCommand.c: 621: UARTstring(buf);
 15182  011CA4  0E00               	movlw	low Command@buf
 15183  011CA6  0101               	movlb	1	; () banked
 15184  011CA8  6F87               	movwf	UARTstring@data& (0+255),b
 15185  011CAA  0E05               	movlw	high Command@buf
 15186  011CAC  0101               	movlb	1	; () banked
 15187  011CAE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15188  011CB0  ECEB  F0B4         	call	_UARTstring	;wreg free
 15189                           
 15190                           ;StringCommand.c: 622: UARTstring("\r\n");
 15191  011CB4  0ECE               	movlw	low (STR_282+19)
 15192  011CB6  0101               	movlb	1	; () banked
 15193  011CB8  6F87               	movwf	UARTstring@data& (0+255),b
 15194  011CBA  0EF6               	movlw	high (STR_282+19)
 15195  011CBC  0101               	movlb	1	; () banked
 15196  011CBE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15197  011CC0  ECEB  F0B4         	call	_UARTstring	;wreg free
 15198                           
 15199                           ;StringCommand.c: 623: }
 15200  011CC4  EF7C  F093         	goto	l685
 15201  011CC8                     l14441:
 15202                           
 15203                           ;StringCommand.c: 624: else
 15204                           ;StringCommand.c: 625: {
 15205                           ;StringCommand.c: 626: UARTstring("\r\nTime Not Set Successfully");
 15206  011CC8  0E43               	movlw	low STR_236
 15207  011CCA  0101               	movlb	1	; () banked
 15208  011CCC  6F87               	movwf	UARTstring@data& (0+255),b
 15209  011CCE  0EF5               	movlw	high STR_236
 15210  011CD0  0101               	movlb	1	; () banked
 15211  011CD2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15212  011CD4  ECEB  F0B4         	call	_UARTstring	;wreg free
 15213                           
 15214                           ;StringCommand.c: 627: }
 15215                           ;StringCommand.c: 628: }
 15216  011CD8  EF7C  F093         	goto	l685
 15217  011CDC                     l14443:
 15218                           
 15219                           ;StringCommand.c: 629: else
 15220                           ;StringCommand.c: 630: {
 15221                           ;StringCommand.c: 631: UARTstring("\r\nInvalid Time Entered\r\n");
 15222  011CDC  0EFC               	movlw	low STR_237
 15223  011CDE  0101               	movlb	1	; () banked
 15224  011CE0  6F87               	movwf	UARTstring@data& (0+255),b
 15225  011CE2  0EF5               	movlw	high STR_237
 15226  011CE4  0101               	movlb	1	; () banked
 15227  011CE6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15228  011CE8  ECEB  F0B4         	call	_UARTstring	;wreg free
 15229                           
 15230                           ;StringCommand.c: 632: UARTstring("Format is MM/DD/YY HH:MM:SS AM\r\n");
 15231  011CEC  0E9D               	movlw	low STR_238
 15232  011CEE  0101               	movlb	1	; () banked
 15233  011CF0  6F87               	movwf	UARTstring@data& (0+255),b
 15234  011CF2  0EF3               	movlw	high STR_238
 15235  011CF4  0101               	movlb	1	; () banked
 15236  011CF6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15237  011CF8  ECEB  F0B4         	call	_UARTstring	;wreg free
 15238                           
 15239                           ;StringCommand.c: 633: }
 15240                           ;StringCommand.c: 634: break;
 15241  011CFC  EF7C  F093         	goto	l685
 15242  011D00  D78F               	goto	l14425
 15243                           
 15244                           ;StringCommand.c: 635: }
 15245                           ;StringCommand.c: 636: }
 15246                           ;StringCommand.c: 637: }
 15247  011D02  EF7C  F093         	goto	l685
 15248  011D06                     l14445:
 15249                           
 15250                           ;StringCommand.c: 638: else
 15251                           ;StringCommand.c: 639: {
 15252                           ;StringCommand.c: 640: UARTstring("RTC What???\n");
 15253  011D06  0EED               	movlw	low STR_239
 15254  011D08  0101               	movlb	1	; () banked
 15255  011D0A  6F87               	movwf	UARTstring@data& (0+255),b
 15256  011D0C  0EFC               	movlw	high STR_239
 15257  011D0E  0101               	movlb	1	; () banked
 15258  011D10  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15259  011D12  ECEB  F0B4         	call	_UARTstring	;wreg free
 15260                           
 15261                           ;StringCommand.c: 641: }
 15262                           ;StringCommand.c: 642: }
 15263  011D16  EF7C  F093         	goto	l685
 15264  011D1A                     l14447:
 15265                           
 15266                           ;StringCommand.c: 643: else
 15267                           ;StringCommand.c: 644: {
 15268                           ;StringCommand.c: 645: UARTstring("Real Time Clock Help Menu\r\n\n");
 15269  011D1A  0E7C               	movlw	low STR_240
 15270  011D1C  0101               	movlb	1	; () banked
 15271  011D1E  6F87               	movwf	UARTstring@data& (0+255),b
 15272  011D20  0EF4               	movlw	high STR_240
 15273  011D22  0101               	movlb	1	; () banked
 15274  011D24  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15275  011D26  ECEB  F0B4         	call	_UARTstring	;wreg free
 15276                           
 15277                           ;StringCommand.c: 646: UARTstring("Actions:\r\n");
 15278  011D2A  0EC2               	movlw	low STR_241
 15279  011D2C  0101               	movlb	1	; () banked
 15280  011D2E  6F87               	movwf	UARTstring@data& (0+255),b
 15281  011D30  0EFD               	movlw	high STR_241
 15282  011D32  0101               	movlb	1	; () banked
 15283  011D34  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15284  011D36  ECEB  F0B4         	call	_UARTstring	;wreg free
 15285                           
 15286                           ;StringCommand.c: 647: UARTstring("Battery\r\n");
 15287  011D3A  0E18               	movlw	low STR_242
 15288  011D3C  0101               	movlb	1	; () banked
 15289  011D3E  6F87               	movwf	UARTstring@data& (0+255),b
 15290  011D40  0EFE               	movlw	high STR_242
 15291  011D42  0101               	movlb	1	; () banked
 15292  011D44  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15293  011D46  ECEB  F0B4         	call	_UARTstring	;wreg free
 15294                           
 15295                           ;StringCommand.c: 648: UARTstring("Read\r\n");
 15296  011D4A  0E67               	movlw	low STR_243
 15297  011D4C  0101               	movlb	1	; () banked
 15298  011D4E  6F87               	movwf	UARTstring@data& (0+255),b
 15299  011D50  0EFF               	movlw	high STR_243
 15300  011D52  0101               	movlb	1	; () banked
 15301  011D54  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15302  011D56  ECEB  F0B4         	call	_UARTstring	;wreg free
 15303                           
 15304                           ;StringCommand.c: 649: UARTstring("Set\r\n\n");
 15305  011D5A  0E59               	movlw	low STR_244
 15306  011D5C  0101               	movlb	1	; () banked
 15307  011D5E  6F87               	movwf	UARTstring@data& (0+255),b
 15308  011D60  0EFF               	movlw	high STR_244
 15309  011D62  0101               	movlb	1	; () banked
 15310  011D64  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15311  011D66  ECEB  F0B4         	call	_UARTstring	;wreg free
 15312                           
 15313                           ;StringCommand.c: 650: UARTstring("To command the RTC, type the action\r\n followed by"
 15314                           ;StringCommand.c: 651: " the parameters \r\n\n");
 15315  011D6A  0ED2               	movlw	low STR_245
 15316  011D6C  0101               	movlb	1	; () banked
 15317  011D6E  6F87               	movwf	UARTstring@data& (0+255),b
 15318  011D70  0EEE               	movlw	high STR_245
 15319  011D72  0101               	movlb	1	; () banked
 15320  011D74  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15321  011D76  ECEB  F0B4         	call	_UARTstring	;wreg free
 15322                           
 15323                           ;StringCommand.c: 652: UARTstring("further sub menus available by entering the action an
      +                          d a '?'");
 15324  011D7A  0EDB               	movlw	low STR_246
 15325  011D7C  0101               	movlb	1	; () banked
 15326  011D7E  6F87               	movwf	UARTstring@data& (0+255),b
 15327  011D80  0EEF               	movlw	high STR_246
 15328  011D82  0101               	movlb	1	; () banked
 15329  011D84  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15330  011D86  ECEB  F0B4         	call	_UARTstring	;wreg free
 15331                           
 15332                           ;StringCommand.c: 653: UARTstring("i.e. RTC Set Time?\r\n");
 15333  011D8A  0E28               	movlw	low STR_247
 15334  011D8C  0101               	movlb	1	; () banked
 15335  011D8E  6F87               	movwf	UARTstring@data& (0+255),b
 15336  011D90  0EF7               	movlw	high STR_247
 15337  011D92  0101               	movlb	1	; () banked
 15338  011D94  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15339  011D96  ECEB  F0B4         	call	_UARTstring	;wreg free
 15340                           
 15341                           ;StringCommand.c: 654: LCD_Scroll("RTC Menu");
 15342  011D9A  0ED7               	movlw	low STR_248
 15343  011D9C  0101               	movlb	1	; () banked
 15344  011D9E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15345  011DA0  0EFE               	movlw	high STR_248
 15346  011DA2  0101               	movlb	1	; () banked
 15347  011DA4  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15348  011DA6  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 15349                           
 15350                           ;StringCommand.c: 655: LCD_Scroll("Commands:");
 15351  011DAA  0E36               	movlw	low STR_178
 15352  011DAC  0101               	movlb	1	; () banked
 15353  011DAE  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15354  011DB0  0EFE               	movlw	high STR_178
 15355  011DB2  0101               	movlb	1	; () banked
 15356  011DB4  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15357  011DB6  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 15358                           
 15359                           ;StringCommand.c: 656: LCD_Scroll("Battery");
 15360  011DBA  0E42               	movlw	low STR_250
 15361  011DBC  0101               	movlb	1	; () banked
 15362  011DBE  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15363  011DC0  0EFF               	movlw	high STR_250
 15364  011DC2  0101               	movlb	1	; () banked
 15365  011DC4  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15366  011DC6  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 15367                           
 15368                           ;StringCommand.c: 657: LCD_Scroll("Read");
 15369  011DCA  0ED6               	movlw	low STR_251
 15370  011DCC  0101               	movlb	1	; () banked
 15371  011DCE  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15372  011DD0  0EFF               	movlw	high STR_251
 15373  011DD2  0101               	movlb	1	; () banked
 15374  011DD4  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15375  011DD6  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 15376                           
 15377                           ;StringCommand.c: 658: LCD_Scroll("Set");
 15378  011DDA  0EF4               	movlw	low STR_252
 15379  011DDC  0101               	movlb	1	; () banked
 15380  011DDE  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15381  011DE0  0EFF               	movlw	high STR_252
 15382  011DE2  0101               	movlb	1	; () banked
 15383  011DE4  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15384  011DE6  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 15385                           
 15386                           ;StringCommand.c: 660: }
 15387                           ;StringCommand.c: 661: }
 15388  011DEA  EF7C  F093         	goto	l685
 15389  011DEE                     l14459:
 15390                           
 15391                           ;StringCommand.c: 663: else if (StartsWith(Input, "joe"))
 15392  011DEE  C1CA  F17C         	movff	Command@Input,StartsWith@This
 15393  011DF2  C1CB  F17D         	movff	Command@Input+1,StartsWith@This+1
 15394  011DF6  0EE8               	movlw	low STR_253
 15395  011DF8  0101               	movlb	1	; () banked
 15396  011DFA  6F7E               	movwf	StartsWith@That& (0+255),b
 15397  011DFC  0EFF               	movlw	high STR_253
 15398  011DFE  0101               	movlb	1	; () banked
 15399  011E00  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 15400  011E02  ECD5  F0B5         	call	_StartsWith	;wreg free
 15401  011E06  0900               	iorlw	0
 15402  011E08  B4D8               	btfsc	status,2,c
 15403  011E0A  D147               	goto	l14497
 15404                           
 15405                           ;StringCommand.c: 664: {
 15406                           ;StringCommand.c: 665: if (!StringContains(Input, "?"))
 15407  011E0C  C1CA  F17C         	movff	Command@Input,StringContains@This
 15408  011E10  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 15409  011E14  0E17               	movlw	low (STR_83+14)
 15410  011E16  0101               	movlb	1	; () banked
 15411  011E18  6F7E               	movwf	StringContains@That& (0+255),b
 15412  011E1A  0EFA               	movlw	high (STR_83+14)
 15413  011E1C  0101               	movlb	1	; () banked
 15414  011E1E  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 15415  011E20  EC34  F0B7         	call	_StringContains	;wreg free
 15416  011E24  0900               	iorlw	0
 15417  011E26  A4D8               	btfss	status,2,c
 15418  011E28  D0F7               	goto	l14489
 15419                           
 15420                           ;StringCommand.c: 666: {
 15421                           ;StringCommand.c: 667: if (StringMatch(Input, "joesroomlight=on"))
 15422  011E2A  C1CA  F17C         	movff	Command@Input,StringMatch@This
 15423  011E2E  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 15424  011E32  0E94               	movlw	low STR_255
 15425  011E34  0101               	movlb	1	; () banked
 15426  011E36  6F7E               	movwf	StringMatch@That& (0+255),b
 15427  011E38  0EF9               	movlw	high STR_255
 15428  011E3A  0101               	movlb	1	; () banked
 15429  011E3C  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 15430  011E3E  EC74  F0B7         	call	_StringMatch	;wreg free
 15431  011E42  0900               	iorlw	0
 15432  011E44  B4D8               	btfsc	status,2,c
 15433  011E46  D064               	goto	l14475
 15434                           
 15435                           ;StringCommand.c: 668: {
 15436                           ;StringCommand.c: 669: INTCONbits.GIE = 0;
 15437  011E48  9EF2               	bcf	intcon,7,c	;volatile
 15438                           
 15439                           ;StringCommand.c: 670: Send_Config2(0b00000001, SubLightON);
 15440  011E4A  0E35               	movlw	low _SubLightON
 15441  011E4C  0101               	movlb	1	; () banked
 15442  011E4E  6F87               	movwf	Send_Config2@data& (0+255),b
 15443  011E50  0EEE               	movlw	high _SubLightON
 15444  011E52  0101               	movlb	1	; () banked
 15445  011E54  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15446  011E56  0E01               	movlw	1
 15447  011E58  ECF2  F0B6         	call	_Send_Config2
 15448                           
 15449                           ;StringCommand.c: 671: Send_Config2(0b00000001, SubLightON);
 15450  011E5C  0E35               	movlw	low _SubLightON
 15451  011E5E  0101               	movlb	1	; () banked
 15452  011E60  6F87               	movwf	Send_Config2@data& (0+255),b
 15453  011E62  0EEE               	movlw	high _SubLightON
 15454  011E64  0101               	movlb	1	; () banked
 15455  011E66  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15456  011E68  0E01               	movlw	1
 15457  011E6A  ECF2  F0B6         	call	_Send_Config2
 15458                           
 15459                           ;StringCommand.c: 672: Send_Config2(0b00000001, SubLightON);
 15460  011E6E  0E35               	movlw	low _SubLightON
 15461  011E70  0101               	movlb	1	; () banked
 15462  011E72  6F87               	movwf	Send_Config2@data& (0+255),b
 15463  011E74  0EEE               	movlw	high _SubLightON
 15464  011E76  0101               	movlb	1	; () banked
 15465  011E78  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15466  011E7A  0E01               	movlw	1
 15467  011E7C  ECF2  F0B6         	call	_Send_Config2
 15468                           
 15469                           ;StringCommand.c: 673: Send_Config2(0b00000001, SubLightON);
 15470  011E80  0E35               	movlw	low _SubLightON
 15471  011E82  0101               	movlb	1	; () banked
 15472  011E84  6F87               	movwf	Send_Config2@data& (0+255),b
 15473  011E86  0EEE               	movlw	high _SubLightON
 15474  011E88  0101               	movlb	1	; () banked
 15475  011E8A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15476  011E8C  0E01               	movlw	1
 15477  011E8E  ECF2  F0B6         	call	_Send_Config2
 15478                           
 15479                           ;StringCommand.c: 674: Send_Config2(0b00000001, SubLightON);
 15480  011E92  0E35               	movlw	low _SubLightON
 15481  011E94  0101               	movlb	1	; () banked
 15482  011E96  6F87               	movwf	Send_Config2@data& (0+255),b
 15483  011E98  0EEE               	movlw	high _SubLightON
 15484  011E9A  0101               	movlb	1	; () banked
 15485  011E9C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15486  011E9E  0E01               	movlw	1
 15487  011EA0  ECF2  F0B6         	call	_Send_Config2
 15488                           
 15489                           ;StringCommand.c: 675: Send_Config2(0b00000001, SubLightON);
 15490  011EA4  0E35               	movlw	low _SubLightON
 15491  011EA6  0101               	movlb	1	; () banked
 15492  011EA8  6F87               	movwf	Send_Config2@data& (0+255),b
 15493  011EAA  0EEE               	movlw	high _SubLightON
 15494  011EAC  0101               	movlb	1	; () banked
 15495  011EAE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15496  011EB0  0E01               	movlw	1
 15497  011EB2  ECF2  F0B6         	call	_Send_Config2
 15498                           
 15499                           ;StringCommand.c: 676: Send_Config2(0b00000001, SubLightON);
 15500  011EB6  0E35               	movlw	low _SubLightON
 15501  011EB8  0101               	movlb	1	; () banked
 15502  011EBA  6F87               	movwf	Send_Config2@data& (0+255),b
 15503  011EBC  0EEE               	movlw	high _SubLightON
 15504  011EBE  0101               	movlb	1	; () banked
 15505  011EC0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15506  011EC2  0E01               	movlw	1
 15507  011EC4  ECF2  F0B6         	call	_Send_Config2
 15508                           
 15509                           ;StringCommand.c: 677: Send_Config2(0b00000001, SubLightON);
 15510  011EC8  0E35               	movlw	low _SubLightON
 15511  011ECA  0101               	movlb	1	; () banked
 15512  011ECC  6F87               	movwf	Send_Config2@data& (0+255),b
 15513  011ECE  0EEE               	movlw	high _SubLightON
 15514  011ED0  0101               	movlb	1	; () banked
 15515  011ED2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15516  011ED4  0E01               	movlw	1
 15517  011ED6  ECF2  F0B6         	call	_Send_Config2
 15518                           
 15519                           ;StringCommand.c: 678: Send_Config2(0b00000001, SubLightON);
 15520  011EDA  0E35               	movlw	low _SubLightON
 15521  011EDC  0101               	movlb	1	; () banked
 15522  011EDE  6F87               	movwf	Send_Config2@data& (0+255),b
 15523  011EE0  0EEE               	movlw	high _SubLightON
 15524  011EE2  0101               	movlb	1	; () banked
 15525  011EE4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15526  011EE6  0E01               	movlw	1
 15527  011EE8  ECF2  F0B6         	call	_Send_Config2
 15528                           
 15529                           ;StringCommand.c: 679: INTCONbits.GIE = 1;
 15530  011EEC  8EF2               	bsf	intcon,7,c	;volatile
 15531                           
 15532                           ;StringCommand.c: 680: UARTstring("Joe's room light On");
 15533  011EEE  0E8D               	movlw	low STR_256
 15534  011EF0  0101               	movlb	1	; () banked
 15535  011EF2  6F87               	movwf	UARTstring@data& (0+255),b
 15536  011EF4  0EF7               	movlw	high STR_256
 15537  011EF6  0101               	movlb	1	; () banked
 15538  011EF8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15539  011EFA  ECEB  F0B4         	call	_UARTstring	;wreg free
 15540                           
 15541                           ;StringCommand.c: 681: LCDdisplayFeedback("Joe room lt On");
 15542  011EFE  0EEF               	movlw	low STR_257
 15543  011F00  0101               	movlb	1	; () banked
 15544  011F02  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15545  011F04  0EFB               	movlw	high STR_257
 15546  011F06  0101               	movlb	1	; () banked
 15547  011F08  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15548  011F0A  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 15549                           
 15550                           ;StringCommand.c: 682: }
 15551  011F0E  D3F4               	goto	l685
 15552  011F10                     l14475:
 15553                           
 15554                           ;StringCommand.c: 683: else if (StringMatch(Input, "joesroomlight=off"))
 15555  011F10  C1CA  F17C         	movff	Command@Input,StringMatch@This
 15556  011F14  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 15557  011F18  0E80               	movlw	low STR_258
 15558  011F1A  0101               	movlb	1	; () banked
 15559  011F1C  6F7E               	movwf	StringMatch@That& (0+255),b
 15560  011F1E  0EF8               	movlw	high STR_258
 15561  011F20  0101               	movlb	1	; () banked
 15562  011F22  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 15563  011F24  EC74  F0B7         	call	_StringMatch	;wreg free
 15564  011F28  0900               	iorlw	0
 15565  011F2A  B4D8               	btfsc	status,2,c
 15566  011F2C  D064               	goto	l14487
 15567                           
 15568                           ;StringCommand.c: 684: {
 15569                           ;StringCommand.c: 685: INTCONbits.GIE = 0;
 15570  011F2E  9EF2               	bcf	intcon,7,c	;volatile
 15571                           
 15572                           ;StringCommand.c: 686: Send_Config2(0b00000001, SubLightOFF);
 15573  011F30  0E25               	movlw	low _SubLightOFF
 15574  011F32  0101               	movlb	1	; () banked
 15575  011F34  6F87               	movwf	Send_Config2@data& (0+255),b
 15576  011F36  0EEE               	movlw	high _SubLightOFF
 15577  011F38  0101               	movlb	1	; () banked
 15578  011F3A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15579  011F3C  0E01               	movlw	1
 15580  011F3E  ECF2  F0B6         	call	_Send_Config2
 15581                           
 15582                           ;StringCommand.c: 687: Send_Config2(0b00000001, SubLightOFF);
 15583  011F42  0E25               	movlw	low _SubLightOFF
 15584  011F44  0101               	movlb	1	; () banked
 15585  011F46  6F87               	movwf	Send_Config2@data& (0+255),b
 15586  011F48  0EEE               	movlw	high _SubLightOFF
 15587  011F4A  0101               	movlb	1	; () banked
 15588  011F4C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15589  011F4E  0E01               	movlw	1
 15590  011F50  ECF2  F0B6         	call	_Send_Config2
 15591                           
 15592                           ;StringCommand.c: 688: Send_Config2(0b00000001, SubLightOFF);
 15593  011F54  0E25               	movlw	low _SubLightOFF
 15594  011F56  0101               	movlb	1	; () banked
 15595  011F58  6F87               	movwf	Send_Config2@data& (0+255),b
 15596  011F5A  0EEE               	movlw	high _SubLightOFF
 15597  011F5C  0101               	movlb	1	; () banked
 15598  011F5E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15599  011F60  0E01               	movlw	1
 15600  011F62  ECF2  F0B6         	call	_Send_Config2
 15601                           
 15602                           ;StringCommand.c: 689: Send_Config2(0b00000001, SubLightOFF);
 15603  011F66  0E25               	movlw	low _SubLightOFF
 15604  011F68  0101               	movlb	1	; () banked
 15605  011F6A  6F87               	movwf	Send_Config2@data& (0+255),b
 15606  011F6C  0EEE               	movlw	high _SubLightOFF
 15607  011F6E  0101               	movlb	1	; () banked
 15608  011F70  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15609  011F72  0E01               	movlw	1
 15610  011F74  ECF2  F0B6         	call	_Send_Config2
 15611                           
 15612                           ;StringCommand.c: 690: Send_Config2(0b00000001, SubLightOFF);
 15613  011F78  0E25               	movlw	low _SubLightOFF
 15614  011F7A  0101               	movlb	1	; () banked
 15615  011F7C  6F87               	movwf	Send_Config2@data& (0+255),b
 15616  011F7E  0EEE               	movlw	high _SubLightOFF
 15617  011F80  0101               	movlb	1	; () banked
 15618  011F82  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15619  011F84  0E01               	movlw	1
 15620  011F86  ECF2  F0B6         	call	_Send_Config2
 15621                           
 15622                           ;StringCommand.c: 691: Send_Config2(0b00000001, SubLightOFF);
 15623  011F8A  0E25               	movlw	low _SubLightOFF
 15624  011F8C  0101               	movlb	1	; () banked
 15625  011F8E  6F87               	movwf	Send_Config2@data& (0+255),b
 15626  011F90  0EEE               	movlw	high _SubLightOFF
 15627  011F92  0101               	movlb	1	; () banked
 15628  011F94  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15629  011F96  0E01               	movlw	1
 15630  011F98  ECF2  F0B6         	call	_Send_Config2
 15631                           
 15632                           ;StringCommand.c: 692: Send_Config2(0b00000001, SubLightOFF);
 15633  011F9C  0E25               	movlw	low _SubLightOFF
 15634  011F9E  0101               	movlb	1	; () banked
 15635  011FA0  6F87               	movwf	Send_Config2@data& (0+255),b
 15636  011FA2  0EEE               	movlw	high _SubLightOFF
 15637  011FA4  0101               	movlb	1	; () banked
 15638  011FA6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15639  011FA8  0E01               	movlw	1
 15640  011FAA  ECF2  F0B6         	call	_Send_Config2
 15641                           
 15642                           ;StringCommand.c: 693: Send_Config2(0b00000001, SubLightOFF);
 15643  011FAE  0E25               	movlw	low _SubLightOFF
 15644  011FB0  0101               	movlb	1	; () banked
 15645  011FB2  6F87               	movwf	Send_Config2@data& (0+255),b
 15646  011FB4  0EEE               	movlw	high _SubLightOFF
 15647  011FB6  0101               	movlb	1	; () banked
 15648  011FB8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15649  011FBA  0E01               	movlw	1
 15650  011FBC  ECF2  F0B6         	call	_Send_Config2
 15651                           
 15652                           ;StringCommand.c: 694: Send_Config2(0b00000001, SubLightOFF);
 15653  011FC0  0E25               	movlw	low _SubLightOFF
 15654  011FC2  0101               	movlb	1	; () banked
 15655  011FC4  6F87               	movwf	Send_Config2@data& (0+255),b
 15656  011FC6  0EEE               	movlw	high _SubLightOFF
 15657  011FC8  0101               	movlb	1	; () banked
 15658  011FCA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15659  011FCC  0E01               	movlw	1
 15660  011FCE  ECF2  F0B6         	call	_Send_Config2
 15661                           
 15662                           ;StringCommand.c: 695: INTCONbits.GIE = 1;
 15663  011FD2  8EF2               	bsf	intcon,7,c	;volatile
 15664                           
 15665                           ;StringCommand.c: 696: UARTstring("Joes room light Off");
 15666  011FD4  0E65               	movlw	low STR_259
 15667  011FD6  0101               	movlb	1	; () banked
 15668  011FD8  6F87               	movwf	UARTstring@data& (0+255),b
 15669  011FDA  0EF7               	movlw	high STR_259
 15670  011FDC  0101               	movlb	1	; () banked
 15671  011FDE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15672  011FE0  ECEB  F0B4         	call	_UARTstring	;wreg free
 15673                           
 15674                           ;StringCommand.c: 697: LCDdisplayFeedback("Joe room lt Off");
 15675  011FE4  0EE9               	movlw	low STR_260
 15676  011FE6  0101               	movlb	1	; () banked
 15677  011FE8  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15678  011FEA  0EFA               	movlw	high STR_260
 15679  011FEC  0101               	movlb	1	; () banked
 15680  011FEE  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15681  011FF0  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 15682                           
 15683                           ;StringCommand.c: 698: }
 15684  011FF4  D381               	goto	l685
 15685  011FF6                     l14487:
 15686                           
 15687                           ;StringCommand.c: 699: else
 15688                           ;StringCommand.c: 700: {
 15689                           ;StringCommand.c: 701: UARTstring("Joe's room what???");
 15690  011FF6  0EB4               	movlw	low STR_261
 15691  011FF8  0101               	movlb	1	; () banked
 15692  011FFA  6F87               	movwf	UARTstring@data& (0+255),b
 15693  011FFC  0EF7               	movlw	high STR_261
 15694  011FFE  0101               	movlb	1	; () banked
 15695  012000  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15696  012002  ECEB  F0B4         	call	_UARTstring	;wreg free
 15697                           
 15698                           ;StringCommand.c: 702: LCDdisplayFeedback("Joe room what??");
 15699  012006  0E49               	movlw	low STR_262
 15700  012008  0101               	movlb	1	; () banked
 15701  01200A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15702  01200C  0EFA               	movlw	high STR_262
 15703  01200E  0101               	movlb	1	; () banked
 15704  012010  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15705  012012  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 15706                           
 15707                           ;StringCommand.c: 703: }
 15708                           ;StringCommand.c: 704: }
 15709  012016  D370               	goto	l685
 15710  012018                     l14489:
 15711                           
 15712                           ;StringCommand.c: 705: else
 15713                           ;StringCommand.c: 706: {
 15714                           ;StringCommand.c: 707: UARTstring("Joes Room Help Menu\r\n\n");
 15715  012018  0E76               	movlw	low STR_263
 15716  01201A  0101               	movlb	1	; () banked
 15717  01201C  6F87               	movwf	UARTstring@data& (0+255),b
 15718  01201E  0EF6               	movlw	high STR_263
 15719  012020  0101               	movlb	1	; () banked
 15720  012022  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15721  012024  ECEB  F0B4         	call	_UARTstring	;wreg free
 15722                           
 15723                           ;StringCommand.c: 708: UARTstring("Devices:\r\n");
 15724  012028  0EB7               	movlw	low STR_61
 15725  01202A  0101               	movlb	1	; () banked
 15726  01202C  6F87               	movwf	UARTstring@data& (0+255),b
 15727  01202E  0EFD               	movlw	high STR_61
 15728  012030  0101               	movlb	1	; () banked
 15729  012032  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15730  012034  ECEB  F0B4         	call	_UARTstring	;wreg free
 15731                           
 15732                           ;StringCommand.c: 709: UARTstring("Light\r\n\n");
 15733  012038  0E86               	movlw	low STR_265
 15734  01203A  0101               	movlb	1	; () banked
 15735  01203C  6F87               	movwf	UARTstring@data& (0+255),b
 15736  01203E  0EFE               	movlw	high STR_265
 15737  012040  0101               	movlb	1	; () banked
 15738  012042  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15739  012044  ECEB  F0B4         	call	_UARTstring	;wreg free
 15740                           
 15741                           ;StringCommand.c: 710: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 15742  012048  0E17               	movlw	low STR_64
 15743  01204A  0101               	movlb	1	; () banked
 15744  01204C  6F87               	movwf	UARTstring@data& (0+255),b
 15745  01204E  0EEF               	movlw	high STR_64
 15746  012050  0101               	movlb	1	; () banked
 15747  012052  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15748  012054  ECEB  F0B4         	call	_UARTstring	;wreg free
 15749                           
 15750                           ;StringCommand.c: 711: UARTstring("i.e. Joes room light = On\r\n");
 15751  012058  0E27               	movlw	low STR_267
 15752  01205A  0101               	movlb	1	; () banked
 15753  01205C  6F87               	movwf	UARTstring@data& (0+255),b
 15754  01205E  0EF5               	movlw	high STR_267
 15755  012060  0101               	movlb	1	; () banked
 15756  012062  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15757  012064  ECEB  F0B4         	call	_UARTstring	;wreg free
 15758                           
 15759                           ;StringCommand.c: 712: LCD_Scroll("Joe room Menu");
 15760  012068  0E9B               	movlw	low STR_268
 15761  01206A  0101               	movlb	1	; () banked
 15762  01206C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15763  01206E  0EFC               	movlw	high STR_268
 15764  012070  0101               	movlb	1	; () banked
 15765  012072  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15766  012074  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 15767                           
 15768                           ;StringCommand.c: 713: LCD_Scroll("Devices:");
 15769  012078  0E8F               	movlw	low STR_67
 15770  01207A  0101               	movlb	1	; () banked
 15771  01207C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15772  01207E  0EFE               	movlw	high STR_67
 15773  012080  0101               	movlb	1	; () banked
 15774  012082  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15775  012084  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 15776                           
 15777                           ;StringCommand.c: 714: LCD_Scroll("Light");
 15778  012088  0EA7               	movlw	low STR_93
 15779  01208A  0101               	movlb	1	; () banked
 15780  01208C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15781  01208E  0EFF               	movlw	high STR_93
 15782  012090  0101               	movlb	1	; () banked
 15783  012092  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15784  012094  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 15785                           
 15786                           ;StringCommand.c: 715: }
 15787                           ;StringCommand.c: 716: }
 15788  012098  D32F               	goto	l685
 15789  01209A                     l14497:
 15790                           
 15791                           ;StringCommand.c: 718: else if (StringMatch(Input, "?"))
 15792  01209A  C1CA  F17C         	movff	Command@Input,StringMatch@This
 15793  01209E  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 15794  0120A2  0E17               	movlw	low (STR_83+14)
 15795  0120A4  0101               	movlb	1	; () banked
 15796  0120A6  6F7E               	movwf	StringMatch@That& (0+255),b
 15797  0120A8  0EFA               	movlw	high (STR_83+14)
 15798  0120AA  0101               	movlb	1	; () banked
 15799  0120AC  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 15800  0120AE  EC74  F0B7         	call	_StringMatch	;wreg free
 15801  0120B2  0900               	iorlw	0
 15802  0120B4  B4D8               	btfsc	status,2,c
 15803  0120B6  D15E               	goto	l14549
 15804                           
 15805                           ;StringCommand.c: 719: {
 15806                           ;StringCommand.c: 720: UARTstring("Devices:\r\n\n");
 15807  0120B8  0E6F               	movlw	low STR_272
 15808  0120BA  0101               	movlb	1	; () banked
 15809  0120BC  6F87               	movwf	UARTstring@data& (0+255),b
 15810  0120BE  0EFD               	movlw	high STR_272
 15811  0120C0  0101               	movlb	1	; () banked
 15812  0120C2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15813  0120C4  ECEB  F0B4         	call	_UARTstring	;wreg free
 15814                           
 15815                           ;StringCommand.c: 721: UARTstring("Bedroom\r\n");
 15816  0120C8  0E0E               	movlw	low STR_273
 15817  0120CA  0101               	movlb	1	; () banked
 15818  0120CC  6F87               	movwf	UARTstring@data& (0+255),b
 15819  0120CE  0EFE               	movlw	high STR_273
 15820  0120D0  0101               	movlb	1	; () banked
 15821  0120D2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15822  0120D4  ECEB  F0B4         	call	_UARTstring	;wreg free
 15823                           
 15824                           ;StringCommand.c: 722: UARTstring("Livingroom\r\n");
 15825  0120D8  0EE0               	movlw	low STR_274
 15826  0120DA  0101               	movlb	1	; () banked
 15827  0120DC  6F87               	movwf	UARTstring@data& (0+255),b
 15828  0120DE  0EFC               	movlw	high STR_274
 15829  0120E0  0101               	movlb	1	; () banked
 15830  0120E2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15831  0120E4  ECEB  F0B4         	call	_UARTstring	;wreg free
 15832                           
 15833                           ;StringCommand.c: 723: UARTstring("Joes room\r\n");
 15834  0120E8  0E87               	movlw	low STR_275
 15835  0120EA  0101               	movlb	1	; () banked
 15836  0120EC  6F87               	movwf	UARTstring@data& (0+255),b
 15837  0120EE  0EFD               	movlw	high STR_275
 15838  0120F0  0101               	movlb	1	; () banked
 15839  0120F2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15840  0120F4  ECEB  F0B4         	call	_UARTstring	;wreg free
 15841                           
 15842                           ;StringCommand.c: 724: UARTstring("Christmas Tree\r\n");
 15843  0120F8  0E1D               	movlw	low STR_276
 15844  0120FA  0101               	movlb	1	; () banked
 15845  0120FC  6F87               	movwf	UARTstring@data& (0+255),b
 15846  0120FE  0EF9               	movlw	high STR_276
 15847  012100  0101               	movlb	1	; () banked
 15848  012102  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15849  012104  ECEB  F0B4         	call	_UARTstring	;wreg free
 15850                           
 15851                           ;StringCommand.c: 725: UARTstring("Contrast\r\n");
 15852  012108  0ECD               	movlw	low STR_277
 15853  01210A  0101               	movlb	1	; () banked
 15854  01210C  6F87               	movwf	UARTstring@data& (0+255),b
 15855  01210E  0EFD               	movlw	high STR_277
 15856  012110  0101               	movlb	1	; () banked
 15857  012112  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15858  012114  ECEB  F0B4         	call	_UARTstring	;wreg free
 15859                           
 15860                           ;StringCommand.c: 726: UARTstring("ADC\r\n");
 15861  012118  0E83               	movlw	low STR_278
 15862  01211A  0101               	movlb	1	; () banked
 15863  01211C  6F87               	movwf	UARTstring@data& (0+255),b
 15864  01211E  0EFF               	movlw	high STR_278
 15865  012120  0101               	movlb	1	; () banked
 15866  012122  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15867  012124  ECEB  F0B4         	call	_UARTstring	;wreg free
 15868                           
 15869                           ;StringCommand.c: 727: UARTstring("RTC\r\n");
 15870  012128  0E58               	movlw	low (STR_228+18)
 15871  01212A  0101               	movlb	1	; () banked
 15872  01212C  6F87               	movwf	UARTstring@data& (0+255),b
 15873  01212E  0EF6               	movlw	high (STR_228+18)
 15874  012130  0101               	movlb	1	; () banked
 15875  012132  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15876  012134  ECEB  F0B4         	call	_UARTstring	;wreg free
 15877                           
 15878                           ;StringCommand.c: 728: UARTstring("Baud\r\n\n");
 15879  012138  0EFA               	movlw	low STR_280
 15880  01213A  0101               	movlb	1	; () banked
 15881  01213C  6F87               	movwf	UARTstring@data& (0+255),b
 15882  01213E  0EFE               	movlw	high STR_280
 15883  012140  0101               	movlb	1	; () banked
 15884  012142  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15885  012144  ECEB  F0B4         	call	_UARTstring	;wreg free
 15886                           
 15887                           ;StringCommand.c: 729: UARTstring("For Device help enter device followed by a '?' \r\n")
      +                          ;
 15888  012148  0EED               	movlw	low STR_281
 15889  01214A  0101               	movlb	1	; () banked
 15890  01214C  6F87               	movwf	UARTstring@data& (0+255),b
 15891  01214E  0EF0               	movlw	high STR_281
 15892  012150  0101               	movlb	1	; () banked
 15893  012152  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15894  012154  ECEB  F0B4         	call	_UARTstring	;wreg free
 15895                           
 15896                           ;StringCommand.c: 730: UARTstring("i.e.  Livingroom?\r\n\r\n");
 15897  012158  0EBB               	movlw	low STR_282
 15898  01215A  0101               	movlb	1	; () banked
 15899  01215C  6F87               	movwf	UARTstring@data& (0+255),b
 15900  01215E  0EF6               	movlw	high STR_282
 15901  012160  0101               	movlb	1	; () banked
 15902  012162  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15903  012164  ECEB  F0B4         	call	_UARTstring	;wreg free
 15904                           
 15905                           ;StringCommand.c: 731: UARTstring("Current Time\r\n");
 15906  012168  0E59               	movlw	low STR_283
 15907  01216A  0101               	movlb	1	; () banked
 15908  01216C  6F87               	movwf	UARTstring@data& (0+255),b
 15909  01216E  0EFB               	movlw	high STR_283
 15910  012170  0101               	movlb	1	; () banked
 15911  012172  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15912  012174  ECEB  F0B4         	call	_UARTstring	;wreg free
 15913                           
 15914                           ;StringCommand.c: 732: SetLCDcursor(0, 0);
 15915  012178  0E00               	movlw	0
 15916  01217A  0101               	movlb	1	; () banked
 15917  01217C  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 15918  01217E  0E00               	movlw	0
 15919  012180  EC60  F0BD         	call	_SetLCDcursor
 15920                           
 15921                           ;StringCommand.c: 733: LCDPrintString("Help Menu");
 15922  012184  0E68               	movlw	low STR_284
 15923  012186  0101               	movlb	1	; () banked
 15924  012188  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 15925  01218A  0EFE               	movlw	high STR_284
 15926  01218C  0101               	movlb	1	; () banked
 15927  01218E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15928  012190  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 15929                           
 15930                           ;StringCommand.c: 734: if(!READ_RTC_TIME())
 15931  012194  EC3B  F0AF         	call	_READ_RTC_TIME	;wreg free
 15932  012198  0900               	iorlw	0
 15933  01219A  A4D8               	btfss	status,2,c
 15934  01219C  D07D               	goto	l14523
 15935                           
 15936                           ;StringCommand.c: 735: {
 15937                           ;StringCommand.c: 736: SprintDate(buf, NowTime, 0);
 15938  01219E  0E00               	movlw	low Command@buf
 15939  0121A0  0101               	movlb	1	; () banked
 15940  0121A2  6FBE               	movwf	SprintDate@ReturnBuf& (0+255),b
 15941  0121A4  0E05               	movlw	high Command@buf
 15942  0121A6  0101               	movlb	1	; () banked
 15943  0121A8  6FBF               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 15944  0121AA  EE21  F000         	lfsr	2,_NowTime
 15945  0121AE  EE01  F0C0         	lfsr	0,SprintDate@DisplayTime
 15946  0121B2  0E08               	movlw	8
 15947  0121B4                     u18921:
 15948  0121B4  CFDB FFEB          	movff	plusw2,plusw0
 15949  0121B8  06E8               	decf	wreg,f,c
 15950  0121BA  E2FC               	bc	u18921
 15951  0121BC  0E00               	movlw	0
 15952  0121BE  0101               	movlb	1	; () banked
 15953  0121C0  6FC9               	movwf	SprintDate@Military& (0+255),b
 15954  0121C2  EC4A  F0AE         	call	_SprintDate	;wreg free
 15955                           
 15956                           ;StringCommand.c: 737: UARTstring(buf);
 15957  0121C6  0E00               	movlw	low Command@buf
 15958  0121C8  0101               	movlb	1	; () banked
 15959  0121CA  6F87               	movwf	UARTstring@data& (0+255),b
 15960  0121CC  0E05               	movlw	high Command@buf
 15961  0121CE  0101               	movlb	1	; () banked
 15962  0121D0  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15963  0121D2  ECEB  F0B4         	call	_UARTstring	;wreg free
 15964                           
 15965                           ;StringCommand.c: 738: UARTstring("\r\n");
 15966  0121D6  0ECE               	movlw	low (STR_282+19)
 15967  0121D8  0101               	movlb	1	; () banked
 15968  0121DA  6F87               	movwf	UARTstring@data& (0+255),b
 15969  0121DC  0EF6               	movlw	high (STR_282+19)
 15970  0121DE  0101               	movlb	1	; () banked
 15971  0121E0  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15972  0121E2  ECEB  F0B4         	call	_UARTstring	;wreg free
 15973                           
 15974                           ;StringCommand.c: 740: if(NowTime.HoursAM_PM)
 15975  0121E6  0101               	movlb	1	; () banked
 15976  0121E8  5104               	movf	(_NowTime+4)& (0+255),w,b
 15977  0121EA  B4D8               	btfsc	status,2,c
 15978  0121EC  D023               	goto	l14517
 15979                           
 15980                           ; BSR set to: 1
 15981                           ;StringCommand.c: 741: {
 15982                           ;StringCommand.c: 742: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 15983  0121EE  0E00               	movlw	low Command@buf
 15984  0121F0  0101               	movlb	1	; () banked
 15985  0121F2  6F92               	movwf	sprintf@sp& (0+255),b
 15986  0121F4  0E05               	movlw	high Command@buf
 15987  0121F6  0101               	movlb	1	; () banked
 15988  0121F8  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 15989  0121FA  0EA4               	movlw	low STR_226
 15990  0121FC  0101               	movlb	1	; () banked
 15991  0121FE  6F94               	movwf	sprintf@f& (0+255),b
 15992  012200  0EF6               	movlw	high STR_226
 15993  012202  0101               	movlb	1	; () banked
 15994  012204  6F95               	movwf	(sprintf@f+1)& (0+255),b
 15995  012206  C107  F196         	movff	_NowTime+7,?_sprintf+4
 15996  01220A  0101               	movlb	1	; () banked
 15997  01220C  6B97               	clrf	(?_sprintf+5)& (0+255),b
 15998  01220E  C106  F198         	movff	_NowTime+6,?_sprintf+6
 15999  012212  0101               	movlb	1	; () banked
 16000  012214  6B99               	clrf	(?_sprintf+7)& (0+255),b
 16001  012216  C102  F19A         	movff	_NowTime+2,?_sprintf+8
 16002  01221A  0101               	movlb	1	; () banked
 16003  01221C  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 16004  01221E  C101  F19C         	movff	_NowTime+1,?_sprintf+10
 16005  012222  0101               	movlb	1	; () banked
 16006  012224  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 16007  012226  C100  F19E         	movff	_NowTime,?_sprintf+12
 16008  01222A  0101               	movlb	1	; () banked
 16009  01222C  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 16010  01222E  EC87  F093         	call	_sprintf	;wreg free
 16011                           
 16012                           ;StringCommand.c: 743: }
 16013  012232  D023               	goto	l14519
 16014  012234                     l14517:
 16015                           
 16016                           ;StringCommand.c: 744: else
 16017                           ;StringCommand.c: 745: {
 16018                           ;StringCommand.c: 746: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 16019  012234  0E00               	movlw	low Command@buf
 16020  012236  0101               	movlb	1	; () banked
 16021  012238  6F92               	movwf	sprintf@sp& (0+255),b
 16022  01223A  0E05               	movlw	high Command@buf
 16023  01223C  0101               	movlb	1	; () banked
 16024  01223E  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 16025  012240  0E8D               	movlw	low STR_227
 16026  012242  0101               	movlb	1	; () banked
 16027  012244  6F94               	movwf	sprintf@f& (0+255),b
 16028  012246  0EF6               	movlw	high STR_227
 16029  012248  0101               	movlb	1	; () banked
 16030  01224A  6F95               	movwf	(sprintf@f+1)& (0+255),b
 16031  01224C  C107  F196         	movff	_NowTime+7,?_sprintf+4
 16032  012250  0101               	movlb	1	; () banked
 16033  012252  6B97               	clrf	(?_sprintf+5)& (0+255),b
 16034  012254  C106  F198         	movff	_NowTime+6,?_sprintf+6
 16035  012258  0101               	movlb	1	; () banked
 16036  01225A  6B99               	clrf	(?_sprintf+7)& (0+255),b
 16037  01225C  C102  F19A         	movff	_NowTime+2,?_sprintf+8
 16038  012260  0101               	movlb	1	; () banked
 16039  012262  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 16040  012264  C101  F19C         	movff	_NowTime+1,?_sprintf+10
 16041  012268  0101               	movlb	1	; () banked
 16042  01226A  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 16043  01226C  C100  F19E         	movff	_NowTime,?_sprintf+12
 16044  012270  0101               	movlb	1	; () banked
 16045  012272  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 16046  012274  EC87  F093         	call	_sprintf	;wreg free
 16047  012278  D000               	goto	l14519
 16048  01227A                     l14519:
 16049                           
 16050                           ;StringCommand.c: 747: }
 16051                           ;StringCommand.c: 748: SetLCDcursor(1, 0);
 16052  01227A  0E00               	movlw	0
 16053  01227C  0101               	movlb	1	; () banked
 16054  01227E  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 16055  012280  0E01               	movlw	1
 16056  012282  EC60  F0BD         	call	_SetLCDcursor
 16057                           
 16058                           ;StringCommand.c: 749: LCDPrintString(buf);
 16059  012286  0E00               	movlw	low Command@buf
 16060  012288  0101               	movlb	1	; () banked
 16061  01228A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 16062  01228C  0E05               	movlw	high Command@buf
 16063  01228E  0101               	movlb	1	; () banked
 16064  012290  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 16065  012292  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 16066                           
 16067                           ;StringCommand.c: 750: }
 16068  012296  D016               	goto	l821
 16069  012298                     l14523:
 16070                           
 16071                           ;StringCommand.c: 751: else
 16072                           ;StringCommand.c: 752: {
 16073                           ;StringCommand.c: 753: UARTstring("ERROR: Can't Read RTC\r\n");
 16074  012298  0E46               	movlw	low STR_228
 16075  01229A  0101               	movlb	1	; () banked
 16076  01229C  6F87               	movwf	UARTstring@data& (0+255),b
 16077  01229E  0EF6               	movlw	high STR_228
 16078  0122A0  0101               	movlb	1	; () banked
 16079  0122A2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 16080  0122A4  ECEB  F0B4         	call	_UARTstring	;wreg free
 16081                           
 16082                           ;StringCommand.c: 754: SetLCDcursor(1, 0);
 16083  0122A8  0E00               	movlw	0
 16084  0122AA  0101               	movlb	1	; () banked
 16085  0122AC  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 16086  0122AE  0E01               	movlw	1
 16087  0122B0  EC60  F0BD         	call	_SetLCDcursor
 16088                           
 16089                           ;StringCommand.c: 755: LCDPrintString("RTC isnt working");
 16090  0122B4  0E61               	movlw	low STR_229
 16091  0122B6  0101               	movlb	1	; () banked
 16092  0122B8  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 16093  0122BA  0EF9               	movlw	high STR_229
 16094  0122BC  0101               	movlb	1	; () banked
 16095  0122BE  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 16096  0122C0  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 16097  0122C4                     l821:
 16098                           
 16099                           ;StringCommand.c: 756: }
 16100                           ;StringCommand.c: 757: SetLCDcursor(1, 0);
 16101  0122C4  0E00               	movlw	0
 16102  0122C6  0101               	movlb	1	; () banked
 16103  0122C8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 16104  0122CA  0E01               	movlw	1
 16105  0122CC  EC60  F0BD         	call	_SetLCDcursor
 16106                           
 16107                           ;StringCommand.c: 758: LCD_Scroll("Device Menus:");
 16108  0122D0  0E47               	movlw	low STR_290
 16109  0122D2  0101               	movlb	1	; () banked
 16110  0122D4  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 16111  0122D6  0EFC               	movlw	high STR_290
 16112  0122D8  0101               	movlb	1	; () banked
 16113  0122DA  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16114  0122DC  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 16115                           
 16116                           ;StringCommand.c: 759: LCD_Scroll("Bedroom?");
 16117  0122E0  0E98               	movlw	low STR_291
 16118  0122E2  0101               	movlb	1	; () banked
 16119  0122E4  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 16120  0122E6  0EFE               	movlw	high STR_291
 16121  0122E8  0101               	movlb	1	; () banked
 16122  0122EA  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16123  0122EC  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 16124                           
 16125                           ;StringCommand.c: 760: LCD_Scroll("Livingroom?");
 16126  0122F0  0E93               	movlw	low STR_292
 16127  0122F2  0101               	movlb	1	; () banked
 16128  0122F4  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 16129  0122F6  0EFD               	movlw	high STR_292
 16130  0122F8  0101               	movlb	1	; () banked
 16131  0122FA  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16132  0122FC  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 16133                           
 16134                           ;StringCommand.c: 761: LCD_Scroll("Joes Room?");
 16135  012300  0ED8               	movlw	low STR_293
 16136  012302  0101               	movlb	1	; () banked
 16137  012304  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 16138  012306  0EFD               	movlw	high STR_293
 16139  012308  0101               	movlb	1	; () banked
 16140  01230A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16141  01230C  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 16142                           
 16143                           ;StringCommand.c: 762: LCD_Scroll("Christmas Tree?");
 16144  012310  0E59               	movlw	low STR_294
 16145  012312  0101               	movlb	1	; () banked
 16146  012314  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 16147  012316  0EFA               	movlw	high STR_294
 16148  012318  0101               	movlb	1	; () banked
 16149  01231A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16150  01231C  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 16151                           
 16152                           ;StringCommand.c: 763: LCD_Scroll("Contrast?");
 16153  012320  0E40               	movlw	low STR_295
 16154  012322  0101               	movlb	1	; () banked
 16155  012324  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 16156  012326  0EFE               	movlw	high STR_295
 16157  012328  0101               	movlb	1	; () banked
 16158  01232A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16159  01232C  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 16160                           
 16161                           ;StringCommand.c: 764: LCD_Scroll("ADC?");
 16162  012330  0ECC               	movlw	low STR_296
 16163  012332  0101               	movlb	1	; () banked
 16164  012334  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 16165  012336  0EFF               	movlw	high STR_296
 16166  012338  0101               	movlb	1	; () banked
 16167  01233A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16168  01233C  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 16169                           
 16170                           ;StringCommand.c: 765: LCD_Scroll("RTC?");
 16171  012340  0ED1               	movlw	low STR_297
 16172  012342  0101               	movlb	1	; () banked
 16173  012344  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 16174  012346  0EFF               	movlw	high STR_297
 16175  012348  0101               	movlb	1	; () banked
 16176  01234A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16177  01234C  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 16178                           
 16179                           ;StringCommand.c: 766: LCD_Scroll("Baud?");
 16180  012350  0E8F               	movlw	low STR_298
 16181  012352  0101               	movlb	1	; () banked
 16182  012354  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 16183  012356  0EFF               	movlw	high STR_298
 16184  012358  0101               	movlb	1	; () banked
 16185  01235A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 16186  01235C  EC45  F0A5         	call	_LCD_Scroll	;wreg free
 16187  012360                     l14547:
 16188                           
 16189                           ;StringCommand.c: 767: LCDclearCount =0;
 16190  012360  0E00               	movlw	0
 16191  012362  0101               	movlb	1	; () banked
 16192  012364  6FD7               	movwf	_LCDclearCount& (0+255),b
 16193  012366  0E00               	movlw	0
 16194  012368  6FD8               	movwf	(_LCDclearCount+1)& (0+255),b
 16195  01236A  0E00               	movlw	0
 16196  01236C  6FD9               	movwf	(_LCDclearCount+2)& (0+255),b
 16197  01236E  0E00               	movlw	0
 16198  012370  6FDA               	movwf	(_LCDclearCount+3)& (0+255),b
 16199                           
 16200                           ;StringCommand.c: 768: }
 16201  012372  D1C2               	goto	l685
 16202  012374                     l14549:
 16203                           
 16204                           ;StringCommand.c: 769: else if(StringMatch(Input, "baud?"))
 16205  012374  C1CA  F17C         	movff	Command@Input,StringMatch@This
 16206  012378  C1CB  F17D         	movff	Command@Input+1,StringMatch@This+1
 16207  01237C  0E95               	movlw	low STR_299
 16208  01237E  0101               	movlb	1	; () banked
 16209  012380  6F7E               	movwf	StringMatch@That& (0+255),b
 16210  012382  0EFF               	movlw	high STR_299
 16211  012384  0101               	movlb	1	; () banked
 16212  012386  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 16213  012388  EC74  F0B7         	call	_StringMatch	;wreg free
 16214  01238C  0900               	iorlw	0
 16215  01238E  B4D8               	btfsc	status,2,c
 16216  012390  D029               	goto	l14557
 16217                           
 16218                           ;StringCommand.c: 770: {
 16219                           ;StringCommand.c: 772: sprintf(buf,"BAUD = %d", GetBaud());
 16220  012392  0E00               	movlw	low Command@buf
 16221  012394  0101               	movlb	1	; () banked
 16222  012396  6F92               	movwf	sprintf@sp& (0+255),b
 16223  012398  0E05               	movlw	high Command@buf
 16224  01239A  0101               	movlb	1	; () banked
 16225  01239C  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 16226  01239E  0E4A               	movlw	low STR_300
 16227  0123A0  0101               	movlb	1	; () banked
 16228  0123A2  6F94               	movwf	sprintf@f& (0+255),b
 16229  0123A4  0EFE               	movlw	high STR_300
 16230  0123A6  0101               	movlb	1	; () banked
 16231  0123A8  6F95               	movwf	(sprintf@f+1)& (0+255),b
 16232  0123AA  EC8F  F0BF         	call	_GetBaud	;wreg free
 16233  0123AE  C17C  F196         	movff	?_GetBaud,?_sprintf+4
 16234  0123B2  C17D  F197         	movff	?_GetBaud+1,?_sprintf+5
 16235  0123B6  C17E  F198         	movff	?_GetBaud+2,?_sprintf+6
 16236  0123BA  C17F  F199         	movff	?_GetBaud+3,?_sprintf+7
 16237  0123BE  EC87  F093         	call	_sprintf	;wreg free
 16238                           
 16239                           ;StringCommand.c: 773: UARTstring(buf);
 16240  0123C2  0E00               	movlw	low Command@buf
 16241  0123C4  0101               	movlb	1	; () banked
 16242  0123C6  6F87               	movwf	UARTstring@data& (0+255),b
 16243  0123C8  0E05               	movlw	high Command@buf
 16244  0123CA  0101               	movlb	1	; () banked
 16245  0123CC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 16246  0123CE  ECEB  F0B4         	call	_UARTstring	;wreg free
 16247                           
 16248                           ;StringCommand.c: 774: LCDdisplayFeedback(buf);
 16249  0123D2  0E00               	movlw	low Command@buf
 16250  0123D4  0101               	movlb	1	; () banked
 16251  0123D6  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16252  0123D8  0E05               	movlw	high Command@buf
 16253  0123DA  0101               	movlb	1	; () banked
 16254  0123DC  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16255  0123DE  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 16256                           
 16257                           ;StringCommand.c: 775: }
 16258  0123E2  D18A               	goto	l685
 16259  0123E4                     l14557:
 16260                           
 16261                           ;StringCommand.c: 776: else if(StringContains(Input, "baudwillbesetto") || StringContain
      +                          s(Input, "resetto") ||
 16262                           ;StringCommand.c: 777: StringContains(Input, "setbaud") || StringContains(Input, "change
      +                          baud"))
 16263  0123E4  C1CA  F17C         	movff	Command@Input,StringContains@This
 16264  0123E8  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16265  0123EC  0E19               	movlw	low STR_301
 16266  0123EE  0101               	movlb	1	; () banked
 16267  0123F0  6F7E               	movwf	StringContains@That& (0+255),b
 16268  0123F2  0EFB               	movlw	high STR_301
 16269  0123F4  0101               	movlb	1	; () banked
 16270  0123F6  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16271  0123F8  EC34  F0B7         	call	_StringContains	;wreg free
 16272  0123FC  0900               	iorlw	0
 16273  0123FE  A4D8               	btfss	status,2,c
 16274  012400  D02D               	goto	l14565
 16275  012402  C1CA  F17C         	movff	Command@Input,StringContains@This
 16276  012406  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16277  01240A  0E3A               	movlw	low STR_302
 16278  01240C  0101               	movlb	1	; () banked
 16279  01240E  6F7E               	movwf	StringContains@That& (0+255),b
 16280  012410  0EFF               	movlw	high STR_302
 16281  012412  0101               	movlb	1	; () banked
 16282  012414  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16283  012416  EC34  F0B7         	call	_StringContains	;wreg free
 16284  01241A  0900               	iorlw	0
 16285  01241C  A4D8               	btfss	status,2,c
 16286  01241E  D01E               	goto	l14565
 16287  012420  C1CA  F17C         	movff	Command@Input,StringContains@This
 16288  012424  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16289  012428  0E0A               	movlw	low STR_303
 16290  01242A  0101               	movlb	1	; () banked
 16291  01242C  6F7E               	movwf	StringContains@That& (0+255),b
 16292  01242E  0EFF               	movlw	high STR_303
 16293  012430  0101               	movlb	1	; () banked
 16294  012432  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16295  012434  EC34  F0B7         	call	_StringContains	;wreg free
 16296  012438  0900               	iorlw	0
 16297  01243A  A4D8               	btfss	status,2,c
 16298  01243C  D00F               	goto	l14565
 16299  01243E  C1CA  F17C         	movff	Command@Input,StringContains@This
 16300  012442  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16301  012446  0EE3               	movlw	low STR_304
 16302  012448  0101               	movlb	1	; () banked
 16303  01244A  6F7E               	movwf	StringContains@That& (0+255),b
 16304  01244C  0EFD               	movlw	high STR_304
 16305  01244E  0101               	movlb	1	; () banked
 16306  012450  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16307  012452  EC34  F0B7         	call	_StringContains	;wreg free
 16308  012456  0900               	iorlw	0
 16309  012458  B4D8               	btfsc	status,2,c
 16310  01245A  D0BE               	goto	l14603
 16311  01245C                     l14565:
 16312                           
 16313                           ;StringCommand.c: 778: {
 16314                           ;StringCommand.c: 780: if (!StringContains(Input, "="))
 16315  01245C  C1CA  F17C         	movff	Command@Input,StringContains@This
 16316  012460  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16317  012464  0E05               	movlw	low (STR_201+11)
 16318  012466  0101               	movlb	1	; () banked
 16319  012468  6F7E               	movwf	StringContains@That& (0+255),b
 16320  01246A  0EFD               	movlw	high (STR_201+11)
 16321  01246C  0101               	movlb	1	; () banked
 16322  01246E  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16323  012470  EC34  F0B7         	call	_StringContains	;wreg free
 16324  012474  0900               	iorlw	0
 16325  012476  A4D8               	btfss	status,2,c
 16326  012478  D007               	goto	l14569
 16327                           
 16328                           ;StringCommand.c: 781: {
 16329                           ;StringCommand.c: 782: StringAddEqual(Input);
 16330  01247A  C1CA  F18B         	movff	Command@Input,StringAddEqual@Input
 16331  01247E  C1CB  F18C         	movff	Command@Input+1,StringAddEqual@Input+1
 16332  012482  EC2F  F0A7         	call	_StringAddEqual	;wreg free
 16333  012486  D000               	goto	l14569
 16334  012488                     l14569:
 16335                           
 16336                           ;StringCommand.c: 783: }
 16337                           ;StringCommand.c: 784: BAUDtemp = (unsigned long)GetEnteredNumber(Input);
 16338  012488  C1CA  F188         	movff	Command@Input,GetEnteredNumber@This
 16339  01248C  C1CB  F189         	movff	Command@Input+1,GetEnteredNumber@This+1
 16340  012490  EC44  F0A6         	call	_GetEnteredNumber	;wreg free
 16341  012494  C188  F5CE         	movff	?_GetEnteredNumber,Command@BAUDtemp
 16342  012498  C189  F5CF         	movff	?_GetEnteredNumber+1,Command@BAUDtemp+1
 16343  01249C  C18A  F5D0         	movff	?_GetEnteredNumber+2,Command@BAUDtemp+2
 16344  0124A0  C18B  F5D1         	movff	?_GetEnteredNumber+3,Command@BAUDtemp+3
 16345                           
 16346                           ;StringCommand.c: 785: if(BAUDtemp >=2400 && BAUDtemp <= 115200)
 16347  0124A4  0105               	movlb	5	; () banked
 16348  0124A6  51D1               	movf	(Command@BAUDtemp+3)& (0+255),w,b
 16349  0124A8  0105               	movlb	5	; () banked
 16350  0124AA  11D0               	iorwf	(Command@BAUDtemp+2)& (0+255),w,b
 16351  0124AC  E108               	bnz	u19000
 16352  0124AE  0E60               	movlw	96
 16353  0124B0  0105               	movlb	5	; () banked
 16354  0124B2  5DCE               	subwf	Command@BAUDtemp& (0+255),w,b
 16355  0124B4  0E09               	movlw	9
 16356  0124B6  0105               	movlb	5	; () banked
 16357  0124B8  59CF               	subwfb	(Command@BAUDtemp+1)& (0+255),w,b
 16358  0124BA  A0D8               	btfss	status,0,c
 16359  0124BC  D084               	goto	l14601
 16360  0124BE                     u19000:
 16361                           
 16362                           ; BSR set to: 5
 16363  0124BE  0105               	movlb	5	; () banked
 16364  0124C0  51D1               	movf	(Command@BAUDtemp+3)& (0+255),w,b
 16365  0124C2  E109               	bnz	u19011
 16366  0124C4  0105               	movlb	5	; () banked
 16367  0124C6  05CE               	decf	Command@BAUDtemp& (0+255),w,b
 16368  0124C8  0EC2               	movlw	194
 16369  0124CA  0105               	movlb	5	; () banked
 16370  0124CC  59CF               	subwfb	(Command@BAUDtemp+1)& (0+255),w,b
 16371  0124CE  0E01               	movlw	1
 16372  0124D0  0105               	movlb	5	; () banked
 16373  0124D2  59D0               	subwfb	(Command@BAUDtemp+2)& (0+255),w,b
 16374  0124D4  B0D8               	btfsc	status,0,c
 16375  0124D6                     u19011:
 16376  0124D6  D077               	goto	l14601
 16377                           
 16378                           ; BSR set to: 5
 16379                           ;StringCommand.c: 786: {
 16380                           ;StringCommand.c: 787: if(StringContains(Input, "withnoparitybit"))
 16381  0124D8  C1CA  F17C         	movff	Command@Input,StringContains@This
 16382  0124DC  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16383  0124E0  0E39               	movlw	low STR_306
 16384  0124E2  0101               	movlb	1	; () banked
 16385  0124E4  6F7E               	movwf	StringContains@That& (0+255),b
 16386  0124E6  0EFB               	movlw	high STR_306
 16387  0124E8  0101               	movlb	1	; () banked
 16388  0124EA  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16389  0124EC  EC34  F0B7         	call	_StringContains	;wreg free
 16390  0124F0  0900               	iorlw	0
 16391  0124F2  B4D8               	btfsc	status,2,c
 16392  0124F4  D002               	goto	l14579
 16393                           
 16394                           ;StringCommand.c: 788: {
 16395                           ;StringCommand.c: 789: PARITYtemp =0;
 16396  0124F6  0E00               	movlw	0
 16397  0124F8  D045               	goto	L13
 16398  0124FA                     l14579:
 16399                           
 16400                           ;StringCommand.c: 791: else if(StringContains(Input, "withoddparitybit"))
 16401  0124FA  C1CA  F17C         	movff	Command@Input,StringContains@This
 16402  0124FE  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16403  012502  0EB6               	movlw	low STR_307
 16404  012504  0101               	movlb	1	; () banked
 16405  012506  6F7E               	movwf	StringContains@That& (0+255),b
 16406  012508  0EF9               	movlw	high STR_307
 16407  01250A  0101               	movlb	1	; () banked
 16408  01250C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16409  01250E  EC34  F0B7         	call	_StringContains	;wreg free
 16410  012512  0900               	iorlw	0
 16411  012514  B4D8               	btfsc	status,2,c
 16412  012516  D002               	goto	l14583
 16413                           
 16414                           ;StringCommand.c: 792: {
 16415                           ;StringCommand.c: 793: PARITYtemp =1;
 16416  012518  0E01               	movlw	1
 16417  01251A  D034               	goto	L13
 16418  01251C                     l14583:
 16419                           
 16420                           ;StringCommand.c: 795: else if(StringContains(Input, "withevenparitybit"))
 16421  01251C  C1CA  F17C         	movff	Command@Input,StringContains@This
 16422  012520  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16423  012524  0EB6               	movlw	low STR_308
 16424  012526  0101               	movlb	1	; () banked
 16425  012528  6F7E               	movwf	StringContains@That& (0+255),b
 16426  01252A  0EF8               	movlw	high STR_308
 16427  01252C  0101               	movlb	1	; () banked
 16428  01252E  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16429  012530  EC34  F0B7         	call	_StringContains	;wreg free
 16430  012534  0900               	iorlw	0
 16431  012536  B4D8               	btfsc	status,2,c
 16432  012538  D002               	goto	l14587
 16433                           
 16434                           ;StringCommand.c: 796: {
 16435                           ;StringCommand.c: 797: PARITYtemp =2;
 16436  01253A  0E02               	movlw	2
 16437  01253C  D023               	goto	L13
 16438  01253E                     l14587:
 16439                           
 16440                           ;StringCommand.c: 799: else if(StringContains(Input, "withmarkbit"))
 16441  01253E  C1CA  F17C         	movff	Command@Input,StringContains@This
 16442  012542  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16443  012546  0E9F               	movlw	low STR_309
 16444  012548  0101               	movlb	1	; () banked
 16445  01254A  6F7E               	movwf	StringContains@That& (0+255),b
 16446  01254C  0EFD               	movlw	high STR_309
 16447  01254E  0101               	movlb	1	; () banked
 16448  012550  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16449  012552  EC34  F0B7         	call	_StringContains	;wreg free
 16450  012556  0900               	iorlw	0
 16451  012558  B4D8               	btfsc	status,2,c
 16452  01255A  D002               	goto	l14591
 16453                           
 16454                           ;StringCommand.c: 800: {
 16455                           ;StringCommand.c: 801: PARITYtemp =3;
 16456  01255C  0E03               	movlw	3
 16457  01255E  D012               	goto	L13
 16458  012560                     l14591:
 16459                           
 16460                           ;StringCommand.c: 803: else if(StringContains(Input, "withspacebit"))
 16461  012560  C1CA  F17C         	movff	Command@Input,StringContains@This
 16462  012564  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16463  012568  0E3B               	movlw	low STR_310
 16464  01256A  0101               	movlb	1	; () banked
 16465  01256C  6F7E               	movwf	StringContains@That& (0+255),b
 16466  01256E  0EFD               	movlw	high STR_310
 16467  012570  0101               	movlb	1	; () banked
 16468  012572  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16469  012574  EC34  F0B7         	call	_StringContains	;wreg free
 16470  012578  0900               	iorlw	0
 16471  01257A  B4D8               	btfsc	status,2,c
 16472  01257C  D002               	goto	l14595
 16473                           
 16474                           ;StringCommand.c: 804: {
 16475                           ;StringCommand.c: 805: PARITYtemp =4;
 16476  01257E  0E04               	movlw	4
 16477  012580  D001               	goto	L13
 16478  012582                     l14595:
 16479                           
 16480                           ;StringCommand.c: 807: else
 16481                           ;StringCommand.c: 808: {
 16482                           ;StringCommand.c: 809: PARITYtemp = 5;
 16483  012582  0E05               	movlw	5
 16484  012584                     L13:
 16485  012584  0105               	movlb	5	; () banked
 16486  012586  6FD4               	movwf	Command@PARITYtemp& (0+255),b
 16487  012588  0E00               	movlw	0
 16488  01258A  6FD5               	movwf	(Command@PARITYtemp+1)& (0+255),b
 16489  01258C  0E00               	movlw	0
 16490  01258E  6FD6               	movwf	(Command@PARITYtemp+2)& (0+255),b
 16491  012590  0E00               	movlw	0
 16492  012592  6FD7               	movwf	(Command@PARITYtemp+3)& (0+255),b
 16493                           
 16494                           ; BSR set to: 5
 16495                           
 16496                           ; BSR set to: 5
 16497                           
 16498                           ; BSR set to: 5
 16499                           
 16500                           ; BSR set to: 5
 16501  012594  D000               	goto	l14597
 16502  012596                     l14597:
 16503                           
 16504                           ; BSR set to: 5
 16505                           ;StringCommand.c: 810: }
 16506                           ;StringCommand.c: 811: if(PARITYtemp != 5)
 16507  012596  0E05               	movlw	5
 16508  012598  0105               	movlb	5	; () banked
 16509  01259A  19D4               	xorwf	Command@PARITYtemp& (0+255),w,b
 16510  01259C  0105               	movlb	5	; () banked
 16511  01259E  11D5               	iorwf	(Command@PARITYtemp+1)& (0+255),w,b
 16512  0125A0  0105               	movlb	5	; () banked
 16513  0125A2  11D6               	iorwf	(Command@PARITYtemp+2)& (0+255),w,b
 16514  0125A4  0105               	movlb	5	; () banked
 16515  0125A6  11D7               	iorwf	(Command@PARITYtemp+3)& (0+255),w,b
 16516  0125A8  B4D8               	btfsc	status,2,c
 16517  0125AA  D0A6               	goto	l685
 16518                           
 16519                           ; BSR set to: 5
 16520                           ;StringCommand.c: 812: {
 16521                           ;StringCommand.c: 813: SetBaud(BAUDtemp, PARITYtemp);
 16522  0125AC  C5CE  F1BE         	movff	Command@BAUDtemp,SetBaud@Baud
 16523  0125B0  C5CF  F1BF         	movff	Command@BAUDtemp+1,SetBaud@Baud+1
 16524  0125B4  C5D0  F1C0         	movff	Command@BAUDtemp+2,SetBaud@Baud+2
 16525  0125B8  C5D1  F1C1         	movff	Command@BAUDtemp+3,SetBaud@Baud+3
 16526  0125BC  C5D4  F1C2         	movff	Command@PARITYtemp,SetBaud@Parity
 16527  0125C0  EC01  F0A4         	call	_SetBaud	;wreg free
 16528                           
 16529                           ;StringCommand.c: 814: }
 16530                           ;StringCommand.c: 815: }
 16531  0125C4  D099               	goto	l685
 16532  0125C6                     l14601:
 16533                           
 16534                           ;StringCommand.c: 816: else
 16535                           ;StringCommand.c: 817: {
 16536                           ;StringCommand.c: 818: UARTstring("Baud Out of range\r\n");
 16537  0125C6  0E3D               	movlw	low STR_311
 16538  0125C8  0101               	movlb	1	; () banked
 16539  0125CA  6F87               	movwf	UARTstring@data& (0+255),b
 16540  0125CC  0EF7               	movlw	high STR_311
 16541  0125CE  0101               	movlb	1	; () banked
 16542  0125D0  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 16543  0125D2  ECEB  F0B4         	call	_UARTstring	;wreg free
 16544                           
 16545                           ;StringCommand.c: 819: }
 16546                           ;StringCommand.c: 820: }
 16547  0125D6  D090               	goto	l685
 16548  0125D8                     l14603:
 16549                           
 16550                           ;StringCommand.c: 821: else if(StringContains(Input, "baudis"))
 16551  0125D8  C1CA  F17C         	movff	Command@Input,StringContains@This
 16552  0125DC  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16553  0125E0  0E7C               	movlw	low STR_312
 16554  0125E2  0101               	movlb	1	; () banked
 16555  0125E4  6F7E               	movwf	StringContains@That& (0+255),b
 16556  0125E6  0EFF               	movlw	high STR_312
 16557  0125E8  0101               	movlb	1	; () banked
 16558  0125EA  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16559  0125EC  EC34  F0B7         	call	_StringContains	;wreg free
 16560  0125F0  0900               	iorlw	0
 16561  0125F2  A4D8               	btfss	status,2,c
 16562  0125F4  D05D               	goto	l14623
 16563                           
 16564                           ;StringCommand.c: 829: else if(StringContains(Input, "enterbaudrate"))
 16565                           
 16566                           ;StringCommand.c: 828: }
 16567                           
 16568                           ;StringCommand.c: 822: {
 16569                           ;StringCommand.c: 827: __nop();
 16570  0125F6  C1CA  F17C         	movff	Command@Input,StringContains@This
 16571  0125FA  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16572  0125FE  0E55               	movlw	low STR_313
 16573  012600  0101               	movlb	1	; () banked
 16574  012602  6F7E               	movwf	StringContains@That& (0+255),b
 16575  012604  0EFC               	movlw	high STR_313
 16576  012606  0101               	movlb	1	; () banked
 16577  012608  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16578  01260A  EC34  F0B7         	call	_StringContains	;wreg free
 16579  01260E  0900               	iorlw	0
 16580  012610  A4D8               	btfss	status,2,c
 16581  012612  D04E               	goto	l14623
 16582                           
 16583                           ;StringCommand.c: 834: else if(ISNUMBER(Input[0]))
 16584                           
 16585                           ;StringCommand.c: 833: }
 16586                           
 16587                           ;StringCommand.c: 830: {
 16588                           ;StringCommand.c: 832: __nop();
 16589  012614  C1CA  FFD9         	movff	Command@Input,fsr2l
 16590  012618  C1CB  FFDA         	movff	Command@Input+1,fsr2h
 16591  01261C  50DF               	movf	indf2,w,c
 16592  01261E  EC28  F0BF         	call	_ISNUMBER
 16593  012622  0900               	iorlw	0
 16594  012624  B4D8               	btfsc	status,2,c
 16595  012626  D057               	goto	l14627
 16596                           
 16597                           ;StringCommand.c: 835: {
 16598                           ;StringCommand.c: 837: if (!StringContains(Input, "="))
 16599  012628  C1CA  F17C         	movff	Command@Input,StringContains@This
 16600  01262C  C1CB  F17D         	movff	Command@Input+1,StringContains@This+1
 16601  012630  0E05               	movlw	low (STR_201+11)
 16602  012632  0101               	movlb	1	; () banked
 16603  012634  6F7E               	movwf	StringContains@That& (0+255),b
 16604  012636  0EFD               	movlw	high (STR_201+11)
 16605  012638  0101               	movlb	1	; () banked
 16606  01263A  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16607  01263C  EC34  F0B7         	call	_StringContains	;wreg free
 16608  012640  0900               	iorlw	0
 16609  012642  A4D8               	btfss	status,2,c
 16610  012644  D007               	goto	l14617
 16611                           
 16612                           ;StringCommand.c: 838: {
 16613                           ;StringCommand.c: 839: StringAddEqual(Input);
 16614  012646  C1CA  F18B         	movff	Command@Input,StringAddEqual@Input
 16615  01264A  C1CB  F18C         	movff	Command@Input+1,StringAddEqual@Input+1
 16616  01264E  EC2F  F0A7         	call	_StringAddEqual	;wreg free
 16617  012652  D000               	goto	l14617
 16618  012654                     l14617:
 16619                           
 16620                           ;StringCommand.c: 840: }
 16621                           ;StringCommand.c: 841: tempLONG = (unsigned long)GetEnteredNumber(Input);
 16622  012654  C1CA  F188         	movff	Command@Input,GetEnteredNumber@This
 16623  012658  C1CB  F189         	movff	Command@Input+1,GetEnteredNumber@This+1
 16624  01265C  EC44  F0A6         	call	_GetEnteredNumber	;wreg free
 16625  012660  C188  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 16626  012664  C189  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 16627  012668  C18A  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 16628  01266C  C18B  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 16629                           
 16630                           ;StringCommand.c: 842: {
 16631                           ;StringCommand.c: 843: if(tempLONG >=2400 && tempLONG <=115200)
 16632  012670  0105               	movlb	5	; () banked
 16633  012672  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 16634  012674  D01F               	goto	l14625
 16635  012676  0105               	movlb	5	; () banked
 16636  012678  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 16637  01267A  0105               	movlb	5	; () banked
 16638  01267C  11E0               	iorwf	(Command@tempLONG+2)& (0+255),w,b
 16639  01267E  E108               	bnz	u19120
 16640  012680  0E60               	movlw	96
 16641  012682  0105               	movlb	5	; () banked
 16642  012684  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 16643  012686  0E09               	movlw	9
 16644  012688  0105               	movlb	5	; () banked
 16645  01268A  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 16646  01268C  A0D8               	btfss	status,0,c
 16647  01268E  D012               	goto	l14625
 16648  012690                     u19120:
 16649                           
 16650                           ; BSR set to: 5
 16651  012690  0105               	movlb	5	; () banked
 16652  012692  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 16653  012694  D00D               	goto	l14623
 16654  012696  0105               	movlb	5	; () banked
 16655  012698  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 16656  01269A  E10C               	bnz	l14625
 16657  01269C  0105               	movlb	5	; () banked
 16658  01269E  05DE               	decf	Command@tempLONG& (0+255),w,b
 16659  0126A0  0EC2               	movlw	194
 16660  0126A2  0105               	movlb	5	; () banked
 16661  0126A4  59DF               	subwfb	(Command@tempLONG+1)& (0+255),w,b
 16662  0126A6  0E01               	movlw	1
 16663  0126A8  0105               	movlb	5	; () banked
 16664  0126AA  59E0               	subwfb	(Command@tempLONG+2)& (0+255),w,b
 16665  0126AC  B0D8               	btfsc	status,0,c
 16666  0126AE  D002               	goto	l14625
 16667  0126B0                     l14623:
 16668                           
 16669                           ; BSR set to: 5
 16670                           ;StringCommand.c: 844: {
 16671                           ;StringCommand.c: 845: __nop();
 16672  0126B0  F000               	nop	
 16673                           
 16674                           ;StringCommand.c: 846: }
 16675  0126B2  D022               	goto	l685
 16676  0126B4                     l14625:
 16677                           
 16678                           ;StringCommand.c: 847: else
 16679                           ;StringCommand.c: 848: {
 16680                           ;StringCommand.c: 849: UARTstring("Invalid Command\r\n");
 16681  0126B4  0E38               	movlw	low STR_315
 16682  0126B6  0101               	movlb	1	; () banked
 16683  0126B8  6F87               	movwf	UARTstring@data& (0+255),b
 16684  0126BA  0EF8               	movlw	high STR_315
 16685  0126BC  0101               	movlb	1	; () banked
 16686  0126BE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 16687  0126C0  ECEB  F0B4         	call	_UARTstring	;wreg free
 16688                           
 16689                           ;StringCommand.c: 850: LCDdisplayFeedback("Invalid Command");
 16690  0126C4  0EA9               	movlw	low STR_316
 16691  0126C6  0101               	movlb	1	; () banked
 16692  0126C8  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16693  0126CA  0EFA               	movlw	high STR_316
 16694  0126CC  0101               	movlb	1	; () banked
 16695  0126CE  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16696  0126D0  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 16697                           
 16698                           ;StringCommand.c: 851: }
 16699                           ;StringCommand.c: 852: }
 16700                           ;StringCommand.c: 853: }
 16701  0126D4  D011               	goto	l685
 16702  0126D6                     l14627:
 16703                           
 16704                           ;StringCommand.c: 854: else
 16705                           ;StringCommand.c: 855: {
 16706                           ;StringCommand.c: 856: UARTstring("Invalid Command\r\n");
 16707  0126D6  0E38               	movlw	low STR_315
 16708  0126D8  0101               	movlb	1	; () banked
 16709  0126DA  6F87               	movwf	UARTstring@data& (0+255),b
 16710  0126DC  0EF8               	movlw	high STR_315
 16711  0126DE  0101               	movlb	1	; () banked
 16712  0126E0  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 16713  0126E2  ECEB  F0B4         	call	_UARTstring	;wreg free
 16714                           
 16715                           ;StringCommand.c: 857: LCDdisplayFeedback("Invalid Command");
 16716  0126E6  0EA9               	movlw	low STR_316
 16717  0126E8  0101               	movlb	1	; () banked
 16718  0126EA  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16719  0126EC  0EFA               	movlw	high STR_316
 16720  0126EE  0101               	movlb	1	; () banked
 16721  0126F0  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16722  0126F2  ECD8  F0BD         	call	_LCDdisplayFeedback	;wreg free
 16723  0126F6  D000               	goto	l685
 16724  0126F8                     l685:
 16725                           
 16726                           ;StringCommand.c: 858: }
 16727                           ;StringCommand.c: 859: UARTstring("\r\n");
 16728  0126F8  0ECE               	movlw	low (STR_282+19)
 16729  0126FA  0101               	movlb	1	; () banked
 16730  0126FC  6F87               	movwf	UARTstring@data& (0+255),b
 16731  0126FE  0EF6               	movlw	high (STR_282+19)
 16732  012700  0101               	movlb	1	; () banked
 16733  012702  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 16734  012704  ECEB  F0B4         	call	_UARTstring	;wreg free
 16735                           
 16736                           ;StringCommand.c: 860: return 1;
 16737  012708  0E01               	movlw	1
 16738  01270A  0012               	return	
 16739  01270C  0012               	return		;funcret
 16740  01270E                     __end_of_Command:
 16741                           	opt stack 0
 16742                           tblptru	equ	0xFF8
 16743                           tblptrh	equ	0xFF7
 16744                           tblptrl	equ	0xFF6
 16745                           tablat	equ	0xFF5
 16746                           prodh	equ	0xFF4
 16747                           prodl	equ	0xFF3
 16748                           intcon	equ	0xFF2
 16749                           intcon2	equ	0xFF1
 16750                           postinc0	equ	0xFEE
 16751                           plusw0	equ	0xFEB
 16752                           wreg	equ	0xFE8
 16753                           postdec1	equ	0xFE5
 16754                           fsr1l	equ	0xFE1
 16755                           indf2	equ	0xFDF
 16756                           postinc2	equ	0xFDE
 16757                           postdec2	equ	0xFDD
 16758                           plusw2	equ	0xFDB
 16759                           fsr2h	equ	0xFDA
 16760                           fsr2l	equ	0xFD9
 16761                           status	equ	0xFD8
 16762                           
 16763 ;; *************** function _lowercase *****************
 16764 ;; Defined at:
 16765 ;;		line 297 in file "MISC.c"
 16766 ;; Parameters:    Size  Location     Type
 16767 ;;  Input           2   14[BANK1 ] PTR unsigned char 
 16768 ;;		 -> Rxdata(100), 
 16769 ;; Auto vars:     Size  Location     Type
 16770 ;;  i               1   17[BANK1 ] unsigned char 
 16771 ;; Return value:  Size  Location     Type
 16772 ;;		None               void
 16773 ;; Registers used:
 16774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16775 ;; Tracked objects:
 16776 ;;		On entry : 0/0
 16777 ;;		On exit  : 0/0
 16778 ;;		Unchanged: 0/0
 16779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16780 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16781 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16782 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16783 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16784 ;;Total ram usage:        4 bytes
 16785 ;; Hardware stack levels used:    1
 16786 ;; Hardware stack levels required when called:    6
 16787 ;; This function calls:
 16788 ;;		Nothing
 16789 ;; This function is called by:
 16790 ;;		_Command
 16791 ;; This function uses a non-reentrant model
 16792 ;;
 16793                           
 16794                           	psect	text22
 16795  016CCC                     __ptext22:
 16796                           	opt stack 0
 16797  016CCC                     _lowercase:
 16798                           	opt stack 23
 16799                           
 16800                           ;MISC.c: 299: unsigned char i =0;
 16801                           
 16802                           ;incstack = 0
 16803  016CCC  0E00               	movlw	0
 16804  016CCE  0101               	movlb	1	; () banked
 16805  016CD0  6F7F               	movwf	lowercase@i& (0+255),b
 16806                           
 16807                           ;MISC.c: 300: while((Input[i]!= 0) && (i < 100))
 16808  016CD2  D02D               	goto	l12885
 16809  016CD4                     l12877:
 16810                           
 16811                           ; BSR set to: 1
 16812                           ;MISC.c: 301: {
 16813                           ;MISC.c: 302: if((Input[i] >= 65) && (Input[i] <= 90 ))
 16814  016CD4  0101               	movlb	1	; () banked
 16815  016CD6  517F               	movf	lowercase@i& (0+255),w,b
 16816  016CD8  0D01               	mullw	1
 16817  016CDA  50F3               	movf	prodl,w,c
 16818  016CDC  0101               	movlb	1	; () banked
 16819  016CDE  257C               	addwf	lowercase@Input& (0+255),w,b
 16820  016CE0  6ED9               	movwf	fsr2l,c
 16821  016CE2  50F4               	movf	prodh,w,c
 16822  016CE4  0101               	movlb	1	; () banked
 16823  016CE6  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16824  016CE8  6EDA               	movwf	fsr2h,c
 16825  016CEA  0E40               	movlw	64
 16826  016CEC  64DF               	cpfsgt	indf2,c
 16827  016CEE  D01C               	goto	l12883
 16828                           
 16829                           ; BSR set to: 1
 16830  016CF0  0101               	movlb	1	; () banked
 16831  016CF2  517F               	movf	lowercase@i& (0+255),w,b
 16832  016CF4  0D01               	mullw	1
 16833  016CF6  50F3               	movf	prodl,w,c
 16834  016CF8  0101               	movlb	1	; () banked
 16835  016CFA  257C               	addwf	lowercase@Input& (0+255),w,b
 16836  016CFC  6ED9               	movwf	fsr2l,c
 16837  016CFE  50F4               	movf	prodh,w,c
 16838  016D00  0101               	movlb	1	; () banked
 16839  016D02  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16840  016D04  6EDA               	movwf	fsr2h,c
 16841  016D06  0E5B               	movlw	91
 16842  016D08  60DF               	cpfslt	indf2,c
 16843  016D0A  D00E               	goto	l12883
 16844                           
 16845                           ; BSR set to: 1
 16846                           ;MISC.c: 303: {
 16847                           ;MISC.c: 304: Input[i] += 32;
 16848  016D0C  0101               	movlb	1	; () banked
 16849  016D0E  517F               	movf	lowercase@i& (0+255),w,b
 16850  016D10  0D01               	mullw	1
 16851  016D12  50F3               	movf	prodl,w,c
 16852  016D14  0101               	movlb	1	; () banked
 16853  016D16  257C               	addwf	lowercase@Input& (0+255),w,b
 16854  016D18  6ED9               	movwf	fsr2l,c
 16855  016D1A  50F4               	movf	prodh,w,c
 16856  016D1C  0101               	movlb	1	; () banked
 16857  016D1E  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16858  016D20  6EDA               	movwf	fsr2h,c
 16859  016D22  0E20               	movlw	32
 16860  016D24  26DF               	addwf	indf2,f,c
 16861  016D26  D000               	goto	l12883
 16862  016D28                     l12883:
 16863                           
 16864                           ; BSR set to: 1
 16865                           ;MISC.c: 305: }
 16866                           ;MISC.c: 306: i++;
 16867  016D28  0101               	movlb	1	; () banked
 16868  016D2A  2B7F               	incf	lowercase@i& (0+255),f,b
 16869  016D2C  D000               	goto	l12885
 16870  016D2E                     l12885:
 16871                           
 16872                           ; BSR set to: 1
 16873  016D2E  0101               	movlb	1	; () banked
 16874  016D30  517F               	movf	lowercase@i& (0+255),w,b
 16875  016D32  0D01               	mullw	1
 16876  016D34  50F3               	movf	prodl,w,c
 16877  016D36  0101               	movlb	1	; () banked
 16878  016D38  257C               	addwf	lowercase@Input& (0+255),w,b
 16879  016D3A  6ED9               	movwf	fsr2l,c
 16880  016D3C  50F4               	movf	prodh,w,c
 16881  016D3E  0101               	movlb	1	; () banked
 16882  016D40  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16883  016D42  6EDA               	movwf	fsr2h,c
 16884  016D44  50DF               	movf	indf2,w,c
 16885  016D46  B4D8               	btfsc	status,2,c
 16886  016D48  0012               	return	
 16887                           
 16888                           ; BSR set to: 1
 16889  016D4A  0E63               	movlw	99
 16890  016D4C  0101               	movlb	1	; () banked
 16891  016D4E  657F               	cpfsgt	lowercase@i& (0+255),b
 16892  016D50  D7C1               	goto	l12877
 16893  016D52  0012               	return	
 16894                           
 16895                           ; BSR set to: 1
 16896  016D54  0012               	return	
 16897                           
 16898                           ; BSR set to: 1
 16899                           
 16900                           ; BSR set to: 1
 16901  016D56  0012               	return		;funcret
 16902  016D58                     __end_of_lowercase:
 16903                           	opt stack 0
 16904                           tblptru	equ	0xFF8
 16905                           tblptrh	equ	0xFF7
 16906                           tblptrl	equ	0xFF6
 16907                           tablat	equ	0xFF5
 16908                           prodh	equ	0xFF4
 16909                           prodl	equ	0xFF3
 16910                           intcon	equ	0xFF2
 16911                           intcon2	equ	0xFF1
 16912                           postinc0	equ	0xFEE
 16913                           plusw0	equ	0xFEB
 16914                           wreg	equ	0xFE8
 16915                           postdec1	equ	0xFE5
 16916                           fsr1l	equ	0xFE1
 16917                           indf2	equ	0xFDF
 16918                           postinc2	equ	0xFDE
 16919                           postdec2	equ	0xFDD
 16920                           plusw2	equ	0xFDB
 16921                           fsr2h	equ	0xFDA
 16922                           fsr2l	equ	0xFD9
 16923                           status	equ	0xFD8
 16924                           
 16925 ;; *************** function ___lwtoft *****************
 16926 ;; Defined at:
 16927 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
 16928 ;; Parameters:    Size  Location     Type
 16929 ;;  c               2   22[BANK1 ] unsigned int 
 16930 ;; Auto vars:     Size  Location     Type
 16931 ;;		None
 16932 ;; Return value:  Size  Location     Type
 16933 ;;                  3   22[BANK1 ] float 
 16934 ;; Registers used:
 16935 ;;		wreg, status,2, status,0, cstack
 16936 ;; Tracked objects:
 16937 ;;		On entry : 0/0
 16938 ;;		On exit  : 0/0
 16939 ;;		Unchanged: 0/0
 16940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16941 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 16942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16944 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 16945 ;;Total ram usage:        3 bytes
 16946 ;; Hardware stack levels used:    1
 16947 ;; Hardware stack levels required when called:    7
 16948 ;; This function calls:
 16949 ;;		___ftpack
 16950 ;; This function is called by:
 16951 ;;		_Command
 16952 ;; This function uses a non-reentrant model
 16953 ;;
 16954                           
 16955                           	psect	text23
 16956  017D9C                     __ptext23:
 16957                           	opt stack 0
 16958  017D9C                     ___lwtoft:
 16959                           	opt stack 22
 16960                           
 16961                           ; BSR set to: 1
 16962                           ;incstack = 0
 16963  017D9C  C184  F17C         	movff	___lwtoft@c,___ftpack@arg
 16964  017DA0  C185  F17D         	movff	___lwtoft@c+1,___ftpack@arg+1
 16965  017DA4  0101               	movlb	1	; () banked
 16966  017DA6  6B7E               	clrf	(___ftpack@arg+2)& (0+255),b
 16967  017DA8  0E8E               	movlw	142
 16968  017DAA  0101               	movlb	1	; () banked
 16969  017DAC  6F7F               	movwf	___ftpack@exp& (0+255),b
 16970  017DAE  0E00               	movlw	0
 16971  017DB0  0101               	movlb	1	; () banked
 16972  017DB2  6F80               	movwf	___ftpack@sign& (0+255),b
 16973  017DB4  ECA8  F0AC         	call	___ftpack	;wreg free
 16974  017DB8  C17C  F184         	movff	?___ftpack,?___lwtoft
 16975  017DBC  C17D  F185         	movff	?___ftpack+1,?___lwtoft+1
 16976  017DC0  C17E  F186         	movff	?___ftpack+2,?___lwtoft+2
 16977  017DC4  0012               	return	
 16978  017DC6  0012               	return		;funcret
 16979  017DC8                     __end_of___lwtoft:
 16980                           	opt stack 0
 16981                           tblptru	equ	0xFF8
 16982                           tblptrh	equ	0xFF7
 16983                           tblptrl	equ	0xFF6
 16984                           tablat	equ	0xFF5
 16985                           prodh	equ	0xFF4
 16986                           prodl	equ	0xFF3
 16987                           intcon	equ	0xFF2
 16988                           intcon2	equ	0xFF1
 16989                           postinc0	equ	0xFEE
 16990                           plusw0	equ	0xFEB
 16991                           wreg	equ	0xFE8
 16992                           postdec1	equ	0xFE5
 16993                           fsr1l	equ	0xFE1
 16994                           indf2	equ	0xFDF
 16995                           postinc2	equ	0xFDE
 16996                           postdec2	equ	0xFDD
 16997                           plusw2	equ	0xFDB
 16998                           fsr2h	equ	0xFDA
 16999                           fsr2l	equ	0xFD9
 17000                           status	equ	0xFD8
 17001                           
 17002 ;; *************** function ___lwmod *****************
 17003 ;; Defined at:
 17004 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 17005 ;; Parameters:    Size  Location     Type
 17006 ;;  dividend        2   14[BANK1 ] unsigned int 
 17007 ;;  divisor         2   16[BANK1 ] unsigned int 
 17008 ;; Auto vars:     Size  Location     Type
 17009 ;;  counter         1   18[BANK1 ] unsigned char 
 17010 ;; Return value:  Size  Location     Type
 17011 ;;                  2   14[BANK1 ] unsigned int 
 17012 ;; Registers used:
 17013 ;;		wreg, status,2, status,0
 17014 ;; Tracked objects:
 17015 ;;		On entry : 0/0
 17016 ;;		On exit  : 0/0
 17017 ;;		Unchanged: 0/0
 17018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17019 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17020 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17022 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17023 ;;Total ram usage:        5 bytes
 17024 ;; Hardware stack levels used:    1
 17025 ;; Hardware stack levels required when called:    6
 17026 ;; This function calls:
 17027 ;;		Nothing
 17028 ;; This function is called by:
 17029 ;;		_Command
 17030 ;; This function uses a non-reentrant model
 17031 ;;
 17032                           
 17033                           	psect	text24
 17034  017398                     __ptext24:
 17035                           	opt stack 0
 17036  017398                     ___lwmod:
 17037                           	opt stack 23
 17038                           
 17039                           ;incstack = 0
 17040  017398  0101               	movlb	1	; () banked
 17041  01739A  517E               	movf	___lwmod@divisor& (0+255),w,b
 17042  01739C  0101               	movlb	1	; () banked
 17043  01739E  117F               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17044  0173A0  B4D8               	btfsc	status,2,c
 17045  0173A2  D02B               	goto	l2422
 17046                           
 17047                           ; BSR set to: 1
 17048  0173A4  0E01               	movlw	1
 17049  0173A6  0101               	movlb	1	; () banked
 17050  0173A8  6F80               	movwf	___lwmod@counter& (0+255),b
 17051  0173AA  D007               	goto	l13539
 17052  0173AC                     l13537:
 17053                           
 17054                           ; BSR set to: 1
 17055  0173AC  0101               	movlb	1	; () banked
 17056  0173AE  90D8               	bcf	status,0,c
 17057  0173B0  377E               	rlcf	___lwmod@divisor& (0+255),f,b
 17058  0173B2  377F               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17059  0173B4  0101               	movlb	1	; () banked
 17060  0173B6  2B80               	incf	___lwmod@counter& (0+255),f,b
 17061  0173B8  D000               	goto	l13539
 17062  0173BA                     l13539:
 17063                           
 17064                           ; BSR set to: 1
 17065  0173BA  0101               	movlb	1	; () banked
 17066  0173BC  BF7F               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
 17067  0173BE  D002               	goto	l13541
 17068  0173C0  D7F5               	goto	l13537
 17069                           
 17070                           ; BSR set to: 1
 17071  0173C2  D000               	goto	l13541
 17072  0173C4                     l13541:
 17073                           
 17074                           ; BSR set to: 1
 17075  0173C4  0101               	movlb	1	; () banked
 17076  0173C6  517E               	movf	___lwmod@divisor& (0+255),w,b
 17077  0173C8  0101               	movlb	1	; () banked
 17078  0173CA  5D7C               	subwf	___lwmod@dividend& (0+255),w,b
 17079  0173CC  0101               	movlb	1	; () banked
 17080  0173CE  517F               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17081  0173D0  0101               	movlb	1	; () banked
 17082  0173D2  597D               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17083  0173D4  A0D8               	btfss	status,0,c
 17084  0173D6  D009               	goto	l13545
 17085                           
 17086                           ; BSR set to: 1
 17087  0173D8  0101               	movlb	1	; () banked
 17088  0173DA  517E               	movf	___lwmod@divisor& (0+255),w,b
 17089  0173DC  0101               	movlb	1	; () banked
 17090  0173DE  5F7C               	subwf	___lwmod@dividend& (0+255),f,b
 17091  0173E0  0101               	movlb	1	; () banked
 17092  0173E2  517F               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17093  0173E4  0101               	movlb	1	; () banked
 17094  0173E6  5B7D               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17095  0173E8  D000               	goto	l13545
 17096  0173EA                     l13545:
 17097                           
 17098                           ; BSR set to: 1
 17099  0173EA  0101               	movlb	1	; () banked
 17100  0173EC  90D8               	bcf	status,0,c
 17101  0173EE  337F               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17102  0173F0  337E               	rrcf	___lwmod@divisor& (0+255),f,b
 17103                           
 17104                           ; BSR set to: 1
 17105  0173F2  0101               	movlb	1	; () banked
 17106  0173F4  2F80               	decfsz	___lwmod@counter& (0+255),f,b
 17107  0173F6  D7E6               	goto	l13541
 17108  0173F8  D000               	goto	l2422
 17109  0173FA                     l2422:
 17110                           
 17111                           ; BSR set to: 1
 17112  0173FA  C17C  F17C         	movff	___lwmod@dividend,?___lwmod
 17113  0173FE  C17D  F17D         	movff	___lwmod@dividend+1,?___lwmod+1
 17114                           
 17115                           ; BSR set to: 1
 17116  017402  0012               	return		;funcret
 17117  017404                     __end_of___lwmod:
 17118                           	opt stack 0
 17119                           tblptru	equ	0xFF8
 17120                           tblptrh	equ	0xFF7
 17121                           tblptrl	equ	0xFF6
 17122                           tablat	equ	0xFF5
 17123                           prodh	equ	0xFF4
 17124                           prodl	equ	0xFF3
 17125                           intcon	equ	0xFF2
 17126                           intcon2	equ	0xFF1
 17127                           postinc0	equ	0xFEE
 17128                           plusw0	equ	0xFEB
 17129                           wreg	equ	0xFE8
 17130                           postdec1	equ	0xFE5
 17131                           fsr1l	equ	0xFE1
 17132                           indf2	equ	0xFDF
 17133                           postinc2	equ	0xFDE
 17134                           postdec2	equ	0xFDD
 17135                           plusw2	equ	0xFDB
 17136                           fsr2h	equ	0xFDA
 17137                           fsr2l	equ	0xFD9
 17138                           status	equ	0xFD8
 17139                           
 17140 ;; *************** function _StringMatch *****************
 17141 ;; Defined at:
 17142 ;;		line 126 in file "MISC.c"
 17143 ;; Parameters:    Size  Location     Type
 17144 ;;  This            2   14[BANK1 ] PTR unsigned char 
 17145 ;;		 -> Rxdata(100), 
 17146 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 17147 ;;		 -> STR_299(6), STR_271(2), STR_258(18), STR_255(17), 
 17148 ;;		 -> STR_112(18), STR_109(17), STR_106(15), STR_103(14), 
 17149 ;;		 -> STR_100(17), STR_99(16), STR_79(18), STR_76(17), 
 17150 ;;		 -> STR_73(20), STR_72(19), STR_55(9), STR_52(8), 
 17151 ;;		 -> STR_49(5), STR_46(9), STR_43(8), STR_40(5), 
 17152 ;;		 -> STR_37(2), 
 17153 ;; Auto vars:     Size  Location     Type
 17154 ;;		None
 17155 ;; Return value:  Size  Location     Type
 17156 ;;                  1    wreg      unsigned char 
 17157 ;; Registers used:
 17158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17159 ;; Tracked objects:
 17160 ;;		On entry : 0/0
 17161 ;;		On exit  : 0/0
 17162 ;;		Unchanged: 0/0
 17163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17164 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17166 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17167 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17168 ;;Total ram usage:        5 bytes
 17169 ;; Hardware stack levels used:    1
 17170 ;; Hardware stack levels required when called:    6
 17171 ;; This function calls:
 17172 ;;		Nothing
 17173 ;; This function is called by:
 17174 ;;		_Command
 17175 ;; This function uses a non-reentrant model
 17176 ;;
 17177                           
 17178                           	psect	text25
 17179  016EE8                     __ptext25:
 17180                           	opt stack 0
 17181  016EE8                     _StringMatch:
 17182                           	opt stack 23
 17183                           
 17184                           ;MISC.c: 128: while(*This != 0)
 17185                           
 17186                           ; BSR set to: 1
 17187                           ;incstack = 0
 17188  016EE8  D027               	goto	l12717
 17189  016EEA                     l12707:
 17190                           
 17191                           ;MISC.c: 129: {
 17192                           ;MISC.c: 130: if(*This != *That || *That == 0)
 17193  016EEA  C17C  FFD9         	movff	StringMatch@This,fsr2l
 17194  016EEE  C17D  FFDA         	movff	StringMatch@This+1,fsr2h
 17195  016EF2  50DF               	movf	indf2,w,c
 17196  016EF4  0101               	movlb	1	; () banked
 17197  016EF6  6F80               	movwf	??_StringMatch& (0+255),b
 17198  016EF8  C17E  FFF6         	movff	StringMatch@That,tblptrl
 17199  016EFC  C17F  FFF7         	movff	StringMatch@That+1,tblptrh
 17200  016F00                     	if	0	;tblptru may be non-zero
 17201  016F00                     	endif
 17202  016F00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17203  016F00  0E00               	movlw	low (__mediumconst shr (0+16))
 17204  016F02  6EF8               	movwf	tblptru,c
 17205  016F04                     	endif
 17206  016F04  0008               	tblrd		*
 17207  016F06  50F5               	movf	tablat,w,c
 17208  016F08  0101               	movlb	1	; () banked
 17209  016F0A  1980               	xorwf	??_StringMatch& (0+255),w,b
 17210  016F0C  A4D8               	btfss	status,2,c
 17211  016F0E  D00B               	goto	l12711
 17212                           
 17213                           ; BSR set to: 1
 17214  016F10  C17E  FFF6         	movff	StringMatch@That,tblptrl
 17215  016F14  C17F  FFF7         	movff	StringMatch@That+1,tblptrh
 17216  016F18                     	if	0	;tblptru may be non-zero
 17217  016F18                     	endif
 17218  016F18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17219  016F18  0E00               	movlw	low (__mediumconst shr (0+16))
 17220  016F1A  6EF8               	movwf	tblptru,c
 17221  016F1C                     	endif
 17222  016F1C  0008               	tblrd		*
 17223  016F1E  50F5               	movf	tablat,w,c
 17224  016F20  0900               	iorlw	0
 17225  016F22  A4D8               	btfss	status,2,c
 17226  016F24  D002               	goto	l12715
 17227  016F26                     l12711:
 17228                           
 17229                           ; BSR set to: 1
 17230                           ;MISC.c: 131: {
 17231                           ;MISC.c: 132: return 0;
 17232  016F26  0E00               	movlw	0
 17233                           
 17234                           ; BSR set to: 1
 17235  016F28  0012               	return	
 17236  016F2A                     l12715:
 17237                           
 17238                           ; BSR set to: 1
 17239                           ;MISC.c: 133: }
 17240                           ;MISC.c: 134: This++;
 17241  016F2A  0101               	movlb	1	; () banked
 17242  016F2C  4B7C               	infsnz	StringMatch@This& (0+255),f,b
 17243  016F2E  2B7D               	incf	(StringMatch@This+1)& (0+255),f,b
 17244                           
 17245                           ;MISC.c: 135: That++;
 17246  016F30  0101               	movlb	1	; () banked
 17247  016F32  4B7E               	infsnz	StringMatch@That& (0+255),f,b
 17248  016F34  2B7F               	incf	(StringMatch@That+1)& (0+255),f,b
 17249  016F36  D000               	goto	l12717
 17250  016F38                     l12717:
 17251  016F38  C17C  FFD9         	movff	StringMatch@This,fsr2l
 17252  016F3C  C17D  FFDA         	movff	StringMatch@This+1,fsr2h
 17253  016F40  50DF               	movf	indf2,w,c
 17254  016F42  A4D8               	btfss	status,2,c
 17255  016F44  D7D2               	goto	l12707
 17256                           
 17257                           ;MISC.c: 136: }
 17258                           ;MISC.c: 137: if(*That == 0)
 17259  016F46  C17E  FFF6         	movff	StringMatch@That,tblptrl
 17260  016F4A  C17F  FFF7         	movff	StringMatch@That+1,tblptrh
 17261  016F4E                     	if	0	;tblptru may be non-zero
 17262  016F4E                     	endif
 17263  016F4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17264  016F4E  0E00               	movlw	low (__mediumconst shr (0+16))
 17265  016F50  6EF8               	movwf	tblptru,c
 17266  016F52                     	endif
 17267  016F52  0008               	tblrd		*
 17268  016F54  50F5               	movf	tablat,w,c
 17269  016F56  0900               	iorlw	0
 17270  016F58  A4D8               	btfss	status,2,c
 17271  016F5A  D002               	goto	l12727
 17272                           
 17273                           ;MISC.c: 138: {
 17274                           ;MISC.c: 139: return 1;
 17275  016F5C  0E01               	movlw	1
 17276                           
 17277                           ;MISC.c: 140: }
 17278  016F5E  0012               	return	
 17279  016F60                     l12727:
 17280                           
 17281                           ;MISC.c: 141: else
 17282                           ;MISC.c: 142: {
 17283                           ;MISC.c: 143: return 0;
 17284  016F60  0E00               	movlw	0
 17285  016F62  0012               	return	
 17286  016F64  0012               	return		;funcret
 17287  016F66                     __end_of_StringMatch:
 17288                           	opt stack 0
 17289                           tblptru	equ	0xFF8
 17290                           tblptrh	equ	0xFF7
 17291                           tblptrl	equ	0xFF6
 17292                           tablat	equ	0xFF5
 17293                           prodh	equ	0xFF4
 17294                           prodl	equ	0xFF3
 17295                           intcon	equ	0xFF2
 17296                           intcon2	equ	0xFF1
 17297                           postinc0	equ	0xFEE
 17298                           plusw0	equ	0xFEB
 17299                           wreg	equ	0xFE8
 17300                           postdec1	equ	0xFE5
 17301                           fsr1l	equ	0xFE1
 17302                           indf2	equ	0xFDF
 17303                           postinc2	equ	0xFDE
 17304                           postdec2	equ	0xFDD
 17305                           plusw2	equ	0xFDB
 17306                           fsr2h	equ	0xFDA
 17307                           fsr2l	equ	0xFD9
 17308                           status	equ	0xFD8
 17309                           
 17310 ;; *************** function _StringContains *****************
 17311 ;; Defined at:
 17312 ;;		line 153 in file "MISC.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;  This            2   14[BANK1 ] PTR unsigned char 
 17315 ;;		 -> Rxdata(100), 
 17316 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 17317 ;;		 -> STR_314(2), STR_313(14), STR_312(7), STR_310(13), 
 17318 ;;		 -> STR_309(12), STR_308(18), STR_307(17), STR_306(16), 
 17319 ;;		 -> STR_305(2), STR_304(11), STR_303(8), STR_302(8), 
 17320 ;;		 -> STR_301(16), STR_254(2), STR_230(4), STR_223(5), 
 17321 ;;		 -> STR_220(8), STR_219(2), STR_199(2), STR_198(2), 
 17322 ;;		 -> STR_182(2), STR_181(2), STR_162(2), STR_159(2), 
 17323 ;;		 -> STR_143(5), STR_142(6), STR_139(4), STR_138(6), 
 17324 ;;		 -> STR_135(2), STR_134(6), STR_133(2), STR_132(10), 
 17325 ;;		 -> STR_131(6), STR_130(6), STR_98(4), STR_97(6), 
 17326 ;;		 -> STR_96(2), STR_71(2), STR_39(2), 
 17327 ;; Auto vars:     Size  Location     Type
 17328 ;;		None
 17329 ;; Return value:  Size  Location     Type
 17330 ;;                  1    wreg      unsigned char 
 17331 ;; Registers used:
 17332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17333 ;; Tracked objects:
 17334 ;;		On entry : 0/0
 17335 ;;		On exit  : 0/0
 17336 ;;		Unchanged: 0/0
 17337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17338 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17340 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17341 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17342 ;;Total ram usage:        5 bytes
 17343 ;; Hardware stack levels used:    1
 17344 ;; Hardware stack levels required when called:    6
 17345 ;; This function calls:
 17346 ;;		Nothing
 17347 ;; This function is called by:
 17348 ;;		_Command
 17349 ;; This function uses a non-reentrant model
 17350 ;;
 17351                           
 17352                           	psect	text26
 17353  016E68                     __ptext26:
 17354                           	opt stack 0
 17355  016E68                     _StringContains:
 17356                           	opt stack 23
 17357                           
 17358                           ;MISC.c: 155: while(*This != 0)
 17359                           
 17360                           ;incstack = 0
 17361  016E68  D035               	goto	l12751
 17362                           
 17363                           ;MISC.c: 156: {
 17364                           ;MISC.c: 157: while(*This == *That)
 17365  016E6A  D01D               	goto	l12747
 17366  016E6C                     l12733:
 17367                           
 17368                           ;MISC.c: 158: {
 17369                           ;MISC.c: 159: That++;
 17370  016E6C  0101               	movlb	1	; () banked
 17371  016E6E  4B7E               	infsnz	StringContains@That& (0+255),f,b
 17372  016E70  2B7F               	incf	(StringContains@That+1)& (0+255),f,b
 17373                           
 17374                           ;MISC.c: 160: This++;
 17375  016E72  0101               	movlb	1	; () banked
 17376  016E74  4B7C               	infsnz	StringContains@This& (0+255),f,b
 17377  016E76  2B7D               	incf	(StringContains@This+1)& (0+255),f,b
 17378                           
 17379                           ; BSR set to: 1
 17380                           ;MISC.c: 161: if(*That == 0)
 17381  016E78  C17E  FFF6         	movff	StringContains@That,tblptrl
 17382  016E7C  C17F  FFF7         	movff	StringContains@That+1,tblptrh
 17383  016E80                     	if	0	;tblptru may be non-zero
 17384  016E80                     	endif
 17385  016E80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17386  016E80  0E00               	movlw	low (__mediumconst shr (0+16))
 17387  016E82  6EF8               	movwf	tblptru,c
 17388  016E84                     	endif
 17389  016E84  0008               	tblrd		*
 17390  016E86  50F5               	movf	tablat,w,c
 17391  016E88  0900               	iorlw	0
 17392  016E8A  A4D8               	btfss	status,2,c
 17393  016E8C  D002               	goto	l12741
 17394                           
 17395                           ; BSR set to: 1
 17396                           ;MISC.c: 162: {
 17397                           ;MISC.c: 163: return 1;
 17398  016E8E  0E01               	movlw	1
 17399                           
 17400                           ; BSR set to: 1
 17401  016E90  0012               	return	
 17402  016E92                     l12741:
 17403                           
 17404                           ; BSR set to: 1
 17405                           ;MISC.c: 164: }
 17406                           ;MISC.c: 165: if(*This == 0)
 17407  016E92  C17C  FFD9         	movff	StringContains@This,fsr2l
 17408  016E96  C17D  FFDA         	movff	StringContains@This+1,fsr2h
 17409  016E9A  50DF               	movf	indf2,w,c
 17410  016E9C  A4D8               	btfss	status,2,c
 17411  016E9E  D003               	goto	l12747
 17412                           
 17413                           ; BSR set to: 1
 17414                           ;MISC.c: 166: {
 17415                           ;MISC.c: 167: return 0;
 17416  016EA0  0E00               	movlw	0
 17417                           
 17418                           ; BSR set to: 1
 17419  016EA2  0012               	return	
 17420                           
 17421                           ; BSR set to: 1
 17422  016EA4  D000               	goto	l12747
 17423  016EA6                     l12747:
 17424  016EA6  C17C  FFD9         	movff	StringContains@This,fsr2l
 17425  016EAA  C17D  FFDA         	movff	StringContains@This+1,fsr2h
 17426  016EAE  50DF               	movf	indf2,w,c
 17427  016EB0  0101               	movlb	1	; () banked
 17428  016EB2  6F80               	movwf	??_StringContains& (0+255),b
 17429  016EB4  C17E  FFF6         	movff	StringContains@That,tblptrl
 17430  016EB8  C17F  FFF7         	movff	StringContains@That+1,tblptrh
 17431  016EBC                     	if	0	;tblptru may be non-zero
 17432  016EBC                     	endif
 17433  016EBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17434  016EBC  0E00               	movlw	low (__mediumconst shr (0+16))
 17435  016EBE  6EF8               	movwf	tblptru,c
 17436  016EC0                     	endif
 17437  016EC0  0008               	tblrd		*
 17438  016EC2  50F5               	movf	tablat,w,c
 17439  016EC4  0101               	movlb	1	; () banked
 17440  016EC6  1980               	xorwf	??_StringContains& (0+255),w,b
 17441  016EC8  B4D8               	btfsc	status,2,c
 17442  016ECA  D7D0               	goto	l12733
 17443                           
 17444                           ; BSR set to: 1
 17445                           ;MISC.c: 168: }
 17446                           ;MISC.c: 169: }
 17447                           ;MISC.c: 170: This++;
 17448                           
 17449                           ; BSR set to: 1
 17450  016ECC  0101               	movlb	1	; () banked
 17451  016ECE  4B7C               	infsnz	StringContains@This& (0+255),f,b
 17452  016ED0  2B7D               	incf	(StringContains@This+1)& (0+255),f,b
 17453  016ED2  D000               	goto	l12751
 17454  016ED4                     l12751:
 17455  016ED4  C17C  FFD9         	movff	StringContains@This,fsr2l
 17456  016ED8  C17D  FFDA         	movff	StringContains@This+1,fsr2h
 17457  016EDC  50DF               	movf	indf2,w,c
 17458  016EDE  A4D8               	btfss	status,2,c
 17459  016EE0  D7E2               	goto	l12747
 17460                           
 17461                           ;MISC.c: 171: }
 17462                           ;MISC.c: 172: return 0;
 17463  016EE2  0E00               	movlw	0
 17464  016EE4  0012               	return	
 17465  016EE6  0012               	return		;funcret
 17466  016EE8                     __end_of_StringContains:
 17467                           	opt stack 0
 17468                           tblptru	equ	0xFF8
 17469                           tblptrh	equ	0xFF7
 17470                           tblptrl	equ	0xFF6
 17471                           tablat	equ	0xFF5
 17472                           prodh	equ	0xFF4
 17473                           prodl	equ	0xFF3
 17474                           intcon	equ	0xFF2
 17475                           intcon2	equ	0xFF1
 17476                           postinc0	equ	0xFEE
 17477                           plusw0	equ	0xFEB
 17478                           wreg	equ	0xFE8
 17479                           postdec1	equ	0xFE5
 17480                           fsr1l	equ	0xFE1
 17481                           indf2	equ	0xFDF
 17482                           postinc2	equ	0xFDE
 17483                           postdec2	equ	0xFDD
 17484                           plusw2	equ	0xFDB
 17485                           fsr2h	equ	0xFDA
 17486                           fsr2l	equ	0xFD9
 17487                           status	equ	0xFD8
 17488                           
 17489 ;; *************** function _StringAddEqual *****************
 17490 ;; Defined at:
 17491 ;;		line 315 in file "MISC.c"
 17492 ;; Parameters:    Size  Location     Type
 17493 ;;  Input           2   29[BANK1 ] PTR unsigned char 
 17494 ;;		 -> Rxdata(100), 
 17495 ;; Auto vars:     Size  Location     Type
 17496 ;;  temp          100    0[BANK2 ] unsigned char [100]
 17497 ;;  j               1  102[BANK2 ] unsigned char 
 17498 ;;  i               1  101[BANK2 ] unsigned char 
 17499 ;;  firstnumber     1  100[BANK2 ] unsigned char 
 17500 ;; Return value:  Size  Location     Type
 17501 ;;                  1    wreg      unsigned char 
 17502 ;; Registers used:
 17503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17504 ;; Tracked objects:
 17505 ;;		On entry : 0/0
 17506 ;;		On exit  : 0/0
 17507 ;;		Unchanged: 0/0
 17508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17509 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17510 ;;      Locals:         0       0       0     103       0       0       0       0       0       0       0       0       
      +0       0
 17511 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17512 ;;      Totals:         0       0       4     103       0       0       0       0       0       0       0       0       
      +0       0
 17513 ;;Total ram usage:      107 bytes
 17514 ;; Hardware stack levels used:    1
 17515 ;; Hardware stack levels required when called:    8
 17516 ;; This function calls:
 17517 ;;		_BufferCopy
 17518 ;;		_cleanBuffer
 17519 ;; This function is called by:
 17520 ;;		_Command
 17521 ;; This function uses a non-reentrant model
 17522 ;;
 17523                           
 17524                           	psect	text27
 17525  014E5E                     __ptext27:
 17526                           	opt stack 0
 17527  014E5E                     _StringAddEqual:
 17528                           	opt stack 21
 17529                           
 17530                           ;MISC.c: 317: unsigned char i =0;
 17531                           
 17532                           ;incstack = 0
 17533  014E5E  0E00               	movlw	0
 17534  014E60  0102               	movlb	2	; () banked
 17535  014E62  6F65               	movwf	StringAddEqual@i& (0+255),b
 17536                           
 17537                           ;MISC.c: 318: unsigned char j =0;
 17538  014E64  0E00               	movlw	0
 17539  014E66  0102               	movlb	2	; () banked
 17540  014E68  6F66               	movwf	StringAddEqual@j& (0+255),b
 17541                           
 17542                           ;MISC.c: 319: unsigned char firstnumber =200;
 17543  014E6A  0EC8               	movlw	200
 17544  014E6C  0102               	movlb	2	; () banked
 17545  014E6E  6F64               	movwf	StringAddEqual@firstnumber& (0+255),b
 17546                           
 17547                           ; BSR set to: 2
 17548                           ;MISC.c: 320: unsigned char temp[100];
 17549                           ;MISC.c: 321: cleanBuffer(temp,100);
 17550  014E70  0E00               	movlw	low StringAddEqual@temp
 17551  014E72  0101               	movlb	1	; () banked
 17552  014E74  6F7C               	movwf	cleanBuffer@data& (0+255),b
 17553  014E76  0E02               	movlw	high StringAddEqual@temp
 17554  014E78  0101               	movlb	1	; () banked
 17555  014E7A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 17556  014E7C  0E00               	movlw	0
 17557  014E7E  0101               	movlb	1	; () banked
 17558  014E80  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 17559  014E82  0E64               	movlw	100
 17560  014E84  6F7E               	movwf	cleanBuffer@count& (0+255),b
 17561  014E86  ECCB  F0BB         	call	_cleanBuffer	;wreg free
 17562                           
 17563                           ;MISC.c: 322: while(Input[i] != 0)
 17564  014E8A  D032               	goto	l12901
 17565  014E8C                     l12893:
 17566                           
 17567                           ;MISC.c: 323: {
 17568                           ;MISC.c: 324: if((Input[i] >= 48) && (Input[i] <= 57) || (Input[i] == '-'))
 17569  014E8C  0102               	movlb	2	; () banked
 17570  014E8E  5165               	movf	StringAddEqual@i& (0+255),w,b
 17571  014E90  0D01               	mullw	1
 17572  014E92  50F3               	movf	prodl,w,c
 17573  014E94  0101               	movlb	1	; () banked
 17574  014E96  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17575  014E98  6ED9               	movwf	fsr2l,c
 17576  014E9A  50F4               	movf	prodh,w,c
 17577  014E9C  0101               	movlb	1	; () banked
 17578  014E9E  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17579  014EA0  6EDA               	movwf	fsr2h,c
 17580  014EA2  0E2F               	movlw	47
 17581  014EA4  64DF               	cpfsgt	indf2,c
 17582  014EA6  D00F               	goto	l12897
 17583                           
 17584                           ; BSR set to: 1
 17585  014EA8  0102               	movlb	2	; () banked
 17586  014EAA  5165               	movf	StringAddEqual@i& (0+255),w,b
 17587  014EAC  0D01               	mullw	1
 17588  014EAE  50F3               	movf	prodl,w,c
 17589  014EB0  0101               	movlb	1	; () banked
 17590  014EB2  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17591  014EB4  6ED9               	movwf	fsr2l,c
 17592  014EB6  50F4               	movf	prodh,w,c
 17593  014EB8  0101               	movlb	1	; () banked
 17594  014EBA  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17595  014EBC  6EDA               	movwf	fsr2h,c
 17596  014EBE  0E39               	movlw	57
 17597  014EC0  64DF               	cpfsgt	indf2,c
 17598  014EC2  D010               	goto	l388
 17599  014EC4  D000               	goto	l12897
 17600  014EC6                     l12897:
 17601                           
 17602                           ; BSR set to: 1
 17603  014EC6  0102               	movlb	2	; () banked
 17604  014EC8  5165               	movf	StringAddEqual@i& (0+255),w,b
 17605  014ECA  0D01               	mullw	1
 17606  014ECC  50F3               	movf	prodl,w,c
 17607  014ECE  0101               	movlb	1	; () banked
 17608  014ED0  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17609  014ED2  6ED9               	movwf	fsr2l,c
 17610  014ED4  50F4               	movf	prodh,w,c
 17611  014ED6  0101               	movlb	1	; () banked
 17612  014ED8  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17613  014EDA  6EDA               	movwf	fsr2h,c
 17614  014EDC  0E2D               	movlw	45
 17615  014EDE  18DE               	xorwf	postinc2,w,c
 17616  014EE0  A4D8               	btfss	status,2,c
 17617  014EE2  D003               	goto	l12899
 17618  014EE4                     l388:
 17619                           
 17620                           ; BSR set to: 1
 17621                           ;MISC.c: 325: {
 17622                           ;MISC.c: 326: firstnumber=i;
 17623  014EE4  C265  F264         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 17624                           
 17625                           ;MISC.c: 327: break;
 17626  014EE8  D011               	goto	l12903
 17627  014EEA                     l12899:
 17628                           
 17629                           ; BSR set to: 1
 17630                           ;MISC.c: 328: }
 17631                           ;MISC.c: 329: i++;
 17632  014EEA  0102               	movlb	2	; () banked
 17633  014EEC  2B65               	incf	StringAddEqual@i& (0+255),f,b
 17634  014EEE  D000               	goto	l12901
 17635  014EF0                     l12901:
 17636  014EF0  0102               	movlb	2	; () banked
 17637  014EF2  5165               	movf	StringAddEqual@i& (0+255),w,b
 17638  014EF4  0D01               	mullw	1
 17639  014EF6  50F3               	movf	prodl,w,c
 17640  014EF8  0101               	movlb	1	; () banked
 17641  014EFA  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17642  014EFC  6ED9               	movwf	fsr2l,c
 17643  014EFE  50F4               	movf	prodh,w,c
 17644  014F00  0101               	movlb	1	; () banked
 17645  014F02  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17646  014F04  6EDA               	movwf	fsr2h,c
 17647  014F06  50DF               	movf	indf2,w,c
 17648  014F08  A4D8               	btfss	status,2,c
 17649  014F0A  D7C0               	goto	l12893
 17650  014F0C                     l12903:
 17651                           
 17652                           ; BSR set to: 1
 17653                           ;MISC.c: 330: }
 17654                           ;MISC.c: 331: if(firstnumber ==200)
 17655  014F0C  0EC8               	movlw	200
 17656  014F0E  0102               	movlb	2	; () banked
 17657  014F10  1964               	xorwf	StringAddEqual@firstnumber& (0+255),w,b
 17658  014F12  B4D8               	btfsc	status,2,c
 17659  014F14  0012               	return	
 17660  014F16  D001               	goto	l12907
 17661                           
 17662                           ; BSR set to: 2
 17663                           ;MISC.c: 332: {
 17664                           ;MISC.c: 333: return 0;
 17665                           ;	Return value of _StringAddEqual is never used
 17666  014F18  0012               	return	
 17667  014F1A                     l12907:
 17668                           
 17669                           ; BSR set to: 2
 17670                           ;MISC.c: 334: }
 17671                           ;MISC.c: 335: for(j=0;j<firstnumber;j++)
 17672  014F1A  0E00               	movlw	0
 17673  014F1C  0102               	movlb	2	; () banked
 17674  014F1E  6F66               	movwf	StringAddEqual@j& (0+255),b
 17675  014F20  D019               	goto	l12913
 17676  014F22                     l12909:
 17677                           
 17678                           ; BSR set to: 2
 17679                           ;MISC.c: 336: {
 17680                           ;MISC.c: 337: temp[j] = Input[j];
 17681  014F22  0102               	movlb	2	; () banked
 17682  014F24  5166               	movf	StringAddEqual@j& (0+255),w,b
 17683  014F26  0D01               	mullw	1
 17684  014F28  50F3               	movf	prodl,w,c
 17685  014F2A  0101               	movlb	1	; () banked
 17686  014F2C  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17687  014F2E  6ED9               	movwf	fsr2l,c
 17688  014F30  50F4               	movf	prodh,w,c
 17689  014F32  0101               	movlb	1	; () banked
 17690  014F34  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17691  014F36  6EDA               	movwf	fsr2h,c
 17692  014F38  0102               	movlb	2	; () banked
 17693  014F3A  5166               	movf	StringAddEqual@j& (0+255),w,b
 17694  014F3C  0D01               	mullw	1
 17695  014F3E  0E00               	movlw	low StringAddEqual@temp
 17696  014F40  24F3               	addwf	prodl,w,c
 17697  014F42  6EE1               	movwf	fsr1l,c
 17698  014F44  0E02               	movlw	high StringAddEqual@temp
 17699  014F46  20F4               	addwfc	prodh,w,c
 17700  014F48  6EE2               	movwf	fsr1h,c
 17701  014F4A  CFDF FFE7          	movff	indf2,indf1
 17702                           
 17703                           ; BSR set to: 2
 17704  014F4E  0102               	movlb	2	; () banked
 17705  014F50  2B66               	incf	StringAddEqual@j& (0+255),f,b
 17706  014F52  D000               	goto	l12913
 17707  014F54                     l12913:
 17708                           
 17709                           ; BSR set to: 2
 17710  014F54  0102               	movlb	2	; () banked
 17711  014F56  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 17712  014F58  0102               	movlb	2	; () banked
 17713  014F5A  5D66               	subwf	StringAddEqual@j& (0+255),w,b
 17714  014F5C  A0D8               	btfss	status,0,c
 17715  014F5E  D7E1               	goto	l12909
 17716                           
 17717                           ; BSR set to: 2
 17718                           ;MISC.c: 338: }
 17719                           ;MISC.c: 339: temp[firstnumber] = '=';
 17720                           
 17721                           ; BSR set to: 2
 17722  014F60  0102               	movlb	2	; () banked
 17723  014F62  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 17724  014F64  0D01               	mullw	1
 17725  014F66  0E00               	movlw	low StringAddEqual@temp
 17726  014F68  24F3               	addwf	prodl,w,c
 17727  014F6A  6ED9               	movwf	fsr2l,c
 17728  014F6C  0E02               	movlw	high StringAddEqual@temp
 17729  014F6E  20F4               	addwfc	prodh,w,c
 17730  014F70  6EDA               	movwf	fsr2h,c
 17731  014F72  0E3D               	movlw	61
 17732  014F74  6EDF               	movwf	indf2,c
 17733                           
 17734                           ; BSR set to: 2
 17735                           ;MISC.c: 340: for(j = (firstnumber);j<99;j++)
 17736  014F76  C264  F266         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 17737  014F7A                     l12919:
 17738                           
 17739                           ; BSR set to: 2
 17740  014F7A  0E62               	movlw	98
 17741  014F7C  0102               	movlb	2	; () banked
 17742  014F7E  6566               	cpfsgt	StringAddEqual@j& (0+255),b
 17743  014F80  D001               	goto	l12923
 17744                           
 17745                           ; BSR set to: 2
 17746  014F82  D032               	goto	l12933
 17747  014F84                     l12923:
 17748                           
 17749                           ; BSR set to: 2
 17750                           ;MISC.c: 341: {
 17751                           ;MISC.c: 342: temp[j+1] = Input[j];
 17752  014F84  0102               	movlb	2	; () banked
 17753  014F86  5166               	movf	StringAddEqual@j& (0+255),w,b
 17754  014F88  0D01               	mullw	1
 17755  014F8A  50F3               	movf	prodl,w,c
 17756  014F8C  0101               	movlb	1	; () banked
 17757  014F8E  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17758  014F90  6ED9               	movwf	fsr2l,c
 17759  014F92  50F4               	movf	prodh,w,c
 17760  014F94  0101               	movlb	1	; () banked
 17761  014F96  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17762  014F98  6EDA               	movwf	fsr2h,c
 17763  014F9A  0102               	movlb	2	; () banked
 17764  014F9C  5166               	movf	StringAddEqual@j& (0+255),w,b
 17765  014F9E  0101               	movlb	1	; () banked
 17766  014FA0  6F8D               	movwf	??_StringAddEqual& (0+255),b
 17767  014FA2  6B8E               	clrf	(??_StringAddEqual+1)& (0+255),b
 17768  014FA4  0E01               	movlw	1
 17769  014FA6  0101               	movlb	1	; () banked
 17770  014FA8  278D               	addwf	??_StringAddEqual& (0+255),f,b
 17771  014FAA  0E00               	movlw	0
 17772  014FAC  238E               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 17773  014FAE  0E00               	movlw	low StringAddEqual@temp
 17774  014FB0  0101               	movlb	1	; () banked
 17775  014FB2  258D               	addwf	??_StringAddEqual& (0+255),w,b
 17776  014FB4  6EE1               	movwf	fsr1l,c
 17777  014FB6  0E02               	movlw	high StringAddEqual@temp
 17778  014FB8  0101               	movlb	1	; () banked
 17779  014FBA  218E               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 17780  014FBC  6EE2               	movwf	fsr1h,c
 17781  014FBE  CFDF FFE7          	movff	indf2,indf1
 17782                           
 17783                           ; BSR set to: 1
 17784                           ;MISC.c: 343: if(Input[j] ==0)
 17785  014FC2  0102               	movlb	2	; () banked
 17786  014FC4  5166               	movf	StringAddEqual@j& (0+255),w,b
 17787  014FC6  0D01               	mullw	1
 17788  014FC8  50F3               	movf	prodl,w,c
 17789  014FCA  0101               	movlb	1	; () banked
 17790  014FCC  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17791  014FCE  6ED9               	movwf	fsr2l,c
 17792  014FD0  50F4               	movf	prodh,w,c
 17793  014FD2  0101               	movlb	1	; () banked
 17794  014FD4  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17795  014FD6  6EDA               	movwf	fsr2h,c
 17796  014FD8  50DF               	movf	indf2,w,c
 17797  014FDA  B4D8               	btfsc	status,2,c
 17798  014FDC  D005               	goto	l12933
 17799  014FDE  D001               	goto	l12929
 17800                           
 17801                           ; BSR set to: 1
 17802                           ;MISC.c: 344: {
 17803                           ;MISC.c: 345: break;
 17804  014FE0  D003               	goto	l12933
 17805  014FE2                     l12929:
 17806                           
 17807                           ; BSR set to: 1
 17808  014FE2  0102               	movlb	2	; () banked
 17809  014FE4  2B66               	incf	StringAddEqual@j& (0+255),f,b
 17810  014FE6  D7C9               	goto	l12919
 17811  014FE8                     l12933:
 17812                           
 17813                           ;MISC.c: 346: }
 17814                           ;MISC.c: 347: }
 17815                           ;MISC.c: 348: BufferCopy(temp,Input,100, 0);
 17816  014FE8  0E00               	movlw	low StringAddEqual@temp
 17817  014FEA  0101               	movlb	1	; () banked
 17818  014FEC  6F84               	movwf	BufferCopy@from& (0+255),b
 17819  014FEE  0E02               	movlw	high StringAddEqual@temp
 17820  014FF0  0101               	movlb	1	; () banked
 17821  014FF2  6F85               	movwf	(BufferCopy@from+1)& (0+255),b
 17822  014FF4  C18B  F186         	movff	StringAddEqual@Input,BufferCopy@to
 17823  014FF8  C18C  F187         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 17824  014FFC  0E64               	movlw	100
 17825  014FFE  0101               	movlb	1	; () banked
 17826  015000  6F88               	movwf	BufferCopy@count& (0+255),b
 17827  015002  0E00               	movlw	0
 17828  015004  0101               	movlb	1	; () banked
 17829  015006  6F89               	movwf	BufferCopy@shift& (0+255),b
 17830  015008  EC87  F0B2         	call	_BufferCopy	;wreg free
 17831  01500C  0012               	return	
 17832                           
 17833                           ;MISC.c: 349: return 1;
 17834                           ;	Return value of _StringAddEqual is never used
 17835  01500E  0012               	return		;funcret
 17836  015010                     __end_of_StringAddEqual:
 17837                           	opt stack 0
 17838                           tblptru	equ	0xFF8
 17839                           tblptrh	equ	0xFF7
 17840                           tblptrl	equ	0xFF6
 17841                           tablat	equ	0xFF5
 17842                           prodh	equ	0xFF4
 17843                           prodl	equ	0xFF3
 17844                           intcon	equ	0xFF2
 17845                           intcon2	equ	0xFF1
 17846                           postinc0	equ	0xFEE
 17847                           plusw0	equ	0xFEB
 17848                           wreg	equ	0xFE8
 17849                           indf1	equ	0xFE7
 17850                           postdec1	equ	0xFE5
 17851                           fsr1h	equ	0xFE2
 17852                           fsr1l	equ	0xFE1
 17853                           indf2	equ	0xFDF
 17854                           postinc2	equ	0xFDE
 17855                           postdec2	equ	0xFDD
 17856                           plusw2	equ	0xFDB
 17857                           fsr2h	equ	0xFDA
 17858                           fsr2l	equ	0xFD9
 17859                           status	equ	0xFD8
 17860                           
 17861 ;; *************** function _StartsWith *****************
 17862 ;; Defined at:
 17863 ;;		line 181 in file "MISC.c"
 17864 ;; Parameters:    Size  Location     Type
 17865 ;;  This            2   14[BANK1 ] PTR unsigned char 
 17866 ;;		 -> Rxdata(100), 
 17867 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 17868 ;;		 -> STR_253(4), STR_218(4), STR_197(4), STR_180(9), 
 17869 ;;		 -> STR_161(17), STR_160(7), STR_158(4), STR_95(8), 
 17870 ;;		 -> STR_70(11), STR_38(4), 
 17871 ;; Auto vars:     Size  Location     Type
 17872 ;;		None
 17873 ;; Return value:  Size  Location     Type
 17874 ;;                  1    wreg      unsigned char 
 17875 ;; Registers used:
 17876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17877 ;; Tracked objects:
 17878 ;;		On entry : 0/0
 17879 ;;		On exit  : 0/0
 17880 ;;		Unchanged: 0/0
 17881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17882 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17884 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17885 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17886 ;;Total ram usage:        5 bytes
 17887 ;; Hardware stack levels used:    1
 17888 ;; Hardware stack levels required when called:    6
 17889 ;; This function calls:
 17890 ;;		Nothing
 17891 ;; This function is called by:
 17892 ;;		_Command
 17893 ;; This function uses a non-reentrant model
 17894 ;;
 17895                           
 17896                           	psect	text28
 17897  016BAA                     __ptext28:
 17898                           	opt stack 0
 17899  016BAA                     _StartsWith:
 17900                           	opt stack 23
 17901                           
 17902                           ;MISC.c: 183: while(*This != 0)
 17903                           
 17904                           ;incstack = 0
 17905  016BAA  D02B               	goto	l12775
 17906  016BAC                     l12759:
 17907                           
 17908                           ;MISC.c: 184: {
 17909                           ;MISC.c: 185: if(*This != *That)
 17910  016BAC  C17C  FFD9         	movff	StartsWith@This,fsr2l
 17911  016BB0  C17D  FFDA         	movff	StartsWith@This+1,fsr2h
 17912  016BB4  50DF               	movf	indf2,w,c
 17913  016BB6  0101               	movlb	1	; () banked
 17914  016BB8  6F80               	movwf	??_StartsWith& (0+255),b
 17915  016BBA  C17E  FFF6         	movff	StartsWith@That,tblptrl
 17916  016BBE  C17F  FFF7         	movff	StartsWith@That+1,tblptrh
 17917  016BC2                     	if	0	;tblptru may be non-zero
 17918  016BC2                     	endif
 17919  016BC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17920  016BC2  0E00               	movlw	low (__mediumconst shr (0+16))
 17921  016BC4  6EF8               	movwf	tblptru,c
 17922  016BC6                     	endif
 17923  016BC6  0008               	tblrd		*
 17924  016BC8  50F5               	movf	tablat,w,c
 17925  016BCA  0101               	movlb	1	; () banked
 17926  016BCC  1980               	xorwf	??_StartsWith& (0+255),w,b
 17927  016BCE  B4D8               	btfsc	status,2,c
 17928  016BD0  D011               	goto	l12773
 17929                           
 17930                           ; BSR set to: 1
 17931                           ;MISC.c: 186: {
 17932                           ;MISC.c: 187: if(*That != 0)
 17933  016BD2  C17E  FFF6         	movff	StartsWith@That,tblptrl
 17934  016BD6  C17F  FFF7         	movff	StartsWith@That+1,tblptrh
 17935  016BDA                     	if	0	;tblptru may be non-zero
 17936  016BDA                     	endif
 17937  016BDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17938  016BDA  0E00               	movlw	low (__mediumconst shr (0+16))
 17939  016BDC  6EF8               	movwf	tblptru,c
 17940  016BDE                     	endif
 17941  016BDE  0008               	tblrd		*
 17942  016BE0  50F5               	movf	tablat,w,c
 17943  016BE2  0900               	iorlw	0
 17944  016BE4  B4D8               	btfsc	status,2,c
 17945  016BE6  D003               	goto	l12769
 17946                           
 17947                           ; BSR set to: 1
 17948                           ;MISC.c: 188: {
 17949                           ;MISC.c: 189: return 0;
 17950  016BE8  0E00               	movlw	0
 17951                           
 17952                           ; BSR set to: 1
 17953  016BEA  0012               	return	
 17954                           
 17955                           ; BSR set to: 1
 17956                           ;MISC.c: 190: }
 17957  016BEC  D003               	goto	l12773
 17958  016BEE                     l12769:
 17959                           
 17960                           ; BSR set to: 1
 17961                           ;MISC.c: 191: else
 17962                           ;MISC.c: 192: {
 17963                           ;MISC.c: 193: return 1;
 17964  016BEE  0E01               	movlw	1
 17965                           
 17966                           ; BSR set to: 1
 17967  016BF0  0012               	return	
 17968                           
 17969                           ; BSR set to: 1
 17970  016BF2  D000               	goto	l12773
 17971  016BF4                     l12773:
 17972                           
 17973                           ; BSR set to: 1
 17974                           ;MISC.c: 194: }
 17975                           ;MISC.c: 195: }
 17976                           ;MISC.c: 196: This++;
 17977  016BF4  0101               	movlb	1	; () banked
 17978  016BF6  4B7C               	infsnz	StartsWith@This& (0+255),f,b
 17979  016BF8  2B7D               	incf	(StartsWith@This+1)& (0+255),f,b
 17980                           
 17981                           ;MISC.c: 197: That++;
 17982  016BFA  0101               	movlb	1	; () banked
 17983  016BFC  4B7E               	infsnz	StartsWith@That& (0+255),f,b
 17984  016BFE  2B7F               	incf	(StartsWith@That+1)& (0+255),f,b
 17985  016C00  D000               	goto	l12775
 17986  016C02                     l12775:
 17987  016C02  C17C  FFD9         	movff	StartsWith@This,fsr2l
 17988  016C06  C17D  FFDA         	movff	StartsWith@This+1,fsr2h
 17989  016C0A  50DF               	movf	indf2,w,c
 17990  016C0C  A4D8               	btfss	status,2,c
 17991  016C0E  D7CE               	goto	l12759
 17992                           
 17993                           ;MISC.c: 198: }
 17994                           ;MISC.c: 199: if(*This == 0 && *That == 0)
 17995  016C10  C17C  FFD9         	movff	StartsWith@This,fsr2l
 17996  016C14  C17D  FFDA         	movff	StartsWith@This+1,fsr2h
 17997  016C18  50DF               	movf	indf2,w,c
 17998  016C1A  A4D8               	btfss	status,2,c
 17999  016C1C  D00D               	goto	l12787
 18000  016C1E  C17E  FFF6         	movff	StartsWith@That,tblptrl
 18001  016C22  C17F  FFF7         	movff	StartsWith@That+1,tblptrh
 18002  016C26                     	if	0	;tblptru may be non-zero
 18003  016C26                     	endif
 18004  016C26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18005  016C26  0E00               	movlw	low (__mediumconst shr (0+16))
 18006  016C28  6EF8               	movwf	tblptru,c
 18007  016C2A                     	endif
 18008  016C2A  0008               	tblrd		*
 18009  016C2C  50F5               	movf	tablat,w,c
 18010  016C2E  0900               	iorlw	0
 18011  016C30  A4D8               	btfss	status,2,c
 18012  016C32  D002               	goto	l12787
 18013                           
 18014                           ;MISC.c: 200: {
 18015                           ;MISC.c: 202: return 1;
 18016  016C34  0E01               	movlw	1
 18017                           
 18018                           ;MISC.c: 203: }
 18019  016C36  0012               	return	
 18020  016C38                     l12787:
 18021                           
 18022                           ;MISC.c: 204: else
 18023                           ;MISC.c: 205: {
 18024                           ;MISC.c: 207: return 0;
 18025  016C38  0E00               	movlw	0
 18026  016C3A  0012               	return	
 18027  016C3C  0012               	return		;funcret
 18028  016C3E                     __end_of_StartsWith:
 18029                           	opt stack 0
 18030                           tblptru	equ	0xFF8
 18031                           tblptrh	equ	0xFF7
 18032                           tblptrl	equ	0xFF6
 18033                           tablat	equ	0xFF5
 18034                           prodh	equ	0xFF4
 18035                           prodl	equ	0xFF3
 18036                           intcon	equ	0xFF2
 18037                           intcon2	equ	0xFF1
 18038                           postinc0	equ	0xFEE
 18039                           plusw0	equ	0xFEB
 18040                           wreg	equ	0xFE8
 18041                           indf1	equ	0xFE7
 18042                           postdec1	equ	0xFE5
 18043                           fsr1h	equ	0xFE2
 18044                           fsr1l	equ	0xFE1
 18045                           indf2	equ	0xFDF
 18046                           postinc2	equ	0xFDE
 18047                           postdec2	equ	0xFDD
 18048                           plusw2	equ	0xFDB
 18049                           fsr2h	equ	0xFDA
 18050                           fsr2l	equ	0xFD9
 18051                           status	equ	0xFD8
 18052                           
 18053 ;; *************** function _SprintDate *****************
 18054 ;; Defined at:
 18055 ;;		line 254 in file "RTC.c"
 18056 ;; Parameters:    Size  Location     Type
 18057 ;;  ReturnBuf       2   80[BANK1 ] PTR unsigned char 
 18058 ;;		 -> Command@buf(200), 
 18059 ;;  DisplayTime     9   82[BANK1 ] struct TIME
 18060 ;;  Military        1   91[BANK1 ] unsigned char 
 18061 ;; Auto vars:     Size  Location     Type
 18062 ;;		None
 18063 ;; Return value:  Size  Location     Type
 18064 ;;		None               void
 18065 ;; Registers used:
 18066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18067 ;; Tracked objects:
 18068 ;;		On entry : 0/0
 18069 ;;		On exit  : 0/0
 18070 ;;		Unchanged: 0/0
 18071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18072 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 18073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18075 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 18076 ;;Total ram usage:       12 bytes
 18077 ;; Hardware stack levels used:    1
 18078 ;; Hardware stack levels required when called:    8
 18079 ;; This function calls:
 18080 ;;		_sprintf
 18081 ;; This function is called by:
 18082 ;;		_Command
 18083 ;; This function uses a non-reentrant model
 18084 ;;
 18085                           
 18086                           	psect	text29
 18087  015C94                     __ptext29:
 18088                           	opt stack 0
 18089  015C94                     _SprintDate:
 18090                           	opt stack 21
 18091                           
 18092                           ;RTC.c: 256: if(!Military)
 18093                           
 18094                           ;incstack = 0
 18095  015C94  0101               	movlb	1	; () banked
 18096  015C96  51C9               	movf	SprintDate@Military& (0+255),w,b
 18097  015C98  0101               	movlb	1	; () banked
 18098  015C9A  A4D8               	btfss	status,2,c
 18099  015C9C  D04E               	goto	l13165
 18100                           
 18101                           ; BSR set to: 1
 18102                           ;RTC.c: 257: {
 18103                           ;RTC.c: 258: if(!DisplayTime.HoursAM_PM)
 18104  015C9E  0101               	movlb	1	; () banked
 18105  015CA0  51C4               	movf	(SprintDate@DisplayTime+4)& (0+255),w,b
 18106  015CA2  A4D8               	btfss	status,2,c
 18107  015CA4  D025               	goto	l13163
 18108                           
 18109                           ; BSR set to: 1
 18110                           ;RTC.c: 259: {
 18111                           ;RTC.c: 260: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d AM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 18112  015CA6  C1BE  F192         	movff	SprintDate@ReturnBuf,sprintf@sp
 18113  015CAA  C1BF  F193         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 18114  015CAE  0E14               	movlw	low STR_321
 18115  015CB0  0101               	movlb	1	; () banked
 18116  015CB2  6F94               	movwf	sprintf@f& (0+255),b
 18117  015CB4  0EF3               	movlw	high STR_321
 18118  015CB6  0101               	movlb	1	; () banked
 18119  015CB8  6F95               	movwf	(sprintf@f+1)& (0+255),b
 18120  015CBA  C1C7  F196         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 18121  015CBE  0101               	movlb	1	; () banked
 18122  015CC0  6B97               	clrf	(?_sprintf+5)& (0+255),b
 18123  015CC2  C1C6  F198         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 18124  015CC6  0101               	movlb	1	; () banked
 18125  015CC8  6B99               	clrf	(?_sprintf+7)& (0+255),b
 18126  015CCA  C1C8  F19A         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 18127  015CCE  0101               	movlb	1	; () banked
 18128  015CD0  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 18129  015CD2  C1C2  F19C         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 18130  015CD6  0101               	movlb	1	; () banked
 18131  015CD8  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 18132  015CDA  C1C1  F19E         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 18133  015CDE  0101               	movlb	1	; () banked
 18134  015CE0  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 18135  015CE2  C1C0  F1A0         	movff	SprintDate@DisplayTime,?_sprintf+14
 18136  015CE6  0101               	movlb	1	; () banked
 18137  015CE8  6BA1               	clrf	(?_sprintf+15)& (0+255),b
 18138  015CEA  EC87  F093         	call	_sprintf	;wreg free
 18139                           
 18140                           ;RTC.c: 261: }
 18141  015CEE  0012               	return	
 18142  015CF0                     l13163:
 18143                           
 18144                           ;RTC.c: 262: else
 18145                           ;RTC.c: 263: {
 18146                           ;RTC.c: 264: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d PM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 18147  015CF0  C1BE  F192         	movff	SprintDate@ReturnBuf,sprintf@sp
 18148  015CF4  C1BF  F193         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 18149  015CF8  0E37               	movlw	low STR_322
 18150  015CFA  0101               	movlb	1	; () banked
 18151  015CFC  6F94               	movwf	sprintf@f& (0+255),b
 18152  015CFE  0EF3               	movlw	high STR_322
 18153  015D00  0101               	movlb	1	; () banked
 18154  015D02  6F95               	movwf	(sprintf@f+1)& (0+255),b
 18155  015D04  C1C7  F196         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 18156  015D08  0101               	movlb	1	; () banked
 18157  015D0A  6B97               	clrf	(?_sprintf+5)& (0+255),b
 18158  015D0C  C1C6  F198         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 18159  015D10  0101               	movlb	1	; () banked
 18160  015D12  6B99               	clrf	(?_sprintf+7)& (0+255),b
 18161  015D14  C1C8  F19A         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 18162  015D18  0101               	movlb	1	; () banked
 18163  015D1A  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 18164  015D1C  C1C2  F19C         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 18165  015D20  0101               	movlb	1	; () banked
 18166  015D22  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 18167  015D24  C1C1  F19E         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 18168  015D28  0101               	movlb	1	; () banked
 18169  015D2A  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 18170  015D2C  C1C0  F1A0         	movff	SprintDate@DisplayTime,?_sprintf+14
 18171  015D30  0101               	movlb	1	; () banked
 18172  015D32  6BA1               	clrf	(?_sprintf+15)& (0+255),b
 18173  015D34  EC87  F093         	call	_sprintf	;wreg free
 18174                           
 18175                           ;RTC.c: 265: }
 18176                           ;RTC.c: 266: }
 18177  015D38  0012               	return	
 18178  015D3A                     l13165:
 18179                           
 18180                           ;RTC.c: 267: else
 18181                           ;RTC.c: 268: {
 18182                           ;RTC.c: 269: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d", DisplayTime.Month, Dis
      +                          playTime.Date, DisplayTime.Year, DisplayTime.HoursMilitary, DisplayTime.Minutes, Display
      +                          Time.Seconds);
 18183  015D3A  C1BE  F192         	movff	SprintDate@ReturnBuf,sprintf@sp
 18184  015D3E  C1BF  F193         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 18185  015D42  0EDF               	movlw	low STR_323
 18186  015D44  0101               	movlb	1	; () banked
 18187  015D46  6F94               	movwf	sprintf@f& (0+255),b
 18188  015D48  0EF3               	movlw	high STR_323
 18189  015D4A  0101               	movlb	1	; () banked
 18190  015D4C  6F95               	movwf	(sprintf@f+1)& (0+255),b
 18191  015D4E  C1C7  F196         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 18192  015D52  0101               	movlb	1	; () banked
 18193  015D54  6B97               	clrf	(?_sprintf+5)& (0+255),b
 18194  015D56  C1C6  F198         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 18195  015D5A  0101               	movlb	1	; () banked
 18196  015D5C  6B99               	clrf	(?_sprintf+7)& (0+255),b
 18197  015D5E  C1C8  F19A         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 18198  015D62  0101               	movlb	1	; () banked
 18199  015D64  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 18200  015D66  C1C3  F19C         	movff	SprintDate@DisplayTime+3,?_sprintf+10
 18201  015D6A  0101               	movlb	1	; () banked
 18202  015D6C  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 18203  015D6E  C1C1  F19E         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 18204  015D72  0101               	movlb	1	; () banked
 18205  015D74  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 18206  015D76  C1C0  F1A0         	movff	SprintDate@DisplayTime,?_sprintf+14
 18207  015D7A  0101               	movlb	1	; () banked
 18208  015D7C  6BA1               	clrf	(?_sprintf+15)& (0+255),b
 18209  015D7E  EC87  F093         	call	_sprintf	;wreg free
 18210  015D82  0012               	return	
 18211  015D84  0012               	return		;funcret
 18212  015D86                     __end_of_SprintDate:
 18213                           	opt stack 0
 18214                           tblptru	equ	0xFF8
 18215                           tblptrh	equ	0xFF7
 18216                           tblptrl	equ	0xFF6
 18217                           tablat	equ	0xFF5
 18218                           prodh	equ	0xFF4
 18219                           prodl	equ	0xFF3
 18220                           intcon	equ	0xFF2
 18221                           intcon2	equ	0xFF1
 18222                           postinc0	equ	0xFEE
 18223                           plusw0	equ	0xFEB
 18224                           wreg	equ	0xFE8
 18225                           indf1	equ	0xFE7
 18226                           postdec1	equ	0xFE5
 18227                           fsr1h	equ	0xFE2
 18228                           fsr1l	equ	0xFE1
 18229                           indf2	equ	0xFDF
 18230                           postinc2	equ	0xFDE
 18231                           postdec2	equ	0xFDD
 18232                           plusw2	equ	0xFDB
 18233                           fsr2h	equ	0xFDA
 18234                           fsr2l	equ	0xFD9
 18235                           status	equ	0xFD8
 18236                           
 18237 ;; *************** function _SetDuty *****************
 18238 ;; Defined at:
 18239 ;;		line 120 in file "PWM.c"
 18240 ;; Parameters:    Size  Location     Type
 18241 ;;  Duty            1    wreg     unsigned char 
 18242 ;; Auto vars:     Size  Location     Type
 18243 ;;  Duty            1   71[BANK1 ] unsigned char 
 18244 ;;  tempPR2         3   72[BANK1 ] float 
 18245 ;;  temp            2   77[BANK1 ] unsigned int 
 18246 ;;  LSB             1   76[BANK1 ] unsigned char 
 18247 ;;  MSB             1   75[BANK1 ] unsigned char 
 18248 ;; Return value:  Size  Location     Type
 18249 ;;		None               void
 18250 ;; Registers used:
 18251 ;;		wreg, status,2, status,0, cstack
 18252 ;; Tracked objects:
 18253 ;;		On entry : 0/0
 18254 ;;		On exit  : 0/0
 18255 ;;		Unchanged: 0/0
 18256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18258 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18260 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18261 ;;Total ram usage:        8 bytes
 18262 ;; Hardware stack levels used:    1
 18263 ;; Hardware stack levels required when called:    8
 18264 ;; This function calls:
 18265 ;;		___ftdiv
 18266 ;;		___ftmul
 18267 ;;		___fttol
 18268 ;;		___lbtoft
 18269 ;; This function is called by:
 18270 ;;		_main
 18271 ;;		_Command
 18272 ;;		_PWM_init
 18273 ;;		_ContrastPWM_init
 18274 ;; This function uses a non-reentrant model
 18275 ;;
 18276                           
 18277                           	psect	text30
 18278  016734                     __ptext30:
 18279                           	opt stack 0
 18280  016734                     _SetDuty:
 18281                           	opt stack 22
 18282                           
 18283                           ;incstack = 0
 18284                           ;SetDuty@Duty stored from wreg
 18285  016734  0101               	movlb	1	; () banked
 18286  016736  6FB5               	movwf	SetDuty@Duty& (0+255),b
 18287                           
 18288                           ; BSR set to: 1
 18289                           ;PWM.c: 122: unsigned int temp=0;
 18290  016738  0E00               	movlw	0
 18291  01673A  0101               	movlb	1	; () banked
 18292  01673C  6FBC               	movwf	(SetDuty@temp+1)& (0+255),b
 18293  01673E  0E00               	movlw	0
 18294  016740  6FBB               	movwf	SetDuty@temp& (0+255),b
 18295                           
 18296                           ; BSR set to: 1
 18297                           ;PWM.c: 123: float tempPR2=0;
 18298  016742  0E00               	movlw	0
 18299  016744  0101               	movlb	1	; () banked
 18300  016746  6FB6               	movwf	SetDuty@tempPR2& (0+255),b
 18301  016748  0E00               	movlw	0
 18302  01674A  0101               	movlb	1	; () banked
 18303  01674C  6FB7               	movwf	(SetDuty@tempPR2+1)& (0+255),b
 18304  01674E  0E00               	movlw	0
 18305  016750  0101               	movlb	1	; () banked
 18306  016752  6FB8               	movwf	(SetDuty@tempPR2+2)& (0+255),b
 18307                           
 18308                           ; BSR set to: 1
 18309                           ;PWM.c: 124: unsigned char MSB,LSB;
 18310                           ;PWM.c: 126: tempPR2 = (float) PR2;
 18311  016754  50CB               	movf	4043,w,c	;volatile
 18312  016756  EC71  F0BE         	call	___lbtoft
 18313  01675A  C184  F1B6         	movff	?___lbtoft,SetDuty@tempPR2
 18314  01675E  C185  F1B7         	movff	?___lbtoft+1,SetDuty@tempPR2+1
 18315  016762  C186  F1B8         	movff	?___lbtoft+2,SetDuty@tempPR2+2
 18316                           
 18317                           ;PWM.c: 128: temp = (int)(tempPR2 * ((float)Duty/100));
 18318  016766  C1B6  F19A         	movff	SetDuty@tempPR2,___ftmul@f2
 18319  01676A  C1B7  F19B         	movff	SetDuty@tempPR2+1,___ftmul@f2+1
 18320  01676E  C1B8  F19C         	movff	SetDuty@tempPR2+2,___ftmul@f2+2
 18321  016772  0E00               	movlw	0
 18322  016774  0101               	movlb	1	; () banked
 18323  016776  6F8B               	movwf	___ftdiv@f2& (0+255),b
 18324  016778  0EC8               	movlw	200
 18325  01677A  0101               	movlb	1	; () banked
 18326  01677C  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 18327  01677E  0E42               	movlw	66
 18328  016780  0101               	movlb	1	; () banked
 18329  016782  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 18330  016784  0101               	movlb	1	; () banked
 18331  016786  51B5               	movf	SetDuty@Duty& (0+255),w,b
 18332  016788  EC71  F0BE         	call	___lbtoft
 18333  01678C  C184  F188         	movff	?___lbtoft,___ftdiv@f1
 18334  016790  C185  F189         	movff	?___lbtoft+1,___ftdiv@f1+1
 18335  016794  C186  F18A         	movff	?___lbtoft+2,___ftdiv@f1+2
 18336  016798  ECD2  F0AA         	call	___ftdiv	;wreg free
 18337  01679C  C188  F197         	movff	?___ftdiv,___ftmul@f1
 18338  0167A0  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 18339  0167A4  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 18340  0167A8  ECC7  F0A8         	call	___ftmul	;wreg free
 18341  0167AC  C197  F1A6         	movff	?___ftmul,___fttol@f1
 18342  0167B0  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 18343  0167B4  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 18344  0167B8  EC29  F0AA         	call	___fttol	;wreg free
 18345  0167BC  C1A6  F1BB         	movff	?___fttol,SetDuty@temp
 18346  0167C0  C1A7  F1BC         	movff	?___fttol+1,SetDuty@temp+1
 18347                           
 18348                           ;PWM.c: 129: MSB = (temp & 0x300)>>8;
 18349  0167C4  0101               	movlb	1	; () banked
 18350  0167C6  51BC               	movf	(SetDuty@temp+1)& (0+255),w,b
 18351  0167C8  0B03               	andlw	3
 18352  0167CA  0101               	movlb	1	; () banked
 18353  0167CC  6FB9               	movwf	SetDuty@MSB& (0+255),b
 18354                           
 18355                           ; BSR set to: 1
 18356                           ;PWM.c: 130: LSB = temp & 0xff;
 18357  0167CE  C1BB  F1BA         	movff	SetDuty@temp,SetDuty@LSB
 18358                           
 18359                           ; BSR set to: 1
 18360                           ;PWM.c: 132: CCP1CON &= ~(0b00110000);
 18361  0167D2  0ECF               	movlw	207
 18362  0167D4  16BD               	andwf	4029,f,c	;volatile
 18363                           
 18364                           ; BSR set to: 1
 18365                           ;PWM.c: 133: CCP1CON |= MSB << 4;
 18366  0167D6  0101               	movlb	1	; () banked
 18367  0167D8  39B9               	swapf	SetDuty@MSB& (0+255),w,b
 18368  0167DA  0BF0               	andlw	240
 18369  0167DC  12BD               	iorwf	4029,f,c	;volatile
 18370                           
 18371                           ; BSR set to: 1
 18372                           ;PWM.c: 134: CCPR1L = LSB;
 18373  0167DE  C1BA  FFBE         	movff	SetDuty@LSB,4030	;volatile
 18374                           
 18375                           ; BSR set to: 1
 18376                           ;PWM.c: 135: __nop();
 18377  0167E2  F000               	nop	
 18378  0167E4  0012               	return		;funcret
 18379  0167E6                     __end_of_SetDuty:
 18380                           	opt stack 0
 18381                           tblptru	equ	0xFF8
 18382                           tblptrh	equ	0xFF7
 18383                           tblptrl	equ	0xFF6
 18384                           tablat	equ	0xFF5
 18385                           prodh	equ	0xFF4
 18386                           prodl	equ	0xFF3
 18387                           intcon	equ	0xFF2
 18388                           intcon2	equ	0xFF1
 18389                           postinc0	equ	0xFEE
 18390                           plusw0	equ	0xFEB
 18391                           wreg	equ	0xFE8
 18392                           indf1	equ	0xFE7
 18393                           postdec1	equ	0xFE5
 18394                           fsr1h	equ	0xFE2
 18395                           fsr1l	equ	0xFE1
 18396                           indf2	equ	0xFDF
 18397                           postinc2	equ	0xFDE
 18398                           postdec2	equ	0xFDD
 18399                           plusw2	equ	0xFDB
 18400                           fsr2h	equ	0xFDA
 18401                           fsr2l	equ	0xFD9
 18402                           status	equ	0xFD8
 18403                           
 18404 ;; *************** function _SetContrast *****************
 18405 ;; Defined at:
 18406 ;;		line 94 in file "PWM.c"
 18407 ;; Parameters:    Size  Location     Type
 18408 ;;  Duty            1    wreg     unsigned char 
 18409 ;; Auto vars:     Size  Location     Type
 18410 ;;  Duty            1   78[BANK1 ] unsigned char 
 18411 ;;  tempPR2         3   71[BANK1 ] float 
 18412 ;;  temp            2   76[BANK1 ] unsigned int 
 18413 ;;  LSB             1   75[BANK1 ] unsigned char 
 18414 ;;  MSB             1   74[BANK1 ] unsigned char 
 18415 ;; Return value:  Size  Location     Type
 18416 ;;		None               void
 18417 ;; Registers used:
 18418 ;;		wreg, status,2, status,0, cstack
 18419 ;; Tracked objects:
 18420 ;;		On entry : 0/0
 18421 ;;		On exit  : 0/0
 18422 ;;		Unchanged: 0/0
 18423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18425 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18427 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 18428 ;;Total ram usage:        8 bytes
 18429 ;; Hardware stack levels used:    1
 18430 ;; Hardware stack levels required when called:    8
 18431 ;; This function calls:
 18432 ;;		___ftdiv
 18433 ;;		___ftmul
 18434 ;;		___fttol
 18435 ;;		___lbtoft
 18436 ;; This function is called by:
 18437 ;;		_main
 18438 ;;		_Command
 18439 ;; This function uses a non-reentrant model
 18440 ;;
 18441                           
 18442                           	psect	text31
 18443  0162B8                     __ptext31:
 18444                           	opt stack 0
 18445  0162B8                     _SetContrast:
 18446                           	opt stack 22
 18447                           
 18448                           ;incstack = 0
 18449                           ;SetContrast@Duty stored from wreg
 18450  0162B8  0101               	movlb	1	; () banked
 18451  0162BA  6FBC               	movwf	SetContrast@Duty& (0+255),b
 18452                           
 18453                           ; BSR set to: 1
 18454                           ;PWM.c: 96: unsigned int temp=0;
 18455  0162BC  0E00               	movlw	0
 18456  0162BE  0101               	movlb	1	; () banked
 18457  0162C0  6FBB               	movwf	(SetContrast@temp+1)& (0+255),b
 18458  0162C2  0E00               	movlw	0
 18459  0162C4  6FBA               	movwf	SetContrast@temp& (0+255),b
 18460                           
 18461                           ; BSR set to: 1
 18462                           ;PWM.c: 97: float tempPR2=0;
 18463  0162C6  0E00               	movlw	0
 18464  0162C8  0101               	movlb	1	; () banked
 18465  0162CA  6FB5               	movwf	SetContrast@tempPR2& (0+255),b
 18466  0162CC  0E00               	movlw	0
 18467  0162CE  0101               	movlb	1	; () banked
 18468  0162D0  6FB6               	movwf	(SetContrast@tempPR2+1)& (0+255),b
 18469  0162D2  0E00               	movlw	0
 18470  0162D4  0101               	movlb	1	; () banked
 18471  0162D6  6FB7               	movwf	(SetContrast@tempPR2+2)& (0+255),b
 18472                           
 18473                           ; BSR set to: 1
 18474                           ;PWM.c: 98: unsigned char MSB,LSB;
 18475                           ;PWM.c: 100: Duty = 100 - Duty;
 18476  0162D8  0101               	movlb	1	; () banked
 18477  0162DA  51BC               	movf	SetContrast@Duty& (0+255),w,b
 18478  0162DC  0800               	sublw	0
 18479  0162DE  0F64               	addlw	100
 18480  0162E0  0101               	movlb	1	; () banked
 18481  0162E2  6FBC               	movwf	SetContrast@Duty& (0+255),b
 18482                           
 18483                           ; BSR set to: 1
 18484                           ;PWM.c: 101: Duty = (Duty>>1);
 18485  0162E4  0101               	movlb	1	; () banked
 18486  0162E6  90D8               	bcf	status,0,c
 18487  0162E8  31BC               	rrcf	SetContrast@Duty& (0+255),w,b
 18488  0162EA  0101               	movlb	1	; () banked
 18489  0162EC  6FBC               	movwf	SetContrast@Duty& (0+255),b
 18490                           
 18491                           ; BSR set to: 1
 18492                           ;PWM.c: 103: tempPR2 = (float) PR2;
 18493  0162EE  50CB               	movf	4043,w,c	;volatile
 18494  0162F0  EC71  F0BE         	call	___lbtoft
 18495  0162F4  C184  F1B5         	movff	?___lbtoft,SetContrast@tempPR2
 18496  0162F8  C185  F1B6         	movff	?___lbtoft+1,SetContrast@tempPR2+1
 18497  0162FC  C186  F1B7         	movff	?___lbtoft+2,SetContrast@tempPR2+2
 18498                           
 18499                           ;PWM.c: 105: temp = (int)(tempPR2 * ((float)Duty/100));
 18500  016300  C1B5  F19A         	movff	SetContrast@tempPR2,___ftmul@f2
 18501  016304  C1B6  F19B         	movff	SetContrast@tempPR2+1,___ftmul@f2+1
 18502  016308  C1B7  F19C         	movff	SetContrast@tempPR2+2,___ftmul@f2+2
 18503  01630C  0E00               	movlw	0
 18504  01630E  0101               	movlb	1	; () banked
 18505  016310  6F8B               	movwf	___ftdiv@f2& (0+255),b
 18506  016312  0EC8               	movlw	200
 18507  016314  0101               	movlb	1	; () banked
 18508  016316  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 18509  016318  0E42               	movlw	66
 18510  01631A  0101               	movlb	1	; () banked
 18511  01631C  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 18512  01631E  0101               	movlb	1	; () banked
 18513  016320  51BC               	movf	SetContrast@Duty& (0+255),w,b
 18514  016322  EC71  F0BE         	call	___lbtoft
 18515  016326  C184  F188         	movff	?___lbtoft,___ftdiv@f1
 18516  01632A  C185  F189         	movff	?___lbtoft+1,___ftdiv@f1+1
 18517  01632E  C186  F18A         	movff	?___lbtoft+2,___ftdiv@f1+2
 18518  016332  ECD2  F0AA         	call	___ftdiv	;wreg free
 18519  016336  C188  F197         	movff	?___ftdiv,___ftmul@f1
 18520  01633A  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 18521  01633E  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 18522  016342  ECC7  F0A8         	call	___ftmul	;wreg free
 18523  016346  C197  F1A6         	movff	?___ftmul,___fttol@f1
 18524  01634A  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 18525  01634E  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 18526  016352  EC29  F0AA         	call	___fttol	;wreg free
 18527  016356  C1A6  F1BA         	movff	?___fttol,SetContrast@temp
 18528  01635A  C1A7  F1BB         	movff	?___fttol+1,SetContrast@temp+1
 18529                           
 18530                           ;PWM.c: 106: MSB = (temp & 0x300)>>8;
 18531  01635E  0101               	movlb	1	; () banked
 18532  016360  51BB               	movf	(SetContrast@temp+1)& (0+255),w,b
 18533  016362  0B03               	andlw	3
 18534  016364  0101               	movlb	1	; () banked
 18535  016366  6FB8               	movwf	SetContrast@MSB& (0+255),b
 18536                           
 18537                           ; BSR set to: 1
 18538                           ;PWM.c: 107: LSB = temp & 0xff;
 18539  016368  C1BA  F1B9         	movff	SetContrast@temp,SetContrast@LSB
 18540                           
 18541                           ; BSR set to: 1
 18542                           ;PWM.c: 109: ECCP1CON &= ~0b00110000;
 18543  01636C  0ECF               	movlw	207
 18544  01636E  16BA               	andwf	4026,f,c	;volatile
 18545                           
 18546                           ; BSR set to: 1
 18547                           ;PWM.c: 110: ECCP1CON |= MSB << 4;
 18548  016370  0101               	movlb	1	; () banked
 18549  016372  39B8               	swapf	SetContrast@MSB& (0+255),w,b
 18550  016374  0BF0               	andlw	240
 18551  016376  12BA               	iorwf	4026,f,c	;volatile
 18552                           
 18553                           ; BSR set to: 1
 18554                           ;PWM.c: 111: ECCPR1L = LSB;
 18555  016378  C1B9  FFBB         	movff	SetContrast@LSB,4027	;volatile
 18556                           
 18557                           ; BSR set to: 1
 18558                           ;PWM.c: 112: __nop();
 18559  01637C  F000               	nop	
 18560  01637E  0012               	return		;funcret
 18561  016380                     __end_of_SetContrast:
 18562                           	opt stack 0
 18563                           tblptru	equ	0xFF8
 18564                           tblptrh	equ	0xFF7
 18565                           tblptrl	equ	0xFF6
 18566                           tablat	equ	0xFF5
 18567                           prodh	equ	0xFF4
 18568                           prodl	equ	0xFF3
 18569                           intcon	equ	0xFF2
 18570                           intcon2	equ	0xFF1
 18571                           postinc0	equ	0xFEE
 18572                           plusw0	equ	0xFEB
 18573                           wreg	equ	0xFE8
 18574                           indf1	equ	0xFE7
 18575                           postdec1	equ	0xFE5
 18576                           fsr1h	equ	0xFE2
 18577                           fsr1l	equ	0xFE1
 18578                           indf2	equ	0xFDF
 18579                           postinc2	equ	0xFDE
 18580                           postdec2	equ	0xFDD
 18581                           plusw2	equ	0xFDB
 18582                           fsr2h	equ	0xFDA
 18583                           fsr2l	equ	0xFD9
 18584                           status	equ	0xFD8
 18585                           
 18586 ;; *************** function ___lbtoft *****************
 18587 ;; Defined at:
 18588 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
 18589 ;; Parameters:    Size  Location     Type
 18590 ;;  c               1    wreg     unsigned char 
 18591 ;; Auto vars:     Size  Location     Type
 18592 ;;  c               1   25[BANK1 ] unsigned char 
 18593 ;; Return value:  Size  Location     Type
 18594 ;;                  3   22[BANK1 ] float 
 18595 ;; Registers used:
 18596 ;;		wreg, status,2, status,0, cstack
 18597 ;; Tracked objects:
 18598 ;;		On entry : 0/0
 18599 ;;		On exit  : 0/0
 18600 ;;		Unchanged: 0/0
 18601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18602 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18603 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18605 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18606 ;;Total ram usage:        4 bytes
 18607 ;; Hardware stack levels used:    1
 18608 ;; Hardware stack levels required when called:    7
 18609 ;; This function calls:
 18610 ;;		___ftpack
 18611 ;; This function is called by:
 18612 ;;		_SetContrast
 18613 ;;		_SetDuty
 18614 ;; This function uses a non-reentrant model
 18615 ;;
 18616                           
 18617                           	psect	text32
 18618  017CE2                     __ptext32:
 18619                           	opt stack 0
 18620  017CE2                     ___lbtoft:
 18621                           	opt stack 22
 18622                           
 18623                           ;incstack = 0
 18624                           ;___lbtoft@c stored from wreg
 18625  017CE2  0101               	movlb	1	; () banked
 18626  017CE4  6F87               	movwf	___lbtoft@c& (0+255),b
 18627                           
 18628                           ; BSR set to: 1
 18629  017CE6  0101               	movlb	1	; () banked
 18630  017CE8  5187               	movf	___lbtoft@c& (0+255),w,b
 18631  017CEA  0101               	movlb	1	; () banked
 18632  017CEC  6F7C               	movwf	___ftpack@arg& (0+255),b
 18633  017CEE  6B7D               	clrf	(___ftpack@arg+1)& (0+255),b
 18634  017CF0  6B7E               	clrf	(___ftpack@arg+2)& (0+255),b
 18635  017CF2  0E8E               	movlw	142
 18636  017CF4  0101               	movlb	1	; () banked
 18637  017CF6  6F7F               	movwf	___ftpack@exp& (0+255),b
 18638  017CF8  0E00               	movlw	0
 18639  017CFA  0101               	movlb	1	; () banked
 18640  017CFC  6F80               	movwf	___ftpack@sign& (0+255),b
 18641  017CFE  ECA8  F0AC         	call	___ftpack	;wreg free
 18642  017D02  C17C  F184         	movff	?___ftpack,?___lbtoft
 18643  017D06  C17D  F185         	movff	?___ftpack+1,?___lbtoft+1
 18644  017D0A  C17E  F186         	movff	?___ftpack+2,?___lbtoft+2
 18645  017D0E  0012               	return	
 18646  017D10  0012               	return		;funcret
 18647  017D12                     __end_of___lbtoft:
 18648                           	opt stack 0
 18649                           tblptru	equ	0xFF8
 18650                           tblptrh	equ	0xFF7
 18651                           tblptrl	equ	0xFF6
 18652                           tablat	equ	0xFF5
 18653                           prodh	equ	0xFF4
 18654                           prodl	equ	0xFF3
 18655                           intcon	equ	0xFF2
 18656                           intcon2	equ	0xFF1
 18657                           postinc0	equ	0xFEE
 18658                           plusw0	equ	0xFEB
 18659                           wreg	equ	0xFE8
 18660                           indf1	equ	0xFE7
 18661                           postdec1	equ	0xFE5
 18662                           fsr1h	equ	0xFE2
 18663                           fsr1l	equ	0xFE1
 18664                           indf2	equ	0xFDF
 18665                           postinc2	equ	0xFDE
 18666                           postdec2	equ	0xFDD
 18667                           plusw2	equ	0xFDB
 18668                           fsr2h	equ	0xFDA
 18669                           fsr2l	equ	0xFD9
 18670                           status	equ	0xFD8
 18671                           
 18672 ;; *************** function ___fttol *****************
 18673 ;; Defined at:
 18674 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
 18675 ;; Parameters:    Size  Location     Type
 18676 ;;  f1              3   56[BANK1 ] float 
 18677 ;; Auto vars:     Size  Location     Type
 18678 ;;  lval            4   66[BANK1 ] unsigned long 
 18679 ;;  exp1            1   70[BANK1 ] unsigned char 
 18680 ;;  sign1           1   65[BANK1 ] unsigned char 
 18681 ;; Return value:  Size  Location     Type
 18682 ;;                  4   56[BANK1 ] long 
 18683 ;; Registers used:
 18684 ;;		wreg, status,2, status,0
 18685 ;; Tracked objects:
 18686 ;;		On entry : 0/0
 18687 ;;		On exit  : 0/0
 18688 ;;		Unchanged: 0/0
 18689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18690 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18691 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18692 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 18693 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 18694 ;;Total ram usage:       15 bytes
 18695 ;; Hardware stack levels used:    1
 18696 ;; Hardware stack levels required when called:    6
 18697 ;; This function calls:
 18698 ;;		Nothing
 18699 ;; This function is called by:
 18700 ;;		_Command
 18701 ;;		_SetContrast
 18702 ;;		_SetDuty
 18703 ;; This function uses a non-reentrant model
 18704 ;;
 18705                           
 18706                           	psect	text33
 18707  015452                     __ptext33:
 18708                           	opt stack 0
 18709  015452                     ___fttol:
 18710                           	opt stack 23
 18711                           
 18712                           ;incstack = 0
 18713  015452  C1A8  F1AA         	movff	___fttol@f1+2,??___fttol
 18714  015456  0101               	movlb	1	; () banked
 18715  015458  6BAB               	clrf	(??___fttol+1)& (0+255),b
 18716  01545A  6BAC               	clrf	(??___fttol+2)& (0+255),b
 18717  01545C  0101               	movlb	1	; () banked
 18718  01545E  35A7               	rlcf	(___fttol@f1+1)& (0+255),w,b
 18719  015460  0101               	movlb	1	; () banked
 18720  015462  37AA               	rlcf	??___fttol& (0+255),f,b
 18721  015464  E301               	bnc	u16331
 18722  015466  81AB               	bsf	(??___fttol+1)& (0+255),0,b
 18723  015468                     u16331:
 18724  015468  0101               	movlb	1	; () banked
 18725  01546A  51AA               	movf	??___fttol& (0+255),w,b
 18726  01546C  0101               	movlb	1	; () banked
 18727  01546E  6FB4               	movwf	___fttol@exp1& (0+255),b
 18728  015470  0101               	movlb	1	; () banked
 18729  015472  51B4               	movf	___fttol@exp1& (0+255),w,b
 18730  015474  A4D8               	btfss	status,2,c
 18731  015476  D00A               	goto	l12575
 18732                           
 18733                           ; BSR set to: 1
 18734  015478  0E00               	movlw	0
 18735  01547A  0101               	movlb	1	; () banked
 18736  01547C  6FA6               	movwf	?___fttol& (0+255),b
 18737  01547E  0E00               	movlw	0
 18738  015480  6FA7               	movwf	(?___fttol+1)& (0+255),b
 18739  015482  0E00               	movlw	0
 18740  015484  6FA8               	movwf	(?___fttol+2)& (0+255),b
 18741  015486  0E00               	movlw	0
 18742  015488  6FA9               	movwf	(?___fttol+3)& (0+255),b
 18743                           
 18744                           ; BSR set to: 1
 18745  01548A  0012               	return	
 18746  01548C                     l12575:
 18747                           
 18748                           ; BSR set to: 1
 18749  01548C  0E17               	movlw	23
 18750  01548E  0101               	movlb	1	; () banked
 18751  015490  6FAA               	movwf	??___fttol& (0+255),b
 18752  015492  C1A6  F1AB         	movff	___fttol@f1,??___fttol+1
 18753  015496  C1A7  F1AC         	movff	___fttol@f1+1,??___fttol+2
 18754  01549A  C1A8  F1AD         	movff	___fttol@f1+2,??___fttol+3
 18755  01549E  0101               	movlb	1	; () banked
 18756  0154A0  29AA               	incf	??___fttol& (0+255),w,b
 18757  0154A2  0101               	movlb	1	; () banked
 18758  0154A4  6FAE               	movwf	(??___fttol+4)& (0+255),b
 18759  0154A6  D005               	goto	u16350
 18760  0154A8                     u16355:
 18761  0154A8  0101               	movlb	1	; () banked
 18762  0154AA  90D8               	bcf	status,0,c
 18763  0154AC  33AD               	rrcf	(??___fttol+3)& (0+255),f,b
 18764  0154AE  33AC               	rrcf	(??___fttol+2)& (0+255),f,b
 18765  0154B0  33AB               	rrcf	(??___fttol+1)& (0+255),f,b
 18766  0154B2                     u16350:
 18767  0154B2  0101               	movlb	1	; () banked
 18768  0154B4  2FAE               	decfsz	(??___fttol+4)& (0+255),f,b
 18769  0154B6  D7F8               	goto	u16355
 18770  0154B8  0101               	movlb	1	; () banked
 18771  0154BA  51AB               	movf	(??___fttol+1)& (0+255),w,b
 18772  0154BC  0101               	movlb	1	; () banked
 18773  0154BE  6FAF               	movwf	___fttol@sign1& (0+255),b
 18774                           
 18775                           ; BSR set to: 1
 18776  0154C0  0101               	movlb	1	; () banked
 18777  0154C2  8FA7               	bsf	(___fttol@f1+1)& (0+255),7,b
 18778                           
 18779                           ; BSR set to: 1
 18780  0154C4  0EFF               	movlw	255
 18781  0154C6  0101               	movlb	1	; () banked
 18782  0154C8  17A6               	andwf	___fttol@f1& (0+255),f,b
 18783  0154CA  0EFF               	movlw	255
 18784  0154CC  0101               	movlb	1	; () banked
 18785  0154CE  17A7               	andwf	(___fttol@f1+1)& (0+255),f,b
 18786  0154D0  0E00               	movlw	0
 18787  0154D2  0101               	movlb	1	; () banked
 18788  0154D4  17A8               	andwf	(___fttol@f1+2)& (0+255),f,b
 18789                           
 18790                           ; BSR set to: 1
 18791  0154D6  0101               	movlb	1	; () banked
 18792  0154D8  51A6               	movf	___fttol@f1& (0+255),w,b
 18793  0154DA  0101               	movlb	1	; () banked
 18794  0154DC  6FB0               	movwf	___fttol@lval& (0+255),b
 18795  0154DE  0101               	movlb	1	; () banked
 18796  0154E0  51A7               	movf	(___fttol@f1+1)& (0+255),w,b
 18797  0154E2  0101               	movlb	1	; () banked
 18798  0154E4  6FB1               	movwf	(___fttol@lval+1)& (0+255),b
 18799  0154E6  0101               	movlb	1	; () banked
 18800  0154E8  51A8               	movf	(___fttol@f1+2)& (0+255),w,b
 18801  0154EA  0101               	movlb	1	; () banked
 18802  0154EC  6FB2               	movwf	(___fttol@lval+2)& (0+255),b
 18803  0154EE  0101               	movlb	1	; () banked
 18804  0154F0  6BB3               	clrf	(___fttol@lval+3)& (0+255),b
 18805                           
 18806                           ; BSR set to: 1
 18807  0154F2  0E8E               	movlw	142
 18808  0154F4  0101               	movlb	1	; () banked
 18809  0154F6  5FB4               	subwf	___fttol@exp1& (0+255),f,b
 18810                           
 18811                           ; BSR set to: 1
 18812  0154F8  0101               	movlb	1	; () banked
 18813  0154FA  AFB4               	btfss	___fttol@exp1& (0+255),7,b
 18814  0154FC  D01B               	goto	l12597
 18815                           
 18816                           ; BSR set to: 1
 18817  0154FE  0101               	movlb	1	; () banked
 18818  015500  51B4               	movf	___fttol@exp1& (0+255),w,b
 18819  015502  0A80               	xorlw	128
 18820  015504  0F8F               	addlw	143
 18821  015506  B0D8               	btfsc	status,0,c
 18822  015508  D00B               	goto	l12593
 18823                           
 18824                           ; BSR set to: 1
 18825  01550A  0E00               	movlw	0
 18826  01550C  0101               	movlb	1	; () banked
 18827  01550E  6FA6               	movwf	?___fttol& (0+255),b
 18828  015510  0E00               	movlw	0
 18829  015512  6FA7               	movwf	(?___fttol+1)& (0+255),b
 18830  015514  0E00               	movlw	0
 18831  015516  6FA8               	movwf	(?___fttol+2)& (0+255),b
 18832  015518  0E00               	movlw	0
 18833  01551A  6FA9               	movwf	(?___fttol+3)& (0+255),b
 18834                           
 18835                           ; BSR set to: 1
 18836  01551C  0012               	return	
 18837                           
 18838                           ; BSR set to: 1
 18839  01551E  D000               	goto	l12593
 18840  015520                     l12593:
 18841                           
 18842                           ; BSR set to: 1
 18843  015520  0101               	movlb	1	; () banked
 18844  015522  90D8               	bcf	status,0,c
 18845  015524  33B3               	rrcf	(___fttol@lval+3)& (0+255),f,b
 18846  015526  33B2               	rrcf	(___fttol@lval+2)& (0+255),f,b
 18847  015528  33B1               	rrcf	(___fttol@lval+1)& (0+255),f,b
 18848  01552A  33B0               	rrcf	___fttol@lval& (0+255),f,b
 18849                           
 18850                           ; BSR set to: 1
 18851  01552C  0101               	movlb	1	; () banked
 18852  01552E  3FB4               	incfsz	___fttol@exp1& (0+255),f,b
 18853  015530  D7F7               	goto	l12593
 18854                           
 18855                           ; BSR set to: 1
 18856  015532  D01F               	goto	l12607
 18857  015534                     l12597:
 18858                           
 18859                           ; BSR set to: 1
 18860  015534  0E17               	movlw	23
 18861  015536  0101               	movlb	1	; () banked
 18862  015538  65B4               	cpfsgt	___fttol@exp1& (0+255),b
 18863  01553A  D014               	goto	l12605
 18864                           
 18865                           ; BSR set to: 1
 18866  01553C  0E00               	movlw	0
 18867  01553E  0101               	movlb	1	; () banked
 18868  015540  6FA6               	movwf	?___fttol& (0+255),b
 18869  015542  0E00               	movlw	0
 18870  015544  6FA7               	movwf	(?___fttol+1)& (0+255),b
 18871  015546  0E00               	movlw	0
 18872  015548  6FA8               	movwf	(?___fttol+2)& (0+255),b
 18873  01554A  0E00               	movlw	0
 18874  01554C  6FA9               	movwf	(?___fttol+3)& (0+255),b
 18875                           
 18876                           ; BSR set to: 1
 18877  01554E  0012               	return	
 18878                           
 18879                           ; BSR set to: 1
 18880  015550  D009               	goto	l12605
 18881  015552                     l12603:
 18882                           
 18883                           ; BSR set to: 1
 18884  015552  0101               	movlb	1	; () banked
 18885  015554  90D8               	bcf	status,0,c
 18886  015556  37B0               	rlcf	___fttol@lval& (0+255),f,b
 18887  015558  37B1               	rlcf	(___fttol@lval+1)& (0+255),f,b
 18888  01555A  37B2               	rlcf	(___fttol@lval+2)& (0+255),f,b
 18889  01555C  37B3               	rlcf	(___fttol@lval+3)& (0+255),f,b
 18890  01555E  0101               	movlb	1	; () banked
 18891  015560  07B4               	decf	___fttol@exp1& (0+255),f,b
 18892  015562  D000               	goto	l12605
 18893  015564                     l12605:
 18894                           
 18895                           ; BSR set to: 1
 18896  015564  0101               	movlb	1	; () banked
 18897  015566  51B4               	movf	___fttol@exp1& (0+255),w,b
 18898  015568  0101               	movlb	1	; () banked
 18899  01556A  B4D8               	btfsc	status,2,c
 18900  01556C  D002               	goto	l12607
 18901  01556E  D7F1               	goto	l12603
 18902                           
 18903                           ; BSR set to: 1
 18904  015570  D000               	goto	l12607
 18905  015572                     l12607:
 18906                           
 18907                           ; BSR set to: 1
 18908  015572  0101               	movlb	1	; () banked
 18909  015574  51AF               	movf	___fttol@sign1& (0+255),w,b
 18910  015576  0101               	movlb	1	; () banked
 18911  015578  B4D8               	btfsc	status,2,c
 18912  01557A  D00A               	goto	l12611
 18913                           
 18914                           ; BSR set to: 1
 18915  01557C  0101               	movlb	1	; () banked
 18916  01557E  1FB3               	comf	(___fttol@lval+3)& (0+255),f,b
 18917  015580  1FB2               	comf	(___fttol@lval+2)& (0+255),f,b
 18918  015582  1FB1               	comf	(___fttol@lval+1)& (0+255),f,b
 18919  015584  6DB0               	negf	___fttol@lval& (0+255),b
 18920  015586  0E00               	movlw	0
 18921  015588  23B1               	addwfc	(___fttol@lval+1)& (0+255),f,b
 18922  01558A  23B2               	addwfc	(___fttol@lval+2)& (0+255),f,b
 18923  01558C  23B3               	addwfc	(___fttol@lval+3)& (0+255),f,b
 18924  01558E  D000               	goto	l12611
 18925  015590                     l12611:
 18926                           
 18927                           ; BSR set to: 1
 18928  015590  C1B0  F1A6         	movff	___fttol@lval,?___fttol
 18929  015594  C1B1  F1A7         	movff	___fttol@lval+1,?___fttol+1
 18930  015598  C1B2  F1A8         	movff	___fttol@lval+2,?___fttol+2
 18931  01559C  C1B3  F1A9         	movff	___fttol@lval+3,?___fttol+3
 18932  0155A0  0012               	return	
 18933                           
 18934                           ; BSR set to: 1
 18935                           
 18936                           ; BSR set to: 1
 18937  0155A2  0012               	return		;funcret
 18938  0155A4                     __end_of___fttol:
 18939                           	opt stack 0
 18940                           tblptru	equ	0xFF8
 18941                           tblptrh	equ	0xFF7
 18942                           tblptrl	equ	0xFF6
 18943                           tablat	equ	0xFF5
 18944                           prodh	equ	0xFF4
 18945                           prodl	equ	0xFF3
 18946                           intcon	equ	0xFF2
 18947                           intcon2	equ	0xFF1
 18948                           postinc0	equ	0xFEE
 18949                           plusw0	equ	0xFEB
 18950                           wreg	equ	0xFE8
 18951                           indf1	equ	0xFE7
 18952                           postdec1	equ	0xFE5
 18953                           fsr1h	equ	0xFE2
 18954                           fsr1l	equ	0xFE1
 18955                           indf2	equ	0xFDF
 18956                           postinc2	equ	0xFDE
 18957                           postdec2	equ	0xFDD
 18958                           plusw2	equ	0xFDB
 18959                           fsr2h	equ	0xFDA
 18960                           fsr2l	equ	0xFD9
 18961                           status	equ	0xFD8
 18962                           
 18963 ;; *************** function ___ftmul *****************
 18964 ;; Defined at:
 18965 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
 18966 ;; Parameters:    Size  Location     Type
 18967 ;;  f1              3   41[BANK1 ] float 
 18968 ;;  f2              3   44[BANK1 ] float 
 18969 ;; Auto vars:     Size  Location     Type
 18970 ;;  f3_as_produc    3   51[BANK1 ] unsigned um
 18971 ;;  sign            1   55[BANK1 ] unsigned char 
 18972 ;;  cntr            1   54[BANK1 ] unsigned char 
 18973 ;;  exp             1   50[BANK1 ] unsigned char 
 18974 ;; Return value:  Size  Location     Type
 18975 ;;                  3   41[BANK1 ] float 
 18976 ;; Registers used:
 18977 ;;		wreg, status,2, status,0, cstack
 18978 ;; Tracked objects:
 18979 ;;		On entry : 0/0
 18980 ;;		On exit  : 0/0
 18981 ;;		Unchanged: 0/0
 18982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18983 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18984 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18985 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18986 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 18987 ;;Total ram usage:       15 bytes
 18988 ;; Hardware stack levels used:    1
 18989 ;; Hardware stack levels required when called:    7
 18990 ;; This function calls:
 18991 ;;		___ftpack
 18992 ;; This function is called by:
 18993 ;;		_Command
 18994 ;;		_SetContrast
 18995 ;;		_SetDuty
 18996 ;; This function uses a non-reentrant model
 18997 ;;
 18998                           
 18999                           	psect	text34
 19000  01518E                     __ptext34:
 19001                           	opt stack 0
 19002  01518E                     ___ftmul:
 19003                           	opt stack 22
 19004                           
 19005                           ; BSR set to: 1
 19006                           ;incstack = 0
 19007  01518E  C199  F19D         	movff	___ftmul@f1+2,??___ftmul
 19008  015192  0101               	movlb	1	; () banked
 19009  015194  6B9E               	clrf	(??___ftmul+1)& (0+255),b
 19010  015196  6B9F               	clrf	(??___ftmul+2)& (0+255),b
 19011  015198  0101               	movlb	1	; () banked
 19012  01519A  3598               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 19013  01519C  0101               	movlb	1	; () banked
 19014  01519E  379D               	rlcf	??___ftmul& (0+255),f,b
 19015  0151A0  E301               	bnc	u16151
 19016  0151A2  819E               	bsf	(??___ftmul+1)& (0+255),0,b
 19017  0151A4                     u16151:
 19018  0151A4  0101               	movlb	1	; () banked
 19019  0151A6  519D               	movf	??___ftmul& (0+255),w,b
 19020  0151A8  0101               	movlb	1	; () banked
 19021  0151AA  6FA0               	movwf	___ftmul@exp& (0+255),b
 19022  0151AC  0101               	movlb	1	; () banked
 19023  0151AE  51A0               	movf	___ftmul@exp& (0+255),w,b
 19024  0151B0  A4D8               	btfss	status,2,c
 19025  0151B2  D00A               	goto	l12447
 19026                           
 19027                           ; BSR set to: 1
 19028  0151B4  0E00               	movlw	0
 19029  0151B6  0101               	movlb	1	; () banked
 19030  0151B8  6F97               	movwf	?___ftmul& (0+255),b
 19031  0151BA  0E00               	movlw	0
 19032  0151BC  0101               	movlb	1	; () banked
 19033  0151BE  6F98               	movwf	(?___ftmul+1)& (0+255),b
 19034  0151C0  0E00               	movlw	0
 19035  0151C2  0101               	movlb	1	; () banked
 19036  0151C4  6F99               	movwf	(?___ftmul+2)& (0+255),b
 19037                           
 19038                           ; BSR set to: 1
 19039  0151C6  0012               	return	
 19040  0151C8                     l12447:
 19041                           
 19042                           ; BSR set to: 1
 19043  0151C8  C19C  F19D         	movff	___ftmul@f2+2,??___ftmul
 19044  0151CC  0101               	movlb	1	; () banked
 19045  0151CE  6B9E               	clrf	(??___ftmul+1)& (0+255),b
 19046  0151D0  6B9F               	clrf	(??___ftmul+2)& (0+255),b
 19047  0151D2  0101               	movlb	1	; () banked
 19048  0151D4  359B               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 19049  0151D6  0101               	movlb	1	; () banked
 19050  0151D8  379D               	rlcf	??___ftmul& (0+255),f,b
 19051  0151DA  E301               	bnc	u16171
 19052  0151DC  819E               	bsf	(??___ftmul+1)& (0+255),0,b
 19053  0151DE                     u16171:
 19054  0151DE  0101               	movlb	1	; () banked
 19055  0151E0  519D               	movf	??___ftmul& (0+255),w,b
 19056  0151E2  0101               	movlb	1	; () banked
 19057  0151E4  6FA5               	movwf	___ftmul@sign& (0+255),b
 19058  0151E6  0101               	movlb	1	; () banked
 19059  0151E8  51A5               	movf	___ftmul@sign& (0+255),w,b
 19060  0151EA  A4D8               	btfss	status,2,c
 19061  0151EC  D00A               	goto	l12453
 19062                           
 19063                           ; BSR set to: 1
 19064  0151EE  0E00               	movlw	0
 19065  0151F0  0101               	movlb	1	; () banked
 19066  0151F2  6F97               	movwf	?___ftmul& (0+255),b
 19067  0151F4  0E00               	movlw	0
 19068  0151F6  0101               	movlb	1	; () banked
 19069  0151F8  6F98               	movwf	(?___ftmul+1)& (0+255),b
 19070  0151FA  0E00               	movlw	0
 19071  0151FC  0101               	movlb	1	; () banked
 19072  0151FE  6F99               	movwf	(?___ftmul+2)& (0+255),b
 19073                           
 19074                           ; BSR set to: 1
 19075  015200  0012               	return	
 19076  015202                     l12453:
 19077                           
 19078                           ; BSR set to: 1
 19079  015202  0101               	movlb	1	; () banked
 19080  015204  51A5               	movf	___ftmul@sign& (0+255),w,b
 19081  015206  0F7B               	addlw	123
 19082  015208  0101               	movlb	1	; () banked
 19083  01520A  27A0               	addwf	___ftmul@exp& (0+255),f,b
 19084                           
 19085                           ; BSR set to: 1
 19086  01520C  C199  F1A5         	movff	___ftmul@f1+2,___ftmul@sign
 19087  015210  0101               	movlb	1	; () banked
 19088  015212  519C               	movf	(___ftmul@f2+2)& (0+255),w,b
 19089  015214  0101               	movlb	1	; () banked
 19090  015216  1BA5               	xorwf	___ftmul@sign& (0+255),f,b
 19091  015218  0E80               	movlw	128
 19092  01521A  0101               	movlb	1	; () banked
 19093  01521C  17A5               	andwf	___ftmul@sign& (0+255),f,b
 19094                           
 19095                           ; BSR set to: 1
 19096  01521E  0101               	movlb	1	; () banked
 19097  015220  8F98               	bsf	(___ftmul@f1+1)& (0+255),7,b
 19098                           
 19099                           ; BSR set to: 1
 19100  015222  0101               	movlb	1	; () banked
 19101  015224  8F9B               	bsf	(___ftmul@f2+1)& (0+255),7,b
 19102                           
 19103                           ; BSR set to: 1
 19104  015226  0EFF               	movlw	255
 19105  015228  0101               	movlb	1	; () banked
 19106  01522A  179A               	andwf	___ftmul@f2& (0+255),f,b
 19107  01522C  0EFF               	movlw	255
 19108  01522E  0101               	movlb	1	; () banked
 19109  015230  179B               	andwf	(___ftmul@f2+1)& (0+255),f,b
 19110  015232  0E00               	movlw	0
 19111  015234  0101               	movlb	1	; () banked
 19112  015236  179C               	andwf	(___ftmul@f2+2)& (0+255),f,b
 19113                           
 19114                           ; BSR set to: 1
 19115  015238  0E00               	movlw	0
 19116  01523A  0101               	movlb	1	; () banked
 19117  01523C  6FA1               	movwf	___ftmul@f3_as_product& (0+255),b
 19118  01523E  0E00               	movlw	0
 19119  015240  0101               	movlb	1	; () banked
 19120  015242  6FA2               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 19121  015244  0E00               	movlw	0
 19122  015246  0101               	movlb	1	; () banked
 19123  015248  6FA3               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 19124                           
 19125                           ; BSR set to: 1
 19126  01524A  0E07               	movlw	7
 19127  01524C  0101               	movlb	1	; () banked
 19128  01524E  6FA4               	movwf	___ftmul@cntr& (0+255),b
 19129  015250  D000               	goto	l12467
 19130  015252                     l12467:
 19131                           
 19132                           ; BSR set to: 1
 19133  015252  0101               	movlb	1	; () banked
 19134  015254  A197               	btfss	___ftmul@f1& (0+255),0,b
 19135  015256  D00D               	goto	l12471
 19136                           
 19137                           ; BSR set to: 1
 19138  015258  0101               	movlb	1	; () banked
 19139  01525A  519A               	movf	___ftmul@f2& (0+255),w,b
 19140  01525C  0101               	movlb	1	; () banked
 19141  01525E  27A1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 19142  015260  0101               	movlb	1	; () banked
 19143  015262  519B               	movf	(___ftmul@f2+1)& (0+255),w,b
 19144  015264  0101               	movlb	1	; () banked
 19145  015266  23A2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 19146  015268  0101               	movlb	1	; () banked
 19147  01526A  519C               	movf	(___ftmul@f2+2)& (0+255),w,b
 19148  01526C  0101               	movlb	1	; () banked
 19149  01526E  23A3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 19150  015270  D000               	goto	l12471
 19151  015272                     l12471:
 19152                           
 19153                           ; BSR set to: 1
 19154  015272  0101               	movlb	1	; () banked
 19155  015274  90D8               	bcf	status,0,c
 19156  015276  3399               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 19157  015278  3398               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 19158  01527A  3397               	rrcf	___ftmul@f1& (0+255),f,b
 19159  01527C  0101               	movlb	1	; () banked
 19160  01527E  90D8               	bcf	status,0,c
 19161  015280  379A               	rlcf	___ftmul@f2& (0+255),f,b
 19162  015282  379B               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 19163  015284  379C               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 19164                           
 19165                           ; BSR set to: 1
 19166  015286  0101               	movlb	1	; () banked
 19167  015288  2FA4               	decfsz	___ftmul@cntr& (0+255),f,b
 19168  01528A  D7E3               	goto	l12467
 19169  01528C  D000               	goto	l12475
 19170  01528E                     l12475:
 19171                           
 19172                           ; BSR set to: 1
 19173  01528E  0E09               	movlw	9
 19174  015290  0101               	movlb	1	; () banked
 19175  015292  6FA4               	movwf	___ftmul@cntr& (0+255),b
 19176  015294  D000               	goto	l12477
 19177  015296                     l12477:
 19178                           
 19179                           ; BSR set to: 1
 19180  015296  0101               	movlb	1	; () banked
 19181  015298  A197               	btfss	___ftmul@f1& (0+255),0,b
 19182  01529A  D00D               	goto	l12481
 19183                           
 19184                           ; BSR set to: 1
 19185  01529C  0101               	movlb	1	; () banked
 19186  01529E  519A               	movf	___ftmul@f2& (0+255),w,b
 19187  0152A0  0101               	movlb	1	; () banked
 19188  0152A2  27A1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 19189  0152A4  0101               	movlb	1	; () banked
 19190  0152A6  519B               	movf	(___ftmul@f2+1)& (0+255),w,b
 19191  0152A8  0101               	movlb	1	; () banked
 19192  0152AA  23A2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 19193  0152AC  0101               	movlb	1	; () banked
 19194  0152AE  519C               	movf	(___ftmul@f2+2)& (0+255),w,b
 19195  0152B0  0101               	movlb	1	; () banked
 19196  0152B2  23A3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 19197  0152B4  D000               	goto	l12481
 19198  0152B6                     l12481:
 19199                           
 19200                           ; BSR set to: 1
 19201  0152B6  0101               	movlb	1	; () banked
 19202  0152B8  90D8               	bcf	status,0,c
 19203  0152BA  3399               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 19204  0152BC  3398               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 19205  0152BE  3397               	rrcf	___ftmul@f1& (0+255),f,b
 19206  0152C0  0101               	movlb	1	; () banked
 19207  0152C2  90D8               	bcf	status,0,c
 19208  0152C4  33A3               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 19209  0152C6  33A2               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 19210  0152C8  33A1               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 19211                           
 19212                           ; BSR set to: 1
 19213  0152CA  0101               	movlb	1	; () banked
 19214  0152CC  2FA4               	decfsz	___ftmul@cntr& (0+255),f,b
 19215  0152CE  D7E3               	goto	l12477
 19216  0152D0  D000               	goto	l12485
 19217  0152D2                     l12485:
 19218                           
 19219                           ; BSR set to: 1
 19220  0152D2  C1A1  F17C         	movff	___ftmul@f3_as_product,___ftpack@arg
 19221  0152D6  C1A2  F17D         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 19222  0152DA  C1A3  F17E         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 19223  0152DE  C1A0  F17F         	movff	___ftmul@exp,___ftpack@exp
 19224  0152E2  C1A5  F180         	movff	___ftmul@sign,___ftpack@sign
 19225  0152E6  ECA8  F0AC         	call	___ftpack	;wreg free
 19226  0152EA  C17C  F197         	movff	?___ftpack,?___ftmul
 19227  0152EE  C17D  F198         	movff	?___ftpack+1,?___ftmul+1
 19228  0152F2  C17E  F199         	movff	?___ftpack+2,?___ftmul+2
 19229  0152F6  0012               	return	
 19230  0152F8  0012               	return		;funcret
 19231  0152FA                     __end_of___ftmul:
 19232                           	opt stack 0
 19233                           tblptru	equ	0xFF8
 19234                           tblptrh	equ	0xFF7
 19235                           tblptrl	equ	0xFF6
 19236                           tablat	equ	0xFF5
 19237                           prodh	equ	0xFF4
 19238                           prodl	equ	0xFF3
 19239                           intcon	equ	0xFF2
 19240                           intcon2	equ	0xFF1
 19241                           postinc0	equ	0xFEE
 19242                           plusw0	equ	0xFEB
 19243                           wreg	equ	0xFE8
 19244                           indf1	equ	0xFE7
 19245                           postdec1	equ	0xFE5
 19246                           fsr1h	equ	0xFE2
 19247                           fsr1l	equ	0xFE1
 19248                           indf2	equ	0xFDF
 19249                           postinc2	equ	0xFDE
 19250                           postdec2	equ	0xFDD
 19251                           plusw2	equ	0xFDB
 19252                           fsr2h	equ	0xFDA
 19253                           fsr2l	equ	0xFD9
 19254                           status	equ	0xFD8
 19255                           
 19256 ;; *************** function ___ftdiv *****************
 19257 ;; Defined at:
 19258 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
 19259 ;; Parameters:    Size  Location     Type
 19260 ;;  f1              3   26[BANK1 ] float 
 19261 ;;  f2              3   29[BANK1 ] float 
 19262 ;; Auto vars:     Size  Location     Type
 19263 ;;  f3              3   36[BANK1 ] float 
 19264 ;;  sign            1   40[BANK1 ] unsigned char 
 19265 ;;  exp             1   39[BANK1 ] unsigned char 
 19266 ;;  cntr            1   35[BANK1 ] unsigned char 
 19267 ;; Return value:  Size  Location     Type
 19268 ;;                  3   26[BANK1 ] float 
 19269 ;; Registers used:
 19270 ;;		wreg, status,2, status,0, cstack
 19271 ;; Tracked objects:
 19272 ;;		On entry : 0/0
 19273 ;;		On exit  : 0/0
 19274 ;;		Unchanged: 0/0
 19275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19276 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19277 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19278 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19279 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 19280 ;;Total ram usage:       15 bytes
 19281 ;; Hardware stack levels used:    1
 19282 ;; Hardware stack levels required when called:    7
 19283 ;; This function calls:
 19284 ;;		___ftpack
 19285 ;; This function is called by:
 19286 ;;		_Command
 19287 ;;		_SetContrast
 19288 ;;		_SetDuty
 19289 ;; This function uses a non-reentrant model
 19290 ;;
 19291                           
 19292                           	psect	text35
 19293  0155A4                     __ptext35:
 19294                           	opt stack 0
 19295  0155A4                     ___ftdiv:
 19296                           	opt stack 22
 19297                           
 19298                           ;incstack = 0
 19299  0155A4  C18A  F18E         	movff	___ftdiv@f1+2,??___ftdiv
 19300  0155A8  0101               	movlb	1	; () banked
 19301  0155AA  6B8F               	clrf	(??___ftdiv+1)& (0+255),b
 19302  0155AC  6B90               	clrf	(??___ftdiv+2)& (0+255),b
 19303  0155AE  0101               	movlb	1	; () banked
 19304  0155B0  3589               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 19305  0155B2  0101               	movlb	1	; () banked
 19306  0155B4  378E               	rlcf	??___ftdiv& (0+255),f,b
 19307  0155B6  E301               	bnc	u16101
 19308  0155B8  818F               	bsf	(??___ftdiv+1)& (0+255),0,b
 19309  0155BA                     u16101:
 19310  0155BA  0101               	movlb	1	; () banked
 19311  0155BC  518E               	movf	??___ftdiv& (0+255),w,b
 19312  0155BE  0101               	movlb	1	; () banked
 19313  0155C0  6F95               	movwf	___ftdiv@exp& (0+255),b
 19314  0155C2  0101               	movlb	1	; () banked
 19315  0155C4  5195               	movf	___ftdiv@exp& (0+255),w,b
 19316  0155C6  A4D8               	btfss	status,2,c
 19317  0155C8  D00A               	goto	l12401
 19318                           
 19319                           ; BSR set to: 1
 19320  0155CA  0E00               	movlw	0
 19321  0155CC  0101               	movlb	1	; () banked
 19322  0155CE  6F88               	movwf	?___ftdiv& (0+255),b
 19323  0155D0  0E00               	movlw	0
 19324  0155D2  0101               	movlb	1	; () banked
 19325  0155D4  6F89               	movwf	(?___ftdiv+1)& (0+255),b
 19326  0155D6  0E00               	movlw	0
 19327  0155D8  0101               	movlb	1	; () banked
 19328  0155DA  6F8A               	movwf	(?___ftdiv+2)& (0+255),b
 19329                           
 19330                           ; BSR set to: 1
 19331  0155DC  0012               	return	
 19332  0155DE                     l12401:
 19333                           
 19334                           ; BSR set to: 1
 19335  0155DE  C18D  F18E         	movff	___ftdiv@f2+2,??___ftdiv
 19336  0155E2  0101               	movlb	1	; () banked
 19337  0155E4  6B8F               	clrf	(??___ftdiv+1)& (0+255),b
 19338  0155E6  6B90               	clrf	(??___ftdiv+2)& (0+255),b
 19339  0155E8  0101               	movlb	1	; () banked
 19340  0155EA  358C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 19341  0155EC  0101               	movlb	1	; () banked
 19342  0155EE  378E               	rlcf	??___ftdiv& (0+255),f,b
 19343  0155F0  E301               	bnc	u16121
 19344  0155F2  818F               	bsf	(??___ftdiv+1)& (0+255),0,b
 19345  0155F4                     u16121:
 19346  0155F4  0101               	movlb	1	; () banked
 19347  0155F6  518E               	movf	??___ftdiv& (0+255),w,b
 19348  0155F8  0101               	movlb	1	; () banked
 19349  0155FA  6F96               	movwf	___ftdiv@sign& (0+255),b
 19350  0155FC  0101               	movlb	1	; () banked
 19351  0155FE  5196               	movf	___ftdiv@sign& (0+255),w,b
 19352  015600  A4D8               	btfss	status,2,c
 19353  015602  D00A               	goto	l12407
 19354                           
 19355                           ; BSR set to: 1
 19356  015604  0E00               	movlw	0
 19357  015606  0101               	movlb	1	; () banked
 19358  015608  6F88               	movwf	?___ftdiv& (0+255),b
 19359  01560A  0E00               	movlw	0
 19360  01560C  0101               	movlb	1	; () banked
 19361  01560E  6F89               	movwf	(?___ftdiv+1)& (0+255),b
 19362  015610  0E00               	movlw	0
 19363  015612  0101               	movlb	1	; () banked
 19364  015614  6F8A               	movwf	(?___ftdiv+2)& (0+255),b
 19365                           
 19366                           ; BSR set to: 1
 19367  015616  0012               	return	
 19368  015618                     l12407:
 19369                           
 19370                           ; BSR set to: 1
 19371  015618  0E00               	movlw	0
 19372  01561A  0101               	movlb	1	; () banked
 19373  01561C  6F92               	movwf	___ftdiv@f3& (0+255),b
 19374  01561E  0E00               	movlw	0
 19375  015620  0101               	movlb	1	; () banked
 19376  015622  6F93               	movwf	(___ftdiv@f3+1)& (0+255),b
 19377  015624  0E00               	movlw	0
 19378  015626  0101               	movlb	1	; () banked
 19379  015628  6F94               	movwf	(___ftdiv@f3+2)& (0+255),b
 19380                           
 19381                           ; BSR set to: 1
 19382  01562A  0101               	movlb	1	; () banked
 19383  01562C  5196               	movf	___ftdiv@sign& (0+255),w,b
 19384  01562E  0F89               	addlw	137
 19385  015630  0101               	movlb	1	; () banked
 19386  015632  5F95               	subwf	___ftdiv@exp& (0+255),f,b
 19387                           
 19388                           ; BSR set to: 1
 19389  015634  C18A  F196         	movff	___ftdiv@f1+2,___ftdiv@sign
 19390                           
 19391                           ; BSR set to: 1
 19392  015638  0101               	movlb	1	; () banked
 19393  01563A  518D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 19394  01563C  0101               	movlb	1	; () banked
 19395  01563E  1B96               	xorwf	___ftdiv@sign& (0+255),f,b
 19396                           
 19397                           ; BSR set to: 1
 19398  015640  0E80               	movlw	128
 19399  015642  0101               	movlb	1	; () banked
 19400  015644  1796               	andwf	___ftdiv@sign& (0+255),f,b
 19401                           
 19402                           ; BSR set to: 1
 19403  015646  0101               	movlb	1	; () banked
 19404  015648  8F89               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 19405                           
 19406                           ; BSR set to: 1
 19407  01564A  0EFF               	movlw	255
 19408  01564C  0101               	movlb	1	; () banked
 19409  01564E  1788               	andwf	___ftdiv@f1& (0+255),f,b
 19410  015650  0EFF               	movlw	255
 19411  015652  0101               	movlb	1	; () banked
 19412  015654  1789               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 19413  015656  0E00               	movlw	0
 19414  015658  0101               	movlb	1	; () banked
 19415  01565A  178A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 19416                           
 19417                           ; BSR set to: 1
 19418  01565C  0101               	movlb	1	; () banked
 19419  01565E  8F8C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 19420                           
 19421                           ; BSR set to: 1
 19422  015660  0EFF               	movlw	255
 19423  015662  0101               	movlb	1	; () banked
 19424  015664  178B               	andwf	___ftdiv@f2& (0+255),f,b
 19425  015666  0EFF               	movlw	255
 19426  015668  0101               	movlb	1	; () banked
 19427  01566A  178C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 19428  01566C  0E00               	movlw	0
 19429  01566E  0101               	movlb	1	; () banked
 19430  015670  178D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 19431                           
 19432                           ; BSR set to: 1
 19433  015672  0E18               	movlw	24
 19434  015674  0101               	movlb	1	; () banked
 19435  015676  6F91               	movwf	___ftdiv@cntr& (0+255),b
 19436  015678  D000               	goto	l12427
 19437  01567A                     l12427:
 19438                           
 19439                           ; BSR set to: 1
 19440  01567A  0101               	movlb	1	; () banked
 19441  01567C  90D8               	bcf	status,0,c
 19442  01567E  3792               	rlcf	___ftdiv@f3& (0+255),f,b
 19443  015680  3793               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 19444  015682  3794               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 19445                           
 19446                           ; BSR set to: 1
 19447  015684  0101               	movlb	1	; () banked
 19448  015686  518B               	movf	___ftdiv@f2& (0+255),w,b
 19449  015688  0101               	movlb	1	; () banked
 19450  01568A  5D88               	subwf	___ftdiv@f1& (0+255),w,b
 19451  01568C  0101               	movlb	1	; () banked
 19452  01568E  518C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 19453  015690  0101               	movlb	1	; () banked
 19454  015692  5989               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 19455  015694  0101               	movlb	1	; () banked
 19456  015696  518D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 19457  015698  0101               	movlb	1	; () banked
 19458  01569A  598A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 19459  01569C  A0D8               	btfss	status,0,c
 19460  01569E  D00E               	goto	l2272
 19461                           
 19462                           ; BSR set to: 1
 19463  0156A0  0101               	movlb	1	; () banked
 19464  0156A2  518B               	movf	___ftdiv@f2& (0+255),w,b
 19465  0156A4  0101               	movlb	1	; () banked
 19466  0156A6  5F88               	subwf	___ftdiv@f1& (0+255),f,b
 19467  0156A8  0101               	movlb	1	; () banked
 19468  0156AA  518C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 19469  0156AC  0101               	movlb	1	; () banked
 19470  0156AE  5B89               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 19471  0156B0  0101               	movlb	1	; () banked
 19472  0156B2  518D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 19473  0156B4  0101               	movlb	1	; () banked
 19474  0156B6  5B8A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 19475                           
 19476                           ; BSR set to: 1
 19477  0156B8  0101               	movlb	1	; () banked
 19478  0156BA  8192               	bsf	___ftdiv@f3& (0+255),0,b
 19479  0156BC                     l2272:
 19480                           
 19481                           ; BSR set to: 1
 19482  0156BC  0101               	movlb	1	; () banked
 19483  0156BE  90D8               	bcf	status,0,c
 19484  0156C0  3788               	rlcf	___ftdiv@f1& (0+255),f,b
 19485  0156C2  3789               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 19486  0156C4  378A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 19487                           
 19488                           ; BSR set to: 1
 19489  0156C6  0101               	movlb	1	; () banked
 19490  0156C8  2F91               	decfsz	___ftdiv@cntr& (0+255),f,b
 19491  0156CA  D7D7               	goto	l12427
 19492  0156CC  D000               	goto	l12437
 19493  0156CE                     l12437:
 19494                           
 19495                           ; BSR set to: 1
 19496  0156CE  C192  F17C         	movff	___ftdiv@f3,___ftpack@arg
 19497  0156D2  C193  F17D         	movff	___ftdiv@f3+1,___ftpack@arg+1
 19498  0156D6  C194  F17E         	movff	___ftdiv@f3+2,___ftpack@arg+2
 19499  0156DA  C195  F17F         	movff	___ftdiv@exp,___ftpack@exp
 19500  0156DE  C196  F180         	movff	___ftdiv@sign,___ftpack@sign
 19501  0156E2  ECA8  F0AC         	call	___ftpack	;wreg free
 19502  0156E6  C17C  F188         	movff	?___ftpack,?___ftdiv
 19503  0156EA  C17D  F189         	movff	?___ftpack+1,?___ftdiv+1
 19504  0156EE  C17E  F18A         	movff	?___ftpack+2,?___ftdiv+2
 19505  0156F2  0012               	return	
 19506  0156F4  0012               	return		;funcret
 19507  0156F6                     __end_of___ftdiv:
 19508                           	opt stack 0
 19509                           tblptru	equ	0xFF8
 19510                           tblptrh	equ	0xFF7
 19511                           tblptrl	equ	0xFF6
 19512                           tablat	equ	0xFF5
 19513                           prodh	equ	0xFF4
 19514                           prodl	equ	0xFF3
 19515                           intcon	equ	0xFF2
 19516                           intcon2	equ	0xFF1
 19517                           postinc0	equ	0xFEE
 19518                           plusw0	equ	0xFEB
 19519                           wreg	equ	0xFE8
 19520                           indf1	equ	0xFE7
 19521                           postdec1	equ	0xFE5
 19522                           fsr1h	equ	0xFE2
 19523                           fsr1l	equ	0xFE1
 19524                           indf2	equ	0xFDF
 19525                           postinc2	equ	0xFDE
 19526                           postdec2	equ	0xFDD
 19527                           plusw2	equ	0xFDB
 19528                           fsr2h	equ	0xFDA
 19529                           fsr2l	equ	0xFD9
 19530                           status	equ	0xFD8
 19531                           
 19532 ;; *************** function ___ftpack *****************
 19533 ;; Defined at:
 19534 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
 19535 ;; Parameters:    Size  Location     Type
 19536 ;;  arg             3   14[BANK1 ] unsigned um
 19537 ;;  exp             1   17[BANK1 ] unsigned char 
 19538 ;;  sign            1   18[BANK1 ] unsigned char 
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;		None
 19541 ;; Return value:  Size  Location     Type
 19542 ;;                  3   14[BANK1 ] float 
 19543 ;; Registers used:
 19544 ;;		wreg, status,2, status,0
 19545 ;; Tracked objects:
 19546 ;;		On entry : 0/0
 19547 ;;		On exit  : 0/0
 19548 ;;		Unchanged: 0/0
 19549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19550 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 19551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19552 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19553 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 19554 ;;Total ram usage:        8 bytes
 19555 ;; Hardware stack levels used:    1
 19556 ;; Hardware stack levels required when called:    6
 19557 ;; This function calls:
 19558 ;;		Nothing
 19559 ;; This function is called by:
 19560 ;;		___ftdiv
 19561 ;;		___ftmul
 19562 ;;		___lbtoft
 19563 ;;		___lwtoft
 19564 ;; This function uses a non-reentrant model
 19565 ;;
 19566                           
 19567                           	psect	text36
 19568  015950                     __ptext36:
 19569                           	opt stack 0
 19570  015950                     ___ftpack:
 19571                           	opt stack 22
 19572                           
 19573                           ;incstack = 0
 19574  015950  0101               	movlb	1	; () banked
 19575  015952  517F               	movf	___ftpack@exp& (0+255),w,b
 19576  015954  0101               	movlb	1	; () banked
 19577  015956  B4D8               	btfsc	status,2,c
 19578  015958  D008               	goto	l11563
 19579                           
 19580                           ; BSR set to: 1
 19581  01595A  0101               	movlb	1	; () banked
 19582  01595C  517C               	movf	___ftpack@arg& (0+255),w,b
 19583  01595E  0101               	movlb	1	; () banked
 19584  015960  117D               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 19585  015962  0101               	movlb	1	; () banked
 19586  015964  117E               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 19587  015966  A4D8               	btfss	status,2,c
 19588  015968  D013               	goto	l11569
 19589  01596A                     l11563:
 19590                           
 19591                           ; BSR set to: 1
 19592  01596A  0E00               	movlw	0
 19593  01596C  0101               	movlb	1	; () banked
 19594  01596E  6F7C               	movwf	?___ftpack& (0+255),b
 19595  015970  0E00               	movlw	0
 19596  015972  0101               	movlb	1	; () banked
 19597  015974  6F7D               	movwf	(?___ftpack+1)& (0+255),b
 19598  015976  0E00               	movlw	0
 19599  015978  0101               	movlb	1	; () banked
 19600  01597A  6F7E               	movwf	(?___ftpack+2)& (0+255),b
 19601                           
 19602                           ; BSR set to: 1
 19603  01597C  0012               	return	
 19604                           
 19605                           ; BSR set to: 1
 19606  01597E  D008               	goto	l11569
 19607  015980                     l11567:
 19608                           
 19609                           ; BSR set to: 1
 19610  015980  0101               	movlb	1	; () banked
 19611  015982  2B7F               	incf	___ftpack@exp& (0+255),f,b
 19612  015984  0101               	movlb	1	; () banked
 19613  015986  90D8               	bcf	status,0,c
 19614  015988  337E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 19615  01598A  337D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 19616  01598C  337C               	rrcf	___ftpack@arg& (0+255),f,b
 19617  01598E  D000               	goto	l11569
 19618  015990                     l11569:
 19619                           
 19620                           ; BSR set to: 1
 19621  015990  0E00               	movlw	0
 19622  015992  0101               	movlb	1	; () banked
 19623  015994  157C               	andwf	___ftpack@arg& (0+255),w,b
 19624  015996  0101               	movlb	1	; () banked
 19625  015998  6F81               	movwf	??___ftpack& (0+255),b
 19626  01599A  0E00               	movlw	0
 19627  01599C  0101               	movlb	1	; () banked
 19628  01599E  157D               	andwf	(___ftpack@arg+1)& (0+255),w,b
 19629  0159A0  0101               	movlb	1	; () banked
 19630  0159A2  6F82               	movwf	(??___ftpack+1)& (0+255),b
 19631  0159A4  0EFE               	movlw	254
 19632  0159A6  0101               	movlb	1	; () banked
 19633  0159A8  157E               	andwf	(___ftpack@arg+2)& (0+255),w,b
 19634  0159AA  0101               	movlb	1	; () banked
 19635  0159AC  6F83               	movwf	(??___ftpack+2)& (0+255),b
 19636  0159AE  0101               	movlb	1	; () banked
 19637  0159B0  5181               	movf	??___ftpack& (0+255),w,b
 19638  0159B2  0101               	movlb	1	; () banked
 19639  0159B4  1182               	iorwf	(??___ftpack+1)& (0+255),w,b
 19640  0159B6  0101               	movlb	1	; () banked
 19641  0159B8  1183               	iorwf	(??___ftpack+2)& (0+255),w,b
 19642  0159BA  B4D8               	btfsc	status,2,c
 19643  0159BC  D013               	goto	l11575
 19644  0159BE  D7E0               	goto	l11567
 19645                           
 19646                           ; BSR set to: 1
 19647  0159C0  D011               	goto	l11575
 19648  0159C2                     l11571:
 19649                           
 19650                           ; BSR set to: 1
 19651  0159C2  0101               	movlb	1	; () banked
 19652  0159C4  2B7F               	incf	___ftpack@exp& (0+255),f,b
 19653                           
 19654                           ; BSR set to: 1
 19655  0159C6  0E01               	movlw	1
 19656  0159C8  0101               	movlb	1	; () banked
 19657  0159CA  277C               	addwf	___ftpack@arg& (0+255),f,b
 19658  0159CC  0E00               	movlw	0
 19659  0159CE  0101               	movlb	1	; () banked
 19660  0159D0  237D               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 19661  0159D2  0E00               	movlw	0
 19662  0159D4  0101               	movlb	1	; () banked
 19663  0159D6  237E               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 19664  0159D8  0101               	movlb	1	; () banked
 19665  0159DA  90D8               	bcf	status,0,c
 19666  0159DC  337E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 19667  0159DE  337D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 19668  0159E0  337C               	rrcf	___ftpack@arg& (0+255),f,b
 19669  0159E2  D000               	goto	l11575
 19670  0159E4                     l11575:
 19671                           
 19672                           ; BSR set to: 1
 19673  0159E4  0E00               	movlw	0
 19674  0159E6  0101               	movlb	1	; () banked
 19675  0159E8  157C               	andwf	___ftpack@arg& (0+255),w,b
 19676  0159EA  0101               	movlb	1	; () banked
 19677  0159EC  6F81               	movwf	??___ftpack& (0+255),b
 19678  0159EE  0E00               	movlw	0
 19679  0159F0  0101               	movlb	1	; () banked
 19680  0159F2  157D               	andwf	(___ftpack@arg+1)& (0+255),w,b
 19681  0159F4  0101               	movlb	1	; () banked
 19682  0159F6  6F82               	movwf	(??___ftpack+1)& (0+255),b
 19683  0159F8  0EFF               	movlw	255
 19684  0159FA  0101               	movlb	1	; () banked
 19685  0159FC  157E               	andwf	(___ftpack@arg+2)& (0+255),w,b
 19686  0159FE  0101               	movlb	1	; () banked
 19687  015A00  6F83               	movwf	(??___ftpack+2)& (0+255),b
 19688  015A02  0101               	movlb	1	; () banked
 19689  015A04  5181               	movf	??___ftpack& (0+255),w,b
 19690  015A06  0101               	movlb	1	; () banked
 19691  015A08  1182               	iorwf	(??___ftpack+1)& (0+255),w,b
 19692  015A0A  0101               	movlb	1	; () banked
 19693  015A0C  1183               	iorwf	(??___ftpack+2)& (0+255),w,b
 19694  015A0E  B4D8               	btfsc	status,2,c
 19695  015A10  D00A               	goto	l11579
 19696  015A12  D7D7               	goto	l11571
 19697                           
 19698                           ; BSR set to: 1
 19699  015A14  D008               	goto	l11579
 19700  015A16                     l11577:
 19701                           
 19702                           ; BSR set to: 1
 19703  015A16  0101               	movlb	1	; () banked
 19704  015A18  077F               	decf	___ftpack@exp& (0+255),f,b
 19705  015A1A  0101               	movlb	1	; () banked
 19706  015A1C  90D8               	bcf	status,0,c
 19707  015A1E  377C               	rlcf	___ftpack@arg& (0+255),f,b
 19708  015A20  377D               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 19709  015A22  377E               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 19710  015A24  D000               	goto	l11579
 19711  015A26                     l11579:
 19712                           
 19713                           ; BSR set to: 1
 19714  015A26  0101               	movlb	1	; () banked
 19715  015A28  BF7D               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 19716  015A2A  D005               	goto	l2208
 19717                           
 19718                           ; BSR set to: 1
 19719  015A2C  0E02               	movlw	2
 19720  015A2E  0101               	movlb	1	; () banked
 19721  015A30  617F               	cpfslt	___ftpack@exp& (0+255),b
 19722  015A32  D7F1               	goto	l11577
 19723  015A34  D000               	goto	l2208
 19724  015A36                     l2208:
 19725                           
 19726                           ; BSR set to: 1
 19727  015A36  0101               	movlb	1	; () banked
 19728  015A38  B17F               	btfsc	___ftpack@exp& (0+255),0,b
 19729  015A3A  D003               	goto	l11585
 19730                           
 19731                           ; BSR set to: 1
 19732  015A3C  0101               	movlb	1	; () banked
 19733  015A3E  9F7D               	bcf	(___ftpack@arg+1)& (0+255),7,b
 19734  015A40  D000               	goto	l11585
 19735  015A42                     l11585:
 19736                           
 19737                           ; BSR set to: 1
 19738  015A42  0101               	movlb	1	; () banked
 19739  015A44  90D8               	bcf	status,0,c
 19740  015A46  337F               	rrcf	___ftpack@exp& (0+255),f,b
 19741  015A48  0101               	movlb	1	; () banked
 19742  015A4A  517F               	movf	___ftpack@exp& (0+255),w,b
 19743  015A4C  0101               	movlb	1	; () banked
 19744  015A4E  137E               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 19745                           
 19746                           ; BSR set to: 1
 19747  015A50  0101               	movlb	1	; () banked
 19748  015A52  5180               	movf	___ftpack@sign& (0+255),w,b
 19749  015A54  0101               	movlb	1	; () banked
 19750  015A56  B4D8               	btfsc	status,2,c
 19751  015A58  D003               	goto	l11591
 19752                           
 19753                           ; BSR set to: 1
 19754  015A5A  0101               	movlb	1	; () banked
 19755  015A5C  8F7E               	bsf	(___ftpack@arg+2)& (0+255),7,b
 19756  015A5E  D000               	goto	l11591
 19757  015A60                     l11591:
 19758                           
 19759                           ; BSR set to: 1
 19760  015A60  C17C  F17C         	movff	___ftpack@arg,?___ftpack
 19761  015A64  C17D  F17D         	movff	___ftpack@arg+1,?___ftpack+1
 19762  015A68  C17E  F17E         	movff	___ftpack@arg+2,?___ftpack+2
 19763  015A6C  0012               	return	
 19764                           
 19765                           ; BSR set to: 1
 19766                           
 19767                           ; BSR set to: 1
 19768  015A6E  0012               	return		;funcret
 19769  015A70                     __end_of___ftpack:
 19770                           	opt stack 0
 19771                           tblptru	equ	0xFF8
 19772                           tblptrh	equ	0xFF7
 19773                           tblptrl	equ	0xFF6
 19774                           tablat	equ	0xFF5
 19775                           prodh	equ	0xFF4
 19776                           prodl	equ	0xFF3
 19777                           intcon	equ	0xFF2
 19778                           intcon2	equ	0xFF1
 19779                           postinc0	equ	0xFEE
 19780                           plusw0	equ	0xFEB
 19781                           wreg	equ	0xFE8
 19782                           indf1	equ	0xFE7
 19783                           postdec1	equ	0xFE5
 19784                           fsr1h	equ	0xFE2
 19785                           fsr1l	equ	0xFE1
 19786                           indf2	equ	0xFDF
 19787                           postinc2	equ	0xFDE
 19788                           postdec2	equ	0xFDD
 19789                           plusw2	equ	0xFDB
 19790                           fsr2h	equ	0xFDA
 19791                           fsr2l	equ	0xFD9
 19792                           status	equ	0xFD8
 19793                           
 19794 ;; *************** function _SetBaud *****************
 19795 ;; Defined at:
 19796 ;;		line 316 in file "UART.c"
 19797 ;; Parameters:    Size  Location     Type
 19798 ;;  Baud            4   80[BANK1 ] unsigned long 
 19799 ;;  Parity          1   84[BANK1 ] unsigned char 
 19800 ;; Auto vars:     Size  Location     Type
 19801 ;;  buf            50    0[BANK2 ] unsigned char [50]
 19802 ;;  status          1   50[BANK2 ] unsigned char 
 19803 ;; Return value:  Size  Location     Type
 19804 ;;		None               void
 19805 ;; Registers used:
 19806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19807 ;; Tracked objects:
 19808 ;;		On entry : 0/0
 19809 ;;		On exit  : 0/0
 19810 ;;		Unchanged: 0/0
 19811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19812 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 19813 ;;      Locals:         0       0       0      51       0       0       0       0       0       0       0       0       
      +0       0
 19814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19815 ;;      Totals:         0       0       5      51       0       0       0       0       0       0       0       0       
      +0       0
 19816 ;;Total ram usage:       56 bytes
 19817 ;; Hardware stack levels used:    1
 19818 ;; Hardware stack levels required when called:    9
 19819 ;; This function calls:
 19820 ;;		_InitUART
 19821 ;;		_SetMemoryBaud
 19822 ;;		_SetMemoryParity
 19823 ;;		_UARTstring
 19824 ;;		_UARTstringWAIT
 19825 ;;		_delayUS
 19826 ;;		_sprintf
 19827 ;; This function is called by:
 19828 ;;		_Command
 19829 ;; This function uses a non-reentrant model
 19830 ;;
 19831                           
 19832                           	psect	text37
 19833  014802                     __ptext37:
 19834                           	opt stack 0
 19835  014802                     _SetBaud:
 19836                           	opt stack 20
 19837                           
 19838                           ;UART.c: 318: unsigned char buf[50];
 19839                           ;UART.c: 319: unsigned char status=0;
 19840                           
 19841                           ; BSR set to: 1
 19842                           ;incstack = 0
 19843  014802  0E00               	movlw	0
 19844  014804  0102               	movlb	2	; () banked
 19845  014806  6F32               	movwf	SetBaud@status& (0+255),b
 19846                           
 19847                           ;UART.c: 321: if(Parity)
 19848  014808  0101               	movlb	1	; () banked
 19849  01480A  51C2               	movf	SetBaud@Parity& (0+255),w,b
 19850  01480C  0101               	movlb	1	; () banked
 19851  01480E  A4D8               	btfss	status,2,c
 19852  014810  D05E               	goto	l12965
 19853  014812  D06A               	goto	l12967
 19854                           
 19855                           ; BSR set to: 1
 19856                           ;UART.c: 322: {
 19857                           ;UART.c: 323: switch (Parity)
 19858  014814  D05C               	goto	l12965
 19859  014816                     l12955:
 19860                           
 19861                           ; BSR set to: 1
 19862                           ;UART.c: 326: sprintf(buf,"System Baud will be set to %lu with Odd parity bit\r\n",Baud)
      +                          ;
 19863  014816  0E00               	movlw	low SetBaud@buf
 19864  014818  0101               	movlb	1	; () banked
 19865  01481A  6F92               	movwf	sprintf@sp& (0+255),b
 19866  01481C  0E02               	movlw	high SetBaud@buf
 19867  01481E  0101               	movlb	1	; () banked
 19868  014820  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19869  014822  0E84               	movlw	low STR_23
 19870  014824  0101               	movlb	1	; () banked
 19871  014826  6F94               	movwf	sprintf@f& (0+255),b
 19872  014828  0EF0               	movlw	high STR_23
 19873  01482A  0101               	movlb	1	; () banked
 19874  01482C  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19875  01482E  C1BE  F196         	movff	SetBaud@Baud,?_sprintf+4
 19876  014832  C1BF  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19877  014836  C1C0  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19878  01483A  C1C1  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 19879  01483E  EC87  F093         	call	_sprintf	;wreg free
 19880                           
 19881                           ;UART.c: 327: break;
 19882  014842  D069               	goto	l12969
 19883  014844                     l12957:
 19884                           
 19885                           ;UART.c: 329: sprintf(buf,"System Baud will be set to %lu with Even parity bit\r\n",Baud
      +                          );
 19886  014844  0E00               	movlw	low SetBaud@buf
 19887  014846  0101               	movlb	1	; () banked
 19888  014848  6F92               	movwf	sprintf@sp& (0+255),b
 19889  01484A  0E02               	movlw	high SetBaud@buf
 19890  01484C  0101               	movlb	1	; () banked
 19891  01484E  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19892  014850  0E18               	movlw	low STR_24
 19893  014852  0101               	movlb	1	; () banked
 19894  014854  6F94               	movwf	sprintf@f& (0+255),b
 19895  014856  0EF0               	movlw	high STR_24
 19896  014858  0101               	movlb	1	; () banked
 19897  01485A  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19898  01485C  C1BE  F196         	movff	SetBaud@Baud,?_sprintf+4
 19899  014860  C1BF  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19900  014864  C1C0  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19901  014868  C1C1  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 19902  01486C  EC87  F093         	call	_sprintf	;wreg free
 19903                           
 19904                           ;UART.c: 330: break;
 19905  014870  D052               	goto	l12969
 19906  014872                     l12959:
 19907                           
 19908                           ;UART.c: 332: sprintf(buf,"System Baud will be set to %lu with Mark bit\r\n",Baud);
 19909  014872  0E00               	movlw	low SetBaud@buf
 19910  014874  0101               	movlb	1	; () banked
 19911  014876  6F92               	movwf	sprintf@sp& (0+255),b
 19912  014878  0E02               	movlw	high SetBaud@buf
 19913  01487A  0101               	movlb	1	; () banked
 19914  01487C  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19915  01487E  0EB0               	movlw	low STR_25
 19916  014880  0101               	movlb	1	; () banked
 19917  014882  6F94               	movwf	sprintf@f& (0+255),b
 19918  014884  0EF1               	movlw	high STR_25
 19919  014886  0101               	movlb	1	; () banked
 19920  014888  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19921  01488A  C1BE  F196         	movff	SetBaud@Baud,?_sprintf+4
 19922  01488E  C1BF  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19923  014892  C1C0  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19924  014896  C1C1  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 19925  01489A  EC87  F093         	call	_sprintf	;wreg free
 19926                           
 19927                           ;UART.c: 333: break;
 19928  01489E  D03B               	goto	l12969
 19929  0148A0                     l12961:
 19930                           
 19931                           ;UART.c: 335: sprintf(buf,"System Baud will be set to %lu with Space bit\r\n",Baud);
 19932  0148A0  0E00               	movlw	low SetBaud@buf
 19933  0148A2  0101               	movlb	1	; () banked
 19934  0148A4  6F92               	movwf	sprintf@sp& (0+255),b
 19935  0148A6  0E02               	movlw	high SetBaud@buf
 19936  0148A8  0101               	movlb	1	; () banked
 19937  0148AA  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19938  0148AC  0E80               	movlw	low STR_26
 19939  0148AE  0101               	movlb	1	; () banked
 19940  0148B0  6F94               	movwf	sprintf@f& (0+255),b
 19941  0148B2  0EF1               	movlw	high STR_26
 19942  0148B4  0101               	movlb	1	; () banked
 19943  0148B6  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19944  0148B8  C1BE  F196         	movff	SetBaud@Baud,?_sprintf+4
 19945  0148BC  C1BF  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19946  0148C0  C1C0  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19947  0148C4  C1C1  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 19948  0148C8  EC87  F093         	call	_sprintf	;wreg free
 19949                           
 19950                           ;UART.c: 337: }
 19951                           
 19952                           ;UART.c: 336: break;
 19953  0148CC  D024               	goto	l12969
 19954  0148CE                     l12965:
 19955  0148CE  0101               	movlb	1	; () banked
 19956  0148D0  51C2               	movf	SetBaud@Parity& (0+255),w,b
 19957                           
 19958                           ; Switch size 1, requested type "space"
 19959                           ; Number of cases is 3, Range of values is 1 to 3
 19960                           ; switch strategies available:
 19961                           ; Name         Instructions Cycles
 19962                           ; simple_byte           10     6 (average)
 19963                           ;	Chosen strategy is simple_byte
 19964  0148D2  0A01               	xorlw	1	; case 1
 19965  0148D4  B4D8               	btfsc	status,2,c
 19966  0148D6  D79F               	goto	l12955
 19967  0148D8  0A03               	xorlw	3	; case 2
 19968  0148DA  B4D8               	btfsc	status,2,c
 19969  0148DC  D7B3               	goto	l12957
 19970  0148DE  0A01               	xorlw	1	; case 3
 19971  0148E0  B4D8               	btfsc	status,2,c
 19972  0148E2  D7C7               	goto	l12959
 19973  0148E4  D7DD               	goto	l12961
 19974                           
 19975                           ; BSR set to: 1
 19976                           ;UART.c: 338: }
 19977  0148E6  D017               	goto	l12969
 19978  0148E8                     l12967:
 19979                           
 19980                           ; BSR set to: 1
 19981                           ;UART.c: 339: else
 19982                           ;UART.c: 340: {
 19983                           ;UART.c: 341: sprintf(buf,"System Baud will be set to %lu with no parity bit\r\n",Baud);
 19984  0148E8  0E00               	movlw	low SetBaud@buf
 19985  0148EA  0101               	movlb	1	; () banked
 19986  0148EC  6F92               	movwf	sprintf@sp& (0+255),b
 19987  0148EE  0E02               	movlw	high SetBaud@buf
 19988  0148F0  0101               	movlb	1	; () banked
 19989  0148F2  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19990  0148F4  0EB9               	movlw	low STR_27
 19991  0148F6  0101               	movlb	1	; () banked
 19992  0148F8  6F94               	movwf	sprintf@f& (0+255),b
 19993  0148FA  0EF0               	movlw	high STR_27
 19994  0148FC  0101               	movlb	1	; () banked
 19995  0148FE  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19996  014900  C1BE  F196         	movff	SetBaud@Baud,?_sprintf+4
 19997  014904  C1BF  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19998  014908  C1C0  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19999  01490C  C1C1  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 20000  014910  EC87  F093         	call	_sprintf	;wreg free
 20001  014914  D000               	goto	l12969
 20002  014916                     l12969:
 20003                           
 20004                           ;UART.c: 342: }
 20005                           ;UART.c: 344: status = SetMemoryBaud(Baud);
 20006  014916  C1BE  F19F         	movff	SetBaud@Baud,SetMemoryBaud@Baud
 20007  01491A  C1BF  F1A0         	movff	SetBaud@Baud+1,SetMemoryBaud@Baud+1
 20008  01491E  C1C0  F1A1         	movff	SetBaud@Baud+2,SetMemoryBaud@Baud+2
 20009  014922  C1C1  F1A2         	movff	SetBaud@Baud+3,SetMemoryBaud@Baud+3
 20010  014926  ECB0  F0AF         	call	_SetMemoryBaud	;wreg free
 20011  01492A  0102               	movlb	2	; () banked
 20012  01492C  6F32               	movwf	SetBaud@status& (0+255),b
 20013                           
 20014                           ; BSR set to: 2
 20015                           ;UART.c: 345: if(status)
 20016  01492E  0102               	movlb	2	; () banked
 20017  014930  5132               	movf	SetBaud@status& (0+255),w,b
 20018  014932  0102               	movlb	2	; () banked
 20019  014934  B4D8               	btfsc	status,2,c
 20020  014936  D006               	goto	l557
 20021                           
 20022                           ; BSR set to: 2
 20023                           ;UART.c: 346: {
 20024                           ;UART.c: 348: status = SetMemoryParity(Parity);
 20025  014938  0101               	movlb	1	; () banked
 20026  01493A  51C2               	movf	SetBaud@Parity& (0+255),w,b
 20027  01493C  ECF3  F0BD         	call	_SetMemoryParity
 20028  014940  0102               	movlb	2	; () banked
 20029  014942  6F32               	movwf	SetBaud@status& (0+255),b
 20030  014944                     l557:
 20031                           
 20032                           ; BSR set to: 2
 20033                           ;UART.c: 349: }
 20034                           ;UART.c: 350: InitUART(Baud, Parity);
 20035  014944  C1BE  F189         	movff	SetBaud@Baud,InitUART@Baud
 20036  014948  C1BF  F18A         	movff	SetBaud@Baud+1,InitUART@Baud+1
 20037  01494C  C1C0  F18B         	movff	SetBaud@Baud+2,InitUART@Baud+2
 20038  014950  C1C1  F18C         	movff	SetBaud@Baud+3,InitUART@Baud+3
 20039  014954  C1C2  F18D         	movff	SetBaud@Parity,InitUART@parity
 20040  014958  EC08  F0A8         	call	_InitUART	;wreg free
 20041                           
 20042                           ;UART.c: 351: UARTstring("\r\n");
 20043  01495C  0ECE               	movlw	low (STR_282+19)
 20044  01495E  0101               	movlb	1	; () banked
 20045  014960  6F87               	movwf	UARTstring@data& (0+255),b
 20046  014962  0EF6               	movlw	high (STR_282+19)
 20047  014964  0101               	movlb	1	; () banked
 20048  014966  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 20049  014968  ECEB  F0B4         	call	_UARTstring	;wreg free
 20050                           
 20051                           ;UART.c: 352: delayUS(10000);
 20052  01496C  0E10               	movlw	16
 20053  01496E  0101               	movlb	1	; () banked
 20054  014970  6F7C               	movwf	delayUS@US& (0+255),b
 20055  014972  0E27               	movlw	39
 20056  014974  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 20057  014976  0E00               	movlw	0
 20058  014978  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 20059  01497A  0E00               	movlw	0
 20060  01497C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 20061  01497E  EC38  F0BA         	call	_delayUS	;wreg free
 20062                           
 20063                           ;UART.c: 353: if(!status)
 20064  014982  0102               	movlb	2	; () banked
 20065  014984  5132               	movf	SetBaud@status& (0+255),w,b
 20066  014986  0102               	movlb	2	; () banked
 20067  014988  A4D8               	btfss	status,2,c
 20068  01498A  D014               	goto	l12985
 20069                           
 20070                           ; BSR set to: 2
 20071                           ;UART.c: 354: {
 20072                           ;UART.c: 355: UARTstring("System Program Fail\r\n");
 20073  01498C  0EFD               	movlw	low STR_29
 20074  01498E  0101               	movlb	1	; () banked
 20075  014990  6F87               	movwf	UARTstring@data& (0+255),b
 20076  014992  0EF6               	movlw	high STR_29
 20077  014994  0101               	movlb	1	; () banked
 20078  014996  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 20079  014998  ECEB  F0B4         	call	_UARTstring	;wreg free
 20080                           
 20081                           ;UART.c: 356: delayUS(10000);
 20082  01499C  0E10               	movlw	16
 20083  01499E  0101               	movlb	1	; () banked
 20084  0149A0  6F7C               	movwf	delayUS@US& (0+255),b
 20085  0149A2  0E27               	movlw	39
 20086  0149A4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 20087  0149A6  0E00               	movlw	0
 20088  0149A8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 20089  0149AA  0E00               	movlw	0
 20090  0149AC  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 20091  0149AE  EC38  F0BA         	call	_delayUS	;wreg free
 20092  0149B2  D000               	goto	l12985
 20093  0149B4                     l12985:
 20094                           
 20095                           ;UART.c: 357: }
 20096                           ;UART.c: 358: sprintf(buf,"System Baud is %lu",Baud);
 20097  0149B4  0E00               	movlw	low SetBaud@buf
 20098  0149B6  0101               	movlb	1	; () banked
 20099  0149B8  6F92               	movwf	sprintf@sp& (0+255),b
 20100  0149BA  0E02               	movlw	high SetBaud@buf
 20101  0149BC  0101               	movlb	1	; () banked
 20102  0149BE  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 20103  0149C0  0E00               	movlw	low STR_30
 20104  0149C2  0101               	movlb	1	; () banked
 20105  0149C4  6F94               	movwf	sprintf@f& (0+255),b
 20106  0149C6  0EF8               	movlw	high STR_30
 20107  0149C8  0101               	movlb	1	; () banked
 20108  0149CA  6F95               	movwf	(sprintf@f+1)& (0+255),b
 20109  0149CC  C1BE  F196         	movff	SetBaud@Baud,?_sprintf+4
 20110  0149D0  C1BF  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 20111  0149D4  C1C0  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 20112  0149D8  C1C1  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 20113  0149DC  EC87  F093         	call	_sprintf	;wreg free
 20114                           
 20115                           ;UART.c: 359: UARTstring(buf);
 20116  0149E0  0E00               	movlw	low SetBaud@buf
 20117  0149E2  0101               	movlb	1	; () banked
 20118  0149E4  6F87               	movwf	UARTstring@data& (0+255),b
 20119  0149E6  0E02               	movlw	high SetBaud@buf
 20120  0149E8  0101               	movlb	1	; () banked
 20121  0149EA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 20122  0149EC  ECEB  F0B4         	call	_UARTstring	;wreg free
 20123                           
 20124                           ;UART.c: 360: if(Parity)
 20125  0149F0  0101               	movlb	1	; () banked
 20126  0149F2  51C2               	movf	SetBaud@Parity& (0+255),w,b
 20127  0149F4  0101               	movlb	1	; () banked
 20128  0149F6  A4D8               	btfss	status,2,c
 20129  0149F8  D026               	goto	l13003
 20130  0149FA  D032               	goto	l13005
 20131                           
 20132                           ; BSR set to: 1
 20133                           ;UART.c: 361: {
 20134                           ;UART.c: 362: switch (Parity)
 20135  0149FC  D024               	goto	l13003
 20136  0149FE                     l12993:
 20137                           
 20138                           ; BSR set to: 1
 20139                           ;UART.c: 365: UARTstringWAIT(" with Odd parity bit\r\n");
 20140  0149FE  0EA2               	movlw	low (STR_23+30)
 20141  014A00  0101               	movlb	1	; () banked
 20142  014A02  6F87               	movwf	UARTstringWAIT@data& (0+255),b
 20143  014A04  0EF0               	movlw	high (STR_23+30)
 20144  014A06  0101               	movlb	1	; () banked
 20145  014A08  6F88               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 20146  014A0A  EC5A  F0B9         	call	_UARTstringWAIT	;wreg free
 20147                           
 20148                           ;UART.c: 366: break;
 20149  014A0E  D031               	goto	l13007
 20150  014A10                     l12995:
 20151                           
 20152                           ;UART.c: 368: UARTstringWAIT(" with Even parity bit\r\n");
 20153  014A10  0E36               	movlw	low (STR_24+30)
 20154  014A12  0101               	movlb	1	; () banked
 20155  014A14  6F87               	movwf	UARTstringWAIT@data& (0+255),b
 20156  014A16  0EF0               	movlw	high (STR_24+30)
 20157  014A18  0101               	movlb	1	; () banked
 20158  014A1A  6F88               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 20159  014A1C  EC5A  F0B9         	call	_UARTstringWAIT	;wreg free
 20160                           
 20161                           ;UART.c: 369: break;
 20162  014A20  D028               	goto	l13007
 20163  014A22                     l12997:
 20164                           
 20165                           ;UART.c: 371: UARTstringWAIT(" with Mark bit\r\n");
 20166  014A22  0ECE               	movlw	low (STR_25+30)
 20167  014A24  0101               	movlb	1	; () banked
 20168  014A26  6F87               	movwf	UARTstringWAIT@data& (0+255),b
 20169  014A28  0EF1               	movlw	high (STR_25+30)
 20170  014A2A  0101               	movlb	1	; () banked
 20171  014A2C  6F88               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 20172  014A2E  EC5A  F0B9         	call	_UARTstringWAIT	;wreg free
 20173                           
 20174                           ;UART.c: 372: break;
 20175  014A32  D01F               	goto	l13007
 20176  014A34                     l12999:
 20177                           
 20178                           ;UART.c: 374: UARTstringWAIT(" with Space bit\r\n");
 20179  014A34  0E9E               	movlw	low (STR_26+30)
 20180  014A36  0101               	movlb	1	; () banked
 20181  014A38  6F87               	movwf	UARTstringWAIT@data& (0+255),b
 20182  014A3A  0EF1               	movlw	high (STR_26+30)
 20183  014A3C  0101               	movlb	1	; () banked
 20184  014A3E  6F88               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 20185  014A40  EC5A  F0B9         	call	_UARTstringWAIT	;wreg free
 20186                           
 20187                           ;UART.c: 376: }
 20188                           
 20189                           ;UART.c: 375: break;
 20190  014A44  D016               	goto	l13007
 20191  014A46                     l13003:
 20192  014A46  0101               	movlb	1	; () banked
 20193  014A48  51C2               	movf	SetBaud@Parity& (0+255),w,b
 20194                           
 20195                           ; Switch size 1, requested type "space"
 20196                           ; Number of cases is 3, Range of values is 1 to 3
 20197                           ; switch strategies available:
 20198                           ; Name         Instructions Cycles
 20199                           ; simple_byte           10     6 (average)
 20200                           ;	Chosen strategy is simple_byte
 20201  014A4A  0A01               	xorlw	1	; case 1
 20202  014A4C  B4D8               	btfsc	status,2,c
 20203  014A4E  D7D7               	goto	l12993
 20204  014A50  0A03               	xorlw	3	; case 2
 20205  014A52  B4D8               	btfsc	status,2,c
 20206  014A54  D7DD               	goto	l12995
 20207  014A56  0A01               	xorlw	1	; case 3
 20208  014A58  B4D8               	btfsc	status,2,c
 20209  014A5A  D7E3               	goto	l12997
 20210  014A5C  D7EB               	goto	l12999
 20211                           
 20212                           ; BSR set to: 1
 20213                           ;UART.c: 377: }
 20214  014A5E  D009               	goto	l13007
 20215  014A60                     l13005:
 20216                           
 20217                           ; BSR set to: 1
 20218                           ;UART.c: 378: else
 20219                           ;UART.c: 379: {
 20220                           ;UART.c: 380: UARTstring(" with no parity bit\r\n");
 20221  014A60  0ED7               	movlw	low (STR_27+30)
 20222  014A62  0101               	movlb	1	; () banked
 20223  014A64  6F87               	movwf	UARTstring@data& (0+255),b
 20224  014A66  0EF0               	movlw	high (STR_27+30)
 20225  014A68  0101               	movlb	1	; () banked
 20226  014A6A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 20227  014A6C  ECEB  F0B4         	call	_UARTstring	;wreg free
 20228  014A70  D000               	goto	l13007
 20229  014A72                     l13007:
 20230                           
 20231                           ;UART.c: 381: }
 20232                           ;UART.c: 383: delayUS(10000);
 20233  014A72  0E10               	movlw	16
 20234  014A74  0101               	movlb	1	; () banked
 20235  014A76  6F7C               	movwf	delayUS@US& (0+255),b
 20236  014A78  0E27               	movlw	39
 20237  014A7A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 20238  014A7C  0E00               	movlw	0
 20239  014A7E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 20240  014A80  0E00               	movlw	0
 20241  014A82  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 20242  014A84  EC38  F0BA         	call	_delayUS	;wreg free
 20243  014A88  0012               	return		;funcret
 20244  014A8A                     __end_of_SetBaud:
 20245                           	opt stack 0
 20246                           tblptru	equ	0xFF8
 20247                           tblptrh	equ	0xFF7
 20248                           tblptrl	equ	0xFF6
 20249                           tablat	equ	0xFF5
 20250                           prodh	equ	0xFF4
 20251                           prodl	equ	0xFF3
 20252                           intcon	equ	0xFF2
 20253                           intcon2	equ	0xFF1
 20254                           postinc0	equ	0xFEE
 20255                           plusw0	equ	0xFEB
 20256                           wreg	equ	0xFE8
 20257                           indf1	equ	0xFE7
 20258                           postdec1	equ	0xFE5
 20259                           fsr1h	equ	0xFE2
 20260                           fsr1l	equ	0xFE1
 20261                           indf2	equ	0xFDF
 20262                           postinc2	equ	0xFDE
 20263                           postdec2	equ	0xFDD
 20264                           plusw2	equ	0xFDB
 20265                           fsr2h	equ	0xFDA
 20266                           fsr2l	equ	0xFD9
 20267                           status	equ	0xFD8
 20268                           
 20269 ;; *************** function _sprintf *****************
 20270 ;; Defined at:
 20271 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 20272 ;; Parameters:    Size  Location     Type
 20273 ;;  sp              2   36[BANK1 ] PTR unsigned char 
 20274 ;;		 -> Command@buf(200), SetBaud@buf(50), 
 20275 ;;  f               2   38[BANK1 ] PTR const unsigned char 
 20276 ;;		 -> STR_323(32), STR_322(35), STR_321(35), STR_300(10), 
 20277 ;;		 -> STR_287(23), STR_286(23), STR_227(23), STR_226(23), 
 20278 ;;		 -> STR_222(16), STR_221(36), STR_209(13), STR_208(20), 
 20279 ;;		 -> STR_207(17), STR_206(29), STR_190(15), STR_189(32), 
 20280 ;;		 -> STR_171(15), STR_170(22), STR_30(19), STR_27(52), 
 20281 ;;		 -> STR_26(48), STR_25(47), STR_24(54), STR_23(53), 
 20282 ;; Auto vars:     Size  Location     Type
 20283 ;;  idx             1   56[BANK1 ] unsigned char 
 20284 ;;  val             4   69[BANK1 ] unsigned long 
 20285 ;;  tmpval          4    0        struct .
 20286 ;;  flag            2   78[BANK1 ] unsigned short 
 20287 ;;  width           2   75[BANK1 ] int 
 20288 ;;  prec            2   73[BANK1 ] int 
 20289 ;;  ap              2   67[BANK1 ] PTR void [1]
 20290 ;;		 -> ?_sprintf(2), 
 20291 ;;  len             2   65[BANK1 ] unsigned int 
 20292 ;;  cp              2   57[BANK1 ] PTR const unsigned char 
 20293 ;;		 -> sprintf@c(1), 
 20294 ;;  c               1   77[BANK1 ] char 
 20295 ;; Return value:  Size  Location     Type
 20296 ;;                  2   36[BANK1 ] int 
 20297 ;; Registers used:
 20298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20299 ;; Tracked objects:
 20300 ;;		On entry : 0/0
 20301 ;;		On exit  : 0/0
 20302 ;;		Unchanged: 0/0
 20303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20304 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 20305 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
 20306 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 20307 ;;      Totals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0
 20308 ;;Total ram usage:       44 bytes
 20309 ;; Hardware stack levels used:    1
 20310 ;; Hardware stack levels required when called:    7
 20311 ;; This function calls:
 20312 ;;		___lldiv
 20313 ;;		___llmod
 20314 ;;		___wmul
 20315 ;;		_isdigit
 20316 ;; This function is called by:
 20317 ;;		_SetBaud
 20318 ;;		_Command
 20319 ;;		_SprintDate
 20320 ;; This function uses a non-reentrant model
 20321 ;;
 20322                           
 20323                           	psect	text38
 20324  01270E                     __ptext38:
 20325                           	opt stack 0
 20326  01270E                     _sprintf:
 20327                           	opt stack 22
 20328                           
 20329                           ;doprnt.c: 494: va_list ap;
 20330                           ;doprnt.c: 499: signed char c;
 20331                           ;doprnt.c: 501: int width;
 20332                           ;doprnt.c: 504: int prec;
 20333                           ;doprnt.c: 508: unsigned short flag;
 20334                           ;doprnt.c: 523: union {
 20335                           ;doprnt.c: 524: unsigned long vd;
 20336                           ;doprnt.c: 525: double integ;
 20337                           ;doprnt.c: 526: } tmpval;
 20338                           ;doprnt.c: 528: unsigned long val;
 20339                           ;doprnt.c: 529: unsigned len;
 20340                           ;doprnt.c: 530: const char * cp;
 20341                           ;doprnt.c: 533: *ap = __va_start();
 20342                           
 20343                           ;incstack = 0
 20344  01270E  0E96               	movlw	low (?_sprintf+4)
 20345  012710  0101               	movlb	1	; () banked
 20346  012712  6FB1               	movwf	sprintf@ap& (0+255),b
 20347  012714  0E01               	movlw	high (?_sprintf+4)
 20348  012716  0101               	movlb	1	; () banked
 20349  012718  6FB2               	movwf	(sprintf@ap+1)& (0+255),b
 20350                           
 20351                           ;doprnt.c: 536: while(c = *f++) {
 20352  01271A  EFBB  F099         	goto	l12157
 20353  01271E                     l11805:
 20354                           
 20355                           ; BSR set to: 1
 20356                           ;doprnt.c: 538: if(c != '%')
 20357  01271E  0E25               	movlw	37
 20358  012720  0101               	movlb	1	; () banked
 20359  012722  19BB               	xorwf	sprintf@c& (0+255),w,b
 20360  012724  B4D8               	btfsc	status,2,c
 20361  012726  D00B               	goto	l11811
 20362                           
 20363                           ; BSR set to: 1
 20364                           ;doprnt.c: 540: {
 20365                           ;doprnt.c: 541: ((*sp++ = (c)));
 20366  012728  C192  FFD9         	movff	sprintf@sp,fsr2l
 20367  01272C  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 20368  012730  C1BB  FFDF         	movff	sprintf@c,indf2
 20369                           
 20370                           ; BSR set to: 1
 20371  012734  0101               	movlb	1	; () banked
 20372  012736  4B92               	infsnz	sprintf@sp& (0+255),f,b
 20373  012738  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 20374                           
 20375                           ;doprnt.c: 542: continue;
 20376  01273A  EFBB  F099         	goto	l12157
 20377  01273E                     l11811:
 20378                           
 20379                           ; BSR set to: 1
 20380                           ;doprnt.c: 543: }
 20381                           ;doprnt.c: 546: width = 0;
 20382  01273E  0E00               	movlw	0
 20383  012740  0101               	movlb	1	; () banked
 20384  012742  6FBA               	movwf	(sprintf@width+1)& (0+255),b
 20385  012744  0E00               	movlw	0
 20386  012746  6FB9               	movwf	sprintf@width& (0+255),b
 20387                           
 20388                           ;doprnt.c: 548: flag = 0;
 20389  012748  0E00               	movlw	0
 20390  01274A  0101               	movlb	1	; () banked
 20391  01274C  6FBD               	movwf	(sprintf@flag+1)& (0+255),b
 20392  01274E  0E00               	movlw	0
 20393  012750  6FBC               	movwf	sprintf@flag& (0+255),b
 20394                           
 20395                           ; BSR set to: 1
 20396                           ;doprnt.c: 551: switch(*f) {
 20397                           
 20398                           ;doprnt.c: 550: for(;;) {
 20399  012752  D010               	goto	l11823
 20400  012754                     l11813:
 20401                           
 20402                           ;doprnt.c: 554: flag |= 0x08;
 20403  012754  0101               	movlb	1	; () banked
 20404  012756  87BC               	bsf	sprintf@flag& (0+255),3,b
 20405  012758  D008               	goto	L16
 20406  01275A                     l11815:
 20407                           
 20408                           ;doprnt.c: 561: flag |= 0x01;
 20409  01275A  0101               	movlb	1	; () banked
 20410  01275C  81BC               	bsf	sprintf@flag& (0+255),0,b
 20411  01275E  D005               	goto	L16
 20412  012760                     l11817:
 20413                           
 20414                           ;doprnt.c: 574: flag |= 0x800;
 20415  012760  0101               	movlb	1	; () banked
 20416  012762  87BD               	bsf	(sprintf@flag+1)& (0+255),3,b
 20417  012764  D002               	goto	L16
 20418  012766                     l11819:
 20419                           
 20420                           ;doprnt.c: 580: flag |= 0x04;
 20421  012766  0101               	movlb	1	; () banked
 20422  012768  85BC               	bsf	sprintf@flag& (0+255),2,b
 20423  01276A                     L16:
 20424                           
 20425                           ;doprnt.c: 581: f++;
 20426  01276A  0101               	movlb	1	; () banked
 20427  01276C  4B94               	infsnz	sprintf@f& (0+255),f,b
 20428  01276E  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20429                           
 20430                           ;doprnt.c: 582: continue;
 20431  012770  D001               	goto	l11823
 20432                           
 20433                           ; BSR set to: 1
 20434                           ;doprnt.c: 584: }
 20435  012772  D016               	goto	l1759
 20436  012774                     l11823:
 20437  012774  C194  FFF6         	movff	sprintf@f,tblptrl
 20438  012778  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20439  01277C                     	if	0	;tblptru may be non-zero
 20440  01277C                     	endif
 20441  01277C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20442  01277C  0E00               	movlw	low (__mediumconst shr (0+16))
 20443  01277E  6EF8               	movwf	tblptru,c
 20444  012780                     	endif
 20445  012780  0008               	tblrd		*
 20446  012782  50F5               	movf	tablat,w,c
 20447                           
 20448                           ; Switch size 1, requested type "space"
 20449                           ; Number of cases is 4, Range of values is 32 to 48
 20450                           ; switch strategies available:
 20451                           ; Name         Instructions Cycles
 20452                           ; simple_byte           13     7 (average)
 20453                           ;	Chosen strategy is simple_byte
 20454  012784  0A20               	xorlw	32	; case 32
 20455  012786  B4D8               	btfsc	status,2,c
 20456  012788  D7E8               	goto	l11815
 20457  01278A  0A03               	xorlw	3	; case 35
 20458  01278C  B4D8               	btfsc	status,2,c
 20459  01278E  D7E8               	goto	l11817
 20460  012790  0A0E               	xorlw	14	; case 45
 20461  012792  B4D8               	btfsc	status,2,c
 20462  012794  D7DF               	goto	l11813
 20463  012796  0A1D               	xorlw	29	; case 48
 20464  012798  B4D8               	btfsc	status,2,c
 20465  01279A  D7E5               	goto	l11819
 20466                           
 20467                           ;doprnt.c: 585: break;
 20468  01279C  D001               	goto	l1759
 20469                           
 20470                           ;doprnt.c: 586: }
 20471  01279E  D7EA               	goto	l11823
 20472  0127A0                     l1759:
 20473                           
 20474                           ;doprnt.c: 593: if(flag & 0x08)
 20475  0127A0  0101               	movlb	1	; () banked
 20476  0127A2  A7BC               	btfss	sprintf@flag& (0+255),3,b
 20477  0127A4  D003               	goto	l11827
 20478                           
 20479                           ; BSR set to: 1
 20480                           ;doprnt.c: 594: flag &= ~0x04;
 20481  0127A6  0101               	movlb	1	; () banked
 20482  0127A8  95BC               	bcf	sprintf@flag& (0+255),2,b
 20483  0127AA  D000               	goto	l11827
 20484  0127AC                     l11827:
 20485                           
 20486                           ; BSR set to: 1
 20487                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 20488  0127AC  C194  FFF6         	movff	sprintf@f,tblptrl
 20489  0127B0  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20490  0127B4                     	if	0	;tblptru may be non-zero
 20491  0127B4                     	endif
 20492  0127B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20493  0127B4  0E00               	movlw	low (__mediumconst shr (0+16))
 20494  0127B6  6EF8               	movwf	tblptru,c
 20495  0127B8                     	endif
 20496  0127B8  0008               	tblrd		*
 20497  0127BA  50F5               	movf	tablat,w,c
 20498  0127BC  EC89  F0BE         	call	_isdigit
 20499  0127C0  A0D8               	btfss	status,0,c
 20500  0127C2  D047               	goto	l11839
 20501                           
 20502                           ;doprnt.c: 598: width = 0;
 20503  0127C4  0E00               	movlw	0
 20504  0127C6  0101               	movlb	1	; () banked
 20505  0127C8  6FBA               	movwf	(sprintf@width+1)& (0+255),b
 20506  0127CA  0E00               	movlw	0
 20507  0127CC  6FB9               	movwf	sprintf@width& (0+255),b
 20508  0127CE  D000               	goto	l11831
 20509  0127D0                     l11831:
 20510                           
 20511                           ;doprnt.c: 600: width *= 10;
 20512  0127D0  C1B9  F17C         	movff	sprintf@width,___wmul@multiplier
 20513  0127D4  C1BA  F17D         	movff	sprintf@width+1,___wmul@multiplier+1
 20514  0127D8  0E00               	movlw	0
 20515  0127DA  0101               	movlb	1	; () banked
 20516  0127DC  6F7F               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20517  0127DE  0E0A               	movlw	10
 20518  0127E0  6F7E               	movwf	___wmul@multiplicand& (0+255),b
 20519  0127E2  ECBC  F0BD         	call	___wmul	;wreg free
 20520  0127E6  C17C  F1B9         	movff	?___wmul,sprintf@width
 20521  0127EA  C17D  F1BA         	movff	?___wmul+1,sprintf@width+1
 20522                           
 20523                           ;doprnt.c: 601: width += *f++ - '0';
 20524  0127EE  0ED0               	movlw	208
 20525  0127F0  0101               	movlb	1	; () banked
 20526  0127F2  6FA2               	movwf	??_sprintf& (0+255),b
 20527  0127F4  0EFF               	movlw	255
 20528  0127F6  0101               	movlb	1	; () banked
 20529  0127F8  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 20530  0127FA  C194  FFF6         	movff	sprintf@f,tblptrl
 20531  0127FE  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20532  012802                     	if	0	;tblptru may be non-zero
 20533  012802                     	endif
 20534  012802                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20535  012802  0E00               	movlw	low (__mediumconst shr (0+16))
 20536  012804  6EF8               	movwf	tblptru,c
 20537  012806                     	endif
 20538  012806  0008               	tblrd		*
 20539  012808  50F5               	movf	tablat,w,c
 20540  01280A  0101               	movlb	1	; () banked
 20541  01280C  6FA4               	movwf	(??_sprintf+2)& (0+255),b
 20542  01280E  6BA5               	clrf	(??_sprintf+3)& (0+255),b
 20543  012810  0101               	movlb	1	; () banked
 20544  012812  51A2               	movf	??_sprintf& (0+255),w,b
 20545  012814  0101               	movlb	1	; () banked
 20546  012816  27A4               	addwf	(??_sprintf+2)& (0+255),f,b
 20547  012818  0101               	movlb	1	; () banked
 20548  01281A  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 20549  01281C  0101               	movlb	1	; () banked
 20550  01281E  23A5               	addwfc	(??_sprintf+3)& (0+255),f,b
 20551  012820  0101               	movlb	1	; () banked
 20552  012822  51A4               	movf	(??_sprintf+2)& (0+255),w,b
 20553  012824  0101               	movlb	1	; () banked
 20554  012826  27B9               	addwf	sprintf@width& (0+255),f,b
 20555  012828  0101               	movlb	1	; () banked
 20556  01282A  51A5               	movf	(??_sprintf+3)& (0+255),w,b
 20557  01282C  0101               	movlb	1	; () banked
 20558  01282E  23BA               	addwfc	(sprintf@width+1)& (0+255),f,b
 20559                           
 20560                           ; BSR set to: 1
 20561  012830  0101               	movlb	1	; () banked
 20562  012832  4B94               	infsnz	sprintf@f& (0+255),f,b
 20563  012834  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20564                           
 20565                           ; BSR set to: 1
 20566                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 20567  012836  C194  FFF6         	movff	sprintf@f,tblptrl
 20568  01283A  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20569  01283E                     	if	0	;tblptru may be non-zero
 20570  01283E                     	endif
 20571  01283E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20572  01283E  0E00               	movlw	low (__mediumconst shr (0+16))
 20573  012840  6EF8               	movwf	tblptru,c
 20574  012842                     	endif
 20575  012842  0008               	tblrd		*
 20576  012844  50F5               	movf	tablat,w,c
 20577  012846  EC89  F0BE         	call	_isdigit
 20578  01284A  A0D8               	btfss	status,0,c
 20579  01284C  D01E               	goto	l11847
 20580  01284E  D7C0               	goto	l11831
 20581                           
 20582                           ;doprnt.c: 604: } else if(*f == '*') {
 20583  012850  D01C               	goto	l11847
 20584  012852                     l11839:
 20585  012852  C194  FFF6         	movff	sprintf@f,tblptrl
 20586  012856  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20587  01285A                     	if	0	;tblptru may be non-zero
 20588  01285A                     	endif
 20589  01285A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20590  01285A  0E00               	movlw	low (__mediumconst shr (0+16))
 20591  01285C  6EF8               	movwf	tblptru,c
 20592  01285E                     	endif
 20593  01285E  0008               	tblrd		*
 20594  012860  50F5               	movf	tablat,w,c
 20595  012862  0A2A               	xorlw	42
 20596  012864  A4D8               	btfss	status,2,c
 20597  012866  D011               	goto	l11847
 20598                           
 20599                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 20600  012868  C1B1  FFD9         	movff	sprintf@ap,fsr2l
 20601  01286C  C1B2  FFDA         	movff	sprintf@ap+1,fsr2h
 20602  012870  CFDE F1B9          	movff	postinc2,sprintf@width
 20603  012874  CFDD F1BA          	movff	postdec2,sprintf@width+1
 20604  012878  0E02               	movlw	2
 20605  01287A  0101               	movlb	1	; () banked
 20606  01287C  27B1               	addwf	sprintf@ap& (0+255),f,b
 20607  01287E  0E00               	movlw	0
 20608  012880  23B2               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20609                           
 20610                           ; BSR set to: 1
 20611                           ;doprnt.c: 606: f++;
 20612  012882  0101               	movlb	1	; () banked
 20613  012884  4B94               	infsnz	sprintf@f& (0+255),f,b
 20614  012886  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20615                           
 20616                           ; BSR set to: 1
 20617  012888  D000               	goto	l11847
 20618  01288A                     l11847:
 20619                           
 20620                           ;doprnt.c: 608: }
 20621                           ;doprnt.c: 611: if(*f == '.') {
 20622  01288A  C194  FFF6         	movff	sprintf@f,tblptrl
 20623  01288E  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20624  012892                     	if	0	;tblptru may be non-zero
 20625  012892                     	endif
 20626  012892                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20627  012892  0E00               	movlw	low (__mediumconst shr (0+16))
 20628  012894  6EF8               	movwf	tblptru,c
 20629  012896                     	endif
 20630  012896  0008               	tblrd		*
 20631  012898  50F5               	movf	tablat,w,c
 20632  01289A  0A2E               	xorlw	46
 20633  01289C  A4D8               	btfss	status,2,c
 20634  01289E  D05B               	goto	l11867
 20635                           
 20636                           ;doprnt.c: 612: flag |= 0x4000;
 20637  0128A0  0101               	movlb	1	; () banked
 20638  0128A2  8DBD               	bsf	(sprintf@flag+1)& (0+255),6,b
 20639                           
 20640                           ;doprnt.c: 613: f++;
 20641  0128A4  0101               	movlb	1	; () banked
 20642  0128A6  4B94               	infsnz	sprintf@f& (0+255),f,b
 20643  0128A8  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20644                           
 20645                           ; BSR set to: 1
 20646                           ;doprnt.c: 615: if(*f == '*') {
 20647  0128AA  C194  FFF6         	movff	sprintf@f,tblptrl
 20648  0128AE  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20649  0128B2                     	if	0	;tblptru may be non-zero
 20650  0128B2                     	endif
 20651  0128B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20652  0128B2  0E00               	movlw	low (__mediumconst shr (0+16))
 20653  0128B4  6EF8               	movwf	tblptru,c
 20654  0128B6                     	endif
 20655  0128B6  0008               	tblrd		*
 20656  0128B8  50F5               	movf	tablat,w,c
 20657  0128BA  0A2A               	xorlw	42
 20658  0128BC  A4D8               	btfss	status,2,c
 20659  0128BE  D011               	goto	l11859
 20660                           
 20661                           ; BSR set to: 1
 20662                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 20663  0128C0  C1B1  FFD9         	movff	sprintf@ap,fsr2l
 20664  0128C4  C1B2  FFDA         	movff	sprintf@ap+1,fsr2h
 20665  0128C8  CFDE F1B7          	movff	postinc2,sprintf@prec
 20666  0128CC  CFDD F1B8          	movff	postdec2,sprintf@prec+1
 20667                           
 20668                           ; BSR set to: 1
 20669  0128D0  0E02               	movlw	2
 20670  0128D2  0101               	movlb	1	; () banked
 20671  0128D4  27B1               	addwf	sprintf@ap& (0+255),f,b
 20672  0128D6  0E00               	movlw	0
 20673  0128D8  23B2               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20674                           
 20675                           ; BSR set to: 1
 20676                           ;doprnt.c: 617: f++;
 20677  0128DA  0101               	movlb	1	; () banked
 20678  0128DC  4B94               	infsnz	sprintf@f& (0+255),f,b
 20679  0128DE  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20680                           
 20681                           ;doprnt.c: 618: } else
 20682  0128E0  D0EF               	goto	l11925
 20683  0128E2                     l11859:
 20684                           
 20685                           ; BSR set to: 1
 20686                           ;doprnt.c: 620: {
 20687                           ;doprnt.c: 621: prec = 0;
 20688  0128E2  0E00               	movlw	0
 20689  0128E4  0101               	movlb	1	; () banked
 20690  0128E6  6FB8               	movwf	(sprintf@prec+1)& (0+255),b
 20691  0128E8  0E00               	movlw	0
 20692  0128EA  6FB7               	movwf	sprintf@prec& (0+255),b
 20693                           
 20694                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 20695  0128EC  D026               	goto	l11865
 20696  0128EE                     l11861:
 20697                           
 20698                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 20699  0128EE  C1B7  F17C         	movff	sprintf@prec,___wmul@multiplier
 20700  0128F2  C1B8  F17D         	movff	sprintf@prec+1,___wmul@multiplier+1
 20701  0128F6  0E00               	movlw	0
 20702  0128F8  0101               	movlb	1	; () banked
 20703  0128FA  6F7F               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20704  0128FC  0E0A               	movlw	10
 20705  0128FE  6F7E               	movwf	___wmul@multiplicand& (0+255),b
 20706  012900  ECBC  F0BD         	call	___wmul	;wreg free
 20707  012904  C194  FFF6         	movff	sprintf@f,tblptrl
 20708  012908  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20709  01290C                     	if	0	;tblptru may be non-zero
 20710  01290C                     	endif
 20711  01290C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20712  01290C  0E00               	movlw	low (__mediumconst shr (0+16))
 20713  01290E  6EF8               	movwf	tblptru,c
 20714  012910                     	endif
 20715  012910  0008               	tblrd		*
 20716  012912  50F5               	movf	tablat,w,c
 20717  012914  0101               	movlb	1	; () banked
 20718  012916  277C               	addwf	?___wmul& (0+255),f,b
 20719  012918  0E00               	movlw	0
 20720  01291A  0101               	movlb	1	; () banked
 20721  01291C  237D               	addwfc	(?___wmul+1)& (0+255),f,b
 20722  01291E  0ED0               	movlw	208
 20723  012920  0101               	movlb	1	; () banked
 20724  012922  257C               	addwf	?___wmul& (0+255),w,b
 20725  012924  0101               	movlb	1	; () banked
 20726  012926  6FB7               	movwf	sprintf@prec& (0+255),b
 20727  012928  0EFF               	movlw	255
 20728  01292A  0101               	movlb	1	; () banked
 20729  01292C  217D               	addwfc	(?___wmul+1)& (0+255),w,b
 20730  01292E  0101               	movlb	1	; () banked
 20731  012930  6FB8               	movwf	(sprintf@prec+1)& (0+255),b
 20732                           
 20733                           ; BSR set to: 1
 20734  012932  0101               	movlb	1	; () banked
 20735  012934  4B94               	infsnz	sprintf@f& (0+255),f,b
 20736  012936  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20737  012938  D000               	goto	l11865
 20738  01293A                     l11865:
 20739                           
 20740                           ; BSR set to: 1
 20741  01293A  C194  FFF6         	movff	sprintf@f,tblptrl
 20742  01293E  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20743  012942                     	if	0	;tblptru may be non-zero
 20744  012942                     	endif
 20745  012942                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20746  012942  0E00               	movlw	low (__mediumconst shr (0+16))
 20747  012944  6EF8               	movwf	tblptru,c
 20748  012946                     	endif
 20749  012946  0008               	tblrd		*
 20750  012948  50F5               	movf	tablat,w,c
 20751  01294A  EC89  F0BE         	call	_isdigit
 20752  01294E  A0D8               	btfss	status,0,c
 20753  012950  D0B7               	goto	l11925
 20754  012952  D7CD               	goto	l11861
 20755                           
 20756                           ;doprnt.c: 624: }
 20757                           ;doprnt.c: 625: } else {
 20758  012954  D0B5               	goto	l11925
 20759  012956                     l11867:
 20760                           
 20761                           ;doprnt.c: 626: prec = 0;
 20762  012956  0E00               	movlw	0
 20763  012958  0101               	movlb	1	; () banked
 20764  01295A  6FB8               	movwf	(sprintf@prec+1)& (0+255),b
 20765  01295C  0E00               	movlw	0
 20766  01295E  6FB7               	movwf	sprintf@prec& (0+255),b
 20767                           
 20768                           ; BSR set to: 1
 20769                           ;doprnt.c: 635: switch(c = *f++) {
 20770                           
 20771                           ;doprnt.c: 630: }
 20772                           ;doprnt.c: 633: loop:
 20773                           
 20774                           ; BSR set to: 1
 20775  012960  D0AF               	goto	l11925
 20776                           
 20777                           ; BSR set to: 1
 20778                           ;doprnt.c: 638: goto alldone;
 20779                           
 20780                           ;doprnt.c: 637: case 0:
 20781  012962  EFCE  F099         	goto	l12159
 20782  012966                     l11869:
 20783                           
 20784                           ; BSR set to: 1
 20785                           ;doprnt.c: 643: flag |= 0x10;
 20786  012966  0101               	movlb	1	; () banked
 20787  012968  89BC               	bsf	sprintf@flag& (0+255),4,b
 20788                           
 20789                           ;doprnt.c: 644: goto loop;
 20790  01296A  D0AA               	goto	l11925
 20791  01296C                     l11871:
 20792                           
 20793                           ; BSR set to: 1
 20794                           ;doprnt.c: 691: flag |= 0x40;
 20795  01296C  0101               	movlb	1	; () banked
 20796  01296E  8DBC               	bsf	sprintf@flag& (0+255),6,b
 20797                           
 20798                           ; BSR set to: 1
 20799                           ;doprnt.c: 698: case 'i':
 20800                           ;doprnt.c: 699: break;
 20801                           
 20802                           ; BSR set to: 1
 20803                           
 20804                           ;doprnt.c: 697: case 'd':
 20805                           
 20806                           ;doprnt.c: 693: break;
 20807  012970  D0D2               	goto	l11927
 20808  012972                     l11873:
 20809                           
 20810                           ; BSR set to: 1
 20811                           ;doprnt.c: 714: flag |= 0x20;
 20812  012972  0101               	movlb	1	; () banked
 20813  012974  8BBC               	bsf	sprintf@flag& (0+255),5,b
 20814  012976                     l1783:
 20815                           
 20816                           ; BSR set to: 1
 20817                           ;doprnt.c: 721: flag |= 0x80;
 20818  012976  0101               	movlb	1	; () banked
 20819  012978  8FBC               	bsf	sprintf@flag& (0+255),7,b
 20820                           
 20821                           ;doprnt.c: 723: break;
 20822  01297A  D0CD               	goto	l11927
 20823  01297C                     l11875:
 20824                           
 20825                           ; BSR set to: 1
 20826                           ;doprnt.c: 753: if(prec && prec < len)
 20827  01297C  0101               	movlb	1	; () banked
 20828  01297E  51B7               	movf	sprintf@prec& (0+255),w,b
 20829  012980  0101               	movlb	1	; () banked
 20830  012982  11B8               	iorwf	(sprintf@prec+1)& (0+255),w,b
 20831  012984  B4D8               	btfsc	status,2,c
 20832  012986  D00F               	goto	l11881
 20833                           
 20834                           ; BSR set to: 1
 20835  012988  0101               	movlb	1	; () banked
 20836  01298A  51AF               	movf	sprintf@len& (0+255),w,b
 20837  01298C  0101               	movlb	1	; () banked
 20838  01298E  5DB7               	subwf	sprintf@prec& (0+255),w,b
 20839  012990  0101               	movlb	1	; () banked
 20840  012992  51B0               	movf	(sprintf@len+1)& (0+255),w,b
 20841  012994  0101               	movlb	1	; () banked
 20842  012996  59B8               	subwfb	(sprintf@prec+1)& (0+255),w,b
 20843  012998  B0D8               	btfsc	status,0,c
 20844  01299A  D005               	goto	l11881
 20845                           
 20846                           ; BSR set to: 1
 20847                           ;doprnt.c: 754: len = prec;
 20848  01299C  C1B7  F1AF         	movff	sprintf@prec,sprintf@len
 20849  0129A0  C1B8  F1B0         	movff	sprintf@prec+1,sprintf@len+1
 20850  0129A4  D000               	goto	l11881
 20851  0129A6                     l11881:
 20852                           
 20853                           ; BSR set to: 1
 20854                           ;doprnt.c: 757: if(width > len)
 20855  0129A6  0101               	movlb	1	; () banked
 20856  0129A8  51B9               	movf	sprintf@width& (0+255),w,b
 20857  0129AA  0101               	movlb	1	; () banked
 20858  0129AC  5DAF               	subwf	sprintf@len& (0+255),w,b
 20859  0129AE  0101               	movlb	1	; () banked
 20860  0129B0  51BA               	movf	(sprintf@width+1)& (0+255),w,b
 20861  0129B2  0101               	movlb	1	; () banked
 20862  0129B4  59B0               	subwfb	(sprintf@len+1)& (0+255),w,b
 20863  0129B6  B0D8               	btfsc	status,0,c
 20864  0129B8  D009               	goto	l11885
 20865                           
 20866                           ; BSR set to: 1
 20867                           ;doprnt.c: 758: width -= len;
 20868  0129BA  0101               	movlb	1	; () banked
 20869  0129BC  51AF               	movf	sprintf@len& (0+255),w,b
 20870  0129BE  0101               	movlb	1	; () banked
 20871  0129C0  5FB9               	subwf	sprintf@width& (0+255),f,b
 20872  0129C2  0101               	movlb	1	; () banked
 20873  0129C4  51B0               	movf	(sprintf@len+1)& (0+255),w,b
 20874  0129C6  0101               	movlb	1	; () banked
 20875  0129C8  5BBA               	subwfb	(sprintf@width+1)& (0+255),f,b
 20876  0129CA  D006               	goto	l11887
 20877  0129CC                     l11885:
 20878                           
 20879                           ; BSR set to: 1
 20880                           ;doprnt.c: 759: else
 20881                           ;doprnt.c: 760: width = 0;
 20882  0129CC  0E00               	movlw	0
 20883  0129CE  0101               	movlb	1	; () banked
 20884  0129D0  6FBA               	movwf	(sprintf@width+1)& (0+255),b
 20885  0129D2  0E00               	movlw	0
 20886  0129D4  6FB9               	movwf	sprintf@width& (0+255),b
 20887  0129D6  D000               	goto	l11887
 20888  0129D8                     l11887:
 20889                           
 20890                           ; BSR set to: 1
 20891                           ;doprnt.c: 762: if(!(flag & 0x08))
 20892  0129D8  0101               	movlb	1	; () banked
 20893  0129DA  A7BC               	btfss	sprintf@flag& (0+255),3,b
 20894  0129DC  D00C               	goto	l11895
 20895  0129DE  D029               	goto	l11903
 20896                           
 20897                           ; BSR set to: 1
 20898                           ;doprnt.c: 764: while(width--)
 20899  0129E0  D00A               	goto	l11895
 20900  0129E2                     l11891:
 20901                           
 20902                           ; BSR set to: 1
 20903                           ;doprnt.c: 765: ((*sp++ = (' ')));
 20904  0129E2  C192  FFD9         	movff	sprintf@sp,fsr2l
 20905  0129E6  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 20906  0129EA  0E20               	movlw	32
 20907  0129EC  6EDF               	movwf	indf2,c
 20908                           
 20909                           ; BSR set to: 1
 20910  0129EE  0101               	movlb	1	; () banked
 20911  0129F0  4B92               	infsnz	sprintf@sp& (0+255),f,b
 20912  0129F2  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 20913  0129F4  D000               	goto	l11895
 20914  0129F6                     l11895:
 20915                           
 20916                           ; BSR set to: 1
 20917  0129F6  0101               	movlb	1	; () banked
 20918  0129F8  07B9               	decf	sprintf@width& (0+255),f,b
 20919  0129FA  A0D8               	btfss	status,0,c
 20920  0129FC  07BA               	decf	(sprintf@width+1)& (0+255),f,b
 20921  0129FE  0101               	movlb	1	; () banked
 20922  012A00  29B9               	incf	sprintf@width& (0+255),w,b
 20923  012A02  E1EF               	bnz	l11891
 20924  012A04  0101               	movlb	1	; () banked
 20925  012A06  29BA               	incf	(sprintf@width+1)& (0+255),w,b
 20926  012A08  B4D8               	btfsc	status,2,c
 20927  012A0A  D013               	goto	l11903
 20928  012A0C  D7EA               	goto	l11891
 20929                           
 20930                           ; BSR set to: 1
 20931                           ;doprnt.c: 767: while(len--)
 20932                           
 20933                           ; BSR set to: 1
 20934  012A0E  D011               	goto	l11903
 20935  012A10                     l11897:
 20936                           
 20937                           ; BSR set to: 1
 20938                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 20939  012A10  C1A7  FFD9         	movff	sprintf@cp,fsr2l
 20940  012A14  C1A8  FFDA         	movff	sprintf@cp+1,fsr2h
 20941  012A18  C192  FFE1         	movff	sprintf@sp,fsr1l
 20942  012A1C  C193  FFE2         	movff	sprintf@sp+1,fsr1h
 20943  012A20  CFDF FFE7          	movff	indf2,indf1
 20944                           
 20945                           ; BSR set to: 1
 20946  012A24  0101               	movlb	1	; () banked
 20947  012A26  4BA7               	infsnz	sprintf@cp& (0+255),f,b
 20948  012A28  2BA8               	incf	(sprintf@cp+1)& (0+255),f,b
 20949                           
 20950                           ; BSR set to: 1
 20951  012A2A  0101               	movlb	1	; () banked
 20952  012A2C  4B92               	infsnz	sprintf@sp& (0+255),f,b
 20953  012A2E  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 20954  012A30  D000               	goto	l11903
 20955  012A32                     l11903:
 20956                           
 20957                           ; BSR set to: 1
 20958  012A32  0101               	movlb	1	; () banked
 20959  012A34  07AF               	decf	sprintf@len& (0+255),f,b
 20960  012A36  A0D8               	btfss	status,0,c
 20961  012A38  07B0               	decf	(sprintf@len+1)& (0+255),f,b
 20962  012A3A  0101               	movlb	1	; () banked
 20963  012A3C  29AF               	incf	sprintf@len& (0+255),w,b
 20964  012A3E  E1E8               	bnz	l11897
 20965  012A40  0101               	movlb	1	; () banked
 20966  012A42  29B0               	incf	(sprintf@len+1)& (0+255),w,b
 20967  012A44  A4D8               	btfss	status,2,c
 20968  012A46  D7E4               	goto	l11897
 20969                           
 20970                           ; BSR set to: 1
 20971                           ;doprnt.c: 770: if(flag & 0x08)
 20972  012A48  0101               	movlb	1	; () banked
 20973  012A4A  B7BC               	btfsc	sprintf@flag& (0+255),3,b
 20974  012A4C  D00D               	goto	l11911
 20975  012A4E  EFBB  F099         	goto	l12157
 20976                           
 20977                           ; BSR set to: 1
 20978                           ;doprnt.c: 771: while(width--)
 20979  012A52  D00A               	goto	l11911
 20980  012A54                     l11907:
 20981                           
 20982                           ; BSR set to: 1
 20983                           ;doprnt.c: 772: ((*sp++ = (' ')));
 20984  012A54  C192  FFD9         	movff	sprintf@sp,fsr2l
 20985  012A58  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 20986  012A5C  0E20               	movlw	32
 20987  012A5E  6EDF               	movwf	indf2,c
 20988                           
 20989                           ; BSR set to: 1
 20990  012A60  0101               	movlb	1	; () banked
 20991  012A62  4B92               	infsnz	sprintf@sp& (0+255),f,b
 20992  012A64  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 20993  012A66  D000               	goto	l11911
 20994  012A68                     l11911:
 20995                           
 20996                           ; BSR set to: 1
 20997  012A68  0101               	movlb	1	; () banked
 20998  012A6A  07B9               	decf	sprintf@width& (0+255),f,b
 20999  012A6C  A0D8               	btfss	status,0,c
 21000  012A6E  07BA               	decf	(sprintf@width+1)& (0+255),f,b
 21001  012A70  0101               	movlb	1	; () banked
 21002  012A72  29B9               	incf	sprintf@width& (0+255),w,b
 21003  012A74  E1EF               	bnz	l11907
 21004  012A76  0101               	movlb	1	; () banked
 21005  012A78  29BA               	incf	(sprintf@width+1)& (0+255),w,b
 21006  012A7A  B4D8               	btfsc	status,2,c
 21007  012A7C  EFBB  F099         	goto	l12157
 21008  012A80  D7E9               	goto	l11907
 21009                           
 21010                           ; BSR set to: 1
 21011                           ;doprnt.c: 774: continue;
 21012                           
 21013                           ; BSR set to: 1
 21014  012A82  EFBB  F099         	goto	l12157
 21015  012A86                     l11913:
 21016                           
 21017                           ; BSR set to: 1
 21018                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 21019  012A86  C1B1  FFD9         	movff	sprintf@ap,fsr2l
 21020  012A8A  C1B2  FFDA         	movff	sprintf@ap+1,fsr2h
 21021  012A8E  50DF               	movf	indf2,w,c
 21022  012A90  0101               	movlb	1	; () banked
 21023  012A92  6FBB               	movwf	sprintf@c& (0+255),b
 21024                           
 21025                           ; BSR set to: 1
 21026  012A94  0E02               	movlw	2
 21027  012A96  0101               	movlb	1	; () banked
 21028  012A98  27B1               	addwf	sprintf@ap& (0+255),f,b
 21029  012A9A  0E00               	movlw	0
 21030  012A9C  23B2               	addwfc	(sprintf@ap+1)& (0+255),f,b
 21031  012A9E  D000               	goto	l11917
 21032  012AA0                     l11917:
 21033                           
 21034                           ; BSR set to: 1
 21035                           ;doprnt.c: 805: cp = (char *)&c;
 21036  012AA0  0EBB               	movlw	low sprintf@c
 21037  012AA2  0101               	movlb	1	; () banked
 21038  012AA4  6FA7               	movwf	sprintf@cp& (0+255),b
 21039  012AA6  0E01               	movlw	high sprintf@c
 21040  012AA8  0101               	movlb	1	; () banked
 21041  012AAA  6FA8               	movwf	(sprintf@cp+1)& (0+255),b
 21042                           
 21043                           ; BSR set to: 1
 21044                           ;doprnt.c: 806: len = 1;
 21045  012AAC  0E00               	movlw	0
 21046  012AAE  0101               	movlb	1	; () banked
 21047  012AB0  6FB0               	movwf	(sprintf@len+1)& (0+255),b
 21048  012AB2  0E01               	movlw	1
 21049  012AB4  6FAF               	movwf	sprintf@len& (0+255),b
 21050                           
 21051                           ;doprnt.c: 807: goto dostring;
 21052  012AB6  D762               	goto	l11875
 21053  012AB8                     l11921:
 21054                           
 21055                           ; BSR set to: 1
 21056                           ;doprnt.c: 818: flag |= 0xC0;
 21057  012AB8  0EC0               	movlw	192
 21058  012ABA  0101               	movlb	1	; () banked
 21059  012ABC  13BC               	iorwf	sprintf@flag& (0+255),f,b
 21060                           
 21061                           ; BSR set to: 1
 21062                           ;doprnt.c: 822: }
 21063                           
 21064                           ;doprnt.c: 819: break;
 21065  012ABE  D02B               	goto	l11927
 21066  012AC0                     l11925:
 21067  012AC0  C194  FFF6         	movff	sprintf@f,tblptrl
 21068  012AC4  C195  FFF7         	movff	sprintf@f+1,tblptrh
 21069  012AC8  0101               	movlb	1	; () banked
 21070  012ACA  4B94               	infsnz	sprintf@f& (0+255),f,b
 21071  012ACC  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 21072  012ACE                     	if	0	;tblptru may be non-zero
 21073  012ACE                     	endif
 21074  012ACE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21075  012ACE  0E00               	movlw	low (__mediumconst shr (0+16))
 21076  012AD0  6EF8               	movwf	tblptru,c
 21077  012AD2                     	endif
 21078  012AD2  0008               	tblrd		*
 21079  012AD4  CFF5 F1BB          	movff	tablat,sprintf@c
 21080  012AD8  0101               	movlb	1	; () banked
 21081  012ADA  51BB               	movf	sprintf@c& (0+255),w,b
 21082                           
 21083                           ; Switch size 1, requested type "space"
 21084                           ; Number of cases is 9, Range of values is 0 to 120
 21085                           ; switch strategies available:
 21086                           ; Name         Instructions Cycles
 21087                           ; simple_byte           28    15 (average)
 21088                           ;	Chosen strategy is simple_byte
 21089  012ADC  0A00               	xorlw	0	; case 0
 21090  012ADE  B4D8               	btfsc	status,2,c
 21091  012AE0  EFCE  F099         	goto	l12159
 21092  012AE4  0A58               	xorlw	88	; case 88
 21093  012AE6  B4D8               	btfsc	status,2,c
 21094  012AE8  D744               	goto	l11873
 21095  012AEA  0A3B               	xorlw	59	; case 99
 21096  012AEC  B4D8               	btfsc	status,2,c
 21097  012AEE  D7CB               	goto	l11913
 21098  012AF0  0A07               	xorlw	7	; case 100
 21099  012AF2  B4D8               	btfsc	status,2,c
 21100  012AF4  D010               	goto	l11927
 21101  012AF6  0A0D               	xorlw	13	; case 105
 21102  012AF8  B4D8               	btfsc	status,2,c
 21103  012AFA  D00D               	goto	l11927
 21104  012AFC  0A05               	xorlw	5	; case 108
 21105  012AFE  B4D8               	btfsc	status,2,c
 21106  012B00  D732               	goto	l11869
 21107  012B02  0A03               	xorlw	3	; case 111
 21108  012B04  B4D8               	btfsc	status,2,c
 21109  012B06  D732               	goto	l11871
 21110  012B08  0A1A               	xorlw	26	; case 117
 21111  012B0A  B4D8               	btfsc	status,2,c
 21112  012B0C  D7D5               	goto	l11921
 21113  012B0E  0A0D               	xorlw	13	; case 120
 21114  012B10  B4D8               	btfsc	status,2,c
 21115  012B12  D731               	goto	l1783
 21116  012B14  D7C5               	goto	l11917
 21117  012B16                     l11927:
 21118                           
 21119                           ; BSR set to: 1
 21120                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 21121  012B16  0EC0               	movlw	192
 21122  012B18  0101               	movlb	1	; () banked
 21123  012B1A  15BC               	andwf	sprintf@flag& (0+255),w,b
 21124  012B1C  0101               	movlb	1	; () banked
 21125  012B1E  6FA2               	movwf	??_sprintf& (0+255),b
 21126  012B20  0E00               	movlw	0
 21127  012B22  0101               	movlb	1	; () banked
 21128  012B24  15BD               	andwf	(sprintf@flag+1)& (0+255),w,b
 21129  012B26  0101               	movlb	1	; () banked
 21130  012B28  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21131  012B2A  0101               	movlb	1	; () banked
 21132  012B2C  51A2               	movf	??_sprintf& (0+255),w,b
 21133  012B2E  0101               	movlb	1	; () banked
 21134  012B30  11A3               	iorwf	(??_sprintf+1)& (0+255),w,b
 21135  012B32  A4D8               	btfss	status,2,c
 21136  012B34  D035               	goto	l1802
 21137                           
 21138                           ; BSR set to: 1
 21139                           ;doprnt.c: 1253: {
 21140                           ;doprnt.c: 1255: if(flag & 0x10)
 21141  012B36  0101               	movlb	1	; () banked
 21142  012B38  A9BC               	btfss	sprintf@flag& (0+255),4,b
 21143  012B3A  D00E               	goto	l11935
 21144                           
 21145                           ; BSR set to: 1
 21146                           ;doprnt.c: 1256: val = (*(long *)__va_arg((*(long **)ap), (long)0));
 21147  012B3C  C1B1  FFD9         	movff	sprintf@ap,fsr2l
 21148  012B40  C1B2  FFDA         	movff	sprintf@ap+1,fsr2h
 21149  012B44  CFDE F1B3          	movff	postinc2,sprintf@val
 21150  012B48  CFDE F1B4          	movff	postinc2,sprintf@val+1
 21151  012B4C  CFDE F1B5          	movff	postinc2,sprintf@val+2
 21152  012B50  CFDE F1B6          	movff	postinc2,sprintf@val+3
 21153                           
 21154                           ; BSR set to: 1
 21155  012B54  0E04               	movlw	4
 21156  012B56  D00F               	goto	L17
 21157  012B58                     l11935:
 21158                           
 21159                           ; BSR set to: 1
 21160                           ;doprnt.c: 1257: else
 21161                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 21162  012B58  C1B1  FFD9         	movff	sprintf@ap,fsr2l
 21163  012B5C  C1B2  FFDA         	movff	sprintf@ap+1,fsr2h
 21164  012B60  CFDE F1B3          	movff	postinc2,sprintf@val
 21165  012B64  CFDD F1B4          	movff	postdec2,sprintf@val+1
 21166  012B68  0101               	movlb	1	; () banked
 21167  012B6A  0E00               	movlw	0
 21168  012B6C  BFB4               	btfsc	(sprintf@val+1)& (0+255),7,b
 21169  012B6E  0EFF               	movlw	-1
 21170  012B70  6FB5               	movwf	(sprintf@val+2)& (0+255),b
 21171  012B72  6FB6               	movwf	(sprintf@val+3)& (0+255),b
 21172                           
 21173                           ; BSR set to: 1
 21174  012B74  0E02               	movlw	2
 21175  012B76                     L17:
 21176  012B76  0101               	movlb	1	; () banked
 21177  012B78  27B1               	addwf	sprintf@ap& (0+255),f,b
 21178  012B7A  0E00               	movlw	0
 21179  012B7C  23B2               	addwfc	(sprintf@ap+1)& (0+255),f,b
 21180  012B7E  D000               	goto	l11939
 21181  012B80                     l11939:
 21182                           
 21183                           ; BSR set to: 1
 21184                           ;doprnt.c: 1261: if((long)val < 0) {
 21185  012B80  0101               	movlb	1	; () banked
 21186  012B82  AFB6               	btfss	(sprintf@val+3)& (0+255),7,b
 21187  012B84  D033               	goto	l11953
 21188                           
 21189                           ; BSR set to: 1
 21190                           ;doprnt.c: 1262: flag |= 0x03;
 21191  012B86  0E03               	movlw	3
 21192  012B88  0101               	movlb	1	; () banked
 21193  012B8A  13BC               	iorwf	sprintf@flag& (0+255),f,b
 21194                           
 21195                           ; BSR set to: 1
 21196                           ;doprnt.c: 1263: val = -val;
 21197  012B8C  0101               	movlb	1	; () banked
 21198  012B8E  1FB6               	comf	(sprintf@val+3)& (0+255),f,b
 21199  012B90  1FB5               	comf	(sprintf@val+2)& (0+255),f,b
 21200  012B92  1FB4               	comf	(sprintf@val+1)& (0+255),f,b
 21201  012B94  6DB3               	negf	sprintf@val& (0+255),b
 21202  012B96  0E00               	movlw	0
 21203  012B98  23B4               	addwfc	(sprintf@val+1)& (0+255),f,b
 21204  012B9A  23B5               	addwfc	(sprintf@val+2)& (0+255),f,b
 21205  012B9C  23B6               	addwfc	(sprintf@val+3)& (0+255),f,b
 21206                           
 21207                           ; BSR set to: 1
 21208                           ;doprnt.c: 1264: }
 21209                           ;doprnt.c: 1266: }
 21210  012B9E  D026               	goto	l11953
 21211  012BA0                     l1802:
 21212                           
 21213                           ; BSR set to: 1
 21214                           ;doprnt.c: 1268: else
 21215                           ;doprnt.c: 1273: {
 21216                           ;doprnt.c: 1281: if(flag & 0x10)
 21217  012BA0  0101               	movlb	1	; () banked
 21218  012BA2  A9BC               	btfss	sprintf@flag& (0+255),4,b
 21219  012BA4  D00E               	goto	l11949
 21220                           
 21221                           ; BSR set to: 1
 21222                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
 21223  012BA6  C1B1  FFD9         	movff	sprintf@ap,fsr2l
 21224  012BAA  C1B2  FFDA         	movff	sprintf@ap+1,fsr2h
 21225  012BAE  CFDE F1B3          	movff	postinc2,sprintf@val
 21226  012BB2  CFDE F1B4          	movff	postinc2,sprintf@val+1
 21227  012BB6  CFDE F1B5          	movff	postinc2,sprintf@val+2
 21228  012BBA  CFDE F1B6          	movff	postinc2,sprintf@val+3
 21229                           
 21230                           ; BSR set to: 1
 21231  012BBE  0E04               	movlw	4
 21232  012BC0  D010               	goto	L18
 21233  012BC2                     l11949:
 21234                           
 21235                           ; BSR set to: 1
 21236                           ;doprnt.c: 1283: else
 21237                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 21238  012BC2  C1B1  FFD9         	movff	sprintf@ap,fsr2l
 21239  012BC6  C1B2  FFDA         	movff	sprintf@ap+1,fsr2h
 21240  012BCA  CFDE F1A2          	movff	postinc2,??_sprintf
 21241  012BCE  CFDD F1A3          	movff	postdec2,??_sprintf+1
 21242  012BD2  C1A2  F1B3         	movff	??_sprintf,sprintf@val
 21243  012BD6  C1A3  F1B4         	movff	??_sprintf+1,sprintf@val+1
 21244  012BDA  0101               	movlb	1	; () banked
 21245  012BDC  6BB5               	clrf	(sprintf@val+2)& (0+255),b
 21246  012BDE  6BB6               	clrf	(sprintf@val+3)& (0+255),b
 21247                           
 21248                           ; BSR set to: 1
 21249  012BE0  0E02               	movlw	2
 21250  012BE2                     L18:
 21251  012BE2  0101               	movlb	1	; () banked
 21252  012BE4  27B1               	addwf	sprintf@ap& (0+255),f,b
 21253  012BE6  0E00               	movlw	0
 21254  012BE8  23B2               	addwfc	(sprintf@ap+1)& (0+255),f,b
 21255                           
 21256                           ; BSR set to: 1
 21257  012BEA  D000               	goto	l11953
 21258  012BEC                     l11953:
 21259                           
 21260                           ; BSR set to: 1
 21261                           ;doprnt.c: 1287: }
 21262                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 21263  012BEC  0101               	movlb	1	; () banked
 21264  012BEE  51B7               	movf	sprintf@prec& (0+255),w,b
 21265  012BF0  0101               	movlb	1	; () banked
 21266  012BF2  11B8               	iorwf	(sprintf@prec+1)& (0+255),w,b
 21267  012BF4  A4D8               	btfss	status,2,c
 21268  012BF6  D099               	goto	l12003
 21269                           
 21270                           ; BSR set to: 1
 21271  012BF8  0101               	movlb	1	; () banked
 21272  012BFA  51B3               	movf	sprintf@val& (0+255),w,b
 21273  012BFC  0101               	movlb	1	; () banked
 21274  012BFE  11B4               	iorwf	(sprintf@val+1)& (0+255),w,b
 21275  012C00  0101               	movlb	1	; () banked
 21276  012C02  11B5               	iorwf	(sprintf@val+2)& (0+255),w,b
 21277  012C04  0101               	movlb	1	; () banked
 21278  012C06  11B6               	iorwf	(sprintf@val+3)& (0+255),w,b
 21279  012C08  A4D8               	btfss	status,2,c
 21280  012C0A  D08F               	goto	l12003
 21281                           
 21282                           ; BSR set to: 1
 21283                           ;doprnt.c: 1291: prec++;
 21284  012C0C  0101               	movlb	1	; () banked
 21285  012C0E  4BB7               	infsnz	sprintf@prec& (0+255),f,b
 21286  012C10  2BB8               	incf	(sprintf@prec+1)& (0+255),f,b
 21287                           
 21288                           ; BSR set to: 1
 21289                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 21290  012C12  D08B               	goto	l12003
 21291                           
 21292                           ; BSR set to: 1
 21293                           
 21294                           ;doprnt.c: 1299: case 0x00:
 21295  012C14  D000               	goto	l11959
 21296  012C16                     l11959:
 21297                           
 21298                           ; BSR set to: 1
 21299                           ;doprnt.c: 1302: case 0xC0:
 21300                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 21301  012C16  0E01               	movlw	1
 21302  012C18  0101               	movlb	1	; () banked
 21303  012C1A  6FBB               	movwf	sprintf@c& (0+255),b
 21304  012C1C                     l11961:
 21305                           
 21306                           ; BSR set to: 1
 21307  012C1C  0E0A               	movlw	10
 21308  012C1E  0101               	movlb	1	; () banked
 21309  012C20  19BB               	xorwf	sprintf@c& (0+255),w,b
 21310  012C22  B4D8               	btfsc	status,2,c
 21311  012C24  D092               	goto	l12005
 21312  012C26  D001               	goto	l11965
 21313                           
 21314                           ; BSR set to: 1
 21315  012C28  D090               	goto	l12005
 21316  012C2A                     l11965:
 21317                           
 21318                           ; BSR set to: 1
 21319                           ;doprnt.c: 1306: if(val < dpowers[c])
 21320  012C2A  0101               	movlb	1	; () banked
 21321  012C2C  51BB               	movf	sprintf@c& (0+255),w,b
 21322  012C2E  0D04               	mullw	4
 21323  012C30  0E1D               	movlw	low _dpowers
 21324  012C32  24F3               	addwf	prodl,w,c
 21325  012C34  6EF6               	movwf	tblptrl,c
 21326  012C36  0EED               	movlw	high _dpowers
 21327  012C38  20F4               	addwfc	prodh,w,c
 21328  012C3A  6EF7               	movwf	tblptrh,c
 21329  012C3C                     	if	1	;There are 3 active tblptr bytes
 21330  012C3C  6AF8               	clrf	tblptru,c
 21331  012C3E  0E00               	movlw	low (__mediumconst shr (0+16))
 21332  012C40  22F8               	addwfc	tblptru,f,c
 21333  012C42                     	endif
 21334  012C42  0009               	tblrd		*+
 21335  012C44  50F5               	movf	tablat,w,c
 21336  012C46  0101               	movlb	1	; () banked
 21337  012C48  5DB3               	subwf	sprintf@val& (0+255),w,b
 21338  012C4A  0009               	tblrd		*+
 21339  012C4C  50F5               	movf	tablat,w,c
 21340  012C4E  0101               	movlb	1	; () banked
 21341  012C50  59B4               	subwfb	(sprintf@val+1)& (0+255),w,b
 21342  012C52  0009               	tblrd		*+
 21343  012C54  50F5               	movf	tablat,w,c
 21344  012C56  0101               	movlb	1	; () banked
 21345  012C58  59B5               	subwfb	(sprintf@val+2)& (0+255),w,b
 21346  012C5A  0009               	tblrd		*+
 21347  012C5C  50F5               	movf	tablat,w,c
 21348  012C5E  0101               	movlb	1	; () banked
 21349  012C60  59B6               	subwfb	(sprintf@val+3)& (0+255),w,b
 21350  012C62  A0D8               	btfss	status,0,c
 21351  012C64  D072               	goto	l12005
 21352  012C66  D001               	goto	l11969
 21353                           
 21354                           ; BSR set to: 1
 21355                           ;doprnt.c: 1307: break;
 21356  012C68  D070               	goto	l12005
 21357  012C6A                     l11969:
 21358                           
 21359                           ; BSR set to: 1
 21360  012C6A  0101               	movlb	1	; () banked
 21361  012C6C  2BBB               	incf	sprintf@c& (0+255),f,b
 21362  012C6E  D7D6               	goto	l11961
 21363                           
 21364                           ; BSR set to: 1
 21365                           ;doprnt.c: 1309: break;
 21366                           
 21367                           ; BSR set to: 1
 21368  012C70  D06C               	goto	l12005
 21369  012C72                     l11973:
 21370                           
 21371                           ; BSR set to: 1
 21372                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 21373  012C72  0E01               	movlw	1
 21374  012C74  0101               	movlb	1	; () banked
 21375  012C76  6FBB               	movwf	sprintf@c& (0+255),b
 21376  012C78                     l11975:
 21377                           
 21378                           ; BSR set to: 1
 21379  012C78  0E08               	movlw	8
 21380  012C7A  0101               	movlb	1	; () banked
 21381  012C7C  19BB               	xorwf	sprintf@c& (0+255),w,b
 21382  012C7E  B4D8               	btfsc	status,2,c
 21383  012C80  D064               	goto	l12005
 21384  012C82  D001               	goto	l11979
 21385                           
 21386                           ; BSR set to: 1
 21387  012C84  D062               	goto	l12005
 21388  012C86                     l11979:
 21389                           
 21390                           ; BSR set to: 1
 21391                           ;doprnt.c: 1317: if(val < hexpowers[c])
 21392  012C86  0101               	movlb	1	; () banked
 21393  012C88  51BB               	movf	sprintf@c& (0+255),w,b
 21394  012C8A  0D04               	mullw	4
 21395  012C8C  0E45               	movlw	low _hexpowers
 21396  012C8E  24F3               	addwf	prodl,w,c
 21397  012C90  6EF6               	movwf	tblptrl,c
 21398  012C92  0EED               	movlw	high _hexpowers
 21399  012C94  20F4               	addwfc	prodh,w,c
 21400  012C96  6EF7               	movwf	tblptrh,c
 21401  012C98                     	if	1	;There are 3 active tblptr bytes
 21402  012C98  6AF8               	clrf	tblptru,c
 21403  012C9A  0E00               	movlw	low (__mediumconst shr (0+16))
 21404  012C9C  22F8               	addwfc	tblptru,f,c
 21405  012C9E                     	endif
 21406  012C9E  0009               	tblrd		*+
 21407  012CA0  50F5               	movf	tablat,w,c
 21408  012CA2  0101               	movlb	1	; () banked
 21409  012CA4  5DB3               	subwf	sprintf@val& (0+255),w,b
 21410  012CA6  0009               	tblrd		*+
 21411  012CA8  50F5               	movf	tablat,w,c
 21412  012CAA  0101               	movlb	1	; () banked
 21413  012CAC  59B4               	subwfb	(sprintf@val+1)& (0+255),w,b
 21414  012CAE  0009               	tblrd		*+
 21415  012CB0  50F5               	movf	tablat,w,c
 21416  012CB2  0101               	movlb	1	; () banked
 21417  012CB4  59B5               	subwfb	(sprintf@val+2)& (0+255),w,b
 21418  012CB6  0009               	tblrd		*+
 21419  012CB8  50F5               	movf	tablat,w,c
 21420  012CBA  0101               	movlb	1	; () banked
 21421  012CBC  59B6               	subwfb	(sprintf@val+3)& (0+255),w,b
 21422  012CBE  A0D8               	btfss	status,0,c
 21423  012CC0  D044               	goto	l12005
 21424  012CC2  D001               	goto	l11983
 21425                           
 21426                           ; BSR set to: 1
 21427                           ;doprnt.c: 1318: break;
 21428  012CC4  D042               	goto	l12005
 21429  012CC6                     l11983:
 21430                           
 21431                           ; BSR set to: 1
 21432  012CC6  0101               	movlb	1	; () banked
 21433  012CC8  2BBB               	incf	sprintf@c& (0+255),f,b
 21434  012CCA  D7D6               	goto	l11975
 21435                           
 21436                           ; BSR set to: 1
 21437                           ;doprnt.c: 1320: break;
 21438                           
 21439                           ; BSR set to: 1
 21440  012CCC  D03E               	goto	l12005
 21441  012CCE                     l11987:
 21442                           
 21443                           ; BSR set to: 1
 21444                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 21445  012CCE  0E01               	movlw	1
 21446  012CD0  0101               	movlb	1	; () banked
 21447  012CD2  6FBB               	movwf	sprintf@c& (0+255),b
 21448  012CD4                     l11989:
 21449                           
 21450                           ; BSR set to: 1
 21451  012CD4  0E0C               	movlw	12
 21452  012CD6  0101               	movlb	1	; () banked
 21453  012CD8  19BB               	xorwf	sprintf@c& (0+255),w,b
 21454  012CDA  B4D8               	btfsc	status,2,c
 21455  012CDC  D036               	goto	l12005
 21456  012CDE  D001               	goto	l11993
 21457                           
 21458                           ; BSR set to: 1
 21459  012CE0  D034               	goto	l12005
 21460  012CE2                     l11993:
 21461                           
 21462                           ; BSR set to: 1
 21463                           ;doprnt.c: 1329: if(val < octpowers[c])
 21464  012CE2  0101               	movlb	1	; () banked
 21465  012CE4  51BB               	movf	sprintf@c& (0+255),w,b
 21466  012CE6  0D04               	mullw	4
 21467  012CE8  0EED               	movlw	low _octpowers
 21468  012CEA  24F3               	addwf	prodl,w,c
 21469  012CEC  6EF6               	movwf	tblptrl,c
 21470  012CEE  0EEC               	movlw	high _octpowers
 21471  012CF0  20F4               	addwfc	prodh,w,c
 21472  012CF2  6EF7               	movwf	tblptrh,c
 21473  012CF4                     	if	1	;There are 3 active tblptr bytes
 21474  012CF4  6AF8               	clrf	tblptru,c
 21475  012CF6  0E00               	movlw	low (__mediumconst shr (0+16))
 21476  012CF8  22F8               	addwfc	tblptru,f,c
 21477  012CFA                     	endif
 21478  012CFA  0009               	tblrd		*+
 21479  012CFC  50F5               	movf	tablat,w,c
 21480  012CFE  0101               	movlb	1	; () banked
 21481  012D00  5DB3               	subwf	sprintf@val& (0+255),w,b
 21482  012D02  0009               	tblrd		*+
 21483  012D04  50F5               	movf	tablat,w,c
 21484  012D06  0101               	movlb	1	; () banked
 21485  012D08  59B4               	subwfb	(sprintf@val+1)& (0+255),w,b
 21486  012D0A  0009               	tblrd		*+
 21487  012D0C  50F5               	movf	tablat,w,c
 21488  012D0E  0101               	movlb	1	; () banked
 21489  012D10  59B5               	subwfb	(sprintf@val+2)& (0+255),w,b
 21490  012D12  0009               	tblrd		*+
 21491  012D14  50F5               	movf	tablat,w,c
 21492  012D16  0101               	movlb	1	; () banked
 21493  012D18  59B6               	subwfb	(sprintf@val+3)& (0+255),w,b
 21494  012D1A  A0D8               	btfss	status,0,c
 21495  012D1C  D016               	goto	l12005
 21496  012D1E  D001               	goto	l11997
 21497                           
 21498                           ; BSR set to: 1
 21499                           ;doprnt.c: 1330: break;
 21500  012D20  D014               	goto	l12005
 21501  012D22                     l11997:
 21502                           
 21503                           ; BSR set to: 1
 21504  012D22  0101               	movlb	1	; () banked
 21505  012D24  2BBB               	incf	sprintf@c& (0+255),f,b
 21506  012D26  D7D6               	goto	l11989
 21507                           
 21508                           ; BSR set to: 1
 21509                           ;doprnt.c: 1336: }
 21510                           
 21511                           ; BSR set to: 1
 21512                           ;doprnt.c: 1332: break;
 21513                           
 21514                           ; BSR set to: 1
 21515  012D28  D010               	goto	l12005
 21516  012D2A                     l12003:
 21517                           
 21518                           ; BSR set to: 1
 21519  012D2A  0101               	movlb	1	; () banked
 21520  012D2C  51BC               	movf	sprintf@flag& (0+255),w,b
 21521  012D2E  0BC0               	andlw	192
 21522                           
 21523                           ; Switch size 1, requested type "space"
 21524                           ; Number of cases is 4, Range of values is 0 to 192
 21525                           ; switch strategies available:
 21526                           ; Name         Instructions Cycles
 21527                           ; simple_byte           13     7 (average)
 21528                           ;	Chosen strategy is simple_byte
 21529  012D30  0A00               	xorlw	0	; case 0
 21530  012D32  B4D8               	btfsc	status,2,c
 21531  012D34  D770               	goto	l11959
 21532  012D36  0A40               	xorlw	64	; case 64
 21533  012D38  B4D8               	btfsc	status,2,c
 21534  012D3A  D7C9               	goto	l11987
 21535  012D3C  0AC0               	xorlw	192	; case 128
 21536  012D3E  B4D8               	btfsc	status,2,c
 21537  012D40  D798               	goto	l11973
 21538  012D42  0A40               	xorlw	64	; case 192
 21539  012D44  B4D8               	btfsc	status,2,c
 21540  012D46  D767               	goto	l11959
 21541  012D48  D000               	goto	l12005
 21542  012D4A                     l12005:
 21543                           
 21544                           ; BSR set to: 1
 21545                           ;doprnt.c: 1339: if(c < prec)
 21546  012D4A  0E80               	movlw	128
 21547  012D4C  0101               	movlb	1	; () banked
 21548  012D4E  BFBB               	btfsc	sprintf@c& (0+255),7,b
 21549  012D50  0E7F               	movlw	127
 21550  012D52  0101               	movlb	1	; () banked
 21551  012D54  6FA2               	movwf	??_sprintf& (0+255),b
 21552  012D56  0101               	movlb	1	; () banked
 21553  012D58  51B7               	movf	sprintf@prec& (0+255),w,b
 21554  012D5A  0101               	movlb	1	; () banked
 21555  012D5C  5DBB               	subwf	sprintf@c& (0+255),w,b
 21556  012D5E  0101               	movlb	1	; () banked
 21557  012D60  51B8               	movf	(sprintf@prec+1)& (0+255),w,b
 21558  012D62  0A80               	xorlw	128
 21559  012D64  0101               	movlb	1	; () banked
 21560  012D66  59A2               	subwfb	??_sprintf& (0+255),w,b
 21561  012D68  B0D8               	btfsc	status,0,c
 21562  012D6A  D003               	goto	l12009
 21563                           
 21564                           ; BSR set to: 1
 21565                           ;doprnt.c: 1340: c = prec;
 21566  012D6C  C1B7  F1BB         	movff	sprintf@prec,sprintf@c
 21567  012D70  D019               	goto	l12013
 21568  012D72                     l12009:
 21569                           
 21570                           ; BSR set to: 1
 21571                           ;doprnt.c: 1341: else if(prec < c)
 21572  012D72  0101               	movlb	1	; () banked
 21573  012D74  51B8               	movf	(sprintf@prec+1)& (0+255),w,b
 21574  012D76  0A80               	xorlw	128
 21575  012D78  0101               	movlb	1	; () banked
 21576  012D7A  6FA2               	movwf	??_sprintf& (0+255),b
 21577  012D7C  0101               	movlb	1	; () banked
 21578  012D7E  51BB               	movf	sprintf@c& (0+255),w,b
 21579  012D80  0101               	movlb	1	; () banked
 21580  012D82  5DB7               	subwf	sprintf@prec& (0+255),w,b
 21581  012D84  0E80               	movlw	128
 21582  012D86  0101               	movlb	1	; () banked
 21583  012D88  BFBB               	btfsc	sprintf@c& (0+255),7,b
 21584  012D8A  0E7F               	movlw	127
 21585  012D8C  0101               	movlb	1	; () banked
 21586  012D8E  59A2               	subwfb	??_sprintf& (0+255),w,b
 21587  012D90  B0D8               	btfsc	status,0,c
 21588  012D92  D008               	goto	l12013
 21589                           
 21590                           ; BSR set to: 1
 21591                           ;doprnt.c: 1342: prec = c;
 21592  012D94  0101               	movlb	1	; () banked
 21593  012D96  51BB               	movf	sprintf@c& (0+255),w,b
 21594  012D98  0101               	movlb	1	; () banked
 21595  012D9A  6FB7               	movwf	sprintf@prec& (0+255),b
 21596  012D9C  6BB8               	clrf	(sprintf@prec+1)& (0+255),b
 21597  012D9E  BFB7               	btfsc	sprintf@prec& (0+255),7,b
 21598  012DA0  07B8               	decf	(sprintf@prec+1)& (0+255),f,b
 21599                           
 21600                           ; BSR set to: 1
 21601  012DA2  D000               	goto	l12013
 21602  012DA4                     l12013:
 21603                           
 21604                           ; BSR set to: 1
 21605                           ;doprnt.c: 1345: if(width && flag & 0x03)
 21606  012DA4  0101               	movlb	1	; () banked
 21607  012DA6  51B9               	movf	sprintf@width& (0+255),w,b
 21608  012DA8  0101               	movlb	1	; () banked
 21609  012DAA  11BA               	iorwf	(sprintf@width+1)& (0+255),w,b
 21610  012DAC  B4D8               	btfsc	status,2,c
 21611  012DAE  D015               	goto	l12019
 21612                           
 21613                           ; BSR set to: 1
 21614  012DB0  0E03               	movlw	3
 21615  012DB2  0101               	movlb	1	; () banked
 21616  012DB4  15BC               	andwf	sprintf@flag& (0+255),w,b
 21617  012DB6  0101               	movlb	1	; () banked
 21618  012DB8  6FA2               	movwf	??_sprintf& (0+255),b
 21619  012DBA  0E00               	movlw	0
 21620  012DBC  0101               	movlb	1	; () banked
 21621  012DBE  15BD               	andwf	(sprintf@flag+1)& (0+255),w,b
 21622  012DC0  0101               	movlb	1	; () banked
 21623  012DC2  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21624  012DC4  0101               	movlb	1	; () banked
 21625  012DC6  51A2               	movf	??_sprintf& (0+255),w,b
 21626  012DC8  0101               	movlb	1	; () banked
 21627  012DCA  11A3               	iorwf	(??_sprintf+1)& (0+255),w,b
 21628  012DCC  B4D8               	btfsc	status,2,c
 21629  012DCE  D005               	goto	l12019
 21630                           
 21631                           ; BSR set to: 1
 21632                           ;doprnt.c: 1346: width--;
 21633  012DD0  0101               	movlb	1	; () banked
 21634  012DD2  07B9               	decf	sprintf@width& (0+255),f,b
 21635  012DD4  A0D8               	btfss	status,0,c
 21636  012DD6  07BA               	decf	(sprintf@width+1)& (0+255),f,b
 21637  012DD8  D000               	goto	l12019
 21638  012DDA                     l12019:
 21639                           
 21640                           ; BSR set to: 1
 21641                           ;doprnt.c: 1348: if(flag & 0x4000) {
 21642  012DDA  0101               	movlb	1	; () banked
 21643  012DDC  ADBD               	btfss	(sprintf@flag+1)& (0+255),6,b
 21644  012DDE  D01F               	goto	l12027
 21645                           
 21646                           ; BSR set to: 1
 21647                           ;doprnt.c: 1349: if(width > prec)
 21648  012DE0  0101               	movlb	1	; () banked
 21649  012DE2  51B9               	movf	sprintf@width& (0+255),w,b
 21650  012DE4  0101               	movlb	1	; () banked
 21651  012DE6  5DB7               	subwf	sprintf@prec& (0+255),w,b
 21652  012DE8  0101               	movlb	1	; () banked
 21653  012DEA  51B8               	movf	(sprintf@prec+1)& (0+255),w,b
 21654  012DEC  0A80               	xorlw	128
 21655  012DEE  0101               	movlb	1	; () banked
 21656  012DF0  6FA2               	movwf	??_sprintf& (0+255),b
 21657  012DF2  0101               	movlb	1	; () banked
 21658  012DF4  51BA               	movf	(sprintf@width+1)& (0+255),w,b
 21659  012DF6  0A80               	xorlw	128
 21660  012DF8  0101               	movlb	1	; () banked
 21661  012DFA  59A2               	subwfb	??_sprintf& (0+255),w,b
 21662  012DFC  B0D8               	btfsc	status,0,c
 21663  012DFE  D009               	goto	l12025
 21664                           
 21665                           ; BSR set to: 1
 21666                           ;doprnt.c: 1350: width -= prec;
 21667  012E00  0101               	movlb	1	; () banked
 21668  012E02  51B7               	movf	sprintf@prec& (0+255),w,b
 21669  012E04  0101               	movlb	1	; () banked
 21670  012E06  5FB9               	subwf	sprintf@width& (0+255),f,b
 21671  012E08  0101               	movlb	1	; () banked
 21672  012E0A  51B8               	movf	(sprintf@prec+1)& (0+255),w,b
 21673  012E0C  0101               	movlb	1	; () banked
 21674  012E0E  5BBA               	subwfb	(sprintf@width+1)& (0+255),f,b
 21675  012E10  D006               	goto	l12027
 21676  012E12                     l12025:
 21677                           
 21678                           ; BSR set to: 1
 21679                           ;doprnt.c: 1351: else
 21680                           ;doprnt.c: 1352: width = 0;
 21681  012E12  0E00               	movlw	0
 21682  012E14  0101               	movlb	1	; () banked
 21683  012E16  6FBA               	movwf	(sprintf@width+1)& (0+255),b
 21684  012E18  0E00               	movlw	0
 21685  012E1A  6FB9               	movwf	sprintf@width& (0+255),b
 21686                           
 21687                           ; BSR set to: 1
 21688  012E1C  D000               	goto	l12027
 21689  012E1E                     l12027:
 21690                           
 21691                           ; BSR set to: 1
 21692                           ;doprnt.c: 1353: }
 21693                           ;doprnt.c: 1357: if((flag & (
 21694                           ;doprnt.c: 1359: 0x04|
 21695                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 21696  012E1E  0EC4               	movlw	196
 21697  012E20  0101               	movlb	1	; () banked
 21698  012E22  6FA2               	movwf	??_sprintf& (0+255),b
 21699  012E24  0E08               	movlw	8
 21700  012E26  0101               	movlb	1	; () banked
 21701  012E28  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21702  012E2A  C1BC  F1A4         	movff	sprintf@flag,??_sprintf+2
 21703  012E2E  C1BD  F1A5         	movff	sprintf@flag+1,??_sprintf+3
 21704  012E32  0101               	movlb	1	; () banked
 21705  012E34  51A2               	movf	??_sprintf& (0+255),w,b
 21706  012E36  0101               	movlb	1	; () banked
 21707  012E38  17A4               	andwf	(??_sprintf+2)& (0+255),f,b
 21708  012E3A  0101               	movlb	1	; () banked
 21709  012E3C  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21710  012E3E  0101               	movlb	1	; () banked
 21711  012E40  17A5               	andwf	(??_sprintf+3)& (0+255),f,b
 21712  012E42  0E40               	movlw	64
 21713  012E44  0101               	movlb	1	; () banked
 21714  012E46  19A4               	xorwf	(??_sprintf+2)& (0+255),w,b
 21715  012E48  E110               	bnz	l12033
 21716  012E4A  0E08               	movlw	8
 21717  012E4C  0101               	movlb	1	; () banked
 21718  012E4E  19A5               	xorwf	(??_sprintf+3)& (0+255),w,b
 21719  012E50  A4D8               	btfss	status,2,c
 21720  012E52  D00B               	goto	l12033
 21721                           
 21722                           ; BSR set to: 1
 21723                           ;doprnt.c: 1362: if(width)
 21724  012E54  0101               	movlb	1	; () banked
 21725  012E56  51B9               	movf	sprintf@width& (0+255),w,b
 21726  012E58  0101               	movlb	1	; () banked
 21727  012E5A  11BA               	iorwf	(sprintf@width+1)& (0+255),w,b
 21728  012E5C  B4D8               	btfsc	status,2,c
 21729  012E5E  D037               	goto	l12041
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;doprnt.c: 1363: width--;
 21733  012E60  0101               	movlb	1	; () banked
 21734  012E62  07B9               	decf	sprintf@width& (0+255),f,b
 21735  012E64  A0D8               	btfss	status,0,c
 21736  012E66  07BA               	decf	(sprintf@width+1)& (0+255),f,b
 21737                           
 21738                           ; BSR set to: 1
 21739                           ;doprnt.c: 1364: } else
 21740  012E68  D032               	goto	l12041
 21741  012E6A                     l12033:
 21742                           
 21743                           ; BSR set to: 1
 21744                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21745  012E6A  0EC0               	movlw	192
 21746  012E6C  0101               	movlb	1	; () banked
 21747  012E6E  6FA2               	movwf	??_sprintf& (0+255),b
 21748  012E70  0E08               	movlw	8
 21749  012E72  0101               	movlb	1	; () banked
 21750  012E74  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21751  012E76  C1BC  F1A4         	movff	sprintf@flag,??_sprintf+2
 21752  012E7A  C1BD  F1A5         	movff	sprintf@flag+1,??_sprintf+3
 21753  012E7E  0101               	movlb	1	; () banked
 21754  012E80  51A2               	movf	??_sprintf& (0+255),w,b
 21755  012E82  0101               	movlb	1	; () banked
 21756  012E84  17A4               	andwf	(??_sprintf+2)& (0+255),f,b
 21757  012E86  0101               	movlb	1	; () banked
 21758  012E88  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21759  012E8A  0101               	movlb	1	; () banked
 21760  012E8C  17A5               	andwf	(??_sprintf+3)& (0+255),f,b
 21761  012E8E  0E80               	movlw	128
 21762  012E90  0101               	movlb	1	; () banked
 21763  012E92  19A4               	xorwf	(??_sprintf+2)& (0+255),w,b
 21764  012E94  E11C               	bnz	l12041
 21765  012E96  0E08               	movlw	8
 21766  012E98  0101               	movlb	1	; () banked
 21767  012E9A  19A5               	xorwf	(??_sprintf+3)& (0+255),w,b
 21768  012E9C  A4D8               	btfss	status,2,c
 21769  012E9E  D017               	goto	l12041
 21770                           
 21771                           ; BSR set to: 1
 21772                           ;doprnt.c: 1372: if(width > 2)
 21773  012EA0  0101               	movlb	1	; () banked
 21774  012EA2  BFBA               	btfsc	(sprintf@width+1)& (0+255),7,b
 21775  012EA4  D00E               	goto	l12039
 21776  012EA6  0101               	movlb	1	; () banked
 21777  012EA8  51BA               	movf	(sprintf@width+1)& (0+255),w,b
 21778  012EAA  E105               	bnz	u15220
 21779  012EAC  0E03               	movlw	3
 21780  012EAE  0101               	movlb	1	; () banked
 21781  012EB0  5DB9               	subwf	sprintf@width& (0+255),w,b
 21782  012EB2  A0D8               	btfss	status,0,c
 21783  012EB4  D006               	goto	l12039
 21784  012EB6                     u15220:
 21785                           
 21786                           ; BSR set to: 1
 21787                           ;doprnt.c: 1373: width -= 2;
 21788  012EB6  0101               	movlb	1	; () banked
 21789  012EB8  0EFE               	movlw	254
 21790  012EBA  27B9               	addwf	sprintf@width& (0+255),f,b
 21791  012EBC  0EFF               	movlw	255
 21792  012EBE  23BA               	addwfc	(sprintf@width+1)& (0+255),f,b
 21793  012EC0  D006               	goto	l12041
 21794  012EC2                     l12039:
 21795                           
 21796                           ; BSR set to: 1
 21797                           ;doprnt.c: 1374: else
 21798                           ;doprnt.c: 1375: width = 0;
 21799  012EC2  0E00               	movlw	0
 21800  012EC4  0101               	movlb	1	; () banked
 21801  012EC6  6FBA               	movwf	(sprintf@width+1)& (0+255),b
 21802  012EC8  0E00               	movlw	0
 21803  012ECA  6FB9               	movwf	sprintf@width& (0+255),b
 21804                           
 21805                           ; BSR set to: 1
 21806                           
 21807                           ; BSR set to: 1
 21808  012ECC  D000               	goto	l12041
 21809  012ECE                     l12041:
 21810                           
 21811                           ; BSR set to: 1
 21812                           ;doprnt.c: 1376: }
 21813                           ;doprnt.c: 1381: if(width > c)
 21814  012ECE  0E80               	movlw	128
 21815  012ED0  0101               	movlb	1	; () banked
 21816  012ED2  BFBB               	btfsc	sprintf@c& (0+255),7,b
 21817  012ED4  0E7F               	movlw	127
 21818  012ED6  0101               	movlb	1	; () banked
 21819  012ED8  6FA2               	movwf	??_sprintf& (0+255),b
 21820  012EDA  0101               	movlb	1	; () banked
 21821  012EDC  51B9               	movf	sprintf@width& (0+255),w,b
 21822  012EDE  0101               	movlb	1	; () banked
 21823  012EE0  5DBB               	subwf	sprintf@c& (0+255),w,b
 21824  012EE2  0101               	movlb	1	; () banked
 21825  012EE4  51BA               	movf	(sprintf@width+1)& (0+255),w,b
 21826  012EE6  0A80               	xorlw	128
 21827  012EE8  0101               	movlb	1	; () banked
 21828  012EEA  59A2               	subwfb	??_sprintf& (0+255),w,b
 21829  012EEC  B0D8               	btfsc	status,0,c
 21830  012EEE  D00B               	goto	l12045
 21831                           
 21832                           ; BSR set to: 1
 21833                           ;doprnt.c: 1382: width -= c;
 21834  012EF0  0101               	movlb	1	; () banked
 21835  012EF2  51BB               	movf	sprintf@c& (0+255),w,b
 21836  012EF4  0101               	movlb	1	; () banked
 21837  012EF6  5FB9               	subwf	sprintf@width& (0+255),f,b
 21838  012EF8  0E00               	movlw	0
 21839  012EFA  0101               	movlb	1	; () banked
 21840  012EFC  BFBB               	btfsc	sprintf@c& (0+255),7,b
 21841  012EFE  0EFF               	movlw	255
 21842  012F00  0101               	movlb	1	; () banked
 21843  012F02  5BBA               	subwfb	(sprintf@width+1)& (0+255),f,b
 21844  012F04  D006               	goto	l12047
 21845  012F06                     l12045:
 21846                           
 21847                           ; BSR set to: 1
 21848                           ;doprnt.c: 1383: else
 21849                           ;doprnt.c: 1384: width = 0;
 21850  012F06  0E00               	movlw	0
 21851  012F08  0101               	movlb	1	; () banked
 21852  012F0A  6FBA               	movwf	(sprintf@width+1)& (0+255),b
 21853  012F0C  0E00               	movlw	0
 21854  012F0E  6FB9               	movwf	sprintf@width& (0+255),b
 21855  012F10  D000               	goto	l12047
 21856  012F12                     l12047:
 21857                           
 21858                           ; BSR set to: 1
 21859                           ;doprnt.c: 1387: if(flag & 0x04) {
 21860  012F12  0101               	movlb	1	; () banked
 21861  012F14  A5BC               	btfss	sprintf@flag& (0+255),2,b
 21862  012F16  D079               	goto	l12083
 21863                           
 21864                           ; BSR set to: 1
 21865                           ;doprnt.c: 1392: if(flag & 0x03)
 21866  012F18  0E03               	movlw	3
 21867  012F1A  0101               	movlb	1	; () banked
 21868  012F1C  15BC               	andwf	sprintf@flag& (0+255),w,b
 21869  012F1E  0101               	movlb	1	; () banked
 21870  012F20  6FA2               	movwf	??_sprintf& (0+255),b
 21871  012F22  0E00               	movlw	0
 21872  012F24  0101               	movlb	1	; () banked
 21873  012F26  15BD               	andwf	(sprintf@flag+1)& (0+255),w,b
 21874  012F28  0101               	movlb	1	; () banked
 21875  012F2A  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21876  012F2C  0101               	movlb	1	; () banked
 21877  012F2E  51A2               	movf	??_sprintf& (0+255),w,b
 21878  012F30  0101               	movlb	1	; () banked
 21879  012F32  11A3               	iorwf	(??_sprintf+1)& (0+255),w,b
 21880  012F34  B4D8               	btfsc	status,2,c
 21881  012F36  D00A               	goto	l1841
 21882                           
 21883                           ; BSR set to: 1
 21884                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 21885  012F38  C192  FFD9         	movff	sprintf@sp,fsr2l
 21886  012F3C  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21887  012F40  0E2D               	movlw	45
 21888  012F42  D00C               	goto	L19
 21889  012F44                     l12053:
 21890                           
 21891                           ; BSR set to: 1
 21892  012F44  0101               	movlb	1	; () banked
 21893  012F46  4B92               	infsnz	sprintf@sp& (0+255),f,b
 21894  012F48  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 21895  012F4A  D044               	goto	l12075
 21896  012F4C                     l1841:
 21897                           
 21898                           ; BSR set to: 1
 21899                           ;doprnt.c: 1396: else
 21900                           ;doprnt.c: 1399: if(flag & 0x01)
 21901  012F4C  0101               	movlb	1	; () banked
 21902  012F4E  A1BC               	btfss	sprintf@flag& (0+255),0,b
 21903  012F50  D007               	goto	l12059
 21904                           
 21905                           ; BSR set to: 1
 21906                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 21907  012F52  C192  FFD9         	movff	sprintf@sp,fsr2l
 21908  012F56  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21909  012F5A  0E20               	movlw	32
 21910  012F5C                     L19:
 21911  012F5C  6EDF               	movwf	indf2,c
 21912  012F5E  D7F2               	goto	l12053
 21913  012F60                     l12059:
 21914                           
 21915                           ; BSR set to: 1
 21916                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21917  012F60  0EC0               	movlw	192
 21918  012F62  0101               	movlb	1	; () banked
 21919  012F64  6FA2               	movwf	??_sprintf& (0+255),b
 21920  012F66  0E08               	movlw	8
 21921  012F68  0101               	movlb	1	; () banked
 21922  012F6A  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21923  012F6C  C1BC  F1A4         	movff	sprintf@flag,??_sprintf+2
 21924  012F70  C1BD  F1A5         	movff	sprintf@flag+1,??_sprintf+3
 21925  012F74  0101               	movlb	1	; () banked
 21926  012F76  51A2               	movf	??_sprintf& (0+255),w,b
 21927  012F78  0101               	movlb	1	; () banked
 21928  012F7A  17A4               	andwf	(??_sprintf+2)& (0+255),f,b
 21929  012F7C  0101               	movlb	1	; () banked
 21930  012F7E  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21931  012F80  0101               	movlb	1	; () banked
 21932  012F82  17A5               	andwf	(??_sprintf+3)& (0+255),f,b
 21933  012F84  0E80               	movlw	128
 21934  012F86  0101               	movlb	1	; () banked
 21935  012F88  19A4               	xorwf	(??_sprintf+2)& (0+255),w,b
 21936  012F8A  E124               	bnz	l12075
 21937  012F8C  0E08               	movlw	8
 21938  012F8E  0101               	movlb	1	; () banked
 21939  012F90  19A5               	xorwf	(??_sprintf+3)& (0+255),w,b
 21940  012F92  A4D8               	btfss	status,2,c
 21941  012F94  D01F               	goto	l12075
 21942                           
 21943                           ; BSR set to: 1
 21944                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 21945  012F96  C192  FFD9         	movff	sprintf@sp,fsr2l
 21946  012F9A  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21947  012F9E  0E30               	movlw	48
 21948  012FA0  6EDF               	movwf	indf2,c
 21949                           
 21950                           ; BSR set to: 1
 21951  012FA2  0101               	movlb	1	; () banked
 21952  012FA4  4B92               	infsnz	sprintf@sp& (0+255),f,b
 21953  012FA6  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 21954                           
 21955                           ; BSR set to: 1
 21956                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 21957  012FA8  0101               	movlb	1	; () banked
 21958  012FAA  BBBC               	btfsc	sprintf@flag& (0+255),5,b
 21959  012FAC  D005               	goto	l12069
 21960                           
 21961                           ; BSR set to: 1
 21962  012FAE  0E00               	movlw	0
 21963  012FB0  0101               	movlb	1	; () banked
 21964  012FB2  6FAA               	movwf	(_sprintf$2834+1)& (0+255),b
 21965  012FB4  0E78               	movlw	120
 21966  012FB6  D004               	goto	L20
 21967  012FB8                     l12069:
 21968                           
 21969                           ; BSR set to: 1
 21970  012FB8  0E00               	movlw	0
 21971  012FBA  0101               	movlb	1	; () banked
 21972  012FBC  6FAA               	movwf	(_sprintf$2834+1)& (0+255),b
 21973  012FBE  0E58               	movlw	88
 21974  012FC0                     L20:
 21975  012FC0  6FA9               	movwf	_sprintf$2834& (0+255),b
 21976  012FC2  D000               	goto	l12071
 21977  012FC4                     l12071:
 21978                           
 21979                           ; BSR set to: 1
 21980  012FC4  C192  FFD9         	movff	sprintf@sp,fsr2l
 21981  012FC8  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21982  012FCC  C1A9  FFDF         	movff	_sprintf$2834,indf2
 21983  012FD0  D7B9               	goto	l12053
 21984                           
 21985                           ; BSR set to: 1
 21986                           
 21987                           ; BSR set to: 1
 21988                           
 21989                           ; BSR set to: 1
 21990  012FD2  D000               	goto	l12075
 21991  012FD4                     l12075:
 21992                           
 21993                           ; BSR set to: 1
 21994                           ;doprnt.c: 1412: }
 21995                           ;doprnt.c: 1415: if(width)
 21996  012FD4  0101               	movlb	1	; () banked
 21997  012FD6  51B9               	movf	sprintf@width& (0+255),w,b
 21998  012FD8  0101               	movlb	1	; () banked
 21999  012FDA  11BA               	iorwf	(sprintf@width+1)& (0+255),w,b
 22000  012FDC  B4D8               	btfsc	status,2,c
 22001  012FDE  D19C               	goto	l12147
 22002  012FE0                     l12077:
 22003                           
 22004                           ; BSR set to: 1
 22005                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 22006  012FE0  C192  FFD9         	movff	sprintf@sp,fsr2l
 22007  012FE4  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22008  012FE8  0E30               	movlw	48
 22009  012FEA  6EDF               	movwf	indf2,c
 22010                           
 22011                           ; BSR set to: 1
 22012  012FEC  0101               	movlb	1	; () banked
 22013  012FEE  4B92               	infsnz	sprintf@sp& (0+255),f,b
 22014  012FF0  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 22015                           
 22016                           ; BSR set to: 1
 22017                           ;doprnt.c: 1418: while(--width);
 22018  012FF2  0101               	movlb	1	; () banked
 22019  012FF4  07B9               	decf	sprintf@width& (0+255),f,b
 22020  012FF6  A0D8               	btfss	status,0,c
 22021  012FF8  07BA               	decf	(sprintf@width+1)& (0+255),f,b
 22022  012FFA  0101               	movlb	1	; () banked
 22023  012FFC  51B9               	movf	sprintf@width& (0+255),w,b
 22024  012FFE  0101               	movlb	1	; () banked
 22025  013000  11BA               	iorwf	(sprintf@width+1)& (0+255),w,b
 22026  013002  B4D8               	btfsc	status,2,c
 22027  013004  D189               	goto	l12147
 22028  013006  D7EC               	goto	l12077
 22029                           
 22030                           ; BSR set to: 1
 22031                           ;doprnt.c: 1420: } else
 22032                           
 22033                           ; BSR set to: 1
 22034  013008  D187               	goto	l12147
 22035  01300A                     l12083:
 22036                           
 22037                           ; BSR set to: 1
 22038                           ;doprnt.c: 1422: {
 22039                           ;doprnt.c: 1424: if(width
 22040                           ;doprnt.c: 1426: && !(flag & 0x08)
 22041                           ;doprnt.c: 1428: )
 22042  01300A  0101               	movlb	1	; () banked
 22043  01300C  51B9               	movf	sprintf@width& (0+255),w,b
 22044  01300E  0101               	movlb	1	; () banked
 22045  013010  11BA               	iorwf	(sprintf@width+1)& (0+255),w,b
 22046  013012  B4D8               	btfsc	status,2,c
 22047  013014  D018               	goto	l12093
 22048                           
 22049                           ; BSR set to: 1
 22050  013016  0101               	movlb	1	; () banked
 22051  013018  B7BC               	btfsc	sprintf@flag& (0+255),3,b
 22052  01301A  D015               	goto	l12093
 22053  01301C                     l12087:
 22054                           
 22055                           ; BSR set to: 1
 22056                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 22057  01301C  C192  FFD9         	movff	sprintf@sp,fsr2l
 22058  013020  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22059  013024  0E20               	movlw	32
 22060  013026  6EDF               	movwf	indf2,c
 22061                           
 22062                           ; BSR set to: 1
 22063  013028  0101               	movlb	1	; () banked
 22064  01302A  4B92               	infsnz	sprintf@sp& (0+255),f,b
 22065  01302C  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 22066                           
 22067                           ; BSR set to: 1
 22068                           ;doprnt.c: 1431: while(--width);
 22069  01302E  0101               	movlb	1	; () banked
 22070  013030  07B9               	decf	sprintf@width& (0+255),f,b
 22071  013032  A0D8               	btfss	status,0,c
 22072  013034  07BA               	decf	(sprintf@width+1)& (0+255),f,b
 22073  013036  0101               	movlb	1	; () banked
 22074  013038  51B9               	movf	sprintf@width& (0+255),w,b
 22075  01303A  0101               	movlb	1	; () banked
 22076  01303C  11BA               	iorwf	(sprintf@width+1)& (0+255),w,b
 22077  01303E  B4D8               	btfsc	status,2,c
 22078  013040  D002               	goto	l12093
 22079  013042  D7EC               	goto	l12087
 22080                           
 22081                           ; BSR set to: 1
 22082  013044  D000               	goto	l12093
 22083  013046                     l12093:
 22084                           
 22085                           ; BSR set to: 1
 22086                           ;doprnt.c: 1438: if(flag & 0x03)
 22087  013046  0E03               	movlw	3
 22088  013048  0101               	movlb	1	; () banked
 22089  01304A  15BC               	andwf	sprintf@flag& (0+255),w,b
 22090  01304C  0101               	movlb	1	; () banked
 22091  01304E  6FA2               	movwf	??_sprintf& (0+255),b
 22092  013050  0E00               	movlw	0
 22093  013052  0101               	movlb	1	; () banked
 22094  013054  15BD               	andwf	(sprintf@flag+1)& (0+255),w,b
 22095  013056  0101               	movlb	1	; () banked
 22096  013058  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 22097  01305A  0101               	movlb	1	; () banked
 22098  01305C  51A2               	movf	??_sprintf& (0+255),w,b
 22099  01305E  0101               	movlb	1	; () banked
 22100  013060  11A3               	iorwf	(??_sprintf+1)& (0+255),w,b
 22101  013062  B4D8               	btfsc	status,2,c
 22102  013064  D00A               	goto	l1857
 22103                           
 22104                           ; BSR set to: 1
 22105                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 22106  013066  C192  FFD9         	movff	sprintf@sp,fsr2l
 22107  01306A  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22108  01306E  0E2D               	movlw	45
 22109  013070  D00C               	goto	L21
 22110  013072                     l12097:
 22111                           
 22112                           ; BSR set to: 1
 22113  013072  0101               	movlb	1	; () banked
 22114  013074  4B92               	infsnz	sprintf@sp& (0+255),f,b
 22115  013076  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 22116  013078  D00B               	goto	l12103
 22117  01307A                     l1857:
 22118                           
 22119                           ; BSR set to: 1
 22120                           ;doprnt.c: 1443: else if(flag & 0x01)
 22121  01307A  0101               	movlb	1	; () banked
 22122  01307C  A1BC               	btfss	sprintf@flag& (0+255),0,b
 22123  01307E  D008               	goto	l12103
 22124                           
 22125                           ; BSR set to: 1
 22126                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 22127  013080  C192  FFD9         	movff	sprintf@sp,fsr2l
 22128  013084  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22129  013088  0E20               	movlw	32
 22130  01308A                     L21:
 22131  01308A  6EDF               	movwf	indf2,c
 22132  01308C  D7F2               	goto	l12097
 22133                           
 22134                           ; BSR set to: 1
 22135                           
 22136                           ; BSR set to: 1
 22137  01308E  D000               	goto	l12103
 22138  013090                     l12103:
 22139                           
 22140                           ; BSR set to: 1
 22141                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 22142  013090  0EC0               	movlw	192
 22143  013092  0101               	movlb	1	; () banked
 22144  013094  6FA2               	movwf	??_sprintf& (0+255),b
 22145  013096  0E08               	movlw	8
 22146  013098  0101               	movlb	1	; () banked
 22147  01309A  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 22148  01309C  C1BC  F1A4         	movff	sprintf@flag,??_sprintf+2
 22149  0130A0  C1BD  F1A5         	movff	sprintf@flag+1,??_sprintf+3
 22150  0130A4  0101               	movlb	1	; () banked
 22151  0130A6  51A2               	movf	??_sprintf& (0+255),w,b
 22152  0130A8  0101               	movlb	1	; () banked
 22153  0130AA  17A4               	andwf	(??_sprintf+2)& (0+255),f,b
 22154  0130AC  0101               	movlb	1	; () banked
 22155  0130AE  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 22156  0130B0  0101               	movlb	1	; () banked
 22157  0130B2  17A5               	andwf	(??_sprintf+3)& (0+255),f,b
 22158  0130B4  0E40               	movlw	64
 22159  0130B6  0101               	movlb	1	; () banked
 22160  0130B8  19A4               	xorwf	(??_sprintf+2)& (0+255),w,b
 22161  0130BA  E10C               	bnz	l12109
 22162  0130BC  0E08               	movlw	8
 22163  0130BE  0101               	movlb	1	; () banked
 22164  0130C0  19A5               	xorwf	(??_sprintf+3)& (0+255),w,b
 22165  0130C2  A4D8               	btfss	status,2,c
 22166  0130C4  D007               	goto	l12109
 22167                           
 22168                           ; BSR set to: 1
 22169                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 22170  0130C6  C192  FFD9         	movff	sprintf@sp,fsr2l
 22171  0130CA  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22172  0130CE  0E30               	movlw	48
 22173  0130D0  6EDF               	movwf	indf2,c
 22174  0130D2  D11E               	goto	l12145
 22175  0130D4                     l12109:
 22176                           
 22177                           ; BSR set to: 1
 22178                           ;doprnt.c: 1450: else
 22179                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 22180  0130D4  0EC0               	movlw	192
 22181  0130D6  0101               	movlb	1	; () banked
 22182  0130D8  6FA2               	movwf	??_sprintf& (0+255),b
 22183  0130DA  0E08               	movlw	8
 22184  0130DC  0101               	movlb	1	; () banked
 22185  0130DE  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 22186  0130E0  C1BC  F1A4         	movff	sprintf@flag,??_sprintf+2
 22187  0130E4  C1BD  F1A5         	movff	sprintf@flag+1,??_sprintf+3
 22188  0130E8  0101               	movlb	1	; () banked
 22189  0130EA  51A2               	movf	??_sprintf& (0+255),w,b
 22190  0130EC  0101               	movlb	1	; () banked
 22191  0130EE  17A4               	andwf	(??_sprintf+2)& (0+255),f,b
 22192  0130F0  0101               	movlb	1	; () banked
 22193  0130F2  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 22194  0130F4  0101               	movlb	1	; () banked
 22195  0130F6  17A5               	andwf	(??_sprintf+3)& (0+255),f,b
 22196  0130F8  0E80               	movlw	128
 22197  0130FA  0101               	movlb	1	; () banked
 22198  0130FC  19A4               	xorwf	(??_sprintf+2)& (0+255),w,b
 22199  0130FE  E104               	bnz	u15371
 22200  013100  0E08               	movlw	8
 22201  013102  0101               	movlb	1	; () banked
 22202  013104  19A5               	xorwf	(??_sprintf+3)& (0+255),w,b
 22203  013106  A4D8               	btfss	status,2,c
 22204  013108                     u15371:
 22205  013108  D107               	goto	l12147
 22206                           
 22207                           ; BSR set to: 1
 22208                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 22209  01310A  C192  FFD9         	movff	sprintf@sp,fsr2l
 22210  01310E  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22211  013112  0E30               	movlw	48
 22212  013114  6EDF               	movwf	indf2,c
 22213                           
 22214                           ; BSR set to: 1
 22215  013116  0101               	movlb	1	; () banked
 22216  013118  4B92               	infsnz	sprintf@sp& (0+255),f,b
 22217  01311A  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 22218                           
 22219                           ; BSR set to: 1
 22220                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 22221  01311C  0101               	movlb	1	; () banked
 22222  01311E  BBBC               	btfsc	sprintf@flag& (0+255),5,b
 22223  013120  D005               	goto	l12119
 22224                           
 22225                           ; BSR set to: 1
 22226  013122  0E00               	movlw	0
 22227  013124  0101               	movlb	1	; () banked
 22228  013126  6FAC               	movwf	(_sprintf$2835+1)& (0+255),b
 22229  013128  0E78               	movlw	120
 22230  01312A  D004               	goto	L22
 22231  01312C                     l12119:
 22232                           
 22233                           ; BSR set to: 1
 22234  01312C  0E00               	movlw	0
 22235  01312E  0101               	movlb	1	; () banked
 22236  013130  6FAC               	movwf	(_sprintf$2835+1)& (0+255),b
 22237  013132  0E58               	movlw	88
 22238  013134                     L22:
 22239  013134  6FAB               	movwf	_sprintf$2835& (0+255),b
 22240  013136  D000               	goto	l12121
 22241  013138                     l12121:
 22242                           
 22243                           ; BSR set to: 1
 22244  013138  C192  FFD9         	movff	sprintf@sp,fsr2l
 22245  01313C  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22246  013140  C1AB  FFDF         	movff	_sprintf$2835,indf2
 22247  013144  D0E5               	goto	l12145
 22248                           
 22249                           ; BSR set to: 1
 22250                           ;doprnt.c: 1466: }
 22251                           ;doprnt.c: 1469: }
 22252                           ;doprnt.c: 1474: while(prec--) {
 22253                           
 22254                           ; BSR set to: 1
 22255                           
 22256                           ; BSR set to: 1
 22257                           
 22258                           ; BSR set to: 1
 22259  013146  D0E8               	goto	l12147
 22260                           
 22261                           ; BSR set to: 1
 22262                           ;doprnt.c: 1476: switch((unsigned char)(flag & (0xC0)))
 22263  013148  D0CD               	goto	l12141
 22264                           
 22265                           ; BSR set to: 1
 22266                           
 22267                           ;doprnt.c: 1478: {
 22268                           ;doprnt.c: 1483: case 0x00:
 22269  01314A  D000               	goto	l12125
 22270  01314C                     l12125:
 22271                           
 22272                           ; BSR set to: 1
 22273                           ;doprnt.c: 1486: case 0xC0:
 22274                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 22275  01314C  C1B7  F1A2         	movff	sprintf@prec,??_sprintf
 22276  013150  C1B8  F1A3         	movff	sprintf@prec+1,??_sprintf+1
 22277  013154  0101               	movlb	1	; () banked
 22278  013156  90D8               	bcf	status,0,c
 22279  013158  37A2               	rlcf	??_sprintf& (0+255),f,b
 22280  01315A  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 22281  01315C  0101               	movlb	1	; () banked
 22282  01315E  90D8               	bcf	status,0,c
 22283  013160  37A2               	rlcf	??_sprintf& (0+255),f,b
 22284  013162  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 22285  013164  0E1D               	movlw	low _dpowers
 22286  013166  0101               	movlb	1	; () banked
 22287  013168  25A2               	addwf	??_sprintf& (0+255),w,b
 22288  01316A  6EF6               	movwf	tblptrl,c
 22289  01316C  0EED               	movlw	high _dpowers
 22290  01316E  21A3               	addwfc	(??_sprintf+1)& (0+255),w,b
 22291  013170  6EF7               	movwf	tblptrh,c
 22292  013172                     	if	1	;There are 3 active tblptr bytes
 22293  013172  6AF8               	clrf	tblptru,c
 22294  013174  0E00               	movlw	low (__mediumconst shr (0+16))
 22295  013176  22F8               	addwfc	tblptru,f,c
 22296  013178                     	endif
 22297  013178  0009               	tblrd		*+
 22298  01317A  CFF5 F180          	movff	tablat,___lldiv@divisor
 22299  01317E  0009               	tblrd		*+
 22300  013180  CFF5 F181          	movff	tablat,___lldiv@divisor+1
 22301  013184  0009               	tblrd		*+
 22302  013186  CFF5 F182          	movff	tablat,___lldiv@divisor+2
 22303  01318A  000A               	tblrd		*-
 22304  01318C  CFF5 F183          	movff	tablat,___lldiv@divisor+3
 22305  013190  C1B3  F17C         	movff	sprintf@val,___lldiv@dividend
 22306  013194  C1B4  F17D         	movff	sprintf@val+1,___lldiv@dividend+1
 22307  013198  C1B5  F17E         	movff	sprintf@val+2,___lldiv@dividend+2
 22308  01319C  C1B6  F17F         	movff	sprintf@val+3,___lldiv@dividend+3
 22309  0131A0  EC24  F0B2         	call	___lldiv	;wreg free
 22310  0131A4  C17C  F189         	movff	?___lldiv,___llmod@dividend
 22311  0131A8  C17D  F18A         	movff	?___lldiv+1,___llmod@dividend+1
 22312  0131AC  C17E  F18B         	movff	?___lldiv+2,___llmod@dividend+2
 22313  0131B0  C17F  F18C         	movff	?___lldiv+3,___llmod@dividend+3
 22314  0131B4  0E0A               	movlw	10
 22315  0131B6  0101               	movlb	1	; () banked
 22316  0131B8  6F8D               	movwf	___llmod@divisor& (0+255),b
 22317  0131BA  0E00               	movlw	0
 22318  0131BC  6F8E               	movwf	(___llmod@divisor+1)& (0+255),b
 22319  0131BE  0E00               	movlw	0
 22320  0131C0  6F8F               	movwf	(___llmod@divisor+2)& (0+255),b
 22321  0131C2  0E00               	movlw	0
 22322  0131C4  6F90               	movwf	(___llmod@divisor+3)& (0+255),b
 22323  0131C6  EC99  F0B4         	call	___llmod	;wreg free
 22324  0131CA  0101               	movlb	1	; () banked
 22325  0131CC  5189               	movf	?___llmod& (0+255),w,b
 22326  0131CE  D086               	goto	L23
 22327  0131D0                     l12127:
 22328                           
 22329                           ; BSR set to: 1
 22330                           ;doprnt.c: 1499: {
 22331                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 22332  0131D0  C1B3  F17C         	movff	sprintf@val,___lldiv@dividend
 22333  0131D4  C1B4  F17D         	movff	sprintf@val+1,___lldiv@dividend+1
 22334  0131D8  C1B5  F17E         	movff	sprintf@val+2,___lldiv@dividend+2
 22335  0131DC  C1B6  F17F         	movff	sprintf@val+3,___lldiv@dividend+3
 22336  0131E0  C1B7  F1A2         	movff	sprintf@prec,??_sprintf
 22337  0131E4  C1B8  F1A3         	movff	sprintf@prec+1,??_sprintf+1
 22338  0131E8  0101               	movlb	1	; () banked
 22339  0131EA  90D8               	bcf	status,0,c
 22340  0131EC  37A2               	rlcf	??_sprintf& (0+255),f,b
 22341  0131EE  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 22342  0131F0  0101               	movlb	1	; () banked
 22343  0131F2  90D8               	bcf	status,0,c
 22344  0131F4  37A2               	rlcf	??_sprintf& (0+255),f,b
 22345  0131F6  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 22346  0131F8  0E45               	movlw	low _hexpowers
 22347  0131FA  0101               	movlb	1	; () banked
 22348  0131FC  25A2               	addwf	??_sprintf& (0+255),w,b
 22349  0131FE  6EF6               	movwf	tblptrl,c
 22350  013200  0EED               	movlw	high _hexpowers
 22351  013202  21A3               	addwfc	(??_sprintf+1)& (0+255),w,b
 22352  013204  6EF7               	movwf	tblptrh,c
 22353  013206                     	if	1	;There are 3 active tblptr bytes
 22354  013206  6AF8               	clrf	tblptru,c
 22355  013208  0E00               	movlw	low (__mediumconst shr (0+16))
 22356  01320A  22F8               	addwfc	tblptru,f,c
 22357  01320C                     	endif
 22358  01320C  0009               	tblrd		*+
 22359  01320E  CFF5 F180          	movff	tablat,___lldiv@divisor
 22360  013212  0009               	tblrd		*+
 22361  013214  CFF5 F181          	movff	tablat,___lldiv@divisor+1
 22362  013218  0009               	tblrd		*+
 22363  01321A  CFF5 F182          	movff	tablat,___lldiv@divisor+2
 22364  01321E  000A               	tblrd		*-
 22365  013220  CFF5 F183          	movff	tablat,___lldiv@divisor+3
 22366  013224  EC24  F0B2         	call	___lldiv	;wreg free
 22367  013228  0101               	movlb	1	; () banked
 22368  01322A  517C               	movf	?___lldiv& (0+255),w,b
 22369  01322C  0B0F               	andlw	15
 22370  01322E  0101               	movlb	1	; () banked
 22371  013230  6FA6               	movwf	sprintf@idx& (0+255),b
 22372                           
 22373                           ; BSR set to: 1
 22374                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 22375  013232  0101               	movlb	1	; () banked
 22376  013234  BBBC               	btfsc	sprintf@flag& (0+255),5,b
 22377  013236  D005               	goto	l12133
 22378                           
 22379                           ; BSR set to: 1
 22380  013238  0ED9               	movlw	low STR_325
 22381  01323A  0101               	movlb	1	; () banked
 22382  01323C  6FAD               	movwf	_sprintf$2841& (0+255),b
 22383  01323E  0EF8               	movlw	high STR_325
 22384  013240  D004               	goto	L24
 22385  013242                     l12133:
 22386                           
 22387                           ; BSR set to: 1
 22388  013242  0EC8               	movlw	low STR_324
 22389  013244  0101               	movlb	1	; () banked
 22390  013246  6FAD               	movwf	_sprintf$2841& (0+255),b
 22391  013248  0EF8               	movlw	high STR_324
 22392  01324A                     L24:
 22393  01324A  0101               	movlb	1	; () banked
 22394  01324C  6FAE               	movwf	(_sprintf$2841+1)& (0+255),b
 22395  01324E  D000               	goto	l12135
 22396  013250                     l12135:
 22397                           
 22398                           ; BSR set to: 1
 22399  013250  0101               	movlb	1	; () banked
 22400  013252  51A6               	movf	sprintf@idx& (0+255),w,b
 22401  013254  0D01               	mullw	1
 22402  013256  C1AD  F1A2         	movff	_sprintf$2841,??_sprintf
 22403  01325A  C1AE  F1A3         	movff	_sprintf$2841+1,??_sprintf+1
 22404  01325E  50F3               	movf	prodl,w,c
 22405  013260  0101               	movlb	1	; () banked
 22406  013262  27A2               	addwf	??_sprintf& (0+255),f,b
 22407  013264  50F4               	movf	prodh,w,c
 22408  013266  0101               	movlb	1	; () banked
 22409  013268  23A3               	addwfc	(??_sprintf+1)& (0+255),f,b
 22410  01326A  C1A2  FFF6         	movff	??_sprintf,tblptrl
 22411  01326E  C1A3  FFF7         	movff	??_sprintf+1,tblptrh
 22412  013272                     	if	0	;tblptru may be non-zero
 22413  013272                     	endif
 22414  013272                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22415  013272  0E00               	movlw	low (__mediumconst shr (0+16))
 22416  013274  6EF8               	movwf	tblptru,c
 22417  013276                     	endif
 22418  013276  0008               	tblrd		*
 22419  013278  CFF5 F1BB          	movff	tablat,sprintf@c
 22420                           
 22421                           ;doprnt.c: 1508: }
 22422                           ;doprnt.c: 1510: break;
 22423  01327C  D043               	goto	l12143
 22424  01327E                     l12137:
 22425                           
 22426                           ; BSR set to: 1
 22427                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 22428  01327E  C1B3  F17C         	movff	sprintf@val,___lldiv@dividend
 22429  013282  C1B4  F17D         	movff	sprintf@val+1,___lldiv@dividend+1
 22430  013286  C1B5  F17E         	movff	sprintf@val+2,___lldiv@dividend+2
 22431  01328A  C1B6  F17F         	movff	sprintf@val+3,___lldiv@dividend+3
 22432  01328E  C1B7  F1A2         	movff	sprintf@prec,??_sprintf
 22433  013292  C1B8  F1A3         	movff	sprintf@prec+1,??_sprintf+1
 22434  013296  0101               	movlb	1	; () banked
 22435  013298  90D8               	bcf	status,0,c
 22436  01329A  37A2               	rlcf	??_sprintf& (0+255),f,b
 22437  01329C  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 22438  01329E  0101               	movlb	1	; () banked
 22439  0132A0  90D8               	bcf	status,0,c
 22440  0132A2  37A2               	rlcf	??_sprintf& (0+255),f,b
 22441  0132A4  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 22442  0132A6  0EED               	movlw	low _octpowers
 22443  0132A8  0101               	movlb	1	; () banked
 22444  0132AA  25A2               	addwf	??_sprintf& (0+255),w,b
 22445  0132AC  6EF6               	movwf	tblptrl,c
 22446  0132AE  0EEC               	movlw	high _octpowers
 22447  0132B0  21A3               	addwfc	(??_sprintf+1)& (0+255),w,b
 22448  0132B2  6EF7               	movwf	tblptrh,c
 22449  0132B4                     	if	1	;There are 3 active tblptr bytes
 22450  0132B4  6AF8               	clrf	tblptru,c
 22451  0132B6  0E00               	movlw	low (__mediumconst shr (0+16))
 22452  0132B8  22F8               	addwfc	tblptru,f,c
 22453  0132BA                     	endif
 22454  0132BA  0009               	tblrd		*+
 22455  0132BC  CFF5 F180          	movff	tablat,___lldiv@divisor
 22456  0132C0  0009               	tblrd		*+
 22457  0132C2  CFF5 F181          	movff	tablat,___lldiv@divisor+1
 22458  0132C6  0009               	tblrd		*+
 22459  0132C8  CFF5 F182          	movff	tablat,___lldiv@divisor+2
 22460  0132CC  000A               	tblrd		*-
 22461  0132CE  CFF5 F183          	movff	tablat,___lldiv@divisor+3
 22462  0132D2  EC24  F0B2         	call	___lldiv	;wreg free
 22463  0132D6  0101               	movlb	1	; () banked
 22464  0132D8  517C               	movf	?___lldiv& (0+255),w,b
 22465  0132DA  0B07               	andlw	7
 22466  0132DC                     L23:
 22467  0132DC  0F30               	addlw	48
 22468  0132DE  0101               	movlb	1	; () banked
 22469  0132E0  6FBB               	movwf	sprintf@c& (0+255),b
 22470                           
 22471                           ; BSR set to: 1
 22472                           ;doprnt.c: 1523: }
 22473                           
 22474                           ;doprnt.c: 1520: break;
 22475  0132E2  D010               	goto	l12143
 22476  0132E4                     l12141:
 22477                           
 22478                           ; BSR set to: 1
 22479  0132E4  0101               	movlb	1	; () banked
 22480  0132E6  51BC               	movf	sprintf@flag& (0+255),w,b
 22481  0132E8  0BC0               	andlw	192
 22482                           
 22483                           ; Switch size 1, requested type "space"
 22484                           ; Number of cases is 4, Range of values is 0 to 192
 22485                           ; switch strategies available:
 22486                           ; Name         Instructions Cycles
 22487                           ; simple_byte           13     7 (average)
 22488                           ;	Chosen strategy is simple_byte
 22489  0132EA  0A00               	xorlw	0	; case 0
 22490  0132EC  B4D8               	btfsc	status,2,c
 22491  0132EE  D72E               	goto	l12125
 22492  0132F0  0A40               	xorlw	64	; case 64
 22493  0132F2  B4D8               	btfsc	status,2,c
 22494  0132F4  D7C4               	goto	l12137
 22495  0132F6  0AC0               	xorlw	192	; case 128
 22496  0132F8  B4D8               	btfsc	status,2,c
 22497  0132FA  D76A               	goto	l12127
 22498  0132FC  0A40               	xorlw	64	; case 192
 22499  0132FE  B4D8               	btfsc	status,2,c
 22500  013300  D725               	goto	l12125
 22501  013302  D000               	goto	l12143
 22502  013304                     l12143:
 22503                           
 22504                           ; BSR set to: 1
 22505                           ;doprnt.c: 1524: ((*sp++ = (c)));
 22506  013304  C192  FFD9         	movff	sprintf@sp,fsr2l
 22507  013308  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22508  01330C  C1BB  FFDF         	movff	sprintf@c,indf2
 22509  013310                     l12145:
 22510                           
 22511                           ; BSR set to: 1
 22512  013310  0101               	movlb	1	; () banked
 22513  013312  4B92               	infsnz	sprintf@sp& (0+255),f,b
 22514  013314  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 22515  013316  D000               	goto	l12147
 22516  013318                     l12147:
 22517                           
 22518                           ; BSR set to: 1
 22519  013318  0101               	movlb	1	; () banked
 22520  01331A  07B7               	decf	sprintf@prec& (0+255),f,b
 22521  01331C  A0D8               	btfss	status,0,c
 22522  01331E  07B8               	decf	(sprintf@prec+1)& (0+255),f,b
 22523  013320  0101               	movlb	1	; () banked
 22524  013322  29B7               	incf	sprintf@prec& (0+255),w,b
 22525  013324  E1DF               	bnz	l12141
 22526  013326  0101               	movlb	1	; () banked
 22527  013328  29B8               	incf	(sprintf@prec+1)& (0+255),w,b
 22528  01332A  A4D8               	btfss	status,2,c
 22529  01332C  D7DB               	goto	l12141
 22530                           
 22531                           ; BSR set to: 1
 22532                           ;doprnt.c: 1525: }
 22533                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 22534  01332E  0101               	movlb	1	; () banked
 22535  013330  A7BC               	btfss	sprintf@flag& (0+255),3,b
 22536  013332  D021               	goto	l12157
 22537                           
 22538                           ; BSR set to: 1
 22539  013334  0101               	movlb	1	; () banked
 22540  013336  BFBA               	btfsc	(sprintf@width+1)& (0+255),7,b
 22541  013338  D01E               	goto	l12157
 22542  01333A  0101               	movlb	1	; () banked
 22543  01333C  51BA               	movf	(sprintf@width+1)& (0+255),w,b
 22544  01333E  E106               	bnz	l12151
 22545  013340  0101               	movlb	1	; () banked
 22546  013342  05B9               	decf	sprintf@width& (0+255),w,b
 22547  013344  B0D8               	btfsc	status,0,c
 22548  013346  D002               	goto	l12151
 22549  013348  D016               	goto	l12157
 22550  01334A  D000               	goto	l12151
 22551  01334C                     l12151:
 22552                           
 22553                           ; BSR set to: 1
 22554                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 22555  01334C  C192  FFD9         	movff	sprintf@sp,fsr2l
 22556  013350  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22557  013354  0E20               	movlw	32
 22558  013356  6EDF               	movwf	indf2,c
 22559                           
 22560                           ; BSR set to: 1
 22561  013358  0101               	movlb	1	; () banked
 22562  01335A  4B92               	infsnz	sprintf@sp& (0+255),f,b
 22563  01335C  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 22564                           
 22565                           ; BSR set to: 1
 22566                           ;doprnt.c: 1531: while(--width);
 22567  01335E  0101               	movlb	1	; () banked
 22568  013360  07B9               	decf	sprintf@width& (0+255),f,b
 22569  013362  A0D8               	btfss	status,0,c
 22570  013364  07BA               	decf	(sprintf@width+1)& (0+255),f,b
 22571  013366  0101               	movlb	1	; () banked
 22572  013368  51B9               	movf	sprintf@width& (0+255),w,b
 22573  01336A  0101               	movlb	1	; () banked
 22574  01336C  11BA               	iorwf	(sprintf@width+1)& (0+255),w,b
 22575  01336E  B4D8               	btfsc	status,2,c
 22576  013370  D002               	goto	l12157
 22577  013372  D7EC               	goto	l12151
 22578                           
 22579                           ; BSR set to: 1
 22580                           
 22581                           ; BSR set to: 1
 22582  013374  D000               	goto	l12157
 22583  013376                     l12157:
 22584                           
 22585                           ; BSR set to: 1
 22586  013376  C194  FFF6         	movff	sprintf@f,tblptrl
 22587  01337A  C195  FFF7         	movff	sprintf@f+1,tblptrh
 22588  01337E  0101               	movlb	1	; () banked
 22589  013380  4B94               	infsnz	sprintf@f& (0+255),f,b
 22590  013382  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 22591  013384                     	if	0	;tblptru may be non-zero
 22592  013384                     	endif
 22593  013384                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22594  013384  0E00               	movlw	low (__mediumconst shr (0+16))
 22595  013386  6EF8               	movwf	tblptru,c
 22596  013388                     	endif
 22597  013388  0008               	tblrd		*
 22598  01338A  CFF5 F1BB          	movff	tablat,sprintf@c
 22599  01338E  0101               	movlb	1	; () banked
 22600  013390  51BB               	movf	sprintf@c& (0+255),w,b
 22601  013392  B4D8               	btfsc	status,2,c
 22602  013394  D003               	goto	l12159
 22603  013396  EF8F  F093         	goto	l11805
 22604                           
 22605                           ; BSR set to: 1
 22606  01339A  D000               	goto	l12159
 22607  01339C                     l12159:
 22608                           
 22609                           ; BSR set to: 1
 22610                           ;doprnt.c: 1538: *sp = 0;
 22611  01339C  C192  FFD9         	movff	sprintf@sp,fsr2l
 22612  0133A0  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22613  0133A4  0E00               	movlw	0
 22614  0133A6  6EDF               	movwf	indf2,c
 22615  0133A8  0012               	return	
 22616                           
 22617                           ; BSR set to: 1
 22618                           
 22619                           ; BSR set to: 1
 22620                           ;doprnt.c: 1540: return 0;
 22621                           ;	Return value of _sprintf is never used
 22622  0133AA  0012               	return		;funcret
 22623  0133AC                     __end_of_sprintf:
 22624                           	opt stack 0
 22625                           tblptru	equ	0xFF8
 22626                           tblptrh	equ	0xFF7
 22627                           tblptrl	equ	0xFF6
 22628                           tablat	equ	0xFF5
 22629                           prodh	equ	0xFF4
 22630                           prodl	equ	0xFF3
 22631                           intcon	equ	0xFF2
 22632                           intcon2	equ	0xFF1
 22633                           postinc0	equ	0xFEE
 22634                           plusw0	equ	0xFEB
 22635                           wreg	equ	0xFE8
 22636                           indf1	equ	0xFE7
 22637                           postdec1	equ	0xFE5
 22638                           fsr1h	equ	0xFE2
 22639                           fsr1l	equ	0xFE1
 22640                           indf2	equ	0xFDF
 22641                           postinc2	equ	0xFDE
 22642                           postdec2	equ	0xFDD
 22643                           plusw2	equ	0xFDB
 22644                           fsr2h	equ	0xFDA
 22645                           fsr2l	equ	0xFD9
 22646                           status	equ	0xFD8
 22647                           
 22648 ;; *************** function _isdigit *****************
 22649 ;; Defined at:
 22650 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 22651 ;; Parameters:    Size  Location     Type
 22652 ;;  c               1    wreg     unsigned char 
 22653 ;; Auto vars:     Size  Location     Type
 22654 ;;  c               1   16[BANK1 ] unsigned char 
 22655 ;; Return value:  Size  Location     Type
 22656 ;;		None               void
 22657 ;; Registers used:
 22658 ;;		wreg, status,2, status,0
 22659 ;; Tracked objects:
 22660 ;;		On entry : 0/0
 22661 ;;		On exit  : 0/0
 22662 ;;		Unchanged: 0/0
 22663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22665 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22666 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22667 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 22668 ;;Total ram usage:        3 bytes
 22669 ;; Hardware stack levels used:    1
 22670 ;; Hardware stack levels required when called:    6
 22671 ;; This function calls:
 22672 ;;		Nothing
 22673 ;; This function is called by:
 22674 ;;		_sprintf
 22675 ;; This function uses a non-reentrant model
 22676 ;;
 22677                           
 22678                           	psect	text39
 22679  017D12                     __ptext39:
 22680                           	opt stack 0
 22681  017D12                     _isdigit:
 22682                           	opt stack 22
 22683                           
 22684                           ; BSR set to: 1
 22685                           ;incstack = 0
 22686                           ;isdigit@c stored from wreg
 22687  017D12  0101               	movlb	1	; () banked
 22688  017D14  6F7E               	movwf	isdigit@c& (0+255),b
 22689                           
 22690                           ; BSR set to: 1
 22691  017D16  0E00               	movlw	0
 22692  017D18  0101               	movlb	1	; () banked
 22693  017D1A  6F7D               	movwf	_isdigit$3120& (0+255),b
 22694                           
 22695                           ; BSR set to: 1
 22696  017D1C  0E3A               	movlw	58
 22697  017D1E  0101               	movlb	1	; () banked
 22698  017D20  617E               	cpfslt	isdigit@c& (0+255),b
 22699  017D22  D008               	goto	l11549
 22700                           
 22701                           ; BSR set to: 1
 22702  017D24  0E2F               	movlw	47
 22703  017D26  0101               	movlb	1	; () banked
 22704  017D28  657E               	cpfsgt	isdigit@c& (0+255),b
 22705  017D2A  D004               	goto	l11549
 22706                           
 22707                           ; BSR set to: 1
 22708  017D2C  0E01               	movlw	1
 22709  017D2E  0101               	movlb	1	; () banked
 22710  017D30  6F7D               	movwf	_isdigit$3120& (0+255),b
 22711  017D32  D000               	goto	l11549
 22712  017D34                     l11549:
 22713                           
 22714                           ; BSR set to: 1
 22715  017D34  C17D  F17C         	movff	_isdigit$3120,??_isdigit
 22716  017D38  0101               	movlb	1	; () banked
 22717  017D3A  317C               	rrcf	??_isdigit& (0+255),w,b
 22718  017D3C  0012               	return	
 22719                           
 22720                           ; BSR set to: 1
 22721                           
 22722                           ; BSR set to: 1
 22723  017D3E  0012               	return		;funcret
 22724  017D40                     __end_of_isdigit:
 22725                           	opt stack 0
 22726                           tblptru	equ	0xFF8
 22727                           tblptrh	equ	0xFF7
 22728                           tblptrl	equ	0xFF6
 22729                           tablat	equ	0xFF5
 22730                           prodh	equ	0xFF4
 22731                           prodl	equ	0xFF3
 22732                           intcon	equ	0xFF2
 22733                           intcon2	equ	0xFF1
 22734                           postinc0	equ	0xFEE
 22735                           plusw0	equ	0xFEB
 22736                           wreg	equ	0xFE8
 22737                           indf1	equ	0xFE7
 22738                           postdec1	equ	0xFE5
 22739                           fsr1h	equ	0xFE2
 22740                           fsr1l	equ	0xFE1
 22741                           indf2	equ	0xFDF
 22742                           postinc2	equ	0xFDE
 22743                           postdec2	equ	0xFDD
 22744                           plusw2	equ	0xFDB
 22745                           fsr2h	equ	0xFDA
 22746                           fsr2l	equ	0xFD9
 22747                           status	equ	0xFD8
 22748                           
 22749 ;; *************** function ___wmul *****************
 22750 ;; Defined at:
 22751 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 22752 ;; Parameters:    Size  Location     Type
 22753 ;;  multiplier      2   14[BANK1 ] unsigned int 
 22754 ;;  multiplicand    2   16[BANK1 ] unsigned int 
 22755 ;; Auto vars:     Size  Location     Type
 22756 ;;  product         2   18[BANK1 ] unsigned int 
 22757 ;; Return value:  Size  Location     Type
 22758 ;;                  2   14[BANK1 ] unsigned int 
 22759 ;; Registers used:
 22760 ;;		wreg, status,2, status,0, prodl, prodh
 22761 ;; Tracked objects:
 22762 ;;		On entry : 0/0
 22763 ;;		On exit  : 0/0
 22764 ;;		Unchanged: 0/0
 22765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22766 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22767 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22769 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 22770 ;;Total ram usage:        6 bytes
 22771 ;; Hardware stack levels used:    1
 22772 ;; Hardware stack levels required when called:    6
 22773 ;; This function calls:
 22774 ;;		Nothing
 22775 ;; This function is called by:
 22776 ;;		_SetFreq
 22777 ;;		_sprintf
 22778 ;; This function uses a non-reentrant model
 22779 ;;
 22780                           
 22781                           	psect	text40
 22782  017B78                     __ptext40:
 22783                           	opt stack 0
 22784  017B78                     ___wmul:
 22785                           	opt stack 22
 22786                           
 22787                           ; BSR set to: 1
 22788                           ;incstack = 0
 22789  017B78  0101               	movlb	1	; () banked
 22790  017B7A  517C               	movf	___wmul@multiplier& (0+255),w,b
 22791  017B7C  0101               	movlb	1	; () banked
 22792  017B7E  037E               	mulwf	___wmul@multiplicand& (0+255),b
 22793  017B80  CFF3 F180          	movff	prodl,___wmul@product
 22794  017B84  CFF4 F181          	movff	prodh,___wmul@product+1
 22795  017B88  0101               	movlb	1	; () banked
 22796  017B8A  517C               	movf	___wmul@multiplier& (0+255),w,b
 22797  017B8C  0101               	movlb	1	; () banked
 22798  017B8E  037F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 22799  017B90  50F3               	movf	prodl,w,c
 22800  017B92  0101               	movlb	1	; () banked
 22801  017B94  2781               	addwf	(___wmul@product+1)& (0+255),f,b
 22802  017B96  0101               	movlb	1	; () banked
 22803  017B98  517D               	movf	(___wmul@multiplier+1)& (0+255),w,b
 22804  017B9A  0101               	movlb	1	; () banked
 22805  017B9C  037E               	mulwf	___wmul@multiplicand& (0+255),b
 22806  017B9E  50F3               	movf	prodl,w,c
 22807  017BA0  0101               	movlb	1	; () banked
 22808  017BA2  2781               	addwf	(___wmul@product+1)& (0+255),f,b
 22809                           
 22810                           ; BSR set to: 1
 22811  017BA4  C180  F17C         	movff	___wmul@product,?___wmul
 22812  017BA8  C181  F17D         	movff	___wmul@product+1,?___wmul+1
 22813  017BAC  0012               	return	
 22814                           
 22815                           ; BSR set to: 1
 22816                           
 22817                           ; BSR set to: 1
 22818  017BAE  0012               	return		;funcret
 22819  017BB0                     __end_of___wmul:
 22820                           	opt stack 0
 22821                           tblptru	equ	0xFF8
 22822                           tblptrh	equ	0xFF7
 22823                           tblptrl	equ	0xFF6
 22824                           tablat	equ	0xFF5
 22825                           prodh	equ	0xFF4
 22826                           prodl	equ	0xFF3
 22827                           intcon	equ	0xFF2
 22828                           intcon2	equ	0xFF1
 22829                           postinc0	equ	0xFEE
 22830                           plusw0	equ	0xFEB
 22831                           wreg	equ	0xFE8
 22832                           indf1	equ	0xFE7
 22833                           postdec1	equ	0xFE5
 22834                           fsr1h	equ	0xFE2
 22835                           fsr1l	equ	0xFE1
 22836                           indf2	equ	0xFDF
 22837                           postinc2	equ	0xFDE
 22838                           postdec2	equ	0xFDD
 22839                           plusw2	equ	0xFDB
 22840                           fsr2h	equ	0xFDA
 22841                           fsr2l	equ	0xFD9
 22842                           status	equ	0xFD8
 22843                           
 22844 ;; *************** function ___llmod *****************
 22845 ;; Defined at:
 22846 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
 22847 ;; Parameters:    Size  Location     Type
 22848 ;;  dividend        4   27[BANK1 ] unsigned long 
 22849 ;;  divisor         4   31[BANK1 ] unsigned long 
 22850 ;; Auto vars:     Size  Location     Type
 22851 ;;  counter         1   35[BANK1 ] unsigned char 
 22852 ;; Return value:  Size  Location     Type
 22853 ;;                  4   27[BANK1 ] unsigned long 
 22854 ;; Registers used:
 22855 ;;		wreg, status,2, status,0
 22856 ;; Tracked objects:
 22857 ;;		On entry : 0/0
 22858 ;;		On exit  : 0/0
 22859 ;;		Unchanged: 0/0
 22860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22861 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 22862 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22864 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 22865 ;;Total ram usage:        9 bytes
 22866 ;; Hardware stack levels used:    1
 22867 ;; Hardware stack levels required when called:    6
 22868 ;; This function calls:
 22869 ;;		Nothing
 22870 ;; This function is called by:
 22871 ;;		_sprintf
 22872 ;; This function uses a non-reentrant model
 22873 ;;
 22874                           
 22875                           	psect	text41
 22876  016932                     __ptext41:
 22877                           	opt stack 0
 22878  016932                     ___llmod:
 22879                           	opt stack 22
 22880                           
 22881                           ; BSR set to: 1
 22882                           ;incstack = 0
 22883  016932  0101               	movlb	1	; () banked
 22884  016934  518D               	movf	___llmod@divisor& (0+255),w,b
 22885  016936  0101               	movlb	1	; () banked
 22886  016938  118E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 22887  01693A  0101               	movlb	1	; () banked
 22888  01693C  118F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 22889  01693E  0101               	movlb	1	; () banked
 22890  016940  1190               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 22891  016942  B4D8               	btfsc	status,2,c
 22892  016944  D03F               	goto	l2359
 22893                           
 22894                           ; BSR set to: 1
 22895  016946  0E01               	movlw	1
 22896  016948  0101               	movlb	1	; () banked
 22897  01694A  6F91               	movwf	___llmod@counter& (0+255),b
 22898  01694C  D009               	goto	l11623
 22899  01694E                     l11621:
 22900                           
 22901                           ; BSR set to: 1
 22902  01694E  0101               	movlb	1	; () banked
 22903  016950  90D8               	bcf	status,0,c
 22904  016952  378D               	rlcf	___llmod@divisor& (0+255),f,b
 22905  016954  378E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 22906  016956  378F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 22907  016958  3790               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 22908  01695A  0101               	movlb	1	; () banked
 22909  01695C  2B91               	incf	___llmod@counter& (0+255),f,b
 22910  01695E  D000               	goto	l11623
 22911  016960                     l11623:
 22912                           
 22913                           ; BSR set to: 1
 22914  016960  0101               	movlb	1	; () banked
 22915  016962  BF90               	btfsc	(___llmod@divisor+3)& (0+255),7,b
 22916  016964  D002               	goto	l11625
 22917  016966  D7F3               	goto	l11621
 22918                           
 22919                           ; BSR set to: 1
 22920  016968  D000               	goto	l11625
 22921  01696A                     l11625:
 22922                           
 22923                           ; BSR set to: 1
 22924  01696A  0101               	movlb	1	; () banked
 22925  01696C  518D               	movf	___llmod@divisor& (0+255),w,b
 22926  01696E  0101               	movlb	1	; () banked
 22927  016970  5D89               	subwf	___llmod@dividend& (0+255),w,b
 22928  016972  0101               	movlb	1	; () banked
 22929  016974  518E               	movf	(___llmod@divisor+1)& (0+255),w,b
 22930  016976  0101               	movlb	1	; () banked
 22931  016978  598A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 22932  01697A  0101               	movlb	1	; () banked
 22933  01697C  518F               	movf	(___llmod@divisor+2)& (0+255),w,b
 22934  01697E  0101               	movlb	1	; () banked
 22935  016980  598B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 22936  016982  0101               	movlb	1	; () banked
 22937  016984  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
 22938  016986  0101               	movlb	1	; () banked
 22939  016988  598C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 22940  01698A  A0D8               	btfss	status,0,c
 22941  01698C  D011               	goto	l11629
 22942                           
 22943                           ; BSR set to: 1
 22944  01698E  0101               	movlb	1	; () banked
 22945  016990  518D               	movf	___llmod@divisor& (0+255),w,b
 22946  016992  0101               	movlb	1	; () banked
 22947  016994  5F89               	subwf	___llmod@dividend& (0+255),f,b
 22948  016996  0101               	movlb	1	; () banked
 22949  016998  518E               	movf	(___llmod@divisor+1)& (0+255),w,b
 22950  01699A  0101               	movlb	1	; () banked
 22951  01699C  5B8A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 22952  01699E  0101               	movlb	1	; () banked
 22953  0169A0  518F               	movf	(___llmod@divisor+2)& (0+255),w,b
 22954  0169A2  0101               	movlb	1	; () banked
 22955  0169A4  5B8B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 22956  0169A6  0101               	movlb	1	; () banked
 22957  0169A8  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
 22958  0169AA  0101               	movlb	1	; () banked
 22959  0169AC  5B8C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 22960  0169AE  D000               	goto	l11629
 22961  0169B0                     l11629:
 22962                           
 22963                           ; BSR set to: 1
 22964  0169B0  0101               	movlb	1	; () banked
 22965  0169B2  90D8               	bcf	status,0,c
 22966  0169B4  3390               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 22967  0169B6  338F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 22968  0169B8  338E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 22969  0169BA  338D               	rrcf	___llmod@divisor& (0+255),f,b
 22970                           
 22971                           ; BSR set to: 1
 22972  0169BC  0101               	movlb	1	; () banked
 22973  0169BE  2F91               	decfsz	___llmod@counter& (0+255),f,b
 22974  0169C0  D7D4               	goto	l11625
 22975  0169C2  D000               	goto	l2359
 22976  0169C4                     l2359:
 22977                           
 22978                           ; BSR set to: 1
 22979  0169C4  C189  F189         	movff	___llmod@dividend,?___llmod
 22980  0169C8  C18A  F18A         	movff	___llmod@dividend+1,?___llmod+1
 22981  0169CC  C18B  F18B         	movff	___llmod@dividend+2,?___llmod+2
 22982  0169D0  C18C  F18C         	movff	___llmod@dividend+3,?___llmod+3
 22983                           
 22984                           ; BSR set to: 1
 22985  0169D4  0012               	return		;funcret
 22986  0169D6                     __end_of___llmod:
 22987                           	opt stack 0
 22988                           tblptru	equ	0xFF8
 22989                           tblptrh	equ	0xFF7
 22990                           tblptrl	equ	0xFF6
 22991                           tablat	equ	0xFF5
 22992                           prodh	equ	0xFF4
 22993                           prodl	equ	0xFF3
 22994                           intcon	equ	0xFF2
 22995                           intcon2	equ	0xFF1
 22996                           postinc0	equ	0xFEE
 22997                           plusw0	equ	0xFEB
 22998                           wreg	equ	0xFE8
 22999                           indf1	equ	0xFE7
 23000                           postdec1	equ	0xFE5
 23001                           fsr1h	equ	0xFE2
 23002                           fsr1l	equ	0xFE1
 23003                           indf2	equ	0xFDF
 23004                           postinc2	equ	0xFDE
 23005                           postdec2	equ	0xFDD
 23006                           plusw2	equ	0xFDB
 23007                           fsr2h	equ	0xFDA
 23008                           fsr2l	equ	0xFD9
 23009                           status	equ	0xFD8
 23010                           
 23011 ;; *************** function _UARTstringWAIT *****************
 23012 ;; Defined at:
 23013 ;;		line 296 in file "UART.c"
 23014 ;; Parameters:    Size  Location     Type
 23015 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 23016 ;;		 -> STR_34(18), STR_33(17), STR_32(24), STR_31(23), 
 23017 ;; Auto vars:     Size  Location     Type
 23018 ;;		None
 23019 ;; Return value:  Size  Location     Type
 23020 ;;		None               void
 23021 ;; Registers used:
 23022 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23023 ;; Tracked objects:
 23024 ;;		On entry : 0/0
 23025 ;;		On exit  : 0/0
 23026 ;;		Unchanged: 0/0
 23027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23028 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23031 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23032 ;;Total ram usage:        2 bytes
 23033 ;; Hardware stack levels used:    1
 23034 ;; Hardware stack levels required when called:    8
 23035 ;; This function calls:
 23036 ;;		_UARTchar
 23037 ;;		_delayUS
 23038 ;; This function is called by:
 23039 ;;		_SetBaud
 23040 ;; This function uses a non-reentrant model
 23041 ;;
 23042                           
 23043                           	psect	text42
 23044  0172B4                     __ptext42:
 23045                           	opt stack 0
 23046  0172B4                     _UARTstringWAIT:
 23047                           	opt stack 20
 23048  0172B4                     
 23049                           ;UART.c: 299: {
 23050                           ;UART.c: 300: delayUS(5000);
 23051  0172B4  0E88               	movlw	136
 23052  0172B6  0101               	movlb	1	; () banked
 23053  0172B8  6F7C               	movwf	delayUS@US& (0+255),b
 23054  0172BA  0E13               	movlw	19
 23055  0172BC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 23056  0172BE  0E00               	movlw	0
 23057  0172C0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 23058  0172C2  0E00               	movlw	0
 23059  0172C4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 23060  0172C6  EC38  F0BA         	call	_delayUS	;wreg free
 23061                           
 23062                           ;UART.c: 301: if(*data != 0)
 23063  0172CA  C187  FFF6         	movff	UARTstringWAIT@data,tblptrl
 23064  0172CE  C188  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 23065  0172D2                     	if	0	;tblptru may be non-zero
 23066  0172D2                     	endif
 23067  0172D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23068  0172D2  0E00               	movlw	low (__mediumconst shr (0+16))
 23069  0172D4  6EF8               	movwf	tblptru,c
 23070  0172D6                     	endif
 23071  0172D6  0008               	tblrd		*
 23072  0172D8  50F5               	movf	tablat,w,c
 23073  0172DA  0900               	iorlw	0
 23074  0172DC  B4D8               	btfsc	status,2,c
 23075  0172DE  D015               	goto	l11801
 23076                           
 23077                           ;UART.c: 302: {
 23078                           ;UART.c: 303: UARTchar((unsigned char) *data, 0, 0);
 23079  0172E0  0E00               	movlw	0
 23080  0172E2  0101               	movlb	1	; () banked
 23081  0172E4  6F83               	movwf	UARTchar@NinethBit_override& (0+255),b
 23082  0172E6  0E00               	movlw	0
 23083  0172E8  0101               	movlb	1	; () banked
 23084  0172EA  6F84               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 23085  0172EC  C187  FFF6         	movff	UARTstringWAIT@data,tblptrl
 23086  0172F0  C188  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 23087  0172F4                     	if	0	;tblptru may be non-zero
 23088  0172F4                     	endif
 23089  0172F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23090  0172F4  0E00               	movlw	low (__mediumconst shr (0+16))
 23091  0172F6  6EF8               	movwf	tblptru,c
 23092  0172F8                     	endif
 23093  0172F8  0008               	tblrd		*
 23094  0172FA  50F5               	movf	tablat,w,c
 23095  0172FC  ECAC  F0B6         	call	_UARTchar
 23096                           
 23097                           ;UART.c: 304: while((!TXSTAbits.TRMT));
 23098  017300  D000               	goto	l542
 23099  017302                     l542:
 23100  017302  B2AC               	btfsc	4012,1,c	;volatile
 23101  017304  D002               	goto	l11801
 23102  017306  D7FD               	goto	l542
 23103  017308  D000               	goto	l11801
 23104  01730A                     l11801:
 23105                           
 23106                           ;UART.c: 305: }
 23107                           ;UART.c: 306: } while( *data++);
 23108  01730A  C187  FFF6         	movff	UARTstringWAIT@data,tblptrl
 23109  01730E  C188  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 23110  017312  0101               	movlb	1	; () banked
 23111  017314  4B87               	infsnz	UARTstringWAIT@data& (0+255),f,b
 23112  017316  2B88               	incf	(UARTstringWAIT@data+1)& (0+255),f,b
 23113  017318                     	if	0	;tblptru may be non-zero
 23114  017318                     	endif
 23115  017318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 23116  017318  0E00               	movlw	low (__mediumconst shr (0+16))
 23117  01731A  6EF8               	movwf	tblptru,c
 23118  01731C                     	endif
 23119  01731C  0008               	tblrd		*
 23120  01731E  50F5               	movf	tablat,w,c
 23121  017320  0900               	iorlw	0
 23122  017322  A4D8               	btfss	status,2,c
 23123  017324  D7C7               	goto	l11795
 23124                           
 23125                           ; BSR set to: 1
 23126                           
 23127                           ; BSR set to: 1
 23128  017326  0012               	return		;funcret
 23129  017328                     __end_of_UARTstringWAIT:
 23130                           	opt stack 0
 23131                           tblptru	equ	0xFF8
 23132                           tblptrh	equ	0xFF7
 23133                           tblptrl	equ	0xFF6
 23134                           tablat	equ	0xFF5
 23135                           prodh	equ	0xFF4
 23136                           prodl	equ	0xFF3
 23137                           intcon	equ	0xFF2
 23138                           intcon2	equ	0xFF1
 23139                           postinc0	equ	0xFEE
 23140                           plusw0	equ	0xFEB
 23141                           wreg	equ	0xFE8
 23142                           indf1	equ	0xFE7
 23143                           postdec1	equ	0xFE5
 23144                           fsr1h	equ	0xFE2
 23145                           fsr1l	equ	0xFE1
 23146                           indf2	equ	0xFDF
 23147                           postinc2	equ	0xFDE
 23148                           postdec2	equ	0xFDD
 23149                           plusw2	equ	0xFDB
 23150                           fsr2h	equ	0xFDA
 23151                           fsr2l	equ	0xFD9
 23152                           status	equ	0xFD8
 23153                           
 23154 ;; *************** function _SetMemoryParity *****************
 23155 ;; Defined at:
 23156 ;;		line 189 in file "EEPROM.c"
 23157 ;; Parameters:    Size  Location     Type
 23158 ;;  Parity          1    wreg     unsigned char 
 23159 ;; Auto vars:     Size  Location     Type
 23160 ;;  Parity          1   19[BANK1 ] unsigned char 
 23161 ;;  Test            1   18[BANK1 ] unsigned char 
 23162 ;; Return value:  Size  Location     Type
 23163 ;;                  1    wreg      unsigned char 
 23164 ;; Registers used:
 23165 ;;		wreg, status,2, status,0, cstack
 23166 ;; Tracked objects:
 23167 ;;		On entry : 0/0
 23168 ;;		On exit  : 0/0
 23169 ;;		Unchanged: 0/0
 23170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23172 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23174 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23175 ;;Total ram usage:        2 bytes
 23176 ;; Hardware stack levels used:    1
 23177 ;; Hardware stack levels required when called:    8
 23178 ;; This function calls:
 23179 ;;		_GetMemoryParity
 23180 ;;		_WriteEEPROM_1Byte
 23181 ;; This function is called by:
 23182 ;;		_main
 23183 ;;		_SetBaud
 23184 ;; This function uses a non-reentrant model
 23185 ;;
 23186                           
 23187                           	psect	text43
 23188  017BE6                     __ptext43:
 23189                           	opt stack 0
 23190  017BE6                     _SetMemoryParity:
 23191                           	opt stack 22
 23192                           
 23193                           ; BSR set to: 1
 23194                           ;incstack = 0
 23195                           ;SetMemoryParity@Parity stored from wreg
 23196  017BE6  0101               	movlb	1	; () banked
 23197  017BE8  6F81               	movwf	SetMemoryParity@Parity& (0+255),b
 23198                           
 23199                           ; BSR set to: 1
 23200                           ;EEPROM.c: 191: unsigned char Test;
 23201                           ;EEPROM.c: 193: WriteEEPROM_1Byte(4, Parity);
 23202  017BEA  0E00               	movlw	0
 23203  017BEC  0101               	movlb	1	; () banked
 23204  017BEE  6F7D               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 23205  017BF0  0E04               	movlw	4
 23206  017BF2  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 23207  017BF4  C181  F17E         	movff	SetMemoryParity@Parity,WriteEEPROM_1Byte@data
 23208  017BF8  EC00  F0BD         	call	_WriteEEPROM_1Byte	;wreg free
 23209                           
 23210                           ;EEPROM.c: 196: Test = GetMemoryParity();
 23211  017BFC  EC19  F0BF         	call	_GetMemoryParity	;wreg free
 23212  017C00  0101               	movlb	1	; () banked
 23213  017C02  6F80               	movwf	SetMemoryParity@Test& (0+255),b
 23214                           
 23215                           ; BSR set to: 1
 23216                           ;EEPROM.c: 198: if(Test == Parity)
 23217  017C04  0101               	movlb	1	; () banked
 23218  017C06  5181               	movf	SetMemoryParity@Parity& (0+255),w,b
 23219  017C08  0101               	movlb	1	; () banked
 23220  017C0A  1980               	xorwf	SetMemoryParity@Test& (0+255),w,b
 23221  017C0C  A4D8               	btfss	status,2,c
 23222  017C0E  D002               	goto	l11743
 23223                           
 23224                           ; BSR set to: 1
 23225                           ;EEPROM.c: 199: {
 23226                           ;EEPROM.c: 200: return 1;
 23227  017C10  0E01               	movlw	1
 23228                           
 23229                           ; BSR set to: 1
 23230  017C12  0012               	return	
 23231  017C14                     l11743:
 23232                           
 23233                           ; BSR set to: 1
 23234                           ;EEPROM.c: 201: }
 23235                           ;EEPROM.c: 202: return 0;
 23236  017C14  0E00               	movlw	0
 23237  017C16  0012               	return	
 23238                           
 23239                           ; BSR set to: 1
 23240                           
 23241                           ; BSR set to: 1
 23242  017C18  0012               	return		;funcret
 23243  017C1A                     __end_of_SetMemoryParity:
 23244                           	opt stack 0
 23245                           tblptru	equ	0xFF8
 23246                           tblptrh	equ	0xFF7
 23247                           tblptrl	equ	0xFF6
 23248                           tablat	equ	0xFF5
 23249                           prodh	equ	0xFF4
 23250                           prodl	equ	0xFF3
 23251                           intcon	equ	0xFF2
 23252                           intcon2	equ	0xFF1
 23253                           postinc0	equ	0xFEE
 23254                           plusw0	equ	0xFEB
 23255                           wreg	equ	0xFE8
 23256                           indf1	equ	0xFE7
 23257                           postdec1	equ	0xFE5
 23258                           fsr1h	equ	0xFE2
 23259                           fsr1l	equ	0xFE1
 23260                           indf2	equ	0xFDF
 23261                           postinc2	equ	0xFDE
 23262                           postdec2	equ	0xFDD
 23263                           plusw2	equ	0xFDB
 23264                           fsr2h	equ	0xFDA
 23265                           fsr2l	equ	0xFD9
 23266                           status	equ	0xFD8
 23267                           
 23268 ;; *************** function _GetMemoryParity *****************
 23269 ;; Defined at:
 23270 ;;		line 175 in file "EEPROM.c"
 23271 ;; Parameters:    Size  Location     Type
 23272 ;;		None
 23273 ;; Auto vars:     Size  Location     Type
 23274 ;;  Parity          1   17[BANK1 ] unsigned char 
 23275 ;; Return value:  Size  Location     Type
 23276 ;;                  1    wreg      unsigned char 
 23277 ;; Registers used:
 23278 ;;		wreg, status,2, status,0, cstack
 23279 ;; Tracked objects:
 23280 ;;		On entry : 0/0
 23281 ;;		On exit  : 0/0
 23282 ;;		Unchanged: 0/0
 23283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23285 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23287 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23288 ;;Total ram usage:        1 bytes
 23289 ;; Hardware stack levels used:    1
 23290 ;; Hardware stack levels required when called:    7
 23291 ;; This function calls:
 23292 ;;		_ReadEEPROM_1Byte
 23293 ;; This function is called by:
 23294 ;;		_main
 23295 ;;		_SetMemoryParity
 23296 ;; This function uses a non-reentrant model
 23297 ;;
 23298                           
 23299                           	psect	text44
 23300  017E32                     __ptext44:
 23301                           	opt stack 0
 23302  017E32                     _GetMemoryParity:
 23303                           	opt stack 22
 23304                           
 23305                           ;EEPROM.c: 177: unsigned char Parity;
 23306                           ;EEPROM.c: 179: Parity = ReadEEPROM_1Byte(4);
 23307                           
 23308                           ; BSR set to: 1
 23309                           ;incstack = 0
 23310  017E32  0E00               	movlw	0
 23311  017E34  0101               	movlb	1	; () banked
 23312  017E36  6F7D               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 23313  017E38  0E04               	movlw	4
 23314  017E3A  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 23315  017E3C  EC9E  F0BD         	call	_ReadEEPROM_1Byte	;wreg free
 23316  017E40  0101               	movlb	1	; () banked
 23317  017E42  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 23318  017E44  0101               	movlb	1	; () banked
 23319  017E46  6F7F               	movwf	GetMemoryParity@Parity& (0+255),b
 23320                           
 23321                           ; BSR set to: 1
 23322                           ;EEPROM.c: 181: return (Parity);
 23323  017E48  0101               	movlb	1	; () banked
 23324  017E4A  517F               	movf	GetMemoryParity@Parity& (0+255),w,b
 23325  017E4C  0012               	return	
 23326                           
 23327                           ; BSR set to: 1
 23328                           
 23329                           ; BSR set to: 1
 23330  017E4E  0012               	return		;funcret
 23331  017E50                     __end_of_GetMemoryParity:
 23332                           	opt stack 0
 23333                           tblptru	equ	0xFF8
 23334                           tblptrh	equ	0xFF7
 23335                           tblptrl	equ	0xFF6
 23336                           tablat	equ	0xFF5
 23337                           prodh	equ	0xFF4
 23338                           prodl	equ	0xFF3
 23339                           intcon	equ	0xFF2
 23340                           intcon2	equ	0xFF1
 23341                           postinc0	equ	0xFEE
 23342                           plusw0	equ	0xFEB
 23343                           wreg	equ	0xFE8
 23344                           indf1	equ	0xFE7
 23345                           postdec1	equ	0xFE5
 23346                           fsr1h	equ	0xFE2
 23347                           fsr1l	equ	0xFE1
 23348                           indf2	equ	0xFDF
 23349                           postinc2	equ	0xFDE
 23350                           postdec2	equ	0xFDD
 23351                           plusw2	equ	0xFDB
 23352                           fsr2h	equ	0xFDA
 23353                           fsr2l	equ	0xFD9
 23354                           status	equ	0xFD8
 23355                           
 23356 ;; *************** function _SetMemoryBaud *****************
 23357 ;; Defined at:
 23358 ;;		line 140 in file "EEPROM.c"
 23359 ;; Parameters:    Size  Location     Type
 23360 ;;  Baud            4   49[BANK1 ] unsigned long 
 23361 ;; Auto vars:     Size  Location     Type
 23362 ;;  Test            4   57[BANK1 ] unsigned long 
 23363 ;;  BaudTempL       1   64[BANK1 ] unsigned char 
 23364 ;;  BaudTempML      1   63[BANK1 ] unsigned char 
 23365 ;;  BaudTempMH      1   62[BANK1 ] unsigned char 
 23366 ;;  BaudTempH       1   61[BANK1 ] unsigned char 
 23367 ;; Return value:  Size  Location     Type
 23368 ;;                  1    wreg      unsigned char 
 23369 ;; Registers used:
 23370 ;;		wreg, status,2, status,0, cstack
 23371 ;; Tracked objects:
 23372 ;;		On entry : 0/0
 23373 ;;		On exit  : 0/0
 23374 ;;		Unchanged: 0/0
 23375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23376 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23377 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 23378 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23379 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 23380 ;;Total ram usage:       16 bytes
 23381 ;; Hardware stack levels used:    1
 23382 ;; Hardware stack levels required when called:    8
 23383 ;; This function calls:
 23384 ;;		_GetMemoryBaud
 23385 ;;		_WriteEEPROM_1Byte
 23386 ;; This function is called by:
 23387 ;;		_main
 23388 ;;		_SetBaud
 23389 ;; This function uses a non-reentrant model
 23390 ;;
 23391                           
 23392                           	psect	text45
 23393  015F60                     __ptext45:
 23394                           	opt stack 0
 23395  015F60                     _SetMemoryBaud:
 23396                           	opt stack 22
 23397                           
 23398                           ;EEPROM.c: 142: unsigned char BaudTempH;
 23399                           ;EEPROM.c: 143: unsigned char BaudTempMH;
 23400                           ;EEPROM.c: 144: unsigned char BaudTempML;
 23401                           ;EEPROM.c: 145: unsigned char BaudTempL;
 23402                           ;EEPROM.c: 146: unsigned long Test;
 23403                           ;EEPROM.c: 148: BaudTempH = (unsigned char) ((Baud & 0XFF000000) >> 24);
 23404                           
 23405                           ; BSR set to: 1
 23406                           ;incstack = 0
 23407  015F60  0E00               	movlw	0
 23408  015F62  0101               	movlb	1	; () banked
 23409  015F64  159F               	andwf	SetMemoryBaud@Baud& (0+255),w,b
 23410  015F66  0101               	movlb	1	; () banked
 23411  015F68  6FA3               	movwf	??_SetMemoryBaud& (0+255),b
 23412  015F6A  0E00               	movlw	0
 23413  015F6C  0101               	movlb	1	; () banked
 23414  015F6E  15A0               	andwf	(SetMemoryBaud@Baud+1)& (0+255),w,b
 23415  015F70  0101               	movlb	1	; () banked
 23416  015F72  6FA4               	movwf	(??_SetMemoryBaud+1)& (0+255),b
 23417  015F74  0E00               	movlw	0
 23418  015F76  0101               	movlb	1	; () banked
 23419  015F78  15A1               	andwf	(SetMemoryBaud@Baud+2)& (0+255),w,b
 23420  015F7A  0101               	movlb	1	; () banked
 23421  015F7C  6FA5               	movwf	(??_SetMemoryBaud+2)& (0+255),b
 23422  015F7E  0EFF               	movlw	255
 23423  015F80  0101               	movlb	1	; () banked
 23424  015F82  15A2               	andwf	(SetMemoryBaud@Baud+3)& (0+255),w,b
 23425  015F84  0101               	movlb	1	; () banked
 23426  015F86  6FA6               	movwf	(??_SetMemoryBaud+3)& (0+255),b
 23427  015F88  0E19               	movlw	25
 23428  015F8A  D006               	goto	u14740
 23429  015F8C                     u14745:
 23430  015F8C  0101               	movlb	1	; () banked
 23431  015F8E  90D8               	bcf	status,0,c
 23432  015F90  33A6               	rrcf	(??_SetMemoryBaud+3)& (0+255),f,b
 23433  015F92  33A5               	rrcf	(??_SetMemoryBaud+2)& (0+255),f,b
 23434  015F94  33A4               	rrcf	(??_SetMemoryBaud+1)& (0+255),f,b
 23435  015F96  33A3               	rrcf	??_SetMemoryBaud& (0+255),f,b
 23436  015F98                     u14740:
 23437  015F98  2EE8               	decfsz	wreg,f,c
 23438  015F9A  D7F8               	goto	u14745
 23439  015F9C  0101               	movlb	1	; () banked
 23440  015F9E  51A3               	movf	??_SetMemoryBaud& (0+255),w,b
 23441  015FA0  0101               	movlb	1	; () banked
 23442  015FA2  6FAB               	movwf	SetMemoryBaud@BaudTempH& (0+255),b
 23443                           
 23444                           ; BSR set to: 1
 23445                           ;EEPROM.c: 149: BaudTempMH = (unsigned char) ((Baud & 0X00FF0000) >> 16);
 23446  015FA4  C1A1  F1AC         	movff	SetMemoryBaud@Baud+2,SetMemoryBaud@BaudTempMH
 23447                           
 23448                           ; BSR set to: 1
 23449                           ;EEPROM.c: 150: BaudTempML = (unsigned char) ((Baud & 0X0000FF00) >> 8);
 23450  015FA8  C1A0  F1AD         	movff	SetMemoryBaud@Baud+1,SetMemoryBaud@BaudTempML
 23451                           
 23452                           ; BSR set to: 1
 23453                           ;EEPROM.c: 151: BaudTempL = (unsigned char) (Baud & 0X000000FF);
 23454  015FAC  C19F  F1AE         	movff	SetMemoryBaud@Baud,SetMemoryBaud@BaudTempL
 23455                           
 23456                           ; BSR set to: 1
 23457                           ;EEPROM.c: 154: WriteEEPROM_1Byte(0, BaudTempH);
 23458  015FB0  0E00               	movlw	0
 23459  015FB2  0101               	movlb	1	; () banked
 23460  015FB4  6F7D               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 23461  015FB6  0E00               	movlw	0
 23462  015FB8  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 23463  015FBA  C1AB  F17E         	movff	SetMemoryBaud@BaudTempH,WriteEEPROM_1Byte@data
 23464  015FBE  EC00  F0BD         	call	_WriteEEPROM_1Byte	;wreg free
 23465                           
 23466                           ;EEPROM.c: 155: WriteEEPROM_1Byte(1, BaudTempMH);
 23467  015FC2  0E00               	movlw	0
 23468  015FC4  0101               	movlb	1	; () banked
 23469  015FC6  6F7D               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 23470  015FC8  0E01               	movlw	1
 23471  015FCA  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 23472  015FCC  C1AC  F17E         	movff	SetMemoryBaud@BaudTempMH,WriteEEPROM_1Byte@data
 23473  015FD0  EC00  F0BD         	call	_WriteEEPROM_1Byte	;wreg free
 23474                           
 23475                           ;EEPROM.c: 156: WriteEEPROM_1Byte(2, BaudTempML);
 23476  015FD4  0E00               	movlw	0
 23477  015FD6  0101               	movlb	1	; () banked
 23478  015FD8  6F7D               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 23479  015FDA  0E02               	movlw	2
 23480  015FDC  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 23481  015FDE  C1AD  F17E         	movff	SetMemoryBaud@BaudTempML,WriteEEPROM_1Byte@data
 23482  015FE2  EC00  F0BD         	call	_WriteEEPROM_1Byte	;wreg free
 23483                           
 23484                           ;EEPROM.c: 157: WriteEEPROM_1Byte(3, BaudTempL);
 23485  015FE6  0E00               	movlw	0
 23486  015FE8  0101               	movlb	1	; () banked
 23487  015FEA  6F7D               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 23488  015FEC  0E03               	movlw	3
 23489  015FEE  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 23490  015FF0  C1AE  F17E         	movff	SetMemoryBaud@BaudTempL,WriteEEPROM_1Byte@data
 23491  015FF4  EC00  F0BD         	call	_WriteEEPROM_1Byte	;wreg free
 23492                           
 23493                           ;EEPROM.c: 160: Test = GetMemoryBaud();
 23494  015FF8  EC7D  F0A9         	call	_GetMemoryBaud	;wreg free
 23495  015FFC  C17F  F1A7         	movff	?_GetMemoryBaud,SetMemoryBaud@Test
 23496  016000  C180  F1A8         	movff	?_GetMemoryBaud+1,SetMemoryBaud@Test+1
 23497  016004  C181  F1A9         	movff	?_GetMemoryBaud+2,SetMemoryBaud@Test+2
 23498  016008  C182  F1AA         	movff	?_GetMemoryBaud+3,SetMemoryBaud@Test+3
 23499                           
 23500                           ;EEPROM.c: 162: if(Test == Baud)
 23501  01600C  0101               	movlb	1	; () banked
 23502  01600E  519F               	movf	SetMemoryBaud@Baud& (0+255),w,b
 23503  016010  0101               	movlb	1	; () banked
 23504  016012  19A7               	xorwf	SetMemoryBaud@Test& (0+255),w,b
 23505  016014  E112               	bnz	l11731
 23506  016016  0101               	movlb	1	; () banked
 23507  016018  51A0               	movf	(SetMemoryBaud@Baud+1)& (0+255),w,b
 23508  01601A  0101               	movlb	1	; () banked
 23509  01601C  19A8               	xorwf	(SetMemoryBaud@Test+1)& (0+255),w,b
 23510  01601E  E10D               	bnz	l11731
 23511  016020  0101               	movlb	1	; () banked
 23512  016022  51A1               	movf	(SetMemoryBaud@Baud+2)& (0+255),w,b
 23513  016024  0101               	movlb	1	; () banked
 23514  016026  19A9               	xorwf	(SetMemoryBaud@Test+2)& (0+255),w,b
 23515  016028  E108               	bnz	l11731
 23516  01602A  0101               	movlb	1	; () banked
 23517  01602C  51A2               	movf	(SetMemoryBaud@Baud+3)& (0+255),w,b
 23518  01602E  0101               	movlb	1	; () banked
 23519  016030  19AA               	xorwf	(SetMemoryBaud@Test+3)& (0+255),w,b
 23520  016032  A4D8               	btfss	status,2,c
 23521  016034  D002               	goto	l11731
 23522                           
 23523                           ; BSR set to: 1
 23524                           ;EEPROM.c: 163: {
 23525                           ;EEPROM.c: 164: return 1;
 23526  016036  0E01               	movlw	1
 23527                           
 23528                           ; BSR set to: 1
 23529  016038  0012               	return	
 23530  01603A                     l11731:
 23531                           
 23532                           ; BSR set to: 1
 23533                           ;EEPROM.c: 165: }
 23534                           ;EEPROM.c: 166: return 0;
 23535  01603A  0E00               	movlw	0
 23536  01603C  0012               	return	
 23537                           
 23538                           ; BSR set to: 1
 23539                           
 23540                           ; BSR set to: 1
 23541  01603E  0012               	return		;funcret
 23542  016040                     __end_of_SetMemoryBaud:
 23543                           	opt stack 0
 23544                           tblptru	equ	0xFF8
 23545                           tblptrh	equ	0xFF7
 23546                           tblptrl	equ	0xFF6
 23547                           tablat	equ	0xFF5
 23548                           prodh	equ	0xFF4
 23549                           prodl	equ	0xFF3
 23550                           intcon	equ	0xFF2
 23551                           intcon2	equ	0xFF1
 23552                           postinc0	equ	0xFEE
 23553                           plusw0	equ	0xFEB
 23554                           wreg	equ	0xFE8
 23555                           indf1	equ	0xFE7
 23556                           postdec1	equ	0xFE5
 23557                           fsr1h	equ	0xFE2
 23558                           fsr1l	equ	0xFE1
 23559                           indf2	equ	0xFDF
 23560                           postinc2	equ	0xFDE
 23561                           postdec2	equ	0xFDD
 23562                           plusw2	equ	0xFDB
 23563                           fsr2h	equ	0xFDA
 23564                           fsr2l	equ	0xFD9
 23565                           status	equ	0xFD8
 23566                           
 23567 ;; *************** function _WriteEEPROM_1Byte *****************
 23568 ;; Defined at:
 23569 ;;		line 92 in file "EEPROM.c"
 23570 ;; Parameters:    Size  Location     Type
 23571 ;;  address         2   14[BANK1 ] unsigned int 
 23572 ;;  data            1   16[BANK1 ] unsigned char 
 23573 ;; Auto vars:     Size  Location     Type
 23574 ;;  GIEstatus       1   17[BANK1 ] unsigned char 
 23575 ;; Return value:  Size  Location     Type
 23576 ;;		None               void
 23577 ;; Registers used:
 23578 ;;		wreg, status,2, status,0, cstack
 23579 ;; Tracked objects:
 23580 ;;		On entry : 0/0
 23581 ;;		On exit  : 0/0
 23582 ;;		Unchanged: 0/0
 23583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23584 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 23585 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23587 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23588 ;;Total ram usage:        4 bytes
 23589 ;; Hardware stack levels used:    1
 23590 ;; Hardware stack levels required when called:    7
 23591 ;; This function calls:
 23592 ;;		_EEPROM_UNLOCK
 23593 ;; This function is called by:
 23594 ;;		_SetMemoryBaud
 23595 ;;		_SetMemoryParity
 23596 ;; This function uses a non-reentrant model
 23597 ;;
 23598                           
 23599                           	psect	text46
 23600  017A00                     __ptext46:
 23601                           	opt stack 0
 23602  017A00                     _WriteEEPROM_1Byte:
 23603                           	opt stack 22
 23604                           
 23605                           ;EEPROM.c: 94: unsigned char GIEstatus = INTCONbits.GIE;
 23606                           
 23607                           ; BSR set to: 1
 23608                           ;incstack = 0
 23609  017A00  0E00               	movlw	0
 23610  017A02  BEF2               	btfsc	intcon,7,c	;volatile
 23611  017A04  0E01               	movlw	1
 23612  017A06  0101               	movlb	1	; () banked
 23613  017A08  6F7F               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 23614                           
 23615                           ; BSR set to: 1
 23616                           ;EEPROM.c: 95: EEADRH = (unsigned char)((address & 0x300) >> 8);
 23617  017A0A  0101               	movlb	1	; () banked
 23618  017A0C  517D               	movf	(WriteEEPROM_1Byte@address+1)& (0+255),w,b
 23619  017A0E  0B03               	andlw	3
 23620  017A10  6EAA               	movwf	4010,c	;volatile
 23621                           
 23622                           ; BSR set to: 1
 23623                           ;EEPROM.c: 96: EEADR = (unsigned char)(address & 0xFF);
 23624  017A12  C17C  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 23625                           
 23626                           ; BSR set to: 1
 23627                           ;EEPROM.c: 97: EEDATA = data;
 23628  017A16  C17E  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 23629                           
 23630                           ; BSR set to: 1
 23631                           ;EEPROM.c: 98: EECON1bits.EEPGD = 0;
 23632  017A1A  9EA6               	bcf	4006,7,c	;volatile
 23633                           
 23634                           ; BSR set to: 1
 23635                           ;EEPROM.c: 99: EECON1bits.CFGS = 0;
 23636  017A1C  9CA6               	bcf	4006,6,c	;volatile
 23637                           
 23638                           ; BSR set to: 1
 23639                           ;EEPROM.c: 100: EECON1bits.WREN =1;
 23640  017A1E  84A6               	bsf	4006,2,c	;volatile
 23641                           
 23642                           ; BSR set to: 1
 23643                           ;EEPROM.c: 101: INTCONbits.GIE =0;
 23644  017A20  9EF2               	bcf	intcon,7,c	;volatile
 23645                           
 23646                           ; BSR set to: 1
 23647                           ;EEPROM.c: 102: EEPROM_UNLOCK();
 23648  017A22  EC5B  F0BF         	call	_EEPROM_UNLOCK	;wreg free
 23649                           
 23650                           ;EEPROM.c: 103: EECON1bits.WR =1;
 23651  017A26  82A6               	bsf	4006,1,c	;volatile
 23652                           
 23653                           ;EEPROM.c: 104: while(EECON1bits.WR);
 23654  017A28  D000               	goto	l1572
 23655  017A2A                     l1572:
 23656  017A2A  B2A6               	btfsc	4006,1,c	;volatile
 23657  017A2C  D7FE               	goto	l1572
 23658                           
 23659                           ;EEPROM.c: 105: EECON1bits.WREN =0;
 23660  017A2E  94A6               	bcf	4006,2,c	;volatile
 23661                           
 23662                           ;EEPROM.c: 106: if(GIEstatus)
 23663  017A30  0101               	movlb	1	; () banked
 23664  017A32  517F               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 23665  017A34  0101               	movlb	1	; () banked
 23666  017A36  B4D8               	btfsc	status,2,c
 23667  017A38  0012               	return	
 23668                           
 23669                           ; BSR set to: 1
 23670                           ;EEPROM.c: 107: {
 23671                           ;EEPROM.c: 108: INTCONbits.GIE =1;
 23672  017A3A  8EF2               	bsf	intcon,7,c	;volatile
 23673  017A3C  0012               	return	
 23674                           
 23675                           ; BSR set to: 1
 23676                           
 23677                           ; BSR set to: 1
 23678  017A3E  0012               	return		;funcret
 23679  017A40                     __end_of_WriteEEPROM_1Byte:
 23680                           	opt stack 0
 23681                           tblptru	equ	0xFF8
 23682                           tblptrh	equ	0xFF7
 23683                           tblptrl	equ	0xFF6
 23684                           tablat	equ	0xFF5
 23685                           prodh	equ	0xFF4
 23686                           prodl	equ	0xFF3
 23687                           intcon	equ	0xFF2
 23688                           intcon2	equ	0xFF1
 23689                           postinc0	equ	0xFEE
 23690                           plusw0	equ	0xFEB
 23691                           wreg	equ	0xFE8
 23692                           indf1	equ	0xFE7
 23693                           postdec1	equ	0xFE5
 23694                           fsr1h	equ	0xFE2
 23695                           fsr1l	equ	0xFE1
 23696                           indf2	equ	0xFDF
 23697                           postinc2	equ	0xFDE
 23698                           postdec2	equ	0xFDD
 23699                           plusw2	equ	0xFDB
 23700                           fsr2h	equ	0xFDA
 23701                           fsr2l	equ	0xFD9
 23702                           status	equ	0xFD8
 23703                           
 23704 ;; *************** function _EEPROM_UNLOCK *****************
 23705 ;; Defined at:
 23706 ;;		line 77 in file "EEPROM.c"
 23707 ;; Parameters:    Size  Location     Type
 23708 ;;		None
 23709 ;; Auto vars:     Size  Location     Type
 23710 ;;		None
 23711 ;; Return value:  Size  Location     Type
 23712 ;;		None               void
 23713 ;; Registers used:
 23714 ;;		wreg, status,2
 23715 ;; Tracked objects:
 23716 ;;		On entry : 0/0
 23717 ;;		On exit  : 0/0
 23718 ;;		Unchanged: 0/0
 23719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23724 ;;Total ram usage:        0 bytes
 23725 ;; Hardware stack levels used:    1
 23726 ;; Hardware stack levels required when called:    6
 23727 ;; This function calls:
 23728 ;;		Nothing
 23729 ;; This function is called by:
 23730 ;;		_WriteEEPROM_1Byte
 23731 ;; This function uses a non-reentrant model
 23732 ;;
 23733                           
 23734                           	psect	text47
 23735  017EB6                     __ptext47:
 23736                           	opt stack 0
 23737  017EB6                     _EEPROM_UNLOCK:
 23738                           	opt stack 22
 23739                           
 23740                           ;EEPROM.c: 79: EECON2 = 0x55;
 23741                           
 23742                           ; BSR set to: 1
 23743                           ;incstack = 0
 23744  017EB6  0E55               	movlw	85
 23745  017EB8  6EA7               	movwf	4007,c	;volatile
 23746                           
 23747                           ;EEPROM.c: 80: EECON2 = 0xAA;
 23748  017EBA  0EAA               	movlw	170
 23749  017EBC  6EA7               	movwf	4007,c	;volatile
 23750                           
 23751                           ;EEPROM.c: 81: EECON1bits.WR =1;
 23752  017EBE  82A6               	bsf	4006,1,c	;volatile
 23753                           
 23754                           ;EEPROM.c: 82: while(EECON1bits.WR);
 23755  017EC0  D000               	goto	l1566
 23756  017EC2                     l1566:
 23757  017EC2  B2A6               	btfsc	4006,1,c	;volatile
 23758  017EC4  D7FE               	goto	l1566
 23759                           
 23760                           ;EEPROM.c: 83: __nop();
 23761  017EC6  F000               	nop	
 23762                           
 23763                           ;EEPROM.c: 84: __nop();
 23764  017EC8  F000               	nop	
 23765  017ECA  0012               	return		;funcret
 23766  017ECC                     __end_of_EEPROM_UNLOCK:
 23767                           	opt stack 0
 23768                           tblptru	equ	0xFF8
 23769                           tblptrh	equ	0xFF7
 23770                           tblptrl	equ	0xFF6
 23771                           tablat	equ	0xFF5
 23772                           prodh	equ	0xFF4
 23773                           prodl	equ	0xFF3
 23774                           intcon	equ	0xFF2
 23775                           intcon2	equ	0xFF1
 23776                           postinc0	equ	0xFEE
 23777                           plusw0	equ	0xFEB
 23778                           wreg	equ	0xFE8
 23779                           indf1	equ	0xFE7
 23780                           postdec1	equ	0xFE5
 23781                           fsr1h	equ	0xFE2
 23782                           fsr1l	equ	0xFE1
 23783                           indf2	equ	0xFDF
 23784                           postinc2	equ	0xFDE
 23785                           postdec2	equ	0xFDD
 23786                           plusw2	equ	0xFDB
 23787                           fsr2h	equ	0xFDA
 23788                           fsr2l	equ	0xFD9
 23789                           status	equ	0xFD8
 23790                           
 23791 ;; *************** function _GetMemoryBaud *****************
 23792 ;; Defined at:
 23793 ;;		line 117 in file "EEPROM.c"
 23794 ;; Parameters:    Size  Location     Type
 23795 ;;		None
 23796 ;; Auto vars:     Size  Location     Type
 23797 ;;  baud            4   41[BANK1 ] unsigned long 
 23798 ;;  BaudTempL       1   48[BANK1 ] unsigned char 
 23799 ;;  BaudTempML      1   47[BANK1 ] unsigned char 
 23800 ;;  BaudTempMH      1   46[BANK1 ] unsigned char 
 23801 ;;  BaudTempH       1   45[BANK1 ] unsigned char 
 23802 ;; Return value:  Size  Location     Type
 23803 ;;                  4   17[BANK1 ] unsigned long 
 23804 ;; Registers used:
 23805 ;;		wreg, status,2, status,0, cstack
 23806 ;; Tracked objects:
 23807 ;;		On entry : 0/0
 23808 ;;		On exit  : 0/0
 23809 ;;		Unchanged: 0/0
 23810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23811 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23812 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 23813 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 23814 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
 23815 ;;Total ram usage:       32 bytes
 23816 ;; Hardware stack levels used:    1
 23817 ;; Hardware stack levels required when called:    7
 23818 ;; This function calls:
 23819 ;;		_ReadEEPROM_1Byte
 23820 ;; This function is called by:
 23821 ;;		_main
 23822 ;;		_SetMemoryBaud
 23823 ;; This function uses a non-reentrant model
 23824 ;;
 23825                           
 23826                           	psect	text48
 23827  0152FA                     __ptext48:
 23828                           	opt stack 0
 23829  0152FA                     _GetMemoryBaud:
 23830                           	opt stack 22
 23831                           
 23832                           ;EEPROM.c: 119: unsigned char BaudTempH;
 23833                           ;EEPROM.c: 120: unsigned char BaudTempMH;
 23834                           ;EEPROM.c: 121: unsigned char BaudTempML;
 23835                           ;EEPROM.c: 122: unsigned char BaudTempL;
 23836                           ;EEPROM.c: 123: unsigned long baud =0;
 23837                           
 23838                           ;incstack = 0
 23839  0152FA  0E00               	movlw	0
 23840  0152FC  0101               	movlb	1	; () banked
 23841  0152FE  6F97               	movwf	GetMemoryBaud@baud& (0+255),b
 23842  015300  0E00               	movlw	0
 23843  015302  6F98               	movwf	(GetMemoryBaud@baud+1)& (0+255),b
 23844  015304  0E00               	movlw	0
 23845  015306  6F99               	movwf	(GetMemoryBaud@baud+2)& (0+255),b
 23846  015308  0E00               	movlw	0
 23847  01530A  6F9A               	movwf	(GetMemoryBaud@baud+3)& (0+255),b
 23848                           
 23849                           ; BSR set to: 1
 23850                           ;EEPROM.c: 125: BaudTempH = ReadEEPROM_1Byte(0);
 23851  01530C  0E00               	movlw	0
 23852  01530E  0101               	movlb	1	; () banked
 23853  015310  6F7D               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 23854  015312  0E00               	movlw	0
 23855  015314  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 23856  015316  EC9E  F0BD         	call	_ReadEEPROM_1Byte	;wreg free
 23857  01531A  0101               	movlb	1	; () banked
 23858  01531C  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 23859  01531E  0101               	movlb	1	; () banked
 23860  015320  6F9B               	movwf	GetMemoryBaud@BaudTempH& (0+255),b
 23861                           
 23862                           ; BSR set to: 1
 23863                           ;EEPROM.c: 126: BaudTempMH = ReadEEPROM_1Byte(1);
 23864  015322  0E00               	movlw	0
 23865  015324  0101               	movlb	1	; () banked
 23866  015326  6F7D               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 23867  015328  0E01               	movlw	1
 23868  01532A  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 23869  01532C  EC9E  F0BD         	call	_ReadEEPROM_1Byte	;wreg free
 23870  015330  0101               	movlb	1	; () banked
 23871  015332  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 23872  015334  0101               	movlb	1	; () banked
 23873  015336  6F9C               	movwf	GetMemoryBaud@BaudTempMH& (0+255),b
 23874                           
 23875                           ; BSR set to: 1
 23876                           ;EEPROM.c: 127: BaudTempML = ReadEEPROM_1Byte(2);
 23877  015338  0E00               	movlw	0
 23878  01533A  0101               	movlb	1	; () banked
 23879  01533C  6F7D               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 23880  01533E  0E02               	movlw	2
 23881  015340  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 23882  015342  EC9E  F0BD         	call	_ReadEEPROM_1Byte	;wreg free
 23883  015346  0101               	movlb	1	; () banked
 23884  015348  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 23885  01534A  0101               	movlb	1	; () banked
 23886  01534C  6F9D               	movwf	GetMemoryBaud@BaudTempML& (0+255),b
 23887                           
 23888                           ; BSR set to: 1
 23889                           ;EEPROM.c: 128: BaudTempL = ReadEEPROM_1Byte(3);
 23890  01534E  0E00               	movlw	0
 23891  015350  0101               	movlb	1	; () banked
 23892  015352  6F7D               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 23893  015354  0E03               	movlw	3
 23894  015356  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 23895  015358  EC9E  F0BD         	call	_ReadEEPROM_1Byte	;wreg free
 23896  01535C  0101               	movlb	1	; () banked
 23897  01535E  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 23898  015360  0101               	movlb	1	; () banked
 23899  015362  6F9E               	movwf	GetMemoryBaud@BaudTempL& (0+255),b
 23900                           
 23901                           ; BSR set to: 1
 23902                           ;EEPROM.c: 130: baud = (((unsigned long) BaudTempH << 24) + ((unsigned long)BaudTempMH <
      +                          < 16) + ((unsigned long)BaudTempML << 8) + (unsigned long)BaudTempL);
 23903  015364  C19D  F183         	movff	GetMemoryBaud@BaudTempML,??_GetMemoryBaud
 23904  015368  0101               	movlb	1	; () banked
 23905  01536A  6B84               	clrf	(??_GetMemoryBaud+1)& (0+255),b
 23906  01536C  6B85               	clrf	(??_GetMemoryBaud+2)& (0+255),b
 23907  01536E  6B86               	clrf	(??_GetMemoryBaud+3)& (0+255),b
 23908  015370  C185  F186         	movff	??_GetMemoryBaud+2,??_GetMemoryBaud+3
 23909  015374  C184  F185         	movff	??_GetMemoryBaud+1,??_GetMemoryBaud+2
 23910  015378  C183  F184         	movff	??_GetMemoryBaud,??_GetMemoryBaud+1
 23911  01537C  0101               	movlb	1	; () banked
 23912  01537E  6B83               	clrf	??_GetMemoryBaud& (0+255),b
 23913  015380  C19C  F187         	movff	GetMemoryBaud@BaudTempMH,??_GetMemoryBaud+4
 23914  015384  0101               	movlb	1	; () banked
 23915  015386  6B88               	clrf	(??_GetMemoryBaud+5)& (0+255),b
 23916  015388  6B89               	clrf	(??_GetMemoryBaud+6)& (0+255),b
 23917  01538A  6B8A               	clrf	(??_GetMemoryBaud+7)& (0+255),b
 23918  01538C  C188  F18A         	movff	??_GetMemoryBaud+5,??_GetMemoryBaud+7
 23919  015390  C187  F189         	movff	??_GetMemoryBaud+4,??_GetMemoryBaud+6
 23920  015394  0101               	movlb	1	; () banked
 23921  015396  6B88               	clrf	(??_GetMemoryBaud+5)& (0+255),b
 23922  015398  6B87               	clrf	(??_GetMemoryBaud+4)& (0+255),b
 23923  01539A  C19B  F18B         	movff	GetMemoryBaud@BaudTempH,??_GetMemoryBaud+8
 23924  01539E  0101               	movlb	1	; () banked
 23925  0153A0  6B8C               	clrf	(??_GetMemoryBaud+9)& (0+255),b
 23926  0153A2  6B8D               	clrf	(??_GetMemoryBaud+10)& (0+255),b
 23927  0153A4  6B8E               	clrf	(??_GetMemoryBaud+11)& (0+255),b
 23928  0153A6  C18B  F18E         	movff	??_GetMemoryBaud+8,??_GetMemoryBaud+11
 23929  0153AA  0101               	movlb	1	; () banked
 23930  0153AC  6B8D               	clrf	(??_GetMemoryBaud+10)& (0+255),b
 23931  0153AE  6B8C               	clrf	(??_GetMemoryBaud+9)& (0+255),b
 23932  0153B0  6B8B               	clrf	(??_GetMemoryBaud+8)& (0+255),b
 23933  0153B2  0101               	movlb	1	; () banked
 23934  0153B4  5187               	movf	(??_GetMemoryBaud+4)& (0+255),w,b
 23935  0153B6  0101               	movlb	1	; () banked
 23936  0153B8  258B               	addwf	(??_GetMemoryBaud+8)& (0+255),w,b
 23937  0153BA  0101               	movlb	1	; () banked
 23938  0153BC  6F8F               	movwf	(??_GetMemoryBaud+12)& (0+255),b
 23939  0153BE  0101               	movlb	1	; () banked
 23940  0153C0  5188               	movf	(??_GetMemoryBaud+5)& (0+255),w,b
 23941  0153C2  0101               	movlb	1	; () banked
 23942  0153C4  218C               	addwfc	(??_GetMemoryBaud+9)& (0+255),w,b
 23943  0153C6  0101               	movlb	1	; () banked
 23944  0153C8  6F90               	movwf	(??_GetMemoryBaud+13)& (0+255),b
 23945  0153CA  0101               	movlb	1	; () banked
 23946  0153CC  5189               	movf	(??_GetMemoryBaud+6)& (0+255),w,b
 23947  0153CE  0101               	movlb	1	; () banked
 23948  0153D0  218D               	addwfc	(??_GetMemoryBaud+10)& (0+255),w,b
 23949  0153D2  0101               	movlb	1	; () banked
 23950  0153D4  6F91               	movwf	(??_GetMemoryBaud+14)& (0+255),b
 23951  0153D6  0101               	movlb	1	; () banked
 23952  0153D8  518A               	movf	(??_GetMemoryBaud+7)& (0+255),w,b
 23953  0153DA  0101               	movlb	1	; () banked
 23954  0153DC  218E               	addwfc	(??_GetMemoryBaud+11)& (0+255),w,b
 23955  0153DE  0101               	movlb	1	; () banked
 23956  0153E0  6F92               	movwf	(??_GetMemoryBaud+15)& (0+255),b
 23957  0153E2  0101               	movlb	1	; () banked
 23958  0153E4  5183               	movf	??_GetMemoryBaud& (0+255),w,b
 23959  0153E6  0101               	movlb	1	; () banked
 23960  0153E8  258F               	addwf	(??_GetMemoryBaud+12)& (0+255),w,b
 23961  0153EA  0101               	movlb	1	; () banked
 23962  0153EC  6F93               	movwf	(??_GetMemoryBaud+16)& (0+255),b
 23963  0153EE  0101               	movlb	1	; () banked
 23964  0153F0  5184               	movf	(??_GetMemoryBaud+1)& (0+255),w,b
 23965  0153F2  0101               	movlb	1	; () banked
 23966  0153F4  2190               	addwfc	(??_GetMemoryBaud+13)& (0+255),w,b
 23967  0153F6  0101               	movlb	1	; () banked
 23968  0153F8  6F94               	movwf	(??_GetMemoryBaud+17)& (0+255),b
 23969  0153FA  0101               	movlb	1	; () banked
 23970  0153FC  5185               	movf	(??_GetMemoryBaud+2)& (0+255),w,b
 23971  0153FE  0101               	movlb	1	; () banked
 23972  015400  2191               	addwfc	(??_GetMemoryBaud+14)& (0+255),w,b
 23973  015402  0101               	movlb	1	; () banked
 23974  015404  6F95               	movwf	(??_GetMemoryBaud+18)& (0+255),b
 23975  015406  0101               	movlb	1	; () banked
 23976  015408  5186               	movf	(??_GetMemoryBaud+3)& (0+255),w,b
 23977  01540A  0101               	movlb	1	; () banked
 23978  01540C  2192               	addwfc	(??_GetMemoryBaud+15)& (0+255),w,b
 23979  01540E  0101               	movlb	1	; () banked
 23980  015410  6F96               	movwf	(??_GetMemoryBaud+19)& (0+255),b
 23981  015412  0101               	movlb	1	; () banked
 23982  015414  519E               	movf	GetMemoryBaud@BaudTempL& (0+255),w,b
 23983  015416  0101               	movlb	1	; () banked
 23984  015418  2593               	addwf	(??_GetMemoryBaud+16)& (0+255),w,b
 23985  01541A  0101               	movlb	1	; () banked
 23986  01541C  6F97               	movwf	GetMemoryBaud@baud& (0+255),b
 23987  01541E  0E00               	movlw	0
 23988  015420  0101               	movlb	1	; () banked
 23989  015422  2194               	addwfc	(??_GetMemoryBaud+17)& (0+255),w,b
 23990  015424  0101               	movlb	1	; () banked
 23991  015426  6F98               	movwf	(GetMemoryBaud@baud+1)& (0+255),b
 23992  015428  0E00               	movlw	0
 23993  01542A  0101               	movlb	1	; () banked
 23994  01542C  2195               	addwfc	(??_GetMemoryBaud+18)& (0+255),w,b
 23995  01542E  0101               	movlb	1	; () banked
 23996  015430  6F99               	movwf	(GetMemoryBaud@baud+2)& (0+255),b
 23997  015432  0E00               	movlw	0
 23998  015434  0101               	movlb	1	; () banked
 23999  015436  2196               	addwfc	(??_GetMemoryBaud+19)& (0+255),w,b
 24000  015438  0101               	movlb	1	; () banked
 24001  01543A  6F9A               	movwf	(GetMemoryBaud@baud+3)& (0+255),b
 24002                           
 24003                           ; BSR set to: 1
 24004                           ;EEPROM.c: 131: __nop();
 24005  01543C  F000               	nop	
 24006                           
 24007                           ;EEPROM.c: 132: return baud;
 24008  01543E  C197  F17F         	movff	GetMemoryBaud@baud,?_GetMemoryBaud
 24009  015442  C198  F180         	movff	GetMemoryBaud@baud+1,?_GetMemoryBaud+1
 24010  015446  C199  F181         	movff	GetMemoryBaud@baud+2,?_GetMemoryBaud+2
 24011  01544A  C19A  F182         	movff	GetMemoryBaud@baud+3,?_GetMemoryBaud+3
 24012  01544E  0012               	return	
 24013  015450  0012               	return		;funcret
 24014  015452                     __end_of_GetMemoryBaud:
 24015                           	opt stack 0
 24016                           tblptru	equ	0xFF8
 24017                           tblptrh	equ	0xFF7
 24018                           tblptrl	equ	0xFF6
 24019                           tablat	equ	0xFF5
 24020                           prodh	equ	0xFF4
 24021                           prodl	equ	0xFF3
 24022                           intcon	equ	0xFF2
 24023                           intcon2	equ	0xFF1
 24024                           postinc0	equ	0xFEE
 24025                           plusw0	equ	0xFEB
 24026                           wreg	equ	0xFE8
 24027                           indf1	equ	0xFE7
 24028                           postdec1	equ	0xFE5
 24029                           fsr1h	equ	0xFE2
 24030                           fsr1l	equ	0xFE1
 24031                           indf2	equ	0xFDF
 24032                           postinc2	equ	0xFDE
 24033                           postdec2	equ	0xFDD
 24034                           plusw2	equ	0xFDB
 24035                           fsr2h	equ	0xFDA
 24036                           fsr2l	equ	0xFD9
 24037                           status	equ	0xFD8
 24038                           
 24039 ;; *************** function _ReadEEPROM_1Byte *****************
 24040 ;; Defined at:
 24041 ;;		line 52 in file "EEPROM.c"
 24042 ;; Parameters:    Size  Location     Type
 24043 ;;  address         2   14[BANK1 ] unsigned int 
 24044 ;; Auto vars:     Size  Location     Type
 24045 ;;  GIEstatus       1   16[BANK1 ] unsigned char 
 24046 ;; Return value:  Size  Location     Type
 24047 ;;                  2   14[BANK1 ] unsigned int 
 24048 ;; Registers used:
 24049 ;;		wreg, status,2, status,0
 24050 ;; Tracked objects:
 24051 ;;		On entry : 0/0
 24052 ;;		On exit  : 0/0
 24053 ;;		Unchanged: 0/0
 24054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24055 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24056 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24058 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 24059 ;;Total ram usage:        3 bytes
 24060 ;; Hardware stack levels used:    1
 24061 ;; Hardware stack levels required when called:    6
 24062 ;; This function calls:
 24063 ;;		Nothing
 24064 ;; This function is called by:
 24065 ;;		_GetMemoryBaud
 24066 ;;		_GetMemoryParity
 24067 ;; This function uses a non-reentrant model
 24068 ;;
 24069                           
 24070                           	psect	text49
 24071  017B3C                     __ptext49:
 24072                           	opt stack 0
 24073  017B3C                     _ReadEEPROM_1Byte:
 24074                           	opt stack 22
 24075                           
 24076                           ;EEPROM.c: 54: unsigned char GIEstatus = INTCONbits.GIE;
 24077                           
 24078                           ;incstack = 0
 24079  017B3C  0E00               	movlw	0
 24080  017B3E  BEF2               	btfsc	intcon,7,c	;volatile
 24081  017B40  0E01               	movlw	1
 24082  017B42  0101               	movlb	1	; () banked
 24083  017B44  6F7E               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 24084                           
 24085                           ; BSR set to: 1
 24086                           ;EEPROM.c: 55: EECON1bits.EEPGD = 0;
 24087  017B46  9EA6               	bcf	4006,7,c	;volatile
 24088                           
 24089                           ; BSR set to: 1
 24090                           ;EEPROM.c: 56: EECON1bits.CFGS = 0;
 24091  017B48  9CA6               	bcf	4006,6,c	;volatile
 24092                           
 24093                           ; BSR set to: 1
 24094                           ;EEPROM.c: 57: EEADRH = (unsigned char)((address & 0x300) >> 8);
 24095  017B4A  0101               	movlb	1	; () banked
 24096  017B4C  517D               	movf	(ReadEEPROM_1Byte@address+1)& (0+255),w,b
 24097  017B4E  0B03               	andlw	3
 24098  017B50  6EAA               	movwf	4010,c	;volatile
 24099                           
 24100                           ; BSR set to: 1
 24101                           ;EEPROM.c: 58: EEADR = (unsigned char)(address & 0xFF);
 24102  017B52  C17C  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 24103                           
 24104                           ; BSR set to: 1
 24105                           ;EEPROM.c: 59: INTCONbits.GIE =0;
 24106  017B56  9EF2               	bcf	intcon,7,c	;volatile
 24107                           
 24108                           ; BSR set to: 1
 24109                           ;EEPROM.c: 60: EECON1bits.RD = 1;
 24110  017B58  80A6               	bsf	4006,0,c	;volatile
 24111                           
 24112                           ;EEPROM.c: 61: while(EECON1bits.RD);
 24113  017B5A  D000               	goto	l1559
 24114  017B5C                     l1559:
 24115  017B5C  B0A6               	btfsc	4006,0,c	;volatile
 24116  017B5E  D7FE               	goto	l1559
 24117                           
 24118                           ;EEPROM.c: 62: __nop();
 24119  017B60  F000               	nop	
 24120                           
 24121                           ;EEPROM.c: 63: __nop();
 24122  017B62  F000               	nop	
 24123                           
 24124                           ;EEPROM.c: 64: if(GIEstatus)
 24125  017B64  0101               	movlb	1	; () banked
 24126  017B66  517E               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 24127  017B68  0101               	movlb	1	; () banked
 24128  017B6A  A4D8               	btfss	status,2,c
 24129                           
 24130                           ; BSR set to: 1
 24131                           ;EEPROM.c: 65: {
 24132                           ;EEPROM.c: 66: INTCONbits.GIE =1;
 24133  017B6C  8EF2               	bsf	intcon,7,c	;volatile
 24134                           
 24135                           ; BSR set to: 1
 24136                           ;EEPROM.c: 67: }
 24137                           ;EEPROM.c: 68: return (EEDATA);
 24138  017B6E  CFA8 F17C          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 24139  017B72  0101               	movlb	1	; () banked
 24140  017B74  6B7D               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 24141                           
 24142                           ; BSR set to: 1
 24143  017B76  0012               	return		;funcret
 24144  017B78                     __end_of_ReadEEPROM_1Byte:
 24145                           	opt stack 0
 24146                           tblptru	equ	0xFF8
 24147                           tblptrh	equ	0xFF7
 24148                           tblptrl	equ	0xFF6
 24149                           tablat	equ	0xFF5
 24150                           prodh	equ	0xFF4
 24151                           prodl	equ	0xFF3
 24152                           intcon	equ	0xFF2
 24153                           intcon2	equ	0xFF1
 24154                           postinc0	equ	0xFEE
 24155                           plusw0	equ	0xFEB
 24156                           wreg	equ	0xFE8
 24157                           indf1	equ	0xFE7
 24158                           postdec1	equ	0xFE5
 24159                           fsr1h	equ	0xFE2
 24160                           fsr1l	equ	0xFE1
 24161                           indf2	equ	0xFDF
 24162                           postinc2	equ	0xFDE
 24163                           postdec2	equ	0xFDD
 24164                           plusw2	equ	0xFDB
 24165                           fsr2h	equ	0xFDA
 24166                           fsr2l	equ	0xFD9
 24167                           status	equ	0xFD8
 24168                           
 24169 ;; *************** function _InitUART *****************
 24170 ;; Defined at:
 24171 ;;		line 69 in file "UART.c"
 24172 ;; Parameters:    Size  Location     Type
 24173 ;;  Baud            4   27[BANK1 ] unsigned long 
 24174 ;;  parity          1   31[BANK1 ] unsigned char 
 24175 ;; Auto vars:     Size  Location     Type
 24176 ;;  temp            4   40[BANK1 ] unsigned long 
 24177 ;;  spbrg           2   36[BANK1 ] unsigned int 
 24178 ;;  config          1   39[BANK1 ] unsigned char 
 24179 ;;  baudconfig      1   38[BANK1 ] unsigned char 
 24180 ;; Return value:  Size  Location     Type
 24181 ;;		None               void
 24182 ;; Registers used:
 24183 ;;		wreg, status,2, status,0, cstack
 24184 ;; Tracked objects:
 24185 ;;		On entry : 0/0
 24186 ;;		On exit  : 0/0
 24187 ;;		Unchanged: 0/0
 24188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24189 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 24190 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 24191 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 24192 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
 24193 ;;Total ram usage:       17 bytes
 24194 ;; Hardware stack levels used:    1
 24195 ;; Hardware stack levels required when called:    7
 24196 ;; This function calls:
 24197 ;;		_OpenUSART
 24198 ;;		_ReadUSART
 24199 ;;		___lldiv
 24200 ;;		_baudUSART
 24201 ;; This function is called by:
 24202 ;;		_main
 24203 ;;		_SetBaud
 24204 ;; This function uses a non-reentrant model
 24205 ;;
 24206                           
 24207                           	psect	text50
 24208  015010                     __ptext50:
 24209                           	opt stack 0
 24210  015010                     _InitUART:
 24211                           	opt stack 23
 24212                           
 24213                           ;UART.c: 71: unsigned long temp;
 24214                           ;UART.c: 72: unsigned char config;
 24215                           ;UART.c: 73: unsigned int spbrg;
 24216                           ;UART.c: 74: unsigned char baudconfig;
 24217                           ;UART.c: 84: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
 24218                           
 24219                           ; BSR set to: 1
 24220                           ;incstack = 0
 24221  015010  0E4F               	movlw	79
 24222  015012  16AB               	andwf	4011,f,c	;volatile
 24223  015014  9AAC               	bcf	4012,5,c	;volatile
 24224  015016  0ECF               	movlw	207
 24225  015018  169D               	andwf	3997,f,c	;volatile
 24226                           
 24227                           ;UART.c: 85: config =0;
 24228  01501A  0E00               	movlw	0
 24229  01501C  0101               	movlb	1	; () banked
 24230  01501E  6F95               	movwf	InitUART@config& (0+255),b
 24231                           
 24232                           ; BSR set to: 1
 24233                           ;UART.c: 86: baudconfig =0;
 24234  015020  0E00               	movlw	0
 24235  015022  0101               	movlb	1	; () banked
 24236  015024  6F94               	movwf	InitUART@baudconfig& (0+255),b
 24237                           
 24238                           ; BSR set to: 1
 24239                           ;UART.c: 87: BAUDCON =0;
 24240  015026  0E00               	movlw	0
 24241  015028  6EB8               	movwf	4024,c	;volatile
 24242                           
 24243                           ; BSR set to: 1
 24244                           ;UART.c: 91: config |= 0b01000000;
 24245  01502A  0101               	movlb	1	; () banked
 24246  01502C  8D95               	bsf	InitUART@config& (0+255),6,b
 24247                           
 24248                           ; BSR set to: 1
 24249                           ;UART.c: 92: config |= 0b00001000;
 24250  01502E  0101               	movlb	1	; () banked
 24251  015030  8795               	bsf	InitUART@config& (0+255),3,b
 24252                           
 24253                           ; BSR set to: 1
 24254                           ;UART.c: 94: config |= 0b00010000;
 24255  015032  0101               	movlb	1	; () banked
 24256  015034  8995               	bsf	InitUART@config& (0+255),4,b
 24257                           
 24258                           ; BSR set to: 1
 24259                           ;UART.c: 96: PARITY = parity;
 24260  015036  C18D  F10A         	movff	InitUART@parity,_PARITY
 24261                           
 24262                           ; BSR set to: 1
 24263                           ;UART.c: 97: BAUD = Baud;
 24264  01503A  C189  F1D3         	movff	InitUART@Baud,_BAUD
 24265  01503E  C18A  F1D4         	movff	InitUART@Baud+1,_BAUD+1
 24266  015042  C18B  F1D5         	movff	InitUART@Baud+2,_BAUD+2
 24267  015046  C18C  F1D6         	movff	InitUART@Baud+3,_BAUD+3
 24268                           
 24269                           ; BSR set to: 1
 24270                           ;UART.c: 98: if(parity)
 24271  01504A  0101               	movlb	1	; () banked
 24272  01504C  518D               	movf	InitUART@parity& (0+255),w,b
 24273  01504E  0101               	movlb	1	; () banked
 24274  015050  B4D8               	btfsc	status,2,c
 24275  015052  D003               	goto	l11771
 24276                           
 24277                           ; BSR set to: 1
 24278                           ;UART.c: 99: {
 24279                           ;UART.c: 100: config |= 0b00000010;
 24280  015054  0101               	movlb	1	; () banked
 24281  015056  8395               	bsf	InitUART@config& (0+255),1,b
 24282                           
 24283                           ;UART.c: 101: }
 24284  015058  D002               	goto	l485
 24285  01505A                     l11771:
 24286                           
 24287                           ; BSR set to: 1
 24288                           ;UART.c: 102: else
 24289                           ;UART.c: 103: {
 24290                           ;UART.c: 104: config &= ~0b00000010;
 24291  01505A  0101               	movlb	1	; () banked
 24292  01505C  9395               	bcf	InitUART@config& (0+255),1,b
 24293  01505E                     l485:
 24294                           
 24295                           ; BSR set to: 1
 24296                           ;UART.c: 105: }
 24297                           ;UART.c: 106: baudconfig |= 0b00001000;
 24298  01505E  0101               	movlb	1	; () banked
 24299  015060  8794               	bsf	InitUART@baudconfig& (0+255),3,b
 24300                           
 24301                           ; BSR set to: 1
 24302                           ;UART.c: 109: temp = (40960000L / Baud) - 1;
 24303  015062  0E00               	movlw	0
 24304  015064  0101               	movlb	1	; () banked
 24305  015066  6F7C               	movwf	___lldiv@dividend& (0+255),b
 24306  015068  0E00               	movlw	0
 24307  01506A  6F7D               	movwf	(___lldiv@dividend+1)& (0+255),b
 24308  01506C  0E71               	movlw	113
 24309  01506E  6F7E               	movwf	(___lldiv@dividend+2)& (0+255),b
 24310  015070  0E02               	movlw	2
 24311  015072  6F7F               	movwf	(___lldiv@dividend+3)& (0+255),b
 24312  015074  C189  F180         	movff	InitUART@Baud,___lldiv@divisor
 24313  015078  C18A  F181         	movff	InitUART@Baud+1,___lldiv@divisor+1
 24314  01507C  C18B  F182         	movff	InitUART@Baud+2,___lldiv@divisor+2
 24315  015080  C18C  F183         	movff	InitUART@Baud+3,___lldiv@divisor+3
 24316  015084  EC24  F0B2         	call	___lldiv	;wreg free
 24317  015088  0EFF               	movlw	255
 24318  01508A  0101               	movlb	1	; () banked
 24319  01508C  257C               	addwf	?___lldiv& (0+255),w,b
 24320  01508E  0101               	movlb	1	; () banked
 24321  015090  6F96               	movwf	InitUART@temp& (0+255),b
 24322  015092  0EFF               	movlw	255
 24323  015094  0101               	movlb	1	; () banked
 24324  015096  217D               	addwfc	(?___lldiv+1)& (0+255),w,b
 24325  015098  0101               	movlb	1	; () banked
 24326  01509A  6F97               	movwf	(InitUART@temp+1)& (0+255),b
 24327  01509C  0EFF               	movlw	255
 24328  01509E  0101               	movlb	1	; () banked
 24329  0150A0  217E               	addwfc	(?___lldiv+2)& (0+255),w,b
 24330  0150A2  0101               	movlb	1	; () banked
 24331  0150A4  6F98               	movwf	(InitUART@temp+2)& (0+255),b
 24332  0150A6  0EFF               	movlw	255
 24333  0150A8  0101               	movlb	1	; () banked
 24334  0150AA  217F               	addwfc	(?___lldiv+3)& (0+255),w,b
 24335  0150AC  0101               	movlb	1	; () banked
 24336  0150AE  6F99               	movwf	(InitUART@temp+3)& (0+255),b
 24337                           
 24338                           ; BSR set to: 1
 24339                           ;UART.c: 110: temp = (temp >> 2) - 1;
 24340  0150B0  C196  F18E         	movff	InitUART@temp,??_InitUART
 24341  0150B4  C197  F18F         	movff	InitUART@temp+1,??_InitUART+1
 24342  0150B8  C198  F190         	movff	InitUART@temp+2,??_InitUART+2
 24343  0150BC  C199  F191         	movff	InitUART@temp+3,??_InitUART+3
 24344  0150C0  0E03               	movlw	3
 24345  0150C2  D006               	goto	u14780
 24346  0150C4                     u14785:
 24347  0150C4  0101               	movlb	1	; () banked
 24348  0150C6  90D8               	bcf	status,0,c
 24349  0150C8  3391               	rrcf	(??_InitUART+3)& (0+255),f,b
 24350  0150CA  3390               	rrcf	(??_InitUART+2)& (0+255),f,b
 24351  0150CC  338F               	rrcf	(??_InitUART+1)& (0+255),f,b
 24352  0150CE  338E               	rrcf	??_InitUART& (0+255),f,b
 24353  0150D0                     u14780:
 24354  0150D0  2EE8               	decfsz	wreg,f,c
 24355  0150D2  D7F8               	goto	u14785
 24356  0150D4  0EFF               	movlw	255
 24357  0150D6  0101               	movlb	1	; () banked
 24358  0150D8  258E               	addwf	??_InitUART& (0+255),w,b
 24359  0150DA  0101               	movlb	1	; () banked
 24360  0150DC  6F96               	movwf	InitUART@temp& (0+255),b
 24361  0150DE  0EFF               	movlw	255
 24362  0150E0  0101               	movlb	1	; () banked
 24363  0150E2  218F               	addwfc	(??_InitUART+1)& (0+255),w,b
 24364  0150E4  0101               	movlb	1	; () banked
 24365  0150E6  6F97               	movwf	(InitUART@temp+1)& (0+255),b
 24366  0150E8  0EFF               	movlw	255
 24367  0150EA  0101               	movlb	1	; () banked
 24368  0150EC  2190               	addwfc	(??_InitUART+2)& (0+255),w,b
 24369  0150EE  0101               	movlb	1	; () banked
 24370  0150F0  6F98               	movwf	(InitUART@temp+2)& (0+255),b
 24371  0150F2  0EFF               	movlw	255
 24372  0150F4  0101               	movlb	1	; () banked
 24373  0150F6  2191               	addwfc	(??_InitUART+3)& (0+255),w,b
 24374  0150F8  0101               	movlb	1	; () banked
 24375  0150FA  6F99               	movwf	(InitUART@temp+3)& (0+255),b
 24376                           
 24377                           ; BSR set to: 1
 24378                           ;UART.c: 111: spbrg = (unsigned int)temp;
 24379  0150FC  C196  F192         	movff	InitUART@temp,InitUART@spbrg
 24380  015100  C197  F193         	movff	InitUART@temp+1,InitUART@spbrg+1
 24381                           
 24382                           ; BSR set to: 1
 24383                           ;UART.c: 113: OpenUSART(config, spbrg);
 24384  015104  C192  F17C         	movff	InitUART@spbrg,OpenUSART@spbrg
 24385  015108  C193  F17D         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 24386  01510C  0101               	movlb	1	; () banked
 24387  01510E  5195               	movf	InitUART@config& (0+255),w,b
 24388  015110  EC1F  F0B9         	call	_OpenUSART
 24389                           
 24390                           ;UART.c: 114: baudUSART(baudconfig);
 24391  015114  0101               	movlb	1	; () banked
 24392  015116  5194               	movf	InitUART@baudconfig& (0+255),w,b
 24393  015118  ECA7  F0BF         	call	_baudUSART
 24394                           
 24395                           ;UART.c: 115: temp = ReadUSART();
 24396  01511C  EC0D  F0BE         	call	_ReadUSART	;wreg free
 24397  015120  0101               	movlb	1	; () banked
 24398  015122  6F8E               	movwf	??_InitUART& (0+255),b
 24399  015124  0101               	movlb	1	; () banked
 24400  015126  518E               	movf	??_InitUART& (0+255),w,b
 24401  015128  0101               	movlb	1	; () banked
 24402  01512A  6F96               	movwf	InitUART@temp& (0+255),b
 24403  01512C  6B97               	clrf	(InitUART@temp+1)& (0+255),b
 24404  01512E  6B98               	clrf	(InitUART@temp+2)& (0+255),b
 24405  015130  6B99               	clrf	(InitUART@temp+3)& (0+255),b
 24406                           
 24407                           ; BSR set to: 1
 24408                           ;UART.c: 116: temp = ReadUSART();
 24409  015132  EC0D  F0BE         	call	_ReadUSART	;wreg free
 24410  015136  0101               	movlb	1	; () banked
 24411  015138  6F8E               	movwf	??_InitUART& (0+255),b
 24412  01513A  0101               	movlb	1	; () banked
 24413  01513C  518E               	movf	??_InitUART& (0+255),w,b
 24414  01513E  0101               	movlb	1	; () banked
 24415  015140  6F96               	movwf	InitUART@temp& (0+255),b
 24416  015142  6B97               	clrf	(InitUART@temp+1)& (0+255),b
 24417  015144  6B98               	clrf	(InitUART@temp+2)& (0+255),b
 24418  015146  6B99               	clrf	(InitUART@temp+3)& (0+255),b
 24419                           
 24420                           ; BSR set to: 1
 24421                           ;UART.c: 117: temp = ReadUSART();
 24422  015148  EC0D  F0BE         	call	_ReadUSART	;wreg free
 24423  01514C  0101               	movlb	1	; () banked
 24424  01514E  6F8E               	movwf	??_InitUART& (0+255),b
 24425  015150  0101               	movlb	1	; () banked
 24426  015152  518E               	movf	??_InitUART& (0+255),w,b
 24427  015154  0101               	movlb	1	; () banked
 24428  015156  6F96               	movwf	InitUART@temp& (0+255),b
 24429  015158  6B97               	clrf	(InitUART@temp+1)& (0+255),b
 24430  01515A  6B98               	clrf	(InitUART@temp+2)& (0+255),b
 24431  01515C  6B99               	clrf	(InitUART@temp+3)& (0+255),b
 24432                           
 24433                           ; BSR set to: 1
 24434                           ;UART.c: 118: temp = ReadUSART();
 24435  01515E  EC0D  F0BE         	call	_ReadUSART	;wreg free
 24436  015162  0101               	movlb	1	; () banked
 24437  015164  6F8E               	movwf	??_InitUART& (0+255),b
 24438  015166  0101               	movlb	1	; () banked
 24439  015168  518E               	movf	??_InitUART& (0+255),w,b
 24440  01516A  0101               	movlb	1	; () banked
 24441  01516C  6F96               	movwf	InitUART@temp& (0+255),b
 24442  01516E  6B97               	clrf	(InitUART@temp+1)& (0+255),b
 24443  015170  6B98               	clrf	(InitUART@temp+2)& (0+255),b
 24444  015172  6B99               	clrf	(InitUART@temp+3)& (0+255),b
 24445                           
 24446                           ; BSR set to: 1
 24447                           ;UART.c: 119: temp = ReadUSART();
 24448  015174  EC0D  F0BE         	call	_ReadUSART	;wreg free
 24449  015178  0101               	movlb	1	; () banked
 24450  01517A  6F8E               	movwf	??_InitUART& (0+255),b
 24451  01517C  0101               	movlb	1	; () banked
 24452  01517E  518E               	movf	??_InitUART& (0+255),w,b
 24453  015180  0101               	movlb	1	; () banked
 24454  015182  6F96               	movwf	InitUART@temp& (0+255),b
 24455  015184  6B97               	clrf	(InitUART@temp+1)& (0+255),b
 24456  015186  6B98               	clrf	(InitUART@temp+2)& (0+255),b
 24457  015188  6B99               	clrf	(InitUART@temp+3)& (0+255),b
 24458                           
 24459                           ; BSR set to: 1
 24460                           ;UART.c: 121: IPR1bits.RCIP = 0;
 24461  01518A  9A9F               	bcf	3999,5,c	;volatile
 24462                           
 24463                           ; BSR set to: 1
 24464  01518C  0012               	return		;funcret
 24465  01518E                     __end_of_InitUART:
 24466                           	opt stack 0
 24467                           tblptru	equ	0xFF8
 24468                           tblptrh	equ	0xFF7
 24469                           tblptrl	equ	0xFF6
 24470                           tablat	equ	0xFF5
 24471                           prodh	equ	0xFF4
 24472                           prodl	equ	0xFF3
 24473                           intcon	equ	0xFF2
 24474                           intcon2	equ	0xFF1
 24475                           postinc0	equ	0xFEE
 24476                           plusw0	equ	0xFEB
 24477                           wreg	equ	0xFE8
 24478                           indf1	equ	0xFE7
 24479                           postdec1	equ	0xFE5
 24480                           fsr1h	equ	0xFE2
 24481                           fsr1l	equ	0xFE1
 24482                           indf2	equ	0xFDF
 24483                           postinc2	equ	0xFDE
 24484                           postdec2	equ	0xFDD
 24485                           plusw2	equ	0xFDB
 24486                           fsr2h	equ	0xFDA
 24487                           fsr2l	equ	0xFD9
 24488                           status	equ	0xFD8
 24489                           
 24490 ;; *************** function _baudUSART *****************
 24491 ;; Defined at:
 24492 ;;		line 129 in file "UART.c"
 24493 ;; Parameters:    Size  Location     Type
 24494 ;;  baudconfig      1    wreg     unsigned char 
 24495 ;; Auto vars:     Size  Location     Type
 24496 ;;  baudconfig      1   14[BANK1 ] unsigned char 
 24497 ;; Return value:  Size  Location     Type
 24498 ;;		None               void
 24499 ;; Registers used:
 24500 ;;		wreg, status,2
 24501 ;; Tracked objects:
 24502 ;;		On entry : 0/0
 24503 ;;		On exit  : 0/0
 24504 ;;		Unchanged: 0/0
 24505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24507 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24509 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24510 ;;Total ram usage:        1 bytes
 24511 ;; Hardware stack levels used:    1
 24512 ;; Hardware stack levels required when called:    6
 24513 ;; This function calls:
 24514 ;;		Nothing
 24515 ;; This function is called by:
 24516 ;;		_InitUART
 24517 ;; This function uses a non-reentrant model
 24518 ;;
 24519                           
 24520                           	psect	text51
 24521  017F4E                     __ptext51:
 24522                           	opt stack 0
 24523  017F4E                     _baudUSART:
 24524                           	opt stack 23
 24525                           
 24526                           ; BSR set to: 1
 24527                           ;incstack = 0
 24528                           ;baudUSART@baudconfig stored from wreg
 24529  017F4E  0101               	movlb	1	; () banked
 24530  017F50  6F7C               	movwf	baudUSART@baudconfig& (0+255),b
 24531                           
 24532                           ; BSR set to: 1
 24533                           ;UART.c: 131: BAUDCON =0;
 24534  017F52  0E00               	movlw	0
 24535  017F54  6EB8               	movwf	4024,c	;volatile
 24536                           
 24537                           ; BSR set to: 1
 24538                           ;UART.c: 132: BAUDCON = baudconfig;
 24539  017F56  C17C  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
 24540                           
 24541                           ; BSR set to: 1
 24542  017F5A  0012               	return		;funcret
 24543  017F5C                     __end_of_baudUSART:
 24544                           	opt stack 0
 24545                           tblptru	equ	0xFF8
 24546                           tblptrh	equ	0xFF7
 24547                           tblptrl	equ	0xFF6
 24548                           tablat	equ	0xFF5
 24549                           prodh	equ	0xFF4
 24550                           prodl	equ	0xFF3
 24551                           intcon	equ	0xFF2
 24552                           intcon2	equ	0xFF1
 24553                           postinc0	equ	0xFEE
 24554                           plusw0	equ	0xFEB
 24555                           wreg	equ	0xFE8
 24556                           indf1	equ	0xFE7
 24557                           postdec1	equ	0xFE5
 24558                           fsr1h	equ	0xFE2
 24559                           fsr1l	equ	0xFE1
 24560                           indf2	equ	0xFDF
 24561                           postinc2	equ	0xFDE
 24562                           postdec2	equ	0xFDD
 24563                           plusw2	equ	0xFDB
 24564                           fsr2h	equ	0xFDA
 24565                           fsr2l	equ	0xFD9
 24566                           status	equ	0xFD8
 24567                           
 24568 ;; *************** function ___lldiv *****************
 24569 ;; Defined at:
 24570 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
 24571 ;; Parameters:    Size  Location     Type
 24572 ;;  dividend        4   14[BANK1 ] unsigned long 
 24573 ;;  divisor         4   18[BANK1 ] unsigned long 
 24574 ;; Auto vars:     Size  Location     Type
 24575 ;;  quotient        4   22[BANK1 ] unsigned long 
 24576 ;;  counter         1   26[BANK1 ] unsigned char 
 24577 ;; Return value:  Size  Location     Type
 24578 ;;                  4   14[BANK1 ] unsigned long 
 24579 ;; Registers used:
 24580 ;;		wreg, status,2, status,0
 24581 ;; Tracked objects:
 24582 ;;		On entry : 0/0
 24583 ;;		On exit  : 0/0
 24584 ;;		Unchanged: 0/0
 24585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24586 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 24587 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 24588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24589 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 24590 ;;Total ram usage:       13 bytes
 24591 ;; Hardware stack levels used:    1
 24592 ;; Hardware stack levels required when called:    6
 24593 ;; This function calls:
 24594 ;;		Nothing
 24595 ;; This function is called by:
 24596 ;;		_InitUART
 24597 ;;		_sprintf
 24598 ;; This function uses a non-reentrant model
 24599 ;;
 24600                           
 24601                           	psect	text52
 24602  016448                     __ptext52:
 24603                           	opt stack 0
 24604  016448                     ___lldiv:
 24605                           	opt stack 23
 24606                           
 24607                           ; BSR set to: 1
 24608                           ;incstack = 0
 24609  016448  0E00               	movlw	0
 24610  01644A  0101               	movlb	1	; () banked
 24611  01644C  6F84               	movwf	___lldiv@quotient& (0+255),b
 24612  01644E  0E00               	movlw	0
 24613  016450  6F85               	movwf	(___lldiv@quotient+1)& (0+255),b
 24614  016452  0E00               	movlw	0
 24615  016454  6F86               	movwf	(___lldiv@quotient+2)& (0+255),b
 24616  016456  0E00               	movlw	0
 24617  016458  6F87               	movwf	(___lldiv@quotient+3)& (0+255),b
 24618                           
 24619                           ; BSR set to: 1
 24620  01645A  0101               	movlb	1	; () banked
 24621  01645C  5180               	movf	___lldiv@divisor& (0+255),w,b
 24622  01645E  0101               	movlb	1	; () banked
 24623  016460  1181               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24624  016462  0101               	movlb	1	; () banked
 24625  016464  1182               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24626  016466  0101               	movlb	1	; () banked
 24627  016468  1183               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24628  01646A  B4D8               	btfsc	status,2,c
 24629  01646C  D047               	goto	l2349
 24630                           
 24631                           ; BSR set to: 1
 24632  01646E  0E01               	movlw	1
 24633  016470  0101               	movlb	1	; () banked
 24634  016472  6F88               	movwf	___lldiv@counter& (0+255),b
 24635  016474  D009               	goto	l11603
 24636  016476                     l11601:
 24637                           
 24638                           ; BSR set to: 1
 24639  016476  0101               	movlb	1	; () banked
 24640  016478  90D8               	bcf	status,0,c
 24641  01647A  3780               	rlcf	___lldiv@divisor& (0+255),f,b
 24642  01647C  3781               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24643  01647E  3782               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24644  016480  3783               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24645  016482  0101               	movlb	1	; () banked
 24646  016484  2B88               	incf	___lldiv@counter& (0+255),f,b
 24647  016486  D000               	goto	l11603
 24648  016488                     l11603:
 24649                           
 24650                           ; BSR set to: 1
 24651  016488  0101               	movlb	1	; () banked
 24652  01648A  BF83               	btfsc	(___lldiv@divisor+3)& (0+255),7,b
 24653  01648C  D002               	goto	l11605
 24654  01648E  D7F3               	goto	l11601
 24655                           
 24656                           ; BSR set to: 1
 24657  016490  D000               	goto	l11605
 24658  016492                     l11605:
 24659                           
 24660                           ; BSR set to: 1
 24661  016492  0101               	movlb	1	; () banked
 24662  016494  90D8               	bcf	status,0,c
 24663  016496  3784               	rlcf	___lldiv@quotient& (0+255),f,b
 24664  016498  3785               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24665  01649A  3786               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24666  01649C  3787               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24667                           
 24668                           ; BSR set to: 1
 24669  01649E  0101               	movlb	1	; () banked
 24670  0164A0  5180               	movf	___lldiv@divisor& (0+255),w,b
 24671  0164A2  0101               	movlb	1	; () banked
 24672  0164A4  5D7C               	subwf	___lldiv@dividend& (0+255),w,b
 24673  0164A6  0101               	movlb	1	; () banked
 24674  0164A8  5181               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24675  0164AA  0101               	movlb	1	; () banked
 24676  0164AC  597D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24677  0164AE  0101               	movlb	1	; () banked
 24678  0164B0  5182               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24679  0164B2  0101               	movlb	1	; () banked
 24680  0164B4  597E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24681  0164B6  0101               	movlb	1	; () banked
 24682  0164B8  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24683  0164BA  0101               	movlb	1	; () banked
 24684  0164BC  597F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24685  0164BE  A0D8               	btfss	status,0,c
 24686  0164C0  D013               	goto	l11613
 24687                           
 24688                           ; BSR set to: 1
 24689  0164C2  0101               	movlb	1	; () banked
 24690  0164C4  5180               	movf	___lldiv@divisor& (0+255),w,b
 24691  0164C6  0101               	movlb	1	; () banked
 24692  0164C8  5F7C               	subwf	___lldiv@dividend& (0+255),f,b
 24693  0164CA  0101               	movlb	1	; () banked
 24694  0164CC  5181               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24695  0164CE  0101               	movlb	1	; () banked
 24696  0164D0  5B7D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24697  0164D2  0101               	movlb	1	; () banked
 24698  0164D4  5182               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24699  0164D6  0101               	movlb	1	; () banked
 24700  0164D8  5B7E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24701  0164DA  0101               	movlb	1	; () banked
 24702  0164DC  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24703  0164DE  0101               	movlb	1	; () banked
 24704  0164E0  5B7F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24705                           
 24706                           ; BSR set to: 1
 24707  0164E2  0101               	movlb	1	; () banked
 24708  0164E4  8184               	bsf	___lldiv@quotient& (0+255),0,b
 24709  0164E6  D000               	goto	l11613
 24710  0164E8                     l11613:
 24711                           
 24712                           ; BSR set to: 1
 24713  0164E8  0101               	movlb	1	; () banked
 24714  0164EA  90D8               	bcf	status,0,c
 24715  0164EC  3383               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24716  0164EE  3382               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24717  0164F0  3381               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24718  0164F2  3380               	rrcf	___lldiv@divisor& (0+255),f,b
 24719                           
 24720                           ; BSR set to: 1
 24721  0164F4  0101               	movlb	1	; () banked
 24722  0164F6  2F88               	decfsz	___lldiv@counter& (0+255),f,b
 24723  0164F8  D7CC               	goto	l11605
 24724  0164FA  D000               	goto	l2349
 24725  0164FC                     l2349:
 24726                           
 24727                           ; BSR set to: 1
 24728  0164FC  C184  F17C         	movff	___lldiv@quotient,?___lldiv
 24729  016500  C185  F17D         	movff	___lldiv@quotient+1,?___lldiv+1
 24730  016504  C186  F17E         	movff	___lldiv@quotient+2,?___lldiv+2
 24731  016508  C187  F17F         	movff	___lldiv@quotient+3,?___lldiv+3
 24732                           
 24733                           ; BSR set to: 1
 24734  01650C  0012               	return		;funcret
 24735  01650E                     __end_of___lldiv:
 24736                           	opt stack 0
 24737                           tblptru	equ	0xFF8
 24738                           tblptrh	equ	0xFF7
 24739                           tblptrl	equ	0xFF6
 24740                           tablat	equ	0xFF5
 24741                           prodh	equ	0xFF4
 24742                           prodl	equ	0xFF3
 24743                           intcon	equ	0xFF2
 24744                           intcon2	equ	0xFF1
 24745                           postinc0	equ	0xFEE
 24746                           plusw0	equ	0xFEB
 24747                           wreg	equ	0xFE8
 24748                           indf1	equ	0xFE7
 24749                           postdec1	equ	0xFE5
 24750                           fsr1h	equ	0xFE2
 24751                           fsr1l	equ	0xFE1
 24752                           indf2	equ	0xFDF
 24753                           postinc2	equ	0xFDE
 24754                           postdec2	equ	0xFDD
 24755                           plusw2	equ	0xFDB
 24756                           fsr2h	equ	0xFDA
 24757                           fsr2l	equ	0xFD9
 24758                           status	equ	0xFD8
 24759                           
 24760 ;; *************** function _ReadUSART *****************
 24761 ;; Defined at:
 24762 ;;		line 254 in file "UART.c"
 24763 ;; Parameters:    Size  Location     Type
 24764 ;;		None
 24765 ;; Auto vars:     Size  Location     Type
 24766 ;;  data            1   14[BANK1 ] unsigned char 
 24767 ;; Return value:  Size  Location     Type
 24768 ;;                  1    wreg      unsigned char 
 24769 ;; Registers used:
 24770 ;;		wreg, status,2, status,0
 24771 ;; Tracked objects:
 24772 ;;		On entry : 0/0
 24773 ;;		On exit  : 0/0
 24774 ;;		Unchanged: 0/0
 24775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24777 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24779 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24780 ;;Total ram usage:        1 bytes
 24781 ;; Hardware stack levels used:    1
 24782 ;; Hardware stack levels required when called:    6
 24783 ;; This function calls:
 24784 ;;		Nothing
 24785 ;; This function is called by:
 24786 ;;		_main
 24787 ;;		_InitUART
 24788 ;; This function uses a non-reentrant model
 24789 ;;
 24790                           
 24791                           	psect	text53
 24792  017C1A                     __ptext53:
 24793                           	opt stack 0
 24794  017C1A                     _ReadUSART:
 24795                           	opt stack 24
 24796                           
 24797                           ;UART.c: 256: char data;
 24798                           ;UART.c: 258: USART_Status.val &= 0xf2;
 24799                           
 24800                           ; BSR set to: 1
 24801                           ;incstack = 0
 24802  017C1A  0EF2               	movlw	242
 24803  017C1C  0101               	movlb	1	; () banked
 24804  017C1E  170D               	andwf	_USART_Status& (0+255),f,b
 24805                           
 24806                           ; BSR set to: 1
 24807                           ;UART.c: 260: if(RCSTAbits.RX9)
 24808  017C20  ACAB               	btfss	4011,6,c	;volatile
 24809  017C22  D007               	goto	l530
 24810                           
 24811                           ; BSR set to: 1
 24812                           ;UART.c: 261: {
 24813                           ;UART.c: 262: USART_Status.RX_NINE = 0;
 24814  017C24  0101               	movlb	1	; () banked
 24815  017C26  910D               	bcf	_USART_Status& (0+255),0,b
 24816                           
 24817                           ;UART.c: 263: if(RCSTAbits.RX9D)
 24818  017C28  A0AB               	btfss	4011,0,c	;volatile
 24819  017C2A  D003               	goto	l530
 24820                           
 24821                           ; BSR set to: 1
 24822                           ;UART.c: 264: USART_Status.RX_NINE = 1;
 24823  017C2C  0101               	movlb	1	; () banked
 24824  017C2E  810D               	bsf	_USART_Status& (0+255),0,b
 24825  017C30  D000               	goto	l530
 24826  017C32                     l530:
 24827                           
 24828                           ; BSR set to: 1
 24829                           ;UART.c: 265: }
 24830                           ;UART.c: 267: if(RCSTAbits.FERR)
 24831  017C32  A4AB               	btfss	4011,2,c	;volatile
 24832  017C34  D002               	goto	l532
 24833                           
 24834                           ; BSR set to: 1
 24835                           ;UART.c: 268: USART_Status.FRAME_ERROR = 1;
 24836  017C36  0101               	movlb	1	; () banked
 24837  017C38  850D               	bsf	_USART_Status& (0+255),2,b
 24838  017C3A                     l532:
 24839                           
 24840                           ; BSR set to: 1
 24841                           ;UART.c: 270: if(RCSTAbits.OERR)
 24842  017C3A  A2AB               	btfss	4011,1,c	;volatile
 24843  017C3C  D002               	goto	l533
 24844                           
 24845                           ; BSR set to: 1
 24846                           ;UART.c: 271: USART_Status.OVERRUN_ERROR = 1;
 24847  017C3E  0101               	movlb	1	; () banked
 24848  017C40  870D               	bsf	_USART_Status& (0+255),3,b
 24849  017C42                     l533:
 24850                           
 24851                           ; BSR set to: 1
 24852                           ;UART.c: 273: data = RCREG;
 24853  017C42  CFAE F17C          	movff	4014,ReadUSART@data	;volatile
 24854                           
 24855                           ; BSR set to: 1
 24856                           ;UART.c: 275: return (data);
 24857  017C46  0101               	movlb	1	; () banked
 24858  017C48  517C               	movf	ReadUSART@data& (0+255),w,b
 24859  017C4A  0012               	return	
 24860                           
 24861                           ; BSR set to: 1
 24862                           
 24863                           ; BSR set to: 1
 24864  017C4C  0012               	return		;funcret
 24865  017C4E                     __end_of_ReadUSART:
 24866                           	opt stack 0
 24867                           tblptru	equ	0xFF8
 24868                           tblptrh	equ	0xFF7
 24869                           tblptrl	equ	0xFF6
 24870                           tablat	equ	0xFF5
 24871                           prodh	equ	0xFF4
 24872                           prodl	equ	0xFF3
 24873                           intcon	equ	0xFF2
 24874                           intcon2	equ	0xFF1
 24875                           postinc0	equ	0xFEE
 24876                           plusw0	equ	0xFEB
 24877                           wreg	equ	0xFE8
 24878                           indf1	equ	0xFE7
 24879                           postdec1	equ	0xFE5
 24880                           fsr1h	equ	0xFE2
 24881                           fsr1l	equ	0xFE1
 24882                           indf2	equ	0xFDF
 24883                           postinc2	equ	0xFDE
 24884                           postdec2	equ	0xFDD
 24885                           plusw2	equ	0xFDB
 24886                           fsr2h	equ	0xFDA
 24887                           fsr2l	equ	0xFD9
 24888                           status	equ	0xFD8
 24889                           
 24890 ;; *************** function _OpenUSART *****************
 24891 ;; Defined at:
 24892 ;;		line 140 in file "UART.c"
 24893 ;; Parameters:    Size  Location     Type
 24894 ;;  config          1    wreg     unsigned char 
 24895 ;;  spbrg           2   14[BANK1 ] unsigned int 
 24896 ;; Auto vars:     Size  Location     Type
 24897 ;;  config          1   16[BANK1 ] unsigned char 
 24898 ;; Return value:  Size  Location     Type
 24899 ;;		None               void
 24900 ;; Registers used:
 24901 ;;		wreg, status,2
 24902 ;; Tracked objects:
 24903 ;;		On entry : 0/0
 24904 ;;		On exit  : 0/0
 24905 ;;		Unchanged: 0/0
 24906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24907 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24908 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24910 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 24911 ;;Total ram usage:        3 bytes
 24912 ;; Hardware stack levels used:    1
 24913 ;; Hardware stack levels required when called:    6
 24914 ;; This function calls:
 24915 ;;		Nothing
 24916 ;; This function is called by:
 24917 ;;		_InitUART
 24918 ;; This function uses a non-reentrant model
 24919 ;;
 24920                           
 24921                           	psect	text54
 24922  01723E                     __ptext54:
 24923                           	opt stack 0
 24924  01723E                     _OpenUSART:
 24925                           	opt stack 23
 24926                           
 24927                           ; BSR set to: 1
 24928                           ;incstack = 0
 24929                           ;OpenUSART@config stored from wreg
 24930  01723E  0101               	movlb	1	; () banked
 24931  017240  6F7E               	movwf	OpenUSART@config& (0+255),b
 24932                           
 24933                           ; BSR set to: 1
 24934                           ;UART.c: 142: TXSTA = 0;
 24935  017242  0E00               	movlw	0
 24936  017244  6EAC               	movwf	4012,c	;volatile
 24937                           
 24938                           ;UART.c: 143: RCSTA = 0;
 24939  017246  0E00               	movlw	0
 24940  017248  6EAB               	movwf	4011,c	;volatile
 24941                           
 24942                           ; BSR set to: 1
 24943                           ;UART.c: 145: if(config&0x01)
 24944  01724A  0101               	movlb	1	; () banked
 24945  01724C  A17E               	btfss	OpenUSART@config& (0+255),0,b
 24946  01724E  D002               	goto	l11339
 24947                           
 24948                           ; BSR set to: 1
 24949                           ;UART.c: 146: TXSTAbits.SYNC = 1;
 24950  017250  88AC               	bsf	4012,4,c	;volatile
 24951  017252  D000               	goto	l11339
 24952  017254                     l11339:
 24953                           
 24954                           ; BSR set to: 1
 24955                           ;UART.c: 148: if(config&0x02)
 24956  017254  0101               	movlb	1	; () banked
 24957  017256  A37E               	btfss	OpenUSART@config& (0+255),1,b
 24958  017258  D003               	goto	l11343
 24959                           
 24960                           ; BSR set to: 1
 24961                           ;UART.c: 149: {
 24962                           ;UART.c: 150: TXSTAbits.TX9 = 1;
 24963  01725A  8CAC               	bsf	4012,6,c	;volatile
 24964                           
 24965                           ;UART.c: 151: RCSTAbits.RX9 = 1;
 24966  01725C  8CAB               	bsf	4011,6,c	;volatile
 24967  01725E  D000               	goto	l11343
 24968  017260                     l11343:
 24969                           
 24970                           ; BSR set to: 1
 24971                           ;UART.c: 152: }
 24972                           ;UART.c: 154: if(config&0x04)
 24973  017260  0101               	movlb	1	; () banked
 24974  017262  A57E               	btfss	OpenUSART@config& (0+255),2,b
 24975  017264  D002               	goto	l11347
 24976                           
 24977                           ; BSR set to: 1
 24978                           ;UART.c: 155: TXSTAbits.CSRC = 1;
 24979  017266  8EAC               	bsf	4012,7,c	;volatile
 24980  017268  D000               	goto	l11347
 24981  01726A                     l11347:
 24982                           
 24983                           ; BSR set to: 1
 24984                           ;UART.c: 157: if(config&0x08)
 24985  01726A  0101               	movlb	1	; () banked
 24986  01726C  A77E               	btfss	OpenUSART@config& (0+255),3,b
 24987  01726E  D002               	goto	l495
 24988                           
 24989                           ; BSR set to: 1
 24990                           ;UART.c: 158: RCSTAbits.CREN = 1;
 24991  017270  88AB               	bsf	4011,4,c	;volatile
 24992  017272  D002               	goto	l11351
 24993  017274                     l495:
 24994                           
 24995                           ; BSR set to: 1
 24996                           ;UART.c: 159: else
 24997                           ;UART.c: 160: RCSTAbits.SREN = 1;
 24998  017274  8AAB               	bsf	4011,5,c	;volatile
 24999  017276  D000               	goto	l11351
 25000  017278                     l11351:
 25001                           
 25002                           ; BSR set to: 1
 25003                           ;UART.c: 162: if(config&0x10)
 25004  017278  0101               	movlb	1	; () banked
 25005  01727A  B97E               	btfsc	OpenUSART@config& (0+255),4,b
 25006                           
 25007                           ; BSR set to: 1
 25008                           ;UART.c: 163: TXSTAbits.BRGH = 1;
 25009  01727C  84AC               	bsf	4012,2,c	;volatile
 25010                           
 25011                           ; BSR set to: 1
 25012                           ;UART.c: 165: PIR1bits.TXIF = 0;
 25013  01727E  989E               	bcf	3998,4,c	;volatile
 25014                           
 25015                           ; BSR set to: 1
 25016                           ;UART.c: 167: if(config&0x20)
 25017  017280  0101               	movlb	1	; () banked
 25018  017282  AB7E               	btfss	OpenUSART@config& (0+255),5,b
 25019  017284  D002               	goto	l11359
 25020                           
 25021                           ; BSR set to: 1
 25022                           ;UART.c: 168: RCSTAbits.ADEN = 1;
 25023  017286  86AB               	bsf	4011,3,c	;volatile
 25024  017288  D000               	goto	l11359
 25025  01728A                     l11359:
 25026                           
 25027                           ; BSR set to: 1
 25028                           ;UART.c: 170: if(config&0x40)
 25029  01728A  0101               	movlb	1	; () banked
 25030  01728C  AD7E               	btfss	OpenUSART@config& (0+255),6,b
 25031  01728E  D002               	goto	l499
 25032                           
 25033                           ; BSR set to: 1
 25034                           ;UART.c: 171: {
 25035                           ;UART.c: 172: PIE1bits.RCIE = 1;
 25036  017290  8A9D               	bsf	3997,5,c	;volatile
 25037                           
 25038                           ;UART.c: 173: }
 25039  017292  D001               	goto	l500
 25040  017294                     l499:
 25041                           
 25042                           ; BSR set to: 1
 25043                           ;UART.c: 174: else
 25044                           ;UART.c: 175: {
 25045                           ;UART.c: 176: PIE1bits.RCIE = 0;
 25046  017294  9A9D               	bcf	3997,5,c	;volatile
 25047  017296                     l500:
 25048                           
 25049                           ; BSR set to: 1
 25050                           ;UART.c: 177: }
 25051                           ;UART.c: 179: PIR1bits.RCIF = 0;
 25052  017296  9A9E               	bcf	3998,5,c	;volatile
 25053                           
 25054                           ; BSR set to: 1
 25055                           ;UART.c: 181: if(config&0x80)
 25056  017298  0101               	movlb	1	; () banked
 25057  01729A  AF7E               	btfss	OpenUSART@config& (0+255),7,b
 25058  01729C  D002               	goto	l501
 25059                           
 25060                           ; BSR set to: 1
 25061                           ;UART.c: 182: PIE1bits.TXIE = 1;
 25062  01729E  889D               	bsf	3997,4,c	;volatile
 25063  0172A0  D001               	goto	l502
 25064  0172A2                     l501:
 25065                           
 25066                           ; BSR set to: 1
 25067                           ;UART.c: 183: else
 25068                           ;UART.c: 184: PIE1bits.TXIE = 0;
 25069  0172A2  989D               	bcf	3997,4,c	;volatile
 25070  0172A4                     l502:
 25071                           
 25072                           ; BSR set to: 1
 25073                           ;UART.c: 186: SPBRG = spbrg;
 25074  0172A4  C17C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 25075                           
 25076                           ; BSR set to: 1
 25077                           ;UART.c: 187: SPBRGH = spbrg >> 8;
 25078  0172A8  0101               	movlb	1	; () banked
 25079  0172AA  517D               	movf	(OpenUSART@spbrg+1)& (0+255),w,b
 25080  0172AC  6EB0               	movwf	4016,c	;volatile
 25081                           
 25082                           ; BSR set to: 1
 25083                           ;UART.c: 189: TXSTAbits.TXEN = 1;
 25084  0172AE  8AAC               	bsf	4012,5,c	;volatile
 25085                           
 25086                           ; BSR set to: 1
 25087                           ;UART.c: 190: RCSTAbits.SPEN = 1;
 25088  0172B0  8EAB               	bsf	4011,7,c	;volatile
 25089                           
 25090                           ; BSR set to: 1
 25091  0172B2  0012               	return		;funcret
 25092  0172B4                     __end_of_OpenUSART:
 25093                           	opt stack 0
 25094                           tblptru	equ	0xFF8
 25095                           tblptrh	equ	0xFF7
 25096                           tblptrl	equ	0xFF6
 25097                           tablat	equ	0xFF5
 25098                           prodh	equ	0xFF4
 25099                           prodl	equ	0xFF3
 25100                           intcon	equ	0xFF2
 25101                           intcon2	equ	0xFF1
 25102                           postinc0	equ	0xFEE
 25103                           plusw0	equ	0xFEB
 25104                           wreg	equ	0xFE8
 25105                           indf1	equ	0xFE7
 25106                           postdec1	equ	0xFE5
 25107                           fsr1h	equ	0xFE2
 25108                           fsr1l	equ	0xFE1
 25109                           indf2	equ	0xFDF
 25110                           postinc2	equ	0xFDE
 25111                           postdec2	equ	0xFDD
 25112                           plusw2	equ	0xFDB
 25113                           fsr2h	equ	0xFDA
 25114                           fsr2l	equ	0xFD9
 25115                           status	equ	0xFD8
 25116                           
 25117 ;; *************** function _Send_Config2 *****************
 25118 ;; Defined at:
 25119 ;;		line 137 in file "RF.c"
 25120 ;; Parameters:    Size  Location     Type
 25121 ;;  pin             1    wreg     unsigned char 
 25122 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 25123 ;;		 -> SubLightOFF(16), SubLightON(16), Aux2OFF(16), Aux2ON(16), 
 25124 ;;		 -> BedOFF(16), BedON(16), AuxOFF(16), AuxON(16), 
 25125 ;;		 -> fanOFF(16), fanON(16), 
 25126 ;; Auto vars:     Size  Location     Type
 25127 ;;  pin             1   29[BANK1 ] unsigned char 
 25128 ;;  i               1   30[BANK1 ] unsigned char 
 25129 ;; Return value:  Size  Location     Type
 25130 ;;		None               void
 25131 ;; Registers used:
 25132 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25133 ;; Tracked objects:
 25134 ;;		On entry : 0/0
 25135 ;;		On exit  : 0/0
 25136 ;;		Unchanged: 0/0
 25137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25138 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25139 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25140 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25141 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 25142 ;;Total ram usage:        6 bytes
 25143 ;; Hardware stack levels used:    1
 25144 ;; Hardware stack levels required when called:    8
 25145 ;; This function calls:
 25146 ;;		_One_Config2
 25147 ;;		_Zero_Config2
 25148 ;;		_delayUS
 25149 ;; This function is called by:
 25150 ;;		_Command
 25151 ;; This function uses a non-reentrant model
 25152 ;;
 25153                           
 25154                           	psect	text55
 25155  016DE4                     __ptext55:
 25156                           	opt stack 0
 25157  016DE4                     _Send_Config2:
 25158                           	opt stack 21
 25159                           
 25160                           ; BSR set to: 1
 25161                           ;incstack = 0
 25162                           ;Send_Config2@pin stored from wreg
 25163  016DE4  0101               	movlb	1	; () banked
 25164  016DE6  6F8B               	movwf	Send_Config2@pin& (0+255),b
 25165                           
 25166                           ; BSR set to: 1
 25167                           ;RF.c: 139: unsigned char i=0;
 25168  016DE8  0E00               	movlw	0
 25169  016DEA  0101               	movlb	1	; () banked
 25170  016DEC  6F8C               	movwf	Send_Config2@i& (0+255),b
 25171                           
 25172                           ;RF.c: 141: for(i=0;i<16;i++)
 25173  016DEE  0E00               	movlw	0
 25174  016DF0  0101               	movlb	1	; () banked
 25175  016DF2  6F8C               	movwf	Send_Config2@i& (0+255),b
 25176  016DF4                     l13093:
 25177                           
 25178                           ; BSR set to: 1
 25179  016DF4  0E0F               	movlw	15
 25180  016DF6  0101               	movlb	1	; () banked
 25181  016DF8  658C               	cpfsgt	Send_Config2@i& (0+255),b
 25182  016DFA  D001               	goto	l13097
 25183                           
 25184                           ; BSR set to: 1
 25185  016DFC  D025               	goto	l13107
 25186  016DFE                     l13097:
 25187                           
 25188                           ; BSR set to: 1
 25189                           ;RF.c: 142: {
 25190                           ;RF.c: 143: if(data[i] == 0)
 25191  016DFE  0101               	movlb	1	; () banked
 25192  016E00  518C               	movf	Send_Config2@i& (0+255),w,b
 25193  016E02  0D01               	mullw	1
 25194  016E04  C187  F189         	movff	Send_Config2@data,??_Send_Config2
 25195  016E08  C188  F18A         	movff	Send_Config2@data+1,??_Send_Config2+1
 25196  016E0C  50F3               	movf	prodl,w,c
 25197  016E0E  0101               	movlb	1	; () banked
 25198  016E10  2789               	addwf	??_Send_Config2& (0+255),f,b
 25199  016E12  50F4               	movf	prodh,w,c
 25200  016E14  0101               	movlb	1	; () banked
 25201  016E16  238A               	addwfc	(??_Send_Config2+1)& (0+255),f,b
 25202  016E18  C189  FFF6         	movff	??_Send_Config2,tblptrl
 25203  016E1C  C18A  FFF7         	movff	??_Send_Config2+1,tblptrh
 25204  016E20                     	if	0	;tblptru may be non-zero
 25205  016E20                     	endif
 25206  016E20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25207  016E20  0E00               	movlw	low (__mediumconst shr (0+16))
 25208  016E22  6EF8               	movwf	tblptru,c
 25209  016E24                     	endif
 25210  016E24  0008               	tblrd		*
 25211  016E26  50F5               	movf	tablat,w,c
 25212  016E28  0900               	iorlw	0
 25213  016E2A  A4D8               	btfss	status,2,c
 25214  016E2C  D005               	goto	l13101
 25215                           
 25216                           ; BSR set to: 1
 25217                           ;RF.c: 144: {
 25218                           ;RF.c: 145: Zero_Config2(pin);
 25219  016E2E  0101               	movlb	1	; () banked
 25220  016E30  518B               	movf	Send_Config2@pin& (0+255),w,b
 25221  016E32  EC20  F0BD         	call	_Zero_Config2
 25222                           
 25223                           ;RF.c: 146: }
 25224  016E36  D005               	goto	l13103
 25225  016E38                     l13101:
 25226                           
 25227                           ;RF.c: 147: else
 25228                           ;RF.c: 148: {
 25229                           ;RF.c: 149: One_Config2(pin);
 25230  016E38  0101               	movlb	1	; () banked
 25231  016E3A  518B               	movf	Send_Config2@pin& (0+255),w,b
 25232  016E3C  EC40  F0BD         	call	_One_Config2
 25233  016E40  D000               	goto	l13103
 25234  016E42                     l13103:
 25235  016E42  0101               	movlb	1	; () banked
 25236  016E44  2B8C               	incf	Send_Config2@i& (0+255),f,b
 25237  016E46  D7D6               	goto	l13093
 25238  016E48                     l13107:
 25239                           
 25240                           ; BSR set to: 1
 25241                           ;RF.c: 150: }
 25242                           ;RF.c: 151: }
 25243                           ;RF.c: 153: LATD &= ~pin;
 25244  016E48  0101               	movlb	1	; () banked
 25245  016E4A  518B               	movf	Send_Config2@pin& (0+255),w,b
 25246  016E4C  0AFF               	xorlw	255
 25247  016E4E  168C               	andwf	3980,f,c	;volatile
 25248                           
 25249                           ; BSR set to: 1
 25250                           ;RF.c: 154: delayUS(11700);
 25251  016E50  0EB4               	movlw	180
 25252  016E52  0101               	movlb	1	; () banked
 25253  016E54  6F7C               	movwf	delayUS@US& (0+255),b
 25254  016E56  0E2D               	movlw	45
 25255  016E58  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25256  016E5A  0E00               	movlw	0
 25257  016E5C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25258  016E5E  0E00               	movlw	0
 25259  016E60  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25260  016E62  EC38  F0BA         	call	_delayUS	;wreg free
 25261  016E66  0012               	return		;funcret
 25262  016E68                     __end_of_Send_Config2:
 25263                           	opt stack 0
 25264                           tblptru	equ	0xFF8
 25265                           tblptrh	equ	0xFF7
 25266                           tblptrl	equ	0xFF6
 25267                           tablat	equ	0xFF5
 25268                           prodh	equ	0xFF4
 25269                           prodl	equ	0xFF3
 25270                           intcon	equ	0xFF2
 25271                           intcon2	equ	0xFF1
 25272                           postinc0	equ	0xFEE
 25273                           plusw0	equ	0xFEB
 25274                           wreg	equ	0xFE8
 25275                           indf1	equ	0xFE7
 25276                           postdec1	equ	0xFE5
 25277                           fsr1h	equ	0xFE2
 25278                           fsr1l	equ	0xFE1
 25279                           indf2	equ	0xFDF
 25280                           postinc2	equ	0xFDE
 25281                           postdec2	equ	0xFDD
 25282                           plusw2	equ	0xFDB
 25283                           fsr2h	equ	0xFDA
 25284                           fsr2l	equ	0xFD9
 25285                           status	equ	0xFD8
 25286                           
 25287 ;; *************** function _Zero_Config2 *****************
 25288 ;; Defined at:
 25289 ;;		line 163 in file "RF.c"
 25290 ;; Parameters:    Size  Location     Type
 25291 ;;  pin             1    wreg     unsigned char 
 25292 ;; Auto vars:     Size  Location     Type
 25293 ;;  pin             1   24[BANK1 ] unsigned char 
 25294 ;; Return value:  Size  Location     Type
 25295 ;;		None               void
 25296 ;; Registers used:
 25297 ;;		wreg, status,2, status,0, cstack
 25298 ;; Tracked objects:
 25299 ;;		On entry : 0/0
 25300 ;;		On exit  : 0/0
 25301 ;;		Unchanged: 0/0
 25302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25304 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25306 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25307 ;;Total ram usage:        1 bytes
 25308 ;; Hardware stack levels used:    1
 25309 ;; Hardware stack levels required when called:    7
 25310 ;; This function calls:
 25311 ;;		_delayUS
 25312 ;; This function is called by:
 25313 ;;		_Send_Config2
 25314 ;; This function uses a non-reentrant model
 25315 ;;
 25316                           
 25317                           	psect	text56
 25318  017A40                     __ptext56:
 25319                           	opt stack 0
 25320  017A40                     _Zero_Config2:
 25321                           	opt stack 21
 25322                           
 25323                           ;incstack = 0
 25324                           ;Zero_Config2@pin stored from wreg
 25325  017A40  0101               	movlb	1	; () banked
 25326  017A42  6F86               	movwf	Zero_Config2@pin& (0+255),b
 25327                           
 25328                           ; BSR set to: 1
 25329                           ;RF.c: 165: LATD |= pin;
 25330  017A44  0101               	movlb	1	; () banked
 25331  017A46  5186               	movf	Zero_Config2@pin& (0+255),w,b
 25332  017A48  128C               	iorwf	3980,f,c	;volatile
 25333                           
 25334                           ; BSR set to: 1
 25335                           ;RF.c: 166: delayUS(705);
 25336  017A4A  0EC1               	movlw	193
 25337  017A4C  0101               	movlb	1	; () banked
 25338  017A4E  6F7C               	movwf	delayUS@US& (0+255),b
 25339  017A50  0E02               	movlw	2
 25340  017A52  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25341  017A54  0E00               	movlw	0
 25342  017A56  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25343  017A58  0E00               	movlw	0
 25344  017A5A  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25345  017A5C  EC38  F0BA         	call	_delayUS	;wreg free
 25346                           
 25347                           ;RF.c: 167: LATD &= ~pin;
 25348  017A60  0101               	movlb	1	; () banked
 25349  017A62  5186               	movf	Zero_Config2@pin& (0+255),w,b
 25350  017A64  0AFF               	xorlw	255
 25351  017A66  168C               	andwf	3980,f,c	;volatile
 25352                           
 25353                           ;RF.c: 168: delayUS(1910);
 25354  017A68  0E76               	movlw	118
 25355  017A6A  0101               	movlb	1	; () banked
 25356  017A6C  6F7C               	movwf	delayUS@US& (0+255),b
 25357  017A6E  0E07               	movlw	7
 25358  017A70  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25359  017A72  0E00               	movlw	0
 25360  017A74  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25361  017A76  0E00               	movlw	0
 25362  017A78  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25363  017A7A  EC38  F0BA         	call	_delayUS	;wreg free
 25364  017A7E  0012               	return		;funcret
 25365  017A80                     __end_of_Zero_Config2:
 25366                           	opt stack 0
 25367                           tblptru	equ	0xFF8
 25368                           tblptrh	equ	0xFF7
 25369                           tblptrl	equ	0xFF6
 25370                           tablat	equ	0xFF5
 25371                           prodh	equ	0xFF4
 25372                           prodl	equ	0xFF3
 25373                           intcon	equ	0xFF2
 25374                           intcon2	equ	0xFF1
 25375                           postinc0	equ	0xFEE
 25376                           plusw0	equ	0xFEB
 25377                           wreg	equ	0xFE8
 25378                           indf1	equ	0xFE7
 25379                           postdec1	equ	0xFE5
 25380                           fsr1h	equ	0xFE2
 25381                           fsr1l	equ	0xFE1
 25382                           indf2	equ	0xFDF
 25383                           postinc2	equ	0xFDE
 25384                           postdec2	equ	0xFDD
 25385                           plusw2	equ	0xFDB
 25386                           fsr2h	equ	0xFDA
 25387                           fsr2l	equ	0xFD9
 25388                           status	equ	0xFD8
 25389                           
 25390 ;; *************** function _One_Config2 *****************
 25391 ;; Defined at:
 25392 ;;		line 176 in file "RF.c"
 25393 ;; Parameters:    Size  Location     Type
 25394 ;;  pin             1    wreg     unsigned char 
 25395 ;; Auto vars:     Size  Location     Type
 25396 ;;  pin             1   24[BANK1 ] unsigned char 
 25397 ;; Return value:  Size  Location     Type
 25398 ;;		None               void
 25399 ;; Registers used:
 25400 ;;		wreg, status,2, status,0, cstack
 25401 ;; Tracked objects:
 25402 ;;		On entry : 0/0
 25403 ;;		On exit  : 0/0
 25404 ;;		Unchanged: 0/0
 25405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25407 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25409 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25410 ;;Total ram usage:        1 bytes
 25411 ;; Hardware stack levels used:    1
 25412 ;; Hardware stack levels required when called:    7
 25413 ;; This function calls:
 25414 ;;		_delayUS
 25415 ;; This function is called by:
 25416 ;;		_Send_Config2
 25417 ;; This function uses a non-reentrant model
 25418 ;;
 25419                           
 25420                           	psect	text57
 25421  017A80                     __ptext57:
 25422                           	opt stack 0
 25423  017A80                     _One_Config2:
 25424                           	opt stack 21
 25425                           
 25426                           ;incstack = 0
 25427                           ;One_Config2@pin stored from wreg
 25428  017A80  0101               	movlb	1	; () banked
 25429  017A82  6F86               	movwf	One_Config2@pin& (0+255),b
 25430                           
 25431                           ; BSR set to: 1
 25432                           ;RF.c: 178: LATD |= pin;
 25433  017A84  0101               	movlb	1	; () banked
 25434  017A86  5186               	movf	One_Config2@pin& (0+255),w,b
 25435  017A88  128C               	iorwf	3980,f,c	;volatile
 25436                           
 25437                           ; BSR set to: 1
 25438                           ;RF.c: 179: delayUS(1955);
 25439  017A8A  0EA3               	movlw	163
 25440  017A8C  0101               	movlb	1	; () banked
 25441  017A8E  6F7C               	movwf	delayUS@US& (0+255),b
 25442  017A90  0E07               	movlw	7
 25443  017A92  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25444  017A94  0E00               	movlw	0
 25445  017A96  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25446  017A98  0E00               	movlw	0
 25447  017A9A  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25448  017A9C  EC38  F0BA         	call	_delayUS	;wreg free
 25449                           
 25450                           ;RF.c: 180: LATD &= ~pin;
 25451  017AA0  0101               	movlb	1	; () banked
 25452  017AA2  5186               	movf	One_Config2@pin& (0+255),w,b
 25453  017AA4  0AFF               	xorlw	255
 25454  017AA6  168C               	andwf	3980,f,c	;volatile
 25455                           
 25456                           ;RF.c: 181: delayUS(705);
 25457  017AA8  0EC1               	movlw	193
 25458  017AAA  0101               	movlb	1	; () banked
 25459  017AAC  6F7C               	movwf	delayUS@US& (0+255),b
 25460  017AAE  0E02               	movlw	2
 25461  017AB0  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25462  017AB2  0E00               	movlw	0
 25463  017AB4  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25464  017AB6  0E00               	movlw	0
 25465  017AB8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25466  017ABA  EC38  F0BA         	call	_delayUS	;wreg free
 25467  017ABE  0012               	return		;funcret
 25468  017AC0                     __end_of_One_Config2:
 25469                           	opt stack 0
 25470                           tblptru	equ	0xFF8
 25471                           tblptrh	equ	0xFF7
 25472                           tblptrl	equ	0xFF6
 25473                           tablat	equ	0xFF5
 25474                           prodh	equ	0xFF4
 25475                           prodl	equ	0xFF3
 25476                           intcon	equ	0xFF2
 25477                           intcon2	equ	0xFF1
 25478                           postinc0	equ	0xFEE
 25479                           plusw0	equ	0xFEB
 25480                           wreg	equ	0xFE8
 25481                           indf1	equ	0xFE7
 25482                           postdec1	equ	0xFE5
 25483                           fsr1h	equ	0xFE2
 25484                           fsr1l	equ	0xFE1
 25485                           indf2	equ	0xFDF
 25486                           postinc2	equ	0xFDE
 25487                           postdec2	equ	0xFDD
 25488                           plusw2	equ	0xFDB
 25489                           fsr2h	equ	0xFDA
 25490                           fsr2l	equ	0xFD9
 25491                           status	equ	0xFD8
 25492                           
 25493 ;; *************** function _Send_Config1 *****************
 25494 ;; Defined at:
 25495 ;;		line 54 in file "RF.c"
 25496 ;; Parameters:    Size  Location     Type
 25497 ;;  pin             1    wreg     unsigned char 
 25498 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 25499 ;;		 -> TXdataF(12), TXdataE(12), TXdataD(12), 
 25500 ;; Auto vars:     Size  Location     Type
 25501 ;;  pin             1   30[BANK1 ] unsigned char 
 25502 ;;  i               1   29[BANK1 ] unsigned char 
 25503 ;; Return value:  Size  Location     Type
 25504 ;;		None               void
 25505 ;; Registers used:
 25506 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25507 ;; Tracked objects:
 25508 ;;		On entry : 0/0
 25509 ;;		On exit  : 0/0
 25510 ;;		Unchanged: 0/0
 25511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25512 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25513 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25514 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 25515 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 25516 ;;Total ram usage:        6 bytes
 25517 ;; Hardware stack levels used:    1
 25518 ;; Hardware stack levels required when called:    8
 25519 ;; This function calls:
 25520 ;;		_One_Config1
 25521 ;;		_Zero_Config1
 25522 ;;		_delayUS
 25523 ;;		_f_Config1
 25524 ;; This function is called by:
 25525 ;;		_Command
 25526 ;; This function uses a non-reentrant model
 25527 ;;
 25528                           
 25529                           	psect	text58
 25530  016040                     __ptext58:
 25531                           	opt stack 0
 25532  016040                     _Send_Config1:
 25533                           	opt stack 21
 25534                           
 25535                           ;incstack = 0
 25536                           ;Send_Config1@pin stored from wreg
 25537  016040  0101               	movlb	1	; () banked
 25538  016042  6F8C               	movwf	Send_Config1@pin& (0+255),b
 25539                           
 25540                           ; BSR set to: 1
 25541                           ;RF.c: 56: unsigned char i=0;
 25542  016044  0E00               	movlw	0
 25543  016046  0101               	movlb	1	; () banked
 25544  016048  6F8B               	movwf	Send_Config1@i& (0+255),b
 25545                           
 25546                           ;RF.c: 58: for(i=0;i<12;i++)
 25547  01604A  0E00               	movlw	0
 25548  01604C  0101               	movlb	1	; () banked
 25549  01604E  6F8B               	movwf	Send_Config1@i& (0+255),b
 25550  016050                     l13067:
 25551                           
 25552                           ; BSR set to: 1
 25553  016050  0E0B               	movlw	11
 25554  016052  0101               	movlb	1	; () banked
 25555  016054  658B               	cpfsgt	Send_Config1@i& (0+255),b
 25556  016056  D001               	goto	l13071
 25557                           
 25558                           ; BSR set to: 1
 25559  016058  D042               	goto	l13085
 25560  01605A                     l13071:
 25561                           
 25562                           ; BSR set to: 1
 25563                           ;RF.c: 59: {
 25564                           ;RF.c: 60: if(data[i] == 0)
 25565  01605A  0101               	movlb	1	; () banked
 25566  01605C  518B               	movf	Send_Config1@i& (0+255),w,b
 25567  01605E  0D01               	mullw	1
 25568  016060  C187  F189         	movff	Send_Config1@data,??_Send_Config1
 25569  016064  C188  F18A         	movff	Send_Config1@data+1,??_Send_Config1+1
 25570  016068  50F3               	movf	prodl,w,c
 25571  01606A  0101               	movlb	1	; () banked
 25572  01606C  2789               	addwf	??_Send_Config1& (0+255),f,b
 25573  01606E  50F4               	movf	prodh,w,c
 25574  016070  0101               	movlb	1	; () banked
 25575  016072  238A               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 25576  016074  C189  FFF6         	movff	??_Send_Config1,tblptrl
 25577  016078  C18A  FFF7         	movff	??_Send_Config1+1,tblptrh
 25578  01607C                     	if	0	;tblptru may be non-zero
 25579  01607C                     	endif
 25580  01607C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25581  01607C  0E00               	movlw	low (__mediumconst shr (0+16))
 25582  01607E  6EF8               	movwf	tblptru,c
 25583  016080                     	endif
 25584  016080  0008               	tblrd		*
 25585  016082  50F5               	movf	tablat,w,c
 25586  016084  0900               	iorlw	0
 25587  016086  A4D8               	btfss	status,2,c
 25588  016088  D005               	goto	l13075
 25589                           
 25590                           ; BSR set to: 1
 25591                           ;RF.c: 61: {
 25592                           ;RF.c: 62: Zero_Config1(pin);
 25593  01608A  0101               	movlb	1	; () banked
 25594  01608C  518C               	movf	Send_Config1@pin& (0+255),w,b
 25595  01608E  ECF0  F0B7         	call	_Zero_Config1
 25596                           
 25597                           ;RF.c: 63: }
 25598  016092  D022               	goto	l13081
 25599  016094                     l13075:
 25600                           
 25601                           ;RF.c: 64: else if(data[i] ==1)
 25602  016094  0101               	movlb	1	; () banked
 25603  016096  518B               	movf	Send_Config1@i& (0+255),w,b
 25604  016098  0D01               	mullw	1
 25605  01609A  C187  F189         	movff	Send_Config1@data,??_Send_Config1
 25606  01609E  C188  F18A         	movff	Send_Config1@data+1,??_Send_Config1+1
 25607  0160A2  50F3               	movf	prodl,w,c
 25608  0160A4  0101               	movlb	1	; () banked
 25609  0160A6  2789               	addwf	??_Send_Config1& (0+255),f,b
 25610  0160A8  50F4               	movf	prodh,w,c
 25611  0160AA  0101               	movlb	1	; () banked
 25612  0160AC  238A               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 25613  0160AE  C189  FFF6         	movff	??_Send_Config1,tblptrl
 25614  0160B2  C18A  FFF7         	movff	??_Send_Config1+1,tblptrh
 25615  0160B6                     	if	0	;tblptru may be non-zero
 25616  0160B6                     	endif
 25617  0160B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25618  0160B6  0E00               	movlw	low (__mediumconst shr (0+16))
 25619  0160B8  6EF8               	movwf	tblptru,c
 25620  0160BA                     	endif
 25621  0160BA  0008               	tblrd		*
 25622  0160BC  50F5               	movf	tablat,w,c
 25623  0160BE  06E8               	decf	wreg,f,c
 25624  0160C0  A4D8               	btfss	status,2,c
 25625  0160C2  D005               	goto	l13079
 25626                           
 25627                           ; BSR set to: 1
 25628                           ;RF.c: 65: {
 25629                           ;RF.c: 66: One_Config1(pin);
 25630  0160C4  0101               	movlb	1	; () banked
 25631  0160C6  518C               	movf	Send_Config1@pin& (0+255),w,b
 25632  0160C8  EC2D  F0B8         	call	_One_Config1
 25633                           
 25634                           ;RF.c: 67: }
 25635  0160CC  D005               	goto	l13081
 25636  0160CE                     l13079:
 25637                           
 25638                           ;RF.c: 68: else
 25639                           ;RF.c: 69: {
 25640                           ;RF.c: 70: f_Config1(pin);
 25641  0160CE  0101               	movlb	1	; () banked
 25642  0160D0  518C               	movf	Send_Config1@pin& (0+255),w,b
 25643  0160D2  ECB3  F0B7         	call	_f_Config1
 25644  0160D6  D000               	goto	l13081
 25645  0160D8                     l13081:
 25646  0160D8  0101               	movlb	1	; () banked
 25647  0160DA  2B8B               	incf	Send_Config1@i& (0+255),f,b
 25648  0160DC  D7B9               	goto	l13067
 25649  0160DE                     l13085:
 25650                           
 25651                           ; BSR set to: 1
 25652                           ;RF.c: 71: }
 25653                           ;RF.c: 72: }
 25654                           ;RF.c: 74: LATD |= pin;
 25655  0160DE  0101               	movlb	1	; () banked
 25656  0160E0  518C               	movf	Send_Config1@pin& (0+255),w,b
 25657  0160E2  128C               	iorwf	3980,f,c	;volatile
 25658                           
 25659                           ; BSR set to: 1
 25660                           ;RF.c: 75: delayUS(222);
 25661  0160E4  0EDE               	movlw	222
 25662  0160E6  0101               	movlb	1	; () banked
 25663  0160E8  6F7C               	movwf	delayUS@US& (0+255),b
 25664  0160EA  0E00               	movlw	0
 25665  0160EC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25666  0160EE  0E00               	movlw	0
 25667  0160F0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25668  0160F2  0E00               	movlw	0
 25669  0160F4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25670  0160F6  EC38  F0BA         	call	_delayUS	;wreg free
 25671                           
 25672                           ;RF.c: 76: LATD &= ~pin;
 25673  0160FA  0101               	movlb	1	; () banked
 25674  0160FC  518C               	movf	Send_Config1@pin& (0+255),w,b
 25675  0160FE  0AFF               	xorlw	255
 25676  016100  168C               	andwf	3980,f,c	;volatile
 25677                           
 25678                           ;RF.c: 77: delayUS(7330);
 25679  016102  0EA2               	movlw	162
 25680  016104  0101               	movlb	1	; () banked
 25681  016106  6F7C               	movwf	delayUS@US& (0+255),b
 25682  016108  0E1C               	movlw	28
 25683  01610A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25684  01610C  0E00               	movlw	0
 25685  01610E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25686  016110  0E00               	movlw	0
 25687  016112  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25688  016114  EC38  F0BA         	call	_delayUS	;wreg free
 25689  016118  0012               	return		;funcret
 25690  01611A                     __end_of_Send_Config1:
 25691                           	opt stack 0
 25692                           tblptru	equ	0xFF8
 25693                           tblptrh	equ	0xFF7
 25694                           tblptrl	equ	0xFF6
 25695                           tablat	equ	0xFF5
 25696                           prodh	equ	0xFF4
 25697                           prodl	equ	0xFF3
 25698                           intcon	equ	0xFF2
 25699                           intcon2	equ	0xFF1
 25700                           postinc0	equ	0xFEE
 25701                           plusw0	equ	0xFEB
 25702                           wreg	equ	0xFE8
 25703                           indf1	equ	0xFE7
 25704                           postdec1	equ	0xFE5
 25705                           fsr1h	equ	0xFE2
 25706                           fsr1l	equ	0xFE1
 25707                           indf2	equ	0xFDF
 25708                           postinc2	equ	0xFDE
 25709                           postdec2	equ	0xFDD
 25710                           plusw2	equ	0xFDB
 25711                           fsr2h	equ	0xFDA
 25712                           fsr2l	equ	0xFD9
 25713                           status	equ	0xFD8
 25714                           
 25715 ;; *************** function _f_Config1 *****************
 25716 ;; Defined at:
 25717 ;;		line 120 in file "RF.c"
 25718 ;; Parameters:    Size  Location     Type
 25719 ;;  pin             1    wreg     unsigned char 
 25720 ;; Auto vars:     Size  Location     Type
 25721 ;;  pin             1   24[BANK1 ] unsigned char 
 25722 ;; Return value:  Size  Location     Type
 25723 ;;		None               void
 25724 ;; Registers used:
 25725 ;;		wreg, status,2, status,0, cstack
 25726 ;; Tracked objects:
 25727 ;;		On entry : 0/0
 25728 ;;		On exit  : 0/0
 25729 ;;		Unchanged: 0/0
 25730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25732 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25734 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25735 ;;Total ram usage:        1 bytes
 25736 ;; Hardware stack levels used:    1
 25737 ;; Hardware stack levels required when called:    7
 25738 ;; This function calls:
 25739 ;;		_delayUS
 25740 ;; This function is called by:
 25741 ;;		_Send_Config1
 25742 ;; This function uses a non-reentrant model
 25743 ;;
 25744                           
 25745                           	psect	text59
 25746  016F66                     __ptext59:
 25747                           	opt stack 0
 25748  016F66                     _f_Config1:
 25749                           	opt stack 21
 25750                           
 25751                           ;incstack = 0
 25752                           ;f_Config1@pin stored from wreg
 25753  016F66  0101               	movlb	1	; () banked
 25754  016F68  6F86               	movwf	f_Config1@pin& (0+255),b
 25755                           
 25756                           ; BSR set to: 1
 25757                           ;RF.c: 122: LATD |= pin;
 25758  016F6A  0101               	movlb	1	; () banked
 25759  016F6C  5186               	movf	f_Config1@pin& (0+255),w,b
 25760  016F6E  128C               	iorwf	3980,f,c	;volatile
 25761                           
 25762                           ; BSR set to: 1
 25763                           ;RF.c: 123: delayUS(216);
 25764  016F70  0ED8               	movlw	216
 25765  016F72  0101               	movlb	1	; () banked
 25766  016F74  6F7C               	movwf	delayUS@US& (0+255),b
 25767  016F76  0E00               	movlw	0
 25768  016F78  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25769  016F7A  0E00               	movlw	0
 25770  016F7C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25771  016F7E  0E00               	movlw	0
 25772  016F80  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25773  016F82  EC38  F0BA         	call	_delayUS	;wreg free
 25774                           
 25775                           ;RF.c: 124: LATD &= ~pin;
 25776  016F86  0101               	movlb	1	; () banked
 25777  016F88  5186               	movf	f_Config1@pin& (0+255),w,b
 25778  016F8A  0AFF               	xorlw	255
 25779  016F8C  168C               	andwf	3980,f,c	;volatile
 25780                           
 25781                           ;RF.c: 125: delayUS(614);
 25782  016F8E  0E66               	movlw	102
 25783  016F90  0101               	movlb	1	; () banked
 25784  016F92  6F7C               	movwf	delayUS@US& (0+255),b
 25785  016F94  0E02               	movlw	2
 25786  016F96  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25787  016F98  0E00               	movlw	0
 25788  016F9A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25789  016F9C  0E00               	movlw	0
 25790  016F9E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25791  016FA0  EC38  F0BA         	call	_delayUS	;wreg free
 25792                           
 25793                           ;RF.c: 126: LATD |= pin;
 25794  016FA4  0101               	movlb	1	; () banked
 25795  016FA6  5186               	movf	f_Config1@pin& (0+255),w,b
 25796  016FA8  128C               	iorwf	3980,f,c	;volatile
 25797                           
 25798                           ; BSR set to: 1
 25799                           ;RF.c: 127: delayUS(614);
 25800  016FAA  0E66               	movlw	102
 25801  016FAC  0101               	movlb	1	; () banked
 25802  016FAE  6F7C               	movwf	delayUS@US& (0+255),b
 25803  016FB0  0E02               	movlw	2
 25804  016FB2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25805  016FB4  0E00               	movlw	0
 25806  016FB6  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25807  016FB8  0E00               	movlw	0
 25808  016FBA  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25809  016FBC  EC38  F0BA         	call	_delayUS	;wreg free
 25810                           
 25811                           ;RF.c: 128: LATD &= ~pin;
 25812  016FC0  0101               	movlb	1	; () banked
 25813  016FC2  5186               	movf	f_Config1@pin& (0+255),w,b
 25814  016FC4  0AFF               	xorlw	255
 25815  016FC6  168C               	andwf	3980,f,c	;volatile
 25816                           
 25817                           ; BSR set to: 1
 25818                           ;RF.c: 129: delayUS(216);
 25819  016FC8  0ED8               	movlw	216
 25820  016FCA  0101               	movlb	1	; () banked
 25821  016FCC  6F7C               	movwf	delayUS@US& (0+255),b
 25822  016FCE  0E00               	movlw	0
 25823  016FD0  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25824  016FD2  0E00               	movlw	0
 25825  016FD4  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25826  016FD6  0E00               	movlw	0
 25827  016FD8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25828  016FDA  EC38  F0BA         	call	_delayUS	;wreg free
 25829  016FDE  0012               	return		;funcret
 25830  016FE0                     __end_of_f_Config1:
 25831                           	opt stack 0
 25832                           tblptru	equ	0xFF8
 25833                           tblptrh	equ	0xFF7
 25834                           tblptrl	equ	0xFF6
 25835                           tablat	equ	0xFF5
 25836                           prodh	equ	0xFF4
 25837                           prodl	equ	0xFF3
 25838                           intcon	equ	0xFF2
 25839                           intcon2	equ	0xFF1
 25840                           postinc0	equ	0xFEE
 25841                           plusw0	equ	0xFEB
 25842                           wreg	equ	0xFE8
 25843                           indf1	equ	0xFE7
 25844                           postdec1	equ	0xFE5
 25845                           fsr1h	equ	0xFE2
 25846                           fsr1l	equ	0xFE1
 25847                           indf2	equ	0xFDF
 25848                           postinc2	equ	0xFDE
 25849                           postdec2	equ	0xFDD
 25850                           plusw2	equ	0xFDB
 25851                           fsr2h	equ	0xFDA
 25852                           fsr2l	equ	0xFD9
 25853                           status	equ	0xFD8
 25854                           
 25855 ;; *************** function _Zero_Config1 *****************
 25856 ;; Defined at:
 25857 ;;		line 86 in file "RF.c"
 25858 ;; Parameters:    Size  Location     Type
 25859 ;;  pin             1    wreg     unsigned char 
 25860 ;; Auto vars:     Size  Location     Type
 25861 ;;  pin             1   24[BANK1 ] unsigned char 
 25862 ;; Return value:  Size  Location     Type
 25863 ;;		None               void
 25864 ;; Registers used:
 25865 ;;		wreg, status,2, status,0, cstack
 25866 ;; Tracked objects:
 25867 ;;		On entry : 0/0
 25868 ;;		On exit  : 0/0
 25869 ;;		Unchanged: 0/0
 25870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25872 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25874 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25875 ;;Total ram usage:        1 bytes
 25876 ;; Hardware stack levels used:    1
 25877 ;; Hardware stack levels required when called:    7
 25878 ;; This function calls:
 25879 ;;		_delayUS
 25880 ;; This function is called by:
 25881 ;;		_Send_Config1
 25882 ;; This function uses a non-reentrant model
 25883 ;;
 25884                           
 25885                           	psect	text60
 25886  016FE0                     __ptext60:
 25887                           	opt stack 0
 25888  016FE0                     _Zero_Config1:
 25889                           	opt stack 21
 25890                           
 25891                           ;incstack = 0
 25892                           ;Zero_Config1@pin stored from wreg
 25893  016FE0  0101               	movlb	1	; () banked
 25894  016FE2  6F86               	movwf	Zero_Config1@pin& (0+255),b
 25895                           
 25896                           ; BSR set to: 1
 25897                           ;RF.c: 88: LATD |= pin;
 25898  016FE4  0101               	movlb	1	; () banked
 25899  016FE6  5186               	movf	Zero_Config1@pin& (0+255),w,b
 25900  016FE8  128C               	iorwf	3980,f,c	;volatile
 25901                           
 25902                           ; BSR set to: 1
 25903                           ;RF.c: 89: delayUS(216 );
 25904  016FEA  0ED8               	movlw	216
 25905  016FEC  0101               	movlb	1	; () banked
 25906  016FEE  6F7C               	movwf	delayUS@US& (0+255),b
 25907  016FF0  0E00               	movlw	0
 25908  016FF2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25909  016FF4  0E00               	movlw	0
 25910  016FF6  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25911  016FF8  0E00               	movlw	0
 25912  016FFA  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25913  016FFC  EC38  F0BA         	call	_delayUS	;wreg free
 25914                           
 25915                           ;RF.c: 90: LATD &= ~pin;
 25916  017000  0101               	movlb	1	; () banked
 25917  017002  5186               	movf	Zero_Config1@pin& (0+255),w,b
 25918  017004  0AFF               	xorlw	255
 25919  017006  168C               	andwf	3980,f,c	;volatile
 25920                           
 25921                           ;RF.c: 91: delayUS(614 );
 25922  017008  0E66               	movlw	102
 25923  01700A  0101               	movlb	1	; () banked
 25924  01700C  6F7C               	movwf	delayUS@US& (0+255),b
 25925  01700E  0E02               	movlw	2
 25926  017010  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25927  017012  0E00               	movlw	0
 25928  017014  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25929  017016  0E00               	movlw	0
 25930  017018  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25931  01701A  EC38  F0BA         	call	_delayUS	;wreg free
 25932                           
 25933                           ;RF.c: 92: LATD |= pin;
 25934  01701E  0101               	movlb	1	; () banked
 25935  017020  5186               	movf	Zero_Config1@pin& (0+255),w,b
 25936  017022  128C               	iorwf	3980,f,c	;volatile
 25937                           
 25938                           ; BSR set to: 1
 25939                           ;RF.c: 93: delayUS(216 );
 25940  017024  0ED8               	movlw	216
 25941  017026  0101               	movlb	1	; () banked
 25942  017028  6F7C               	movwf	delayUS@US& (0+255),b
 25943  01702A  0E00               	movlw	0
 25944  01702C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25945  01702E  0E00               	movlw	0
 25946  017030  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25947  017032  0E00               	movlw	0
 25948  017034  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25949  017036  EC38  F0BA         	call	_delayUS	;wreg free
 25950                           
 25951                           ;RF.c: 94: LATD &= ~pin;
 25952  01703A  0101               	movlb	1	; () banked
 25953  01703C  5186               	movf	Zero_Config1@pin& (0+255),w,b
 25954  01703E  0AFF               	xorlw	255
 25955  017040  168C               	andwf	3980,f,c	;volatile
 25956                           
 25957                           ; BSR set to: 1
 25958                           ;RF.c: 95: delayUS(614 );
 25959  017042  0E66               	movlw	102
 25960  017044  0101               	movlb	1	; () banked
 25961  017046  6F7C               	movwf	delayUS@US& (0+255),b
 25962  017048  0E02               	movlw	2
 25963  01704A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25964  01704C  0E00               	movlw	0
 25965  01704E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25966  017050  0E00               	movlw	0
 25967  017052  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25968  017054  EC38  F0BA         	call	_delayUS	;wreg free
 25969  017058  0012               	return		;funcret
 25970  01705A                     __end_of_Zero_Config1:
 25971                           	opt stack 0
 25972                           tblptru	equ	0xFF8
 25973                           tblptrh	equ	0xFF7
 25974                           tblptrl	equ	0xFF6
 25975                           tablat	equ	0xFF5
 25976                           prodh	equ	0xFF4
 25977                           prodl	equ	0xFF3
 25978                           intcon	equ	0xFF2
 25979                           intcon2	equ	0xFF1
 25980                           postinc0	equ	0xFEE
 25981                           plusw0	equ	0xFEB
 25982                           wreg	equ	0xFE8
 25983                           indf1	equ	0xFE7
 25984                           postdec1	equ	0xFE5
 25985                           fsr1h	equ	0xFE2
 25986                           fsr1l	equ	0xFE1
 25987                           indf2	equ	0xFDF
 25988                           postinc2	equ	0xFDE
 25989                           postdec2	equ	0xFDD
 25990                           plusw2	equ	0xFDB
 25991                           fsr2h	equ	0xFDA
 25992                           fsr2l	equ	0xFD9
 25993                           status	equ	0xFD8
 25994                           
 25995 ;; *************** function _One_Config1 *****************
 25996 ;; Defined at:
 25997 ;;		line 103 in file "RF.c"
 25998 ;; Parameters:    Size  Location     Type
 25999 ;;  pin             1    wreg     unsigned char 
 26000 ;; Auto vars:     Size  Location     Type
 26001 ;;  pin             1   24[BANK1 ] unsigned char 
 26002 ;; Return value:  Size  Location     Type
 26003 ;;		None               void
 26004 ;; Registers used:
 26005 ;;		wreg, status,2, status,0, cstack
 26006 ;; Tracked objects:
 26007 ;;		On entry : 0/0
 26008 ;;		On exit  : 0/0
 26009 ;;		Unchanged: 0/0
 26010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26012 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26014 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26015 ;;Total ram usage:        1 bytes
 26016 ;; Hardware stack levels used:    1
 26017 ;; Hardware stack levels required when called:    7
 26018 ;; This function calls:
 26019 ;;		_delayUS
 26020 ;; This function is called by:
 26021 ;;		_Send_Config1
 26022 ;; This function uses a non-reentrant model
 26023 ;;
 26024                           
 26025                           	psect	text61
 26026  01705A                     __ptext61:
 26027                           	opt stack 0
 26028  01705A                     _One_Config1:
 26029                           	opt stack 21
 26030                           
 26031                           ;incstack = 0
 26032                           ;One_Config1@pin stored from wreg
 26033  01705A  0101               	movlb	1	; () banked
 26034  01705C  6F86               	movwf	One_Config1@pin& (0+255),b
 26035                           
 26036                           ; BSR set to: 1
 26037                           ;RF.c: 105: LATD |= pin;
 26038  01705E  0101               	movlb	1	; () banked
 26039  017060  5186               	movf	One_Config1@pin& (0+255),w,b
 26040  017062  128C               	iorwf	3980,f,c	;volatile
 26041                           
 26042                           ; BSR set to: 1
 26043                           ;RF.c: 106: delayUS(614);
 26044  017064  0E66               	movlw	102
 26045  017066  0101               	movlb	1	; () banked
 26046  017068  6F7C               	movwf	delayUS@US& (0+255),b
 26047  01706A  0E02               	movlw	2
 26048  01706C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 26049  01706E  0E00               	movlw	0
 26050  017070  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 26051  017072  0E00               	movlw	0
 26052  017074  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 26053  017076  EC38  F0BA         	call	_delayUS	;wreg free
 26054                           
 26055                           ;RF.c: 107: LATD &= ~pin;
 26056  01707A  0101               	movlb	1	; () banked
 26057  01707C  5186               	movf	One_Config1@pin& (0+255),w,b
 26058  01707E  0AFF               	xorlw	255
 26059  017080  168C               	andwf	3980,f,c	;volatile
 26060                           
 26061                           ;RF.c: 108: delayUS(216);
 26062  017082  0ED8               	movlw	216
 26063  017084  0101               	movlb	1	; () banked
 26064  017086  6F7C               	movwf	delayUS@US& (0+255),b
 26065  017088  0E00               	movlw	0
 26066  01708A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 26067  01708C  0E00               	movlw	0
 26068  01708E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 26069  017090  0E00               	movlw	0
 26070  017092  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 26071  017094  EC38  F0BA         	call	_delayUS	;wreg free
 26072                           
 26073                           ;RF.c: 109: LATD |= pin;
 26074  017098  0101               	movlb	1	; () banked
 26075  01709A  5186               	movf	One_Config1@pin& (0+255),w,b
 26076  01709C  128C               	iorwf	3980,f,c	;volatile
 26077                           
 26078                           ; BSR set to: 1
 26079                           ;RF.c: 110: delayUS(614);
 26080  01709E  0E66               	movlw	102
 26081  0170A0  0101               	movlb	1	; () banked
 26082  0170A2  6F7C               	movwf	delayUS@US& (0+255),b
 26083  0170A4  0E02               	movlw	2
 26084  0170A6  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 26085  0170A8  0E00               	movlw	0
 26086  0170AA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 26087  0170AC  0E00               	movlw	0
 26088  0170AE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 26089  0170B0  EC38  F0BA         	call	_delayUS	;wreg free
 26090                           
 26091                           ;RF.c: 111: LATD &= ~pin;
 26092  0170B4  0101               	movlb	1	; () banked
 26093  0170B6  5186               	movf	One_Config1@pin& (0+255),w,b
 26094  0170B8  0AFF               	xorlw	255
 26095  0170BA  168C               	andwf	3980,f,c	;volatile
 26096                           
 26097                           ; BSR set to: 1
 26098                           ;RF.c: 112: delayUS(216);
 26099  0170BC  0ED8               	movlw	216
 26100  0170BE  0101               	movlb	1	; () banked
 26101  0170C0  6F7C               	movwf	delayUS@US& (0+255),b
 26102  0170C2  0E00               	movlw	0
 26103  0170C4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 26104  0170C6  0E00               	movlw	0
 26105  0170C8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 26106  0170CA  0E00               	movlw	0
 26107  0170CC  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 26108  0170CE  EC38  F0BA         	call	_delayUS	;wreg free
 26109  0170D2  0012               	return		;funcret
 26110  0170D4                     __end_of_One_Config1:
 26111                           	opt stack 0
 26112                           tblptru	equ	0xFF8
 26113                           tblptrh	equ	0xFF7
 26114                           tblptrl	equ	0xFF6
 26115                           tablat	equ	0xFF5
 26116                           prodh	equ	0xFF4
 26117                           prodl	equ	0xFF3
 26118                           intcon	equ	0xFF2
 26119                           intcon2	equ	0xFF1
 26120                           postinc0	equ	0xFEE
 26121                           plusw0	equ	0xFEB
 26122                           wreg	equ	0xFE8
 26123                           indf1	equ	0xFE7
 26124                           postdec1	equ	0xFE5
 26125                           fsr1h	equ	0xFE2
 26126                           fsr1l	equ	0xFE1
 26127                           indf2	equ	0xFDF
 26128                           postinc2	equ	0xFDE
 26129                           postdec2	equ	0xFDD
 26130                           plusw2	equ	0xFDB
 26131                           fsr2h	equ	0xFDA
 26132                           fsr2l	equ	0xFD9
 26133                           status	equ	0xFD8
 26134                           
 26135 ;; *************** function _SET_RTC_TIME *****************
 26136 ;; Defined at:
 26137 ;;		line 170 in file "RTC.c"
 26138 ;; Parameters:    Size  Location     Type
 26139 ;;  SetTime         9   22[BANK1 ] struct TIME
 26140 ;; Auto vars:     Size  Location     Type
 26141 ;;  temp            7   35[BANK1 ] unsigned char [7]
 26142 ;;  Error           1   42[BANK1 ] char 
 26143 ;; Return value:  Size  Location     Type
 26144 ;;                  1    wreg      unsigned char 
 26145 ;; Registers used:
 26146 ;;		wreg, status,2, status,0, cstack
 26147 ;; Tracked objects:
 26148 ;;		On entry : 0/0
 26149 ;;		On exit  : 0/0
 26150 ;;		Unchanged: 0/0
 26151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26152 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 26153 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 26154 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26155 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
 26156 ;;Total ram usage:       21 bytes
 26157 ;; Hardware stack levels used:    1
 26158 ;; Hardware stack levels required when called:    9
 26159 ;; This function calls:
 26160 ;;		_I2C_Write_At_Address
 26161 ;;		___awdiv
 26162 ;;		___awmod
 26163 ;; This function is called by:
 26164 ;;		_Command
 26165 ;; This function uses a non-reentrant model
 26166 ;;
 26167                           
 26168                           	psect	text62
 26169  01455E                     __ptext62:
 26170                           	opt stack 0
 26171  01455E                     _SET_RTC_TIME:
 26172                           	opt stack 20
 26173                           
 26174                           ;RTC.c: 172: signed char Error =0;
 26175                           
 26176                           ;incstack = 0
 26177  01455E  0E00               	movlw	0
 26178  014560  0101               	movlb	1	; () banked
 26179  014562  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 26180                           
 26181                           ; BSR set to: 1
 26182                           ;RTC.c: 173: unsigned char temp[7];
 26183                           ;RTC.c: 175: temp[0] = ((SetTime.Seconds /10) << 4) + (SetTime.Seconds % 10);
 26184  014564  C184  F17C         	movff	SET_RTC_TIME@SetTime,___awmod@dividend
 26185  014568  0101               	movlb	1	; () banked
 26186  01456A  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 26187  01456C  0E00               	movlw	0
 26188  01456E  0101               	movlb	1	; () banked
 26189  014570  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 26190  014572  0E0A               	movlw	10
 26191  014574  6F7E               	movwf	___awmod@divisor& (0+255),b
 26192  014576  EC40  F0B3         	call	___awmod	;wreg free
 26193  01457A  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 26194  01457E  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 26195  014582  C184  F17C         	movff	SET_RTC_TIME@SetTime,___awdiv@dividend
 26196  014586  0101               	movlb	1	; () banked
 26197  014588  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 26198  01458A  0E00               	movlw	0
 26199  01458C  0101               	movlb	1	; () banked
 26200  01458E  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 26201  014590  0E0A               	movlw	10
 26202  014592  6F7E               	movwf	___awdiv@divisor& (0+255),b
 26203  014594  EC8D  F0B0         	call	___awdiv	;wreg free
 26204  014598  0101               	movlb	1	; () banked
 26205  01459A  397C               	swapf	?___awdiv& (0+255),w,b
 26206  01459C  0BF0               	andlw	240
 26207  01459E  0101               	movlb	1	; () banked
 26208  0145A0  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 26209  0145A2  0101               	movlb	1	; () banked
 26210  0145A4  6F91               	movwf	SET_RTC_TIME@temp& (0+255),b
 26211                           
 26212                           ; BSR set to: 1
 26213                           ;RTC.c: 176: Error = I2C_Write_At_Address( 0b1101000, 0x00, temp[0] );
 26214  0145A6  0E00               	movlw	0
 26215  0145A8  0101               	movlb	1	; () banked
 26216  0145AA  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26217  0145AC  C191  F17F         	movff	SET_RTC_TIME@temp,I2C_Write_At_Address@data
 26218  0145B0  0E68               	movlw	104
 26219  0145B2  ECF5  F0B0         	call	_I2C_Write_At_Address
 26220  0145B6  0101               	movlb	1	; () banked
 26221  0145B8  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 26222                           
 26223                           ;RTC.c: 177: if(Error)
 26224  0145BA  0101               	movlb	1	; () banked
 26225  0145BC  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26226  0145BE  0101               	movlb	1	; () banked
 26227  0145C0  B4D8               	btfsc	status,2,c
 26228  0145C2  D002               	goto	l13447
 26229                           
 26230                           ; BSR set to: 1
 26231                           ;RTC.c: 178: {
 26232                           ;RTC.c: 179: return 1;
 26233  0145C4  0E01               	movlw	1
 26234                           
 26235                           ; BSR set to: 1
 26236  0145C6  0012               	return	
 26237  0145C8                     l13447:
 26238                           
 26239                           ; BSR set to: 1
 26240                           ;RTC.c: 180: }
 26241                           ;RTC.c: 182: temp[1] = ((SetTime.Minutes /10) << 4) + (SetTime.Minutes % 10);
 26242  0145C8  C185  F17C         	movff	SET_RTC_TIME@SetTime+1,___awmod@dividend
 26243  0145CC  0101               	movlb	1	; () banked
 26244  0145CE  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 26245  0145D0  0E00               	movlw	0
 26246  0145D2  0101               	movlb	1	; () banked
 26247  0145D4  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 26248  0145D6  0E0A               	movlw	10
 26249  0145D8  6F7E               	movwf	___awmod@divisor& (0+255),b
 26250  0145DA  EC40  F0B3         	call	___awmod	;wreg free
 26251  0145DE  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 26252  0145E2  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 26253  0145E6  C185  F17C         	movff	SET_RTC_TIME@SetTime+1,___awdiv@dividend
 26254  0145EA  0101               	movlb	1	; () banked
 26255  0145EC  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 26256  0145EE  0E00               	movlw	0
 26257  0145F0  0101               	movlb	1	; () banked
 26258  0145F2  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 26259  0145F4  0E0A               	movlw	10
 26260  0145F6  6F7E               	movwf	___awdiv@divisor& (0+255),b
 26261  0145F8  EC8D  F0B0         	call	___awdiv	;wreg free
 26262  0145FC  0101               	movlb	1	; () banked
 26263  0145FE  397C               	swapf	?___awdiv& (0+255),w,b
 26264  014600  0BF0               	andlw	240
 26265  014602  0101               	movlb	1	; () banked
 26266  014604  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 26267  014606  0101               	movlb	1	; () banked
 26268  014608  6F92               	movwf	(SET_RTC_TIME@temp+1)& (0+255),b
 26269                           
 26270                           ;RTC.c: 183: Error = I2C_Write_At_Address( 0b1101000, 0x01, temp[1] );
 26271  01460A  0E01               	movlw	1
 26272  01460C  0101               	movlb	1	; () banked
 26273  01460E  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26274  014610  C192  F17F         	movff	SET_RTC_TIME@temp+1,I2C_Write_At_Address@data
 26275  014614  0E68               	movlw	104
 26276  014616  ECF5  F0B0         	call	_I2C_Write_At_Address
 26277  01461A  0101               	movlb	1	; () banked
 26278  01461C  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 26279                           
 26280                           ; BSR set to: 1
 26281                           ;RTC.c: 184: if(Error)
 26282  01461E  0101               	movlb	1	; () banked
 26283  014620  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26284  014622  0101               	movlb	1	; () banked
 26285  014624  B4D8               	btfsc	status,2,c
 26286  014626  D002               	goto	l13455
 26287                           
 26288                           ; BSR set to: 1
 26289                           ;RTC.c: 185: {
 26290                           ;RTC.c: 186: return 2;
 26291  014628  0E02               	movlw	2
 26292                           
 26293                           ; BSR set to: 1
 26294  01462A  0012               	return	
 26295  01462C                     l13455:
 26296                           
 26297                           ; BSR set to: 1
 26298                           ;RTC.c: 187: }
 26299                           ;RTC.c: 189: temp[2] = ((SetTime.Hours /10) << 4) + (SetTime.Hours % 10) + (SetTime.Hour
      +                          sAM_PM << 5);
 26300  01462C  C188  F18D         	movff	SET_RTC_TIME@SetTime+4,??_SET_RTC_TIME
 26301  014630  0E05               	movlw	5
 26302  014632  0101               	movlb	1	; () banked
 26303  014634  6F8E               	movwf	(??_SET_RTC_TIME+1)& (0+255),b
 26304  014636                     u17635:
 26305  014636  0101               	movlb	1	; () banked
 26306  014638  90D8               	bcf	status,0,c
 26307  01463A  378D               	rlcf	??_SET_RTC_TIME& (0+255),f,b
 26308  01463C  0101               	movlb	1	; () banked
 26309  01463E  2F8E               	decfsz	(??_SET_RTC_TIME+1)& (0+255),f,b
 26310  014640  D7FA               	goto	u17635
 26311  014642  C186  F17C         	movff	SET_RTC_TIME@SetTime+2,___awmod@dividend
 26312  014646  0101               	movlb	1	; () banked
 26313  014648  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 26314  01464A  0E00               	movlw	0
 26315  01464C  0101               	movlb	1	; () banked
 26316  01464E  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 26317  014650  0E0A               	movlw	10
 26318  014652  6F7E               	movwf	___awmod@divisor& (0+255),b
 26319  014654  EC40  F0B3         	call	___awmod	;wreg free
 26320  014658  C17C  F18F         	movff	?___awmod,??_SET_RTC_TIME+2
 26321  01465C  C17D  F190         	movff	?___awmod+1,??_SET_RTC_TIME+3
 26322  014660  C186  F17C         	movff	SET_RTC_TIME@SetTime+2,___awdiv@dividend
 26323  014664  0101               	movlb	1	; () banked
 26324  014666  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 26325  014668  0E00               	movlw	0
 26326  01466A  0101               	movlb	1	; () banked
 26327  01466C  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 26328  01466E  0E0A               	movlw	10
 26329  014670  6F7E               	movwf	___awdiv@divisor& (0+255),b
 26330  014672  EC8D  F0B0         	call	___awdiv	;wreg free
 26331  014676  0101               	movlb	1	; () banked
 26332  014678  397C               	swapf	?___awdiv& (0+255),w,b
 26333  01467A  0BF0               	andlw	240
 26334  01467C  0101               	movlb	1	; () banked
 26335  01467E  258F               	addwf	(??_SET_RTC_TIME+2)& (0+255),w,b
 26336  014680  0101               	movlb	1	; () banked
 26337  014682  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 26338  014684  0101               	movlb	1	; () banked
 26339  014686  6F93               	movwf	(SET_RTC_TIME@temp+2)& (0+255),b
 26340                           
 26341                           ;RTC.c: 190: Error = I2C_Write_At_Address( 0b1101000, 0x02, temp[2] );
 26342  014688  0E02               	movlw	2
 26343  01468A  0101               	movlb	1	; () banked
 26344  01468C  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26345  01468E  C193  F17F         	movff	SET_RTC_TIME@temp+2,I2C_Write_At_Address@data
 26346  014692  0E68               	movlw	104
 26347  014694  ECF5  F0B0         	call	_I2C_Write_At_Address
 26348  014698  0101               	movlb	1	; () banked
 26349  01469A  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 26350                           
 26351                           ; BSR set to: 1
 26352                           ;RTC.c: 191: if(Error)
 26353  01469C  0101               	movlb	1	; () banked
 26354  01469E  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26355  0146A0  0101               	movlb	1	; () banked
 26356  0146A2  B4D8               	btfsc	status,2,c
 26357  0146A4  D002               	goto	l1212
 26358                           
 26359                           ; BSR set to: 1
 26360                           ;RTC.c: 192: {
 26361                           ;RTC.c: 193: return 3;
 26362  0146A6  0E03               	movlw	3
 26363                           
 26364                           ; BSR set to: 1
 26365  0146A8  0012               	return	
 26366  0146AA                     l1212:
 26367                           
 26368                           ; BSR set to: 1
 26369                           ;RTC.c: 194: }
 26370                           ;RTC.c: 196: temp[3] = (SetTime.Day);
 26371  0146AA  C189  F194         	movff	SET_RTC_TIME@SetTime+5,SET_RTC_TIME@temp+3
 26372                           
 26373                           ; BSR set to: 1
 26374                           ;RTC.c: 197: Error = I2C_Write_At_Address( 0b1101000, 0x03, temp[3] );
 26375  0146AE  0E03               	movlw	3
 26376  0146B0  0101               	movlb	1	; () banked
 26377  0146B2  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26378  0146B4  C194  F17F         	movff	SET_RTC_TIME@temp+3,I2C_Write_At_Address@data
 26379  0146B8  0E68               	movlw	104
 26380  0146BA  ECF5  F0B0         	call	_I2C_Write_At_Address
 26381  0146BE  0101               	movlb	1	; () banked
 26382  0146C0  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 26383                           
 26384                           ; BSR set to: 1
 26385                           ;RTC.c: 198: if(Error)
 26386  0146C2  0101               	movlb	1	; () banked
 26387  0146C4  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26388  0146C6  0101               	movlb	1	; () banked
 26389  0146C8  B4D8               	btfsc	status,2,c
 26390  0146CA  D002               	goto	l13471
 26391                           
 26392                           ; BSR set to: 1
 26393                           ;RTC.c: 199: {
 26394                           ;RTC.c: 200: return 4;
 26395  0146CC  0E04               	movlw	4
 26396                           
 26397                           ; BSR set to: 1
 26398  0146CE  0012               	return	
 26399  0146D0                     l13471:
 26400                           
 26401                           ; BSR set to: 1
 26402                           ;RTC.c: 201: }
 26403                           ;RTC.c: 203: temp[4] = ((SetTime.Date /10) << 4) + (SetTime.Date % 10);
 26404  0146D0  C18A  F17C         	movff	SET_RTC_TIME@SetTime+6,___awmod@dividend
 26405  0146D4  0101               	movlb	1	; () banked
 26406  0146D6  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 26407  0146D8  0E00               	movlw	0
 26408  0146DA  0101               	movlb	1	; () banked
 26409  0146DC  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 26410  0146DE  0E0A               	movlw	10
 26411  0146E0  6F7E               	movwf	___awmod@divisor& (0+255),b
 26412  0146E2  EC40  F0B3         	call	___awmod	;wreg free
 26413  0146E6  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 26414  0146EA  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 26415  0146EE  C18A  F17C         	movff	SET_RTC_TIME@SetTime+6,___awdiv@dividend
 26416  0146F2  0101               	movlb	1	; () banked
 26417  0146F4  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 26418  0146F6  0E00               	movlw	0
 26419  0146F8  0101               	movlb	1	; () banked
 26420  0146FA  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 26421  0146FC  0E0A               	movlw	10
 26422  0146FE  6F7E               	movwf	___awdiv@divisor& (0+255),b
 26423  014700  EC8D  F0B0         	call	___awdiv	;wreg free
 26424  014704  0101               	movlb	1	; () banked
 26425  014706  397C               	swapf	?___awdiv& (0+255),w,b
 26426  014708  0BF0               	andlw	240
 26427  01470A  0101               	movlb	1	; () banked
 26428  01470C  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 26429  01470E  0101               	movlb	1	; () banked
 26430  014710  6F95               	movwf	(SET_RTC_TIME@temp+4)& (0+255),b
 26431                           
 26432                           ;RTC.c: 204: Error = I2C_Write_At_Address( 0b1101000, 0x04, temp[4] );
 26433  014712  0E04               	movlw	4
 26434  014714  0101               	movlb	1	; () banked
 26435  014716  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26436  014718  C195  F17F         	movff	SET_RTC_TIME@temp+4,I2C_Write_At_Address@data
 26437  01471C  0E68               	movlw	104
 26438  01471E  ECF5  F0B0         	call	_I2C_Write_At_Address
 26439  014722  0101               	movlb	1	; () banked
 26440  014724  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 26441                           
 26442                           ; BSR set to: 1
 26443                           ;RTC.c: 205: if(Error)
 26444  014726  0101               	movlb	1	; () banked
 26445  014728  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26446  01472A  0101               	movlb	1	; () banked
 26447  01472C  B4D8               	btfsc	status,2,c
 26448  01472E  D002               	goto	l13479
 26449                           
 26450                           ; BSR set to: 1
 26451                           ;RTC.c: 206: {
 26452                           ;RTC.c: 207: return 5;
 26453  014730  0E05               	movlw	5
 26454                           
 26455                           ; BSR set to: 1
 26456  014732  0012               	return	
 26457  014734                     l13479:
 26458                           
 26459                           ; BSR set to: 1
 26460                           ;RTC.c: 208: }
 26461                           ;RTC.c: 210: temp[5] = ((SetTime.Month /10) << 4) + (SetTime.Month % 10);
 26462  014734  C18B  F17C         	movff	SET_RTC_TIME@SetTime+7,___awmod@dividend
 26463  014738  0101               	movlb	1	; () banked
 26464  01473A  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 26465  01473C  0E00               	movlw	0
 26466  01473E  0101               	movlb	1	; () banked
 26467  014740  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 26468  014742  0E0A               	movlw	10
 26469  014744  6F7E               	movwf	___awmod@divisor& (0+255),b
 26470  014746  EC40  F0B3         	call	___awmod	;wreg free
 26471  01474A  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 26472  01474E  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 26473  014752  C18B  F17C         	movff	SET_RTC_TIME@SetTime+7,___awdiv@dividend
 26474  014756  0101               	movlb	1	; () banked
 26475  014758  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 26476  01475A  0E00               	movlw	0
 26477  01475C  0101               	movlb	1	; () banked
 26478  01475E  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 26479  014760  0E0A               	movlw	10
 26480  014762  6F7E               	movwf	___awdiv@divisor& (0+255),b
 26481  014764  EC8D  F0B0         	call	___awdiv	;wreg free
 26482  014768  0101               	movlb	1	; () banked
 26483  01476A  397C               	swapf	?___awdiv& (0+255),w,b
 26484  01476C  0BF0               	andlw	240
 26485  01476E  0101               	movlb	1	; () banked
 26486  014770  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 26487  014772  0101               	movlb	1	; () banked
 26488  014774  6F96               	movwf	(SET_RTC_TIME@temp+5)& (0+255),b
 26489                           
 26490                           ;RTC.c: 211: Error = I2C_Write_At_Address( 0b1101000, 0x05, temp[5] );
 26491  014776  0E05               	movlw	5
 26492  014778  0101               	movlb	1	; () banked
 26493  01477A  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26494  01477C  C196  F17F         	movff	SET_RTC_TIME@temp+5,I2C_Write_At_Address@data
 26495  014780  0E68               	movlw	104
 26496  014782  ECF5  F0B0         	call	_I2C_Write_At_Address
 26497  014786  0101               	movlb	1	; () banked
 26498  014788  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 26499                           
 26500                           ; BSR set to: 1
 26501                           ;RTC.c: 212: if(Error)
 26502  01478A  0101               	movlb	1	; () banked
 26503  01478C  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26504  01478E  0101               	movlb	1	; () banked
 26505  014790  B4D8               	btfsc	status,2,c
 26506  014792  D002               	goto	l13487
 26507                           
 26508                           ; BSR set to: 1
 26509                           ;RTC.c: 213: {
 26510                           ;RTC.c: 214: return 6;
 26511  014794  0E06               	movlw	6
 26512                           
 26513                           ; BSR set to: 1
 26514  014796  0012               	return	
 26515  014798                     l13487:
 26516                           
 26517                           ; BSR set to: 1
 26518                           ;RTC.c: 215: }
 26519                           ;RTC.c: 217: temp[6] = ((SetTime.Year /10) << 4) + (SetTime.Year % 10);
 26520  014798  C18C  F17C         	movff	SET_RTC_TIME@SetTime+8,___awmod@dividend
 26521  01479C  0101               	movlb	1	; () banked
 26522  01479E  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 26523  0147A0  0E00               	movlw	0
 26524  0147A2  0101               	movlb	1	; () banked
 26525  0147A4  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 26526  0147A6  0E0A               	movlw	10
 26527  0147A8  6F7E               	movwf	___awmod@divisor& (0+255),b
 26528  0147AA  EC40  F0B3         	call	___awmod	;wreg free
 26529  0147AE  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 26530  0147B2  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 26531  0147B6  C18C  F17C         	movff	SET_RTC_TIME@SetTime+8,___awdiv@dividend
 26532  0147BA  0101               	movlb	1	; () banked
 26533  0147BC  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 26534  0147BE  0E00               	movlw	0
 26535  0147C0  0101               	movlb	1	; () banked
 26536  0147C2  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 26537  0147C4  0E0A               	movlw	10
 26538  0147C6  6F7E               	movwf	___awdiv@divisor& (0+255),b
 26539  0147C8  EC8D  F0B0         	call	___awdiv	;wreg free
 26540  0147CC  0101               	movlb	1	; () banked
 26541  0147CE  397C               	swapf	?___awdiv& (0+255),w,b
 26542  0147D0  0BF0               	andlw	240
 26543  0147D2  0101               	movlb	1	; () banked
 26544  0147D4  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 26545  0147D6  0101               	movlb	1	; () banked
 26546  0147D8  6F97               	movwf	(SET_RTC_TIME@temp+6)& (0+255),b
 26547                           
 26548                           ;RTC.c: 218: Error = I2C_Write_At_Address( 0b1101000, 0x06, temp[6] );
 26549  0147DA  0E06               	movlw	6
 26550  0147DC  0101               	movlb	1	; () banked
 26551  0147DE  6F7E               	movwf	I2C_Write_At_Address@Register& (0+255),b
 26552  0147E0  C197  F17F         	movff	SET_RTC_TIME@temp+6,I2C_Write_At_Address@data
 26553  0147E4  0E68               	movlw	104
 26554  0147E6  ECF5  F0B0         	call	_I2C_Write_At_Address
 26555  0147EA  0101               	movlb	1	; () banked
 26556  0147EC  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 26557                           
 26558                           ; BSR set to: 1
 26559                           ;RTC.c: 219: if(Error)
 26560  0147EE  0101               	movlb	1	; () banked
 26561  0147F0  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26562  0147F2  0101               	movlb	1	; () banked
 26563  0147F4  B4D8               	btfsc	status,2,c
 26564  0147F6  D002               	goto	l13495
 26565                           
 26566                           ; BSR set to: 1
 26567                           ;RTC.c: 220: {
 26568                           ;RTC.c: 221: return 7;
 26569  0147F8  0E07               	movlw	7
 26570                           
 26571                           ; BSR set to: 1
 26572  0147FA  0012               	return	
 26573  0147FC                     l13495:
 26574                           
 26575                           ; BSR set to: 1
 26576                           ;RTC.c: 222: }
 26577                           ;RTC.c: 224: return 0;
 26578  0147FC  0E00               	movlw	0
 26579  0147FE  0012               	return	
 26580                           
 26581                           ; BSR set to: 1
 26582                           
 26583                           ; BSR set to: 1
 26584  014800  0012               	return		;funcret
 26585  014802                     __end_of_SET_RTC_TIME:
 26586                           	opt stack 0
 26587                           tblptru	equ	0xFF8
 26588                           tblptrh	equ	0xFF7
 26589                           tblptrl	equ	0xFF6
 26590                           tablat	equ	0xFF5
 26591                           prodh	equ	0xFF4
 26592                           prodl	equ	0xFF3
 26593                           intcon	equ	0xFF2
 26594                           intcon2	equ	0xFF1
 26595                           postinc0	equ	0xFEE
 26596                           plusw0	equ	0xFEB
 26597                           wreg	equ	0xFE8
 26598                           indf1	equ	0xFE7
 26599                           postdec1	equ	0xFE5
 26600                           fsr1h	equ	0xFE2
 26601                           fsr1l	equ	0xFE1
 26602                           indf2	equ	0xFDF
 26603                           postinc2	equ	0xFDE
 26604                           postdec2	equ	0xFDD
 26605                           plusw2	equ	0xFDB
 26606                           fsr2h	equ	0xFDA
 26607                           fsr2l	equ	0xFD9
 26608                           status	equ	0xFD8
 26609                           
 26610 ;; *************** function ___awmod *****************
 26611 ;; Defined at:
 26612 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
 26613 ;; Parameters:    Size  Location     Type
 26614 ;;  dividend        2   14[BANK1 ] int 
 26615 ;;  divisor         2   16[BANK1 ] int 
 26616 ;; Auto vars:     Size  Location     Type
 26617 ;;  sign            1   19[BANK1 ] unsigned char 
 26618 ;;  counter         1   18[BANK1 ] unsigned char 
 26619 ;; Return value:  Size  Location     Type
 26620 ;;                  2   14[BANK1 ] int 
 26621 ;; Registers used:
 26622 ;;		wreg, status,2, status,0
 26623 ;; Tracked objects:
 26624 ;;		On entry : 0/0
 26625 ;;		On exit  : 0/0
 26626 ;;		Unchanged: 0/0
 26627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26628 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26629 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26631 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 26632 ;;Total ram usage:        6 bytes
 26633 ;; Hardware stack levels used:    1
 26634 ;; Hardware stack levels required when called:    6
 26635 ;; This function calls:
 26636 ;;		Nothing
 26637 ;; This function is called by:
 26638 ;;		_SET_RTC_TIME
 26639 ;; This function uses a non-reentrant model
 26640 ;;
 26641                           
 26642                           	psect	text63
 26643  016680                     __ptext63:
 26644                           	opt stack 0
 26645  016680                     ___awmod:
 26646                           	opt stack 22
 26647                           
 26648                           ; BSR set to: 1
 26649                           ;incstack = 0
 26650  016680  0E00               	movlw	0
 26651  016682  0101               	movlb	1	; () banked
 26652  016684  6F81               	movwf	___awmod@sign& (0+255),b
 26653                           
 26654                           ; BSR set to: 1
 26655  016686  0101               	movlb	1	; () banked
 26656  016688  AF7D               	btfss	(___awmod@dividend+1)& (0+255),7,b
 26657  01668A  D009               	goto	l12541
 26658                           
 26659                           ; BSR set to: 1
 26660  01668C  0101               	movlb	1	; () banked
 26661  01668E  6D7C               	negf	___awmod@dividend& (0+255),b
 26662  016690  1F7D               	comf	(___awmod@dividend+1)& (0+255),f,b
 26663  016692  B0D8               	btfsc	status,0,c
 26664  016694  2B7D               	incf	(___awmod@dividend+1)& (0+255),f,b
 26665                           
 26666                           ; BSR set to: 1
 26667  016696  0E01               	movlw	1
 26668  016698  0101               	movlb	1	; () banked
 26669  01669A  6F81               	movwf	___awmod@sign& (0+255),b
 26670  01669C  D000               	goto	l12541
 26671  01669E                     l12541:
 26672                           
 26673                           ; BSR set to: 1
 26674  01669E  0101               	movlb	1	; () banked
 26675  0166A0  AF7F               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26676  0166A2  D006               	goto	l12545
 26677                           
 26678                           ; BSR set to: 1
 26679  0166A4  0101               	movlb	1	; () banked
 26680  0166A6  6D7E               	negf	___awmod@divisor& (0+255),b
 26681  0166A8  1F7F               	comf	(___awmod@divisor+1)& (0+255),f,b
 26682  0166AA  B0D8               	btfsc	status,0,c
 26683  0166AC  2B7F               	incf	(___awmod@divisor+1)& (0+255),f,b
 26684  0166AE  D000               	goto	l12545
 26685  0166B0                     l12545:
 26686                           
 26687                           ; BSR set to: 1
 26688  0166B0  0101               	movlb	1	; () banked
 26689  0166B2  517E               	movf	___awmod@divisor& (0+255),w,b
 26690  0166B4  0101               	movlb	1	; () banked
 26691  0166B6  117F               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 26692  0166B8  B4D8               	btfsc	status,2,c
 26693  0166BA  D02B               	goto	l12561
 26694                           
 26695                           ; BSR set to: 1
 26696  0166BC  0E01               	movlw	1
 26697  0166BE  0101               	movlb	1	; () banked
 26698  0166C0  6F80               	movwf	___awmod@counter& (0+255),b
 26699  0166C2  D007               	goto	l12551
 26700  0166C4                     l12549:
 26701                           
 26702                           ; BSR set to: 1
 26703  0166C4  0101               	movlb	1	; () banked
 26704  0166C6  90D8               	bcf	status,0,c
 26705  0166C8  377E               	rlcf	___awmod@divisor& (0+255),f,b
 26706  0166CA  377F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 26707  0166CC  0101               	movlb	1	; () banked
 26708  0166CE  2B80               	incf	___awmod@counter& (0+255),f,b
 26709  0166D0  D000               	goto	l12551
 26710  0166D2                     l12551:
 26711                           
 26712                           ; BSR set to: 1
 26713  0166D2  0101               	movlb	1	; () banked
 26714  0166D4  BF7F               	btfsc	(___awmod@divisor+1)& (0+255),7,b
 26715  0166D6  D002               	goto	l12553
 26716  0166D8  D7F5               	goto	l12549
 26717                           
 26718                           ; BSR set to: 1
 26719  0166DA  D000               	goto	l12553
 26720  0166DC                     l12553:
 26721                           
 26722                           ; BSR set to: 1
 26723  0166DC  0101               	movlb	1	; () banked
 26724  0166DE  517E               	movf	___awmod@divisor& (0+255),w,b
 26725  0166E0  0101               	movlb	1	; () banked
 26726  0166E2  5D7C               	subwf	___awmod@dividend& (0+255),w,b
 26727  0166E4  0101               	movlb	1	; () banked
 26728  0166E6  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 26729  0166E8  0101               	movlb	1	; () banked
 26730  0166EA  597D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 26731  0166EC  A0D8               	btfss	status,0,c
 26732  0166EE  D009               	goto	l12557
 26733                           
 26734                           ; BSR set to: 1
 26735  0166F0  0101               	movlb	1	; () banked
 26736  0166F2  517E               	movf	___awmod@divisor& (0+255),w,b
 26737  0166F4  0101               	movlb	1	; () banked
 26738  0166F6  5F7C               	subwf	___awmod@dividend& (0+255),f,b
 26739  0166F8  0101               	movlb	1	; () banked
 26740  0166FA  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 26741  0166FC  0101               	movlb	1	; () banked
 26742  0166FE  5B7D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 26743  016700  D000               	goto	l12557
 26744  016702                     l12557:
 26745                           
 26746                           ; BSR set to: 1
 26747  016702  0101               	movlb	1	; () banked
 26748  016704  90D8               	bcf	status,0,c
 26749  016706  337F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 26750  016708  337E               	rrcf	___awmod@divisor& (0+255),f,b
 26751                           
 26752                           ; BSR set to: 1
 26753  01670A  0101               	movlb	1	; () banked
 26754  01670C  2F80               	decfsz	___awmod@counter& (0+255),f,b
 26755  01670E  D7E6               	goto	l12553
 26756                           
 26757                           ; BSR set to: 1
 26758  016710  D000               	goto	l12561
 26759  016712                     l12561:
 26760                           
 26761                           ; BSR set to: 1
 26762  016712  0101               	movlb	1	; () banked
 26763  016714  5181               	movf	___awmod@sign& (0+255),w,b
 26764  016716  0101               	movlb	1	; () banked
 26765  016718  B4D8               	btfsc	status,2,c
 26766  01671A  D006               	goto	l12565
 26767                           
 26768                           ; BSR set to: 1
 26769  01671C  0101               	movlb	1	; () banked
 26770  01671E  6D7C               	negf	___awmod@dividend& (0+255),b
 26771  016720  1F7D               	comf	(___awmod@dividend+1)& (0+255),f,b
 26772  016722  B0D8               	btfsc	status,0,c
 26773  016724  2B7D               	incf	(___awmod@dividend+1)& (0+255),f,b
 26774  016726  D000               	goto	l12565
 26775  016728                     l12565:
 26776                           
 26777                           ; BSR set to: 1
 26778  016728  C17C  F17C         	movff	___awmod@dividend,?___awmod
 26779  01672C  C17D  F17D         	movff	___awmod@dividend+1,?___awmod+1
 26780  016730  0012               	return	
 26781                           
 26782                           ; BSR set to: 1
 26783                           
 26784                           ; BSR set to: 1
 26785  016732  0012               	return		;funcret
 26786  016734                     __end_of___awmod:
 26787                           	opt stack 0
 26788                           tblptru	equ	0xFF8
 26789                           tblptrh	equ	0xFF7
 26790                           tblptrl	equ	0xFF6
 26791                           tablat	equ	0xFF5
 26792                           prodh	equ	0xFF4
 26793                           prodl	equ	0xFF3
 26794                           intcon	equ	0xFF2
 26795                           intcon2	equ	0xFF1
 26796                           postinc0	equ	0xFEE
 26797                           plusw0	equ	0xFEB
 26798                           wreg	equ	0xFE8
 26799                           indf1	equ	0xFE7
 26800                           postdec1	equ	0xFE5
 26801                           fsr1h	equ	0xFE2
 26802                           fsr1l	equ	0xFE1
 26803                           indf2	equ	0xFDF
 26804                           postinc2	equ	0xFDE
 26805                           postdec2	equ	0xFDD
 26806                           plusw2	equ	0xFDB
 26807                           fsr2h	equ	0xFDA
 26808                           fsr2l	equ	0xFD9
 26809                           status	equ	0xFD8
 26810                           
 26811 ;; *************** function ___awdiv *****************
 26812 ;; Defined at:
 26813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
 26814 ;; Parameters:    Size  Location     Type
 26815 ;;  dividend        2   14[BANK1 ] int 
 26816 ;;  divisor         2   16[BANK1 ] int 
 26817 ;; Auto vars:     Size  Location     Type
 26818 ;;  quotient        2   20[BANK1 ] int 
 26819 ;;  sign            1   19[BANK1 ] unsigned char 
 26820 ;;  counter         1   18[BANK1 ] unsigned char 
 26821 ;; Return value:  Size  Location     Type
 26822 ;;                  2   14[BANK1 ] int 
 26823 ;; Registers used:
 26824 ;;		wreg, status,2, status,0
 26825 ;; Tracked objects:
 26826 ;;		On entry : 0/0
 26827 ;;		On exit  : 0/0
 26828 ;;		Unchanged: 0/0
 26829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26830 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26831 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26833 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 26834 ;;Total ram usage:        8 bytes
 26835 ;; Hardware stack levels used:    1
 26836 ;; Hardware stack levels required when called:    6
 26837 ;; This function calls:
 26838 ;;		Nothing
 26839 ;; This function is called by:
 26840 ;;		_SET_RTC_TIME
 26841 ;; This function uses a non-reentrant model
 26842 ;;
 26843                           
 26844                           	psect	text64
 26845  01611A                     __ptext64:
 26846                           	opt stack 0
 26847  01611A                     ___awdiv:
 26848                           	opt stack 22
 26849                           
 26850                           ; BSR set to: 1
 26851                           ;incstack = 0
 26852  01611A  0E00               	movlw	0
 26853  01611C  0101               	movlb	1	; () banked
 26854  01611E  6F81               	movwf	___awdiv@sign& (0+255),b
 26855                           
 26856                           ; BSR set to: 1
 26857  016120  0101               	movlb	1	; () banked
 26858  016122  AF7F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26859  016124  D009               	goto	l12497
 26860                           
 26861                           ; BSR set to: 1
 26862  016126  0101               	movlb	1	; () banked
 26863  016128  6D7E               	negf	___awdiv@divisor& (0+255),b
 26864  01612A  1F7F               	comf	(___awdiv@divisor+1)& (0+255),f,b
 26865  01612C  B0D8               	btfsc	status,0,c
 26866  01612E  2B7F               	incf	(___awdiv@divisor+1)& (0+255),f,b
 26867                           
 26868                           ; BSR set to: 1
 26869  016130  0E01               	movlw	1
 26870  016132  0101               	movlb	1	; () banked
 26871  016134  6F81               	movwf	___awdiv@sign& (0+255),b
 26872  016136  D000               	goto	l12497
 26873  016138                     l12497:
 26874                           
 26875                           ; BSR set to: 1
 26876  016138  0101               	movlb	1	; () banked
 26877  01613A  AF7D               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 26878  01613C  D009               	goto	l12503
 26879                           
 26880                           ; BSR set to: 1
 26881  01613E  0101               	movlb	1	; () banked
 26882  016140  6D7C               	negf	___awdiv@dividend& (0+255),b
 26883  016142  1F7D               	comf	(___awdiv@dividend+1)& (0+255),f,b
 26884  016144  B0D8               	btfsc	status,0,c
 26885  016146  2B7D               	incf	(___awdiv@dividend+1)& (0+255),f,b
 26886                           
 26887                           ; BSR set to: 1
 26888  016148  0E01               	movlw	1
 26889  01614A  0101               	movlb	1	; () banked
 26890  01614C  1B81               	xorwf	___awdiv@sign& (0+255),f,b
 26891  01614E  D000               	goto	l12503
 26892  016150                     l12503:
 26893                           
 26894                           ; BSR set to: 1
 26895  016150  0E00               	movlw	0
 26896  016152  0101               	movlb	1	; () banked
 26897  016154  6F83               	movwf	(___awdiv@quotient+1)& (0+255),b
 26898  016156  0E00               	movlw	0
 26899  016158  6F82               	movwf	___awdiv@quotient& (0+255),b
 26900                           
 26901                           ; BSR set to: 1
 26902  01615A  0101               	movlb	1	; () banked
 26903  01615C  517E               	movf	___awdiv@divisor& (0+255),w,b
 26904  01615E  0101               	movlb	1	; () banked
 26905  016160  117F               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 26906  016162  B4D8               	btfsc	status,2,c
 26907  016164  D031               	goto	l12525
 26908                           
 26909                           ; BSR set to: 1
 26910  016166  0E01               	movlw	1
 26911  016168  0101               	movlb	1	; () banked
 26912  01616A  6F80               	movwf	___awdiv@counter& (0+255),b
 26913  01616C  D007               	goto	l12511
 26914  01616E                     l12509:
 26915                           
 26916                           ; BSR set to: 1
 26917  01616E  0101               	movlb	1	; () banked
 26918  016170  90D8               	bcf	status,0,c
 26919  016172  377E               	rlcf	___awdiv@divisor& (0+255),f,b
 26920  016174  377F               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 26921  016176  0101               	movlb	1	; () banked
 26922  016178  2B80               	incf	___awdiv@counter& (0+255),f,b
 26923  01617A  D000               	goto	l12511
 26924  01617C                     l12511:
 26925                           
 26926                           ; BSR set to: 1
 26927  01617C  0101               	movlb	1	; () banked
 26928  01617E  BF7F               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
 26929  016180  D002               	goto	l12513
 26930  016182  D7F5               	goto	l12509
 26931                           
 26932                           ; BSR set to: 1
 26933  016184  D000               	goto	l12513
 26934  016186                     l12513:
 26935                           
 26936                           ; BSR set to: 1
 26937  016186  0101               	movlb	1	; () banked
 26938  016188  90D8               	bcf	status,0,c
 26939  01618A  3782               	rlcf	___awdiv@quotient& (0+255),f,b
 26940  01618C  3783               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 26941                           
 26942                           ; BSR set to: 1
 26943  01618E  0101               	movlb	1	; () banked
 26944  016190  517E               	movf	___awdiv@divisor& (0+255),w,b
 26945  016192  0101               	movlb	1	; () banked
 26946  016194  5D7C               	subwf	___awdiv@dividend& (0+255),w,b
 26947  016196  0101               	movlb	1	; () banked
 26948  016198  517F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26949  01619A  0101               	movlb	1	; () banked
 26950  01619C  597D               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 26951  01619E  A0D8               	btfss	status,0,c
 26952  0161A0  D00B               	goto	l12521
 26953                           
 26954                           ; BSR set to: 1
 26955  0161A2  0101               	movlb	1	; () banked
 26956  0161A4  517E               	movf	___awdiv@divisor& (0+255),w,b
 26957  0161A6  0101               	movlb	1	; () banked
 26958  0161A8  5F7C               	subwf	___awdiv@dividend& (0+255),f,b
 26959  0161AA  0101               	movlb	1	; () banked
 26960  0161AC  517F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26961  0161AE  0101               	movlb	1	; () banked
 26962  0161B0  5B7D               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 26963                           
 26964                           ; BSR set to: 1
 26965  0161B2  0101               	movlb	1	; () banked
 26966  0161B4  8182               	bsf	___awdiv@quotient& (0+255),0,b
 26967  0161B6  D000               	goto	l12521
 26968  0161B8                     l12521:
 26969                           
 26970                           ; BSR set to: 1
 26971  0161B8  0101               	movlb	1	; () banked
 26972  0161BA  90D8               	bcf	status,0,c
 26973  0161BC  337F               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 26974  0161BE  337E               	rrcf	___awdiv@divisor& (0+255),f,b
 26975                           
 26976                           ; BSR set to: 1
 26977  0161C0  0101               	movlb	1	; () banked
 26978  0161C2  2F80               	decfsz	___awdiv@counter& (0+255),f,b
 26979  0161C4  D7E0               	goto	l12513
 26980                           
 26981                           ; BSR set to: 1
 26982  0161C6  D000               	goto	l12525
 26983  0161C8                     l12525:
 26984                           
 26985                           ; BSR set to: 1
 26986  0161C8  0101               	movlb	1	; () banked
 26987  0161CA  5181               	movf	___awdiv@sign& (0+255),w,b
 26988  0161CC  0101               	movlb	1	; () banked
 26989  0161CE  B4D8               	btfsc	status,2,c
 26990  0161D0  D006               	goto	l12529
 26991                           
 26992                           ; BSR set to: 1
 26993  0161D2  0101               	movlb	1	; () banked
 26994  0161D4  6D82               	negf	___awdiv@quotient& (0+255),b
 26995  0161D6  1F83               	comf	(___awdiv@quotient+1)& (0+255),f,b
 26996  0161D8  B0D8               	btfsc	status,0,c
 26997  0161DA  2B83               	incf	(___awdiv@quotient+1)& (0+255),f,b
 26998  0161DC  D000               	goto	l12529
 26999  0161DE                     l12529:
 27000                           
 27001                           ; BSR set to: 1
 27002  0161DE  C182  F17C         	movff	___awdiv@quotient,?___awdiv
 27003  0161E2  C183  F17D         	movff	___awdiv@quotient+1,?___awdiv+1
 27004  0161E6  0012               	return	
 27005                           
 27006                           ; BSR set to: 1
 27007                           
 27008                           ; BSR set to: 1
 27009  0161E8  0012               	return		;funcret
 27010  0161EA                     __end_of___awdiv:
 27011                           	opt stack 0
 27012                           tblptru	equ	0xFF8
 27013                           tblptrh	equ	0xFF7
 27014                           tblptrl	equ	0xFF6
 27015                           tablat	equ	0xFF5
 27016                           prodh	equ	0xFF4
 27017                           prodl	equ	0xFF3
 27018                           intcon	equ	0xFF2
 27019                           intcon2	equ	0xFF1
 27020                           postinc0	equ	0xFEE
 27021                           plusw0	equ	0xFEB
 27022                           wreg	equ	0xFE8
 27023                           indf1	equ	0xFE7
 27024                           postdec1	equ	0xFE5
 27025                           fsr1h	equ	0xFE2
 27026                           fsr1l	equ	0xFE1
 27027                           indf2	equ	0xFDF
 27028                           postinc2	equ	0xFDE
 27029                           postdec2	equ	0xFDD
 27030                           plusw2	equ	0xFDB
 27031                           fsr2h	equ	0xFDA
 27032                           fsr2l	equ	0xFD9
 27033                           status	equ	0xFD8
 27034                           
 27035 ;; *************** function _I2C_Write_At_Address *****************
 27036 ;; Defined at:
 27037 ;;		line 161 in file "I2C.c"
 27038 ;; Parameters:    Size  Location     Type
 27039 ;;  I2Caddress      1    wreg     unsigned char 
 27040 ;;  Register        1   16[BANK1 ] unsigned char 
 27041 ;;  data            1   17[BANK1 ] unsigned char 
 27042 ;; Auto vars:     Size  Location     Type
 27043 ;;  I2Caddress      1   20[BANK1 ] unsigned char 
 27044 ;; Return value:  Size  Location     Type
 27045 ;;                  1    wreg      unsigned char 
 27046 ;; Registers used:
 27047 ;;		wreg, status,2, status,0, cstack
 27048 ;; Tracked objects:
 27049 ;;		On entry : 0/0
 27050 ;;		On exit  : 0/0
 27051 ;;		Unchanged: 0/0
 27052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27053 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27054 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27055 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27056 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 27057 ;;Total ram usage:        5 bytes
 27058 ;; Hardware stack levels used:    1
 27059 ;; Hardware stack levels required when called:    8
 27060 ;; This function calls:
 27061 ;;		_IdleI2C
 27062 ;;		_WriteI2C
 27063 ;; This function is called by:
 27064 ;;		_RTC_Clock_Enable
 27065 ;;		_RTC_TIME_NONMilitary
 27066 ;;		_SET_RTC_TIME
 27067 ;;		_RTC_Clock_Disable
 27068 ;; This function uses a non-reentrant model
 27069 ;;
 27070                           
 27071                           	psect	text65
 27072  0161EA                     __ptext65:
 27073                           	opt stack 0
 27074  0161EA                     _I2C_Write_At_Address:
 27075                           	opt stack 20
 27076                           
 27077                           ; BSR set to: 1
 27078                           ;incstack = 0
 27079                           ;I2C_Write_At_Address@I2Caddress stored from wreg
 27080  0161EA  0101               	movlb	1	; () banked
 27081  0161EC  6F82               	movwf	I2C_Write_At_Address@I2Caddress& (0+255),b
 27082                           
 27083                           ; BSR set to: 1
 27084                           ;I2C.c: 163: IdleI2C();
 27085  0161EE  EC85  F0BF         	call	_IdleI2C	;wreg free
 27086                           
 27087                           ;I2C.c: 164: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 27088  0161F2  80C5               	bsf	4037,0,c	;volatile
 27089  0161F4  D000               	goto	l1360
 27090  0161F6                     l1360:
 27091  0161F6  A0C5               	btfss	4037,0,c	;volatile
 27092  0161F8  D002               	goto	l1363
 27093  0161FA  D7FD               	goto	l1360
 27094                           
 27095                           ;I2C.c: 165: while ( SSPCON2bits.SEN );
 27096  0161FC  D000               	goto	l1363
 27097  0161FE                     l1363:
 27098  0161FE  B0C5               	btfsc	4037,0,c	;volatile
 27099  016200  D7FE               	goto	l1363
 27100                           
 27101                           ;I2C.c: 166: if ( PIR2bits.BCLIF )
 27102  016202  A6A1               	btfss	4001,3,c	;volatile
 27103  016204  D003               	goto	l12273
 27104                           
 27105                           ;I2C.c: 167: {
 27106                           ;I2C.c: 168: return ( -1 );
 27107  016206  0EFF               	movlw	255
 27108  016208  0012               	return	
 27109                           
 27110                           ;I2C.c: 169: }
 27111  01620A  D047               	goto	l1368
 27112  01620C                     l12273:
 27113                           
 27114                           ;I2C.c: 170: else
 27115                           ;I2C.c: 171: {
 27116                           ;I2C.c: 172: if ( WriteI2C( I2Caddress << 1) & 0xFE )
 27117  01620C  0101               	movlb	1	; () banked
 27118  01620E  5182               	movf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 27119  016210  2582               	addwf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 27120  016212  EC02  F0BA         	call	_WriteI2C
 27121  016216  0101               	movlb	1	; () banked
 27122  016218  6F80               	movwf	??_I2C_Write_At_Address& (0+255),b
 27123  01621A  6B81               	clrf	(??_I2C_Write_At_Address+1)& (0+255),b
 27124  01621C  BF80               	btfsc	??_I2C_Write_At_Address& (0+255),7,b
 27125  01621E  0781               	decf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 27126  016220  0EFE               	movlw	254
 27127  016222  0101               	movlb	1	; () banked
 27128  016224  1780               	andwf	??_I2C_Write_At_Address& (0+255),f,b
 27129  016226  0E00               	movlw	0
 27130  016228  1781               	andwf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 27131  01622A  0101               	movlb	1	; () banked
 27132  01622C  5180               	movf	??_I2C_Write_At_Address& (0+255),w,b
 27133  01622E  0101               	movlb	1	; () banked
 27134  016230  1181               	iorwf	(??_I2C_Write_At_Address+1)& (0+255),w,b
 27135  016232  B4D8               	btfsc	status,2,c
 27136  016234  D006               	goto	l1369
 27137                           
 27138                           ; BSR set to: 1
 27139                           ;I2C.c: 173: {
 27140                           ;I2C.c: 174: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27141  016236  84C5               	bsf	4037,2,c	;volatile
 27142  016238  D000               	goto	l1370
 27143  01623A                     l1370:
 27144                           
 27145                           ; BSR set to: 1
 27146  01623A  B4C5               	btfsc	4037,2,c	;volatile
 27147  01623C  D7FE               	goto	l1370
 27148                           
 27149                           ; BSR set to: 1
 27150                           ;I2C.c: 175: return ( -3 );
 27151                           
 27152                           ; BSR set to: 1
 27153  01623E  0EFD               	movlw	253
 27154                           
 27155                           ; BSR set to: 1
 27156  016240  0012               	return	
 27157  016242                     l1369:
 27158                           
 27159                           ; BSR set to: 1
 27160                           ;I2C.c: 176: }
 27161                           ;I2C.c: 179: if ( !SSPCON2bits.ACKSTAT )
 27162  016242  BCC5               	btfsc	4037,6,c	;volatile
 27163  016244  D024               	goto	l1373
 27164                           
 27165                           ; BSR set to: 1
 27166                           ;I2C.c: 180: {
 27167                           ;I2C.c: 181: if ( WriteI2C( Register ) )
 27168  016246  0101               	movlb	1	; () banked
 27169  016248  517E               	movf	I2C_Write_At_Address@Register& (0+255),w,b
 27170  01624A  EC02  F0BA         	call	_WriteI2C
 27171  01624E  0900               	iorlw	0
 27172  016250  B4D8               	btfsc	status,2,c
 27173  016252  D006               	goto	l1374
 27174                           
 27175                           ;I2C.c: 182: {
 27176                           ;I2C.c: 183: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27177  016254  84C5               	bsf	4037,2,c	;volatile
 27178  016256  D000               	goto	l1375
 27179  016258                     l1375:
 27180  016258  B4C5               	btfsc	4037,2,c	;volatile
 27181  01625A  D7FE               	goto	l1375
 27182                           
 27183                           ;I2C.c: 184: return ( -3 );
 27184  01625C  0EFD               	movlw	253
 27185  01625E  0012               	return	
 27186  016260                     l1374:
 27187                           
 27188                           ;I2C.c: 185: }
 27189                           ;I2C.c: 188: if ( !SSPCON2bits.ACKSTAT )
 27190  016260  BCC5               	btfsc	4037,6,c	;volatile
 27191  016262  D00E               	goto	l1378
 27192                           
 27193                           ;I2C.c: 189: {
 27194                           ;I2C.c: 190: if ( WriteI2C ( data ) )
 27195  016264  0101               	movlb	1	; () banked
 27196  016266  517F               	movf	I2C_Write_At_Address@data& (0+255),w,b
 27197  016268  EC02  F0BA         	call	_WriteI2C
 27198  01626C  0900               	iorlw	0
 27199  01626E  B4D8               	btfsc	status,2,c
 27200  016270  D014               	goto	l1368
 27201                           
 27202                           ;I2C.c: 191: {
 27203                           ;I2C.c: 192: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27204  016272  84C5               	bsf	4037,2,c	;volatile
 27205  016274  D000               	goto	l1380
 27206  016276                     l1380:
 27207  016276  B4C5               	btfsc	4037,2,c	;volatile
 27208  016278  D7FE               	goto	l1380
 27209                           
 27210                           ;I2C.c: 193: return( -4 );
 27211  01627A  0EFC               	movlw	252
 27212  01627C  0012               	return	
 27213                           
 27214                           ;I2C.c: 194: }
 27215                           ;I2C.c: 195: }
 27216  01627E  D00D               	goto	l1368
 27217  016280                     l1378:
 27218                           
 27219                           ;I2C.c: 196: else
 27220                           ;I2C.c: 197: {
 27221                           ;I2C.c: 198: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27222  016280  84C5               	bsf	4037,2,c	;volatile
 27223  016282  D000               	goto	l1384
 27224  016284                     l1384:
 27225  016284  B4C5               	btfsc	4037,2,c	;volatile
 27226  016286  D7FE               	goto	l1384
 27227                           
 27228                           ;I2C.c: 199: return ( -2 );
 27229  016288  0EFE               	movlw	254
 27230  01628A  0012               	return	
 27231                           
 27232                           ;I2C.c: 200: }
 27233                           ;I2C.c: 201: }
 27234  01628C  D006               	goto	l1368
 27235  01628E                     l1373:
 27236                           
 27237                           ; BSR set to: 1
 27238                           ;I2C.c: 202: else
 27239                           ;I2C.c: 203: {
 27240                           ;I2C.c: 204: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27241  01628E  84C5               	bsf	4037,2,c	;volatile
 27242  016290  D000               	goto	l1388
 27243  016292                     l1388:
 27244                           
 27245                           ; BSR set to: 1
 27246  016292  B4C5               	btfsc	4037,2,c	;volatile
 27247  016294  D7FE               	goto	l1388
 27248                           
 27249                           ; BSR set to: 1
 27250                           ;I2C.c: 205: return ( -2 );
 27251                           
 27252                           ; BSR set to: 1
 27253  016296  0EFE               	movlw	254
 27254                           
 27255                           ; BSR set to: 1
 27256  016298  0012               	return	
 27257  01629A                     l1368:
 27258                           
 27259                           ;I2C.c: 206: }
 27260                           ;I2C.c: 207: }
 27261                           ;I2C.c: 210: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27262  01629A  84C5               	bsf	4037,2,c	;volatile
 27263  01629C  D000               	goto	l1391
 27264  01629E                     l1391:
 27265  01629E  A4C5               	btfss	4037,2,c	;volatile
 27266  0162A0  D002               	goto	l1394
 27267  0162A2  D7FD               	goto	l1391
 27268                           
 27269                           ;I2C.c: 211: while ( SSPCON2bits.PEN );
 27270  0162A4  D000               	goto	l1394
 27271  0162A6                     l1394:
 27272  0162A6  B4C5               	btfsc	4037,2,c	;volatile
 27273  0162A8  D7FE               	goto	l1394
 27274                           
 27275                           ;I2C.c: 212: if ( PIR2bits.BCLIF )
 27276  0162AA  A6A1               	btfss	4001,3,c	;volatile
 27277  0162AC  D002               	goto	l12309
 27278                           
 27279                           ;I2C.c: 213: {
 27280                           ;I2C.c: 214: return ( -1 );
 27281  0162AE  0EFF               	movlw	255
 27282  0162B0  0012               	return	
 27283  0162B2                     l12309:
 27284                           
 27285                           ;I2C.c: 215: }
 27286                           ;I2C.c: 216: return ( 0 );
 27287  0162B2  0E00               	movlw	0
 27288  0162B4  0012               	return	
 27289  0162B6  0012               	return		;funcret
 27290  0162B8                     __end_of_I2C_Write_At_Address:
 27291                           	opt stack 0
 27292                           tblptru	equ	0xFF8
 27293                           tblptrh	equ	0xFF7
 27294                           tblptrl	equ	0xFF6
 27295                           tablat	equ	0xFF5
 27296                           prodh	equ	0xFF4
 27297                           prodl	equ	0xFF3
 27298                           intcon	equ	0xFF2
 27299                           intcon2	equ	0xFF1
 27300                           postinc0	equ	0xFEE
 27301                           plusw0	equ	0xFEB
 27302                           wreg	equ	0xFE8
 27303                           indf1	equ	0xFE7
 27304                           postdec1	equ	0xFE5
 27305                           fsr1h	equ	0xFE2
 27306                           fsr1l	equ	0xFE1
 27307                           indf2	equ	0xFDF
 27308                           postinc2	equ	0xFDE
 27309                           postdec2	equ	0xFDD
 27310                           plusw2	equ	0xFDB
 27311                           fsr2h	equ	0xFDA
 27312                           fsr2l	equ	0xFD9
 27313                           status	equ	0xFD8
 27314                           
 27315 ;; *************** function _RemoveSpaces *****************
 27316 ;; Defined at:
 27317 ;;		line 273 in file "MISC.c"
 27318 ;; Parameters:    Size  Location     Type
 27319 ;;  This            2   29[BANK1 ] PTR unsigned char 
 27320 ;;		 -> Rxdata(100), 
 27321 ;; Auto vars:     Size  Location     Type
 27322 ;;  That          100    0[BANK2 ] unsigned char [100]
 27323 ;;  address         2  100[BANK2 ] PTR unsigned char 
 27324 ;;		 -> Rxdata(100), 
 27325 ;;  i               1  102[BANK2 ] unsigned char 
 27326 ;; Return value:  Size  Location     Type
 27327 ;;		None               void
 27328 ;; Registers used:
 27329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27330 ;; Tracked objects:
 27331 ;;		On entry : 0/0
 27332 ;;		On exit  : 0/0
 27333 ;;		Unchanged: 0/0
 27334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27335 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27336 ;;      Locals:         0       0       0     103       0       0       0       0       0       0       0       0       
      +0       0
 27337 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27338 ;;      Totals:         0       0       3     103       0       0       0       0       0       0       0       0       
      +0       0
 27339 ;;Total ram usage:      106 bytes
 27340 ;; Hardware stack levels used:    1
 27341 ;; Hardware stack levels required when called:    8
 27342 ;; This function calls:
 27343 ;;		_BufferCopy
 27344 ;;		_cleanBuffer
 27345 ;; This function is called by:
 27346 ;;		_Command
 27347 ;; This function uses a non-reentrant model
 27348 ;;
 27349                           
 27350                           	psect	text66
 27351  016A7A                     __ptext66:
 27352                           	opt stack 0
 27353  016A7A                     _RemoveSpaces:
 27354                           	opt stack 21
 27355                           
 27356                           ;MISC.c: 276: unsigned char i =0;
 27357                           
 27358                           ;incstack = 0
 27359  016A7A  0E00               	movlw	0
 27360  016A7C  0102               	movlb	2	; () banked
 27361  016A7E  6F66               	movwf	RemoveSpaces@i& (0+255),b
 27362                           
 27363                           ; BSR set to: 2
 27364                           ;MISC.c: 277: unsigned char* address = This;
 27365  016A80  C18B  F264         	movff	RemoveSpaces@This,RemoveSpaces@address
 27366  016A84  C18C  F265         	movff	RemoveSpaces@This+1,RemoveSpaces@address+1
 27367                           
 27368                           ; BSR set to: 2
 27369                           ;MISC.c: 278: unsigned char That[100];
 27370                           ;MISC.c: 279: cleanBuffer(That,100);
 27371  016A88  0E00               	movlw	low RemoveSpaces@That
 27372  016A8A  0101               	movlb	1	; () banked
 27373  016A8C  6F7C               	movwf	cleanBuffer@data& (0+255),b
 27374  016A8E  0E02               	movlw	high RemoveSpaces@That
 27375  016A90  0101               	movlb	1	; () banked
 27376  016A92  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 27377  016A94  0E00               	movlw	0
 27378  016A96  0101               	movlb	1	; () banked
 27379  016A98  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 27380  016A9A  0E64               	movlw	100
 27381  016A9C  6F7E               	movwf	cleanBuffer@count& (0+255),b
 27382  016A9E  ECCB  F0BB         	call	_cleanBuffer	;wreg free
 27383                           
 27384                           ;MISC.c: 280: while(*This != 0)
 27385  016AA2  D01E               	goto	l12871
 27386  016AA4                     l12863:
 27387                           
 27388                           ;MISC.c: 281: {
 27389                           ;MISC.c: 282: if(*This != ' ')
 27390  016AA4  C18B  FFD9         	movff	RemoveSpaces@This,fsr2l
 27391  016AA8  C18C  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 27392  016AAC  0E20               	movlw	32
 27393  016AAE  18DE               	xorwf	postinc2,w,c
 27394  016AB0  B4D8               	btfsc	status,2,c
 27395  016AB2  D012               	goto	l12869
 27396                           
 27397                           ;MISC.c: 283: {
 27398                           ;MISC.c: 284: That[i] = *This;
 27399  016AB4  C18B  FFD9         	movff	RemoveSpaces@This,fsr2l
 27400  016AB8  C18C  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 27401  016ABC  0102               	movlb	2	; () banked
 27402  016ABE  5166               	movf	RemoveSpaces@i& (0+255),w,b
 27403  016AC0  0D01               	mullw	1
 27404  016AC2  0E00               	movlw	low RemoveSpaces@That
 27405  016AC4  24F3               	addwf	prodl,w,c
 27406  016AC6  6EE1               	movwf	fsr1l,c
 27407  016AC8  0E02               	movlw	high RemoveSpaces@That
 27408  016ACA  20F4               	addwfc	prodh,w,c
 27409  016ACC  6EE2               	movwf	fsr1h,c
 27410  016ACE  CFDF FFE7          	movff	indf2,indf1
 27411                           
 27412                           ; BSR set to: 2
 27413                           ;MISC.c: 285: i++;
 27414  016AD2  0102               	movlb	2	; () banked
 27415  016AD4  2B66               	incf	RemoveSpaces@i& (0+255),f,b
 27416  016AD6  D000               	goto	l12869
 27417  016AD8                     l12869:
 27418                           
 27419                           ;MISC.c: 286: }
 27420                           ;MISC.c: 287: This++;
 27421  016AD8  0101               	movlb	1	; () banked
 27422  016ADA  4B8B               	infsnz	RemoveSpaces@This& (0+255),f,b
 27423  016ADC  2B8C               	incf	(RemoveSpaces@This+1)& (0+255),f,b
 27424  016ADE  D000               	goto	l12871
 27425  016AE0                     l12871:
 27426  016AE0  C18B  FFD9         	movff	RemoveSpaces@This,fsr2l
 27427  016AE4  C18C  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 27428  016AE8  50DF               	movf	indf2,w,c
 27429  016AEA  A4D8               	btfss	status,2,c
 27430  016AEC  D7DB               	goto	l12863
 27431                           
 27432                           ;MISC.c: 288: }
 27433                           ;MISC.c: 289: BufferCopy(That,address, 100, 0);
 27434  016AEE  0E00               	movlw	low RemoveSpaces@That
 27435  016AF0  0101               	movlb	1	; () banked
 27436  016AF2  6F84               	movwf	BufferCopy@from& (0+255),b
 27437  016AF4  0E02               	movlw	high RemoveSpaces@That
 27438  016AF6  0101               	movlb	1	; () banked
 27439  016AF8  6F85               	movwf	(BufferCopy@from+1)& (0+255),b
 27440  016AFA  C264  F186         	movff	RemoveSpaces@address,BufferCopy@to
 27441  016AFE  C265  F187         	movff	RemoveSpaces@address+1,BufferCopy@to+1
 27442  016B02  0E64               	movlw	100
 27443  016B04  0101               	movlb	1	; () banked
 27444  016B06  6F88               	movwf	BufferCopy@count& (0+255),b
 27445  016B08  0E00               	movlw	0
 27446  016B0A  0101               	movlb	1	; () banked
 27447  016B0C  6F89               	movwf	BufferCopy@shift& (0+255),b
 27448  016B0E  EC87  F0B2         	call	_BufferCopy	;wreg free
 27449  016B12  0012               	return		;funcret
 27450  016B14                     __end_of_RemoveSpaces:
 27451                           	opt stack 0
 27452                           tblptru	equ	0xFF8
 27453                           tblptrh	equ	0xFF7
 27454                           tblptrl	equ	0xFF6
 27455                           tablat	equ	0xFF5
 27456                           prodh	equ	0xFF4
 27457                           prodl	equ	0xFF3
 27458                           intcon	equ	0xFF2
 27459                           intcon2	equ	0xFF1
 27460                           postinc0	equ	0xFEE
 27461                           plusw0	equ	0xFEB
 27462                           wreg	equ	0xFE8
 27463                           indf1	equ	0xFE7
 27464                           postdec1	equ	0xFE5
 27465                           fsr1h	equ	0xFE2
 27466                           fsr1l	equ	0xFE1
 27467                           indf2	equ	0xFDF
 27468                           postinc2	equ	0xFDE
 27469                           postdec2	equ	0xFDD
 27470                           plusw2	equ	0xFDB
 27471                           fsr2h	equ	0xFDA
 27472                           fsr2l	equ	0xFD9
 27473                           status	equ	0xFD8
 27474                           
 27475 ;; *************** function _READ_RTC_TIME *****************
 27476 ;; Defined at:
 27477 ;;		line 139 in file "RTC.c"
 27478 ;; Parameters:    Size  Location     Type
 27479 ;;		None
 27480 ;; Auto vars:     Size  Location     Type
 27481 ;;  temp            7   24[BANK1 ] unsigned char [7]
 27482 ;;  Error           1   31[BANK1 ] char 
 27483 ;; Return value:  Size  Location     Type
 27484 ;;                  1    wreg      unsigned char 
 27485 ;; Registers used:
 27486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27487 ;; Tracked objects:
 27488 ;;		On entry : 0/0
 27489 ;;		On exit  : 0/0
 27490 ;;		Unchanged: 0/0
 27491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27493 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 27494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27495 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 27496 ;;Total ram usage:        8 bytes
 27497 ;; Hardware stack levels used:    1
 27498 ;; Hardware stack levels required when called:    9
 27499 ;; This function calls:
 27500 ;;		_I2C_Read_Sequential
 27501 ;;		_ResetI2C
 27502 ;; This function is called by:
 27503 ;;		_Command
 27504 ;; This function uses a non-reentrant model
 27505 ;;
 27506                           
 27507                           	psect	text67
 27508  015E76                     __ptext67:
 27509                           	opt stack 0
 27510  015E76                     _READ_RTC_TIME:
 27511                           	opt stack 20
 27512                           
 27513                           ;RTC.c: 141: signed char Error =0;
 27514                           
 27515                           ;incstack = 0
 27516  015E76  0E00               	movlw	0
 27517  015E78  0101               	movlb	1	; () banked
 27518  015E7A  6F8D               	movwf	READ_RTC_TIME@Error& (0+255),b
 27519                           
 27520                           ; BSR set to: 1
 27521                           ;RTC.c: 142: unsigned char temp[7];
 27522                           ;RTC.c: 144: Error = I2C_Read_Sequential( 0b1101000, 0x00, temp, 7 );
 27523  015E7C  0E00               	movlw	0
 27524  015E7E  0101               	movlb	1	; () banked
 27525  015E80  6F7F               	movwf	I2C_Read_Sequential@Register& (0+255),b
 27526  015E82  0E86               	movlw	low READ_RTC_TIME@temp
 27527  015E84  0101               	movlb	1	; () banked
 27528  015E86  6F80               	movwf	I2C_Read_Sequential@rdptr& (0+255),b
 27529  015E88  0E01               	movlw	high READ_RTC_TIME@temp
 27530  015E8A  0101               	movlb	1	; () banked
 27531  015E8C  6F81               	movwf	(I2C_Read_Sequential@rdptr+1)& (0+255),b
 27532  015E8E  0E07               	movlw	7
 27533  015E90  0101               	movlb	1	; () banked
 27534  015E92  6F82               	movwf	I2C_Read_Sequential@length& (0+255),b
 27535  015E94  0E68               	movlw	104
 27536  015E96  ECC6  F0AD         	call	_I2C_Read_Sequential
 27537  015E9A  0101               	movlb	1	; () banked
 27538  015E9C  6F8D               	movwf	READ_RTC_TIME@Error& (0+255),b
 27539                           
 27540                           ; BSR set to: 1
 27541                           ;RTC.c: 146: if(Error == 0 )
 27542  015E9E  0101               	movlb	1	; () banked
 27543  015EA0  518D               	movf	READ_RTC_TIME@Error& (0+255),w,b
 27544  015EA2  0101               	movlb	1	; () banked
 27545  015EA4  A4D8               	btfss	status,2,c
 27546  015EA6  D055               	goto	l13151
 27547                           
 27548                           ; BSR set to: 1
 27549                           ;RTC.c: 147: {
 27550                           ;RTC.c: 148: NowTime.Seconds = (temp[0] & 0x0F) + (((temp[0] & 0x70)>> 4) * 10);
 27551  015EA8  0101               	movlb	1	; () banked
 27552  015EAA  3986               	swapf	READ_RTC_TIME@temp& (0+255),w,b
 27553  015EAC  0B0F               	andlw	15
 27554  015EAE  0B07               	andlw	7
 27555  015EB0  0D0A               	mullw	10
 27556  015EB2  0101               	movlb	1	; () banked
 27557  015EB4  5186               	movf	READ_RTC_TIME@temp& (0+255),w,b
 27558  015EB6  0B0F               	andlw	15
 27559  015EB8  24F3               	addwf	prodl,w,c
 27560  015EBA  0101               	movlb	1	; () banked
 27561  015EBC  6F00               	movwf	_NowTime& (0+255),b
 27562                           
 27563                           ;RTC.c: 149: NowTime.Minutes = (temp[1] & 0x0F) + (((temp[1] & 0x70) >> 4) * 10);
 27564  015EBE  0101               	movlb	1	; () banked
 27565  015EC0  3987               	swapf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 27566  015EC2  0B0F               	andlw	15
 27567  015EC4  0B07               	andlw	7
 27568  015EC6  0D0A               	mullw	10
 27569  015EC8  0101               	movlb	1	; () banked
 27570  015ECA  5187               	movf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 27571  015ECC  0B0F               	andlw	15
 27572  015ECE  24F3               	addwf	prodl,w,c
 27573  015ED0  0101               	movlb	1	; () banked
 27574  015ED2  6F01               	movwf	(_NowTime+1)& (0+255),b
 27575                           
 27576                           ;RTC.c: 150: NowTime.Hours = (temp[2] & 0x0F) + (((temp[2] & 0x10) >> 4) * 10);
 27577  015ED4  0101               	movlb	1	; () banked
 27578  015ED6  3988               	swapf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 27579  015ED8  0B0F               	andlw	15
 27580  015EDA  0B01               	andlw	1
 27581  015EDC  0D0A               	mullw	10
 27582  015EDE  0101               	movlb	1	; () banked
 27583  015EE0  5188               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 27584  015EE2  0B0F               	andlw	15
 27585  015EE4  24F3               	addwf	prodl,w,c
 27586  015EE6  0101               	movlb	1	; () banked
 27587  015EE8  6F02               	movwf	(_NowTime+2)& (0+255),b
 27588                           
 27589                           ; BSR set to: 1
 27590                           ;RTC.c: 151: NowTime.HoursAM_PM = temp[2] & 0x20;
 27591  015EEA  0101               	movlb	1	; () banked
 27592  015EEC  5188               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 27593  015EEE  0B20               	andlw	32
 27594  015EF0  0101               	movlb	1	; () banked
 27595  015EF2  6F04               	movwf	(_NowTime+4)& (0+255),b
 27596                           
 27597                           ; BSR set to: 1
 27598                           ;RTC.c: 152: NowTime.HoursMilitary = NowTime.Hours + 12 * NowTime.HoursAM_PM;
 27599  015EF4  0101               	movlb	1	; () banked
 27600  015EF6  5104               	movf	(_NowTime+4)& (0+255),w,b
 27601  015EF8  0D0C               	mullw	12
 27602  015EFA  50F3               	movf	prodl,w,c
 27603  015EFC  0101               	movlb	1	; () banked
 27604  015EFE  2502               	addwf	(_NowTime+2)& (0+255),w,b
 27605  015F00  0101               	movlb	1	; () banked
 27606  015F02  6F03               	movwf	(_NowTime+3)& (0+255),b
 27607                           
 27608                           ;RTC.c: 153: NowTime.Day = temp[3] & 0x07;
 27609  015F04  0101               	movlb	1	; () banked
 27610  015F06  5189               	movf	(READ_RTC_TIME@temp+3)& (0+255),w,b
 27611  015F08  0B07               	andlw	7
 27612  015F0A  0101               	movlb	1	; () banked
 27613  015F0C  6F05               	movwf	(_NowTime+5)& (0+255),b
 27614                           
 27615                           ; BSR set to: 1
 27616                           ;RTC.c: 154: NowTime.Date = (temp[4] & 0x0F) + (((temp[4] & 0x30)>> 4) * 10);
 27617  015F0E  0101               	movlb	1	; () banked
 27618  015F10  398A               	swapf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 27619  015F12  0B0F               	andlw	15
 27620  015F14  0B03               	andlw	3
 27621  015F16  0D0A               	mullw	10
 27622  015F18  0101               	movlb	1	; () banked
 27623  015F1A  518A               	movf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 27624  015F1C  0B0F               	andlw	15
 27625  015F1E  24F3               	addwf	prodl,w,c
 27626  015F20  0101               	movlb	1	; () banked
 27627  015F22  6F06               	movwf	(_NowTime+6)& (0+255),b
 27628                           
 27629                           ; BSR set to: 1
 27630                           ;RTC.c: 155: NowTime.Month = (temp[5] & 0x0F) + (((temp[5] & 0x10) >> 4) * 10);
 27631  015F24  0101               	movlb	1	; () banked
 27632  015F26  398B               	swapf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 27633  015F28  0B0F               	andlw	15
 27634  015F2A  0B01               	andlw	1
 27635  015F2C  0D0A               	mullw	10
 27636  015F2E  0101               	movlb	1	; () banked
 27637  015F30  518B               	movf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 27638  015F32  0B0F               	andlw	15
 27639  015F34  24F3               	addwf	prodl,w,c
 27640  015F36  0101               	movlb	1	; () banked
 27641  015F38  6F07               	movwf	(_NowTime+7)& (0+255),b
 27642                           
 27643                           ; BSR set to: 1
 27644                           ;RTC.c: 156: NowTime.Year = (temp[6] & 0x0F) + (((temp[6] & 0xF0) >> 4) * 10);
 27645  015F3A  0101               	movlb	1	; () banked
 27646  015F3C  398C               	swapf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 27647  015F3E  0B0F               	andlw	15
 27648  015F40  0B0F               	andlw	15
 27649  015F42  0D0A               	mullw	10
 27650  015F44  0101               	movlb	1	; () banked
 27651  015F46  518C               	movf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 27652  015F48  0B0F               	andlw	15
 27653  015F4A  24F3               	addwf	prodl,w,c
 27654  015F4C  0101               	movlb	1	; () banked
 27655  015F4E  6F08               	movwf	(_NowTime+8)& (0+255),b
 27656                           
 27657                           ;RTC.c: 157: }
 27658  015F50  D003               	goto	l13153
 27659  015F52                     l13151:
 27660                           
 27661                           ; BSR set to: 1
 27662                           ;RTC.c: 158: else
 27663                           ;RTC.c: 159: {
 27664                           ;RTC.c: 160: ResetI2C();
 27665  015F52  ECE4  F0BE         	call	_ResetI2C	;wreg free
 27666  015F56  D000               	goto	l13153
 27667  015F58                     l13153:
 27668                           
 27669                           ;RTC.c: 161: }
 27670                           ;RTC.c: 162: return Error;
 27671  015F58  0101               	movlb	1	; () banked
 27672  015F5A  518D               	movf	READ_RTC_TIME@Error& (0+255),w,b
 27673  015F5C  0012               	return	
 27674                           
 27675                           ; BSR set to: 1
 27676                           
 27677                           ; BSR set to: 1
 27678  015F5E  0012               	return		;funcret
 27679  015F60                     __end_of_READ_RTC_TIME:
 27680                           	opt stack 0
 27681                           tblptru	equ	0xFF8
 27682                           tblptrh	equ	0xFF7
 27683                           tblptrl	equ	0xFF6
 27684                           tablat	equ	0xFF5
 27685                           prodh	equ	0xFF4
 27686                           prodl	equ	0xFF3
 27687                           intcon	equ	0xFF2
 27688                           intcon2	equ	0xFF1
 27689                           postinc0	equ	0xFEE
 27690                           plusw0	equ	0xFEB
 27691                           wreg	equ	0xFE8
 27692                           indf1	equ	0xFE7
 27693                           postdec1	equ	0xFE5
 27694                           fsr1h	equ	0xFE2
 27695                           fsr1l	equ	0xFE1
 27696                           indf2	equ	0xFDF
 27697                           postinc2	equ	0xFDE
 27698                           postdec2	equ	0xFDD
 27699                           plusw2	equ	0xFDB
 27700                           fsr2h	equ	0xFDA
 27701                           fsr2l	equ	0xFD9
 27702                           status	equ	0xFD8
 27703                           
 27704 ;; *************** function _ResetI2C *****************
 27705 ;; Defined at:
 27706 ;;		line 93 in file "I2C.c"
 27707 ;; Parameters:    Size  Location     Type
 27708 ;;		None
 27709 ;; Auto vars:     Size  Location     Type
 27710 ;;		None
 27711 ;; Return value:  Size  Location     Type
 27712 ;;		None               void
 27713 ;; Registers used:
 27714 ;;		wreg, status,2, status,0, cstack
 27715 ;; Tracked objects:
 27716 ;;		On entry : 0/0
 27717 ;;		On exit  : 0/0
 27718 ;;		Unchanged: 0/0
 27719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27724 ;;Total ram usage:        0 bytes
 27725 ;; Hardware stack levels used:    1
 27726 ;; Hardware stack levels required when called:    8
 27727 ;; This function calls:
 27728 ;;		_Init_I2C_Master
 27729 ;;		_delayUS
 27730 ;; This function is called by:
 27731 ;;		_RTC_Clock_Enable
 27732 ;;		_RTC_TIME_NONMilitary
 27733 ;;		_READ_RTC_TIME
 27734 ;;		_RTC_Clock_Disable
 27735 ;;		_READ_RTC_SECONDS
 27736 ;; This function uses a non-reentrant model
 27737 ;;
 27738                           
 27739                           	psect	text68
 27740  017DC8                     __ptext68:
 27741                           	opt stack 0
 27742  017DC8                     _ResetI2C:
 27743                           	opt stack 20
 27744                           
 27745                           ;I2C.c: 95: SSPCON1 &= 0xDF;
 27746                           
 27747                           ; BSR set to: 1
 27748                           ;incstack = 0
 27749  017DC8  9AC6               	bcf	4038,5,c	;volatile
 27750                           
 27751                           ;I2C.c: 96: TRISCbits.TRISC3 = 0;
 27752  017DCA  9694               	bcf	3988,3,c	;volatile
 27753                           
 27754                           ;I2C.c: 97: LATC &= ~0b00001000;
 27755  017DCC  968B               	bcf	3979,3,c	;volatile
 27756                           
 27757                           ;I2C.c: 98: delayUS(200);
 27758  017DCE  0EC8               	movlw	200
 27759  017DD0  0101               	movlb	1	; () banked
 27760  017DD2  6F7C               	movwf	delayUS@US& (0+255),b
 27761  017DD4  0E00               	movlw	0
 27762  017DD6  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 27763  017DD8  0E00               	movlw	0
 27764  017DDA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 27765  017DDC  0E00               	movlw	0
 27766  017DDE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 27767  017DE0  EC38  F0BA         	call	_delayUS	;wreg free
 27768                           
 27769                           ;I2C.c: 99: TRISCbits.TRISC3 = 1;
 27770  017DE4  8694               	bsf	3988,3,c	;volatile
 27771                           
 27772                           ;I2C.c: 100: Init_I2C_Master();
 27773  017DE6  EC21  F0BC         	call	_Init_I2C_Master	;wreg free
 27774  017DEA  0012               	return		;funcret
 27775  017DEC                     __end_of_ResetI2C:
 27776                           	opt stack 0
 27777                           tblptru	equ	0xFF8
 27778                           tblptrh	equ	0xFF7
 27779                           tblptrl	equ	0xFF6
 27780                           tablat	equ	0xFF5
 27781                           prodh	equ	0xFF4
 27782                           prodl	equ	0xFF3
 27783                           intcon	equ	0xFF2
 27784                           intcon2	equ	0xFF1
 27785                           postinc0	equ	0xFEE
 27786                           plusw0	equ	0xFEB
 27787                           wreg	equ	0xFE8
 27788                           indf1	equ	0xFE7
 27789                           postdec1	equ	0xFE5
 27790                           fsr1h	equ	0xFE2
 27791                           fsr1l	equ	0xFE1
 27792                           indf2	equ	0xFDF
 27793                           postinc2	equ	0xFDE
 27794                           postdec2	equ	0xFDD
 27795                           plusw2	equ	0xFDB
 27796                           fsr2h	equ	0xFDA
 27797                           fsr2l	equ	0xFD9
 27798                           status	equ	0xFD8
 27799                           
 27800 ;; *************** function _Init_I2C_Master *****************
 27801 ;; Defined at:
 27802 ;;		line 55 in file "I2C.c"
 27803 ;; Parameters:    Size  Location     Type
 27804 ;;		None
 27805 ;; Auto vars:     Size  Location     Type
 27806 ;;  baud            2   16[BANK1 ] unsigned int 
 27807 ;; Return value:  Size  Location     Type
 27808 ;;		None               void
 27809 ;; Registers used:
 27810 ;;		wreg, status,2, status,0, cstack
 27811 ;; Tracked objects:
 27812 ;;		On entry : 0/0
 27813 ;;		On exit  : 0/0
 27814 ;;		Unchanged: 0/0
 27815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27817 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27819 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27820 ;;Total ram usage:        2 bytes
 27821 ;; Hardware stack levels used:    1
 27822 ;; Hardware stack levels required when called:    7
 27823 ;; This function calls:
 27824 ;;		_OpenI2C
 27825 ;; This function is called by:
 27826 ;;		_main
 27827 ;;		_ResetI2C
 27828 ;; This function uses a non-reentrant model
 27829 ;;
 27830                           
 27831                           	psect	text69
 27832  017842                     __ptext69:
 27833                           	opt stack 0
 27834  017842                     _Init_I2C_Master:
 27835                           	opt stack 20
 27836                           
 27837                           ;I2C.c: 57: unsigned int baud = 0;
 27838                           
 27839                           ;incstack = 0
 27840  017842  0E00               	movlw	0
 27841  017844  0101               	movlb	1	; () banked
 27842  017846  6F7F               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 27843  017848  0E00               	movlw	0
 27844  01784A  6F7E               	movwf	Init_I2C_Master@baud& (0+255),b
 27845                           
 27846                           ;I2C.c: 60: baud = (unsigned char)(40960000L/4 /((4* (long)5 * 1000L) - 1));
 27847  01784C  0E00               	movlw	0
 27848  01784E  0101               	movlb	1	; () banked
 27849  017850  6F7F               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 27850  017852  0E00               	movlw	0
 27851  017854  6F7E               	movwf	Init_I2C_Master@baud& (0+255),b
 27852                           
 27853                           ; BSR set to: 1
 27854                           ;I2C.c: 61: if(baud > 127 || baud == 0)
 27855  017856  0101               	movlb	1	; () banked
 27856  017858  517F               	movf	(Init_I2C_Master@baud+1)& (0+255),w,b
 27857  01785A  E10B               	bnz	l11303
 27858  01785C  0E80               	movlw	128
 27859  01785E  0101               	movlb	1	; () banked
 27860  017860  5D7E               	subwf	Init_I2C_Master@baud& (0+255),w,b
 27861  017862  B0D8               	btfsc	status,0,c
 27862  017864  D006               	goto	l11303
 27863                           
 27864                           ; BSR set to: 1
 27865  017866  0101               	movlb	1	; () banked
 27866  017868  517E               	movf	Init_I2C_Master@baud& (0+255),w,b
 27867  01786A  0101               	movlb	1	; () banked
 27868  01786C  117F               	iorwf	(Init_I2C_Master@baud+1)& (0+255),w,b
 27869  01786E  A4D8               	btfss	status,2,c
 27870  017870  D006               	goto	l11305
 27871  017872                     l11303:
 27872                           
 27873                           ; BSR set to: 1
 27874                           ;I2C.c: 62: {
 27875                           ;I2C.c: 63: baud = 127;
 27876  017872  0E00               	movlw	0
 27877  017874  0101               	movlb	1	; () banked
 27878  017876  6F7F               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 27879  017878  0E7F               	movlw	127
 27880  01787A  6F7E               	movwf	Init_I2C_Master@baud& (0+255),b
 27881  01787C  D000               	goto	l11305
 27882  01787E                     l11305:
 27883                           
 27884                           ; BSR set to: 1
 27885                           ;I2C.c: 64: }
 27886                           ;I2C.c: 65: SSPADD = baud;
 27887  01787E  C17E  FFC8         	movff	Init_I2C_Master@baud,4040	;volatile
 27888                           
 27889                           ; BSR set to: 1
 27890                           ;I2C.c: 66: OpenI2C(0b00001000, 0b10000000);
 27891  017882  0E80               	movlw	128
 27892  017884  0101               	movlb	1	; () banked
 27893  017886  6F7C               	movwf	OpenI2C@slew& (0+255),b
 27894  017888  0E08               	movlw	8
 27895  01788A  ECF6  F0BE         	call	_OpenI2C
 27896  01788E  0012               	return		;funcret
 27897  017890                     __end_of_Init_I2C_Master:
 27898                           	opt stack 0
 27899                           tblptru	equ	0xFF8
 27900                           tblptrh	equ	0xFF7
 27901                           tblptrl	equ	0xFF6
 27902                           tablat	equ	0xFF5
 27903                           prodh	equ	0xFF4
 27904                           prodl	equ	0xFF3
 27905                           intcon	equ	0xFF2
 27906                           intcon2	equ	0xFF1
 27907                           postinc0	equ	0xFEE
 27908                           plusw0	equ	0xFEB
 27909                           wreg	equ	0xFE8
 27910                           indf1	equ	0xFE7
 27911                           postdec1	equ	0xFE5
 27912                           fsr1h	equ	0xFE2
 27913                           fsr1l	equ	0xFE1
 27914                           indf2	equ	0xFDF
 27915                           postinc2	equ	0xFDE
 27916                           postdec2	equ	0xFDD
 27917                           plusw2	equ	0xFDB
 27918                           fsr2h	equ	0xFDA
 27919                           fsr2l	equ	0xFD9
 27920                           status	equ	0xFD8
 27921                           
 27922 ;; *************** function _OpenI2C *****************
 27923 ;; Defined at:
 27924 ;;		line 74 in file "I2C.c"
 27925 ;; Parameters:    Size  Location     Type
 27926 ;;  sync_mode       1    wreg     unsigned char 
 27927 ;;  slew            1   14[BANK1 ] unsigned char 
 27928 ;; Auto vars:     Size  Location     Type
 27929 ;;  sync_mode       1   15[BANK1 ] unsigned char 
 27930 ;; Return value:  Size  Location     Type
 27931 ;;		None               void
 27932 ;; Registers used:
 27933 ;;		wreg, status,2, status,0
 27934 ;; Tracked objects:
 27935 ;;		On entry : 0/0
 27936 ;;		On exit  : 0/0
 27937 ;;		Unchanged: 0/0
 27938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27939 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27940 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27942 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27943 ;;Total ram usage:        2 bytes
 27944 ;; Hardware stack levels used:    1
 27945 ;; Hardware stack levels required when called:    6
 27946 ;; This function calls:
 27947 ;;		Nothing
 27948 ;; This function is called by:
 27949 ;;		_Init_I2C_Master
 27950 ;; This function uses a non-reentrant model
 27951 ;;
 27952                           
 27953                           	psect	text70
 27954  017DEC                     __ptext70:
 27955                           	opt stack 0
 27956  017DEC                     _OpenI2C:
 27957                           	opt stack 20
 27958                           
 27959                           ;incstack = 0
 27960                           ;OpenI2C@sync_mode stored from wreg
 27961  017DEC  0101               	movlb	1	; () banked
 27962  017DEE  6F7D               	movwf	OpenI2C@sync_mode& (0+255),b
 27963                           
 27964                           ; BSR set to: 1
 27965                           ;I2C.c: 76: SSPSTAT &= 0x3F;
 27966  017DF0  0E3F               	movlw	63
 27967  017DF2  16C7               	andwf	4039,f,c	;volatile
 27968                           
 27969                           ; BSR set to: 1
 27970                           ;I2C.c: 77: SSPCON1 = 0x00;
 27971  017DF4  0E00               	movlw	0
 27972  017DF6  6EC6               	movwf	4038,c	;volatile
 27973                           
 27974                           ; BSR set to: 1
 27975                           ;I2C.c: 78: SSPCON2 = 0x00;
 27976  017DF8  0E00               	movlw	0
 27977  017DFA  6EC5               	movwf	4037,c	;volatile
 27978                           
 27979                           ;I2C.c: 79: SSPCON1 |= sync_mode;
 27980  017DFC  0101               	movlb	1	; () banked
 27981  017DFE  517D               	movf	OpenI2C@sync_mode& (0+255),w,b
 27982  017E00  12C6               	iorwf	4038,f,c	;volatile
 27983                           
 27984                           ;I2C.c: 80: SSPSTAT |= slew;
 27985  017E02  0101               	movlb	1	; () banked
 27986  017E04  517C               	movf	OpenI2C@slew& (0+255),w,b
 27987  017E06  12C7               	iorwf	4039,f,c	;volatile
 27988                           
 27989                           ; BSR set to: 1
 27990                           ;I2C.c: 82: TRISCbits.TRISC3 = 1;
 27991  017E08  8694               	bsf	3988,3,c	;volatile
 27992                           
 27993                           ; BSR set to: 1
 27994                           ;I2C.c: 83: TRISCbits.TRISC4 = 1;
 27995  017E0A  8894               	bsf	3988,4,c	;volatile
 27996                           
 27997                           ; BSR set to: 1
 27998                           ;I2C.c: 84: SSPCON1 |= 0b00100000;
 27999  017E0C  8AC6               	bsf	4038,5,c	;volatile
 28000                           
 28001                           ; BSR set to: 1
 28002  017E0E  0012               	return		;funcret
 28003  017E10                     __end_of_OpenI2C:
 28004                           	opt stack 0
 28005                           tblptru	equ	0xFF8
 28006                           tblptrh	equ	0xFF7
 28007                           tblptrl	equ	0xFF6
 28008                           tablat	equ	0xFF5
 28009                           prodh	equ	0xFF4
 28010                           prodl	equ	0xFF3
 28011                           intcon	equ	0xFF2
 28012                           intcon2	equ	0xFF1
 28013                           postinc0	equ	0xFEE
 28014                           plusw0	equ	0xFEB
 28015                           wreg	equ	0xFE8
 28016                           indf1	equ	0xFE7
 28017                           postdec1	equ	0xFE5
 28018                           fsr1h	equ	0xFE2
 28019                           fsr1l	equ	0xFE1
 28020                           indf2	equ	0xFDF
 28021                           postinc2	equ	0xFDE
 28022                           postdec2	equ	0xFDD
 28023                           plusw2	equ	0xFDB
 28024                           fsr2h	equ	0xFDA
 28025                           fsr2l	equ	0xFD9
 28026                           status	equ	0xFD8
 28027                           
 28028 ;; *************** function _I2C_Read_Sequential *****************
 28029 ;; Defined at:
 28030 ;;		line 307 in file "I2C.c"
 28031 ;; Parameters:    Size  Location     Type
 28032 ;;  I2Caddress      1    wreg     unsigned char 
 28033 ;;  Register        1   17[BANK1 ] unsigned char 
 28034 ;;  rdptr           2   18[BANK1 ] PTR unsigned char 
 28035 ;;		 -> READ_RTC_TIME@temp(7), 
 28036 ;;  length          1   20[BANK1 ] unsigned char 
 28037 ;; Auto vars:     Size  Location     Type
 28038 ;;  I2Caddress      1   21[BANK1 ] unsigned char 
 28039 ;; Return value:  Size  Location     Type
 28040 ;;                  1    wreg      unsigned char 
 28041 ;; Registers used:
 28042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28043 ;; Tracked objects:
 28044 ;;		On entry : 0/0
 28045 ;;		On exit  : 0/0
 28046 ;;		Unchanged: 0/0
 28047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28048 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 28049 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28051 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 28052 ;;Total ram usage:        5 bytes
 28053 ;; Hardware stack levels used:    1
 28054 ;; Hardware stack levels required when called:    8
 28055 ;; This function calls:
 28056 ;;		_IdleI2C
 28057 ;;		_Multiple_I2C_Read
 28058 ;;		_WriteI2C
 28059 ;; This function is called by:
 28060 ;;		_READ_RTC_TIME
 28061 ;; This function uses a non-reentrant model
 28062 ;;
 28063                           
 28064                           	psect	text71
 28065  015B8C                     __ptext71:
 28066                           	opt stack 0
 28067  015B8C                     _I2C_Read_Sequential:
 28068                           	opt stack 20
 28069                           
 28070                           ; BSR set to: 1
 28071                           ;incstack = 0
 28072                           ;I2C_Read_Sequential@I2Caddress stored from wreg
 28073  015B8C  0101               	movlb	1	; () banked
 28074  015B8E  6F83               	movwf	I2C_Read_Sequential@I2Caddress& (0+255),b
 28075                           
 28076                           ; BSR set to: 1
 28077                           ;I2C.c: 309: IdleI2C();
 28078  015B90  EC85  F0BF         	call	_IdleI2C	;wreg free
 28079                           
 28080                           ;I2C.c: 310: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 28081  015B94  80C5               	bsf	4037,0,c	;volatile
 28082  015B96  D000               	goto	l1461
 28083  015B98                     l1461:
 28084  015B98  A0C5               	btfss	4037,0,c	;volatile
 28085  015B9A  D002               	goto	l1464
 28086  015B9C  D7FD               	goto	l1461
 28087                           
 28088                           ;I2C.c: 311: while ( SSPCON2bits.SEN );
 28089  015B9E  D000               	goto	l1464
 28090  015BA0                     l1464:
 28091  015BA0  B0C5               	btfsc	4037,0,c	;volatile
 28092  015BA2  D7FE               	goto	l1464
 28093                           
 28094                           ;I2C.c: 312: if ( PIR2bits.BCLIF )
 28095  015BA4  A6A1               	btfss	4001,3,c	;volatile
 28096  015BA6  D003               	goto	l12333
 28097  015BA8                     l12327:
 28098                           
 28099                           ;I2C.c: 313: {
 28100                           ;I2C.c: 314: return ( -1 );
 28101  015BA8  0EFF               	movlw	255
 28102  015BAA  0012               	return	
 28103                           
 28104                           ;I2C.c: 315: }
 28105  015BAC  D070               	goto	l12381
 28106  015BAE                     l12333:
 28107                           
 28108                           ;I2C.c: 316: else
 28109                           ;I2C.c: 317: {
 28110                           ;I2C.c: 318: if ( WriteI2C( (I2Caddress << 1) & 0xFE ) )
 28111  015BAE  0101               	movlb	1	; () banked
 28112  015BB0  5183               	movf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 28113  015BB2  2583               	addwf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 28114  015BB4  0BFE               	andlw	254
 28115  015BB6  EC02  F0BA         	call	_WriteI2C
 28116  015BBA  0900               	iorlw	0
 28117  015BBC  B4D8               	btfsc	status,2,c
 28118  015BBE  D006               	goto	l1470
 28119                           
 28120                           ;I2C.c: 319: {
 28121                           ;I2C.c: 320: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28122  015BC0  84C5               	bsf	4037,2,c	;volatile
 28123  015BC2  D000               	goto	l1471
 28124  015BC4                     l1471:
 28125  015BC4  B4C5               	btfsc	4037,2,c	;volatile
 28126  015BC6  D7FE               	goto	l1471
 28127                           
 28128                           ;I2C.c: 321: return ( -3 );
 28129  015BC8  0EFD               	movlw	253
 28130  015BCA  0012               	return	
 28131  015BCC                     l1470:
 28132                           
 28133                           ;I2C.c: 322: }
 28134                           ;I2C.c: 325: if ( !SSPCON2bits.ACKSTAT )
 28135  015BCC  BCC5               	btfsc	4037,6,c	;volatile
 28136  015BCE  D058               	goto	l1474
 28137                           
 28138                           ;I2C.c: 326: {
 28139                           ;I2C.c: 327: if ( WriteI2C( Register ) )
 28140  015BD0  0101               	movlb	1	; () banked
 28141  015BD2  517F               	movf	I2C_Read_Sequential@Register& (0+255),w,b
 28142  015BD4  EC02  F0BA         	call	_WriteI2C
 28143  015BD8  0900               	iorlw	0
 28144  015BDA  B4D8               	btfsc	status,2,c
 28145  015BDC  D006               	goto	l1475
 28146                           
 28147                           ;I2C.c: 328: {
 28148                           ;I2C.c: 329: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28149  015BDE  84C5               	bsf	4037,2,c	;volatile
 28150  015BE0  D000               	goto	l1476
 28151  015BE2                     l1476:
 28152  015BE2  B4C5               	btfsc	4037,2,c	;volatile
 28153  015BE4  D7FE               	goto	l1476
 28154                           
 28155                           ;I2C.c: 330: return ( -3 );
 28156  015BE6  0EFD               	movlw	253
 28157  015BE8  0012               	return	
 28158  015BEA                     l1475:
 28159                           
 28160                           ;I2C.c: 331: }
 28161                           ;I2C.c: 334: if ( !SSPCON2bits.ACKSTAT )
 28162  015BEA  BCC5               	btfsc	4037,6,c	;volatile
 28163  015BEC  D042               	goto	l1479
 28164                           
 28165                           ;I2C.c: 335: {
 28166                           ;I2C.c: 336: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
 28167  015BEE  82C5               	bsf	4037,1,c	;volatile
 28168  015BF0  D000               	goto	l1480
 28169  015BF2                     l1480:
 28170  015BF2  A2C5               	btfss	4037,1,c	;volatile
 28171  015BF4  D002               	goto	l1483
 28172  015BF6  D7FD               	goto	l1480
 28173                           
 28174                           ;I2C.c: 337: while ( SSPCON2bits.RSEN );
 28175  015BF8  D000               	goto	l1483
 28176  015BFA                     l1483:
 28177  015BFA  B2C5               	btfsc	4037,1,c	;volatile
 28178  015BFC  D7FE               	goto	l1483
 28179                           
 28180                           ;I2C.c: 338: if ( WriteI2C( (I2Caddress << 1) +1 ) )
 28181  015BFE  80D8               	bsf	status,0,c
 28182  015C00  0101               	movlb	1	; () banked
 28183  015C02  3583               	rlcf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 28184  015C04  EC02  F0BA         	call	_WriteI2C
 28185  015C08  0900               	iorlw	0
 28186  015C0A  B4D8               	btfsc	status,2,c
 28187  015C0C  D006               	goto	l1486
 28188                           
 28189                           ;I2C.c: 339: {
 28190                           ;I2C.c: 340: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28191  015C0E  84C5               	bsf	4037,2,c	;volatile
 28192  015C10  D000               	goto	l1487
 28193  015C12                     l1487:
 28194  015C12  B4C5               	btfsc	4037,2,c	;volatile
 28195  015C14  D7FE               	goto	l1487
 28196                           
 28197                           ;I2C.c: 341: return ( -3 );
 28198  015C16  0EFD               	movlw	253
 28199  015C18  0012               	return	
 28200  015C1A                     l1486:
 28201                           
 28202                           ;I2C.c: 342: }
 28203                           ;I2C.c: 345: if ( !SSPCON2bits.ACKSTAT )
 28204  015C1A  BCC5               	btfsc	4037,6,c	;volatile
 28205  015C1C  D023               	goto	l1490
 28206                           
 28207                           ;I2C.c: 346: {
 28208                           ;I2C.c: 347: if ( Multiple_I2C_Read( rdptr, length ) )
 28209  015C1E  C180  F17C         	movff	I2C_Read_Sequential@rdptr,Multiple_I2C_Read@rdptr
 28210  015C22  C181  F17D         	movff	I2C_Read_Sequential@rdptr+1,Multiple_I2C_Read@rdptr+1
 28211  015C26  C182  F17E         	movff	I2C_Read_Sequential@length,Multiple_I2C_Read@length
 28212  015C2A  EC3D  F0BB         	call	_Multiple_I2C_Read	;wreg free
 28213  015C2E  0900               	iorlw	0
 28214  015C30  B4D8               	btfsc	status,2,c
 28215  015C32  D002               	goto	l1491
 28216                           
 28217                           ;I2C.c: 348: {
 28218                           ;I2C.c: 349: return ( -1 );
 28219  015C34  0EFF               	movlw	255
 28220  015C36  0012               	return	
 28221  015C38                     l1491:
 28222                           
 28223                           ;I2C.c: 350: }
 28224                           ;I2C.c: 352: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
 28225  015C38  8AC5               	bsf	4037,5,c	;volatile
 28226  015C3A  88C5               	bsf	4037,4,c	;volatile
 28227  015C3C  D000               	goto	l1492
 28228  015C3E                     l1492:
 28229  015C3E  A8C5               	btfss	4037,4,c	;volatile
 28230  015C40  D002               	goto	l1495
 28231  015C42  D7FD               	goto	l1492
 28232                           
 28233                           ;I2C.c: 353: while ( SSPCON2bits.ACKEN );
 28234  015C44  D000               	goto	l1495
 28235  015C46                     l1495:
 28236  015C46  B8C5               	btfsc	4037,4,c	;volatile
 28237  015C48  D7FE               	goto	l1495
 28238                           
 28239                           ;I2C.c: 354: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28240  015C4A  84C5               	bsf	4037,2,c	;volatile
 28241  015C4C  D000               	goto	l1498
 28242  015C4E                     l1498:
 28243  015C4E  A4C5               	btfss	4037,2,c	;volatile
 28244  015C50  D002               	goto	l1501
 28245  015C52  D7FD               	goto	l1498
 28246                           
 28247                           ;I2C.c: 355: while ( SSPCON2bits.PEN );
 28248  015C54  D000               	goto	l1501
 28249  015C56                     l1501:
 28250  015C56  B4C5               	btfsc	4037,2,c	;volatile
 28251  015C58  D7FE               	goto	l1501
 28252                           
 28253                           ;I2C.c: 356: if ( PIR2bits.BCLIF )
 28254  015C5A  A6A1               	btfss	4001,3,c	;volatile
 28255  015C5C  D018               	goto	l12381
 28256  015C5E  D7A4               	goto	l12327
 28257                           
 28258                           ;I2C.c: 357: {
 28259                           ;I2C.c: 358: return ( -1 );
 28260  015C60  0012               	return	
 28261                           
 28262                           ;I2C.c: 359: }
 28263                           ;I2C.c: 360: }
 28264  015C62  D015               	goto	l12381
 28265  015C64                     l1490:
 28266                           
 28267                           ;I2C.c: 361: else
 28268                           ;I2C.c: 362: {
 28269                           ;I2C.c: 363: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28270  015C64  84C5               	bsf	4037,2,c	;volatile
 28271  015C66  D000               	goto	l1506
 28272  015C68                     l1506:
 28273  015C68  B4C5               	btfsc	4037,2,c	;volatile
 28274  015C6A  D7FE               	goto	l1506
 28275  015C6C                     l12369:
 28276                           
 28277                           ;I2C.c: 364: return ( -2 );
 28278  015C6C  0EFE               	movlw	254
 28279  015C6E  0012               	return	
 28280                           
 28281                           ;I2C.c: 365: }
 28282                           ;I2C.c: 366: }
 28283  015C70  D00E               	goto	l12381
 28284  015C72                     l1479:
 28285                           
 28286                           ;I2C.c: 367: else
 28287                           ;I2C.c: 368: {
 28288                           ;I2C.c: 369: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28289  015C72  84C5               	bsf	4037,2,c	;volatile
 28290  015C74  D000               	goto	l1510
 28291  015C76                     l1510:
 28292  015C76  B4C5               	btfsc	4037,2,c	;volatile
 28293  015C78  D7FE               	goto	l1510
 28294  015C7A  D7F8               	goto	l12369
 28295                           
 28296                           ;I2C.c: 370: return ( -2 );
 28297  015C7C  0012               	return	
 28298                           
 28299                           ;I2C.c: 371: }
 28300                           ;I2C.c: 372: }
 28301  015C7E  D007               	goto	l12381
 28302  015C80                     l1474:
 28303                           
 28304                           ;I2C.c: 373: else
 28305                           ;I2C.c: 374: {
 28306                           ;I2C.c: 375: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 28307  015C80  84C5               	bsf	4037,2,c	;volatile
 28308  015C82  D000               	goto	l1514
 28309  015C84                     l1514:
 28310  015C84  B4C5               	btfsc	4037,2,c	;volatile
 28311  015C86  D7FE               	goto	l1514
 28312  015C88  D7F1               	goto	l12369
 28313                           
 28314                           ;I2C.c: 376: return ( -2 );
 28315  015C8A  0012               	return	
 28316  015C8C  D000               	goto	l12381
 28317  015C8E                     l12381:
 28318                           
 28319                           ;I2C.c: 377: }
 28320                           ;I2C.c: 378: }
 28321                           ;I2C.c: 379: return ( 0 );
 28322  015C8E  0E00               	movlw	0
 28323  015C90  0012               	return	
 28324  015C92  0012               	return		;funcret
 28325  015C94                     __end_of_I2C_Read_Sequential:
 28326                           	opt stack 0
 28327                           tblptru	equ	0xFF8
 28328                           tblptrh	equ	0xFF7
 28329                           tblptrl	equ	0xFF6
 28330                           tablat	equ	0xFF5
 28331                           prodh	equ	0xFF4
 28332                           prodl	equ	0xFF3
 28333                           intcon	equ	0xFF2
 28334                           intcon2	equ	0xFF1
 28335                           postinc0	equ	0xFEE
 28336                           plusw0	equ	0xFEB
 28337                           wreg	equ	0xFE8
 28338                           indf1	equ	0xFE7
 28339                           postdec1	equ	0xFE5
 28340                           fsr1h	equ	0xFE2
 28341                           fsr1l	equ	0xFE1
 28342                           indf2	equ	0xFDF
 28343                           postinc2	equ	0xFDE
 28344                           postdec2	equ	0xFDD
 28345                           plusw2	equ	0xFDB
 28346                           fsr2h	equ	0xFDA
 28347                           fsr2l	equ	0xFD9
 28348                           status	equ	0xFD8
 28349                           
 28350 ;; *************** function _WriteI2C *****************
 28351 ;; Defined at:
 28352 ;;		line 119 in file "I2C.c"
 28353 ;; Parameters:    Size  Location     Type
 28354 ;;  data_out        1    wreg     unsigned char 
 28355 ;; Auto vars:     Size  Location     Type
 28356 ;;  data_out        1   15[BANK1 ] unsigned char 
 28357 ;; Return value:  Size  Location     Type
 28358 ;;                  1    wreg      char 
 28359 ;; Registers used:
 28360 ;;		wreg, status,2, status,0, cstack
 28361 ;; Tracked objects:
 28362 ;;		On entry : 0/0
 28363 ;;		On exit  : 0/0
 28364 ;;		Unchanged: 0/0
 28365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28367 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28369 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28370 ;;Total ram usage:        1 bytes
 28371 ;; Hardware stack levels used:    1
 28372 ;; Hardware stack levels required when called:    7
 28373 ;; This function calls:
 28374 ;;		_IdleI2C
 28375 ;; This function is called by:
 28376 ;;		_I2C_Write_At_Address
 28377 ;;		_I2C_Read_At_Address
 28378 ;;		_I2C_Read_Sequential
 28379 ;; This function uses a non-reentrant model
 28380 ;;
 28381                           
 28382                           	psect	text72
 28383  017404                     __ptext72:
 28384                           	opt stack 0
 28385  017404                     _WriteI2C:
 28386                           	opt stack 20
 28387                           
 28388                           ;incstack = 0
 28389                           ;WriteI2C@data_out stored from wreg
 28390  017404  0101               	movlb	1	; () banked
 28391  017406  6F7D               	movwf	WriteI2C@data_out& (0+255),b
 28392                           
 28393                           ; BSR set to: 1
 28394                           ;I2C.c: 121: SSPBUF = data_out;
 28395  017408  C17D  FFC9         	movff	WriteI2C@data_out,4041	;volatile
 28396                           
 28397                           ; BSR set to: 1
 28398                           ;I2C.c: 122: if ( SSPCON1bits.WCOL )
 28399  01740C  AEC6               	btfss	4038,7,c	;volatile
 28400  01740E  D002               	goto	l11453
 28401                           
 28402                           ; BSR set to: 1
 28403                           ;I2C.c: 123: return ( -1 );
 28404  017410  0EFF               	movlw	255
 28405                           
 28406                           ; BSR set to: 1
 28407                           
 28408                           ; BSR set to: 1
 28409  017412  0012               	return	
 28410  017414                     l11453:
 28411                           
 28412                           ; BSR set to: 1
 28413                           ;I2C.c: 124: else
 28414                           ;I2C.c: 125: {
 28415                           ;I2C.c: 126: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
 28416  017414  50C6               	movf	4038,w,c	;volatile
 28417  017416  0B0F               	andlw	15
 28418  017418  0A08               	xorlw	8
 28419  01741A  B4D8               	btfsc	status,2,c
 28420  01741C  D010               	goto	l11471
 28421                           
 28422                           ; BSR set to: 1
 28423  01741E  50C6               	movf	4038,w,c	;volatile
 28424  017420  0B0F               	andlw	15
 28425  017422  0A0B               	xorlw	11
 28426  017424  B4D8               	btfsc	status,2,c
 28427  017426  D00B               	goto	l11471
 28428                           
 28429                           ; BSR set to: 1
 28430                           ;I2C.c: 127: {
 28431                           ;I2C.c: 128: SSPCON1bits.CKP = 1;
 28432  017428  88C6               	bsf	4038,4,c	;volatile
 28433                           
 28434                           ;I2C.c: 129: while ( !PIR1bits.SSPIF );
 28435  01742A  D000               	goto	l1343
 28436  01742C                     l1343:
 28437  01742C  A69E               	btfss	3998,3,c	;volatile
 28438  01742E  D7FE               	goto	l1343
 28439                           
 28440                           ;I2C.c: 131: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
 28441  017430  A4C7               	btfss	4039,2,c	;volatile
 28442  017432  B0C7               	btfsc	4039,0,c	;volatile
 28443  017434  D002               	goto	l11467
 28444                           
 28445                           ;I2C.c: 132: {
 28446                           ;I2C.c: 133: return ( -2 );
 28447  017436  0EFE               	movlw	254
 28448                           
 28449                           ;I2C.c: 134: }
 28450  017438  0012               	return	
 28451  01743A                     l11467:
 28452                           
 28453                           ;I2C.c: 135: else
 28454                           ;I2C.c: 136: {
 28455                           ;I2C.c: 137: return ( 0 );
 28456  01743A  0E00               	movlw	0
 28457                           
 28458                           ;I2C.c: 138: }
 28459                           ;I2C.c: 139: }
 28460  01743C  0012               	return	
 28461  01743E                     l11471:
 28462                           
 28463                           ;I2C.c: 140: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 28464  01743E  50C6               	movf	4038,w,c	;volatile
 28465  017440  0B0F               	andlw	15
 28466  017442  0A08               	xorlw	8
 28467  017444  B4D8               	btfsc	status,2,c
 28468  017446  D007               	goto	l1352
 28469  017448  50C6               	movf	4038,w,c	;volatile
 28470  01744A  0B0F               	andlw	15
 28471  01744C  0A0B               	xorlw	11
 28472  01744E  B4D8               	btfsc	status,2,c
 28473  017450  D002               	goto	l1352
 28474  017452  D00B               	goto	l11489
 28475                           
 28476                           ;I2C.c: 141: {
 28477                           ;I2C.c: 142: while( SSPSTATbits.BF );
 28478  017454  D000               	goto	l1352
 28479  017456                     l1352:
 28480  017456  B0C7               	btfsc	4039,0,c	;volatile
 28481  017458  D7FE               	goto	l1352
 28482                           
 28483                           ;I2C.c: 143: IdleI2C();
 28484  01745A  EC85  F0BF         	call	_IdleI2C	;wreg free
 28485                           
 28486                           ;I2C.c: 144: if ( SSPCON2bits.ACKSTAT )
 28487  01745E  ACC5               	btfss	4037,6,c	;volatile
 28488  017460  D002               	goto	l11485
 28489                           
 28490                           ;I2C.c: 145: return ( -2 );
 28491  017462  0EFE               	movlw	254
 28492  017464  0012               	return	
 28493  017466                     l11485:
 28494                           
 28495                           ;I2C.c: 146: else return ( 0 );
 28496  017466  0E00               	movlw	0
 28497                           
 28498                           ;I2C.c: 147: }
 28499  017468  0012               	return	
 28500  01746A                     l11489:
 28501                           
 28502                           ;I2C.c: 148: else
 28503                           ;I2C.c: 149: {
 28504                           ;I2C.c: 150: return (-4);
 28505  01746A  0EFC               	movlw	252
 28506  01746C  0012               	return	
 28507  01746E  0012               	return		;funcret
 28508  017470                     __end_of_WriteI2C:
 28509                           	opt stack 0
 28510                           tblptru	equ	0xFF8
 28511                           tblptrh	equ	0xFF7
 28512                           tblptrl	equ	0xFF6
 28513                           tablat	equ	0xFF5
 28514                           prodh	equ	0xFF4
 28515                           prodl	equ	0xFF3
 28516                           intcon	equ	0xFF2
 28517                           intcon2	equ	0xFF1
 28518                           postinc0	equ	0xFEE
 28519                           plusw0	equ	0xFEB
 28520                           wreg	equ	0xFE8
 28521                           indf1	equ	0xFE7
 28522                           postdec1	equ	0xFE5
 28523                           fsr1h	equ	0xFE2
 28524                           fsr1l	equ	0xFE1
 28525                           indf2	equ	0xFDF
 28526                           postinc2	equ	0xFDE
 28527                           postdec2	equ	0xFDD
 28528                           plusw2	equ	0xFDB
 28529                           fsr2h	equ	0xFDA
 28530                           fsr2l	equ	0xFD9
 28531                           status	equ	0xFD8
 28532                           
 28533 ;; *************** function _IdleI2C *****************
 28534 ;; Defined at:
 28535 ;;		line 108 in file "I2C.c"
 28536 ;; Parameters:    Size  Location     Type
 28537 ;;		None
 28538 ;; Auto vars:     Size  Location     Type
 28539 ;;		None
 28540 ;; Return value:  Size  Location     Type
 28541 ;;		None               void
 28542 ;; Registers used:
 28543 ;;		wreg, status,2, status,0
 28544 ;; Tracked objects:
 28545 ;;		On entry : 0/0
 28546 ;;		On exit  : 0/0
 28547 ;;		Unchanged: 0/0
 28548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28551 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28552 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28553 ;;Total ram usage:        1 bytes
 28554 ;; Hardware stack levels used:    1
 28555 ;; Hardware stack levels required when called:    6
 28556 ;; This function calls:
 28557 ;;		Nothing
 28558 ;; This function is called by:
 28559 ;;		_WriteI2C
 28560 ;;		_I2C_Write_At_Address
 28561 ;;		_I2C_Read_At_Address
 28562 ;;		_I2C_Read_Sequential
 28563 ;; This function uses a non-reentrant model
 28564 ;;
 28565                           
 28566                           	psect	text73
 28567  017F0A                     __ptext73:
 28568                           	opt stack 0
 28569  017F0A                     _IdleI2C:
 28570                           	opt stack 20
 28571                           
 28572                           ;I2C.c: 111: continue;
 28573                           
 28574                           ;I2C.c: 110: while ( ( SSPCON2 & 0x1F ) || ( SSPSTATbits.R_W ) )
 28575                           
 28576                           ;incstack = 0
 28577  017F0A  D000               	goto	l11219
 28578  017F0C                     l11219:
 28579  017F0C  CFC5 F17C          	movff	4037,??_IdleI2C	;volatile
 28580  017F10  0E1F               	movlw	31
 28581  017F12  0101               	movlb	1	; () banked
 28582  017F14  177C               	andwf	??_IdleI2C& (0+255),f,b
 28583  017F16  B4D8               	btfsc	status,2,c
 28584                           
 28585                           ; BSR set to: 1
 28586  017F18  B4C7               	btfsc	4039,2,c	;volatile
 28587  017F1A  D7F8               	goto	l11219
 28588                           
 28589                           ; BSR set to: 1
 28590                           
 28591                           ; BSR set to: 1
 28592  017F1C  0012               	return		;funcret
 28593  017F1E                     __end_of_IdleI2C:
 28594                           	opt stack 0
 28595                           tblptru	equ	0xFF8
 28596                           tblptrh	equ	0xFF7
 28597                           tblptrl	equ	0xFF6
 28598                           tablat	equ	0xFF5
 28599                           prodh	equ	0xFF4
 28600                           prodl	equ	0xFF3
 28601                           intcon	equ	0xFF2
 28602                           intcon2	equ	0xFF1
 28603                           postinc0	equ	0xFEE
 28604                           plusw0	equ	0xFEB
 28605                           wreg	equ	0xFE8
 28606                           indf1	equ	0xFE7
 28607                           postdec1	equ	0xFE5
 28608                           fsr1h	equ	0xFE2
 28609                           fsr1l	equ	0xFE1
 28610                           indf2	equ	0xFDF
 28611                           postinc2	equ	0xFDE
 28612                           postdec2	equ	0xFDD
 28613                           plusw2	equ	0xFDB
 28614                           fsr2h	equ	0xFDA
 28615                           fsr2l	equ	0xFD9
 28616                           status	equ	0xFD8
 28617                           
 28618 ;; *************** function _Multiple_I2C_Read *****************
 28619 ;; Defined at:
 28620 ;;		line 387 in file "I2C.c"
 28621 ;; Parameters:    Size  Location     Type
 28622 ;;  rdptr           2   14[BANK1 ] PTR unsigned char 
 28623 ;;		 -> READ_RTC_TIME@temp(7), 
 28624 ;;  length          1   16[BANK1 ] unsigned char 
 28625 ;; Auto vars:     Size  Location     Type
 28626 ;;		None
 28627 ;; Return value:  Size  Location     Type
 28628 ;;                  1    wreg      unsigned char 
 28629 ;; Registers used:
 28630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28631 ;; Tracked objects:
 28632 ;;		On entry : 0/0
 28633 ;;		On exit  : 0/0
 28634 ;;		Unchanged: 0/0
 28635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28636 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 28637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28639 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 28640 ;;Total ram usage:        3 bytes
 28641 ;; Hardware stack levels used:    1
 28642 ;; Hardware stack levels required when called:    7
 28643 ;; This function calls:
 28644 ;;		_readI2C
 28645 ;; This function is called by:
 28646 ;;		_I2C_Read_Sequential
 28647 ;; This function uses a non-reentrant model
 28648 ;;
 28649                           
 28650                           	psect	text74
 28651  01767A                     __ptext74:
 28652                           	opt stack 0
 28653  01767A                     _Multiple_I2C_Read:
 28654                           	opt stack 20
 28655                           
 28656                           ;I2C.c: 389: while ( length-- )
 28657                           
 28658                           ; BSR set to: 1
 28659                           ;incstack = 0
 28660  01767A  D027               	goto	l11511
 28661  01767C                     l11495:
 28662                           
 28663                           ;I2C.c: 390: {
 28664                           ;I2C.c: 391: *rdptr++ = readI2C();
 28665  01767C  EC08  F0BF         	call	_readI2C	;wreg free
 28666  017680  C17C  FFD9         	movff	Multiple_I2C_Read@rdptr,fsr2l
 28667  017684  C17D  FFDA         	movff	Multiple_I2C_Read@rdptr+1,fsr2h
 28668  017688  6EDF               	movwf	indf2,c
 28669  01768A  0101               	movlb	1	; () banked
 28670  01768C  4B7C               	infsnz	Multiple_I2C_Read@rdptr& (0+255),f,b
 28671  01768E  2B7D               	incf	(Multiple_I2C_Read@rdptr+1)& (0+255),f,b
 28672                           
 28673                           ;I2C.c: 392: while ( SSPCON2bits.RCEN );
 28674  017690  D000               	goto	l1521
 28675  017692                     l1521:
 28676  017692  B6C5               	btfsc	4037,3,c	;volatile
 28677  017694  D7FE               	goto	l1521
 28678                           
 28679                           ;I2C.c: 394: if ( PIR2bits.BCLIF )
 28680  017696  A6A1               	btfss	4001,3,c	;volatile
 28681  017698  D002               	goto	l11503
 28682                           
 28683                           ;I2C.c: 395: {
 28684                           ;I2C.c: 396: return ( -1 );
 28685  01769A  0EFF               	movlw	255
 28686  01769C  0012               	return	
 28687  01769E                     l11503:
 28688                           
 28689                           ;I2C.c: 397: }
 28690                           ;I2C.c: 399: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 28691  01769E  50C6               	movf	4038,w,c	;volatile
 28692  0176A0  0B0F               	andlw	15
 28693  0176A2  0A08               	xorlw	8
 28694  0176A4  B4D8               	btfsc	status,2,c
 28695  0176A6  D005               	goto	l11507
 28696  0176A8  50C6               	movf	4038,w,c	;volatile
 28697  0176AA  0B0F               	andlw	15
 28698  0176AC  0A0B               	xorlw	11
 28699  0176AE  A4D8               	btfss	status,2,c
 28700  0176B0  D00C               	goto	l11511
 28701  0176B2                     l11507:
 28702                           
 28703                           ;I2C.c: 400: {
 28704                           ;I2C.c: 401: if ( length )
 28705  0176B2  0101               	movlb	1	; () banked
 28706  0176B4  517E               	movf	Multiple_I2C_Read@length& (0+255),w,b
 28707  0176B6  0101               	movlb	1	; () banked
 28708  0176B8  B4D8               	btfsc	status,2,c
 28709  0176BA  D007               	goto	l11511
 28710                           
 28711                           ; BSR set to: 1
 28712                           ;I2C.c: 402: {
 28713                           ;I2C.c: 403: SSPCON2bits.ACKDT = 0;
 28714  0176BC  9AC5               	bcf	4037,5,c	;volatile
 28715                           
 28716                           ;I2C.c: 404: SSPCON2bits.ACKEN = 1;
 28717  0176BE  88C5               	bsf	4037,4,c	;volatile
 28718                           
 28719                           ;I2C.c: 405: while ( SSPCON2bits.ACKEN );
 28720  0176C0  D000               	goto	l1530
 28721  0176C2                     l1530:
 28722  0176C2  A8C5               	btfss	4037,4,c	;volatile
 28723  0176C4  D002               	goto	l11511
 28724  0176C6  D7FD               	goto	l1530
 28725  0176C8  D000               	goto	l11511
 28726  0176CA                     l11511:
 28727  0176CA  0101               	movlb	1	; () banked
 28728  0176CC  077E               	decf	Multiple_I2C_Read@length& (0+255),f,b
 28729  0176CE  0101               	movlb	1	; () banked
 28730  0176D0  297E               	incf	Multiple_I2C_Read@length& (0+255),w,b
 28731  0176D2  A4D8               	btfss	status,2,c
 28732  0176D4  D7D3               	goto	l11495
 28733                           
 28734                           ; BSR set to: 1
 28735                           ;I2C.c: 406: }
 28736                           ;I2C.c: 407: }
 28737                           ;I2C.c: 409: }
 28738                           ;I2C.c: 410: return ( 0 );
 28739                           
 28740                           ; BSR set to: 1
 28741  0176D6  0E00               	movlw	0
 28742  0176D8  0012               	return	
 28743                           
 28744                           ; BSR set to: 1
 28745  0176DA  0012               	return		;funcret
 28746  0176DC                     __end_of_Multiple_I2C_Read:
 28747                           	opt stack 0
 28748                           tblptru	equ	0xFF8
 28749                           tblptrh	equ	0xFF7
 28750                           tblptrl	equ	0xFF6
 28751                           tablat	equ	0xFF5
 28752                           prodh	equ	0xFF4
 28753                           prodl	equ	0xFF3
 28754                           intcon	equ	0xFF2
 28755                           intcon2	equ	0xFF1
 28756                           postinc0	equ	0xFEE
 28757                           plusw0	equ	0xFEB
 28758                           wreg	equ	0xFE8
 28759                           indf1	equ	0xFE7
 28760                           postdec1	equ	0xFE5
 28761                           fsr1h	equ	0xFE2
 28762                           fsr1l	equ	0xFE1
 28763                           indf2	equ	0xFDF
 28764                           postinc2	equ	0xFDE
 28765                           postdec2	equ	0xFDD
 28766                           plusw2	equ	0xFDB
 28767                           fsr2h	equ	0xFDA
 28768                           fsr2l	equ	0xFD9
 28769                           status	equ	0xFD8
 28770                           
 28771 ;; *************** function _readI2C *****************
 28772 ;; Defined at:
 28773 ;;		line 418 in file "I2C.c"
 28774 ;; Parameters:    Size  Location     Type
 28775 ;;		None
 28776 ;; Auto vars:     Size  Location     Type
 28777 ;;		None
 28778 ;; Return value:  Size  Location     Type
 28779 ;;                  1    wreg      unsigned char 
 28780 ;; Registers used:
 28781 ;;		wreg, status,2, status,0
 28782 ;; Tracked objects:
 28783 ;;		On entry : 0/0
 28784 ;;		On exit  : 0/0
 28785 ;;		Unchanged: 0/0
 28786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28791 ;;Total ram usage:        0 bytes
 28792 ;; Hardware stack levels used:    1
 28793 ;; Hardware stack levels required when called:    6
 28794 ;; This function calls:
 28795 ;;		Nothing
 28796 ;; This function is called by:
 28797 ;;		_Multiple_I2C_Read
 28798 ;; This function uses a non-reentrant model
 28799 ;;
 28800                           
 28801                           	psect	text75
 28802  017E10                     __ptext75:
 28803                           	opt stack 0
 28804  017E10                     _readI2C:
 28805                           	opt stack 20
 28806                           
 28807                           ;I2C.c: 420: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 28808                           
 28809                           ;incstack = 0
 28810  017E10  50C6               	movf	4038,w,c	;volatile
 28811  017E12  0B0F               	andlw	15
 28812  017E14  0A08               	xorlw	8
 28813  017E16  B4D8               	btfsc	status,2,c
 28814  017E18  D005               	goto	l1538
 28815  017E1A  50C6               	movf	4038,w,c	;volatile
 28816  017E1C  0B0F               	andlw	15
 28817  017E1E  0A0B               	xorlw	11
 28818  017E20  A4D8               	btfss	status,2,c
 28819  017E22  D002               	goto	l1539
 28820  017E24                     l1538:
 28821                           
 28822                           ;I2C.c: 421: SSPCON2bits.RCEN = 1;
 28823  017E24  86C5               	bsf	4037,3,c	;volatile
 28824                           
 28825                           ;I2C.c: 422: while ( !SSPSTATbits.BF );
 28826  017E26  D000               	goto	l1539
 28827  017E28                     l1539:
 28828  017E28  A0C7               	btfss	4039,0,c	;volatile
 28829  017E2A  D7FE               	goto	l1539
 28830                           
 28831                           ;I2C.c: 423: return ( SSPBUF );
 28832  017E2C  50C9               	movf	4041,w,c	;volatile
 28833  017E2E  0012               	return	
 28834  017E30  0012               	return		;funcret
 28835  017E32                     __end_of_readI2C:
 28836                           	opt stack 0
 28837                           tblptru	equ	0xFF8
 28838                           tblptrh	equ	0xFF7
 28839                           tblptrl	equ	0xFF6
 28840                           tablat	equ	0xFF5
 28841                           prodh	equ	0xFF4
 28842                           prodl	equ	0xFF3
 28843                           intcon	equ	0xFF2
 28844                           intcon2	equ	0xFF1
 28845                           postinc0	equ	0xFEE
 28846                           plusw0	equ	0xFEB
 28847                           wreg	equ	0xFE8
 28848                           indf1	equ	0xFE7
 28849                           postdec1	equ	0xFE5
 28850                           fsr1h	equ	0xFE2
 28851                           fsr1l	equ	0xFE1
 28852                           indf2	equ	0xFDF
 28853                           postinc2	equ	0xFDE
 28854                           postdec2	equ	0xFDD
 28855                           plusw2	equ	0xFDB
 28856                           fsr2h	equ	0xFDA
 28857                           fsr2l	equ	0xFD9
 28858                           status	equ	0xFD8
 28859                           
 28860 ;; *************** function _Parse_Time *****************
 28861 ;; Defined at:
 28862 ;;		line 279 in file "RTC.c"
 28863 ;; Parameters:    Size  Location     Type
 28864 ;;  This            2   14[BANK1 ] PTR unsigned char 
 28865 ;;		 -> Rxdata(100), 
 28866 ;; Auto vars:     Size  Location     Type
 28867 ;;  TempTime        9   18[BANK1 ] struct TIME
 28868 ;;  temp            1   17[BANK1 ] unsigned char 
 28869 ;; Return value:  Size  Location     Type
 28870 ;;                  1    wreg      unsigned char 
 28871 ;; Registers used:
 28872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28873 ;; Tracked objects:
 28874 ;;		On entry : 0/0
 28875 ;;		On exit  : 0/0
 28876 ;;		Unchanged: 0/0
 28877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28878 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28879 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 28880 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28881 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 28882 ;;Total ram usage:       13 bytes
 28883 ;; Hardware stack levels used:    1
 28884 ;; Hardware stack levels required when called:    6
 28885 ;; This function calls:
 28886 ;;		Nothing
 28887 ;; This function is called by:
 28888 ;;		_Command
 28889 ;; This function uses a non-reentrant model
 28890 ;;
 28891                           
 28892                           	psect	text76
 28893  013880                     __ptext76:
 28894                           	opt stack 0
 28895  013880                     _Parse_Time:
 28896                           	opt stack 23
 28897                           
 28898                           ;RTC.c: 281: TIME TempTime;
 28899                           ;RTC.c: 282: unsigned char temp = 0;
 28900                           
 28901                           ;incstack = 0
 28902  013880  0E00               	movlw	0
 28903  013882  0101               	movlb	1	; () banked
 28904  013884  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28905                           
 28906                           ; BSR set to: 1
 28907                           ;RTC.c: 284: if(*This != 0 && *This == ' ')
 28908  013886  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28909  01388A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28910  01388E  50DF               	movf	indf2,w,c
 28911  013890  B4D8               	btfsc	status,2,c
 28912  013892  D00C               	goto	l13175
 28913                           
 28914                           ; BSR set to: 1
 28915  013894  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28916  013898  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28917  01389C  0E20               	movlw	32
 28918  01389E  18DE               	xorwf	postinc2,w,c
 28919  0138A0  A4D8               	btfss	status,2,c
 28920  0138A2  D004               	goto	l13175
 28921                           
 28922                           ; BSR set to: 1
 28923                           ;RTC.c: 285: {
 28924                           ;RTC.c: 286: This++;
 28925  0138A4  0101               	movlb	1	; () banked
 28926  0138A6  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28927  0138A8  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28928  0138AA  D000               	goto	l13175
 28929  0138AC                     l13175:
 28930                           
 28931                           ; BSR set to: 1
 28932                           ;RTC.c: 287: }
 28933                           ;RTC.c: 290: if (*This >= 48 && *This <= 57)
 28934  0138AC  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28935  0138B0  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28936  0138B4  0E2F               	movlw	47
 28937  0138B6  64DF               	cpfsgt	indf2,c
 28938  0138B8  D013               	goto	l13183
 28939                           
 28940                           ; BSR set to: 1
 28941  0138BA  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28942  0138BE  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28943  0138C2  0E3A               	movlw	58
 28944  0138C4  60DF               	cpfslt	indf2,c
 28945  0138C6  D00C               	goto	l13183
 28946                           
 28947                           ; BSR set to: 1
 28948                           ;RTC.c: 291: {
 28949                           ;RTC.c: 292: temp = *This - 48;
 28950  0138C8  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28951  0138CC  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28952  0138D0  50DF               	movf	indf2,w,c
 28953  0138D2  0FD0               	addlw	208
 28954  0138D4  0101               	movlb	1	; () banked
 28955  0138D6  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28956                           
 28957                           ; BSR set to: 1
 28958                           ;RTC.c: 293: This++;
 28959  0138D8  0101               	movlb	1	; () banked
 28960  0138DA  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28961  0138DC  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28962                           
 28963                           ;RTC.c: 294: }
 28964  0138DE  D002               	goto	l13187
 28965  0138E0                     l13183:
 28966                           
 28967                           ; BSR set to: 1
 28968                           ;RTC.c: 295: else
 28969                           ;RTC.c: 296: {
 28970                           ;RTC.c: 297: return 0;
 28971  0138E0  0E00               	movlw	0
 28972                           
 28973                           ; BSR set to: 1
 28974  0138E2  0012               	return	
 28975  0138E4                     l13187:
 28976                           
 28977                           ; BSR set to: 1
 28978                           ;RTC.c: 298: }
 28979                           ;RTC.c: 300: if(*This >= 48 && *This <= 57)
 28980  0138E4  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28981  0138E8  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28982  0138EC  0E2F               	movlw	47
 28983  0138EE  64DF               	cpfsgt	indf2,c
 28984  0138F0  D018               	goto	l13197
 28985                           
 28986                           ; BSR set to: 1
 28987  0138F2  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28988  0138F6  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28989  0138FA  0E3A               	movlw	58
 28990  0138FC  60DF               	cpfslt	indf2,c
 28991  0138FE  D011               	goto	l13197
 28992                           
 28993                           ; BSR set to: 1
 28994                           ;RTC.c: 301: {
 28995                           ;RTC.c: 302: temp *= 10;
 28996  013900  0E0A               	movlw	10
 28997  013902  0101               	movlb	1	; () banked
 28998  013904  037F               	mulwf	Parse_Time@temp& (0+255),b
 28999  013906  50F3               	movf	prodl,w,c
 29000  013908  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29001                           
 29002                           ; BSR set to: 1
 29003                           ;RTC.c: 303: temp += *This - 48;
 29004  01390A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29005  01390E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29006  013912  50DF               	movf	indf2,w,c
 29007  013914  0FD0               	addlw	208
 29008  013916  0101               	movlb	1	; () banked
 29009  013918  277F               	addwf	Parse_Time@temp& (0+255),f,b
 29010                           
 29011                           ; BSR set to: 1
 29012                           ;RTC.c: 304: This++;
 29013  01391A  0101               	movlb	1	; () banked
 29014  01391C  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29015  01391E  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29016                           
 29017                           ;RTC.c: 305: }
 29018  013920  D00C               	goto	l1236
 29019  013922                     l13197:
 29020                           
 29021                           ; BSR set to: 1
 29022                           ;RTC.c: 306: else if(*This == '/')
 29023  013922  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29024  013926  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29025  01392A  0E2F               	movlw	47
 29026  01392C  18DE               	xorwf	postinc2,w,c
 29027  01392E  B4D8               	btfsc	status,2,c
 29028  013930  D004               	goto	l1236
 29029  013932  D001               	goto	l13201
 29030                           
 29031                           ; BSR set to: 1
 29032                           ;RTC.c: 307: {
 29033                           ;RTC.c: 309: }
 29034  013934  D002               	goto	l1236
 29035  013936                     l13201:
 29036                           
 29037                           ; BSR set to: 1
 29038                           ;RTC.c: 310: else
 29039                           ;RTC.c: 311: {
 29040                           ;RTC.c: 312: return 0;
 29041  013936  0E00               	movlw	0
 29042                           
 29043                           ; BSR set to: 1
 29044  013938  0012               	return	
 29045  01393A                     l1236:
 29046                           
 29047                           ; BSR set to: 1
 29048                           ;RTC.c: 313: }
 29049                           ;RTC.c: 314: TempTime.Month = temp;
 29050  01393A  C17F  F187         	movff	Parse_Time@temp,Parse_Time@TempTime+7
 29051                           
 29052                           ; BSR set to: 1
 29053                           ;RTC.c: 316: if(*This == '/')
 29054  01393E  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29055  013942  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29056  013946  0E2F               	movlw	47
 29057  013948  18DE               	xorwf	postinc2,w,c
 29058  01394A  A4D8               	btfss	status,2,c
 29059  01394C  D004               	goto	l13209
 29060                           
 29061                           ; BSR set to: 1
 29062                           ;RTC.c: 317: {
 29063                           ;RTC.c: 318: This++;
 29064  01394E  0101               	movlb	1	; () banked
 29065  013950  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29066  013952  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29067                           
 29068                           ;RTC.c: 319: }
 29069  013954  D002               	goto	l13213
 29070  013956                     l13209:
 29071                           
 29072                           ; BSR set to: 1
 29073                           ;RTC.c: 320: else
 29074                           ;RTC.c: 321: {
 29075                           ;RTC.c: 322: return 0;
 29076  013956  0E00               	movlw	0
 29077                           
 29078                           ; BSR set to: 1
 29079  013958  0012               	return	
 29080  01395A                     l13213:
 29081                           
 29082                           ; BSR set to: 1
 29083                           ;RTC.c: 323: }
 29084                           ;RTC.c: 326: if (*This >= 48 && *This <= 57)
 29085  01395A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29086  01395E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29087  013962  0E2F               	movlw	47
 29088  013964  64DF               	cpfsgt	indf2,c
 29089  013966  D013               	goto	l13221
 29090                           
 29091                           ; BSR set to: 1
 29092  013968  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29093  01396C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29094  013970  0E3A               	movlw	58
 29095  013972  60DF               	cpfslt	indf2,c
 29096  013974  D00C               	goto	l13221
 29097                           
 29098                           ; BSR set to: 1
 29099                           ;RTC.c: 327: {
 29100                           ;RTC.c: 328: temp = *This - 48;
 29101  013976  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29102  01397A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29103  01397E  50DF               	movf	indf2,w,c
 29104  013980  0FD0               	addlw	208
 29105  013982  0101               	movlb	1	; () banked
 29106  013984  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29107                           
 29108                           ; BSR set to: 1
 29109                           ;RTC.c: 329: This++;
 29110  013986  0101               	movlb	1	; () banked
 29111  013988  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29112  01398A  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29113                           
 29114                           ;RTC.c: 330: }
 29115  01398C  D002               	goto	l13225
 29116  01398E                     l13221:
 29117                           
 29118                           ; BSR set to: 1
 29119                           ;RTC.c: 331: else
 29120                           ;RTC.c: 332: {
 29121                           ;RTC.c: 333: return 0;
 29122  01398E  0E00               	movlw	0
 29123                           
 29124                           ; BSR set to: 1
 29125  013990  0012               	return	
 29126  013992                     l13225:
 29127                           
 29128                           ; BSR set to: 1
 29129                           ;RTC.c: 334: }
 29130                           ;RTC.c: 336: if(*This >= 48 && *This <= 57)
 29131  013992  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29132  013996  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29133  01399A  0E2F               	movlw	47
 29134  01399C  64DF               	cpfsgt	indf2,c
 29135  01399E  D018               	goto	l13235
 29136                           
 29137                           ; BSR set to: 1
 29138  0139A0  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29139  0139A4  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29140  0139A8  0E3A               	movlw	58
 29141  0139AA  60DF               	cpfslt	indf2,c
 29142  0139AC  D011               	goto	l13235
 29143                           
 29144                           ; BSR set to: 1
 29145                           ;RTC.c: 337: {
 29146                           ;RTC.c: 338: temp *= 10;
 29147  0139AE  0E0A               	movlw	10
 29148  0139B0  0101               	movlb	1	; () banked
 29149  0139B2  037F               	mulwf	Parse_Time@temp& (0+255),b
 29150  0139B4  50F3               	movf	prodl,w,c
 29151  0139B6  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29152                           
 29153                           ; BSR set to: 1
 29154                           ;RTC.c: 339: temp += *This - 48;
 29155  0139B8  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29156  0139BC  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29157  0139C0  50DF               	movf	indf2,w,c
 29158  0139C2  0FD0               	addlw	208
 29159  0139C4  0101               	movlb	1	; () banked
 29160  0139C6  277F               	addwf	Parse_Time@temp& (0+255),f,b
 29161                           
 29162                           ; BSR set to: 1
 29163                           ;RTC.c: 340: This++;
 29164  0139C8  0101               	movlb	1	; () banked
 29165  0139CA  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29166  0139CC  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29167                           
 29168                           ;RTC.c: 341: }
 29169  0139CE  D00C               	goto	l1244
 29170  0139D0                     l13235:
 29171                           
 29172                           ; BSR set to: 1
 29173                           ;RTC.c: 342: else if(*This == '/')
 29174  0139D0  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29175  0139D4  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29176  0139D8  0E2F               	movlw	47
 29177  0139DA  18DE               	xorwf	postinc2,w,c
 29178  0139DC  B4D8               	btfsc	status,2,c
 29179  0139DE  D004               	goto	l1244
 29180  0139E0  D001               	goto	l13239
 29181                           
 29182                           ; BSR set to: 1
 29183                           ;RTC.c: 343: {
 29184                           ;RTC.c: 345: }
 29185  0139E2  D002               	goto	l1244
 29186  0139E4                     l13239:
 29187                           
 29188                           ; BSR set to: 1
 29189                           ;RTC.c: 346: else
 29190                           ;RTC.c: 347: {
 29191                           ;RTC.c: 348: return 0;
 29192  0139E4  0E00               	movlw	0
 29193                           
 29194                           ; BSR set to: 1
 29195  0139E6  0012               	return	
 29196  0139E8                     l1244:
 29197                           
 29198                           ; BSR set to: 1
 29199                           ;RTC.c: 349: }
 29200                           ;RTC.c: 350: TempTime.Date = temp;
 29201  0139E8  C17F  F186         	movff	Parse_Time@temp,Parse_Time@TempTime+6
 29202                           
 29203                           ; BSR set to: 1
 29204                           ;RTC.c: 352: if(*This == '/')
 29205  0139EC  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29206  0139F0  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29207  0139F4  0E2F               	movlw	47
 29208  0139F6  18DE               	xorwf	postinc2,w,c
 29209  0139F8  A4D8               	btfss	status,2,c
 29210  0139FA  D004               	goto	l13247
 29211                           
 29212                           ; BSR set to: 1
 29213                           ;RTC.c: 353: {
 29214                           ;RTC.c: 354: This++;
 29215  0139FC  0101               	movlb	1	; () banked
 29216  0139FE  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29217  013A00  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29218                           
 29219                           ;RTC.c: 355: }
 29220  013A02  D002               	goto	l13251
 29221  013A04                     l13247:
 29222                           
 29223                           ; BSR set to: 1
 29224                           ;RTC.c: 356: else
 29225                           ;RTC.c: 357: {
 29226                           ;RTC.c: 358: return 0;
 29227  013A04  0E00               	movlw	0
 29228                           
 29229                           ; BSR set to: 1
 29230  013A06  0012               	return	
 29231  013A08                     l13251:
 29232                           
 29233                           ; BSR set to: 1
 29234                           ;RTC.c: 359: }
 29235                           ;RTC.c: 362: if (*This >= 48 && *This <= 57)
 29236  013A08  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29237  013A0C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29238  013A10  0E2F               	movlw	47
 29239  013A12  64DF               	cpfsgt	indf2,c
 29240  013A14  D013               	goto	l13259
 29241                           
 29242                           ; BSR set to: 1
 29243  013A16  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29244  013A1A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29245  013A1E  0E3A               	movlw	58
 29246  013A20  60DF               	cpfslt	indf2,c
 29247  013A22  D00C               	goto	l13259
 29248                           
 29249                           ; BSR set to: 1
 29250                           ;RTC.c: 363: {
 29251                           ;RTC.c: 364: temp = *This - 48;
 29252  013A24  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29253  013A28  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29254  013A2C  50DF               	movf	indf2,w,c
 29255  013A2E  0FD0               	addlw	208
 29256  013A30  0101               	movlb	1	; () banked
 29257  013A32  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29258                           
 29259                           ; BSR set to: 1
 29260                           ;RTC.c: 365: This++;
 29261  013A34  0101               	movlb	1	; () banked
 29262  013A36  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29263  013A38  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29264                           
 29265                           ;RTC.c: 366: }
 29266  013A3A  D002               	goto	l13263
 29267  013A3C                     l13259:
 29268                           
 29269                           ; BSR set to: 1
 29270                           ;RTC.c: 367: else
 29271                           ;RTC.c: 368: {
 29272                           ;RTC.c: 369: return 0;
 29273  013A3C  0E00               	movlw	0
 29274                           
 29275                           ; BSR set to: 1
 29276  013A3E  0012               	return	
 29277  013A40                     l13263:
 29278                           
 29279                           ; BSR set to: 1
 29280                           ;RTC.c: 370: }
 29281                           ;RTC.c: 371: if (*This >= 48 && *This <= 57)
 29282  013A40  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29283  013A44  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29284  013A48  0E2F               	movlw	47
 29285  013A4A  64DF               	cpfsgt	indf2,c
 29286  013A4C  D018               	goto	l13273
 29287                           
 29288                           ; BSR set to: 1
 29289  013A4E  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29290  013A52  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29291  013A56  0E3A               	movlw	58
 29292  013A58  60DF               	cpfslt	indf2,c
 29293  013A5A  D011               	goto	l13273
 29294                           
 29295                           ; BSR set to: 1
 29296                           ;RTC.c: 372: {
 29297                           ;RTC.c: 373: temp *= 10;
 29298  013A5C  0E0A               	movlw	10
 29299  013A5E  0101               	movlb	1	; () banked
 29300  013A60  037F               	mulwf	Parse_Time@temp& (0+255),b
 29301  013A62  50F3               	movf	prodl,w,c
 29302  013A64  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29303                           
 29304                           ; BSR set to: 1
 29305                           ;RTC.c: 374: temp += *This - 48;
 29306  013A66  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29307  013A6A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29308  013A6E  50DF               	movf	indf2,w,c
 29309  013A70  0FD0               	addlw	208
 29310  013A72  0101               	movlb	1	; () banked
 29311  013A74  277F               	addwf	Parse_Time@temp& (0+255),f,b
 29312                           
 29313                           ; BSR set to: 1
 29314                           ;RTC.c: 375: This++;
 29315  013A76  0101               	movlb	1	; () banked
 29316  013A78  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29317  013A7A  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29318                           
 29319                           ;RTC.c: 376: }
 29320  013A7C  D002               	goto	l1252
 29321  013A7E                     l13273:
 29322                           
 29323                           ; BSR set to: 1
 29324                           ;RTC.c: 377: else
 29325                           ;RTC.c: 378: {
 29326                           ;RTC.c: 379: return 0;
 29327  013A7E  0E00               	movlw	0
 29328                           
 29329                           ; BSR set to: 1
 29330  013A80  0012               	return	
 29331  013A82                     l1252:
 29332                           
 29333                           ; BSR set to: 1
 29334                           ;RTC.c: 380: }
 29335                           ;RTC.c: 381: TempTime.Year = temp;
 29336  013A82  C17F  F188         	movff	Parse_Time@temp,Parse_Time@TempTime+8
 29337                           
 29338                           ; BSR set to: 1
 29339                           ;RTC.c: 383: if(*This == ' ')
 29340  013A86  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29341  013A8A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29342  013A8E  0E20               	movlw	32
 29343  013A90  18DE               	xorwf	postinc2,w,c
 29344  013A92  A4D8               	btfss	status,2,c
 29345  013A94  D004               	goto	l13281
 29346                           
 29347                           ; BSR set to: 1
 29348                           ;RTC.c: 384: {
 29349                           ;RTC.c: 385: This++;
 29350  013A96  0101               	movlb	1	; () banked
 29351  013A98  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29352  013A9A  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29353  013A9C  D000               	goto	l13281
 29354  013A9E                     l13281:
 29355                           
 29356                           ; BSR set to: 1
 29357                           ;RTC.c: 386: }
 29358                           ;RTC.c: 389: if (*This >= 48 && *This <= 57)
 29359  013A9E  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29360  013AA2  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29361  013AA6  0E2F               	movlw	47
 29362  013AA8  64DF               	cpfsgt	indf2,c
 29363  013AAA  D013               	goto	l13289
 29364                           
 29365                           ; BSR set to: 1
 29366  013AAC  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29367  013AB0  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29368  013AB4  0E3A               	movlw	58
 29369  013AB6  60DF               	cpfslt	indf2,c
 29370  013AB8  D00C               	goto	l13289
 29371                           
 29372                           ; BSR set to: 1
 29373                           ;RTC.c: 390: {
 29374                           ;RTC.c: 391: temp = *This - 48;
 29375  013ABA  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29376  013ABE  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29377  013AC2  50DF               	movf	indf2,w,c
 29378  013AC4  0FD0               	addlw	208
 29379  013AC6  0101               	movlb	1	; () banked
 29380  013AC8  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29381                           
 29382                           ; BSR set to: 1
 29383                           ;RTC.c: 392: This++;
 29384  013ACA  0101               	movlb	1	; () banked
 29385  013ACC  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29386  013ACE  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29387                           
 29388                           ;RTC.c: 393: }
 29389  013AD0  D002               	goto	l13293
 29390  013AD2                     l13289:
 29391                           
 29392                           ; BSR set to: 1
 29393                           ;RTC.c: 394: else
 29394                           ;RTC.c: 395: {
 29395                           ;RTC.c: 396: return 0;
 29396  013AD2  0E00               	movlw	0
 29397                           
 29398                           ; BSR set to: 1
 29399  013AD4  0012               	return	
 29400  013AD6                     l13293:
 29401                           
 29402                           ; BSR set to: 1
 29403                           ;RTC.c: 397: }
 29404                           ;RTC.c: 399: if(*This >= 48 && *This <= 57)
 29405  013AD6  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29406  013ADA  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29407  013ADE  0E2F               	movlw	47
 29408  013AE0  64DF               	cpfsgt	indf2,c
 29409  013AE2  D018               	goto	l13303
 29410                           
 29411                           ; BSR set to: 1
 29412  013AE4  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29413  013AE8  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29414  013AEC  0E3A               	movlw	58
 29415  013AEE  60DF               	cpfslt	indf2,c
 29416  013AF0  D011               	goto	l13303
 29417                           
 29418                           ; BSR set to: 1
 29419                           ;RTC.c: 400: {
 29420                           ;RTC.c: 401: temp *= 10;
 29421  013AF2  0E0A               	movlw	10
 29422  013AF4  0101               	movlb	1	; () banked
 29423  013AF6  037F               	mulwf	Parse_Time@temp& (0+255),b
 29424  013AF8  50F3               	movf	prodl,w,c
 29425  013AFA  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29426                           
 29427                           ; BSR set to: 1
 29428                           ;RTC.c: 402: temp += *This - 48;
 29429  013AFC  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29430  013B00  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29431  013B04  50DF               	movf	indf2,w,c
 29432  013B06  0FD0               	addlw	208
 29433  013B08  0101               	movlb	1	; () banked
 29434  013B0A  277F               	addwf	Parse_Time@temp& (0+255),f,b
 29435                           
 29436                           ; BSR set to: 1
 29437                           ;RTC.c: 403: This++;
 29438  013B0C  0101               	movlb	1	; () banked
 29439  013B0E  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29440  013B10  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29441                           
 29442                           ;RTC.c: 404: }
 29443  013B12  D00C               	goto	l1257
 29444  013B14                     l13303:
 29445                           
 29446                           ; BSR set to: 1
 29447                           ;RTC.c: 405: else if(*This == ':')
 29448  013B14  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29449  013B18  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29450  013B1C  0E3A               	movlw	58
 29451  013B1E  18DE               	xorwf	postinc2,w,c
 29452  013B20  B4D8               	btfsc	status,2,c
 29453  013B22  D004               	goto	l1257
 29454  013B24  D001               	goto	l13307
 29455                           
 29456                           ; BSR set to: 1
 29457                           ;RTC.c: 406: {
 29458                           ;RTC.c: 408: }
 29459  013B26  D002               	goto	l1257
 29460  013B28                     l13307:
 29461                           
 29462                           ; BSR set to: 1
 29463                           ;RTC.c: 409: else
 29464                           ;RTC.c: 410: {
 29465                           ;RTC.c: 411: return 0;
 29466  013B28  0E00               	movlw	0
 29467                           
 29468                           ; BSR set to: 1
 29469  013B2A  0012               	return	
 29470  013B2C                     l1257:
 29471                           
 29472                           ; BSR set to: 1
 29473                           ;RTC.c: 412: }
 29474                           ;RTC.c: 413: TempTime.Hours = temp;
 29475  013B2C  C17F  F182         	movff	Parse_Time@temp,Parse_Time@TempTime+2
 29476                           
 29477                           ; BSR set to: 1
 29478                           ;RTC.c: 415: if(*This == ':')
 29479  013B30  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29480  013B34  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29481  013B38  0E3A               	movlw	58
 29482  013B3A  18DE               	xorwf	postinc2,w,c
 29483  013B3C  A4D8               	btfss	status,2,c
 29484  013B3E  D004               	goto	l13315
 29485                           
 29486                           ; BSR set to: 1
 29487                           ;RTC.c: 416: {
 29488                           ;RTC.c: 417: This++;
 29489  013B40  0101               	movlb	1	; () banked
 29490  013B42  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29491  013B44  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29492                           
 29493                           ;RTC.c: 418: }
 29494  013B46  D002               	goto	l13319
 29495  013B48                     l13315:
 29496                           
 29497                           ; BSR set to: 1
 29498                           ;RTC.c: 419: else
 29499                           ;RTC.c: 420: {
 29500                           ;RTC.c: 421: return 0;
 29501  013B48  0E00               	movlw	0
 29502                           
 29503                           ; BSR set to: 1
 29504  013B4A  0012               	return	
 29505  013B4C                     l13319:
 29506                           
 29507                           ; BSR set to: 1
 29508                           ;RTC.c: 422: }
 29509                           ;RTC.c: 425: if (*This >= 48 && *This <= 57)
 29510  013B4C  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29511  013B50  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29512  013B54  0E2F               	movlw	47
 29513  013B56  64DF               	cpfsgt	indf2,c
 29514  013B58  D013               	goto	l13327
 29515                           
 29516                           ; BSR set to: 1
 29517  013B5A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29518  013B5E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29519  013B62  0E3A               	movlw	58
 29520  013B64  60DF               	cpfslt	indf2,c
 29521  013B66  D00C               	goto	l13327
 29522                           
 29523                           ; BSR set to: 1
 29524                           ;RTC.c: 426: {
 29525                           ;RTC.c: 427: temp = *This - 48;
 29526  013B68  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29527  013B6C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29528  013B70  50DF               	movf	indf2,w,c
 29529  013B72  0FD0               	addlw	208
 29530  013B74  0101               	movlb	1	; () banked
 29531  013B76  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29532                           
 29533                           ; BSR set to: 1
 29534                           ;RTC.c: 428: This++;
 29535  013B78  0101               	movlb	1	; () banked
 29536  013B7A  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29537  013B7C  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29538                           
 29539                           ;RTC.c: 429: }
 29540  013B7E  D002               	goto	l13331
 29541  013B80                     l13327:
 29542                           
 29543                           ; BSR set to: 1
 29544                           ;RTC.c: 430: else
 29545                           ;RTC.c: 431: {
 29546                           ;RTC.c: 432: return 0;
 29547  013B80  0E00               	movlw	0
 29548                           
 29549                           ; BSR set to: 1
 29550  013B82  0012               	return	
 29551  013B84                     l13331:
 29552                           
 29553                           ; BSR set to: 1
 29554                           ;RTC.c: 433: }
 29555                           ;RTC.c: 435: if(*This >= 48 && *This <= 57)
 29556  013B84  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29557  013B88  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29558  013B8C  0E2F               	movlw	47
 29559  013B8E  64DF               	cpfsgt	indf2,c
 29560  013B90  D018               	goto	l13341
 29561                           
 29562                           ; BSR set to: 1
 29563  013B92  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29564  013B96  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29565  013B9A  0E3A               	movlw	58
 29566  013B9C  60DF               	cpfslt	indf2,c
 29567  013B9E  D011               	goto	l13341
 29568                           
 29569                           ; BSR set to: 1
 29570                           ;RTC.c: 436: {
 29571                           ;RTC.c: 437: temp *= 10;
 29572  013BA0  0E0A               	movlw	10
 29573  013BA2  0101               	movlb	1	; () banked
 29574  013BA4  037F               	mulwf	Parse_Time@temp& (0+255),b
 29575  013BA6  50F3               	movf	prodl,w,c
 29576  013BA8  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29577                           
 29578                           ; BSR set to: 1
 29579                           ;RTC.c: 438: temp += *This - 48;
 29580  013BAA  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29581  013BAE  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29582  013BB2  50DF               	movf	indf2,w,c
 29583  013BB4  0FD0               	addlw	208
 29584  013BB6  0101               	movlb	1	; () banked
 29585  013BB8  277F               	addwf	Parse_Time@temp& (0+255),f,b
 29586                           
 29587                           ; BSR set to: 1
 29588                           ;RTC.c: 439: This++;
 29589  013BBA  0101               	movlb	1	; () banked
 29590  013BBC  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29591  013BBE  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29592                           
 29593                           ;RTC.c: 440: }
 29594  013BC0  D00C               	goto	l1265
 29595  013BC2                     l13341:
 29596                           
 29597                           ; BSR set to: 1
 29598                           ;RTC.c: 441: else if(*This == ':')
 29599  013BC2  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29600  013BC6  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29601  013BCA  0E3A               	movlw	58
 29602  013BCC  18DE               	xorwf	postinc2,w,c
 29603  013BCE  B4D8               	btfsc	status,2,c
 29604  013BD0  D004               	goto	l1265
 29605  013BD2  D001               	goto	l13345
 29606                           
 29607                           ; BSR set to: 1
 29608                           ;RTC.c: 442: {
 29609                           ;RTC.c: 444: }
 29610  013BD4  D002               	goto	l1265
 29611  013BD6                     l13345:
 29612                           
 29613                           ; BSR set to: 1
 29614                           ;RTC.c: 445: else
 29615                           ;RTC.c: 446: {
 29616                           ;RTC.c: 447: return 0;
 29617  013BD6  0E00               	movlw	0
 29618                           
 29619                           ; BSR set to: 1
 29620  013BD8  0012               	return	
 29621  013BDA                     l1265:
 29622                           
 29623                           ; BSR set to: 1
 29624                           ;RTC.c: 448: }
 29625                           ;RTC.c: 449: TempTime.Minutes = temp;
 29626  013BDA  C17F  F181         	movff	Parse_Time@temp,Parse_Time@TempTime+1
 29627                           
 29628                           ; BSR set to: 1
 29629                           ;RTC.c: 451: if(*This == ':')
 29630  013BDE  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29631  013BE2  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29632  013BE6  0E3A               	movlw	58
 29633  013BE8  18DE               	xorwf	postinc2,w,c
 29634  013BEA  A4D8               	btfss	status,2,c
 29635  013BEC  D004               	goto	l13353
 29636                           
 29637                           ; BSR set to: 1
 29638                           ;RTC.c: 452: {
 29639                           ;RTC.c: 453: This++;
 29640  013BEE  0101               	movlb	1	; () banked
 29641  013BF0  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29642  013BF2  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29643                           
 29644                           ;RTC.c: 454: }
 29645  013BF4  D002               	goto	l13357
 29646  013BF6                     l13353:
 29647                           
 29648                           ; BSR set to: 1
 29649                           ;RTC.c: 455: else
 29650                           ;RTC.c: 456: {
 29651                           ;RTC.c: 457: return 0;
 29652  013BF6  0E00               	movlw	0
 29653                           
 29654                           ; BSR set to: 1
 29655  013BF8  0012               	return	
 29656  013BFA                     l13357:
 29657                           
 29658                           ; BSR set to: 1
 29659                           ;RTC.c: 458: }
 29660                           ;RTC.c: 461: if (*This >= 48 && *This <= 57)
 29661  013BFA  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29662  013BFE  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29663  013C02  0E2F               	movlw	47
 29664  013C04  64DF               	cpfsgt	indf2,c
 29665  013C06  D013               	goto	l13365
 29666                           
 29667                           ; BSR set to: 1
 29668  013C08  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29669  013C0C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29670  013C10  0E3A               	movlw	58
 29671  013C12  60DF               	cpfslt	indf2,c
 29672  013C14  D00C               	goto	l13365
 29673                           
 29674                           ; BSR set to: 1
 29675                           ;RTC.c: 462: {
 29676                           ;RTC.c: 463: temp = *This - 48;
 29677  013C16  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29678  013C1A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29679  013C1E  50DF               	movf	indf2,w,c
 29680  013C20  0FD0               	addlw	208
 29681  013C22  0101               	movlb	1	; () banked
 29682  013C24  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29683                           
 29684                           ; BSR set to: 1
 29685                           ;RTC.c: 464: This++;
 29686  013C26  0101               	movlb	1	; () banked
 29687  013C28  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29688  013C2A  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29689                           
 29690                           ;RTC.c: 465: }
 29691  013C2C  D002               	goto	l13369
 29692  013C2E                     l13365:
 29693                           
 29694                           ; BSR set to: 1
 29695                           ;RTC.c: 466: else
 29696                           ;RTC.c: 467: {
 29697                           ;RTC.c: 468: return 0;
 29698  013C2E  0E00               	movlw	0
 29699                           
 29700                           ; BSR set to: 1
 29701  013C30  0012               	return	
 29702  013C32                     l13369:
 29703                           
 29704                           ; BSR set to: 1
 29705                           ;RTC.c: 469: }
 29706                           ;RTC.c: 470: if (*This >= 48 && *This <= 57)
 29707  013C32  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29708  013C36  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29709  013C3A  0E2F               	movlw	47
 29710  013C3C  64DF               	cpfsgt	indf2,c
 29711  013C3E  D018               	goto	l13379
 29712                           
 29713                           ; BSR set to: 1
 29714  013C40  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29715  013C44  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29716  013C48  0E3A               	movlw	58
 29717  013C4A  60DF               	cpfslt	indf2,c
 29718  013C4C  D011               	goto	l13379
 29719                           
 29720                           ; BSR set to: 1
 29721                           ;RTC.c: 471: {
 29722                           ;RTC.c: 472: temp *= 10;
 29723  013C4E  0E0A               	movlw	10
 29724  013C50  0101               	movlb	1	; () banked
 29725  013C52  037F               	mulwf	Parse_Time@temp& (0+255),b
 29726  013C54  50F3               	movf	prodl,w,c
 29727  013C56  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29728                           
 29729                           ; BSR set to: 1
 29730                           ;RTC.c: 473: temp += *This - 48;
 29731  013C58  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29732  013C5C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29733  013C60  50DF               	movf	indf2,w,c
 29734  013C62  0FD0               	addlw	208
 29735  013C64  0101               	movlb	1	; () banked
 29736  013C66  277F               	addwf	Parse_Time@temp& (0+255),f,b
 29737                           
 29738                           ; BSR set to: 1
 29739                           ;RTC.c: 474: This++;
 29740  013C68  0101               	movlb	1	; () banked
 29741  013C6A  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29742  013C6C  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29743                           
 29744                           ;RTC.c: 475: }
 29745  013C6E  D002               	goto	l1273
 29746  013C70                     l13379:
 29747                           
 29748                           ; BSR set to: 1
 29749                           ;RTC.c: 476: else
 29750                           ;RTC.c: 477: {
 29751                           ;RTC.c: 478: return 0;
 29752  013C70  0E00               	movlw	0
 29753                           
 29754                           ; BSR set to: 1
 29755  013C72  0012               	return	
 29756  013C74                     l1273:
 29757                           
 29758                           ; BSR set to: 1
 29759                           ;RTC.c: 479: }
 29760                           ;RTC.c: 480: TempTime.Seconds = temp;
 29761  013C74  C17F  F180         	movff	Parse_Time@temp,Parse_Time@TempTime
 29762                           
 29763                           ; BSR set to: 1
 29764                           ;RTC.c: 482: if(*This == ' ')
 29765  013C78  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29766  013C7C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29767  013C80  0E20               	movlw	32
 29768  013C82  18DE               	xorwf	postinc2,w,c
 29769  013C84  A4D8               	btfss	status,2,c
 29770  013C86  D004               	goto	l13387
 29771                           
 29772                           ; BSR set to: 1
 29773                           ;RTC.c: 483: {
 29774                           ;RTC.c: 484: This++;
 29775  013C88  0101               	movlb	1	; () banked
 29776  013C8A  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29777  013C8C  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29778  013C8E  D000               	goto	l13387
 29779  013C90                     l13387:
 29780                           
 29781                           ; BSR set to: 1
 29782                           ;RTC.c: 485: }
 29783                           ;RTC.c: 486: if(*This == 'a')
 29784  013C90  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29785  013C94  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29786  013C98  0E61               	movlw	97
 29787  013C9A  18DE               	xorwf	postinc2,w,c
 29788  013C9C  A4D8               	btfss	status,2,c
 29789  013C9E  D010               	goto	l13399
 29790                           
 29791                           ; BSR set to: 1
 29792                           ;RTC.c: 487: {
 29793                           ;RTC.c: 488: This++;
 29794  013CA0  0101               	movlb	1	; () banked
 29795  013CA2  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29796  013CA4  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29797                           
 29798                           ; BSR set to: 1
 29799                           ;RTC.c: 489: if(*This == 'm')
 29800  013CA6  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29801  013CAA  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29802  013CAE  0E6D               	movlw	109
 29803  013CB0  18DE               	xorwf	postinc2,w,c
 29804  013CB2  A4D8               	btfss	status,2,c
 29805  013CB4  D002               	goto	l13395
 29806                           
 29807                           ; BSR set to: 1
 29808                           ;RTC.c: 490: {
 29809                           ;RTC.c: 491: TempTime.HoursAM_PM = 0;
 29810  013CB6  0E00               	movlw	0
 29811  013CB8  D017               	goto	L25
 29812  013CBA                     l13395:
 29813                           
 29814                           ; BSR set to: 1
 29815                           ;RTC.c: 493: else
 29816                           ;RTC.c: 494: {
 29817                           ;RTC.c: 495: return 0;
 29818  013CBA  0E00               	movlw	0
 29819                           
 29820                           ; BSR set to: 1
 29821  013CBC  0012               	return	
 29822                           
 29823                           ; BSR set to: 1
 29824                           ;RTC.c: 496: }
 29825                           ;RTC.c: 497: }
 29826  013CBE  D01D               	goto	l13415
 29827  013CC0                     l13399:
 29828                           
 29829                           ; BSR set to: 1
 29830                           ;RTC.c: 498: else if(*This == 'p')
 29831  013CC0  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29832  013CC4  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29833  013CC8  0E70               	movlw	112
 29834  013CCA  18DE               	xorwf	postinc2,w,c
 29835  013CCC  A4D8               	btfss	status,2,c
 29836  013CCE  D7F5               	goto	l13395
 29837                           
 29838                           ; BSR set to: 1
 29839                           ;RTC.c: 499: {
 29840                           ;RTC.c: 500: This++;
 29841  013CD0  0101               	movlb	1	; () banked
 29842  013CD2  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29843  013CD4  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29844                           
 29845                           ; BSR set to: 1
 29846                           ;RTC.c: 501: if(*This == 'm')
 29847  013CD6  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29848  013CDA  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29849  013CDE  0E6D               	movlw	109
 29850  013CE0  18DE               	xorwf	postinc2,w,c
 29851  013CE2  A4D8               	btfss	status,2,c
 29852  013CE4  D7EA               	goto	l13395
 29853                           
 29854                           ; BSR set to: 1
 29855                           ;RTC.c: 502: {
 29856                           ;RTC.c: 503: TempTime.HoursAM_PM = 1;
 29857  013CE6  0E01               	movlw	1
 29858  013CE8                     L25:
 29859  013CE8  0101               	movlb	1	; () banked
 29860  013CEA  6F84               	movwf	(Parse_Time@TempTime+4)& (0+255),b
 29861                           
 29862                           ;RTC.c: 504: }
 29863  013CEC  D006               	goto	l13415
 29864                           
 29865                           ; BSR set to: 1
 29866  013CEE  D7E5               	goto	l13395
 29867                           
 29868                           ; BSR set to: 1
 29869                           
 29870                           ; BSR set to: 1
 29871                           ;RTC.c: 505: else
 29872                           ;RTC.c: 506: {
 29873                           ;RTC.c: 507: return 0;
 29874  013CF0  0012               	return	
 29875                           
 29876                           ; BSR set to: 1
 29877                           ;RTC.c: 508: }
 29878                           ;RTC.c: 509: }
 29879  013CF2  D003               	goto	l13415
 29880                           
 29881                           ; BSR set to: 1
 29882  013CF4  D7E2               	goto	l13395
 29883                           
 29884                           ; BSR set to: 1
 29885                           
 29886                           ; BSR set to: 1
 29887                           ;RTC.c: 510: else
 29888                           ;RTC.c: 511: {
 29889                           ;RTC.c: 512: return 0;
 29890  013CF6  0012               	return	
 29891                           
 29892                           ; BSR set to: 1
 29893  013CF8  D000               	goto	l13415
 29894  013CFA                     l13415:
 29895                           
 29896                           ; BSR set to: 1
 29897                           ;RTC.c: 513: }
 29898                           ;RTC.c: 514: if(TempTime.Month > 12 || TempTime.Date > 31 || TempTime.Year > 99 || TempT
      +                          ime.Hours > 12 || TempTime.Minutes > 59 || TempTime.Seconds > 59)
 29899  013CFA  0E0D               	movlw	13
 29900  013CFC  0101               	movlb	1	; () banked
 29901  013CFE  6187               	cpfslt	(Parse_Time@TempTime+7)& (0+255),b
 29902  013D00  D015               	goto	l13427
 29903                           
 29904                           ; BSR set to: 1
 29905  013D02  0E20               	movlw	32
 29906  013D04  0101               	movlb	1	; () banked
 29907  013D06  6186               	cpfslt	(Parse_Time@TempTime+6)& (0+255),b
 29908  013D08  D011               	goto	l13427
 29909                           
 29910                           ; BSR set to: 1
 29911  013D0A  0E64               	movlw	100
 29912  013D0C  0101               	movlb	1	; () banked
 29913  013D0E  6188               	cpfslt	(Parse_Time@TempTime+8)& (0+255),b
 29914  013D10  D00D               	goto	l13427
 29915                           
 29916                           ; BSR set to: 1
 29917  013D12  0E0D               	movlw	13
 29918  013D14  0101               	movlb	1	; () banked
 29919  013D16  6182               	cpfslt	(Parse_Time@TempTime+2)& (0+255),b
 29920  013D18  D009               	goto	l13427
 29921                           
 29922                           ; BSR set to: 1
 29923  013D1A  0E3C               	movlw	60
 29924  013D1C  0101               	movlb	1	; () banked
 29925  013D1E  6181               	cpfslt	(Parse_Time@TempTime+1)& (0+255),b
 29926  013D20  D005               	goto	l13427
 29927                           
 29928                           ; BSR set to: 1
 29929  013D22  0E3B               	movlw	59
 29930  013D24  0101               	movlb	1	; () banked
 29931  013D26  6580               	cpfsgt	Parse_Time@TempTime& (0+255),b
 29932  013D28  D003               	goto	l1283
 29933  013D2A  D000               	goto	l13427
 29934  013D2C                     l13427:
 29935                           
 29936                           ; BSR set to: 1
 29937                           ;RTC.c: 515: {
 29938                           ;RTC.c: 516: return 0;
 29939  013D2C  0E00               	movlw	0
 29940                           
 29941                           ; BSR set to: 1
 29942                           ;RTC.c: 517: }
 29943                           
 29944                           ; BSR set to: 1
 29945  013D2E  0012               	return	
 29946  013D30                     l1283:
 29947                           
 29948                           ; BSR set to: 1
 29949                           ;RTC.c: 518: else
 29950                           ;RTC.c: 519: {
 29951                           ;RTC.c: 520: NowTime.Month = TempTime.Month;
 29952  013D30  C187  F107         	movff	Parse_Time@TempTime+7,_NowTime+7
 29953                           
 29954                           ;RTC.c: 521: NowTime.Date = TempTime.Date;
 29955  013D34  C186  F106         	movff	Parse_Time@TempTime+6,_NowTime+6
 29956                           
 29957                           ;RTC.c: 522: NowTime.Year= TempTime.Year;
 29958  013D38  C188  F108         	movff	Parse_Time@TempTime+8,_NowTime+8
 29959                           
 29960                           ;RTC.c: 523: NowTime.Hours = TempTime.Hours;
 29961  013D3C  C182  F102         	movff	Parse_Time@TempTime+2,_NowTime+2
 29962                           
 29963                           ;RTC.c: 524: NowTime.Minutes = TempTime.Minutes;
 29964  013D40  C181  F101         	movff	Parse_Time@TempTime+1,_NowTime+1
 29965                           
 29966                           ;RTC.c: 525: NowTime.Seconds= TempTime.Seconds;
 29967  013D44  C180  F100         	movff	Parse_Time@TempTime,_NowTime
 29968                           
 29969                           ;RTC.c: 526: NowTime.HoursAM_PM = TempTime.HoursAM_PM;
 29970  013D48  C184  F104         	movff	Parse_Time@TempTime+4,_NowTime+4
 29971                           
 29972                           ; BSR set to: 1
 29973                           ;RTC.c: 527: return 1;
 29974  013D4C  0E01               	movlw	1
 29975                           
 29976                           ; BSR set to: 1
 29977  013D4E  0012               	return	
 29978                           
 29979                           ; BSR set to: 1
 29980                           
 29981                           ; BSR set to: 1
 29982  013D50  0012               	return		;funcret
 29983  013D52                     __end_of_Parse_Time:
 29984                           	opt stack 0
 29985                           tblptru	equ	0xFF8
 29986                           tblptrh	equ	0xFF7
 29987                           tblptrl	equ	0xFF6
 29988                           tablat	equ	0xFF5
 29989                           prodh	equ	0xFF4
 29990                           prodl	equ	0xFF3
 29991                           intcon	equ	0xFF2
 29992                           intcon2	equ	0xFF1
 29993                           postinc0	equ	0xFEE
 29994                           plusw0	equ	0xFEB
 29995                           wreg	equ	0xFE8
 29996                           indf1	equ	0xFE7
 29997                           postdec1	equ	0xFE5
 29998                           fsr1h	equ	0xFE2
 29999                           fsr1l	equ	0xFE1
 30000                           indf2	equ	0xFDF
 30001                           postinc2	equ	0xFDE
 30002                           postdec2	equ	0xFDD
 30003                           plusw2	equ	0xFDB
 30004                           fsr2h	equ	0xFDA
 30005                           fsr2l	equ	0xFD9
 30006                           status	equ	0xFD8
 30007                           
 30008 ;; *************** function _LCDdisplayFeedback *****************
 30009 ;; Defined at:
 30010 ;;		line 253 in file "LCD.c"
 30011 ;; Parameters:    Size  Location     Type
 30012 ;;  Text            2   32[BANK1 ] PTR const unsigned char 
 30013 ;;		 -> STR_318(16), STR_316(16), STR_262(16), STR_260(16), 
 30014 ;;		 -> STR_257(15), STR_205(16), STR_203(16), STR_201(13), 
 30015 ;;		 -> STR_188(14), STR_186(16), STR_184(15), STR_173(16), 
 30016 ;;		 -> Command@buf(200), STR_169(14), STR_167(16), STR_165(15), 
 30017 ;;		 -> STR_147(13), STR_145(15), STR_141(14), STR_137(16), 
 30018 ;;		 -> STR_124(16), STR_116(16), STR_114(16), STR_111(15), 
 30019 ;;		 -> STR_108(15), STR_105(14), STR_102(16), STR_90(16), 
 30020 ;;		 -> STR_83(16), STR_81(15), STR_78(14), STR_75(16), 
 30021 ;;		 -> STR_59(12), STR_57(9), STR_54(8), STR_51(13), 
 30022 ;;		 -> STR_48(9), STR_45(8), STR_42(13), 
 30023 ;; Auto vars:     Size  Location     Type
 30024 ;;		None
 30025 ;; Return value:  Size  Location     Type
 30026 ;;		None               void
 30027 ;; Registers used:
 30028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30029 ;; Tracked objects:
 30030 ;;		On entry : 0/0
 30031 ;;		On exit  : 0/0
 30032 ;;		Unchanged: 0/0
 30033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30034 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30037 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30038 ;;Total ram usage:        2 bytes
 30039 ;; Hardware stack levels used:    1
 30040 ;; Hardware stack levels required when called:   10
 30041 ;; This function calls:
 30042 ;;		_ClearLCD
 30043 ;;		_LCDPrintString
 30044 ;;		_SetLCDcursor
 30045 ;; This function is called by:
 30046 ;;		_Command
 30047 ;; This function uses a non-reentrant model
 30048 ;;
 30049                           
 30050                           	psect	text77
 30051  017BB0                     __ptext77:
 30052                           	opt stack 0
 30053  017BB0                     _LCDdisplayFeedback:
 30054                           	opt stack 19
 30055                           
 30056                           ;LCD.c: 255: ClearLCD();
 30057                           
 30058                           ; BSR set to: 1
 30059                           ;incstack = 0
 30060  017BB0  EC37  F0BF         	call	_ClearLCD	;wreg free
 30061                           
 30062                           ;LCD.c: 256: SetLCDcursor(1, 0);
 30063  017BB4  0E00               	movlw	0
 30064  017BB6  0101               	movlb	1	; () banked
 30065  017BB8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 30066  017BBA  0E01               	movlw	1
 30067  017BBC  EC60  F0BD         	call	_SetLCDcursor
 30068                           
 30069                           ;LCD.c: 257: LCDPrintString(Text);
 30070  017BC0  C18E  F18A         	movff	LCDdisplayFeedback@Text,LCDPrintString@Text
 30071  017BC4  C18F  F18B         	movff	LCDdisplayFeedback@Text+1,LCDPrintString@Text+1
 30072  017BC8  ECA7  F0B8         	call	_LCDPrintString	;wreg free
 30073                           
 30074                           ;LCD.c: 258: LCDwait = 1;
 30075  017BCC  0E01               	movlw	1
 30076  017BCE  0101               	movlb	1	; () banked
 30077  017BD0  6F09               	movwf	_LCDwait& (0+255),b
 30078                           
 30079                           ; BSR set to: 1
 30080                           ;LCD.c: 259: LCDclearCount =0;
 30081  017BD2  0E00               	movlw	0
 30082  017BD4  0101               	movlb	1	; () banked
 30083  017BD6  6FD7               	movwf	_LCDclearCount& (0+255),b
 30084  017BD8  0E00               	movlw	0
 30085  017BDA  6FD8               	movwf	(_LCDclearCount+1)& (0+255),b
 30086  017BDC  0E00               	movlw	0
 30087  017BDE  6FD9               	movwf	(_LCDclearCount+2)& (0+255),b
 30088  017BE0  0E00               	movlw	0
 30089  017BE2  6FDA               	movwf	(_LCDclearCount+3)& (0+255),b
 30090                           
 30091                           ; BSR set to: 1
 30092  017BE4  0012               	return		;funcret
 30093  017BE6                     __end_of_LCDdisplayFeedback:
 30094                           	opt stack 0
 30095                           tblptru	equ	0xFF8
 30096                           tblptrh	equ	0xFF7
 30097                           tblptrl	equ	0xFF6
 30098                           tablat	equ	0xFF5
 30099                           prodh	equ	0xFF4
 30100                           prodl	equ	0xFF3
 30101                           intcon	equ	0xFF2
 30102                           intcon2	equ	0xFF1
 30103                           postinc0	equ	0xFEE
 30104                           plusw0	equ	0xFEB
 30105                           wreg	equ	0xFE8
 30106                           indf1	equ	0xFE7
 30107                           postdec1	equ	0xFE5
 30108                           fsr1h	equ	0xFE2
 30109                           fsr1l	equ	0xFE1
 30110                           indf2	equ	0xFDF
 30111                           postinc2	equ	0xFDE
 30112                           postdec2	equ	0xFDD
 30113                           plusw2	equ	0xFDB
 30114                           fsr2h	equ	0xFDA
 30115                           fsr2l	equ	0xFD9
 30116                           status	equ	0xFD8
 30117                           
 30118 ;; *************** function _SetLCDcursor *****************
 30119 ;; Defined at:
 30120 ;;		line 193 in file "LCD.c"
 30121 ;; Parameters:    Size  Location     Type
 30122 ;;  Row             1    wreg     unsigned char 
 30123 ;;  Col             1   28[BANK1 ] unsigned char 
 30124 ;; Auto vars:     Size  Location     Type
 30125 ;;  Row             1   29[BANK1 ] unsigned char 
 30126 ;;  address         1   30[BANK1 ] unsigned char 
 30127 ;; Return value:  Size  Location     Type
 30128 ;;		None               void
 30129 ;; Registers used:
 30130 ;;		wreg, status,2, status,0, cstack
 30131 ;; Tracked objects:
 30132 ;;		On entry : 0/0
 30133 ;;		On exit  : 0/0
 30134 ;;		Unchanged: 0/0
 30135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30136 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30137 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30139 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 30140 ;;Total ram usage:        3 bytes
 30141 ;; Hardware stack levels used:    1
 30142 ;; Hardware stack levels required when called:    9
 30143 ;; This function calls:
 30144 ;;		_SendLCDbyte
 30145 ;; This function is called by:
 30146 ;;		_main
 30147 ;;		_Command
 30148 ;;		_LCDdisplayFeedback
 30149 ;;		_LCDScreenUpdate
 30150 ;; This function uses a non-reentrant model
 30151 ;;
 30152                           
 30153                           	psect	text78
 30154  017AC0                     __ptext78:
 30155                           	opt stack 0
 30156  017AC0                     _SetLCDcursor:
 30157                           	opt stack 21
 30158                           
 30159                           ; BSR set to: 1
 30160                           ;incstack = 0
 30161                           ;SetLCDcursor@Row stored from wreg
 30162  017AC0  0101               	movlb	1	; () banked
 30163  017AC2  6F8B               	movwf	SetLCDcursor@Row& (0+255),b
 30164                           
 30165                           ; BSR set to: 1
 30166                           ;LCD.c: 195: char address;
 30167                           ;LCD.c: 198: if (Row == 0)
 30168  017AC4  0101               	movlb	1	; () banked
 30169  017AC6  518B               	movf	SetLCDcursor@Row& (0+255),w,b
 30170  017AC8  0101               	movlb	1	; () banked
 30171  017ACA  A4D8               	btfss	status,2,c
 30172  017ACC  D002               	goto	l11659
 30173                           
 30174                           ; BSR set to: 1
 30175                           ;LCD.c: 199: {
 30176                           ;LCD.c: 200: address = 0;
 30177  017ACE  0E00               	movlw	0
 30178  017AD0  D001               	goto	L26
 30179  017AD2                     l11659:
 30180                           
 30181                           ; BSR set to: 1
 30182                           ;LCD.c: 202: else
 30183                           ;LCD.c: 203: {
 30184                           ;LCD.c: 204: address = 0x40;
 30185  017AD2  0E40               	movlw	64
 30186  017AD4                     L26:
 30187  017AD4  0101               	movlb	1	; () banked
 30188  017AD6  6F8C               	movwf	SetLCDcursor@address& (0+255),b
 30189  017AD8  D000               	goto	l11661
 30190  017ADA                     l11661:
 30191                           
 30192                           ; BSR set to: 1
 30193                           ;LCD.c: 205: }
 30194                           ;LCD.c: 207: address |= Col;
 30195  017ADA  0101               	movlb	1	; () banked
 30196  017ADC  518A               	movf	SetLCDcursor@Col& (0+255),w,b
 30197  017ADE  0101               	movlb	1	; () banked
 30198  017AE0  138C               	iorwf	SetLCDcursor@address& (0+255),f,b
 30199                           
 30200                           ; BSR set to: 1
 30201                           ;LCD.c: 208: if(!LCDwait)
 30202  017AE2  0101               	movlb	1	; () banked
 30203  017AE4  5109               	movf	_LCDwait& (0+255),w,b
 30204  017AE6  A4D8               	btfss	status,2,c
 30205  017AE8  0012               	return	
 30206                           
 30207                           ; BSR set to: 1
 30208                           ;LCD.c: 209: {
 30209                           ;LCD.c: 210: SendLCDbyte(0x80 | address, 0);
 30210  017AEA  0E00               	movlw	0
 30211  017AEC  0101               	movlb	1	; () banked
 30212  017AEE  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 30213  017AF0  0101               	movlb	1	; () banked
 30214  017AF2  518C               	movf	SetLCDcursor@address& (0+255),w,b
 30215  017AF4  0980               	iorlw	128
 30216  017AF6  ECC3  F0AE         	call	_SendLCDbyte
 30217  017AFA  0012               	return	
 30218  017AFC  0012               	return		;funcret
 30219  017AFE                     __end_of_SetLCDcursor:
 30220                           	opt stack 0
 30221                           tblptru	equ	0xFF8
 30222                           tblptrh	equ	0xFF7
 30223                           tblptrl	equ	0xFF6
 30224                           tablat	equ	0xFF5
 30225                           prodh	equ	0xFF4
 30226                           prodl	equ	0xFF3
 30227                           intcon	equ	0xFF2
 30228                           intcon2	equ	0xFF1
 30229                           postinc0	equ	0xFEE
 30230                           plusw0	equ	0xFEB
 30231                           wreg	equ	0xFE8
 30232                           indf1	equ	0xFE7
 30233                           postdec1	equ	0xFE5
 30234                           fsr1h	equ	0xFE2
 30235                           fsr1l	equ	0xFE1
 30236                           indf2	equ	0xFDF
 30237                           postinc2	equ	0xFDE
 30238                           postdec2	equ	0xFDD
 30239                           plusw2	equ	0xFDB
 30240                           fsr2h	equ	0xFDA
 30241                           fsr2l	equ	0xFD9
 30242                           status	equ	0xFD8
 30243                           
 30244 ;; *************** function _LCDPrintString *****************
 30245 ;; Defined at:
 30246 ;;		line 234 in file "LCD.c"
 30247 ;; Parameters:    Size  Location     Type
 30248 ;;  Text            2   28[BANK1 ] PTR const unsigned char 
 30249 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 30250 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 30251 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 30252 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 30253 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 30254 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 30255 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 30256 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 30257 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 30258 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 30259 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 30260 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 30261 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 30262 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 30263 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 30264 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 30265 ;;		 -> low_isr@LCD_TEMP(16), 
 30266 ;; Auto vars:     Size  Location     Type
 30267 ;;  c               2   30[BANK1 ] PTR unsigned char 
 30268 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 30269 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 30270 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 30271 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 30272 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 30273 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 30274 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 30275 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 30276 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 30277 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 30278 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 30279 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 30280 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 30281 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 30282 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 30283 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 30284 ;;		 -> low_isr@LCD_TEMP(16), 
 30285 ;; Return value:  Size  Location     Type
 30286 ;;		None               void
 30287 ;; Registers used:
 30288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30289 ;; Tracked objects:
 30290 ;;		On entry : 0/0
 30291 ;;		On exit  : 0/0
 30292 ;;		Unchanged: 0/0
 30293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30294 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30295 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30297 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 30298 ;;Total ram usage:        4 bytes
 30299 ;; Hardware stack levels used:    1
 30300 ;; Hardware stack levels required when called:    9
 30301 ;; This function calls:
 30302 ;;		_SendLCDbyte
 30303 ;; This function is called by:
 30304 ;;		_main
 30305 ;;		_Command
 30306 ;;		_LCDdisplayFeedback
 30307 ;;		_LCDScreenUpdate
 30308 ;; This function uses a non-reentrant model
 30309 ;;
 30310                           
 30311                           	psect	text79
 30312  01714E                     __ptext79:
 30313                           	opt stack 0
 30314  01714E                     _LCDPrintString:
 30315                           	opt stack 20
 30316                           
 30317                           ;LCD.c: 236: unsigned char *c;
 30318                           ;LCD.c: 238: c = (unsigned char*)Text;
 30319                           
 30320                           ;incstack = 0
 30321  01714E  C18A  F18C         	movff	LCDPrintString@Text,LCDPrintString@c
 30322  017152  C18B  F18D         	movff	LCDPrintString@Text+1,LCDPrintString@c+1
 30323                           
 30324                           ;LCD.c: 240: while ((c != 0) && (*c != 0))
 30325  017156  D01A               	goto	l11673
 30326  017158                     l11669:
 30327                           
 30328                           ;LCD.c: 241: {
 30329                           ;LCD.c: 242: SendLCDbyte(*c, 1);
 30330  017158  0E01               	movlw	1
 30331  01715A  0101               	movlb	1	; () banked
 30332  01715C  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 30333  01715E  C18C  FFF6         	movff	LCDPrintString@c,tblptrl
 30334  017162  C18D  FFF7         	movff	LCDPrintString@c+1,tblptrh
 30335  017166  0E00               	movlw	low (__mediumconst shr (0+16))
 30336  017168  6EF8               	movwf	tblptru,c
 30337  01716A  0E0C               	movlw	(high __ramtop+-1)
 30338  01716C  64F7               	cpfsgt	tblptrh,c
 30339  01716E  D003               	bra	u14647
 30340  017170  0008               	tblrd		*
 30341  017172  50F5               	movf	tablat,w,c
 30342  017174  D005               	bra	u14640
 30343  017176                     u14647:
 30344  017176  CFF6 FFE9          	movff	tblptrl,fsr0l
 30345  01717A  CFF7 FFEA          	movff	tblptrh,fsr0h
 30346  01717E  50EF               	movf	indf0,w,c
 30347  017180                     u14640:
 30348  017180  ECC3  F0AE         	call	_SendLCDbyte
 30349                           
 30350                           ;LCD.c: 243: c++;
 30351  017184  0101               	movlb	1	; () banked
 30352  017186  4B8C               	infsnz	LCDPrintString@c& (0+255),f,b
 30353  017188  2B8D               	incf	(LCDPrintString@c+1)& (0+255),f,b
 30354  01718A  D000               	goto	l11673
 30355  01718C                     l11673:
 30356  01718C  0101               	movlb	1	; () banked
 30357  01718E  518C               	movf	LCDPrintString@c& (0+255),w,b
 30358  017190  0101               	movlb	1	; () banked
 30359  017192  118D               	iorwf	(LCDPrintString@c+1)& (0+255),w,b
 30360  017194  B4D8               	btfsc	status,2,c
 30361  017196  0012               	return	
 30362                           
 30363                           ; BSR set to: 1
 30364  017198  C18C  FFF6         	movff	LCDPrintString@c,tblptrl
 30365  01719C  C18D  FFF7         	movff	LCDPrintString@c+1,tblptrh
 30366  0171A0  0E00               	movlw	low (__mediumconst shr (0+16))
 30367  0171A2  6EF8               	movwf	tblptru,c
 30368  0171A4  0E0C               	movlw	(high __ramtop+-1)
 30369  0171A6  64F7               	cpfsgt	tblptrh,c
 30370  0171A8  D003               	bra	u14667
 30371  0171AA  0008               	tblrd		*
 30372  0171AC  50F5               	movf	tablat,w,c
 30373  0171AE  D005               	bra	u14660
 30374  0171B0                     u14667:
 30375  0171B0  CFF6 FFE9          	movff	tblptrl,fsr0l
 30376  0171B4  CFF7 FFEA          	movff	tblptrh,fsr0h
 30377  0171B8  50EF               	movf	indf0,w,c
 30378  0171BA                     u14660:
 30379  0171BA  0900               	iorlw	0
 30380  0171BC  B4D8               	btfsc	status,2,c
 30381  0171BE  0012               	return	
 30382  0171C0  D7CB               	goto	l11669
 30383  0171C2  0012               	return	
 30384  0171C4  0012               	return		;funcret
 30385  0171C6                     __end_of_LCDPrintString:
 30386                           	opt stack 0
 30387                           tblptru	equ	0xFF8
 30388                           tblptrh	equ	0xFF7
 30389                           tblptrl	equ	0xFF6
 30390                           tablat	equ	0xFF5
 30391                           prodh	equ	0xFF4
 30392                           prodl	equ	0xFF3
 30393                           intcon	equ	0xFF2
 30394                           intcon2	equ	0xFF1
 30395                           indf0	equ	0xFEF
 30396                           postinc0	equ	0xFEE
 30397                           plusw0	equ	0xFEB
 30398                           fsr0h	equ	0xFEA
 30399                           fsr0l	equ	0xFE9
 30400                           wreg	equ	0xFE8
 30401                           indf1	equ	0xFE7
 30402                           postdec1	equ	0xFE5
 30403                           fsr1h	equ	0xFE2
 30404                           fsr1l	equ	0xFE1
 30405                           indf2	equ	0xFDF
 30406                           postinc2	equ	0xFDE
 30407                           postdec2	equ	0xFDD
 30408                           plusw2	equ	0xFDB
 30409                           fsr2h	equ	0xFDA
 30410                           fsr2l	equ	0xFD9
 30411                           status	equ	0xFD8
 30412                           
 30413 ;; *************** function _ClearLCD *****************
 30414 ;; Defined at:
 30415 ;;		line 220 in file "LCD.c"
 30416 ;; Parameters:    Size  Location     Type
 30417 ;;		None
 30418 ;; Auto vars:     Size  Location     Type
 30419 ;;		None
 30420 ;; Return value:  Size  Location     Type
 30421 ;;		None               void
 30422 ;; Registers used:
 30423 ;;		wreg, status,2, status,0, cstack
 30424 ;; Tracked objects:
 30425 ;;		On entry : 0/0
 30426 ;;		On exit  : 0/0
 30427 ;;		Unchanged: 0/0
 30428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30433 ;;Total ram usage:        0 bytes
 30434 ;; Hardware stack levels used:    1
 30435 ;; Hardware stack levels required when called:    9
 30436 ;; This function calls:
 30437 ;;		_SendLCDbyte
 30438 ;; This function is called by:
 30439 ;;		_main
 30440 ;;		_init_LCD
 30441 ;;		_LCDdisplayFeedback
 30442 ;;		_LCDScreenUpdate
 30443 ;; This function uses a non-reentrant model
 30444 ;;
 30445                           
 30446                           	psect	text80
 30447  017E6E                     __ptext80:
 30448                           	opt stack 0
 30449  017E6E                     _ClearLCD:
 30450                           	opt stack 20
 30451                           
 30452                           ;LCD.c: 225: SendLCDbyte(0x01, 0);
 30453                           
 30454                           ;incstack = 0
 30455  017E6E  0E00               	movlw	0
 30456  017E70  0101               	movlb	1	; () banked
 30457  017E72  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 30458  017E74  0E01               	movlw	1
 30459  017E76  ECC3  F0AE         	call	_SendLCDbyte
 30460                           
 30461                           ;LCD.c: 226: SendLCDbyte(0x02, 0);
 30462  017E7A  0E00               	movlw	0
 30463  017E7C  0101               	movlb	1	; () banked
 30464  017E7E  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 30465  017E80  0E02               	movlw	2
 30466  017E82  ECC3  F0AE         	call	_SendLCDbyte
 30467  017E86  0012               	return		;funcret
 30468  017E88                     __end_of_ClearLCD:
 30469                           	opt stack 0
 30470                           tblptru	equ	0xFF8
 30471                           tblptrh	equ	0xFF7
 30472                           tblptrl	equ	0xFF6
 30473                           tablat	equ	0xFF5
 30474                           prodh	equ	0xFF4
 30475                           prodl	equ	0xFF3
 30476                           intcon	equ	0xFF2
 30477                           intcon2	equ	0xFF1
 30478                           indf0	equ	0xFEF
 30479                           postinc0	equ	0xFEE
 30480                           plusw0	equ	0xFEB
 30481                           fsr0h	equ	0xFEA
 30482                           fsr0l	equ	0xFE9
 30483                           wreg	equ	0xFE8
 30484                           indf1	equ	0xFE7
 30485                           postdec1	equ	0xFE5
 30486                           fsr1h	equ	0xFE2
 30487                           fsr1l	equ	0xFE1
 30488                           indf2	equ	0xFDF
 30489                           postinc2	equ	0xFDE
 30490                           postdec2	equ	0xFDD
 30491                           plusw2	equ	0xFDB
 30492                           fsr2h	equ	0xFDA
 30493                           fsr2l	equ	0xFD9
 30494                           status	equ	0xFD8
 30495                           
 30496 ;; *************** function _SendLCDbyte *****************
 30497 ;; Defined at:
 30498 ;;		line 107 in file "LCD.c"
 30499 ;; Parameters:    Size  Location     Type
 30500 ;;  data            1    wreg     unsigned char 
 30501 ;;  isCommand       1   24[BANK1 ] unsigned char 
 30502 ;; Auto vars:     Size  Location     Type
 30503 ;;  data            1   25[BANK1 ] unsigned char 
 30504 ;;  LSB_nibble      1   27[BANK1 ] unsigned char 
 30505 ;;  MSB_nibble      1   26[BANK1 ] unsigned char 
 30506 ;; Return value:  Size  Location     Type
 30507 ;;		None               void
 30508 ;; Registers used:
 30509 ;;		wreg, status,2, status,0, cstack
 30510 ;; Tracked objects:
 30511 ;;		On entry : 0/0
 30512 ;;		On exit  : 0/0
 30513 ;;		Unchanged: 0/0
 30514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30515 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30516 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 30517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30518 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 30519 ;;Total ram usage:        4 bytes
 30520 ;; Hardware stack levels used:    1
 30521 ;; Hardware stack levels required when called:    8
 30522 ;; This function calls:
 30523 ;;		_PulseEnablePin
 30524 ;;		_delayUS
 30525 ;; This function is called by:
 30526 ;;		_init_LCD
 30527 ;;		_SetLCDcursor
 30528 ;;		_ClearLCD
 30529 ;;		_LCDPrintString
 30530 ;;		_LCDPrintChar
 30531 ;; This function uses a non-reentrant model
 30532 ;;
 30533                           
 30534                           	psect	text81
 30535  015D86                     __ptext81:
 30536                           	opt stack 0
 30537  015D86                     _SendLCDbyte:
 30538                           	opt stack 21
 30539                           
 30540                           ;incstack = 0
 30541                           ;SendLCDbyte@data stored from wreg
 30542  015D86  0101               	movlb	1	; () banked
 30543  015D88  6F87               	movwf	SendLCDbyte@data& (0+255),b
 30544                           
 30545                           ; BSR set to: 1
 30546                           ;LCD.c: 109: unsigned char MSB_nibble=0;
 30547  015D8A  0E00               	movlw	0
 30548  015D8C  0101               	movlb	1	; () banked
 30549  015D8E  6F88               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 30550                           
 30551                           ;LCD.c: 110: unsigned char LSB_nibble=0;
 30552  015D90  0E00               	movlw	0
 30553  015D92  0101               	movlb	1	; () banked
 30554  015D94  6F89               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 30555                           
 30556                           ; BSR set to: 1
 30557                           ;LCD.c: 112: LATA &= ~(0b00001000+0b00010000+0b00100000);
 30558  015D96  0EC7               	movlw	199
 30559  015D98  1689               	andwf	3977,f,c	;volatile
 30560                           
 30561                           ; BSR set to: 1
 30562                           ;LCD.c: 113: LATE &= ~0b00000001;
 30563  015D9A  908D               	bcf	3981,0,c	;volatile
 30564                           
 30565                           ; BSR set to: 1
 30566                           ;LCD.c: 114: LATD &= ~(0b10000000 + 0b00100000);
 30567  015D9C  0E5F               	movlw	95
 30568  015D9E  168C               	andwf	3980,f,c	;volatile
 30569                           
 30570                           ; BSR set to: 1
 30571                           ;LCD.c: 115: delayUS(10);
 30572  015DA0  0E0A               	movlw	10
 30573  015DA2  0101               	movlb	1	; () banked
 30574  015DA4  6F7C               	movwf	delayUS@US& (0+255),b
 30575  015DA6  0E00               	movlw	0
 30576  015DA8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 30577  015DAA  0E00               	movlw	0
 30578  015DAC  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 30579  015DAE  0E00               	movlw	0
 30580  015DB0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 30581  015DB2  EC38  F0BA         	call	_delayUS	;wreg free
 30582                           
 30583                           ;LCD.c: 116: MSB_nibble = (data & 0xF0)>>4;
 30584  015DB6  0101               	movlb	1	; () banked
 30585  015DB8  3987               	swapf	SendLCDbyte@data& (0+255),w,b
 30586  015DBA  0B0F               	andlw	15
 30587  015DBC  0B0F               	andlw	15
 30588  015DBE  0101               	movlb	1	; () banked
 30589  015DC0  6F88               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 30590                           
 30591                           ; BSR set to: 1
 30592                           ;LCD.c: 117: LSB_nibble = (data & 0x0F);
 30593  015DC2  0101               	movlb	1	; () banked
 30594  015DC4  5187               	movf	SendLCDbyte@data& (0+255),w,b
 30595  015DC6  0B0F               	andlw	15
 30596  015DC8  0101               	movlb	1	; () banked
 30597  015DCA  6F89               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 30598                           
 30599                           ; BSR set to: 1
 30600                           ;LCD.c: 118: if(!LCDwait)
 30601  015DCC  0101               	movlb	1	; () banked
 30602  015DCE  5109               	movf	_LCDwait& (0+255),w,b
 30603  015DD0  A4D8               	btfss	status,2,c
 30604  015DD2  D044               	goto	l11441
 30605                           
 30606                           ; BSR set to: 1
 30607                           ;LCD.c: 119: {
 30608                           ;LCD.c: 120: if(isCommand)
 30609  015DD4  0101               	movlb	1	; () banked
 30610  015DD6  5186               	movf	SendLCDbyte@isCommand& (0+255),w,b
 30611  015DD8  0101               	movlb	1	; () banked
 30612  015DDA  B4D8               	btfsc	status,2,c
 30613  015DDC  D002               	goto	l11397
 30614                           
 30615                           ; BSR set to: 1
 30616                           ;LCD.c: 121: {
 30617                           ;LCD.c: 122: LATD |= (0b00100000);
 30618  015DDE  8A8C               	bsf	3980,5,c	;volatile
 30619                           
 30620                           ;LCD.c: 123: }
 30621  015DE0  D002               	goto	l11399
 30622  015DE2                     l11397:
 30623                           
 30624                           ; BSR set to: 1
 30625                           ;LCD.c: 124: else
 30626                           ;LCD.c: 125: {
 30627                           ;LCD.c: 126: LATD &= ~(0b00100000);
 30628  015DE2  9A8C               	bcf	3980,5,c	;volatile
 30629  015DE4  D000               	goto	l11399
 30630  015DE6                     l11399:
 30631                           
 30632                           ; BSR set to: 1
 30633                           ;LCD.c: 127: }
 30634                           ;LCD.c: 128: if(MSB_nibble&0b1000)
 30635  015DE6  0101               	movlb	1	; () banked
 30636  015DE8  A788               	btfss	SendLCDbyte@MSB_nibble& (0+255),3,b
 30637  015DEA  D002               	goto	l11403
 30638                           
 30639                           ; BSR set to: 1
 30640                           ;LCD.c: 129: {
 30641                           ;LCD.c: 130: LATA |= 0b00001000;
 30642  015DEC  8689               	bsf	3977,3,c	;volatile
 30643  015DEE  D000               	goto	l11403
 30644  015DF0                     l11403:
 30645                           
 30646                           ; BSR set to: 1
 30647                           ;LCD.c: 131: }
 30648                           ;LCD.c: 132: if(MSB_nibble&0b0100)
 30649  015DF0  0101               	movlb	1	; () banked
 30650  015DF2  A588               	btfss	SendLCDbyte@MSB_nibble& (0+255),2,b
 30651  015DF4  D002               	goto	l11407
 30652                           
 30653                           ; BSR set to: 1
 30654                           ;LCD.c: 133: {
 30655                           ;LCD.c: 134: LATA |= 0b00010000;
 30656  015DF6  8889               	bsf	3977,4,c	;volatile
 30657  015DF8  D000               	goto	l11407
 30658  015DFA                     l11407:
 30659                           
 30660                           ; BSR set to: 1
 30661                           ;LCD.c: 135: }
 30662                           ;LCD.c: 136: if(MSB_nibble&0b0010)
 30663  015DFA  0101               	movlb	1	; () banked
 30664  015DFC  A388               	btfss	SendLCDbyte@MSB_nibble& (0+255),1,b
 30665  015DFE  D002               	goto	l11411
 30666                           
 30667                           ; BSR set to: 1
 30668                           ;LCD.c: 137: {
 30669                           ;LCD.c: 138: LATA |= 0b00100000;
 30670  015E00  8A89               	bsf	3977,5,c	;volatile
 30671  015E02  D000               	goto	l11411
 30672  015E04                     l11411:
 30673                           
 30674                           ; BSR set to: 1
 30675                           ;LCD.c: 139: }
 30676                           ;LCD.c: 140: if(MSB_nibble&0b0001)
 30677  015E04  0101               	movlb	1	; () banked
 30678  015E06  A188               	btfss	SendLCDbyte@MSB_nibble& (0+255),0,b
 30679  015E08  D002               	goto	l11415
 30680                           
 30681                           ; BSR set to: 1
 30682                           ;LCD.c: 141: {
 30683                           ;LCD.c: 142: LATE |= 0b00000001;
 30684  015E0A  808D               	bsf	3981,0,c	;volatile
 30685  015E0C  D000               	goto	l11415
 30686  015E0E                     l11415:
 30687                           
 30688                           ; BSR set to: 1
 30689                           ;LCD.c: 143: }
 30690                           ;LCD.c: 144: PulseEnablePin();
 30691  015E0E  EC27  F0BE         	call	_PulseEnablePin	;wreg free
 30692                           
 30693                           ;LCD.c: 145: LATA &= ~(0b00001000+0b00010000+0b00100000);
 30694  015E12  0EC7               	movlw	199
 30695  015E14  1689               	andwf	3977,f,c	;volatile
 30696                           
 30697                           ;LCD.c: 146: LATE &= ~0b00000001;
 30698  015E16  908D               	bcf	3981,0,c	;volatile
 30699                           
 30700                           ;LCD.c: 147: delayUS(10);
 30701  015E18  0E0A               	movlw	10
 30702  015E1A  0101               	movlb	1	; () banked
 30703  015E1C  6F7C               	movwf	delayUS@US& (0+255),b
 30704  015E1E  0E00               	movlw	0
 30705  015E20  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 30706  015E22  0E00               	movlw	0
 30707  015E24  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 30708  015E26  0E00               	movlw	0
 30709  015E28  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 30710  015E2A  EC38  F0BA         	call	_delayUS	;wreg free
 30711                           
 30712                           ;LCD.c: 148: if(LSB_nibble&0b1000)
 30713  015E2E  0101               	movlb	1	; () banked
 30714  015E30  A789               	btfss	SendLCDbyte@LSB_nibble& (0+255),3,b
 30715  015E32  D002               	goto	l11427
 30716                           
 30717                           ; BSR set to: 1
 30718                           ;LCD.c: 149: {
 30719                           ;LCD.c: 150: LATA |= 0b00001000;
 30720  015E34  8689               	bsf	3977,3,c	;volatile
 30721  015E36  D000               	goto	l11427
 30722  015E38                     l11427:
 30723                           
 30724                           ; BSR set to: 1
 30725                           ;LCD.c: 151: }
 30726                           ;LCD.c: 152: if(LSB_nibble&0b0100)
 30727  015E38  0101               	movlb	1	; () banked
 30728  015E3A  A589               	btfss	SendLCDbyte@LSB_nibble& (0+255),2,b
 30729  015E3C  D002               	goto	l11431
 30730                           
 30731                           ; BSR set to: 1
 30732                           ;LCD.c: 153: {
 30733                           ;LCD.c: 154: LATA |= 0b00010000;
 30734  015E3E  8889               	bsf	3977,4,c	;volatile
 30735  015E40  D000               	goto	l11431
 30736  015E42                     l11431:
 30737                           
 30738                           ; BSR set to: 1
 30739                           ;LCD.c: 155: }
 30740                           ;LCD.c: 156: if(LSB_nibble&0b0010)
 30741  015E42  0101               	movlb	1	; () banked
 30742  015E44  A389               	btfss	SendLCDbyte@LSB_nibble& (0+255),1,b
 30743  015E46  D002               	goto	l11435
 30744                           
 30745                           ; BSR set to: 1
 30746                           ;LCD.c: 157: {
 30747                           ;LCD.c: 158: LATA |= 0b00100000;
 30748  015E48  8A89               	bsf	3977,5,c	;volatile
 30749  015E4A  D000               	goto	l11435
 30750  015E4C                     l11435:
 30751                           
 30752                           ; BSR set to: 1
 30753                           ;LCD.c: 159: }
 30754                           ;LCD.c: 160: if(LSB_nibble&0b0001)
 30755  015E4C  0101               	movlb	1	; () banked
 30756  015E4E  A189               	btfss	SendLCDbyte@LSB_nibble& (0+255),0,b
 30757  015E50  D002               	goto	l11439
 30758                           
 30759                           ; BSR set to: 1
 30760                           ;LCD.c: 161: {
 30761                           ;LCD.c: 162: LATE |= 0b00000001;
 30762  015E52  808D               	bsf	3981,0,c	;volatile
 30763  015E54  D000               	goto	l11439
 30764  015E56                     l11439:
 30765                           
 30766                           ; BSR set to: 1
 30767                           ;LCD.c: 163: }
 30768                           ;LCD.c: 164: PulseEnablePin();
 30769  015E56  EC27  F0BE         	call	_PulseEnablePin	;wreg free
 30770                           
 30771                           ;LCD.c: 165: }
 30772  015E5A  0012               	return	
 30773  015E5C                     l11441:
 30774                           
 30775                           ;LCD.c: 166: else
 30776                           ;LCD.c: 167: {
 30777                           ;LCD.c: 168: delayUS(20);
 30778  015E5C  0E14               	movlw	20
 30779  015E5E  0101               	movlb	1	; () banked
 30780  015E60  6F7C               	movwf	delayUS@US& (0+255),b
 30781  015E62  0E00               	movlw	0
 30782  015E64  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 30783  015E66  0E00               	movlw	0
 30784  015E68  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 30785  015E6A  0E00               	movlw	0
 30786  015E6C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 30787  015E6E  EC38  F0BA         	call	_delayUS	;wreg free
 30788  015E72  0012               	return	
 30789  015E74  0012               	return		;funcret
 30790  015E76                     __end_of_SendLCDbyte:
 30791                           	opt stack 0
 30792                           tblptru	equ	0xFF8
 30793                           tblptrh	equ	0xFF7
 30794                           tblptrl	equ	0xFF6
 30795                           tablat	equ	0xFF5
 30796                           prodh	equ	0xFF4
 30797                           prodl	equ	0xFF3
 30798                           intcon	equ	0xFF2
 30799                           intcon2	equ	0xFF1
 30800                           indf0	equ	0xFEF
 30801                           postinc0	equ	0xFEE
 30802                           plusw0	equ	0xFEB
 30803                           fsr0h	equ	0xFEA
 30804                           fsr0l	equ	0xFE9
 30805                           wreg	equ	0xFE8
 30806                           indf1	equ	0xFE7
 30807                           postdec1	equ	0xFE5
 30808                           fsr1h	equ	0xFE2
 30809                           fsr1l	equ	0xFE1
 30810                           indf2	equ	0xFDF
 30811                           postinc2	equ	0xFDE
 30812                           postdec2	equ	0xFDD
 30813                           plusw2	equ	0xFDB
 30814                           fsr2h	equ	0xFDA
 30815                           fsr2l	equ	0xFD9
 30816                           status	equ	0xFD8
 30817                           
 30818 ;; *************** function _PulseEnablePin *****************
 30819 ;; Defined at:
 30820 ;;		line 178 in file "LCD.c"
 30821 ;; Parameters:    Size  Location     Type
 30822 ;;		None
 30823 ;; Auto vars:     Size  Location     Type
 30824 ;;		None
 30825 ;; Return value:  Size  Location     Type
 30826 ;;		None               void
 30827 ;; Registers used:
 30828 ;;		wreg, status,2, status,0, cstack
 30829 ;; Tracked objects:
 30830 ;;		On entry : 0/0
 30831 ;;		On exit  : 0/0
 30832 ;;		Unchanged: 0/0
 30833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30838 ;;Total ram usage:        0 bytes
 30839 ;; Hardware stack levels used:    1
 30840 ;; Hardware stack levels required when called:    7
 30841 ;; This function calls:
 30842 ;;		_delayUS
 30843 ;; This function is called by:
 30844 ;;		_init_LCD
 30845 ;;		_SendLCDbyte
 30846 ;; This function uses a non-reentrant model
 30847 ;;
 30848                           
 30849                           	psect	text82
 30850  017C4E                     __ptext82:
 30851                           	opt stack 0
 30852  017C4E                     _PulseEnablePin:
 30853                           	opt stack 21
 30854                           
 30855                           ;LCD.c: 181: LATD |= (0b10000000);
 30856                           
 30857                           ;incstack = 0
 30858  017C4E  8E8C               	bsf	3980,7,c	;volatile
 30859                           
 30860                           ;LCD.c: 182: delayUS(2500);
 30861  017C50  0EC4               	movlw	196
 30862  017C52  0101               	movlb	1	; () banked
 30863  017C54  6F7C               	movwf	delayUS@US& (0+255),b
 30864  017C56  0E09               	movlw	9
 30865  017C58  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 30866  017C5A  0E00               	movlw	0
 30867  017C5C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 30868  017C5E  0E00               	movlw	0
 30869  017C60  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 30870  017C62  EC38  F0BA         	call	_delayUS	;wreg free
 30871                           
 30872                           ;LCD.c: 184: LATD &= ~(0b10000000);
 30873  017C66  9E8C               	bcf	3980,7,c	;volatile
 30874                           
 30875                           ;LCD.c: 185: delayUS(2500);
 30876  017C68  0EC4               	movlw	196
 30877  017C6A  0101               	movlb	1	; () banked
 30878  017C6C  6F7C               	movwf	delayUS@US& (0+255),b
 30879  017C6E  0E09               	movlw	9
 30880  017C70  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 30881  017C72  0E00               	movlw	0
 30882  017C74  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 30883  017C76  0E00               	movlw	0
 30884  017C78  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 30885  017C7A  EC38  F0BA         	call	_delayUS	;wreg free
 30886  017C7E  0012               	return		;funcret
 30887  017C80                     __end_of_PulseEnablePin:
 30888                           	opt stack 0
 30889                           tblptru	equ	0xFF8
 30890                           tblptrh	equ	0xFF7
 30891                           tblptrl	equ	0xFF6
 30892                           tablat	equ	0xFF5
 30893                           prodh	equ	0xFF4
 30894                           prodl	equ	0xFF3
 30895                           intcon	equ	0xFF2
 30896                           intcon2	equ	0xFF1
 30897                           indf0	equ	0xFEF
 30898                           postinc0	equ	0xFEE
 30899                           plusw0	equ	0xFEB
 30900                           fsr0h	equ	0xFEA
 30901                           fsr0l	equ	0xFE9
 30902                           wreg	equ	0xFE8
 30903                           indf1	equ	0xFE7
 30904                           postdec1	equ	0xFE5
 30905                           fsr1h	equ	0xFE2
 30906                           fsr1l	equ	0xFE1
 30907                           indf2	equ	0xFDF
 30908                           postinc2	equ	0xFDE
 30909                           postdec2	equ	0xFDD
 30910                           plusw2	equ	0xFDB
 30911                           fsr2h	equ	0xFDA
 30912                           fsr2l	equ	0xFD9
 30913                           status	equ	0xFD8
 30914                           
 30915 ;; *************** function _delayUS *****************
 30916 ;; Defined at:
 30917 ;;		line 57 in file "MISC.c"
 30918 ;; Parameters:    Size  Location     Type
 30919 ;;  US              4   14[BANK1 ] long 
 30920 ;; Auto vars:     Size  Location     Type
 30921 ;;  i               4   19[BANK1 ] long 
 30922 ;;  j               1   23[BANK1 ] unsigned char 
 30923 ;; Return value:  Size  Location     Type
 30924 ;;		None               void
 30925 ;; Registers used:
 30926 ;;		wreg, status,2, status,0
 30927 ;; Tracked objects:
 30928 ;;		On entry : 0/0
 30929 ;;		On exit  : 0/0
 30930 ;;		Unchanged: 0/0
 30931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30932 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 30933 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 30934 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30935 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 30936 ;;Total ram usage:       10 bytes
 30937 ;; Hardware stack levels used:    1
 30938 ;; Hardware stack levels required when called:    6
 30939 ;; This function calls:
 30940 ;;		Nothing
 30941 ;; This function is called by:
 30942 ;;		_main
 30943 ;;		_InitApp
 30944 ;;		_UARTstringWAIT
 30945 ;;		_SetBaud
 30946 ;;		_Command
 30947 ;;		_Send_Config1
 30948 ;;		_Zero_Config1
 30949 ;;		_One_Config1
 30950 ;;		_f_Config1
 30951 ;;		_Send_Config2
 30952 ;;		_Zero_Config2
 30953 ;;		_One_Config2
 30954 ;;		_init_LCD
 30955 ;;		_SendLCDbyte
 30956 ;;		_PulseEnablePin
 30957 ;;		_LCDScreenUpdate
 30958 ;;		_ResetI2C
 30959 ;; This function uses a non-reentrant model
 30960 ;;
 30961                           
 30962                           	psect	text83
 30963  017470                     __ptext83:
 30964                           	opt stack 0
 30965  017470                     _delayUS:
 30966                           	opt stack 23
 30967                           
 30968                           ;MISC.c: 59: long i;
 30969                           ;MISC.c: 60: unsigned char j;
 30970                           ;MISC.c: 61: for(i=0;i<US;i+=31)
 30971                           
 30972                           ;incstack = 0
 30973  017470  0E00               	movlw	0
 30974  017472  0101               	movlb	1	; () banked
 30975  017474  6F81               	movwf	delayUS@i& (0+255),b
 30976  017476  0E00               	movlw	0
 30977  017478  6F82               	movwf	(delayUS@i+1)& (0+255),b
 30978  01747A  0E00               	movlw	0
 30979  01747C  6F83               	movwf	(delayUS@i+2)& (0+255),b
 30980  01747E  0E00               	movlw	0
 30981  017480  6F84               	movwf	(delayUS@i+3)& (0+255),b
 30982  017482  D013               	goto	l282
 30983  017484                     l11153:
 30984                           
 30985                           ; BSR set to: 1
 30986                           ;MISC.c: 62: {
 30987                           ;MISC.c: 63: for(j=0;j<41;j++)
 30988  017484  0E00               	movlw	0
 30989  017486  0101               	movlb	1	; () banked
 30990  017488  6F85               	movwf	delayUS@j& (0+255),b
 30991  01748A                     l11155:
 30992                           
 30993                           ; BSR set to: 1
 30994  01748A  0E28               	movlw	40
 30995  01748C  0101               	movlb	1	; () banked
 30996  01748E  6585               	cpfsgt	delayUS@j& (0+255),b
 30997  017490  D001               	goto	l284
 30998                           
 30999                           ; BSR set to: 1
 31000  017492  D004               	goto	l11163
 31001  017494                     l284:
 31002                           
 31003                           ; BSR set to: 1
 31004                           ;MISC.c: 64: {
 31005                           ;MISC.c: 65: __nop();
 31006  017494  F000               	nop	
 31007  017496  0101               	movlb	1	; () banked
 31008  017498  2B85               	incf	delayUS@j& (0+255),f,b
 31009  01749A  D7F7               	goto	l11155
 31010  01749C                     l11163:
 31011                           
 31012                           ; BSR set to: 1
 31013  01749C  0E1F               	movlw	31
 31014  01749E  0101               	movlb	1	; () banked
 31015  0174A0  2781               	addwf	delayUS@i& (0+255),f,b
 31016  0174A2  0E00               	movlw	0
 31017  0174A4  2382               	addwfc	(delayUS@i+1)& (0+255),f,b
 31018  0174A6  2383               	addwfc	(delayUS@i+2)& (0+255),f,b
 31019  0174A8  2384               	addwfc	(delayUS@i+3)& (0+255),f,b
 31020  0174AA                     l282:
 31021                           
 31022                           ; BSR set to: 1
 31023  0174AA  0101               	movlb	1	; () banked
 31024  0174AC  517C               	movf	delayUS@US& (0+255),w,b
 31025  0174AE  0101               	movlb	1	; () banked
 31026  0174B0  5D81               	subwf	delayUS@i& (0+255),w,b
 31027  0174B2  0101               	movlb	1	; () banked
 31028  0174B4  517D               	movf	(delayUS@US+1)& (0+255),w,b
 31029  0174B6  0101               	movlb	1	; () banked
 31030  0174B8  5982               	subwfb	(delayUS@i+1)& (0+255),w,b
 31031  0174BA  0101               	movlb	1	; () banked
 31032  0174BC  517E               	movf	(delayUS@US+2)& (0+255),w,b
 31033  0174BE  0101               	movlb	1	; () banked
 31034  0174C0  5983               	subwfb	(delayUS@i+2)& (0+255),w,b
 31035  0174C2  0101               	movlb	1	; () banked
 31036  0174C4  5184               	movf	(delayUS@i+3)& (0+255),w,b
 31037  0174C6  0A80               	xorlw	128
 31038  0174C8  0101               	movlb	1	; () banked
 31039  0174CA  6F80               	movwf	??_delayUS& (0+255),b
 31040  0174CC  0101               	movlb	1	; () banked
 31041  0174CE  517F               	movf	(delayUS@US+3)& (0+255),w,b
 31042  0174D0  0A80               	xorlw	128
 31043  0174D2  0101               	movlb	1	; () banked
 31044  0174D4  5980               	subwfb	??_delayUS& (0+255),w,b
 31045  0174D6  A0D8               	btfss	status,0,c
 31046  0174D8  D7D5               	goto	l11153
 31047                           
 31048                           ; BSR set to: 1
 31049                           
 31050                           ; BSR set to: 1
 31051  0174DA  0012               	return		;funcret
 31052  0174DC                     __end_of_delayUS:
 31053                           	opt stack 0
 31054                           tblptru	equ	0xFF8
 31055                           tblptrh	equ	0xFF7
 31056                           tblptrl	equ	0xFF6
 31057                           tablat	equ	0xFF5
 31058                           prodh	equ	0xFF4
 31059                           prodl	equ	0xFF3
 31060                           intcon	equ	0xFF2
 31061                           intcon2	equ	0xFF1
 31062                           indf0	equ	0xFEF
 31063                           postinc0	equ	0xFEE
 31064                           plusw0	equ	0xFEB
 31065                           fsr0h	equ	0xFEA
 31066                           fsr0l	equ	0xFE9
 31067                           wreg	equ	0xFE8
 31068                           indf1	equ	0xFE7
 31069                           postdec1	equ	0xFE5
 31070                           fsr1h	equ	0xFE2
 31071                           fsr1l	equ	0xFE1
 31072                           indf2	equ	0xFDF
 31073                           postinc2	equ	0xFDE
 31074                           postdec2	equ	0xFDD
 31075                           plusw2	equ	0xFDB
 31076                           fsr2h	equ	0xFDA
 31077                           fsr2l	equ	0xFD9
 31078                           status	equ	0xFD8
 31079                           
 31080 ;; *************** function _LCD_Scroll *****************
 31081 ;; Defined at:
 31082 ;;		line 410 in file "LCD.c"
 31083 ;; Parameters:    Size  Location     Type
 31084 ;;  This            2   29[BANK1 ] PTR const unsigned char 
 31085 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 31086 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 31087 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 31088 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 31089 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 31090 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 31091 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 31092 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 31093 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 31094 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 31095 ;;		 -> STR_68(5), STR_67(9), STR_66(9), 
 31096 ;; Auto vars:     Size  Location     Type
 31097 ;;		None
 31098 ;; Return value:  Size  Location     Type
 31099 ;;		None               void
 31100 ;; Registers used:
 31101 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31102 ;; Tracked objects:
 31103 ;;		On entry : 0/0
 31104 ;;		On exit  : 0/0
 31105 ;;		Unchanged: 0/0
 31106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31107 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31110 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31111 ;;Total ram usage:        2 bytes
 31112 ;; Hardware stack levels used:    1
 31113 ;; Hardware stack levels required when called:    8
 31114 ;; This function calls:
 31115 ;;		_BufferCopy
 31116 ;; This function is called by:
 31117 ;;		_Command
 31118 ;; This function uses a non-reentrant model
 31119 ;;
 31120                           
 31121                           	psect	text84
 31122  014A8A                     __ptext84:
 31123                           	opt stack 0
 31124  014A8A                     _LCD_Scroll:
 31125                           	opt stack 21
 31126                           
 31127                           ;LCD.c: 412: if(!LCDwait)
 31128                           
 31129                           ; BSR set to: 1
 31130                           ;incstack = 0
 31131  014A8A  0101               	movlb	1	; () banked
 31132  014A8C  5109               	movf	_LCDwait& (0+255),w,b
 31133  014A8E  A4D8               	btfss	status,2,c
 31134  014A90  0012               	return	
 31135                           
 31136                           ; BSR set to: 1
 31137                           ;LCD.c: 413: {
 31138                           ;LCD.c: 414: LCDclearCount = 15000;
 31139  014A92  0E98               	movlw	152
 31140  014A94  0101               	movlb	1	; () banked
 31141  014A96  6FD7               	movwf	_LCDclearCount& (0+255),b
 31142  014A98  0E3A               	movlw	58
 31143  014A9A  6FD8               	movwf	(_LCDclearCount+1)& (0+255),b
 31144  014A9C  0E00               	movlw	0
 31145  014A9E  6FD9               	movwf	(_LCDclearCount+2)& (0+255),b
 31146  014AA0  0E00               	movlw	0
 31147  014AA2  6FDA               	movwf	(_LCDclearCount+3)& (0+255),b
 31148                           
 31149                           ; BSR set to: 1
 31150                           ;LCD.c: 415: ScrollFIFOCount++;
 31151  014AA4  0101               	movlb	1	; () banked
 31152  014AA6  2B0C               	incf	_ScrollFIFOCount& (0+255),f,b
 31153                           
 31154                           ; BSR set to: 1
 31155                           ;LCD.c: 416: if(ScrollFIFOCount == 1)
 31156  014AA8  0101               	movlb	1	; () banked
 31157  014AAA  050C               	decf	_ScrollFIFOCount& (0+255),w,b
 31158  014AAC  A4D8               	btfss	status,2,c
 31159  014AAE  D013               	goto	l13029
 31160                           
 31161                           ; BSR set to: 1
 31162                           ;LCD.c: 417: {
 31163                           ;LCD.c: 418: BufferCopy((unsigned char*) This,Scroll_1, 16, 0);
 31164  014AB0  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 31165  014AB4  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31166  014AB8  0E0E               	movlw	low _Scroll_1
 31167  014ABA  0101               	movlb	1	; () banked
 31168  014ABC  6F86               	movwf	BufferCopy@to& (0+255),b
 31169  014ABE  0E01               	movlw	high _Scroll_1
 31170  014AC0  0101               	movlb	1	; () banked
 31171  014AC2  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 31172  014AC4  0E10               	movlw	16
 31173  014AC6  0101               	movlb	1	; () banked
 31174  014AC8  6F88               	movwf	BufferCopy@count& (0+255),b
 31175  014ACA  0E00               	movlw	0
 31176  014ACC  0101               	movlb	1	; () banked
 31177  014ACE  6F89               	movwf	BufferCopy@shift& (0+255),b
 31178  014AD0  EC87  F0B2         	call	_BufferCopy	;wreg free
 31179                           
 31180                           ;LCD.c: 419: }
 31181  014AD4  0012               	return	
 31182  014AD6                     l13029:
 31183                           
 31184                           ;LCD.c: 420: else if(ScrollFIFOCount == 2)
 31185  014AD6  0E02               	movlw	2
 31186  014AD8  0101               	movlb	1	; () banked
 31187  014ADA  190C               	xorwf	_ScrollFIFOCount& (0+255),w,b
 31188  014ADC  A4D8               	btfss	status,2,c
 31189  014ADE  D013               	goto	l13033
 31190                           
 31191                           ; BSR set to: 1
 31192                           ;LCD.c: 421: {
 31193                           ;LCD.c: 422: BufferCopy((unsigned char*) This,Scroll_2, 16, 0);
 31194  014AE0  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 31195  014AE4  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31196  014AE8  0E1E               	movlw	low _Scroll_2
 31197  014AEA  0101               	movlb	1	; () banked
 31198  014AEC  6F86               	movwf	BufferCopy@to& (0+255),b
 31199  014AEE  0E01               	movlw	high _Scroll_2
 31200  014AF0  0101               	movlb	1	; () banked
 31201  014AF2  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 31202  014AF4  0E10               	movlw	16
 31203  014AF6  0101               	movlb	1	; () banked
 31204  014AF8  6F88               	movwf	BufferCopy@count& (0+255),b
 31205  014AFA  0E00               	movlw	0
 31206  014AFC  0101               	movlb	1	; () banked
 31207  014AFE  6F89               	movwf	BufferCopy@shift& (0+255),b
 31208  014B00  EC87  F0B2         	call	_BufferCopy	;wreg free
 31209                           
 31210                           ;LCD.c: 423: }
 31211  014B04  0012               	return	
 31212  014B06                     l13033:
 31213                           
 31214                           ;LCD.c: 424: else if(ScrollFIFOCount == 3)
 31215  014B06  0E03               	movlw	3
 31216  014B08  0101               	movlb	1	; () banked
 31217  014B0A  190C               	xorwf	_ScrollFIFOCount& (0+255),w,b
 31218  014B0C  A4D8               	btfss	status,2,c
 31219  014B0E  D013               	goto	l13037
 31220                           
 31221                           ; BSR set to: 1
 31222                           ;LCD.c: 425: {
 31223                           ;LCD.c: 426: BufferCopy((unsigned char*) This,Scroll_3, 16, 0);
 31224  014B10  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 31225  014B14  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31226  014B18  0E2E               	movlw	low _Scroll_3
 31227  014B1A  0101               	movlb	1	; () banked
 31228  014B1C  6F86               	movwf	BufferCopy@to& (0+255),b
 31229  014B1E  0E01               	movlw	high _Scroll_3
 31230  014B20  0101               	movlb	1	; () banked
 31231  014B22  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 31232  014B24  0E10               	movlw	16
 31233  014B26  0101               	movlb	1	; () banked
 31234  014B28  6F88               	movwf	BufferCopy@count& (0+255),b
 31235  014B2A  0E00               	movlw	0
 31236  014B2C  0101               	movlb	1	; () banked
 31237  014B2E  6F89               	movwf	BufferCopy@shift& (0+255),b
 31238  014B30  EC87  F0B2         	call	_BufferCopy	;wreg free
 31239                           
 31240                           ;LCD.c: 427: }
 31241  014B34  0012               	return	
 31242  014B36                     l13037:
 31243                           
 31244                           ;LCD.c: 428: else if(ScrollFIFOCount == 4)
 31245  014B36  0E04               	movlw	4
 31246  014B38  0101               	movlb	1	; () banked
 31247  014B3A  190C               	xorwf	_ScrollFIFOCount& (0+255),w,b
 31248  014B3C  A4D8               	btfss	status,2,c
 31249  014B3E  D013               	goto	l13041
 31250                           
 31251                           ; BSR set to: 1
 31252                           ;LCD.c: 429: {
 31253                           ;LCD.c: 430: BufferCopy((unsigned char*) This,Scroll_4, 16, 0);
 31254  014B40  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 31255  014B44  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31256  014B48  0E3E               	movlw	low _Scroll_4
 31257  014B4A  0101               	movlb	1	; () banked
 31258  014B4C  6F86               	movwf	BufferCopy@to& (0+255),b
 31259  014B4E  0E01               	movlw	high _Scroll_4
 31260  014B50  0101               	movlb	1	; () banked
 31261  014B52  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 31262  014B54  0E10               	movlw	16
 31263  014B56  0101               	movlb	1	; () banked
 31264  014B58  6F88               	movwf	BufferCopy@count& (0+255),b
 31265  014B5A  0E00               	movlw	0
 31266  014B5C  0101               	movlb	1	; () banked
 31267  014B5E  6F89               	movwf	BufferCopy@shift& (0+255),b
 31268  014B60  EC87  F0B2         	call	_BufferCopy	;wreg free
 31269                           
 31270                           ;LCD.c: 431: }
 31271  014B64  0012               	return	
 31272  014B66                     l13041:
 31273                           
 31274                           ;LCD.c: 432: else if(ScrollFIFOCount == 5)
 31275  014B66  0E05               	movlw	5
 31276  014B68  0101               	movlb	1	; () banked
 31277  014B6A  190C               	xorwf	_ScrollFIFOCount& (0+255),w,b
 31278  014B6C  A4D8               	btfss	status,2,c
 31279  014B6E  D013               	goto	l13045
 31280                           
 31281                           ; BSR set to: 1
 31282                           ;LCD.c: 433: {
 31283                           ;LCD.c: 434: BufferCopy((unsigned char*) This,Scroll_5, 16, 0);
 31284  014B70  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 31285  014B74  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31286  014B78  0E4E               	movlw	low _Scroll_5
 31287  014B7A  0101               	movlb	1	; () banked
 31288  014B7C  6F86               	movwf	BufferCopy@to& (0+255),b
 31289  014B7E  0E01               	movlw	high _Scroll_5
 31290  014B80  0101               	movlb	1	; () banked
 31291  014B82  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 31292  014B84  0E10               	movlw	16
 31293  014B86  0101               	movlb	1	; () banked
 31294  014B88  6F88               	movwf	BufferCopy@count& (0+255),b
 31295  014B8A  0E00               	movlw	0
 31296  014B8C  0101               	movlb	1	; () banked
 31297  014B8E  6F89               	movwf	BufferCopy@shift& (0+255),b
 31298  014B90  EC87  F0B2         	call	_BufferCopy	;wreg free
 31299                           
 31300                           ;LCD.c: 435: }
 31301  014B94  0012               	return	
 31302  014B96                     l13045:
 31303                           
 31304                           ;LCD.c: 436: else if(ScrollFIFOCount == 6)
 31305  014B96  0E06               	movlw	6
 31306  014B98  0101               	movlb	1	; () banked
 31307  014B9A  190C               	xorwf	_ScrollFIFOCount& (0+255),w,b
 31308  014B9C  A4D8               	btfss	status,2,c
 31309  014B9E  D013               	goto	l13049
 31310                           
 31311                           ; BSR set to: 1
 31312                           ;LCD.c: 437: {
 31313                           ;LCD.c: 438: BufferCopy((unsigned char*) This,Scroll_6, 16, 0);
 31314  014BA0  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 31315  014BA4  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31316  014BA8  0E5E               	movlw	low _Scroll_6
 31317  014BAA  0101               	movlb	1	; () banked
 31318  014BAC  6F86               	movwf	BufferCopy@to& (0+255),b
 31319  014BAE  0E01               	movlw	high _Scroll_6
 31320  014BB0  0101               	movlb	1	; () banked
 31321  014BB2  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 31322  014BB4  0E10               	movlw	16
 31323  014BB6  0101               	movlb	1	; () banked
 31324  014BB8  6F88               	movwf	BufferCopy@count& (0+255),b
 31325  014BBA  0E00               	movlw	0
 31326  014BBC  0101               	movlb	1	; () banked
 31327  014BBE  6F89               	movwf	BufferCopy@shift& (0+255),b
 31328  014BC0  EC87  F0B2         	call	_BufferCopy	;wreg free
 31329                           
 31330                           ;LCD.c: 439: }
 31331  014BC4  0012               	return	
 31332  014BC6                     l13049:
 31333                           
 31334                           ;LCD.c: 440: else if(ScrollFIFOCount == 7)
 31335  014BC6  0E07               	movlw	7
 31336  014BC8  0101               	movlb	1	; () banked
 31337  014BCA  190C               	xorwf	_ScrollFIFOCount& (0+255),w,b
 31338  014BCC  A4D8               	btfss	status,2,c
 31339  014BCE  D013               	goto	l13053
 31340                           
 31341                           ; BSR set to: 1
 31342                           ;LCD.c: 441: {
 31343                           ;LCD.c: 442: BufferCopy((unsigned char*) This,Scroll_7, 16, 0);
 31344  014BD0  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 31345  014BD4  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31346  014BD8  0E2D               	movlw	low _Scroll_7
 31347  014BDA  0101               	movlb	1	; () banked
 31348  014BDC  6F86               	movwf	BufferCopy@to& (0+255),b
 31349  014BDE  0E00               	movlw	high _Scroll_7
 31350  014BE0  0101               	movlb	1	; () banked
 31351  014BE2  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 31352  014BE4  0E10               	movlw	16
 31353  014BE6  0101               	movlb	1	; () banked
 31354  014BE8  6F88               	movwf	BufferCopy@count& (0+255),b
 31355  014BEA  0E00               	movlw	0
 31356  014BEC  0101               	movlb	1	; () banked
 31357  014BEE  6F89               	movwf	BufferCopy@shift& (0+255),b
 31358  014BF0  EC87  F0B2         	call	_BufferCopy	;wreg free
 31359                           
 31360                           ;LCD.c: 443: }
 31361  014BF4  0012               	return	
 31362  014BF6                     l13053:
 31363                           
 31364                           ;LCD.c: 444: else if(ScrollFIFOCount == 8)
 31365  014BF6  0E08               	movlw	8
 31366  014BF8  0101               	movlb	1	; () banked
 31367  014BFA  190C               	xorwf	_ScrollFIFOCount& (0+255),w,b
 31368  014BFC  A4D8               	btfss	status,2,c
 31369  014BFE  D013               	goto	l13057
 31370                           
 31371                           ; BSR set to: 1
 31372                           ;LCD.c: 445: {
 31373                           ;LCD.c: 446: BufferCopy((unsigned char*) This,Scroll_8, 16, 0);
 31374  014C00  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 31375  014C04  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31376  014C08  0E3D               	movlw	low _Scroll_8
 31377  014C0A  0101               	movlb	1	; () banked
 31378  014C0C  6F86               	movwf	BufferCopy@to& (0+255),b
 31379  014C0E  0E00               	movlw	high _Scroll_8
 31380  014C10  0101               	movlb	1	; () banked
 31381  014C12  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 31382  014C14  0E10               	movlw	16
 31383  014C16  0101               	movlb	1	; () banked
 31384  014C18  6F88               	movwf	BufferCopy@count& (0+255),b
 31385  014C1A  0E00               	movlw	0
 31386  014C1C  0101               	movlb	1	; () banked
 31387  014C1E  6F89               	movwf	BufferCopy@shift& (0+255),b
 31388  014C20  EC87  F0B2         	call	_BufferCopy	;wreg free
 31389                           
 31390                           ;LCD.c: 447: }
 31391  014C24  0012               	return	
 31392  014C26                     l13057:
 31393                           
 31394                           ;LCD.c: 448: else if(ScrollFIFOCount == 9)
 31395  014C26  0E09               	movlw	9
 31396  014C28  0101               	movlb	1	; () banked
 31397  014C2A  190C               	xorwf	_ScrollFIFOCount& (0+255),w,b
 31398  014C2C  A4D8               	btfss	status,2,c
 31399  014C2E  D013               	goto	l13061
 31400                           
 31401                           ; BSR set to: 1
 31402                           ;LCD.c: 449: {
 31403                           ;LCD.c: 450: BufferCopy((unsigned char*) This,Scroll_9, 16, 0);
 31404  014C30  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 31405  014C34  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31406  014C38  0EDF               	movlw	low _Scroll_9
 31407  014C3A  0101               	movlb	1	; () banked
 31408  014C3C  6F86               	movwf	BufferCopy@to& (0+255),b
 31409  014C3E  0E00               	movlw	high _Scroll_9
 31410  014C40  0101               	movlb	1	; () banked
 31411  014C42  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 31412  014C44  0E10               	movlw	16
 31413  014C46  0101               	movlb	1	; () banked
 31414  014C48  6F88               	movwf	BufferCopy@count& (0+255),b
 31415  014C4A  0E00               	movlw	0
 31416  014C4C  0101               	movlb	1	; () banked
 31417  014C4E  6F89               	movwf	BufferCopy@shift& (0+255),b
 31418  014C50  EC87  F0B2         	call	_BufferCopy	;wreg free
 31419                           
 31420                           ;LCD.c: 451: }
 31421  014C54  0012               	return	
 31422  014C56                     l13061:
 31423                           
 31424                           ;LCD.c: 452: else if(ScrollFIFOCount == 10)
 31425  014C56  0E0A               	movlw	10
 31426  014C58  0101               	movlb	1	; () banked
 31427  014C5A  190C               	xorwf	_ScrollFIFOCount& (0+255),w,b
 31428  014C5C  A4D8               	btfss	status,2,c
 31429  014C5E  0012               	return	
 31430                           
 31431                           ; BSR set to: 1
 31432                           ;LCD.c: 453: {
 31433                           ;LCD.c: 454: BufferCopy((unsigned char*) This,Scroll_10, 16, 0);
 31434  014C60  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 31435  014C64  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 31436  014C68  0E67               	movlw	low _Scroll_10
 31437  014C6A  0101               	movlb	1	; () banked
 31438  014C6C  6F86               	movwf	BufferCopy@to& (0+255),b
 31439  014C6E  0E02               	movlw	high _Scroll_10
 31440  014C70  0101               	movlb	1	; () banked
 31441  014C72  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 31442  014C74  0E10               	movlw	16
 31443  014C76  0101               	movlb	1	; () banked
 31444  014C78  6F88               	movwf	BufferCopy@count& (0+255),b
 31445  014C7A  0E00               	movlw	0
 31446  014C7C  0101               	movlb	1	; () banked
 31447  014C7E  6F89               	movwf	BufferCopy@shift& (0+255),b
 31448  014C80  EC87  F0B2         	call	_BufferCopy	;wreg free
 31449  014C84  0012               	return	
 31450  014C86  0012               	return		;funcret
 31451  014C88                     __end_of_LCD_Scroll:
 31452                           	opt stack 0
 31453                           tblptru	equ	0xFF8
 31454                           tblptrh	equ	0xFF7
 31455                           tblptrl	equ	0xFF6
 31456                           tablat	equ	0xFF5
 31457                           prodh	equ	0xFF4
 31458                           prodl	equ	0xFF3
 31459                           intcon	equ	0xFF2
 31460                           intcon2	equ	0xFF1
 31461                           indf0	equ	0xFEF
 31462                           postinc0	equ	0xFEE
 31463                           plusw0	equ	0xFEB
 31464                           fsr0h	equ	0xFEA
 31465                           fsr0l	equ	0xFE9
 31466                           wreg	equ	0xFE8
 31467                           indf1	equ	0xFE7
 31468                           postdec1	equ	0xFE5
 31469                           fsr1h	equ	0xFE2
 31470                           fsr1l	equ	0xFE1
 31471                           indf2	equ	0xFDF
 31472                           postinc2	equ	0xFDE
 31473                           postdec2	equ	0xFDD
 31474                           plusw2	equ	0xFDB
 31475                           fsr2h	equ	0xFDA
 31476                           fsr2l	equ	0xFD9
 31477                           status	equ	0xFD8
 31478                           
 31479 ;; *************** function _BufferCopy *****************
 31480 ;; Defined at:
 31481 ;;		line 103 in file "MISC.c"
 31482 ;; Parameters:    Size  Location     Type
 31483 ;;  from            2   22[BANK1 ] PTR unsigned char 
 31484 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 31485 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 31486 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 31487 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 31488 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 31489 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 31490 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 31491 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 31492 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 31493 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 31494 ;;		 -> STR_68(5), STR_67(9), STR_66(9), StringAddEqual@temp(100), 
 31495 ;;		 -> RemoveSpaces@That(100), low_isr@TEMP_Rxdata(100), 
 31496 ;;  to              2   24[BANK1 ] PTR unsigned char 
 31497 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 31498 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 31499 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 31500 ;;  count           1   26[BANK1 ] unsigned char 
 31501 ;;  shift           1   27[BANK1 ] unsigned char 
 31502 ;; Auto vars:     Size  Location     Type
 31503 ;;  i               1   28[BANK1 ] unsigned char 
 31504 ;; Return value:  Size  Location     Type
 31505 ;;		None               void
 31506 ;; Registers used:
 31507 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31508 ;; Tracked objects:
 31509 ;;		On entry : 0/0
 31510 ;;		On exit  : 0/0
 31511 ;;		Unchanged: 0/0
 31512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31513 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 31514 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31516 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 31517 ;;Total ram usage:        7 bytes
 31518 ;; Hardware stack levels used:    1
 31519 ;; Hardware stack levels required when called:    7
 31520 ;; This function calls:
 31521 ;;		_cleanBuffer
 31522 ;; This function is called by:
 31523 ;;		_RemoveSpaces
 31524 ;;		_StringAddEqual
 31525 ;;		_LCD_Scroll
 31526 ;; This function uses a non-reentrant model
 31527 ;;
 31528                           
 31529                           	psect	text85
 31530  01650E                     __ptext85:
 31531                           	opt stack 0
 31532  01650E                     _BufferCopy:
 31533                           	opt stack 21
 31534                           
 31535                           ;MISC.c: 105: unsigned char i=0;
 31536                           
 31537                           ;incstack = 0
 31538  01650E  0E00               	movlw	0
 31539  016510  0101               	movlb	1	; () banked
 31540  016512  6F8A               	movwf	BufferCopy@i& (0+255),b
 31541                           
 31542                           ; BSR set to: 1
 31543                           ;MISC.c: 106: cleanBuffer(to,count);
 31544  016514  C186  F17C         	movff	BufferCopy@to,cleanBuffer@data
 31545  016518  C187  F17D         	movff	BufferCopy@to+1,cleanBuffer@data+1
 31546  01651C  C188  F17E         	movff	BufferCopy@count,cleanBuffer@count
 31547  016520  0101               	movlb	1	; () banked
 31548  016522  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 31549  016524  ECCB  F0BB         	call	_cleanBuffer	;wreg free
 31550                           
 31551                           ;MISC.c: 107: for(i = shift; i>0;i--)
 31552  016528  C189  F18A         	movff	BufferCopy@shift,BufferCopy@i
 31553  01652C                     l11683:
 31554  01652C  0101               	movlb	1	; () banked
 31555  01652E  518A               	movf	BufferCopy@i& (0+255),w,b
 31556  016530  0101               	movlb	1	; () banked
 31557  016532  B4D8               	btfsc	status,2,c
 31558  016534  D02E               	goto	l11703
 31559  016536  D001               	goto	l11687
 31560                           
 31561                           ; BSR set to: 1
 31562  016538  D02C               	goto	l11703
 31563  01653A                     l11687:
 31564                           
 31565                           ; BSR set to: 1
 31566                           ;MISC.c: 108: {
 31567                           ;MISC.c: 109: *to = ' ';
 31568  01653A  C186  FFD9         	movff	BufferCopy@to,fsr2l
 31569  01653E  C187  FFDA         	movff	BufferCopy@to+1,fsr2h
 31570  016542  0E20               	movlw	32
 31571  016544  6EDF               	movwf	indf2,c
 31572                           
 31573                           ; BSR set to: 1
 31574                           ;MISC.c: 110: to++;
 31575  016546  0101               	movlb	1	; () banked
 31576  016548  4B86               	infsnz	BufferCopy@to& (0+255),f,b
 31577  01654A  2B87               	incf	(BufferCopy@to+1)& (0+255),f,b
 31578                           
 31579                           ; BSR set to: 1
 31580  01654C  0101               	movlb	1	; () banked
 31581  01654E  078A               	decf	BufferCopy@i& (0+255),f,b
 31582  016550  D7ED               	goto	l11683
 31583                           
 31584                           ; BSR set to: 1
 31585                           ;MISC.c: 111: }
 31586                           ;MISC.c: 112: while(*from != 0 && count >0)
 31587                           
 31588                           ; BSR set to: 1
 31589  016552  D01F               	goto	l11703
 31590  016554                     l11695:
 31591                           
 31592                           ; BSR set to: 1
 31593                           ;MISC.c: 113: {
 31594                           ;MISC.c: 114: *to = *from;
 31595  016554  C184  FFF6         	movff	BufferCopy@from,tblptrl
 31596  016558  C185  FFF7         	movff	BufferCopy@from+1,tblptrh
 31597  01655C  0E00               	movlw	low (__mediumconst shr (0+16))
 31598  01655E  6EF8               	movwf	tblptru,c
 31599  016560  C186  FFD9         	movff	BufferCopy@to,fsr2l
 31600  016564  C187  FFDA         	movff	BufferCopy@to+1,fsr2h
 31601  016568  0E0C               	movlw	(high __ramtop+-1)
 31602  01656A  64F7               	cpfsgt	tblptrh,c
 31603  01656C  D003               	bra	u14707
 31604  01656E  0008               	tblrd		*
 31605  016570  50F5               	movf	tablat,w,c
 31606  016572  D005               	bra	u14700
 31607  016574                     u14707:
 31608  016574  CFF6 FFE9          	movff	tblptrl,fsr0l
 31609  016578  CFF7 FFEA          	movff	tblptrh,fsr0h
 31610  01657C  50EF               	movf	indf0,w,c
 31611  01657E                     u14700:
 31612  01657E  6EDF               	movwf	indf2,c
 31613                           
 31614                           ;MISC.c: 115: from++;
 31615  016580  0101               	movlb	1	; () banked
 31616  016582  4B84               	infsnz	BufferCopy@from& (0+255),f,b
 31617  016584  2B85               	incf	(BufferCopy@from+1)& (0+255),f,b
 31618                           
 31619                           ; BSR set to: 1
 31620                           ;MISC.c: 116: to++;
 31621  016586  0101               	movlb	1	; () banked
 31622  016588  4B86               	infsnz	BufferCopy@to& (0+255),f,b
 31623  01658A  2B87               	incf	(BufferCopy@to+1)& (0+255),f,b
 31624                           
 31625                           ; BSR set to: 1
 31626                           ;MISC.c: 117: count--;
 31627  01658C  0101               	movlb	1	; () banked
 31628  01658E  0788               	decf	BufferCopy@count& (0+255),f,b
 31629  016590  D000               	goto	l11703
 31630  016592                     l11703:
 31631                           
 31632                           ; BSR set to: 1
 31633  016592  C184  FFF6         	movff	BufferCopy@from,tblptrl
 31634  016596  C185  FFF7         	movff	BufferCopy@from+1,tblptrh
 31635  01659A  0E00               	movlw	low (__mediumconst shr (0+16))
 31636  01659C  6EF8               	movwf	tblptru,c
 31637  01659E  0E0C               	movlw	(high __ramtop+-1)
 31638  0165A0  64F7               	cpfsgt	tblptrh,c
 31639  0165A2  D003               	bra	u14717
 31640  0165A4  0008               	tblrd		*
 31641  0165A6  50F5               	movf	tablat,w,c
 31642  0165A8  D005               	bra	u14710
 31643  0165AA                     u14717:
 31644  0165AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 31645  0165AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 31646  0165B2  50EF               	movf	indf0,w,c
 31647  0165B4                     u14710:
 31648  0165B4  0900               	iorlw	0
 31649  0165B6  B4D8               	btfsc	status,2,c
 31650  0165B8  0012               	return	
 31651  0165BA  0101               	movlb	1	; () banked
 31652  0165BC  5188               	movf	BufferCopy@count& (0+255),w,b
 31653  0165BE  0101               	movlb	1	; () banked
 31654  0165C0  B4D8               	btfsc	status,2,c
 31655  0165C2  0012               	return	
 31656  0165C4  D7C7               	goto	l11695
 31657                           
 31658                           ; BSR set to: 1
 31659  0165C6  0012               	return	
 31660                           
 31661                           ; BSR set to: 1
 31662  0165C8  0012               	return		;funcret
 31663  0165CA                     __end_of_BufferCopy:
 31664                           	opt stack 0
 31665                           tblptru	equ	0xFF8
 31666                           tblptrh	equ	0xFF7
 31667                           tblptrl	equ	0xFF6
 31668                           tablat	equ	0xFF5
 31669                           prodh	equ	0xFF4
 31670                           prodl	equ	0xFF3
 31671                           intcon	equ	0xFF2
 31672                           intcon2	equ	0xFF1
 31673                           indf0	equ	0xFEF
 31674                           postinc0	equ	0xFEE
 31675                           plusw0	equ	0xFEB
 31676                           fsr0h	equ	0xFEA
 31677                           fsr0l	equ	0xFE9
 31678                           wreg	equ	0xFE8
 31679                           indf1	equ	0xFE7
 31680                           postdec1	equ	0xFE5
 31681                           fsr1h	equ	0xFE2
 31682                           fsr1l	equ	0xFE1
 31683                           indf2	equ	0xFDF
 31684                           postinc2	equ	0xFDE
 31685                           postdec2	equ	0xFDD
 31686                           plusw2	equ	0xFDB
 31687                           fsr2h	equ	0xFDA
 31688                           fsr2l	equ	0xFD9
 31689                           status	equ	0xFD8
 31690                           
 31691 ;; *************** function _cleanBuffer *****************
 31692 ;; Defined at:
 31693 ;;		line 75 in file "MISC.c"
 31694 ;; Parameters:    Size  Location     Type
 31695 ;;  data            2   14[BANK1 ] PTR unsigned char 
 31696 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 31697 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 31698 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 31699 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 31700 ;;  count           2   16[BANK1 ] int 
 31701 ;; Auto vars:     Size  Location     Type
 31702 ;;  i               1   21[BANK1 ] unsigned char 
 31703 ;; Return value:  Size  Location     Type
 31704 ;;		None               void
 31705 ;; Registers used:
 31706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31707 ;; Tracked objects:
 31708 ;;		On entry : 0/0
 31709 ;;		On exit  : 0/0
 31710 ;;		Unchanged: 0/0
 31711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31712 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31713 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31714 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 31715 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 31716 ;;Total ram usage:        8 bytes
 31717 ;; Hardware stack levels used:    1
 31718 ;; Hardware stack levels required when called:    6
 31719 ;; This function calls:
 31720 ;;		Nothing
 31721 ;; This function is called by:
 31722 ;;		_main
 31723 ;;		_BufferCopy
 31724 ;;		_RemoveSpaces
 31725 ;;		_StringAddEqual
 31726 ;;		_Command
 31727 ;;		_LCDScreenUpdate
 31728 ;; This function uses a non-reentrant model
 31729 ;;
 31730                           
 31731                           	psect	text86
 31732  017796                     __ptext86:
 31733                           	opt stack 0
 31734  017796                     _cleanBuffer:
 31735                           	opt stack 24
 31736                           
 31737                           ;MISC.c: 77: unsigned char i=0;
 31738                           
 31739                           ;incstack = 0
 31740  017796  0E00               	movlw	0
 31741  017798  0101               	movlb	1	; () banked
 31742  01779A  6F83               	movwf	cleanBuffer@i& (0+255),b
 31743                           
 31744                           ;MISC.c: 78: for(i=0; i<count;i++)
 31745  01779C  0E00               	movlw	0
 31746  01779E  0101               	movlb	1	; () banked
 31747  0177A0  6F83               	movwf	cleanBuffer@i& (0+255),b
 31748  0177A2  D010               	goto	l11295
 31749  0177A4                     l11291:
 31750                           
 31751                           ; BSR set to: 1
 31752                           ;MISC.c: 79: {
 31753                           ;MISC.c: 80: data[i]= 0;
 31754  0177A4  0101               	movlb	1	; () banked
 31755  0177A6  5183               	movf	cleanBuffer@i& (0+255),w,b
 31756  0177A8  0D01               	mullw	1
 31757  0177AA  50F3               	movf	prodl,w,c
 31758  0177AC  0101               	movlb	1	; () banked
 31759  0177AE  257C               	addwf	cleanBuffer@data& (0+255),w,b
 31760  0177B0  6ED9               	movwf	fsr2l,c
 31761  0177B2  50F4               	movf	prodh,w,c
 31762  0177B4  0101               	movlb	1	; () banked
 31763  0177B6  217D               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 31764  0177B8  6EDA               	movwf	fsr2h,c
 31765  0177BA  0E00               	movlw	0
 31766  0177BC  6EDF               	movwf	indf2,c
 31767                           
 31768                           ; BSR set to: 1
 31769  0177BE  0101               	movlb	1	; () banked
 31770  0177C0  2B83               	incf	cleanBuffer@i& (0+255),f,b
 31771  0177C2  D000               	goto	l11295
 31772  0177C4                     l11295:
 31773                           
 31774                           ; BSR set to: 1
 31775  0177C4  0101               	movlb	1	; () banked
 31776  0177C6  5183               	movf	cleanBuffer@i& (0+255),w,b
 31777  0177C8  0101               	movlb	1	; () banked
 31778  0177CA  6F80               	movwf	??_cleanBuffer& (0+255),b
 31779  0177CC  6B81               	clrf	(??_cleanBuffer+1)& (0+255),b
 31780  0177CE  0101               	movlb	1	; () banked
 31781  0177D0  517E               	movf	cleanBuffer@count& (0+255),w,b
 31782  0177D2  0101               	movlb	1	; () banked
 31783  0177D4  5D80               	subwf	??_cleanBuffer& (0+255),w,b
 31784  0177D6  0101               	movlb	1	; () banked
 31785  0177D8  5181               	movf	(??_cleanBuffer+1)& (0+255),w,b
 31786  0177DA  0A80               	xorlw	128
 31787  0177DC  0101               	movlb	1	; () banked
 31788  0177DE  6F82               	movwf	(??_cleanBuffer+2)& (0+255),b
 31789  0177E0  0101               	movlb	1	; () banked
 31790  0177E2  517F               	movf	(cleanBuffer@count+1)& (0+255),w,b
 31791  0177E4  0A80               	xorlw	128
 31792  0177E6  0101               	movlb	1	; () banked
 31793  0177E8  5982               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 31794  0177EA  A0D8               	btfss	status,0,c
 31795  0177EC  D7DB               	goto	l11291
 31796                           
 31797                           ; BSR set to: 1
 31798                           
 31799                           ; BSR set to: 1
 31800  0177EE  0012               	return		;funcret
 31801  0177F0                     __end_of_cleanBuffer:
 31802                           	opt stack 0
 31803                           tblptru	equ	0xFF8
 31804                           tblptrh	equ	0xFF7
 31805                           tblptrl	equ	0xFF6
 31806                           tablat	equ	0xFF5
 31807                           prodh	equ	0xFF4
 31808                           prodl	equ	0xFF3
 31809                           intcon	equ	0xFF2
 31810                           intcon2	equ	0xFF1
 31811                           indf0	equ	0xFEF
 31812                           postinc0	equ	0xFEE
 31813                           plusw0	equ	0xFEB
 31814                           fsr0h	equ	0xFEA
 31815                           fsr0l	equ	0xFE9
 31816                           wreg	equ	0xFE8
 31817                           indf1	equ	0xFE7
 31818                           postdec1	equ	0xFE5
 31819                           fsr1h	equ	0xFE2
 31820                           fsr1l	equ	0xFE1
 31821                           indf2	equ	0xFDF
 31822                           postinc2	equ	0xFDE
 31823                           postdec2	equ	0xFDD
 31824                           plusw2	equ	0xFDB
 31825                           fsr2h	equ	0xFDA
 31826                           fsr2l	equ	0xFD9
 31827                           status	equ	0xFD8
 31828                           
 31829 ;; *************** function _InternalADC_Read *****************
 31830 ;; Defined at:
 31831 ;;		line 110 in file "ADC.c"
 31832 ;; Parameters:    Size  Location     Type
 31833 ;;  channel         1    wreg     unsigned char 
 31834 ;; Auto vars:     Size  Location     Type
 31835 ;;  channel         1   33[BANK1 ] unsigned char 
 31836 ;; Return value:  Size  Location     Type
 31837 ;;                  2   29[BANK1 ] int 
 31838 ;; Registers used:
 31839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31840 ;; Tracked objects:
 31841 ;;		On entry : 0/0
 31842 ;;		On exit  : 0/0
 31843 ;;		Unchanged: 0/0
 31844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31845 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31846 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31847 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31848 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 31849 ;;Total ram usage:        5 bytes
 31850 ;; Hardware stack levels used:    1
 31851 ;; Hardware stack levels required when called:    9
 31852 ;; This function calls:
 31853 ;;		_UARTstring
 31854 ;; This function is called by:
 31855 ;;		_Command
 31856 ;;		_RTC_INIT
 31857 ;; This function uses a non-reentrant model
 31858 ;;
 31859                           
 31860                           	psect	text87
 31861  017546                     __ptext87:
 31862                           	opt stack 0
 31863  017546                     _InternalADC_Read:
 31864                           	opt stack 20
 31865                           
 31866                           ; BSR set to: 1
 31867                           ;incstack = 0
 31868                           ;InternalADC_Read@channel stored from wreg
 31869  017546  0101               	movlb	1	; () banked
 31870  017548  6F8F               	movwf	InternalADC_Read@channel& (0+255),b
 31871                           
 31872                           ; BSR set to: 1
 31873                           ;ADC.c: 112: ADCON0 =0;
 31874  01754A  0E00               	movlw	0
 31875  01754C  6EC2               	movwf	4034,c	;volatile
 31876                           
 31877                           ; BSR set to: 1
 31878                           ;ADC.c: 113: if(channel > 10)
 31879  01754E  0E0A               	movlw	10
 31880  017550  0101               	movlb	1	; () banked
 31881  017552  658F               	cpfsgt	InternalADC_Read@channel& (0+255),b
 31882  017554  D00E               	goto	l13121
 31883                           
 31884                           ; BSR set to: 1
 31885                           ;ADC.c: 114: {
 31886                           ;ADC.c: 115: UARTstring("ADC Channel Out of Bounds");
 31887  017556  0E95               	movlw	low STR_320
 31888  017558  0101               	movlb	1	; () banked
 31889  01755A  6F87               	movwf	UARTstring@data& (0+255),b
 31890  01755C  0EF5               	movlw	high STR_320
 31891  01755E  0101               	movlb	1	; () banked
 31892  017560  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 31893  017562  ECEB  F0B4         	call	_UARTstring	;wreg free
 31894                           
 31895                           ;ADC.c: 116: return 0;
 31896  017566  0E00               	movlw	0
 31897  017568  0101               	movlb	1	; () banked
 31898  01756A  6F8C               	movwf	(?_InternalADC_Read+1)& (0+255),b
 31899  01756C  0E00               	movlw	0
 31900  01756E  6F8B               	movwf	?_InternalADC_Read& (0+255),b
 31901                           
 31902                           ; BSR set to: 1
 31903  017570  0012               	return	
 31904  017572                     l13121:
 31905                           
 31906                           ; BSR set to: 1
 31907                           ;ADC.c: 117: }
 31908                           ;ADC.c: 118: ADCON0 |= (channel << 2);
 31909  017572  0101               	movlb	1	; () banked
 31910  017574  458F               	rlncf	InternalADC_Read@channel& (0+255),w,b
 31911  017576  46E8               	rlncf	wreg,f,c
 31912  017578  0BFC               	andlw	252
 31913  01757A  12C2               	iorwf	4034,f,c	;volatile
 31914                           
 31915                           ;ADC.c: 119: ADCON2 |= 0b10100000;
 31916  01757C  0EA0               	movlw	160
 31917  01757E  12C0               	iorwf	4032,f,c	;volatile
 31918                           
 31919                           ;ADC.c: 120: ADCON2 |= 0b00000110;
 31920  017580  0E06               	movlw	6
 31921  017582  12C0               	iorwf	4032,f,c	;volatile
 31922                           
 31923                           ; BSR set to: 1
 31924                           ;ADC.c: 121: ADCON0 |= 0b00000001;
 31925  017584  80C2               	bsf	4034,0,c	;volatile
 31926                           
 31927                           ; BSR set to: 1
 31928                           ;ADC.c: 122: (PIE1bits.ADIE=0);
 31929  017586  9C9D               	bcf	3997,6,c	;volatile
 31930                           
 31931                           ; BSR set to: 1
 31932                           ;ADC.c: 123: ADCON0 |= 0b00000010;
 31933  017588  82C2               	bsf	4034,1,c	;volatile
 31934                           
 31935                           ;ADC.c: 124: while(ADCON0 & 0b00000010);
 31936  01758A  D000               	goto	l980
 31937  01758C                     l980:
 31938                           
 31939                           ; BSR set to: 1
 31940  01758C  B2C2               	btfsc	4034,1,c	;volatile
 31941  01758E  D7FE               	goto	l980
 31942                           
 31943                           ; BSR set to: 1
 31944                           ;ADC.c: 125: return ((ADRESH << 8) + ADRESL);
 31945                           
 31946                           ; BSR set to: 1
 31947  017590  50C4               	movf	4036,w,c	;volatile
 31948  017592  0101               	movlb	1	; () banked
 31949  017594  6F8E               	movwf	(??_InternalADC_Read+1)& (0+255),b
 31950  017596  6B8D               	clrf	??_InternalADC_Read& (0+255),b
 31951  017598  50C3               	movf	4035,w,c	;volatile
 31952  01759A  0101               	movlb	1	; () banked
 31953  01759C  258D               	addwf	??_InternalADC_Read& (0+255),w,b
 31954  01759E  0101               	movlb	1	; () banked
 31955  0175A0  6F8B               	movwf	?_InternalADC_Read& (0+255),b
 31956  0175A2  0E00               	movlw	0
 31957  0175A4  0101               	movlb	1	; () banked
 31958  0175A6  218E               	addwfc	(??_InternalADC_Read+1)& (0+255),w,b
 31959  0175A8  0101               	movlb	1	; () banked
 31960  0175AA  6F8C               	movwf	(?_InternalADC_Read+1)& (0+255),b
 31961  0175AC  0012               	return	
 31962                           
 31963                           ; BSR set to: 1
 31964                           
 31965                           ; BSR set to: 1
 31966  0175AE  0012               	return		;funcret
 31967  0175B0                     __end_of_InternalADC_Read:
 31968                           	opt stack 0
 31969                           tblptru	equ	0xFF8
 31970                           tblptrh	equ	0xFF7
 31971                           tblptrl	equ	0xFF6
 31972                           tablat	equ	0xFF5
 31973                           prodh	equ	0xFF4
 31974                           prodl	equ	0xFF3
 31975                           intcon	equ	0xFF2
 31976                           intcon2	equ	0xFF1
 31977                           indf0	equ	0xFEF
 31978                           postinc0	equ	0xFEE
 31979                           plusw0	equ	0xFEB
 31980                           fsr0h	equ	0xFEA
 31981                           fsr0l	equ	0xFE9
 31982                           wreg	equ	0xFE8
 31983                           indf1	equ	0xFE7
 31984                           postdec1	equ	0xFE5
 31985                           fsr1h	equ	0xFE2
 31986                           fsr1l	equ	0xFE1
 31987                           indf2	equ	0xFDF
 31988                           postinc2	equ	0xFDE
 31989                           postdec2	equ	0xFDD
 31990                           plusw2	equ	0xFDB
 31991                           fsr2h	equ	0xFDA
 31992                           fsr2l	equ	0xFD9
 31993                           status	equ	0xFD8
 31994                           
 31995 ;; *************** function _UARTstring *****************
 31996 ;; Defined at:
 31997 ;;		line 237 in file "UART.c"
 31998 ;; Parameters:    Size  Location     Type
 31999 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 32000 ;;		 -> STR_320(26), STR_319(3), STR_317(18), STR_315(18), 
 32001 ;;		 -> STR_311(20), STR_288(24), STR_285(3), STR_283(15), 
 32002 ;;		 -> STR_282(22), STR_281(50), STR_280(8), STR_279(6), 
 32003 ;;		 -> STR_278(6), STR_277(11), STR_276(17), STR_275(12), 
 32004 ;;		 -> STR_274(13), STR_273(10), STR_272(12), STR_267(28), 
 32005 ;;		 -> STR_266(68), STR_265(9), STR_264(11), STR_263(23), 
 32006 ;;		 -> STR_261(19), STR_259(20), STR_256(20), STR_247(21), 
 32007 ;;		 -> STR_246(61), STR_245(69), STR_244(7), STR_243(7), 
 32008 ;;		 -> STR_242(10), STR_241(11), STR_240(29), STR_239(13), 
 32009 ;;		 -> STR_238(33), STR_237(25), STR_236(28), STR_235(3), 
 32010 ;;		 -> STR_234(26), STR_233(2), STR_232(34), STR_231(37), 
 32011 ;;		 -> STR_228(24), STR_224(3), STR_214(13), STR_213(73), 
 32012 ;;		 -> STR_212(5), STR_211(12), STR_210(17), STR_204(28), 
 32013 ;;		 -> STR_202(30), STR_200(33), STR_193(42), STR_192(62), 
 32014 ;;		 -> STR_191(26), STR_187(43), STR_185(48), STR_183(27), 
 32015 ;;		 -> STR_176(42), STR_175(66), STR_174(25), STR_172(49), 
 32016 ;;		 -> Command@buf(200), STR_168(33), STR_166(38), STR_164(27), 
 32017 ;;		 -> STR_163(28), STR_153(37), STR_152(68), STR_151(18), 
 32018 ;;		 -> STR_150(15), STR_149(11), STR_148(28), STR_146(18), 
 32019 ;;		 -> STR_144(32), STR_140(31), STR_136(38), STR_123(24), 
 32020 ;;		 -> STR_122(68), STR_121(10), STR_120(6), STR_119(8), 
 32021 ;;		 -> STR_118(11), STR_117(21), STR_115(16), STR_113(19), 
 32022 ;;		 -> STR_110(18), STR_107(16), STR_104(15), STR_101(22), 
 32023 ;;		 -> STR_89(27), STR_88(68), STR_87(7), STR_86(8), 
 32024 ;;		 -> STR_85(11), STR_84(24), STR_82(19), STR_80(19), 
 32025 ;;		 -> STR_77(18), STR_74(25), STR_65(17), STR_64(68), 
 32026 ;;		 -> STR_63(8), STR_62(7), STR_61(11), STR_60(17), 
 32027 ;;		 -> STR_58(12), STR_56(9), STR_53(8), STR_50(13), 
 32028 ;;		 -> STR_47(9), STR_44(8), STR_41(13), STR_36(4), 
 32029 ;;		 -> STR_35(22), STR_29(22), STR_28(3), SetBaud@buf(50), 
 32030 ;;		 -> STR_22(4), STR_21(29), STR_11(12), STR_8(54), 
 32031 ;;		 -> STR_7(3), Version(20), STR_6(19), STR_5(38), 
 32032 ;;		 -> low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), STR_2(2), 
 32033 ;;		 -> STR_1(2), 
 32034 ;; Auto vars:     Size  Location     Type
 32035 ;;		None
 32036 ;; Return value:  Size  Location     Type
 32037 ;;		None               void
 32038 ;; Registers used:
 32039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32040 ;; Tracked objects:
 32041 ;;		On entry : 0/0
 32042 ;;		On exit  : 0/0
 32043 ;;		Unchanged: 0/0
 32044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32045 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 32046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32047 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 32048 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32049 ;;Total ram usage:        4 bytes
 32050 ;; Hardware stack levels used:    1
 32051 ;; Hardware stack levels required when called:    8
 32052 ;; This function calls:
 32053 ;;		_UARTchar
 32054 ;; This function is called by:
 32055 ;;		_main
 32056 ;;		_SetBaud
 32057 ;;		_Command
 32058 ;;		_InternalADC_Read
 32059 ;; This function uses a non-reentrant model
 32060 ;;
 32061                           
 32062                           	psect	text88
 32063  0169D6                     __ptext88:
 32064                           	opt stack 0
 32065  0169D6                     _UARTstring:
 32066                           	opt stack 22
 32067  0169D6                     
 32068                           ;UART.c: 240: {
 32069                           ;UART.c: 241: if(*data != 0)
 32070  0169D6  C187  FFF6         	movff	UARTstring@data,tblptrl
 32071  0169DA  C188  FFF7         	movff	UARTstring@data+1,tblptrh
 32072  0169DE  0E00               	movlw	low (__mediumconst shr (0+16))
 32073  0169E0  6EF8               	movwf	tblptru,c
 32074  0169E2  0E0C               	movlw	(high __ramtop+-1)
 32075  0169E4  64F7               	cpfsgt	tblptrh,c
 32076  0169E6  D003               	bra	u14567
 32077  0169E8  0008               	tblrd		*
 32078  0169EA  50F5               	movf	tablat,w,c
 32079  0169EC  D005               	bra	u14560
 32080  0169EE                     u14567:
 32081  0169EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 32082  0169F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 32083  0169F6  50EF               	movf	indf0,w,c
 32084  0169F8                     u14560:
 32085  0169F8  0900               	iorlw	0
 32086  0169FA  B4D8               	btfsc	status,2,c
 32087  0169FC  D01E               	goto	l11651
 32088                           
 32089                           ;UART.c: 242: {
 32090                           ;UART.c: 243: UARTchar((unsigned char) *data, 0, 0);
 32091  0169FE  0E00               	movlw	0
 32092  016A00  0101               	movlb	1	; () banked
 32093  016A02  6F83               	movwf	UARTchar@NinethBit_override& (0+255),b
 32094  016A04  0E00               	movlw	0
 32095  016A06  0101               	movlb	1	; () banked
 32096  016A08  6F84               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 32097  016A0A  C187  FFF6         	movff	UARTstring@data,tblptrl
 32098  016A0E  C188  FFF7         	movff	UARTstring@data+1,tblptrh
 32099  016A12  0E00               	movlw	low (__mediumconst shr (0+16))
 32100  016A14  6EF8               	movwf	tblptru,c
 32101  016A16  0E0C               	movlw	(high __ramtop+-1)
 32102  016A18  64F7               	cpfsgt	tblptrh,c
 32103  016A1A  D003               	bra	u14587
 32104  016A1C  0008               	tblrd		*
 32105  016A1E  50F5               	movf	tablat,w,c
 32106  016A20  D005               	bra	u14580
 32107  016A22                     u14587:
 32108  016A22  CFF6 FFE9          	movff	tblptrl,fsr0l
 32109  016A26  CFF7 FFEA          	movff	tblptrh,fsr0h
 32110  016A2A  50EF               	movf	indf0,w,c
 32111  016A2C                     u14580:
 32112  016A2C  ECAC  F0B6         	call	_UARTchar
 32113                           
 32114                           ;UART.c: 244: while((!TXSTAbits.TRMT));
 32115  016A30  D000               	goto	l523
 32116  016A32                     l523:
 32117  016A32  B2AC               	btfsc	4012,1,c	;volatile
 32118  016A34  D002               	goto	l11651
 32119  016A36  D7FD               	goto	l523
 32120  016A38  D000               	goto	l11651
 32121  016A3A                     l11651:
 32122                           
 32123                           ;UART.c: 245: }
 32124                           ;UART.c: 246: } while( *data++);
 32125  016A3A  0101               	movlb	1	; () banked
 32126  016A3C  5187               	movf	UARTstring@data& (0+255),w,b
 32127  016A3E  0101               	movlb	1	; () banked
 32128  016A40  6F89               	movwf	??_UARTstring& (0+255),b
 32129  016A42  0101               	movlb	1	; () banked
 32130  016A44  5188               	movf	(UARTstring@data+1)& (0+255),w,b
 32131  016A46  0101               	movlb	1	; () banked
 32132  016A48  6F8A               	movwf	(??_UARTstring+1)& (0+255),b
 32133  016A4A  0101               	movlb	1	; () banked
 32134  016A4C  4B87               	infsnz	UARTstring@data& (0+255),f,b
 32135  016A4E  2B88               	incf	(UARTstring@data+1)& (0+255),f,b
 32136  016A50  C189  FFF6         	movff	??_UARTstring,tblptrl
 32137  016A54  C18A  FFF7         	movff	??_UARTstring+1,tblptrh
 32138  016A58  0E00               	movlw	low (__mediumconst shr (0+16))
 32139  016A5A  6EF8               	movwf	tblptru,c
 32140  016A5C  0E0C               	movlw	(high __ramtop+-1)
 32141  016A5E  64F7               	cpfsgt	tblptrh,c
 32142  016A60  D003               	bra	u14607
 32143  016A62  0008               	tblrd		*
 32144  016A64  50F5               	movf	tablat,w,c
 32145  016A66  D005               	bra	u14600
 32146  016A68                     u14607:
 32147  016A68  CFF6 FFE9          	movff	tblptrl,fsr0l
 32148  016A6C  CFF7 FFEA          	movff	tblptrh,fsr0h
 32149  016A70  50EF               	movf	indf0,w,c
 32150  016A72                     u14600:
 32151  016A72  0900               	iorlw	0
 32152  016A74  A4D8               	btfss	status,2,c
 32153  016A76  D7AF               	goto	l11647
 32154  016A78  0012               	return		;funcret
 32155  016A7A                     __end_of_UARTstring:
 32156                           	opt stack 0
 32157                           tblptru	equ	0xFF8
 32158                           tblptrh	equ	0xFF7
 32159                           tblptrl	equ	0xFF6
 32160                           tablat	equ	0xFF5
 32161                           prodh	equ	0xFF4
 32162                           prodl	equ	0xFF3
 32163                           intcon	equ	0xFF2
 32164                           intcon2	equ	0xFF1
 32165                           indf0	equ	0xFEF
 32166                           postinc0	equ	0xFEE
 32167                           plusw0	equ	0xFEB
 32168                           fsr0h	equ	0xFEA
 32169                           fsr0l	equ	0xFE9
 32170                           wreg	equ	0xFE8
 32171                           indf1	equ	0xFE7
 32172                           postdec1	equ	0xFE5
 32173                           fsr1h	equ	0xFE2
 32174                           fsr1l	equ	0xFE1
 32175                           indf2	equ	0xFDF
 32176                           postinc2	equ	0xFDE
 32177                           postdec2	equ	0xFDD
 32178                           plusw2	equ	0xFDB
 32179                           fsr2h	equ	0xFDA
 32180                           fsr2l	equ	0xFD9
 32181                           status	equ	0xFD8
 32182                           
 32183 ;; *************** function _UARTchar *****************
 32184 ;; Defined at:
 32185 ;;		line 198 in file "UART.c"
 32186 ;; Parameters:    Size  Location     Type
 32187 ;;  data            1    wreg     unsigned char 
 32188 ;;  NinethBit_ov    1   21[BANK1 ] unsigned char 
 32189 ;;  NinethBit_ov    1   22[BANK1 ] unsigned char 
 32190 ;; Auto vars:     Size  Location     Type
 32191 ;;  data            1   24[BANK1 ] unsigned char 
 32192 ;; Return value:  Size  Location     Type
 32193 ;;		None               void
 32194 ;; Registers used:
 32195 ;;		wreg, status,2, status,0, cstack
 32196 ;; Tracked objects:
 32197 ;;		On entry : 0/0
 32198 ;;		On exit  : 0/0
 32199 ;;		Unchanged: 0/0
 32200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32201 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 32202 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32203 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32204 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32205 ;;Total ram usage:        4 bytes
 32206 ;; Hardware stack levels used:    1
 32207 ;; Hardware stack levels required when called:    7
 32208 ;; This function calls:
 32209 ;;		_CheckSum_byte
 32210 ;; This function is called by:
 32211 ;;		_UARTstring
 32212 ;;		_UARTstringWAIT
 32213 ;; This function uses a non-reentrant model
 32214 ;;
 32215                           
 32216                           	psect	text89
 32217  016D58                     __ptext89:
 32218                           	opt stack 0
 32219  016D58                     _UARTchar:
 32220                           	opt stack 22
 32221                           
 32222                           ;incstack = 0
 32223                           ;UARTchar@data stored from wreg
 32224  016D58  0101               	movlb	1	; () banked
 32225  016D5A  6F86               	movwf	UARTchar@data& (0+255),b
 32226                           
 32227                           ; BSR set to: 1
 32228                           ;UART.c: 200: if(TXSTAbits.TX9)
 32229  016D5C  ACAC               	btfss	4012,6,c	;volatile
 32230  016D5E  D03A               	goto	l11285
 32231                           
 32232                           ; BSR set to: 1
 32233                           ;UART.c: 201: {
 32234                           ;UART.c: 203: if(!NinethBit_override)
 32235  016D60  0101               	movlb	1	; () banked
 32236  016D62  5183               	movf	UARTchar@NinethBit_override& (0+255),w,b
 32237  016D64  0101               	movlb	1	; () banked
 32238  016D66  B4D8               	btfsc	status,2,c
 32239  016D68  D01C               	goto	l11281
 32240  016D6A  D028               	goto	l11283
 32241                           
 32242                           ; BSR set to: 1
 32243                           ;UART.c: 204: {
 32244                           ;UART.c: 206: switch (PARITY)
 32245  016D6C  D01A               	goto	l11281
 32246  016D6E                     l11275:
 32247                           
 32248                           ; BSR set to: 1
 32249                           ;UART.c: 209: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 32250  016D6E  C186  F17C         	movff	UARTchar@data,CheckSum_byte@This
 32251  016D72  0101               	movlb	1	; () banked
 32252  016D74  6B7D               	clrf	(CheckSum_byte@This+1)& (0+255),b
 32253  016D76  0E03               	movlw	3
 32254  016D78  0101               	movlb	1	; () banked
 32255  016D7A  6F7E               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 32256  016D7C  EC0B  F0BB         	call	_CheckSum_byte	;wreg free
 32257  016D80  D009               	goto	L27
 32258  016D82                     l11277:
 32259                           
 32260                           ; BSR set to: 1
 32261                           ;UART.c: 212: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 32262  016D82  C186  F17C         	movff	UARTchar@data,CheckSum_byte@This
 32263  016D86  0101               	movlb	1	; () banked
 32264  016D88  6B7D               	clrf	(CheckSum_byte@This+1)& (0+255),b
 32265  016D8A  0E02               	movlw	2
 32266  016D8C  0101               	movlb	1	; () banked
 32267  016D8E  6F7E               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 32268  016D90  EC0B  F0BB         	call	_CheckSum_byte	;wreg free
 32269  016D94                     L27:
 32270  016D94  0101               	movlb	1	; () banked
 32271  016D96  6F85               	movwf	??_UARTchar& (0+255),b
 32272  016D98  D016               	goto	L28
 32273  016D9A                     l512:
 32274                           
 32275                           ; BSR set to: 1
 32276                           ;UART.c: 215: TXSTAbits.TX9D = 1;
 32277  016D9A  80AC               	bsf	4012,0,c	;volatile
 32278                           
 32279                           ;UART.c: 216: break;
 32280  016D9C  D01B               	goto	l11285
 32281  016D9E                     l513:
 32282                           
 32283                           ; BSR set to: 1
 32284                           ;UART.c: 218: TXSTAbits.TX9D = 0;
 32285  016D9E  90AC               	bcf	4012,0,c	;volatile
 32286                           
 32287                           ; BSR set to: 1
 32288                           ;UART.c: 220: }
 32289                           
 32290                           ;UART.c: 219: break;
 32291  016DA0  D019               	goto	l11285
 32292  016DA2                     l11281:
 32293                           
 32294                           ; BSR set to: 1
 32295  016DA2  0101               	movlb	1	; () banked
 32296  016DA4  510A               	movf	_PARITY& (0+255),w,b
 32297                           
 32298                           ; Switch size 1, requested type "space"
 32299                           ; Number of cases is 3, Range of values is 1 to 3
 32300                           ; switch strategies available:
 32301                           ; Name         Instructions Cycles
 32302                           ; simple_byte           10     6 (average)
 32303                           ;	Chosen strategy is simple_byte
 32304  016DA6  0A01               	xorlw	1	; case 1
 32305  016DA8  B4D8               	btfsc	status,2,c
 32306  016DAA  D7E1               	goto	l11275
 32307  016DAC  0A03               	xorlw	3	; case 2
 32308  016DAE  B4D8               	btfsc	status,2,c
 32309  016DB0  D7E8               	goto	l11277
 32310  016DB2  0A01               	xorlw	1	; case 3
 32311  016DB4  B4D8               	btfsc	status,2,c
 32312  016DB6  D7F1               	goto	l512
 32313  016DB8  D7F2               	goto	l513
 32314                           
 32315                           ; BSR set to: 1
 32316                           ;UART.c: 221: }
 32317  016DBA  D00C               	goto	l11285
 32318  016DBC                     l11283:
 32319                           
 32320                           ; BSR set to: 1
 32321                           ;UART.c: 222: else
 32322                           ;UART.c: 223: {
 32323                           ;UART.c: 224: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 32324  016DBC  C184  F185         	movff	UARTchar@NinethBit_override_data,??_UARTchar
 32325  016DC0  0E01               	movlw	1
 32326  016DC2  0101               	movlb	1	; () banked
 32327  016DC4  1785               	andwf	??_UARTchar& (0+255),f,b
 32328  016DC6                     L28:
 32329  016DC6  50AC               	movf	4012,w,c	;volatile
 32330  016DC8  0101               	movlb	1	; () banked
 32331  016DCA  1985               	xorwf	??_UARTchar& (0+255),w,b
 32332  016DCC  0BFE               	andlw	-2
 32333  016DCE  1985               	xorwf	??_UARTchar& (0+255),w,b
 32334  016DD0  6EAC               	movwf	4012,c	;volatile
 32335                           
 32336                           ; BSR set to: 1
 32337  016DD2  D000               	goto	l11285
 32338  016DD4                     l11285:
 32339                           
 32340                           ; BSR set to: 1
 32341                           ;UART.c: 225: }
 32342                           ;UART.c: 226: }
 32343                           ;UART.c: 227: TX_OLD = data;
 32344  016DD4  C186  F0DD         	movff	UARTchar@data,_TX_OLD
 32345                           
 32346                           ; BSR set to: 1
 32347                           ;UART.c: 228: TXREG = data;
 32348  016DD8  C186  FFAD         	movff	UARTchar@data,4013	;volatile
 32349                           
 32350                           ;UART.c: 229: while(!TXSTAbits.TRMT);
 32351  016DDC  D000               	goto	l515
 32352  016DDE                     l515:
 32353  016DDE  A2AC               	btfss	4012,1,c	;volatile
 32354  016DE0  D7FE               	goto	l515
 32355  016DE2  0012               	return		;funcret
 32356  016DE4                     __end_of_UARTchar:
 32357                           	opt stack 0
 32358                           tblptru	equ	0xFF8
 32359                           tblptrh	equ	0xFF7
 32360                           tblptrl	equ	0xFF6
 32361                           tablat	equ	0xFF5
 32362                           prodh	equ	0xFF4
 32363                           prodl	equ	0xFF3
 32364                           intcon	equ	0xFF2
 32365                           intcon2	equ	0xFF1
 32366                           indf0	equ	0xFEF
 32367                           postinc0	equ	0xFEE
 32368                           plusw0	equ	0xFEB
 32369                           fsr0h	equ	0xFEA
 32370                           fsr0l	equ	0xFE9
 32371                           wreg	equ	0xFE8
 32372                           indf1	equ	0xFE7
 32373                           postdec1	equ	0xFE5
 32374                           fsr1h	equ	0xFE2
 32375                           fsr1l	equ	0xFE1
 32376                           indf2	equ	0xFDF
 32377                           postinc2	equ	0xFDE
 32378                           postdec2	equ	0xFDD
 32379                           plusw2	equ	0xFDB
 32380                           fsr2h	equ	0xFDA
 32381                           fsr2l	equ	0xFD9
 32382                           status	equ	0xFD8
 32383                           
 32384 ;; *************** function _CheckSum_byte *****************
 32385 ;; Defined at:
 32386 ;;		line 359 in file "MISC.c"
 32387 ;; Parameters:    Size  Location     Type
 32388 ;;  This            2   14[BANK1 ] unsigned int 
 32389 ;;  Odd_Even        1   16[BANK1 ] unsigned char 
 32390 ;; Auto vars:     Size  Location     Type
 32391 ;;  ThisTemp        2   17[BANK1 ] unsigned int 
 32392 ;;  i               1   20[BANK1 ] unsigned char 
 32393 ;;  Parity          1   19[BANK1 ] unsigned char 
 32394 ;; Return value:  Size  Location     Type
 32395 ;;                  1    wreg      unsigned char 
 32396 ;; Registers used:
 32397 ;;		wreg, status,2, status,0
 32398 ;; Tracked objects:
 32399 ;;		On entry : 0/0
 32400 ;;		On exit  : 0/0
 32401 ;;		Unchanged: 0/0
 32402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32403 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 32404 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32406 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 32407 ;;Total ram usage:        7 bytes
 32408 ;; Hardware stack levels used:    1
 32409 ;; Hardware stack levels required when called:    6
 32410 ;; This function calls:
 32411 ;;		Nothing
 32412 ;; This function is called by:
 32413 ;;		_UARTchar
 32414 ;; This function uses a non-reentrant model
 32415 ;;
 32416                           
 32417                           	psect	text90
 32418  017616                     __ptext90:
 32419                           	opt stack 0
 32420  017616                     _CheckSum_byte:
 32421                           	opt stack 22
 32422                           
 32423                           ;MISC.c: 361: char i = 0;
 32424                           
 32425                           ;incstack = 0
 32426  017616  0E00               	movlw	0
 32427  017618  0101               	movlb	1	; () banked
 32428  01761A  6F82               	movwf	CheckSum_byte@i& (0+255),b
 32429                           
 32430                           ;MISC.c: 362: unsigned char Parity = 0;
 32431  01761C  0E00               	movlw	0
 32432  01761E  0101               	movlb	1	; () banked
 32433  017620  6F81               	movwf	CheckSum_byte@Parity& (0+255),b
 32434                           
 32435                           ; BSR set to: 1
 32436                           ;MISC.c: 363: unsigned int ThisTemp = This;
 32437  017622  C17C  F17F         	movff	CheckSum_byte@This,CheckSum_byte@ThisTemp
 32438  017626  C17D  F180         	movff	CheckSum_byte@This+1,CheckSum_byte@ThisTemp+1
 32439                           
 32440                           ;MISC.c: 365: for (i =0; i<8; i++)
 32441  01762A  0E00               	movlw	0
 32442  01762C  0101               	movlb	1	; () banked
 32443  01762E  6F82               	movwf	CheckSum_byte@i& (0+255),b
 32444  017630                     l11169:
 32445                           
 32446                           ; BSR set to: 1
 32447  017630  0E07               	movlw	7
 32448  017632  0101               	movlb	1	; () banked
 32449  017634  6582               	cpfsgt	CheckSum_byte@i& (0+255),b
 32450  017636  D001               	goto	l402
 32451                           
 32452                           ; BSR set to: 1
 32453  017638  D00C               	goto	l11177
 32454  01763A                     l402:
 32455                           
 32456                           ; BSR set to: 1
 32457                           ;MISC.c: 366: {
 32458                           ;MISC.c: 367: if((ThisTemp & 0x01) == 1)
 32459  01763A  0101               	movlb	1	; () banked
 32460  01763C  A17F               	btfss	CheckSum_byte@ThisTemp& (0+255),0,b
 32461  01763E  D002               	goto	l404
 32462                           
 32463                           ; BSR set to: 1
 32464                           ;MISC.c: 368: {
 32465                           ;MISC.c: 369: Parity++;
 32466  017640  0101               	movlb	1	; () banked
 32467  017642  2B81               	incf	CheckSum_byte@Parity& (0+255),f,b
 32468  017644                     l404:
 32469                           
 32470                           ; BSR set to: 1
 32471                           ;MISC.c: 370: }
 32472                           ;MISC.c: 371: ThisTemp >>= 1;
 32473  017644  0101               	movlb	1	; () banked
 32474  017646  90D8               	bcf	status,0,c
 32475  017648  3380               	rrcf	(CheckSum_byte@ThisTemp+1)& (0+255),f,b
 32476  01764A  337F               	rrcf	CheckSum_byte@ThisTemp& (0+255),f,b
 32477  01764C  0101               	movlb	1	; () banked
 32478  01764E  2B82               	incf	CheckSum_byte@i& (0+255),f,b
 32479  017650  D7EF               	goto	l11169
 32480  017652                     l11177:
 32481                           
 32482                           ; BSR set to: 1
 32483                           ;MISC.c: 372: }
 32484                           ;MISC.c: 373: if(Odd_Even == 3)
 32485  017652  0E03               	movlw	3
 32486  017654  0101               	movlb	1	; () banked
 32487  017656  197E               	xorwf	CheckSum_byte@Odd_Even& (0+255),w,b
 32488  017658  A4D8               	btfss	status,2,c
 32489  01765A  D007               	goto	l405
 32490                           
 32491                           ; BSR set to: 1
 32492                           ;MISC.c: 374: {
 32493                           ;MISC.c: 375: if(Parity % 2 == 0)
 32494  01765C  0101               	movlb	1	; () banked
 32495  01765E  B181               	btfsc	CheckSum_byte@Parity& (0+255),0,b
 32496  017660  D002               	goto	l11185
 32497                           
 32498                           ; BSR set to: 1
 32499                           ;MISC.c: 376: {
 32500                           ;MISC.c: 377: return 1;
 32501  017662  0E01               	movlw	1
 32502                           
 32503                           ; BSR set to: 1
 32504  017664  0012               	return	
 32505  017666                     l11185:
 32506                           
 32507                           ; BSR set to: 1
 32508                           ;MISC.c: 378: }
 32509                           ;MISC.c: 379: return 0;
 32510  017666  0E00               	movlw	0
 32511                           
 32512                           ; BSR set to: 1
 32513                           ;MISC.c: 380: }
 32514                           
 32515                           ; BSR set to: 1
 32516  017668  0012               	return	
 32517  01766A                     l405:
 32518                           
 32519                           ; BSR set to: 1
 32520                           ;MISC.c: 381: else
 32521                           ;MISC.c: 382: {
 32522                           ;MISC.c: 383: if(Parity % 2 == 1)
 32523  01766A  0101               	movlb	1	; () banked
 32524  01766C  A181               	btfss	CheckSum_byte@Parity& (0+255),0,b
 32525  01766E  D002               	goto	l11195
 32526                           
 32527                           ; BSR set to: 1
 32528                           ;MISC.c: 384: {
 32529                           ;MISC.c: 385: return 1;
 32530  017670  0E01               	movlw	1
 32531                           
 32532                           ; BSR set to: 1
 32533  017672  0012               	return	
 32534  017674                     l11195:
 32535                           
 32536                           ; BSR set to: 1
 32537                           ;MISC.c: 386: }
 32538                           ;MISC.c: 387: return 0;
 32539  017674  0E00               	movlw	0
 32540                           
 32541                           ; BSR set to: 1
 32542  017676  0012               	return	
 32543                           
 32544                           ; BSR set to: 1
 32545                           
 32546                           ; BSR set to: 1
 32547  017678  0012               	return		;funcret
 32548  01767A                     __end_of_CheckSum_byte:
 32549                           	opt stack 0
 32550                           tblptru	equ	0xFF8
 32551                           tblptrh	equ	0xFF7
 32552                           tblptrl	equ	0xFF6
 32553                           tablat	equ	0xFF5
 32554                           prodh	equ	0xFF4
 32555                           prodl	equ	0xFF3
 32556                           intcon	equ	0xFF2
 32557                           intcon2	equ	0xFF1
 32558                           indf0	equ	0xFEF
 32559                           postinc0	equ	0xFEE
 32560                           plusw0	equ	0xFEB
 32561                           fsr0h	equ	0xFEA
 32562                           fsr0l	equ	0xFE9
 32563                           wreg	equ	0xFE8
 32564                           indf1	equ	0xFE7
 32565                           postdec1	equ	0xFE5
 32566                           fsr1h	equ	0xFE2
 32567                           fsr1l	equ	0xFE1
 32568                           indf2	equ	0xFDF
 32569                           postinc2	equ	0xFDE
 32570                           postdec2	equ	0xFDD
 32571                           plusw2	equ	0xFDB
 32572                           fsr2h	equ	0xFDA
 32573                           fsr2l	equ	0xFD9
 32574                           status	equ	0xFD8
 32575                           
 32576 ;; *************** function _ISNUMBER *****************
 32577 ;; Defined at:
 32578 ;;		line 396 in file "MISC.c"
 32579 ;; Parameters:    Size  Location     Type
 32580 ;;  ascii           1    wreg     unsigned char 
 32581 ;; Auto vars:     Size  Location     Type
 32582 ;;  ascii           1   14[BANK1 ] unsigned char 
 32583 ;; Return value:  Size  Location     Type
 32584 ;;                  1    wreg      unsigned char 
 32585 ;; Registers used:
 32586 ;;		wreg, status,2, status,0
 32587 ;; Tracked objects:
 32588 ;;		On entry : 0/0
 32589 ;;		On exit  : 0/0
 32590 ;;		Unchanged: 0/0
 32591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32593 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32595 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 32596 ;;Total ram usage:        1 bytes
 32597 ;; Hardware stack levels used:    1
 32598 ;; Hardware stack levels required when called:    6
 32599 ;; This function calls:
 32600 ;;		Nothing
 32601 ;; This function is called by:
 32602 ;;		_Command
 32603 ;; This function uses a non-reentrant model
 32604 ;;
 32605                           
 32606                           	psect	text91
 32607  017E50                     __ptext91:
 32608                           	opt stack 0
 32609  017E50                     _ISNUMBER:
 32610                           	opt stack 23
 32611                           
 32612                           ; BSR set to: 1
 32613                           ;incstack = 0
 32614                           ;ISNUMBER@ascii stored from wreg
 32615  017E50  0101               	movlb	1	; () banked
 32616  017E52  6F7C               	movwf	ISNUMBER@ascii& (0+255),b
 32617                           
 32618                           ; BSR set to: 1
 32619                           ;MISC.c: 398: if(ascii >= '0' && ascii <='9')
 32620  017E54  0E2F               	movlw	47
 32621  017E56  0101               	movlb	1	; () banked
 32622  017E58  657C               	cpfsgt	ISNUMBER@ascii& (0+255),b
 32623  017E5A  D006               	goto	l12947
 32624                           
 32625                           ; BSR set to: 1
 32626  017E5C  0E3A               	movlw	58
 32627  017E5E  0101               	movlb	1	; () banked
 32628  017E60  617C               	cpfslt	ISNUMBER@ascii& (0+255),b
 32629  017E62  D002               	goto	l12947
 32630                           
 32631                           ; BSR set to: 1
 32632                           ;MISC.c: 399: {
 32633                           ;MISC.c: 400: return 1;
 32634  017E64  0E01               	movlw	1
 32635                           
 32636                           ; BSR set to: 1
 32637                           ;MISC.c: 401: }
 32638                           
 32639                           ; BSR set to: 1
 32640  017E66  0012               	return	
 32641  017E68                     l12947:
 32642                           
 32643                           ; BSR set to: 1
 32644                           ;MISC.c: 402: else
 32645                           ;MISC.c: 403: {
 32646                           ;MISC.c: 404: return 0;
 32647  017E68  0E00               	movlw	0
 32648                           
 32649                           ; BSR set to: 1
 32650  017E6A  0012               	return	
 32651                           
 32652                           ; BSR set to: 1
 32653                           
 32654                           ; BSR set to: 1
 32655  017E6C  0012               	return		;funcret
 32656  017E6E                     __end_of_ISNUMBER:
 32657                           	opt stack 0
 32658                           tblptru	equ	0xFF8
 32659                           tblptrh	equ	0xFF7
 32660                           tblptrl	equ	0xFF6
 32661                           tablat	equ	0xFF5
 32662                           prodh	equ	0xFF4
 32663                           prodl	equ	0xFF3
 32664                           intcon	equ	0xFF2
 32665                           intcon2	equ	0xFF1
 32666                           indf0	equ	0xFEF
 32667                           postinc0	equ	0xFEE
 32668                           plusw0	equ	0xFEB
 32669                           fsr0h	equ	0xFEA
 32670                           fsr0l	equ	0xFE9
 32671                           wreg	equ	0xFE8
 32672                           indf1	equ	0xFE7
 32673                           postdec1	equ	0xFE5
 32674                           fsr1h	equ	0xFE2
 32675                           fsr1l	equ	0xFE1
 32676                           indf2	equ	0xFDF
 32677                           postinc2	equ	0xFDE
 32678                           postdec2	equ	0xFDD
 32679                           plusw2	equ	0xFDB
 32680                           fsr2h	equ	0xFDA
 32681                           fsr2l	equ	0xFD9
 32682                           status	equ	0xFD8
 32683                           
 32684 ;; *************** function _GetEnteredNumber *****************
 32685 ;; Defined at:
 32686 ;;		line 216 in file "MISC.c"
 32687 ;; Parameters:    Size  Location     Type
 32688 ;;  This            2   26[BANK1 ] PTR unsigned char 
 32689 ;;		 -> Rxdata(100), 
 32690 ;; Auto vars:     Size  Location     Type
 32691 ;;  temp            4   37[BANK1 ] long 
 32692 ;;  negative        1   36[BANK1 ] unsigned char 
 32693 ;;  i               1   35[BANK1 ] unsigned char 
 32694 ;; Return value:  Size  Location     Type
 32695 ;;                  4   26[BANK1 ] long 
 32696 ;; Registers used:
 32697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32698 ;; Tracked objects:
 32699 ;;		On entry : 0/0
 32700 ;;		On exit  : 0/0
 32701 ;;		Unchanged: 0/0
 32702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32703 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32704 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 32705 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 32706 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 32707 ;;Total ram usage:       15 bytes
 32708 ;; Hardware stack levels used:    1
 32709 ;; Hardware stack levels required when called:    7
 32710 ;; This function calls:
 32711 ;;		___lmul
 32712 ;; This function is called by:
 32713 ;;		_Command
 32714 ;; This function uses a non-reentrant model
 32715 ;;
 32716                           
 32717                           	psect	text92
 32718  014C88                     __ptext92:
 32719                           	opt stack 0
 32720  014C88                     _GetEnteredNumber:
 32721                           	opt stack 22
 32722                           
 32723                           ;MISC.c: 218: unsigned char i =0;
 32724                           
 32725                           ; BSR set to: 1
 32726                           ;incstack = 0
 32727  014C88  0E00               	movlw	0
 32728  014C8A  0101               	movlb	1	; () banked
 32729  014C8C  6F91               	movwf	GetEnteredNumber@i& (0+255),b
 32730                           
 32731                           ;MISC.c: 219: long temp =0;
 32732  014C8E  0E00               	movlw	0
 32733  014C90  0101               	movlb	1	; () banked
 32734  014C92  6F93               	movwf	GetEnteredNumber@temp& (0+255),b
 32735  014C94  0E00               	movlw	0
 32736  014C96  6F94               	movwf	(GetEnteredNumber@temp+1)& (0+255),b
 32737  014C98  0E00               	movlw	0
 32738  014C9A  6F95               	movwf	(GetEnteredNumber@temp+2)& (0+255),b
 32739  014C9C  0E00               	movlw	0
 32740  014C9E  6F96               	movwf	(GetEnteredNumber@temp+3)& (0+255),b
 32741                           
 32742                           ;MISC.c: 220: unsigned char negative =0;
 32743  014CA0  0E00               	movlw	0
 32744  014CA2  0101               	movlb	1	; () banked
 32745  014CA4  6F92               	movwf	GetEnteredNumber@negative& (0+255),b
 32746                           
 32747                           ;MISC.c: 221: while(*This != '=' && *This != 0)
 32748  014CA6  D004               	goto	l12795
 32749  014CA8                     l12793:
 32750                           
 32751                           ; BSR set to: 1
 32752                           ;MISC.c: 222: {
 32753                           ;MISC.c: 223: This++;
 32754  014CA8  0101               	movlb	1	; () banked
 32755  014CAA  4B88               	infsnz	GetEnteredNumber@This& (0+255),f,b
 32756  014CAC  2B89               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 32757  014CAE  D000               	goto	l12795
 32758  014CB0                     l12795:
 32759                           
 32760                           ; BSR set to: 1
 32761  014CB0  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32762  014CB4  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32763  014CB8  0E3D               	movlw	61
 32764  014CBA  18DE               	xorwf	postinc2,w,c
 32765  014CBC  B4D8               	btfsc	status,2,c
 32766  014CBE  D009               	goto	l12799
 32767                           
 32768                           ; BSR set to: 1
 32769  014CC0  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32770  014CC4  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32771  014CC8  50DF               	movf	indf2,w,c
 32772  014CCA  B4D8               	btfsc	status,2,c
 32773  014CCC  D002               	goto	l12799
 32774  014CCE  D7EC               	goto	l12793
 32775                           
 32776                           ; BSR set to: 1
 32777  014CD0  D000               	goto	l12799
 32778  014CD2                     l12799:
 32779                           
 32780                           ; BSR set to: 1
 32781                           ;MISC.c: 225: }
 32782                           ;MISC.c: 226: if(*This == 0)
 32783  014CD2  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32784  014CD6  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32785  014CDA  50DF               	movf	indf2,w,c
 32786  014CDC  A4D8               	btfss	status,2,c
 32787  014CDE  D00A               	goto	l12805
 32788                           
 32789                           ; BSR set to: 1
 32790                           ;MISC.c: 227: {
 32791                           ;MISC.c: 228: return 2147483647L;
 32792  014CE0  0EFF               	movlw	255
 32793  014CE2  0101               	movlb	1	; () banked
 32794  014CE4  6F88               	movwf	?_GetEnteredNumber& (0+255),b
 32795  014CE6  0EFF               	movlw	255
 32796  014CE8  6F89               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 32797  014CEA  0EFF               	movlw	255
 32798  014CEC  6F8A               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 32799  014CEE  0E7F               	movlw	127
 32800  014CF0  6F8B               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 32801                           
 32802                           ; BSR set to: 1
 32803  014CF2  0012               	return	
 32804  014CF4                     l12805:
 32805                           
 32806                           ; BSR set to: 1
 32807                           ;MISC.c: 229: }
 32808                           ;MISC.c: 230: This++;
 32809  014CF4  0101               	movlb	1	; () banked
 32810  014CF6  4B88               	infsnz	GetEnteredNumber@This& (0+255),f,b
 32811  014CF8  2B89               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 32812                           
 32813                           ; BSR set to: 1
 32814                           ;MISC.c: 231: if(*This == ' ')
 32815  014CFA  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32816  014CFE  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32817  014D02  0E20               	movlw	32
 32818  014D04  18DE               	xorwf	postinc2,w,c
 32819  014D06  B4D8               	btfsc	status,2,c
 32820  014D08  D07E               	goto	l12843
 32821                           
 32822                           ; BSR set to: 1
 32823                           ;MISC.c: 236: else if (*This == '=')
 32824                           
 32825                           ; BSR set to: 1
 32826                           
 32827                           ;MISC.c: 235: }
 32828                           
 32829                           ; BSR set to: 1
 32830                           ;MISC.c: 232: {
 32831                           ;MISC.c: 233: This++;
 32832  014D0A  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32833  014D0E  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32834  014D12  0E3D               	movlw	61
 32835  014D14  18DE               	xorwf	postinc2,w,c
 32836  014D16  A4D8               	btfss	status,2,c
 32837  014D18  D00B               	goto	l12819
 32838                           
 32839                           ; BSR set to: 1
 32840                           ;MISC.c: 237: {
 32841                           ;MISC.c: 238: return 2147483646L;
 32842  014D1A  0EFE               	movlw	254
 32843  014D1C  0101               	movlb	1	; () banked
 32844  014D1E  6F88               	movwf	?_GetEnteredNumber& (0+255),b
 32845  014D20  0EFF               	movlw	255
 32846  014D22  6F89               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 32847  014D24  0EFF               	movlw	255
 32848  014D26  6F8A               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 32849  014D28  0E7F               	movlw	127
 32850  014D2A  6F8B               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 32851                           
 32852                           ; BSR set to: 1
 32853  014D2C  0012               	return	
 32854                           
 32855                           ; BSR set to: 1
 32856                           ;MISC.c: 239: }
 32857  014D2E  D06F               	goto	l12845
 32858  014D30                     l12819:
 32859                           
 32860                           ; BSR set to: 1
 32861                           ;MISC.c: 240: else if(*This == '-')
 32862  014D30  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32863  014D34  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32864  014D38  0E2D               	movlw	45
 32865  014D3A  18DE               	xorwf	postinc2,w,c
 32866  014D3C  A4D8               	btfss	status,2,c
 32867  014D3E  D004               	goto	l12825
 32868                           
 32869                           ; BSR set to: 1
 32870                           ;MISC.c: 241: {
 32871                           ;MISC.c: 242: negative = 1;
 32872  014D40  0E01               	movlw	1
 32873  014D42  0101               	movlb	1	; () banked
 32874  014D44  6F92               	movwf	GetEnteredNumber@negative& (0+255),b
 32875  014D46  D05F               	goto	l12843
 32876  014D48                     l12825:
 32877                           
 32878                           ; BSR set to: 1
 32879                           ;MISC.c: 246: else if(*This == 0)
 32880  014D48  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32881  014D4C  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32882  014D50  50DF               	movf	indf2,w,c
 32883  014D52  A4D8               	btfss	status,2,c
 32884  014D54  D05C               	goto	l12845
 32885                           
 32886                           ; BSR set to: 1
 32887                           ;MISC.c: 247: {
 32888                           ;MISC.c: 248: return 2147483645L;
 32889  014D56  0EFD               	movlw	253
 32890  014D58  D7E1               	goto	L29
 32891                           
 32892                           ; BSR set to: 1
 32893  014D5A  0012               	return	
 32894                           
 32895                           ; BSR set to: 1
 32896                           ;MISC.c: 249: }
 32897                           ;MISC.c: 250: while(*This >=48 && *This <= 57)
 32898                           
 32899                           ; BSR set to: 1
 32900                           
 32901                           ; BSR set to: 1
 32902                           
 32903                           ; BSR set to: 1
 32904  014D5C  D058               	goto	l12845
 32905  014D5E                     l12831:
 32906                           
 32907                           ; BSR set to: 1
 32908                           ;MISC.c: 251: {
 32909                           ;MISC.c: 252: temp = temp * 10;
 32910  014D5E  C193  F17C         	movff	GetEnteredNumber@temp,___lmul@multiplier
 32911  014D62  C194  F17D         	movff	GetEnteredNumber@temp+1,___lmul@multiplier+1
 32912  014D66  C195  F17E         	movff	GetEnteredNumber@temp+2,___lmul@multiplier+2
 32913  014D6A  C196  F17F         	movff	GetEnteredNumber@temp+3,___lmul@multiplier+3
 32914  014D6E  0E0A               	movlw	10
 32915  014D70  0101               	movlb	1	; () banked
 32916  014D72  6F80               	movwf	___lmul@multiplicand& (0+255),b
 32917  014D74  0E00               	movlw	0
 32918  014D76  6F81               	movwf	(___lmul@multiplicand+1)& (0+255),b
 32919  014D78  0E00               	movlw	0
 32920  014D7A  6F82               	movwf	(___lmul@multiplicand+2)& (0+255),b
 32921  014D7C  0E00               	movlw	0
 32922  014D7E  6F83               	movwf	(___lmul@multiplicand+3)& (0+255),b
 32923  014D80  EC6A  F0B8         	call	___lmul	;wreg free
 32924  014D84  C17C  F193         	movff	?___lmul,GetEnteredNumber@temp
 32925  014D88  C17D  F194         	movff	?___lmul+1,GetEnteredNumber@temp+1
 32926  014D8C  C17E  F195         	movff	?___lmul+2,GetEnteredNumber@temp+2
 32927  014D90  C17F  F196         	movff	?___lmul+3,GetEnteredNumber@temp+3
 32928                           
 32929                           ;MISC.c: 253: temp += *This - 48;
 32930  014D94  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32931  014D98  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32932  014D9C  50DF               	movf	indf2,w,c
 32933  014D9E  0101               	movlb	1	; () banked
 32934  014DA0  6F8C               	movwf	??_GetEnteredNumber& (0+255),b
 32935  014DA2  0ED0               	movlw	208
 32936  014DA4  0101               	movlb	1	; () banked
 32937  014DA6  258C               	addwf	??_GetEnteredNumber& (0+255),w,b
 32938  014DA8  0101               	movlb	1	; () banked
 32939  014DAA  6F8D               	movwf	(??_GetEnteredNumber+1)& (0+255),b
 32940  014DAC  0101               	movlb	1	; () banked
 32941  014DAE  6B8E               	clrf	(??_GetEnteredNumber+2)& (0+255),b
 32942  014DB0  0EFF               	movlw	255
 32943  014DB2  238E               	addwfc	(??_GetEnteredNumber+2)& (0+255),f,b
 32944  014DB4  0101               	movlb	1	; () banked
 32945  014DB6  6B8F               	clrf	(??_GetEnteredNumber+3)& (0+255),b
 32946  014DB8  0101               	movlb	1	; () banked
 32947  014DBA  BF8E               	btfsc	(??_GetEnteredNumber+2)& (0+255),7,b
 32948  014DBC  078F               	decf	(??_GetEnteredNumber+3)& (0+255),f,b
 32949  014DBE  0101               	movlb	1	; () banked
 32950  014DC0  518F               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 32951  014DC2  0101               	movlb	1	; () banked
 32952  014DC4  6F90               	movwf	(??_GetEnteredNumber+4)& (0+255),b
 32953  014DC6  0101               	movlb	1	; () banked
 32954  014DC8  518D               	movf	(??_GetEnteredNumber+1)& (0+255),w,b
 32955  014DCA  0101               	movlb	1	; () banked
 32956  014DCC  2793               	addwf	GetEnteredNumber@temp& (0+255),f,b
 32957  014DCE  0101               	movlb	1	; () banked
 32958  014DD0  518E               	movf	(??_GetEnteredNumber+2)& (0+255),w,b
 32959  014DD2  0101               	movlb	1	; () banked
 32960  014DD4  2394               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 32961  014DD6  0101               	movlb	1	; () banked
 32962  014DD8  518F               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 32963  014DDA  0101               	movlb	1	; () banked
 32964  014DDC  2395               	addwfc	(GetEnteredNumber@temp+2)& (0+255),f,b
 32965  014DDE  0101               	movlb	1	; () banked
 32966  014DE0  5190               	movf	(??_GetEnteredNumber+4)& (0+255),w,b
 32967  014DE2  0101               	movlb	1	; () banked
 32968  014DE4  2396               	addwfc	(GetEnteredNumber@temp+3)& (0+255),f,b
 32969                           
 32970                           ; BSR set to: 1
 32971                           ;MISC.c: 254: i++;
 32972  014DE6  0101               	movlb	1	; () banked
 32973  014DE8  2B91               	incf	GetEnteredNumber@i& (0+255),f,b
 32974                           
 32975                           ; BSR set to: 1
 32976                           ;MISC.c: 255: if(i>32)
 32977  014DEA  0E20               	movlw	32
 32978  014DEC  0101               	movlb	1	; () banked
 32979  014DEE  6591               	cpfsgt	GetEnteredNumber@i& (0+255),b
 32980  014DF0  D00A               	goto	l12843
 32981                           
 32982                           ; BSR set to: 1
 32983                           ;MISC.c: 256: {
 32984                           ;MISC.c: 257: return 2147483644L;
 32985  014DF2  0EFC               	movlw	252
 32986  014DF4  0101               	movlb	1	; () banked
 32987  014DF6  6F88               	movwf	?_GetEnteredNumber& (0+255),b
 32988  014DF8  0EFF               	movlw	255
 32989  014DFA  6F89               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 32990  014DFC  0EFF               	movlw	255
 32991  014DFE  6F8A               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 32992  014E00  0E7F               	movlw	127
 32993  014E02  6F8B               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 32994                           
 32995                           ; BSR set to: 1
 32996  014E04  0012               	return	
 32997  014E06                     l12843:
 32998                           
 32999                           ; BSR set to: 1
 33000                           ;MISC.c: 258: }
 33001                           ;MISC.c: 259: This++;
 33002  014E06  0101               	movlb	1	; () banked
 33003  014E08  4B88               	infsnz	GetEnteredNumber@This& (0+255),f,b
 33004  014E0A  2B89               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 33005  014E0C  D000               	goto	l12845
 33006  014E0E                     l12845:
 33007                           
 33008                           ; BSR set to: 1
 33009  014E0E  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33010  014E12  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33011  014E16  0E2F               	movlw	47
 33012  014E18  64DF               	cpfsgt	indf2,c
 33013  014E1A  D008               	goto	l12849
 33014                           
 33015                           ; BSR set to: 1
 33016  014E1C  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 33017  014E20  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 33018  014E24  0E39               	movlw	57
 33019  014E26  64DF               	cpfsgt	indf2,c
 33020  014E28  D79A               	goto	l12831
 33021                           
 33022                           ; BSR set to: 1
 33023  014E2A  D000               	goto	l12849
 33024  014E2C                     l12849:
 33025                           
 33026                           ; BSR set to: 1
 33027                           ;MISC.c: 260: }
 33028                           ;MISC.c: 261: if(negative)
 33029  014E2C  0101               	movlb	1	; () banked
 33030  014E2E  5192               	movf	GetEnteredNumber@negative& (0+255),w,b
 33031  014E30  0101               	movlb	1	; () banked
 33032  014E32  B4D8               	btfsc	status,2,c
 33033  014E34  D00A               	goto	l12853
 33034                           
 33035                           ; BSR set to: 1
 33036                           ;MISC.c: 262: {
 33037                           ;MISC.c: 263: temp = (temp * -1);
 33038  014E36  0101               	movlb	1	; () banked
 33039  014E38  1F96               	comf	(GetEnteredNumber@temp+3)& (0+255),f,b
 33040  014E3A  1F95               	comf	(GetEnteredNumber@temp+2)& (0+255),f,b
 33041  014E3C  1F94               	comf	(GetEnteredNumber@temp+1)& (0+255),f,b
 33042  014E3E  6D93               	negf	GetEnteredNumber@temp& (0+255),b
 33043  014E40  0E00               	movlw	0
 33044  014E42  2394               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 33045  014E44  2395               	addwfc	(GetEnteredNumber@temp+2)& (0+255),f,b
 33046  014E46  2396               	addwfc	(GetEnteredNumber@temp+3)& (0+255),f,b
 33047  014E48  D000               	goto	l12853
 33048  014E4A                     l12853:
 33049                           
 33050                           ; BSR set to: 1
 33051                           ;MISC.c: 264: }
 33052                           ;MISC.c: 265: return temp;
 33053  014E4A  C193  F188         	movff	GetEnteredNumber@temp,?_GetEnteredNumber
 33054  014E4E  C194  F189         	movff	GetEnteredNumber@temp+1,?_GetEnteredNumber+1
 33055  014E52  C195  F18A         	movff	GetEnteredNumber@temp+2,?_GetEnteredNumber+2
 33056  014E56  C196  F18B         	movff	GetEnteredNumber@temp+3,?_GetEnteredNumber+3
 33057  014E5A  0012               	return	
 33058                           
 33059                           ; BSR set to: 1
 33060                           
 33061                           ; BSR set to: 1
 33062  014E5C  0012               	return		;funcret
 33063  014E5E                     __end_of_GetEnteredNumber:
 33064                           	opt stack 0
 33065                           tblptru	equ	0xFF8
 33066                           tblptrh	equ	0xFF7
 33067                           tblptrl	equ	0xFF6
 33068                           tablat	equ	0xFF5
 33069                           prodh	equ	0xFF4
 33070                           prodl	equ	0xFF3
 33071                           intcon	equ	0xFF2
 33072                           intcon2	equ	0xFF1
 33073                           indf0	equ	0xFEF
 33074                           postinc0	equ	0xFEE
 33075                           plusw0	equ	0xFEB
 33076                           fsr0h	equ	0xFEA
 33077                           fsr0l	equ	0xFE9
 33078                           wreg	equ	0xFE8
 33079                           indf1	equ	0xFE7
 33080                           postdec1	equ	0xFE5
 33081                           fsr1h	equ	0xFE2
 33082                           fsr1l	equ	0xFE1
 33083                           indf2	equ	0xFDF
 33084                           postinc2	equ	0xFDE
 33085                           postdec2	equ	0xFDD
 33086                           plusw2	equ	0xFDB
 33087                           fsr2h	equ	0xFDA
 33088                           fsr2l	equ	0xFD9
 33089                           status	equ	0xFD8
 33090                           
 33091 ;; *************** function ___lmul *****************
 33092 ;; Defined at:
 33093 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
 33094 ;; Parameters:    Size  Location     Type
 33095 ;;  multiplier      4   14[BANK1 ] unsigned long 
 33096 ;;  multiplicand    4   18[BANK1 ] unsigned long 
 33097 ;; Auto vars:     Size  Location     Type
 33098 ;;  product         4   22[BANK1 ] unsigned long 
 33099 ;; Return value:  Size  Location     Type
 33100 ;;                  4   14[BANK1 ] unsigned long 
 33101 ;; Registers used:
 33102 ;;		wreg, status,2, status,0
 33103 ;; Tracked objects:
 33104 ;;		On entry : 0/0
 33105 ;;		On exit  : 0/0
 33106 ;;		Unchanged: 0/0
 33107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33108 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 33109 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33111 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 33112 ;;Total ram usage:       12 bytes
 33113 ;; Hardware stack levels used:    1
 33114 ;; Hardware stack levels required when called:    6
 33115 ;; This function calls:
 33116 ;;		Nothing
 33117 ;; This function is called by:
 33118 ;;		_GetEnteredNumber
 33119 ;; This function uses a non-reentrant model
 33120 ;;
 33121                           
 33122                           	psect	text93
 33123  0170D4                     __ptext93:
 33124                           	opt stack 0
 33125  0170D4                     ___lmul:
 33126                           	opt stack 22
 33127                           
 33128                           ; BSR set to: 1
 33129                           ;incstack = 0
 33130  0170D4  0E00               	movlw	0
 33131  0170D6  0101               	movlb	1	; () banked
 33132  0170D8  6F84               	movwf	___lmul@product& (0+255),b
 33133  0170DA  0E00               	movlw	0
 33134  0170DC  6F85               	movwf	(___lmul@product+1)& (0+255),b
 33135  0170DE  0E00               	movlw	0
 33136  0170E0  6F86               	movwf	(___lmul@product+2)& (0+255),b
 33137  0170E2  0E00               	movlw	0
 33138  0170E4  6F87               	movwf	(___lmul@product+3)& (0+255),b
 33139  0170E6  D000               	goto	l12387
 33140  0170E8                     l12387:
 33141                           
 33142                           ; BSR set to: 1
 33143  0170E8  0101               	movlb	1	; () banked
 33144  0170EA  A17C               	btfss	___lmul@multiplier& (0+255),0,b
 33145  0170EC  D011               	goto	l12391
 33146                           
 33147                           ; BSR set to: 1
 33148  0170EE  0101               	movlb	1	; () banked
 33149  0170F0  5180               	movf	___lmul@multiplicand& (0+255),w,b
 33150  0170F2  0101               	movlb	1	; () banked
 33151  0170F4  2784               	addwf	___lmul@product& (0+255),f,b
 33152  0170F6  0101               	movlb	1	; () banked
 33153  0170F8  5181               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 33154  0170FA  0101               	movlb	1	; () banked
 33155  0170FC  2385               	addwfc	(___lmul@product+1)& (0+255),f,b
 33156  0170FE  0101               	movlb	1	; () banked
 33157  017100  5182               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 33158  017102  0101               	movlb	1	; () banked
 33159  017104  2386               	addwfc	(___lmul@product+2)& (0+255),f,b
 33160  017106  0101               	movlb	1	; () banked
 33161  017108  5183               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 33162  01710A  0101               	movlb	1	; () banked
 33163  01710C  2387               	addwfc	(___lmul@product+3)& (0+255),f,b
 33164  01710E  D000               	goto	l12391
 33165  017110                     l12391:
 33166                           
 33167                           ; BSR set to: 1
 33168  017110  0101               	movlb	1	; () banked
 33169  017112  90D8               	bcf	status,0,c
 33170  017114  3780               	rlcf	___lmul@multiplicand& (0+255),f,b
 33171  017116  3781               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 33172  017118  3782               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 33173  01711A  3783               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 33174                           
 33175                           ; BSR set to: 1
 33176  01711C  0101               	movlb	1	; () banked
 33177  01711E  90D8               	bcf	status,0,c
 33178  017120  337F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 33179  017122  337E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 33180  017124  337D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 33181  017126  337C               	rrcf	___lmul@multiplier& (0+255),f,b
 33182  017128  0101               	movlb	1	; () banked
 33183  01712A  517C               	movf	___lmul@multiplier& (0+255),w,b
 33184  01712C  0101               	movlb	1	; () banked
 33185  01712E  117D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 33186  017130  0101               	movlb	1	; () banked
 33187  017132  117E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 33188  017134  0101               	movlb	1	; () banked
 33189  017136  117F               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 33190  017138  A4D8               	btfss	status,2,c
 33191  01713A  D7D6               	goto	l12387
 33192                           
 33193                           ; BSR set to: 1
 33194  01713C  C184  F17C         	movff	___lmul@product,?___lmul
 33195  017140  C185  F17D         	movff	___lmul@product+1,?___lmul+1
 33196  017144  C186  F17E         	movff	___lmul@product+2,?___lmul+2
 33197  017148  C187  F17F         	movff	___lmul@product+3,?___lmul+3
 33198                           
 33199                           ; BSR set to: 1
 33200  01714C  0012               	return		;funcret
 33201  01714E                     __end_of___lmul:
 33202                           	opt stack 0
 33203                           tblptru	equ	0xFF8
 33204                           tblptrh	equ	0xFF7
 33205                           tblptrl	equ	0xFF6
 33206                           tablat	equ	0xFF5
 33207                           prodh	equ	0xFF4
 33208                           prodl	equ	0xFF3
 33209                           intcon	equ	0xFF2
 33210                           intcon2	equ	0xFF1
 33211                           indf0	equ	0xFEF
 33212                           postinc0	equ	0xFEE
 33213                           plusw0	equ	0xFEB
 33214                           fsr0h	equ	0xFEA
 33215                           fsr0l	equ	0xFE9
 33216                           wreg	equ	0xFE8
 33217                           indf1	equ	0xFE7
 33218                           postdec1	equ	0xFE5
 33219                           fsr1h	equ	0xFE2
 33220                           fsr1l	equ	0xFE1
 33221                           indf2	equ	0xFDF
 33222                           postinc2	equ	0xFDE
 33223                           postdec2	equ	0xFDD
 33224                           plusw2	equ	0xFDB
 33225                           fsr2h	equ	0xFDA
 33226                           fsr2l	equ	0xFD9
 33227                           status	equ	0xFD8
 33228                           
 33229 ;; *************** function _GetBaud *****************
 33230 ;; Defined at:
 33231 ;;		line 391 in file "UART.c"
 33232 ;; Parameters:    Size  Location     Type
 33233 ;;		None
 33234 ;; Auto vars:     Size  Location     Type
 33235 ;;		None
 33236 ;; Return value:  Size  Location     Type
 33237 ;;                  4   14[BANK1 ] unsigned long 
 33238 ;; Registers used:
 33239 ;;		None
 33240 ;; Tracked objects:
 33241 ;;		On entry : 0/0
 33242 ;;		On exit  : 0/0
 33243 ;;		Unchanged: 0/0
 33244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33245 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33248 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 33249 ;;Total ram usage:        4 bytes
 33250 ;; Hardware stack levels used:    1
 33251 ;; Hardware stack levels required when called:    6
 33252 ;; This function calls:
 33253 ;;		Nothing
 33254 ;; This function is called by:
 33255 ;;		_Command
 33256 ;; This function uses a non-reentrant model
 33257 ;;
 33258                           
 33259                           	psect	text94
 33260  017F1E                     __ptext94:
 33261                           	opt stack 0
 33262  017F1E                     _GetBaud:
 33263                           	opt stack 23
 33264                           
 33265                           ;UART.c: 393: return BAUD;
 33266                           
 33267                           ; BSR set to: 1
 33268                           ;incstack = 0
 33269  017F1E  C1D3  F17C         	movff	_BAUD,?_GetBaud
 33270  017F22  C1D4  F17D         	movff	_BAUD+1,?_GetBaud+1
 33271  017F26  C1D5  F17E         	movff	_BAUD+2,?_GetBaud+2
 33272  017F2A  C1D6  F17F         	movff	_BAUD+3,?_GetBaud+3
 33273  017F2E  0012               	return		;funcret
 33274  017F30                     __end_of_GetBaud:
 33275                           	opt stack 0
 33276                           tblptru	equ	0xFF8
 33277                           tblptrh	equ	0xFF7
 33278                           tblptrl	equ	0xFF6
 33279                           tablat	equ	0xFF5
 33280                           prodh	equ	0xFF4
 33281                           prodl	equ	0xFF3
 33282                           intcon	equ	0xFF2
 33283                           intcon2	equ	0xFF1
 33284                           indf0	equ	0xFEF
 33285                           postinc0	equ	0xFEE
 33286                           plusw0	equ	0xFEB
 33287                           fsr0h	equ	0xFEA
 33288                           fsr0l	equ	0xFE9
 33289                           wreg	equ	0xFE8
 33290                           indf1	equ	0xFE7
 33291                           postdec1	equ	0xFE5
 33292                           fsr1h	equ	0xFE2
 33293                           fsr1l	equ	0xFE1
 33294                           indf2	equ	0xFDF
 33295                           postinc2	equ	0xFDE
 33296                           postdec2	equ	0xFDD
 33297                           plusw2	equ	0xFDB
 33298                           fsr2h	equ	0xFDA
 33299                           fsr2l	equ	0xFD9
 33300                           status	equ	0xFD8
 33301                           
 33302 ;; *************** function _low_isr *****************
 33303 ;; Defined at:
 33304 ;;		line 79 in file "interrupts.c"
 33305 ;; Parameters:    Size  Location     Type
 33306 ;;		None
 33307 ;; Auto vars:     Size  Location     Type
 33308 ;;  TEMP_Rxdata   100    0[BANK0 ] unsigned char [100]
 33309 ;;  LCD_TEMP       16  100[BANK0 ] unsigned char [16]
 33310 ;;  i               2  116[BANK0 ] int 
 33311 ;;  rx              1  120[BANK0 ] unsigned char 
 33312 ;;  j               1  119[BANK0 ] unsigned char 
 33313 ;;  IRpin           1  118[BANK0 ] unsigned char 
 33314 ;; Return value:  Size  Location     Type
 33315 ;;		None               void
 33316 ;; Registers used:
 33317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33318 ;; Tracked objects:
 33319 ;;		On entry : 0/0
 33320 ;;		On exit  : 0/0
 33321 ;;		Unchanged: 0/0
 33322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33324 ;;      Locals:         0     121       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33325 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33326 ;;      Totals:        21     121       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33327 ;;Total ram usage:      142 bytes
 33328 ;; Hardware stack levels used:    1
 33329 ;; Hardware stack levels required when called:    5
 33330 ;; This function calls:
 33331 ;;		_IRrawToNEC
 33332 ;;		_IsPrintableASCII
 33333 ;;		_Reset_Timer0
 33334 ;;		_UseIRCode
 33335 ;;		i1_BufferCopy
 33336 ;;		i1_ClearLCD
 33337 ;;		i1_LCDPrintChar
 33338 ;;		i1_LCDPrintString
 33339 ;;		i1_ReadIRpin
 33340 ;;		i1_ReadUSART
 33341 ;;		i1_SetLCDcursor
 33342 ;;		i1_UARTchar
 33343 ;;		i1_UARTstring
 33344 ;;		i1_cleanBuffer
 33345 ;;		i1_cleanBuffer16bit
 33346 ;; This function is called by:
 33347 ;;		Interrupt level 1
 33348 ;; This function uses a non-reentrant model
 33349 ;;
 33350                           
 33351                           	psect	intcodelo
 33352  000018                     __pintcodelo:
 33353                           	opt stack 0
 33354  000018                     _low_isr:
 33355                           	opt stack 19
 33356                           
 33357                           ;incstack = 0
 33358  000018  CFD8 F017          	movff	status,??_low_isr+4
 33359  00001C  CFE8 F018          	movff	wreg,??_low_isr+5
 33360  000020  CFE0 F019          	movff	bsr,??_low_isr+6
 33361  000024  CFFA F01A          	movff	pclath,??_low_isr+7
 33362  000028  CFFB F01B          	movff	pclatu,??_low_isr+8
 33363  00002C  CFE9 F01C          	movff	fsr0l,??_low_isr+9
 33364  000030  CFEA F01D          	movff	fsr0h,??_low_isr+10
 33365  000034  CFE1 F01E          	movff	fsr1l,??_low_isr+11
 33366  000038  CFE2 F01F          	movff	fsr1h,??_low_isr+12
 33367  00003C  CFD9 F020          	movff	fsr2l,??_low_isr+13
 33368  000040  CFDA F021          	movff	fsr2h,??_low_isr+14
 33369  000044  CFF3 F022          	movff	prodl,??_low_isr+15
 33370  000048  CFF4 F023          	movff	prodh,??_low_isr+16
 33371  00004C  CFF6 F024          	movff	tblptrl,??_low_isr+17
 33372  000050  CFF7 F025          	movff	tblptrh,??_low_isr+18
 33373  000054  CFF8 F026          	movff	tblptru,??_low_isr+19
 33374  000058  CFF5 F027          	movff	tablat,??_low_isr+20
 33375                           
 33376                           ;interrupts.c: 88: unsigned char rx;
 33377                           ;interrupts.c: 89: unsigned char TEMP_Rxdata[100];
 33378                           ;interrupts.c: 90: unsigned char LCD_TEMP [16];
 33379                           ;interrupts.c: 91: int i;
 33380                           ;interrupts.c: 92: unsigned char j;
 33381                           ;interrupts.c: 93: unsigned char IRpin;
 33382                           ;interrupts.c: 95: INTCONbits.PEIE = 0;
 33383  00005C  9CF2               	bcf	intcon,6,c	;volatile
 33384                           
 33385                           ;interrupts.c: 97: if(PIR1bits.RCIF)
 33386  00005E  AA9E               	btfss	3998,5,c	;volatile
 33387  000060  D14B               	goto	i1l72
 33388                           
 33389                           ;interrupts.c: 98: {
 33390                           ;interrupts.c: 100: PIE1bits.RCIE = 0;
 33391  000062  9A9D               	bcf	3997,5,c	;volatile
 33392                           
 33393                           ;interrupts.c: 101: RCSTAbits.CREN = 0;
 33394  000064  98AB               	bcf	4011,4,c	;volatile
 33395                           
 33396                           ;interrupts.c: 102: i=0;
 33397  000066  0E00               	movlw	0
 33398  000068  0100               	movlb	0	; () banked
 33399  00006A  6FD5               	movwf	(low_isr@i+1)& (0+255),b
 33400  00006C  0E00               	movlw	0
 33401  00006E  6FD4               	movwf	low_isr@i& (0+255),b
 33402                           
 33403                           ;interrupts.c: 103: j=0;
 33404  000070  0E00               	movlw	0
 33405  000072  0100               	movlb	0	; () banked
 33406  000074  6FD7               	movwf	low_isr@j& (0+255),b
 33407                           
 33408                           ; BSR set to: 0
 33409                           ;interrupts.c: 104: rx = ReadUSART();
 33410  000076  EC40  F0BE         	call	i1_ReadUSART	;wreg free
 33411  00007A  0100               	movlb	0	; () banked
 33412  00007C  6FD8               	movwf	low_isr@rx& (0+255),b
 33413                           
 33414                           ; BSR set to: 0
 33415                           ;interrupts.c: 106: if(TX_OLD == '>' && rx == '>' && bufferCount == 0)
 33416  00007E  0E3E               	movlw	62
 33417  000080  0100               	movlb	0	; () banked
 33418  000082  19DD               	xorwf	_TX_OLD& (0+255),w,b
 33419  000084  A4D8               	btfss	status,2,c
 33420  000086  D00B               	goto	i1l14711
 33421                           
 33422                           ; BSR set to: 0
 33423  000088  0E3E               	movlw	62
 33424  00008A  0100               	movlb	0	; () banked
 33425  00008C  19D8               	xorwf	low_isr@rx& (0+255),w,b
 33426  00008E  A4D8               	btfss	status,2,c
 33427  000090  D006               	goto	i1l14711
 33428                           
 33429                           ; BSR set to: 0
 33430  000092  0100               	movlb	0	; () banked
 33431  000094  51DE               	movf	_bufferCount& (0+255),w,b
 33432  000096  A4D8               	btfss	status,2,c
 33433  000098  D002               	goto	i1l14711
 33434                           
 33435                           ; BSR set to: 0
 33436                           ;interrupts.c: 107: {
 33437                           ;interrupts.c: 109: __nop();
 33438  00009A  F000               	nop	
 33439                           
 33440                           ;interrupts.c: 110: }
 33441  00009C  D129               	goto	i1l14803
 33442  00009E                     i1l14711:
 33443                           
 33444                           ;interrupts.c: 111: else
 33445                           ;interrupts.c: 112: {
 33446                           ;interrupts.c: 114: if(rx != '\n' && rx != '\r')
 33447  00009E  0E0A               	movlw	10
 33448  0000A0  0100               	movlb	0	; () banked
 33449  0000A2  19D8               	xorwf	low_isr@rx& (0+255),w,b
 33450  0000A4  B4D8               	btfsc	status,2,c
 33451  0000A6  D0CC               	goto	i1l14777
 33452                           
 33453                           ; BSR set to: 0
 33454  0000A8  0E0D               	movlw	13
 33455  0000AA  0100               	movlb	0	; () banked
 33456  0000AC  19D8               	xorwf	low_isr@rx& (0+255),w,b
 33457  0000AE  B4D8               	btfsc	status,2,c
 33458  0000B0  D0C7               	goto	i1l14777
 33459                           
 33460                           ; BSR set to: 0
 33461                           ;interrupts.c: 115: {
 33462                           ;interrupts.c: 117: if(rx == 0x7f || rx == 0x08)
 33463  0000B2  0E7F               	movlw	127
 33464  0000B4  0100               	movlb	0	; () banked
 33465  0000B6  19D8               	xorwf	low_isr@rx& (0+255),w,b
 33466  0000B8  B4D8               	btfsc	status,2,c
 33467  0000BA  D005               	goto	i1l14719
 33468                           
 33469                           ; BSR set to: 0
 33470  0000BC  0E08               	movlw	8
 33471  0000BE  0100               	movlb	0	; () banked
 33472  0000C0  19D8               	xorwf	low_isr@rx& (0+255),w,b
 33473  0000C2  A4D8               	btfss	status,2,c
 33474  0000C4  D082               	goto	i1l14757
 33475  0000C6                     i1l14719:
 33476                           
 33477                           ; BSR set to: 0
 33478                           ;interrupts.c: 118: {
 33479                           ;interrupts.c: 120: if(bufferCount !=0)
 33480  0000C6  0100               	movlb	0	; () banked
 33481  0000C8  51DE               	movf	_bufferCount& (0+255),w,b
 33482  0000CA  B4D8               	btfsc	status,2,c
 33483  0000CC  D111               	goto	i1l14803
 33484                           
 33485                           ; BSR set to: 0
 33486                           ;interrupts.c: 121: {
 33487                           ;interrupts.c: 123: UARTstring("\r");
 33488  0000CE  0EFC               	movlw	low STR_1
 33489  0000D0  6E0C               	movwf	i1UARTstring@data,c
 33490  0000D2  0EFF               	movlw	high STR_1
 33491  0000D4  6E0D               	movwf	i1UARTstring@data+1,c
 33492  0000D6  EC8A  F0B5         	call	i1_UARTstring	;wreg free
 33493                           
 33494                           ;interrupts.c: 125: for(i=0;i<=bufferCount;i++)
 33495  0000DA  0E00               	movlw	0
 33496  0000DC  0100               	movlb	0	; () banked
 33497  0000DE  6FD5               	movwf	(low_isr@i+1)& (0+255),b
 33498  0000E0  0E00               	movlw	0
 33499  0000E2  6FD4               	movwf	low_isr@i& (0+255),b
 33500  0000E4  D00A               	goto	i1l14729
 33501  0000E6                     i1l14725:
 33502                           
 33503                           ; BSR set to: 0
 33504                           ;interrupts.c: 126: {
 33505                           ;interrupts.c: 128: UARTstring(" ");
 33506  0000E6  0E4E               	movlw	low (STR_225+15)
 33507  0000E8  6E0C               	movwf	i1UARTstring@data,c
 33508  0000EA  0EF9               	movlw	high (STR_225+15)
 33509  0000EC  6E0D               	movwf	i1UARTstring@data+1,c
 33510  0000EE  EC8A  F0B5         	call	i1_UARTstring	;wreg free
 33511  0000F2  0100               	movlb	0	; () banked
 33512  0000F4  4BD4               	infsnz	low_isr@i& (0+255),f,b
 33513  0000F6  2BD5               	incf	(low_isr@i+1)& (0+255),f,b
 33514  0000F8  D000               	goto	i1l14729
 33515  0000FA                     i1l14729:
 33516                           
 33517                           ; BSR set to: 0
 33518  0000FA  0100               	movlb	0	; () banked
 33519  0000FC  51DE               	movf	_bufferCount& (0+255),w,b
 33520  0000FE  6E13               	movwf	??_low_isr& (0+255),c
 33521  000100  6A14               	clrf	(??_low_isr+1)& (0+255),c
 33522  000102  0100               	movlb	0	; () banked
 33523  000104  51D4               	movf	low_isr@i& (0+255),w,b
 33524  000106  5C13               	subwf	??_low_isr,w,c
 33525  000108  5014               	movf	??_low_isr+1,w,c
 33526  00010A  0A80               	xorlw	128
 33527  00010C  6E15               	movwf	(??_low_isr+2)& (0+255),c
 33528  00010E  0100               	movlb	0	; () banked
 33529  000110  51D5               	movf	(low_isr@i+1)& (0+255),w,b
 33530  000112  0A80               	xorlw	128
 33531  000114  5815               	subwfb	(??_low_isr+2)& (0+255),w,c
 33532  000116  B0D8               	btfsc	status,0,c
 33533  000118  D7E6               	goto	i1l14725
 33534                           
 33535                           ; BSR set to: 0
 33536                           ;interrupts.c: 129: }
 33537                           ;interrupts.c: 131: UARTstring("\r");
 33538                           
 33539                           ; BSR set to: 0
 33540  00011A  0EFC               	movlw	low STR_1
 33541  00011C  6E0C               	movwf	i1UARTstring@data,c
 33542  00011E  0EFF               	movlw	high STR_1
 33543  000120  6E0D               	movwf	i1UARTstring@data+1,c
 33544  000122  EC8A  F0B5         	call	i1_UARTstring	;wreg free
 33545                           
 33546                           ;interrupts.c: 132: UARTstring(">");
 33547  000126  0ED1               	movlw	low (STR_21+27)
 33548  000128  6E0C               	movwf	i1UARTstring@data,c
 33549  00012A  0EF4               	movlw	high (STR_21+27)
 33550  00012C  6E0D               	movwf	i1UARTstring@data+1,c
 33551  00012E  EC8A  F0B5         	call	i1_UARTstring	;wreg free
 33552                           
 33553                           ;interrupts.c: 133: bufferCount--;
 33554  000132  0100               	movlb	0	; () banked
 33555  000134  07DE               	decf	_bufferCount& (0+255),f,b
 33556                           
 33557                           ; BSR set to: 0
 33558                           ;interrupts.c: 134: TEMP_Rxdata[bufferCount] = 0;
 33559  000136  0100               	movlb	0	; () banked
 33560  000138  51DE               	movf	_bufferCount& (0+255),w,b
 33561  00013A  0D01               	mullw	1
 33562  00013C  0E60               	movlw	low low_isr@TEMP_Rxdata
 33563  00013E  24F3               	addwf	prodl,w,c
 33564  000140  6ED9               	movwf	fsr2l,c
 33565  000142  0E00               	movlw	high low_isr@TEMP_Rxdata
 33566  000144  20F4               	addwfc	prodh,w,c
 33567  000146  6EDA               	movwf	fsr2h,c
 33568  000148  0E00               	movlw	0
 33569  00014A  6EDF               	movwf	indf2,c
 33570                           
 33571                           ; BSR set to: 0
 33572                           ;interrupts.c: 135: UARTstring(TEMP_Rxdata);
 33573  00014C  0E60               	movlw	low low_isr@TEMP_Rxdata
 33574  00014E  6E0C               	movwf	i1UARTstring@data,c
 33575  000150  0E00               	movlw	high low_isr@TEMP_Rxdata
 33576  000152  6E0D               	movwf	i1UARTstring@data+1,c
 33577  000154  EC8A  F0B5         	call	i1_UARTstring	;wreg free
 33578                           
 33579                           ;interrupts.c: 136: if(bufferCount < 15)
 33580  000158  0E0F               	movlw	15
 33581  00015A  0100               	movlb	0	; () banked
 33582  00015C  61DE               	cpfslt	_bufferCount& (0+255),b
 33583  00015E  D0C8               	goto	i1l14803
 33584                           
 33585                           ; BSR set to: 0
 33586                           ;interrupts.c: 137: {
 33587                           ;interrupts.c: 139: for(j=0; j<15;j++)
 33588  000160  0E00               	movlw	0
 33589  000162  0100               	movlb	0	; () banked
 33590  000164  6FD7               	movwf	low_isr@j& (0+255),b
 33591  000166                     i1l14743:
 33592                           
 33593                           ; BSR set to: 0
 33594  000166  0E0E               	movlw	14
 33595  000168  0100               	movlb	0	; () banked
 33596  00016A  65D7               	cpfsgt	low_isr@j& (0+255),b
 33597  00016C  D001               	goto	i1l14747
 33598                           
 33599                           ; BSR set to: 0
 33600  00016E  D017               	goto	i1l14753
 33601  000170                     i1l14747:
 33602                           
 33603                           ; BSR set to: 0
 33604                           ;interrupts.c: 140: {
 33605                           ;interrupts.c: 141: LCD_TEMP[j] = TEMP_Rxdata[j];
 33606  000170  0100               	movlb	0	; () banked
 33607  000172  51D7               	movf	low_isr@j& (0+255),w,b
 33608  000174  0D01               	mullw	1
 33609  000176  0E60               	movlw	low low_isr@TEMP_Rxdata
 33610  000178  24F3               	addwf	prodl,w,c
 33611  00017A  6ED9               	movwf	fsr2l,c
 33612  00017C  0E00               	movlw	high low_isr@TEMP_Rxdata
 33613  00017E  20F4               	addwfc	prodh,w,c
 33614  000180  6EDA               	movwf	fsr2h,c
 33615  000182  0100               	movlb	0	; () banked
 33616  000184  51D7               	movf	low_isr@j& (0+255),w,b
 33617  000186  0D01               	mullw	1
 33618  000188  0EC4               	movlw	low low_isr@LCD_TEMP
 33619  00018A  24F3               	addwf	prodl,w,c
 33620  00018C  6EE1               	movwf	fsr1l,c
 33621  00018E  0E00               	movlw	high low_isr@LCD_TEMP
 33622  000190  20F4               	addwfc	prodh,w,c
 33623  000192  6EE2               	movwf	fsr1h,c
 33624  000194  CFDF FFE7          	movff	indf2,indf1
 33625                           
 33626                           ; BSR set to: 0
 33627  000198  0100               	movlb	0	; () banked
 33628  00019A  2BD7               	incf	low_isr@j& (0+255),f,b
 33629  00019C  D7E4               	goto	i1l14743
 33630  00019E                     i1l14753:
 33631                           
 33632                           ; BSR set to: 0
 33633                           ;interrupts.c: 142: }
 33634                           ;interrupts.c: 143: ClearLCD();
 33635  00019E  EC66  F0BF         	call	i1_ClearLCD	;wreg free
 33636                           
 33637                           ;interrupts.c: 144: SetLCDcursor(0, 0);
 33638  0001A2  0E00               	movlw	0
 33639  0001A4  6E0F               	movwf	i1SetLCDcursor@Col,c
 33640  0001A6  0E00               	movlw	0
 33641  0001A8  ECA0  F0BE         	call	i1_SetLCDcursor
 33642                           
 33643                           ;interrupts.c: 145: LCDPrintChar('>');
 33644  0001AC  0E3E               	movlw	62
 33645  0001AE  ECB5  F0BF         	call	i1_LCDPrintChar
 33646                           
 33647                           ;interrupts.c: 146: SetLCDcursor(0, 1);
 33648  0001B2  0E01               	movlw	1
 33649  0001B4  6E0F               	movwf	i1SetLCDcursor@Col,c
 33650  0001B6  0E00               	movlw	0
 33651  0001B8  ECA0  F0BE         	call	i1_SetLCDcursor
 33652                           
 33653                           ;interrupts.c: 147: LCDPrintString(LCD_TEMP);
 33654  0001BC  0EC4               	movlw	low low_isr@LCD_TEMP
 33655  0001BE  6E0F               	movwf	i1LCDPrintString@Text,c
 33656  0001C0  0E00               	movlw	high low_isr@LCD_TEMP
 33657  0001C2  6E10               	movwf	i1LCDPrintString@Text+1,c
 33658  0001C4  EC94  F0B9         	call	i1_LCDPrintString	;wreg free
 33659                           
 33660                           ;interrupts.c: 148: }
 33661                           ;interrupts.c: 149: }
 33662                           ;interrupts.c: 150: }
 33663  0001C8  D093               	goto	i1l14803
 33664  0001CA                     i1l14757:
 33665                           
 33666                           ;interrupts.c: 151: else
 33667                           ;interrupts.c: 152: {
 33668                           ;interrupts.c: 155: if(IsPrintableASCII(rx))
 33669  0001CA  0100               	movlb	0	; () banked
 33670  0001CC  51D8               	movf	low_isr@rx& (0+255),w,b
 33671  0001CE  EC44  F0BF         	call	_IsPrintableASCII
 33672  0001D2  0900               	iorlw	0
 33673  0001D4  B4D8               	btfsc	status,2,c
 33674  0001D6  D08C               	goto	i1l14803
 33675                           
 33676                           ;interrupts.c: 156: {
 33677                           ;interrupts.c: 158: UARTchar(rx, 0, 0);
 33678  0001D8  0E00               	movlw	0
 33679  0001DA  6E08               	movwf	i1UARTchar@NinethBit_override,c
 33680  0001DC  0E00               	movlw	0
 33681  0001DE  6E09               	movwf	i1UARTchar@NinethBit_override_data,c
 33682  0001E0  0100               	movlb	0	; () banked
 33683  0001E2  51D8               	movf	low_isr@rx& (0+255),w,b
 33684  0001E4  ECE3  F0B8         	call	i1_UARTchar
 33685                           
 33686                           ;interrupts.c: 159: if(bufferCount < 15)
 33687  0001E8  0E0F               	movlw	15
 33688  0001EA  0100               	movlb	0	; () banked
 33689  0001EC  61DE               	cpfslt	_bufferCount& (0+255),b
 33690  0001EE  D005               	goto	i1l14765
 33691                           
 33692                           ; BSR set to: 0
 33693                           ;interrupts.c: 160: {
 33694                           ;interrupts.c: 162: LCDPrintChar(rx);
 33695  0001F0  0100               	movlb	0	; () banked
 33696  0001F2  51D8               	movf	low_isr@rx& (0+255),w,b
 33697  0001F4  ECB5  F0BF         	call	i1_LCDPrintChar
 33698  0001F8  D000               	goto	i1l14765
 33699  0001FA                     i1l14765:
 33700                           
 33701                           ;interrupts.c: 163: }
 33702                           ;interrupts.c: 164: TEMP_Rxdata[bufferCount] = rx;
 33703  0001FA  0100               	movlb	0	; () banked
 33704  0001FC  51DE               	movf	_bufferCount& (0+255),w,b
 33705  0001FE  0D01               	mullw	1
 33706  000200  0E60               	movlw	low low_isr@TEMP_Rxdata
 33707  000202  24F3               	addwf	prodl,w,c
 33708  000204  6ED9               	movwf	fsr2l,c
 33709  000206  0E00               	movlw	high low_isr@TEMP_Rxdata
 33710  000208  20F4               	addwfc	prodh,w,c
 33711  00020A  6EDA               	movwf	fsr2h,c
 33712  00020C  C0D8  FFDF         	movff	low_isr@rx,indf2
 33713                           
 33714                           ; BSR set to: 0
 33715                           ;interrupts.c: 165: bufferCount++;
 33716  000210  0100               	movlb	0	; () banked
 33717  000212  2BDE               	incf	_bufferCount& (0+255),f,b
 33718                           
 33719                           ; BSR set to: 0
 33720                           ;interrupts.c: 166: if(bufferCount>=99)
 33721  000214  0E62               	movlw	98
 33722  000216  0100               	movlb	0	; () banked
 33723  000218  65DE               	cpfsgt	_bufferCount& (0+255),b
 33724  00021A  D06A               	goto	i1l14803
 33725                           
 33726                           ; BSR set to: 0
 33727                           ;interrupts.c: 167: {
 33728                           ;interrupts.c: 168: UARTstring("\r\nBuffer overflow! Deleting Buffer \r\n");
 33729  00021C  0E80               	movlw	low STR_5
 33730  00021E  6E0C               	movwf	i1UARTstring@data,c
 33731  000220  0EF2               	movlw	high STR_5
 33732  000222  6E0D               	movwf	i1UARTstring@data+1,c
 33733  000224  EC8A  F0B5         	call	i1_UARTstring	;wreg free
 33734                           
 33735                           ;interrupts.c: 169: cleanBuffer(TEMP_Rxdata, 100);
 33736  000228  0E60               	movlw	low low_isr@TEMP_Rxdata
 33737  00022A  6E01               	movwf	i1cleanBuffer@data,c
 33738  00022C  0E00               	movlw	high low_isr@TEMP_Rxdata
 33739  00022E  6E02               	movwf	i1cleanBuffer@data+1,c
 33740  000230  0E00               	movlw	0
 33741  000232  6E04               	movwf	i1cleanBuffer@count+1,c
 33742  000234  0E64               	movlw	100
 33743  000236  6E03               	movwf	i1cleanBuffer@count,c
 33744  000238  EC7F  F0BD         	call	i1_cleanBuffer	;wreg free
 33745  00023C  D055               	goto	i1l14801
 33746                           
 33747                           ; BSR set to: 0
 33748                           ;interrupts.c: 176: }
 33749                           ;interrupts.c: 177: }
 33750                           ;interrupts.c: 178: }
 33751                           
 33752                           ; BSR set to: 0
 33753                           
 33754                           ;interrupts.c: 173: else
 33755                           ;interrupts.c: 174: {
 33756                           
 33757                           ; BSR set to: 0
 33758                           
 33759                           ; BSR set to: 0
 33760                           ;interrupts.c: 171: }
 33761                           ;interrupts.c: 172: }
 33762                           
 33763                           ;interrupts.c: 170: bufferCount=0;
 33764  00023E  D058               	goto	i1l14803
 33765  000240                     i1l14777:
 33766                           
 33767                           ; BSR set to: 0
 33768                           ;interrupts.c: 179: else if((rx == '\n' || rx == '\r') && bufferCount == 0)
 33769  000240  0E0A               	movlw	10
 33770  000242  0100               	movlb	0	; () banked
 33771  000244  19D8               	xorwf	low_isr@rx& (0+255),w,b
 33772  000246  B4D8               	btfsc	status,2,c
 33773  000248  D005               	goto	i1l14781
 33774                           
 33775                           ; BSR set to: 0
 33776  00024A  0E0D               	movlw	13
 33777  00024C  0100               	movlb	0	; () banked
 33778  00024E  19D8               	xorwf	low_isr@rx& (0+255),w,b
 33779  000250  A4D8               	btfss	status,2,c
 33780  000252  D00F               	goto	i1l14785
 33781  000254                     i1l14781:
 33782                           
 33783                           ; BSR set to: 0
 33784  000254  0100               	movlb	0	; () banked
 33785  000256  51DE               	movf	_bufferCount& (0+255),w,b
 33786  000258  A4D8               	btfss	status,2,c
 33787  00025A  D00B               	goto	i1l14785
 33788                           
 33789                           ; BSR set to: 0
 33790                           ;interrupts.c: 180: {
 33791                           ;interrupts.c: 182: cleanBuffer(TEMP_Rxdata, 100);
 33792  00025C  0E60               	movlw	low low_isr@TEMP_Rxdata
 33793  00025E  6E01               	movwf	i1cleanBuffer@data,c
 33794  000260  0E00               	movlw	high low_isr@TEMP_Rxdata
 33795  000262  6E02               	movwf	i1cleanBuffer@data+1,c
 33796  000264  0E00               	movlw	0
 33797  000266  6E04               	movwf	i1cleanBuffer@count+1,c
 33798  000268  0E64               	movlw	100
 33799  00026A  6E03               	movwf	i1cleanBuffer@count,c
 33800  00026C  EC7F  F0BD         	call	i1_cleanBuffer	;wreg free
 33801                           
 33802                           ;interrupts.c: 183: }
 33803  000270  D03F               	goto	i1l14803
 33804  000272                     i1l14785:
 33805                           
 33806                           ;interrupts.c: 184: else
 33807                           ;interrupts.c: 185: {
 33808                           ;interrupts.c: 187: if(TEMP_Rxdata[0] == 0 && TEMP_Rxdata[1] != 0)
 33809  000272  0100               	movlb	0	; () banked
 33810  000274  5160               	movf	low_isr@TEMP_Rxdata& (0+255),w,b
 33811  000276  0100               	movlb	0	; () banked
 33812  000278  A4D8               	btfss	status,2,c
 33813  00027A  D013               	goto	i1l14791
 33814                           
 33815                           ; BSR set to: 0
 33816  00027C  0100               	movlb	0	; () banked
 33817  00027E  5161               	movf	(low_isr@TEMP_Rxdata+1)& (0+255),w,b
 33818  000280  B4D8               	btfsc	status,2,c
 33819  000282  D00F               	goto	i1l14791
 33820                           
 33821                           ; BSR set to: 0
 33822                           ;interrupts.c: 188: {
 33823                           ;interrupts.c: 189: BufferCopy(TEMP_Rxdata, Rxdata, 100,1);
 33824  000284  0E60               	movlw	low low_isr@TEMP_Rxdata
 33825  000286  6E09               	movwf	i1BufferCopy@from,c
 33826  000288  0E00               	movlw	high low_isr@TEMP_Rxdata
 33827  00028A  6E0A               	movwf	i1BufferCopy@from+1,c
 33828  00028C  0E64               	movlw	low _Rxdata
 33829  00028E  6E0B               	movwf	i1BufferCopy@to,c
 33830  000290  0E03               	movlw	high _Rxdata
 33831  000292  6E0C               	movwf	i1BufferCopy@to+1,c
 33832  000294  0E64               	movlw	100
 33833  000296  6E0D               	movwf	i1BufferCopy@count,c
 33834  000298  0E01               	movlw	1
 33835  00029A  6E0E               	movwf	i1BufferCopy@shift,c
 33836  00029C  EC46  F0B4         	call	i1_BufferCopy	;wreg free
 33837                           
 33838                           ;interrupts.c: 190: }
 33839  0002A0  D00F               	goto	i1l14793
 33840  0002A2                     i1l14791:
 33841                           
 33842                           ;interrupts.c: 191: else
 33843                           ;interrupts.c: 192: {
 33844                           ;interrupts.c: 193: BufferCopy(TEMP_Rxdata, Rxdata, 100,0);
 33845  0002A2  0E60               	movlw	low low_isr@TEMP_Rxdata
 33846  0002A4  6E09               	movwf	i1BufferCopy@from,c
 33847  0002A6  0E00               	movlw	high low_isr@TEMP_Rxdata
 33848  0002A8  6E0A               	movwf	i1BufferCopy@from+1,c
 33849  0002AA  0E64               	movlw	low _Rxdata
 33850  0002AC  6E0B               	movwf	i1BufferCopy@to,c
 33851  0002AE  0E03               	movlw	high _Rxdata
 33852  0002B0  6E0C               	movwf	i1BufferCopy@to+1,c
 33853  0002B2  0E64               	movlw	100
 33854  0002B4  6E0D               	movwf	i1BufferCopy@count,c
 33855  0002B6  0E00               	movlw	0
 33856  0002B8  6E0E               	movwf	i1BufferCopy@shift,c
 33857  0002BA  EC46  F0B4         	call	i1_BufferCopy	;wreg free
 33858  0002BE  D000               	goto	i1l14793
 33859  0002C0                     i1l14793:
 33860                           
 33861                           ;interrupts.c: 194: }
 33862                           ;interrupts.c: 195: ClearLCD();
 33863  0002C0  EC66  F0BF         	call	i1_ClearLCD	;wreg free
 33864                           
 33865                           ;interrupts.c: 196: SetLCDcursor(0, 0);
 33866  0002C4  0E00               	movlw	0
 33867  0002C6  6E0F               	movwf	i1SetLCDcursor@Col,c
 33868  0002C8  0E00               	movlw	0
 33869  0002CA  ECA0  F0BE         	call	i1_SetLCDcursor
 33870                           
 33871                           ;interrupts.c: 197: LCDPrintChar('>');
 33872  0002CE  0E3E               	movlw	62
 33873  0002D0  ECB5  F0BF         	call	i1_LCDPrintChar
 33874                           
 33875                           ;interrupts.c: 198: cleanBuffer(TEMP_Rxdata, 100);
 33876  0002D4  0E60               	movlw	low low_isr@TEMP_Rxdata
 33877  0002D6  6E01               	movwf	i1cleanBuffer@data,c
 33878  0002D8  0E00               	movlw	high low_isr@TEMP_Rxdata
 33879  0002DA  6E02               	movwf	i1cleanBuffer@data+1,c
 33880  0002DC  0E00               	movlw	0
 33881  0002DE  6E04               	movwf	i1cleanBuffer@count+1,c
 33882  0002E0  0E64               	movlw	100
 33883  0002E2  6E03               	movwf	i1cleanBuffer@count,c
 33884  0002E4  EC7F  F0BD         	call	i1_cleanBuffer	;wreg free
 33885  0002E8                     i1l14801:
 33886                           
 33887                           ;interrupts.c: 199: bufferCount=0;
 33888  0002E8  0E00               	movlw	0
 33889  0002EA  0100               	movlb	0	; () banked
 33890  0002EC  6FDE               	movwf	_bufferCount& (0+255),b
 33891                           
 33892                           ; BSR set to: 0
 33893                           
 33894                           ; BSR set to: 0
 33895  0002EE  D000               	goto	i1l14803
 33896  0002F0                     i1l14803:
 33897                           
 33898                           ;interrupts.c: 200: }
 33899                           ;interrupts.c: 201: }
 33900                           ;interrupts.c: 202: PIR1bits.RCIF = 0;
 33901  0002F0  9A9E               	bcf	3998,5,c	;volatile
 33902                           
 33903                           ;interrupts.c: 203: PIE1bits.RCIE = 1;
 33904  0002F2  8A9D               	bsf	3997,5,c	;volatile
 33905                           
 33906                           ;interrupts.c: 204: RCSTAbits.CREN = 1;
 33907  0002F4  88AB               	bsf	4011,4,c	;volatile
 33908                           
 33909                           ;interrupts.c: 205: }
 33910  0002F6  D0BE               	goto	i1l98
 33911  0002F8                     i1l72:
 33912                           
 33913                           ;interrupts.c: 206: else if(INTCONbits.RBIF)
 33914  0002F8  A0F2               	btfss	intcon,0,c	;volatile
 33915  0002FA  D0A4               	goto	i1l99
 33916                           
 33917                           ;interrupts.c: 207: {
 33918                           ;interrupts.c: 210: INTCONbits.RBIE = 0;
 33919  0002FC  96F2               	bcf	intcon,3,c	;volatile
 33920                           
 33921                           ;interrupts.c: 211: __nop();
 33922  0002FE  F000               	nop	
 33923                           
 33924                           ;interrupts.c: 212: __nop();
 33925  000300  F000               	nop	
 33926                           
 33927                           ;interrupts.c: 213: IRpin = ReadIRpin();
 33928  000302  ECAE  F0BF         	call	i1_ReadIRpin	;wreg free
 33929  000306  0100               	movlb	0	; () banked
 33930  000308  6FD6               	movwf	low_isr@IRpin& (0+255),b
 33931                           
 33932                           ; BSR set to: 0
 33933                           ;interrupts.c: 214: IRrawCount = 0;
 33934  00030A  0E00               	movlw	0
 33935  00030C  0100               	movlb	0	; () banked
 33936  00030E  6FDA               	movwf	(_IRrawCount+1)& (0+255),b
 33937  000310  0E00               	movlw	0
 33938  000312  6FD9               	movwf	_IRrawCount& (0+255),b
 33939                           
 33940                           ; BSR set to: 0
 33941                           ;interrupts.c: 215: if(IRpin != IRpinOLD)
 33942  000314  0100               	movlb	0	; () banked
 33943  000316  51DB               	movf	_IRpinOLD& (0+255),w,b
 33944  000318  0100               	movlb	0	; () banked
 33945  00031A  19D6               	xorwf	low_isr@IRpin& (0+255),w,b
 33946  00031C  B4D8               	btfsc	status,2,c
 33947  00031E  D08D               	goto	i1l14857
 33948                           
 33949                           ; BSR set to: 0
 33950                           ;interrupts.c: 216: {
 33951                           ;interrupts.c: 217: IRrawCount += TMR0L;
 33952  000320  50D6               	movf	4054,w,c	;volatile
 33953  000322  0100               	movlb	0	; () banked
 33954  000324  27D9               	addwf	_IRrawCount& (0+255),f,b
 33955  000326  0E00               	movlw	0
 33956  000328  23DA               	addwfc	(_IRrawCount+1)& (0+255),f,b
 33957                           
 33958                           ; BSR set to: 0
 33959                           ;interrupts.c: 218: IRrawCount += ((unsigned int)TMR0H << 8);
 33960  00032A  50D7               	movf	4055,w,c	;volatile
 33961  00032C  0100               	movlb	0	; () banked
 33962  00032E  27DA               	addwf	(_IRrawCount+1)& (0+255),f,b
 33963                           
 33964                           ; BSR set to: 0
 33965                           ;interrupts.c: 219: if(IRrawCodeNum < 72)
 33966  000330  0E48               	movlw	72
 33967  000332  0100               	movlb	0	; () banked
 33968  000334  61DC               	cpfslt	_IRrawCodeNum& (0+255),b
 33969  000336  D055               	goto	i1l14845
 33970                           
 33971                           ; BSR set to: 0
 33972                           ;interrupts.c: 220: {
 33973                           ;interrupts.c: 222: INTCONbits.TMR0IF = 0;
 33974  000338  94F2               	bcf	intcon,2,c	;volatile
 33975                           
 33976                           ;interrupts.c: 223: INTCONbits.TMR0IE = 1;
 33977  00033A  8AF2               	bsf	intcon,5,c	;volatile
 33978                           
 33979                           ; BSR set to: 0
 33980                           ;interrupts.c: 224: Reset_Timer0();
 33981  00033C  ECCE  F0BF         	call	_Reset_Timer0	;wreg free
 33982                           
 33983                           ;interrupts.c: 225: if(IRrawCodeNum != 0)
 33984  000340  0100               	movlb	0	; () banked
 33985  000342  51DC               	movf	_IRrawCodeNum& (0+255),w,b
 33986  000344  B4D8               	btfsc	status,2,c
 33987  000346  D01A               	goto	i1l14831
 33988                           
 33989                           ; BSR set to: 0
 33990                           ;interrupts.c: 226: {
 33991                           ;interrupts.c: 227: IRRawCode[IRrawCodeNum - 1] = IRrawCount;
 33992  000348  0EFE               	movlw	254
 33993  00034A  6E13               	movwf	??_low_isr& (0+255),c
 33994  00034C  0EFF               	movlw	255
 33995  00034E  6E14               	movwf	(??_low_isr+1)& (0+255),c
 33996  000350  0100               	movlb	0	; () banked
 33997  000352  51DC               	movf	_IRrawCodeNum& (0+255),w,b
 33998  000354  6E15               	movwf	(??_low_isr+2)& (0+255),c
 33999  000356  6A16               	clrf	(??_low_isr+3)& (0+255),c
 34000  000358  90D8               	bcf	status,0,c
 34001  00035A  3615               	rlcf	??_low_isr+2,f,c
 34002  00035C  3616               	rlcf	??_low_isr+3,f,c
 34003  00035E  5013               	movf	??_low_isr,w,c
 34004  000360  2615               	addwf	??_low_isr+2,f,c
 34005  000362  5014               	movf	??_low_isr+1,w,c
 34006  000364  2216               	addwfc	??_low_isr+3,f,c
 34007  000366  0E64               	movlw	low _IRRawCode
 34008  000368  2415               	addwf	??_low_isr+2,w,c
 34009  00036A  6ED9               	movwf	fsr2l,c
 34010  00036C  0E04               	movlw	high _IRRawCode
 34011  00036E  2016               	addwfc	??_low_isr+3,w,c
 34012  000370  6EDA               	movwf	fsr2h,c
 34013  000372  C0D9  FFDE         	movff	_IRrawCount,postinc2
 34014  000376  C0DA  FFDD         	movff	_IRrawCount+1,postdec2
 34015  00037A  D000               	goto	i1l14831
 34016  00037C                     i1l14831:
 34017                           
 34018                           ; BSR set to: 0
 34019                           ;interrupts.c: 228: }
 34020                           ;interrupts.c: 229: if(IRrawCount >= 28800L && IRrawCount <= 32000L )
 34021  00037C  0E80               	movlw	128
 34022  00037E  0100               	movlb	0	; () banked
 34023  000380  5DD9               	subwf	_IRrawCount& (0+255),w,b
 34024  000382  0E70               	movlw	112
 34025  000384  0100               	movlb	0	; () banked
 34026  000386  59DA               	subwfb	(_IRrawCount+1)& (0+255),w,b
 34027  000388  A0D8               	btfss	status,0,c
 34028  00038A  D028               	goto	i1l14843
 34029                           
 34030                           ; BSR set to: 0
 34031  00038C  0100               	movlb	0	; () banked
 34032  00038E  05D9               	decf	_IRrawCount& (0+255),w,b
 34033  000390  0E7D               	movlw	125
 34034  000392  0100               	movlb	0	; () banked
 34035  000394  59DA               	subwfb	(_IRrawCount+1)& (0+255),w,b
 34036  000396  B0D8               	btfsc	status,0,c
 34037  000398  D021               	goto	i1l14843
 34038                           
 34039                           ; BSR set to: 0
 34040                           ;interrupts.c: 230: {
 34041                           ;interrupts.c: 232: IR_New_Code = 2;
 34042  00039A  0E02               	movlw	2
 34043  00039C  0100               	movlb	0	; () banked
 34044  00039E  6FF3               	movwf	_IR_New_Code& (0+255),b
 34045                           
 34046                           ; BSR set to: 0
 34047                           ;interrupts.c: 233: if(IR_NEC)
 34048  0003A0  0100               	movlb	0	; () banked
 34049  0003A2  51EF               	movf	_IR_NEC& (0+255),w,b
 34050  0003A4  0100               	movlb	0	; () banked
 34051  0003A6  11F0               	iorwf	(_IR_NEC+1)& (0+255),w,b
 34052  0003A8  0100               	movlb	0	; () banked
 34053  0003AA  11F1               	iorwf	(_IR_NEC+2)& (0+255),w,b
 34054  0003AC  0100               	movlb	0	; () banked
 34055  0003AE  11F2               	iorwf	(_IR_NEC+3)& (0+255),w,b
 34056  0003B0  B4D8               	btfsc	status,2,c
 34057  0003B2  D00F               	goto	i1l14841
 34058                           
 34059                           ; BSR set to: 0
 34060                           ;interrupts.c: 234: {
 34061                           ;interrupts.c: 235: UseIRCode(&IR_New_Code,IR_NEC);
 34062  0003B4  0EF3               	movlw	low _IR_New_Code
 34063  0003B6  6E0B               	movwf	UseIRCode@Code,c
 34064  0003B8  0E00               	movlw	high _IR_New_Code
 34065  0003BA  6E0C               	movwf	UseIRCode@Code+1,c
 34066  0003BC  C0EF  F00D         	movff	_IR_NEC,UseIRCode@NEC
 34067  0003C0  C0F0  F00E         	movff	_IR_NEC+1,UseIRCode@NEC+1
 34068  0003C4  C0F1  F00F         	movff	_IR_NEC+2,UseIRCode@NEC+2
 34069  0003C8  C0F2  F010         	movff	_IR_NEC+3,UseIRCode@NEC+3
 34070  0003CC  ECE5  F0B2         	call	_UseIRCode	;wreg free
 34071  0003D0  D000               	goto	i1l14841
 34072  0003D2                     i1l14841:
 34073                           
 34074                           ;interrupts.c: 236: }
 34075                           ;interrupts.c: 237: IRRawCode[0] = IRrawCount;
 34076  0003D2  C0D9  F464         	movff	_IRrawCount,_IRRawCode
 34077  0003D6  C0DA  F465         	movff	_IRrawCount+1,_IRRawCode+1
 34078  0003DA  D000               	goto	i1l14843
 34079  0003DC                     i1l14843:
 34080                           
 34081                           ;interrupts.c: 238: }
 34082                           ;interrupts.c: 239: IRrawCodeNum++;
 34083  0003DC  0100               	movlb	0	; () banked
 34084  0003DE  2BDC               	incf	_IRrawCodeNum& (0+255),f,b
 34085  0003E0  D000               	goto	i1l14845
 34086  0003E2                     i1l14845:
 34087                           
 34088                           ; BSR set to: 0
 34089                           ;interrupts.c: 240: }
 34090                           ;interrupts.c: 241: if(IRrawCodeNum == 72)
 34091  0003E2  0E48               	movlw	72
 34092  0003E4  0100               	movlb	0	; () banked
 34093  0003E6  19DC               	xorwf	_IRrawCodeNum& (0+255),w,b
 34094  0003E8  A4D8               	btfss	status,2,c
 34095  0003EA  D027               	goto	i1l14857
 34096                           
 34097                           ; BSR set to: 0
 34098                           ;interrupts.c: 242: {
 34099                           ;interrupts.c: 243: INTCONbits.TMR0IF = 0;
 34100  0003EC  94F2               	bcf	intcon,2,c	;volatile
 34101                           
 34102                           ;interrupts.c: 244: INTCONbits.TMR0IE = 0;
 34103  0003EE  9AF2               	bcf	intcon,5,c	;volatile
 34104                           
 34105                           ; BSR set to: 0
 34106                           ;interrupts.c: 245: IR_New_Code = IRrawToNEC(IRRawCode, &IR_NEC, 1);
 34107  0003F0  0E64               	movlw	low _IRRawCode
 34108  0003F2  6E01               	movwf	IRrawToNEC@Raw,c
 34109  0003F4  0E04               	movlw	high _IRRawCode
 34110  0003F6  6E02               	movwf	IRrawToNEC@Raw+1,c
 34111  0003F8  0EEF               	movlw	low _IR_NEC
 34112  0003FA  6E03               	movwf	IRrawToNEC@NEC,c
 34113  0003FC  0E00               	movlw	high _IR_NEC
 34114  0003FE  6E04               	movwf	IRrawToNEC@NEC+1,c
 34115  000400  0E01               	movlw	1
 34116  000402  6E05               	movwf	IRrawToNEC@Invert,c
 34117  000404  EC00  F0A1         	call	_IRrawToNEC	;wreg free
 34118  000408  0100               	movlb	0	; () banked
 34119  00040A  6FF3               	movwf	_IR_New_Code& (0+255),b
 34120                           
 34121                           ; BSR set to: 0
 34122                           ;interrupts.c: 246: if(IR_New_Code)
 34123  00040C  0100               	movlb	0	; () banked
 34124  00040E  51F3               	movf	_IR_New_Code& (0+255),w,b
 34125  000410  B4D8               	btfsc	status,2,c
 34126  000412  D00F               	goto	i1l14855
 34127                           
 34128                           ; BSR set to: 0
 34129                           ;interrupts.c: 247: {
 34130                           ;interrupts.c: 248: UseIRCode(&IR_New_Code,IR_NEC);
 34131  000414  0EF3               	movlw	low _IR_New_Code
 34132  000416  6E0B               	movwf	UseIRCode@Code,c
 34133  000418  0E00               	movlw	high _IR_New_Code
 34134  00041A  6E0C               	movwf	UseIRCode@Code+1,c
 34135  00041C  C0EF  F00D         	movff	_IR_NEC,UseIRCode@NEC
 34136  000420  C0F0  F00E         	movff	_IR_NEC+1,UseIRCode@NEC+1
 34137  000424  C0F1  F00F         	movff	_IR_NEC+2,UseIRCode@NEC+2
 34138  000428  C0F2  F010         	movff	_IR_NEC+3,UseIRCode@NEC+3
 34139  00042C  ECE5  F0B2         	call	_UseIRCode	;wreg free
 34140  000430  D000               	goto	i1l14855
 34141  000432                     i1l14855:
 34142                           
 34143                           ;interrupts.c: 249: }
 34144                           ;interrupts.c: 250: IRrawCodeNum = 0;
 34145  000432  0E00               	movlw	0
 34146  000434  0100               	movlb	0	; () banked
 34147  000436  6FDC               	movwf	_IRrawCodeNum& (0+255),b
 34148                           
 34149                           ; BSR set to: 0
 34150  000438  D000               	goto	i1l14857
 34151  00043A                     i1l14857:
 34152                           
 34153                           ; BSR set to: 0
 34154                           ;interrupts.c: 251: }
 34155                           ;interrupts.c: 252: }
 34156                           ;interrupts.c: 253: IRpinOLD = IRpin;
 34157  00043A  C0D6  F0DB         	movff	low_isr@IRpin,_IRpinOLD
 34158                           
 34159                           ; BSR set to: 0
 34160                           ;interrupts.c: 255: INTCONbits.RBIF = 0;
 34161  00043E  90F2               	bcf	intcon,0,c	;volatile
 34162                           
 34163                           ; BSR set to: 0
 34164                           ;interrupts.c: 257: INTCONbits.RBIE = 1;
 34165  000440  86F2               	bsf	intcon,3,c	;volatile
 34166                           
 34167                           ;interrupts.c: 258: }
 34168  000442  D018               	goto	i1l98
 34169  000444                     i1l99:
 34170                           
 34171                           ;interrupts.c: 259: else if (INTCONbits.TMR0IF)
 34172  000444  A4F2               	btfss	intcon,2,c	;volatile
 34173  000446  D00F               	goto	i1l108
 34174                           
 34175                           ;interrupts.c: 260: {
 34176                           ;interrupts.c: 261: cleanBuffer16bit(IRRawCode, IRrawCodeNum);
 34177  000448  0E64               	movlw	low _IRRawCode
 34178  00044A  6E01               	movwf	i1cleanBuffer16bit@data,c
 34179  00044C  0E04               	movlw	high _IRRawCode
 34180  00044E  6E02               	movwf	i1cleanBuffer16bit@data+1,c
 34181  000450  C0DC  F003         	movff	_IRrawCodeNum,i1cleanBuffer16bit@count
 34182  000454  6A04               	clrf	i1cleanBuffer16bit@count+1,c
 34183  000456  ECDF  F0BC         	call	i1_cleanBuffer16bit	;wreg free
 34184                           
 34185                           ;interrupts.c: 262: IRrawCodeNum = 0;
 34186  00045A  0E00               	movlw	0
 34187  00045C  0100               	movlb	0	; () banked
 34188  00045E  6FDC               	movwf	_IRrawCodeNum& (0+255),b
 34189                           
 34190                           ; BSR set to: 0
 34191                           ;interrupts.c: 263: INTCONbits.TMR0IF = 0;
 34192  000460  94F2               	bcf	intcon,2,c	;volatile
 34193                           
 34194                           ; BSR set to: 0
 34195                           ;interrupts.c: 264: INTCONbits.TMR0IE = 0;
 34196  000462  9AF2               	bcf	intcon,5,c	;volatile
 34197                           
 34198                           ;interrupts.c: 265: }
 34199  000464  D007               	goto	i1l98
 34200  000466                     i1l108:
 34201                           
 34202                           ;interrupts.c: 266: else if(INTCONbits.INT0IF)
 34203  000466  A2F2               	btfss	intcon,1,c	;volatile
 34204  000468  D003               	goto	i1l110
 34205                           
 34206                           ;interrupts.c: 267: {
 34207                           ;interrupts.c: 269: INTCONbits.INT0IE = 0;
 34208  00046A  98F2               	bcf	intcon,4,c	;volatile
 34209                           
 34210                           ;interrupts.c: 270: INTCONbits.INT0IF = 0;
 34211  00046C  92F2               	bcf	intcon,1,c	;volatile
 34212                           
 34213                           ;interrupts.c: 271: }
 34214  00046E  D002               	goto	i1l98
 34215  000470                     i1l110:
 34216                           
 34217                           ;interrupts.c: 272: else
 34218                           ;interrupts.c: 273: {
 34219                           ;interrupts.c: 275: __nop();
 34220  000470  F000               	nop	
 34221  000472  D000               	goto	i1l98
 34222  000474                     i1l98:
 34223                           
 34224                           ;interrupts.c: 276: }
 34225                           ;interrupts.c: 277: INTCONbits.PEIE = 1;
 34226  000474  8CF2               	bsf	intcon,6,c	;volatile
 34227  000476  C027  FFF5         	movff	??_low_isr+20,tablat
 34228  00047A  C026  FFF8         	movff	??_low_isr+19,tblptru
 34229  00047E  C025  FFF7         	movff	??_low_isr+18,tblptrh
 34230  000482  C024  FFF6         	movff	??_low_isr+17,tblptrl
 34231  000486  C023  FFF4         	movff	??_low_isr+16,prodh
 34232  00048A  C022  FFF3         	movff	??_low_isr+15,prodl
 34233  00048E  C021  FFDA         	movff	??_low_isr+14,fsr2h
 34234  000492  C020  FFD9         	movff	??_low_isr+13,fsr2l
 34235  000496  C01F  FFE2         	movff	??_low_isr+12,fsr1h
 34236  00049A  C01E  FFE1         	movff	??_low_isr+11,fsr1l
 34237  00049E  C01D  FFEA         	movff	??_low_isr+10,fsr0h
 34238  0004A2  C01C  FFE9         	movff	??_low_isr+9,fsr0l
 34239  0004A6  C01B  FFFB         	movff	??_low_isr+8,pclatu
 34240  0004AA  C01A  FFFA         	movff	??_low_isr+7,pclath
 34241  0004AE  C019  FFE0         	movff	??_low_isr+6,bsr
 34242  0004B2  C018  FFE8         	movff	??_low_isr+5,wreg
 34243  0004B6  C017  FFD8         	movff	??_low_isr+4,status
 34244  0004BA  0010               	retfie	
 34245  0004BC                     __end_of_low_isr:
 34246                           	opt stack 0
 34247                           pclatu	equ	0xFFB
 34248                           pclath	equ	0xFFA
 34249                           tblptru	equ	0xFF8
 34250                           tblptrh	equ	0xFF7
 34251                           tblptrl	equ	0xFF6
 34252                           tablat	equ	0xFF5
 34253                           prodh	equ	0xFF4
 34254                           prodl	equ	0xFF3
 34255                           intcon	equ	0xFF2
 34256                           intcon2	equ	0xFF1
 34257                           indf0	equ	0xFEF
 34258                           postinc0	equ	0xFEE
 34259                           plusw0	equ	0xFEB
 34260                           fsr0h	equ	0xFEA
 34261                           fsr0l	equ	0xFE9
 34262                           wreg	equ	0xFE8
 34263                           indf1	equ	0xFE7
 34264                           postdec1	equ	0xFE5
 34265                           fsr1h	equ	0xFE2
 34266                           fsr1l	equ	0xFE1
 34267                           bsr	equ	0xFE0
 34268                           indf2	equ	0xFDF
 34269                           postinc2	equ	0xFDE
 34270                           postdec2	equ	0xFDD
 34271                           plusw2	equ	0xFDB
 34272                           fsr2h	equ	0xFDA
 34273                           fsr2l	equ	0xFD9
 34274                           status	equ	0xFD8
 34275                           
 34276 ;; *************** function i1_cleanBuffer16bit *****************
 34277 ;; Defined at:
 34278 ;;		line 89 in file "MISC.c"
 34279 ;; Parameters:    Size  Location     Type
 34280 ;;  data            2    0[COMRAM] PTR unsigned int 
 34281 ;;		 -> IRRawCode(144), 
 34282 ;;  count           2    2[COMRAM] int 
 34283 ;; Auto vars:     Size  Location     Type
 34284 ;;  cleanBuffer1    1    7[COMRAM] unsigned char 
 34285 ;; Return value:  Size  Location     Type
 34286 ;;		None               void
 34287 ;; Registers used:
 34288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34289 ;; Tracked objects:
 34290 ;;		On entry : 0/0
 34291 ;;		On exit  : 0/0
 34292 ;;		Unchanged: 0/0
 34293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34296 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34297 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34298 ;;Total ram usage:        8 bytes
 34299 ;; Hardware stack levels used:    1
 34300 ;; Hardware stack levels required when called:    1
 34301 ;; This function calls:
 34302 ;;		Nothing
 34303 ;; This function is called by:
 34304 ;;		_low_isr
 34305 ;; This function uses a non-reentrant model
 34306 ;;
 34307                           
 34308                           	psect	text96
 34309  0179BE                     __ptext96:
 34310                           	opt stack 0
 34311  0179BE                     i1_cleanBuffer16bit:
 34312                           	opt stack 22
 34313                           
 34314                           ;MISC.c: 91: unsigned char i=0;
 34315                           
 34316                           ;incstack = 0
 34317  0179BE  0E00               	movlw	0
 34318  0179C0  6E08               	movwf	i1cleanBuffer16bit@i,c
 34319                           
 34320                           ;MISC.c: 92: for(i=0; i<count;i++)
 34321  0179C2  0E00               	movlw	0
 34322  0179C4  6E08               	movwf	i1cleanBuffer16bit@i,c
 34323  0179C6  D00E               	goto	i1l10693
 34324  0179C8                     i1l10689:
 34325                           
 34326                           ;MISC.c: 93: {
 34327                           ;MISC.c: 94: data[i]= 0;
 34328  0179C8  5008               	movf	i1cleanBuffer16bit@i,w,c
 34329  0179CA  0D02               	mullw	2
 34330  0179CC  50F3               	movf	prodl,w,c
 34331  0179CE  2401               	addwf	i1cleanBuffer16bit@data,w,c
 34332  0179D0  6ED9               	movwf	fsr2l,c
 34333  0179D2  50F4               	movf	prodh,w,c
 34334  0179D4  2002               	addwfc	i1cleanBuffer16bit@data+1,w,c
 34335  0179D6  6EDA               	movwf	fsr2h,c
 34336  0179D8  0E00               	movlw	0
 34337  0179DA  6EDE               	movwf	postinc2,c
 34338  0179DC  0E00               	movlw	0
 34339  0179DE  6EDD               	movwf	postdec2,c
 34340  0179E0  2A08               	incf	i1cleanBuffer16bit@i,f,c
 34341  0179E2  D000               	goto	i1l10693
 34342  0179E4                     i1l10693:
 34343  0179E4  5008               	movf	i1cleanBuffer16bit@i,w,c
 34344  0179E6  6E05               	movwf	??i1_cleanBuffer16bit& (0+255),c
 34345  0179E8  6A06               	clrf	(??i1_cleanBuffer16bit+1)& (0+255),c
 34346  0179EA  5003               	movf	i1cleanBuffer16bit@count,w,c
 34347  0179EC  5C05               	subwf	??i1_cleanBuffer16bit,w,c
 34348  0179EE  5006               	movf	??i1_cleanBuffer16bit+1,w,c
 34349  0179F0  0A80               	xorlw	128
 34350  0179F2  6E07               	movwf	(??i1_cleanBuffer16bit+2)& (0+255),c
 34351  0179F4  5004               	movf	i1cleanBuffer16bit@count+1,w,c
 34352  0179F6  0A80               	xorlw	128
 34353  0179F8  5807               	subwfb	(??i1_cleanBuffer16bit+2)& (0+255),w,c
 34354  0179FA  A0D8               	btfss	status,0,c
 34355  0179FC  D7E5               	goto	i1l10689
 34356  0179FE  0012               	return		;funcret
 34357  017A00                     __end_ofi1_cleanBuffer16bit:
 34358                           	opt stack 0
 34359                           pclatu	equ	0xFFB
 34360                           pclath	equ	0xFFA
 34361                           tblptru	equ	0xFF8
 34362                           tblptrh	equ	0xFF7
 34363                           tblptrl	equ	0xFF6
 34364                           tablat	equ	0xFF5
 34365                           prodh	equ	0xFF4
 34366                           prodl	equ	0xFF3
 34367                           intcon	equ	0xFF2
 34368                           intcon2	equ	0xFF1
 34369                           indf0	equ	0xFEF
 34370                           postinc0	equ	0xFEE
 34371                           plusw0	equ	0xFEB
 34372                           fsr0h	equ	0xFEA
 34373                           fsr0l	equ	0xFE9
 34374                           wreg	equ	0xFE8
 34375                           indf1	equ	0xFE7
 34376                           postdec1	equ	0xFE5
 34377                           fsr1h	equ	0xFE2
 34378                           fsr1l	equ	0xFE1
 34379                           bsr	equ	0xFE0
 34380                           indf2	equ	0xFDF
 34381                           postinc2	equ	0xFDE
 34382                           postdec2	equ	0xFDD
 34383                           plusw2	equ	0xFDB
 34384                           fsr2h	equ	0xFDA
 34385                           fsr2l	equ	0xFD9
 34386                           status	equ	0xFD8
 34387                           
 34388 ;; *************** function i1_UARTstring *****************
 34389 ;; Defined at:
 34390 ;;		line 237 in file "UART.c"
 34391 ;; Parameters:    Size  Location     Type
 34392 ;;  data            2   11[COMRAM] PTR const unsigned char 
 34393 ;;		 -> STR_320(26), STR_319(3), STR_317(18), STR_315(18), 
 34394 ;;		 -> STR_311(20), STR_288(24), STR_285(3), STR_283(15), 
 34395 ;;		 -> STR_282(22), STR_281(50), STR_280(8), STR_279(6), 
 34396 ;;		 -> STR_278(6), STR_277(11), STR_276(17), STR_275(12), 
 34397 ;;		 -> STR_274(13), STR_273(10), STR_272(12), STR_267(28), 
 34398 ;;		 -> STR_266(68), STR_265(9), STR_264(11), STR_263(23), 
 34399 ;;		 -> STR_261(19), STR_259(20), STR_256(20), STR_247(21), 
 34400 ;;		 -> STR_246(61), STR_245(69), STR_244(7), STR_243(7), 
 34401 ;;		 -> STR_242(10), STR_241(11), STR_240(29), STR_239(13), 
 34402 ;;		 -> STR_238(33), STR_237(25), STR_236(28), STR_235(3), 
 34403 ;;		 -> STR_234(26), STR_233(2), STR_232(34), STR_231(37), 
 34404 ;;		 -> STR_228(24), STR_224(3), STR_214(13), STR_213(73), 
 34405 ;;		 -> STR_212(5), STR_211(12), STR_210(17), STR_204(28), 
 34406 ;;		 -> STR_202(30), STR_200(33), STR_193(42), STR_192(62), 
 34407 ;;		 -> STR_191(26), STR_187(43), STR_185(48), STR_183(27), 
 34408 ;;		 -> STR_176(42), STR_175(66), STR_174(25), STR_172(49), 
 34409 ;;		 -> Command@buf(200), STR_168(33), STR_166(38), STR_164(27), 
 34410 ;;		 -> STR_163(28), STR_153(37), STR_152(68), STR_151(18), 
 34411 ;;		 -> STR_150(15), STR_149(11), STR_148(28), STR_146(18), 
 34412 ;;		 -> STR_144(32), STR_140(31), STR_136(38), STR_123(24), 
 34413 ;;		 -> STR_122(68), STR_121(10), STR_120(6), STR_119(8), 
 34414 ;;		 -> STR_118(11), STR_117(21), STR_115(16), STR_113(19), 
 34415 ;;		 -> STR_110(18), STR_107(16), STR_104(15), STR_101(22), 
 34416 ;;		 -> STR_89(27), STR_88(68), STR_87(7), STR_86(8), 
 34417 ;;		 -> STR_85(11), STR_84(24), STR_82(19), STR_80(19), 
 34418 ;;		 -> STR_77(18), STR_74(25), STR_65(17), STR_64(68), 
 34419 ;;		 -> STR_63(8), STR_62(7), STR_61(11), STR_60(17), 
 34420 ;;		 -> STR_58(12), STR_56(9), STR_53(8), STR_50(13), 
 34421 ;;		 -> STR_47(9), STR_44(8), STR_41(13), STR_36(4), 
 34422 ;;		 -> STR_35(22), STR_29(22), STR_28(3), SetBaud@buf(50), 
 34423 ;;		 -> STR_22(4), STR_21(29), STR_11(12), STR_8(54), 
 34424 ;;		 -> STR_7(3), Version(20), STR_6(19), STR_5(38), 
 34425 ;;		 -> low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), STR_2(2), 
 34426 ;;		 -> STR_1(2), 
 34427 ;; Auto vars:     Size  Location     Type
 34428 ;;		None
 34429 ;; Return value:  Size  Location     Type
 34430 ;;		None               void
 34431 ;; Registers used:
 34432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34433 ;; Tracked objects:
 34434 ;;		On entry : 0/0
 34435 ;;		On exit  : 0/0
 34436 ;;		Unchanged: 0/0
 34437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34441 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34442 ;;Total ram usage:        4 bytes
 34443 ;; Hardware stack levels used:    1
 34444 ;; Hardware stack levels required when called:    3
 34445 ;; This function calls:
 34446 ;;		i1_UARTchar
 34447 ;; This function is called by:
 34448 ;;		_low_isr
 34449 ;; This function uses a non-reentrant model
 34450 ;;
 34451                           
 34452                           	psect	text97
 34453  016B14                     __ptext97:
 34454                           	opt stack 0
 34455  016B14                     i1_UARTstring:
 34456                           	opt stack 20
 34457  016B14                     
 34458                           ;UART.c: 240: {
 34459                           ;UART.c: 241: if(*data != 0)
 34460  016B14  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 34461  016B18  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 34462  016B1C  0E00               	movlw	low (__mediumconst shr (0+16))
 34463  016B1E  6EF8               	movwf	tblptru,c
 34464  016B20  0E0C               	movlw	(high __ramtop+-1)
 34465  016B22  64F7               	cpfsgt	tblptrh,c
 34466  016B24  D003               	bra	i1u1920_27
 34467  016B26  0008               	tblrd		*
 34468  016B28  50F5               	movf	tablat,w,c
 34469  016B2A  D005               	bra	i1u1920_20
 34470  016B2C                     i1u1920_27:
 34471  016B2C  CFF6 FFE9          	movff	tblptrl,fsr0l
 34472  016B30  CFF7 FFEA          	movff	tblptrh,fsr0h
 34473  016B34  50EF               	movf	indf0,w,c
 34474  016B36                     i1u1920_20:
 34475  016B36  0900               	iorlw	0
 34476  016B38  B4D8               	btfsc	status,2,c
 34477  016B3A  D01C               	goto	i1l14667
 34478                           
 34479                           ;UART.c: 242: {
 34480                           ;UART.c: 243: UARTchar((unsigned char) *data, 0, 0);
 34481  016B3C  0E00               	movlw	0
 34482  016B3E  6E08               	movwf	i1UARTchar@NinethBit_override,c
 34483  016B40  0E00               	movlw	0
 34484  016B42  6E09               	movwf	i1UARTchar@NinethBit_override_data,c
 34485  016B44  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 34486  016B48  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 34487  016B4C  0E00               	movlw	low (__mediumconst shr (0+16))
 34488  016B4E  6EF8               	movwf	tblptru,c
 34489  016B50  0E0C               	movlw	(high __ramtop+-1)
 34490  016B52  64F7               	cpfsgt	tblptrh,c
 34491  016B54  D003               	bra	i1u1922_27
 34492  016B56  0008               	tblrd		*
 34493  016B58  50F5               	movf	tablat,w,c
 34494  016B5A  D005               	bra	i1u1922_20
 34495  016B5C                     i1u1922_27:
 34496  016B5C  CFF6 FFE9          	movff	tblptrl,fsr0l
 34497  016B60  CFF7 FFEA          	movff	tblptrh,fsr0h
 34498  016B64  50EF               	movf	indf0,w,c
 34499  016B66                     i1u1922_20:
 34500  016B66  ECE3  F0B8         	call	i1_UARTchar
 34501                           
 34502                           ;UART.c: 244: while((!TXSTAbits.TRMT));
 34503  016B6A  D000               	goto	i1l523
 34504  016B6C                     i1l523:
 34505  016B6C  B2AC               	btfsc	4012,1,c	;volatile
 34506  016B6E  D002               	goto	i1l14667
 34507  016B70  D7FD               	goto	i1l523
 34508  016B72  D000               	goto	i1l14667
 34509  016B74                     i1l14667:
 34510                           
 34511                           ;UART.c: 245: }
 34512                           ;UART.c: 246: } while( *data++);
 34513  016B74  500C               	movf	i1UARTstring@data,w,c
 34514  016B76  6E0E               	movwf	??i1_UARTstring& (0+255),c
 34515  016B78  500D               	movf	i1UARTstring@data+1,w,c
 34516  016B7A  6E0F               	movwf	(??i1_UARTstring+1)& (0+255),c
 34517  016B7C  4A0C               	infsnz	i1UARTstring@data,f,c
 34518  016B7E  2A0D               	incf	i1UARTstring@data+1,f,c
 34519  016B80  C00E  FFF6         	movff	??i1_UARTstring,tblptrl
 34520  016B84  C00F  FFF7         	movff	??i1_UARTstring+1,tblptrh
 34521  016B88  0E00               	movlw	low (__mediumconst shr (0+16))
 34522  016B8A  6EF8               	movwf	tblptru,c
 34523  016B8C  0E0C               	movlw	(high __ramtop+-1)
 34524  016B8E  64F7               	cpfsgt	tblptrh,c
 34525  016B90  D003               	bra	i1u1924_27
 34526  016B92  0008               	tblrd		*
 34527  016B94  50F5               	movf	tablat,w,c
 34528  016B96  D005               	bra	i1u1924_20
 34529  016B98                     i1u1924_27:
 34530  016B98  CFF6 FFE9          	movff	tblptrl,fsr0l
 34531  016B9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 34532  016BA0  50EF               	movf	indf0,w,c
 34533  016BA2                     i1u1924_20:
 34534  016BA2  0900               	iorlw	0
 34535  016BA4  A4D8               	btfss	status,2,c
 34536  016BA6  D7B6               	goto	i1l14663
 34537  016BA8  0012               	return		;funcret
 34538  016BAA                     __end_ofi1_UARTstring:
 34539                           	opt stack 0
 34540                           pclatu	equ	0xFFB
 34541                           pclath	equ	0xFFA
 34542                           tblptru	equ	0xFF8
 34543                           tblptrh	equ	0xFF7
 34544                           tblptrl	equ	0xFF6
 34545                           tablat	equ	0xFF5
 34546                           prodh	equ	0xFF4
 34547                           prodl	equ	0xFF3
 34548                           intcon	equ	0xFF2
 34549                           intcon2	equ	0xFF1
 34550                           indf0	equ	0xFEF
 34551                           postinc0	equ	0xFEE
 34552                           plusw0	equ	0xFEB
 34553                           fsr0h	equ	0xFEA
 34554                           fsr0l	equ	0xFE9
 34555                           wreg	equ	0xFE8
 34556                           indf1	equ	0xFE7
 34557                           postdec1	equ	0xFE5
 34558                           fsr1h	equ	0xFE2
 34559                           fsr1l	equ	0xFE1
 34560                           bsr	equ	0xFE0
 34561                           indf2	equ	0xFDF
 34562                           postinc2	equ	0xFDE
 34563                           postdec2	equ	0xFDD
 34564                           plusw2	equ	0xFDB
 34565                           fsr2h	equ	0xFDA
 34566                           fsr2l	equ	0xFD9
 34567                           status	equ	0xFD8
 34568                           
 34569 ;; *************** function i1_UARTchar *****************
 34570 ;; Defined at:
 34571 ;;		line 198 in file "UART.c"
 34572 ;; Parameters:    Size  Location     Type
 34573 ;;  data            1    wreg     unsigned char 
 34574 ;;  NinethBit_ov    1    7[COMRAM] unsigned char 
 34575 ;;  NinethBit_ov    1    8[COMRAM] unsigned char 
 34576 ;; Auto vars:     Size  Location     Type
 34577 ;;  data            1   10[COMRAM] unsigned char 
 34578 ;; Return value:  Size  Location     Type
 34579 ;;		None               void
 34580 ;; Registers used:
 34581 ;;		wreg, status,2, status,0, cstack
 34582 ;; Tracked objects:
 34583 ;;		On entry : 0/0
 34584 ;;		On exit  : 0/0
 34585 ;;		Unchanged: 0/0
 34586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34591 ;;Total ram usage:        4 bytes
 34592 ;; Hardware stack levels used:    1
 34593 ;; Hardware stack levels required when called:    2
 34594 ;; This function calls:
 34595 ;;		i1_CheckSum_byte
 34596 ;; This function is called by:
 34597 ;;		_low_isr
 34598 ;;		i1_UARTstring
 34599 ;; This function uses a non-reentrant model
 34600 ;;
 34601                           
 34602                           	psect	text98
 34603  0171C6                     __ptext98:
 34604                           	opt stack 0
 34605  0171C6                     i1_UARTchar:
 34606                           	opt stack 20
 34607                           
 34608                           ;incstack = 0
 34609                           ;i1UARTchar@data stored from wreg
 34610  0171C6  6E0B               	movwf	i1UARTchar@data,c
 34611                           
 34612                           ;UART.c: 200: if(TXSTAbits.TX9)
 34613  0171C8  ACAC               	btfss	4012,6,c	;volatile
 34614  0171CA  D031               	goto	i1l13577
 34615                           
 34616                           ;UART.c: 201: {
 34617                           ;UART.c: 203: if(!NinethBit_override)
 34618  0171CC  5008               	movf	i1UARTchar@NinethBit_override,w,c
 34619  0171CE  B4D8               	btfsc	status,2,c
 34620  0171D0  D017               	goto	i1l13573
 34621  0171D2  D023               	goto	i1l13575
 34622                           
 34623                           ;UART.c: 204: {
 34624                           ;UART.c: 206: switch (PARITY)
 34625  0171D4  D015               	goto	i1l13573
 34626  0171D6                     i1l13567:
 34627                           
 34628                           ;UART.c: 209: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 34629  0171D6  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 34630  0171DA  6A02               	clrf	i1CheckSum_byte@This+1,c
 34631  0171DC  0E03               	movlw	3
 34632  0171DE  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 34633  0171E0  EC95  F0BC         	call	i1_CheckSum_byte	;wreg free
 34634  0171E4  D007               	goto	L30
 34635  0171E6                     i1l13569:
 34636                           
 34637                           ;UART.c: 212: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 34638  0171E6  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 34639  0171EA  6A02               	clrf	i1CheckSum_byte@This+1,c
 34640  0171EC  0E02               	movlw	2
 34641  0171EE  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 34642  0171F0  EC95  F0BC         	call	i1_CheckSum_byte	;wreg free
 34643  0171F4                     L30:
 34644  0171F4  6E0A               	movwf	??i1_UARTchar& (0+255),c
 34645  0171F6  D015               	goto	L31
 34646  0171F8                     i1l512:
 34647                           
 34648                           ; BSR set to: 1
 34649                           ;UART.c: 215: TXSTAbits.TX9D = 1;
 34650  0171F8  80AC               	bsf	4012,0,c	;volatile
 34651                           
 34652                           ;UART.c: 216: break;
 34653  0171FA  D019               	goto	i1l13577
 34654  0171FC                     i1l513:
 34655                           
 34656                           ; BSR set to: 1
 34657                           ;UART.c: 218: TXSTAbits.TX9D = 0;
 34658  0171FC  90AC               	bcf	4012,0,c	;volatile
 34659                           
 34660                           ; BSR set to: 1
 34661                           ;UART.c: 220: }
 34662                           
 34663                           ;UART.c: 219: break;
 34664  0171FE  D017               	goto	i1l13577
 34665  017200                     i1l13573:
 34666  017200  0101               	movlb	1	; () banked
 34667  017202  510A               	movf	_PARITY& (0+255),w,b
 34668                           
 34669                           ; Switch size 1, requested type "space"
 34670                           ; Number of cases is 3, Range of values is 1 to 3
 34671                           ; switch strategies available:
 34672                           ; Name         Instructions Cycles
 34673                           ; simple_byte           10     6 (average)
 34674                           ;	Chosen strategy is simple_byte
 34675  017204  0A01               	xorlw	1	; case 1
 34676  017206  B4D8               	btfsc	status,2,c
 34677  017208  D7E6               	goto	i1l13567
 34678  01720A  0A03               	xorlw	3	; case 2
 34679  01720C  B4D8               	btfsc	status,2,c
 34680  01720E  D7EB               	goto	i1l13569
 34681  017210  0A01               	xorlw	1	; case 3
 34682  017212  B4D8               	btfsc	status,2,c
 34683  017214  D7F1               	goto	i1l512
 34684  017216  D7F2               	goto	i1l513
 34685                           
 34686                           ; BSR set to: 1
 34687                           ;UART.c: 221: }
 34688  017218  D00A               	goto	i1l13577
 34689  01721A                     i1l13575:
 34690                           
 34691                           ;UART.c: 222: else
 34692                           ;UART.c: 223: {
 34693                           ;UART.c: 224: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 34694  01721A  C009  F00A         	movff	i1UARTchar@NinethBit_override_data,??i1_UARTchar
 34695  01721E  0E01               	movlw	1
 34696  017220  160A               	andwf	??i1_UARTchar,f,c
 34697  017222                     L31:
 34698  017222  50AC               	movf	4012,w,c	;volatile
 34699  017224  180A               	xorwf	??i1_UARTchar,w,c
 34700  017226  0BFE               	andlw	-2
 34701  017228  180A               	xorwf	??i1_UARTchar,w,c
 34702  01722A  6EAC               	movwf	4012,c	;volatile
 34703  01722C  D000               	goto	i1l13577
 34704  01722E                     i1l13577:
 34705                           
 34706                           ;UART.c: 225: }
 34707                           ;UART.c: 226: }
 34708                           ;UART.c: 227: TX_OLD = data;
 34709  01722E  C00B  F0DD         	movff	i1UARTchar@data,_TX_OLD
 34710                           
 34711                           ;UART.c: 228: TXREG = data;
 34712  017232  C00B  FFAD         	movff	i1UARTchar@data,4013	;volatile
 34713                           
 34714                           ;UART.c: 229: while(!TXSTAbits.TRMT);
 34715  017236  D000               	goto	i1l515
 34716  017238                     i1l515:
 34717  017238  A2AC               	btfss	4012,1,c	;volatile
 34718  01723A  D7FE               	goto	i1l515
 34719  01723C  0012               	return		;funcret
 34720  01723E                     __end_ofi1_UARTchar:
 34721                           	opt stack 0
 34722                           pclatu	equ	0xFFB
 34723                           pclath	equ	0xFFA
 34724                           tblptru	equ	0xFF8
 34725                           tblptrh	equ	0xFF7
 34726                           tblptrl	equ	0xFF6
 34727                           tablat	equ	0xFF5
 34728                           prodh	equ	0xFF4
 34729                           prodl	equ	0xFF3
 34730                           intcon	equ	0xFF2
 34731                           intcon2	equ	0xFF1
 34732                           indf0	equ	0xFEF
 34733                           postinc0	equ	0xFEE
 34734                           plusw0	equ	0xFEB
 34735                           fsr0h	equ	0xFEA
 34736                           fsr0l	equ	0xFE9
 34737                           wreg	equ	0xFE8
 34738                           indf1	equ	0xFE7
 34739                           postdec1	equ	0xFE5
 34740                           fsr1h	equ	0xFE2
 34741                           fsr1l	equ	0xFE1
 34742                           bsr	equ	0xFE0
 34743                           indf2	equ	0xFDF
 34744                           postinc2	equ	0xFDE
 34745                           postdec2	equ	0xFDD
 34746                           plusw2	equ	0xFDB
 34747                           fsr2h	equ	0xFDA
 34748                           fsr2l	equ	0xFD9
 34749                           status	equ	0xFD8
 34750                           
 34751 ;; *************** function i1_CheckSum_byte *****************
 34752 ;; Defined at:
 34753 ;;		line 359 in file "MISC.c"
 34754 ;; Parameters:    Size  Location     Type
 34755 ;;  This            2    0[COMRAM] unsigned int 
 34756 ;;  Odd_Even        1    2[COMRAM] unsigned char 
 34757 ;; Auto vars:     Size  Location     Type
 34758 ;;  CheckSum_byt    2    3[COMRAM] unsigned int 
 34759 ;;  CheckSum_byt    1    6[COMRAM] unsigned char 
 34760 ;;  CheckSum_byt    1    5[COMRAM] unsigned char 
 34761 ;; Return value:  Size  Location     Type
 34762 ;;                  1    wreg      unsigned char 
 34763 ;; Registers used:
 34764 ;;		wreg, status,2, status,0
 34765 ;; Tracked objects:
 34766 ;;		On entry : 0/0
 34767 ;;		On exit  : 0/0
 34768 ;;		Unchanged: 0/0
 34769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34770 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34771 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34773 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34774 ;;Total ram usage:        7 bytes
 34775 ;; Hardware stack levels used:    1
 34776 ;; Hardware stack levels required when called:    1
 34777 ;; This function calls:
 34778 ;;		Nothing
 34779 ;; This function is called by:
 34780 ;;		i1_UARTchar
 34781 ;; This function uses a non-reentrant model
 34782 ;;
 34783                           
 34784                           	psect	text99
 34785  01792A                     __ptext99:
 34786                           	opt stack 0
 34787  01792A                     i1_CheckSum_byte:
 34788                           	opt stack 20
 34789                           
 34790                           ;MISC.c: 361: char i = 0;
 34791                           
 34792                           ;incstack = 0
 34793  01792A  0E00               	movlw	0
 34794  01792C  6E07               	movwf	i1CheckSum_byte@i,c
 34795                           
 34796                           ;MISC.c: 362: unsigned char Parity = 0;
 34797  01792E  0E00               	movlw	0
 34798  017930  6E06               	movwf	i1CheckSum_byte@Parity,c
 34799                           
 34800                           ;MISC.c: 363: unsigned int ThisTemp = This;
 34801  017932  C001  F004         	movff	i1CheckSum_byte@This,i1CheckSum_byte@ThisTemp
 34802  017936  C002  F005         	movff	i1CheckSum_byte@This+1,i1CheckSum_byte@ThisTemp+1
 34803                           
 34804                           ;MISC.c: 365: for (i =0; i<8; i++)
 34805  01793A  0E00               	movlw	0
 34806  01793C  6E07               	movwf	i1CheckSum_byte@i,c
 34807  01793E                     i1l12623:
 34808  01793E  0E07               	movlw	7
 34809  017940  6407               	cpfsgt	i1CheckSum_byte@i,c
 34810  017942  D001               	goto	i1l402
 34811  017944  D007               	goto	i1l12631
 34812  017946                     i1l402:
 34813                           
 34814                           ;MISC.c: 366: {
 34815                           ;MISC.c: 367: if((ThisTemp & 0x01) == 1)
 34816  017946  B004               	btfsc	i1CheckSum_byte@ThisTemp,0,c
 34817                           
 34818                           ;MISC.c: 368: {
 34819                           ;MISC.c: 369: Parity++;
 34820  017948  2A06               	incf	i1CheckSum_byte@Parity,f,c
 34821                           
 34822                           ;MISC.c: 370: }
 34823                           ;MISC.c: 371: ThisTemp >>= 1;
 34824  01794A  90D8               	bcf	status,0,c
 34825  01794C  3205               	rrcf	i1CheckSum_byte@ThisTemp+1,f,c
 34826  01794E  3204               	rrcf	i1CheckSum_byte@ThisTemp,f,c
 34827  017950  2A07               	incf	i1CheckSum_byte@i,f,c
 34828  017952  D7F5               	goto	i1l12623
 34829  017954                     i1l12631:
 34830                           
 34831                           ;MISC.c: 372: }
 34832                           ;MISC.c: 373: if(Odd_Even == 3)
 34833  017954  0E03               	movlw	3
 34834  017956  1803               	xorwf	i1CheckSum_byte@Odd_Even,w,c
 34835  017958  A4D8               	btfss	status,2,c
 34836  01795A  D006               	goto	i1l405
 34837                           
 34838                           ;MISC.c: 374: {
 34839                           ;MISC.c: 375: if(Parity % 2 == 0)
 34840  01795C  B006               	btfsc	i1CheckSum_byte@Parity,0,c
 34841  01795E  D002               	goto	i1l12639
 34842                           
 34843                           ;MISC.c: 376: {
 34844                           ;MISC.c: 377: return 1;
 34845  017960  0E01               	movlw	1
 34846  017962  0012               	return	
 34847  017964                     i1l12639:
 34848                           
 34849                           ;MISC.c: 378: }
 34850                           ;MISC.c: 379: return 0;
 34851  017964  0E00               	movlw	0
 34852                           
 34853                           ;MISC.c: 380: }
 34854  017966  0012               	return	
 34855  017968                     i1l405:
 34856                           
 34857                           ;MISC.c: 381: else
 34858                           ;MISC.c: 382: {
 34859                           ;MISC.c: 383: if(Parity % 2 == 1)
 34860  017968  A006               	btfss	i1CheckSum_byte@Parity,0,c
 34861  01796A  D002               	goto	i1l12649
 34862                           
 34863                           ;MISC.c: 384: {
 34864                           ;MISC.c: 385: return 1;
 34865  01796C  0E01               	movlw	1
 34866  01796E  0012               	return	
 34867  017970                     i1l12649:
 34868                           
 34869                           ;MISC.c: 386: }
 34870                           ;MISC.c: 387: return 0;
 34871  017970  0E00               	movlw	0
 34872  017972  0012               	return	
 34873  017974  0012               	return		;funcret
 34874  017976                     __end_ofi1_CheckSum_byte:
 34875                           	opt stack 0
 34876                           pclatu	equ	0xFFB
 34877                           pclath	equ	0xFFA
 34878                           tblptru	equ	0xFF8
 34879                           tblptrh	equ	0xFF7
 34880                           tblptrl	equ	0xFF6
 34881                           tablat	equ	0xFF5
 34882                           prodh	equ	0xFF4
 34883                           prodl	equ	0xFF3
 34884                           intcon	equ	0xFF2
 34885                           intcon2	equ	0xFF1
 34886                           indf0	equ	0xFEF
 34887                           postinc0	equ	0xFEE
 34888                           plusw0	equ	0xFEB
 34889                           fsr0h	equ	0xFEA
 34890                           fsr0l	equ	0xFE9
 34891                           wreg	equ	0xFE8
 34892                           indf1	equ	0xFE7
 34893                           postdec1	equ	0xFE5
 34894                           fsr1h	equ	0xFE2
 34895                           fsr1l	equ	0xFE1
 34896                           bsr	equ	0xFE0
 34897                           indf2	equ	0xFDF
 34898                           postinc2	equ	0xFDE
 34899                           postdec2	equ	0xFDD
 34900                           plusw2	equ	0xFDB
 34901                           fsr2h	equ	0xFDA
 34902                           fsr2l	equ	0xFD9
 34903                           status	equ	0xFD8
 34904                           
 34905 ;; *************** function i1_SetLCDcursor *****************
 34906 ;; Defined at:
 34907 ;;		line 193 in file "LCD.c"
 34908 ;; Parameters:    Size  Location     Type
 34909 ;;  Row             1    wreg     unsigned char 
 34910 ;;  Col             1   14[COMRAM] unsigned char 
 34911 ;; Auto vars:     Size  Location     Type
 34912 ;;  Row             1   15[COMRAM] unsigned char 
 34913 ;;  SetLCDcursor    1   16[COMRAM] unsigned char 
 34914 ;; Return value:  Size  Location     Type
 34915 ;;		None               void
 34916 ;; Registers used:
 34917 ;;		wreg, status,2, status,0, cstack
 34918 ;; Tracked objects:
 34919 ;;		On entry : 0/0
 34920 ;;		On exit  : 0/0
 34921 ;;		Unchanged: 0/0
 34922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34923 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34926 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34927 ;;Total ram usage:        3 bytes
 34928 ;; Hardware stack levels used:    1
 34929 ;; Hardware stack levels required when called:    4
 34930 ;; This function calls:
 34931 ;;		i1_SendLCDbyte
 34932 ;; This function is called by:
 34933 ;;		_low_isr
 34934 ;; This function uses a non-reentrant model
 34935 ;;
 34936                           
 34937                           	psect	text100
 34938  017D40                     __ptext100:
 34939                           	opt stack 0
 34940  017D40                     i1_SetLCDcursor:
 34941                           	opt stack 19
 34942                           
 34943                           ;incstack = 0
 34944                           ;i1SetLCDcursor@Row stored from wreg
 34945  017D40  6E10               	movwf	i1SetLCDcursor@Row,c
 34946                           
 34947                           ;LCD.c: 195: char address;
 34948                           ;LCD.c: 198: if (Row == 0)
 34949  017D42  5010               	movf	i1SetLCDcursor@Row,w,c
 34950  017D44  A4D8               	btfss	status,2,c
 34951  017D46  D002               	goto	i1l14673
 34952                           
 34953                           ;LCD.c: 199: {
 34954                           ;LCD.c: 200: address = 0;
 34955  017D48  0E00               	movlw	0
 34956  017D4A  D001               	goto	L32
 34957  017D4C                     i1l14673:
 34958                           
 34959                           ;LCD.c: 202: else
 34960                           ;LCD.c: 203: {
 34961                           ;LCD.c: 204: address = 0x40;
 34962  017D4C  0E40               	movlw	64
 34963  017D4E                     L32:
 34964  017D4E  6E11               	movwf	i1SetLCDcursor@address,c
 34965  017D50  D000               	goto	i1l14675
 34966  017D52                     i1l14675:
 34967                           
 34968                           ;LCD.c: 205: }
 34969                           ;LCD.c: 207: address |= Col;
 34970  017D52  500F               	movf	i1SetLCDcursor@Col,w,c
 34971  017D54  1211               	iorwf	i1SetLCDcursor@address,f,c
 34972                           
 34973                           ;LCD.c: 208: if(!LCDwait)
 34974  017D56  0101               	movlb	1	; () banked
 34975  017D58  5109               	movf	_LCDwait& (0+255),w,b
 34976  017D5A  A4D8               	btfss	status,2,c
 34977  017D5C  0012               	return	
 34978                           
 34979                           ; BSR set to: 1
 34980                           ;LCD.c: 209: {
 34981                           ;LCD.c: 210: SendLCDbyte(0x80 | address, 0);
 34982  017D5E  0E00               	movlw	0
 34983  017D60  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 34984  017D62  5011               	movf	i1SetLCDcursor@address,w,c
 34985  017D64  0980               	iorlw	128
 34986  017D66  ECC0  F0B1         	call	i1_SendLCDbyte
 34987  017D6A  0012               	return	
 34988  017D6C  0012               	return		;funcret
 34989  017D6E                     __end_ofi1_SetLCDcursor:
 34990                           	opt stack 0
 34991                           pclatu	equ	0xFFB
 34992                           pclath	equ	0xFFA
 34993                           tblptru	equ	0xFF8
 34994                           tblptrh	equ	0xFF7
 34995                           tblptrl	equ	0xFF6
 34996                           tablat	equ	0xFF5
 34997                           prodh	equ	0xFF4
 34998                           prodl	equ	0xFF3
 34999                           intcon	equ	0xFF2
 35000                           intcon2	equ	0xFF1
 35001                           indf0	equ	0xFEF
 35002                           postinc0	equ	0xFEE
 35003                           plusw0	equ	0xFEB
 35004                           fsr0h	equ	0xFEA
 35005                           fsr0l	equ	0xFE9
 35006                           wreg	equ	0xFE8
 35007                           indf1	equ	0xFE7
 35008                           postdec1	equ	0xFE5
 35009                           fsr1h	equ	0xFE2
 35010                           fsr1l	equ	0xFE1
 35011                           bsr	equ	0xFE0
 35012                           indf2	equ	0xFDF
 35013                           postinc2	equ	0xFDE
 35014                           postdec2	equ	0xFDD
 35015                           plusw2	equ	0xFDB
 35016                           fsr2h	equ	0xFDA
 35017                           fsr2l	equ	0xFD9
 35018                           status	equ	0xFD8
 35019                           
 35020 ;; *************** function i1_ReadUSART *****************
 35021 ;; Defined at:
 35022 ;;		line 254 in file "UART.c"
 35023 ;; Parameters:    Size  Location     Type
 35024 ;;		None
 35025 ;; Auto vars:     Size  Location     Type
 35026 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 35027 ;; Return value:  Size  Location     Type
 35028 ;;                  1    wreg      unsigned char 
 35029 ;; Registers used:
 35030 ;;		wreg, status,2, status,0
 35031 ;; Tracked objects:
 35032 ;;		On entry : 0/0
 35033 ;;		On exit  : 0/0
 35034 ;;		Unchanged: 0/0
 35035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35040 ;;Total ram usage:        1 bytes
 35041 ;; Hardware stack levels used:    1
 35042 ;; Hardware stack levels required when called:    1
 35043 ;; This function calls:
 35044 ;;		Nothing
 35045 ;; This function is called by:
 35046 ;;		_low_isr
 35047 ;; This function uses a non-reentrant model
 35048 ;;
 35049                           
 35050                           	psect	text101
 35051  017C80                     __ptext101:
 35052                           	opt stack 0
 35053  017C80                     i1_ReadUSART:
 35054                           	opt stack 22
 35055                           
 35056                           ;UART.c: 256: char data;
 35057                           ;UART.c: 258: USART_Status.val &= 0xf2;
 35058                           
 35059                           ;incstack = 0
 35060  017C80  0EF2               	movlw	242
 35061  017C82  0101               	movlb	1	; () banked
 35062  017C84  170D               	andwf	_USART_Status& (0+255),f,b
 35063                           
 35064                           ; BSR set to: 1
 35065                           ;UART.c: 260: if(RCSTAbits.RX9)
 35066  017C86  ACAB               	btfss	4011,6,c	;volatile
 35067  017C88  D007               	goto	i1l530
 35068                           
 35069                           ; BSR set to: 1
 35070                           ;UART.c: 261: {
 35071                           ;UART.c: 262: USART_Status.RX_NINE = 0;
 35072  017C8A  0101               	movlb	1	; () banked
 35073  017C8C  910D               	bcf	_USART_Status& (0+255),0,b
 35074                           
 35075                           ;UART.c: 263: if(RCSTAbits.RX9D)
 35076  017C8E  A0AB               	btfss	4011,0,c	;volatile
 35077  017C90  D003               	goto	i1l530
 35078                           
 35079                           ; BSR set to: 1
 35080                           ;UART.c: 264: USART_Status.RX_NINE = 1;
 35081  017C92  0101               	movlb	1	; () banked
 35082  017C94  810D               	bsf	_USART_Status& (0+255),0,b
 35083  017C96  D000               	goto	i1l530
 35084  017C98                     i1l530:
 35085                           
 35086                           ; BSR set to: 1
 35087                           ;UART.c: 265: }
 35088                           ;UART.c: 267: if(RCSTAbits.FERR)
 35089  017C98  A4AB               	btfss	4011,2,c	;volatile
 35090  017C9A  D002               	goto	i1l532
 35091                           
 35092                           ; BSR set to: 1
 35093                           ;UART.c: 268: USART_Status.FRAME_ERROR = 1;
 35094  017C9C  0101               	movlb	1	; () banked
 35095  017C9E  850D               	bsf	_USART_Status& (0+255),2,b
 35096  017CA0                     i1l532:
 35097                           
 35098                           ; BSR set to: 1
 35099                           ;UART.c: 270: if(RCSTAbits.OERR)
 35100  017CA0  A2AB               	btfss	4011,1,c	;volatile
 35101  017CA2  D002               	goto	i1l533
 35102                           
 35103                           ; BSR set to: 1
 35104                           ;UART.c: 271: USART_Status.OVERRUN_ERROR = 1;
 35105  017CA4  0101               	movlb	1	; () banked
 35106  017CA6  870D               	bsf	_USART_Status& (0+255),3,b
 35107  017CA8                     i1l533:
 35108                           
 35109                           ; BSR set to: 1
 35110                           ;UART.c: 273: data = RCREG;
 35111  017CA8  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 35112                           
 35113                           ; BSR set to: 1
 35114                           ;UART.c: 275: return (data);
 35115  017CAC  5001               	movf	i1ReadUSART@data,w,c
 35116  017CAE  0012               	return	
 35117                           
 35118                           ; BSR set to: 1
 35119                           
 35120                           ; BSR set to: 1
 35121  017CB0  0012               	return		;funcret
 35122  017CB2                     __end_ofi1_ReadUSART:
 35123                           	opt stack 0
 35124                           pclatu	equ	0xFFB
 35125                           pclath	equ	0xFFA
 35126                           tblptru	equ	0xFF8
 35127                           tblptrh	equ	0xFF7
 35128                           tblptrl	equ	0xFF6
 35129                           tablat	equ	0xFF5
 35130                           prodh	equ	0xFF4
 35131                           prodl	equ	0xFF3
 35132                           intcon	equ	0xFF2
 35133                           intcon2	equ	0xFF1
 35134                           indf0	equ	0xFEF
 35135                           postinc0	equ	0xFEE
 35136                           plusw0	equ	0xFEB
 35137                           fsr0h	equ	0xFEA
 35138                           fsr0l	equ	0xFE9
 35139                           wreg	equ	0xFE8
 35140                           indf1	equ	0xFE7
 35141                           postdec1	equ	0xFE5
 35142                           fsr1h	equ	0xFE2
 35143                           fsr1l	equ	0xFE1
 35144                           bsr	equ	0xFE0
 35145                           indf2	equ	0xFDF
 35146                           postinc2	equ	0xFDE
 35147                           postdec2	equ	0xFDD
 35148                           plusw2	equ	0xFDB
 35149                           fsr2h	equ	0xFDA
 35150                           fsr2l	equ	0xFD9
 35151                           status	equ	0xFD8
 35152                           
 35153 ;; *************** function i1_ReadIRpin *****************
 35154 ;; Defined at:
 35155 ;;		line 88 in file "IR.c"
 35156 ;; Parameters:    Size  Location     Type
 35157 ;;		None
 35158 ;; Auto vars:     Size  Location     Type
 35159 ;;		None
 35160 ;; Return value:  Size  Location     Type
 35161 ;;                  1    wreg      unsigned char 
 35162 ;; Registers used:
 35163 ;;		wreg
 35164 ;; Tracked objects:
 35165 ;;		On entry : 0/0
 35166 ;;		On exit  : 0/0
 35167 ;;		Unchanged: 0/0
 35168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35173 ;;Total ram usage:        0 bytes
 35174 ;; Hardware stack levels used:    1
 35175 ;; Hardware stack levels required when called:    1
 35176 ;; This function calls:
 35177 ;;		Nothing
 35178 ;; This function is called by:
 35179 ;;		_low_isr
 35180 ;; This function uses a non-reentrant model
 35181 ;;
 35182                           
 35183                           	psect	text102
 35184  017F5C                     __ptext102:
 35185                           	opt stack 0
 35186  017F5C                     i1_ReadIRpin:
 35187                           	opt stack 22
 35188                           
 35189                           ;IR.c: 91: if((PORTB & 0b00010000) == 0b00010000)
 35190                           
 35191                           ; BSR set to: 1
 35192                           ;incstack = 0
 35193  017F5C  A881               	btfss	3969,4,c	;volatile
 35194  017F5E  D002               	goto	i1l10781
 35195                           
 35196                           ;IR.c: 92: {
 35197                           ;IR.c: 93: return (1);
 35198  017F60  0E01               	movlw	1
 35199                           
 35200                           ;IR.c: 94: }
 35201  017F62  0012               	return	
 35202  017F64                     i1l10781:
 35203                           
 35204                           ;IR.c: 95: else
 35205                           ;IR.c: 96: {
 35206                           ;IR.c: 97: return 0;
 35207  017F64  0E00               	movlw	0
 35208  017F66  0012               	return	
 35209  017F68  0012               	return		;funcret
 35210  017F6A                     __end_ofi1_ReadIRpin:
 35211                           	opt stack 0
 35212                           pclatu	equ	0xFFB
 35213                           pclath	equ	0xFFA
 35214                           tblptru	equ	0xFF8
 35215                           tblptrh	equ	0xFF7
 35216                           tblptrl	equ	0xFF6
 35217                           tablat	equ	0xFF5
 35218                           prodh	equ	0xFF4
 35219                           prodl	equ	0xFF3
 35220                           intcon	equ	0xFF2
 35221                           intcon2	equ	0xFF1
 35222                           indf0	equ	0xFEF
 35223                           postinc0	equ	0xFEE
 35224                           plusw0	equ	0xFEB
 35225                           fsr0h	equ	0xFEA
 35226                           fsr0l	equ	0xFE9
 35227                           wreg	equ	0xFE8
 35228                           indf1	equ	0xFE7
 35229                           postdec1	equ	0xFE5
 35230                           fsr1h	equ	0xFE2
 35231                           fsr1l	equ	0xFE1
 35232                           bsr	equ	0xFE0
 35233                           indf2	equ	0xFDF
 35234                           postinc2	equ	0xFDE
 35235                           postdec2	equ	0xFDD
 35236                           plusw2	equ	0xFDB
 35237                           fsr2h	equ	0xFDA
 35238                           fsr2l	equ	0xFD9
 35239                           status	equ	0xFD8
 35240                           
 35241 ;; *************** function i1_LCDPrintString *****************
 35242 ;; Defined at:
 35243 ;;		line 234 in file "LCD.c"
 35244 ;; Parameters:    Size  Location     Type
 35245 ;;  Text            2   14[COMRAM] PTR const unsigned char 
 35246 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 35247 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 35248 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 35249 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 35250 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 35251 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 35252 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 35253 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 35254 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 35255 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 35256 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 35257 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 35258 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 35259 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 35260 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 35261 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 35262 ;;		 -> low_isr@LCD_TEMP(16), 
 35263 ;; Auto vars:     Size  Location     Type
 35264 ;;  LCDPrintStri    2   16[COMRAM] PTR unsigned char 
 35265 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 35266 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 35267 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 35268 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 35269 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 35270 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 35271 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 35272 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 35273 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 35274 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 35275 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 35276 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 35277 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 35278 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 35279 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 35280 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 35281 ;;		 -> low_isr@LCD_TEMP(16), 
 35282 ;; Return value:  Size  Location     Type
 35283 ;;		None               void
 35284 ;; Registers used:
 35285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35286 ;; Tracked objects:
 35287 ;;		On entry : 0/0
 35288 ;;		On exit  : 0/0
 35289 ;;		Unchanged: 0/0
 35290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35294 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35295 ;;Total ram usage:        4 bytes
 35296 ;; Hardware stack levels used:    1
 35297 ;; Hardware stack levels required when called:    4
 35298 ;; This function calls:
 35299 ;;		i1_SendLCDbyte
 35300 ;; This function is called by:
 35301 ;;		_low_isr
 35302 ;; This function uses a non-reentrant model
 35303 ;;
 35304                           
 35305                           	psect	text103
 35306  017328                     __ptext103:
 35307                           	opt stack 0
 35308  017328                     i1_LCDPrintString:
 35309                           	opt stack 19
 35310                           
 35311                           ;LCD.c: 236: unsigned char *c;
 35312                           ;LCD.c: 238: c = (unsigned char*)Text;
 35313                           
 35314                           ;incstack = 0
 35315  017328  C00F  F011         	movff	i1LCDPrintString@Text,i1LCDPrintString@c
 35316  01732C  C010  F012         	movff	i1LCDPrintString@Text+1,i1LCDPrintString@c+1
 35317                           
 35318                           ;LCD.c: 240: while ((c != 0) && (*c != 0))
 35319  017330  D018               	goto	i1l14689
 35320  017332                     i1l14685:
 35321                           
 35322                           ;LCD.c: 241: {
 35323                           ;LCD.c: 242: SendLCDbyte(*c, 1);
 35324  017332  0E01               	movlw	1
 35325  017334  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 35326  017336  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 35327  01733A  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 35328  01733E  0E00               	movlw	low (__mediumconst shr (0+16))
 35329  017340  6EF8               	movwf	tblptru,c
 35330  017342  0E0C               	movlw	(high __ramtop+-1)
 35331  017344  64F7               	cpfsgt	tblptrh,c
 35332  017346  D003               	bra	i1u1928_27
 35333  017348  0008               	tblrd		*
 35334  01734A  50F5               	movf	tablat,w,c
 35335  01734C  D005               	bra	i1u1928_20
 35336  01734E                     i1u1928_27:
 35337  01734E  CFF6 FFE9          	movff	tblptrl,fsr0l
 35338  017352  CFF7 FFEA          	movff	tblptrh,fsr0h
 35339  017356  50EF               	movf	indf0,w,c
 35340  017358                     i1u1928_20:
 35341  017358  ECC0  F0B1         	call	i1_SendLCDbyte
 35342                           
 35343                           ;LCD.c: 243: c++;
 35344  01735C  4A11               	infsnz	i1LCDPrintString@c,f,c
 35345  01735E  2A12               	incf	i1LCDPrintString@c+1,f,c
 35346  017360  D000               	goto	i1l14689
 35347  017362                     i1l14689:
 35348  017362  5011               	movf	i1LCDPrintString@c,w,c
 35349  017364  1012               	iorwf	i1LCDPrintString@c+1,w,c
 35350  017366  B4D8               	btfsc	status,2,c
 35351  017368  0012               	return	
 35352  01736A  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 35353  01736E  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 35354  017372  0E00               	movlw	low (__mediumconst shr (0+16))
 35355  017374  6EF8               	movwf	tblptru,c
 35356  017376  0E0C               	movlw	(high __ramtop+-1)
 35357  017378  64F7               	cpfsgt	tblptrh,c
 35358  01737A  D003               	bra	i1u1930_27
 35359  01737C  0008               	tblrd		*
 35360  01737E  50F5               	movf	tablat,w,c
 35361  017380  D005               	bra	i1u1930_20
 35362  017382                     i1u1930_27:
 35363  017382  CFF6 FFE9          	movff	tblptrl,fsr0l
 35364  017386  CFF7 FFEA          	movff	tblptrh,fsr0h
 35365  01738A  50EF               	movf	indf0,w,c
 35366  01738C                     i1u1930_20:
 35367  01738C  0900               	iorlw	0
 35368  01738E  B4D8               	btfsc	status,2,c
 35369  017390  0012               	return	
 35370  017392  D7CF               	goto	i1l14685
 35371  017394  0012               	return	
 35372  017396  0012               	return		;funcret
 35373  017398                     __end_ofi1_LCDPrintString:
 35374                           	opt stack 0
 35375                           pclatu	equ	0xFFB
 35376                           pclath	equ	0xFFA
 35377                           tblptru	equ	0xFF8
 35378                           tblptrh	equ	0xFF7
 35379                           tblptrl	equ	0xFF6
 35380                           tablat	equ	0xFF5
 35381                           prodh	equ	0xFF4
 35382                           prodl	equ	0xFF3
 35383                           intcon	equ	0xFF2
 35384                           intcon2	equ	0xFF1
 35385                           indf0	equ	0xFEF
 35386                           postinc0	equ	0xFEE
 35387                           plusw0	equ	0xFEB
 35388                           fsr0h	equ	0xFEA
 35389                           fsr0l	equ	0xFE9
 35390                           wreg	equ	0xFE8
 35391                           indf1	equ	0xFE7
 35392                           postdec1	equ	0xFE5
 35393                           fsr1h	equ	0xFE2
 35394                           fsr1l	equ	0xFE1
 35395                           bsr	equ	0xFE0
 35396                           indf2	equ	0xFDF
 35397                           postinc2	equ	0xFDE
 35398                           postdec2	equ	0xFDD
 35399                           plusw2	equ	0xFDB
 35400                           fsr2h	equ	0xFDA
 35401                           fsr2l	equ	0xFD9
 35402                           status	equ	0xFD8
 35403                           
 35404 ;; *************** function i1_LCDPrintChar *****************
 35405 ;; Defined at:
 35406 ;;		line 267 in file "LCD.c"
 35407 ;; Parameters:    Size  Location     Type
 35408 ;;  character       1    wreg     unsigned char 
 35409 ;; Auto vars:     Size  Location     Type
 35410 ;;  character       1   14[COMRAM] unsigned char 
 35411 ;; Return value:  Size  Location     Type
 35412 ;;		None               void
 35413 ;; Registers used:
 35414 ;;		wreg, status,2, status,0, cstack
 35415 ;; Tracked objects:
 35416 ;;		On entry : 0/0
 35417 ;;		On exit  : 0/0
 35418 ;;		Unchanged: 0/0
 35419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35424 ;;Total ram usage:        1 bytes
 35425 ;; Hardware stack levels used:    1
 35426 ;; Hardware stack levels required when called:    4
 35427 ;; This function calls:
 35428 ;;		i1_SendLCDbyte
 35429 ;; This function is called by:
 35430 ;;		_low_isr
 35431 ;; This function uses a non-reentrant model
 35432 ;;
 35433                           
 35434                           	psect	text104
 35435  017F6A                     __ptext104:
 35436                           	opt stack 0
 35437  017F6A                     i1_LCDPrintChar:
 35438                           	opt stack 19
 35439                           
 35440                           ;incstack = 0
 35441                           ;i1LCDPrintChar@character stored from wreg
 35442  017F6A  6E0F               	movwf	i1LCDPrintChar@character,c
 35443                           
 35444                           ;LCD.c: 269: SendLCDbyte(character, 1);
 35445  017F6C  0E01               	movlw	1
 35446  017F6E  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 35447  017F70  500F               	movf	i1LCDPrintChar@character,w,c
 35448  017F72  ECC0  F0B1         	call	i1_SendLCDbyte
 35449  017F76  0012               	return		;funcret
 35450  017F78                     __end_ofi1_LCDPrintChar:
 35451                           	opt stack 0
 35452                           pclatu	equ	0xFFB
 35453                           pclath	equ	0xFFA
 35454                           tblptru	equ	0xFF8
 35455                           tblptrh	equ	0xFF7
 35456                           tblptrl	equ	0xFF6
 35457                           tablat	equ	0xFF5
 35458                           prodh	equ	0xFF4
 35459                           prodl	equ	0xFF3
 35460                           intcon	equ	0xFF2
 35461                           intcon2	equ	0xFF1
 35462                           indf0	equ	0xFEF
 35463                           postinc0	equ	0xFEE
 35464                           plusw0	equ	0xFEB
 35465                           fsr0h	equ	0xFEA
 35466                           fsr0l	equ	0xFE9
 35467                           wreg	equ	0xFE8
 35468                           indf1	equ	0xFE7
 35469                           postdec1	equ	0xFE5
 35470                           fsr1h	equ	0xFE2
 35471                           fsr1l	equ	0xFE1
 35472                           bsr	equ	0xFE0
 35473                           indf2	equ	0xFDF
 35474                           postinc2	equ	0xFDE
 35475                           postdec2	equ	0xFDD
 35476                           plusw2	equ	0xFDB
 35477                           fsr2h	equ	0xFDA
 35478                           fsr2l	equ	0xFD9
 35479                           status	equ	0xFD8
 35480                           
 35481 ;; *************** function i1_ClearLCD *****************
 35482 ;; Defined at:
 35483 ;;		line 220 in file "LCD.c"
 35484 ;; Parameters:    Size  Location     Type
 35485 ;;		None
 35486 ;; Auto vars:     Size  Location     Type
 35487 ;;		None
 35488 ;; Return value:  Size  Location     Type
 35489 ;;		None               void
 35490 ;; Registers used:
 35491 ;;		wreg, status,2, status,0, cstack
 35492 ;; Tracked objects:
 35493 ;;		On entry : 0/0
 35494 ;;		On exit  : 0/0
 35495 ;;		Unchanged: 0/0
 35496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35501 ;;Total ram usage:        0 bytes
 35502 ;; Hardware stack levels used:    1
 35503 ;; Hardware stack levels required when called:    4
 35504 ;; This function calls:
 35505 ;;		i1_SendLCDbyte
 35506 ;; This function is called by:
 35507 ;;		_low_isr
 35508 ;; This function uses a non-reentrant model
 35509 ;;
 35510                           
 35511                           	psect	text105
 35512  017ECC                     __ptext105:
 35513                           	opt stack 0
 35514  017ECC                     i1_ClearLCD:
 35515                           	opt stack 19
 35516                           
 35517                           ;LCD.c: 225: SendLCDbyte(0x01, 0);
 35518                           
 35519                           ;incstack = 0
 35520  017ECC  0E00               	movlw	0
 35521  017ECE  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 35522  017ED0  0E01               	movlw	1
 35523  017ED2  ECC0  F0B1         	call	i1_SendLCDbyte
 35524                           
 35525                           ;LCD.c: 226: SendLCDbyte(0x02, 0);
 35526  017ED6  0E00               	movlw	0
 35527  017ED8  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 35528  017EDA  0E02               	movlw	2
 35529  017EDC  ECC0  F0B1         	call	i1_SendLCDbyte
 35530  017EE0  0012               	return		;funcret
 35531  017EE2                     __end_ofi1_ClearLCD:
 35532                           	opt stack 0
 35533                           pclatu	equ	0xFFB
 35534                           pclath	equ	0xFFA
 35535                           tblptru	equ	0xFF8
 35536                           tblptrh	equ	0xFF7
 35537                           tblptrl	equ	0xFF6
 35538                           tablat	equ	0xFF5
 35539                           prodh	equ	0xFF4
 35540                           prodl	equ	0xFF3
 35541                           intcon	equ	0xFF2
 35542                           intcon2	equ	0xFF1
 35543                           indf0	equ	0xFEF
 35544                           postinc0	equ	0xFEE
 35545                           plusw0	equ	0xFEB
 35546                           fsr0h	equ	0xFEA
 35547                           fsr0l	equ	0xFE9
 35548                           wreg	equ	0xFE8
 35549                           indf1	equ	0xFE7
 35550                           postdec1	equ	0xFE5
 35551                           fsr1h	equ	0xFE2
 35552                           fsr1l	equ	0xFE1
 35553                           bsr	equ	0xFE0
 35554                           indf2	equ	0xFDF
 35555                           postinc2	equ	0xFDE
 35556                           postdec2	equ	0xFDD
 35557                           plusw2	equ	0xFDB
 35558                           fsr2h	equ	0xFDA
 35559                           fsr2l	equ	0xFD9
 35560                           status	equ	0xFD8
 35561                           
 35562 ;; *************** function i1_SendLCDbyte *****************
 35563 ;; Defined at:
 35564 ;;		line 107 in file "LCD.c"
 35565 ;; Parameters:    Size  Location     Type
 35566 ;;  data            1    wreg     unsigned char 
 35567 ;;  isCommand       1   10[COMRAM] unsigned char 
 35568 ;; Auto vars:     Size  Location     Type
 35569 ;;  data            1   11[COMRAM] unsigned char 
 35570 ;;  SendLCDbyte     1   13[COMRAM] unsigned char 
 35571 ;;  SendLCDbyte     1   12[COMRAM] unsigned char 
 35572 ;; Return value:  Size  Location     Type
 35573 ;;		None               void
 35574 ;; Registers used:
 35575 ;;		wreg, status,2, status,0, cstack
 35576 ;; Tracked objects:
 35577 ;;		On entry : 0/0
 35578 ;;		On exit  : 0/0
 35579 ;;		Unchanged: 0/0
 35580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35581 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35582 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35584 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35585 ;;Total ram usage:        4 bytes
 35586 ;; Hardware stack levels used:    1
 35587 ;; Hardware stack levels required when called:    3
 35588 ;; This function calls:
 35589 ;;		i1_PulseEnablePin
 35590 ;;		i1_delayUS
 35591 ;; This function is called by:
 35592 ;;		i1_SetLCDcursor
 35593 ;;		i1_ClearLCD
 35594 ;;		i1_LCDPrintString
 35595 ;;		i1_LCDPrintChar
 35596 ;; This function uses a non-reentrant model
 35597 ;;
 35598                           
 35599                           	psect	text106
 35600  016380                     __ptext106:
 35601                           	opt stack 0
 35602  016380                     i1_SendLCDbyte:
 35603                           	opt stack 19
 35604                           
 35605                           ;incstack = 0
 35606                           ;i1SendLCDbyte@data stored from wreg
 35607  016380  6E0C               	movwf	i1SendLCDbyte@data,c
 35608                           
 35609                           ;LCD.c: 109: unsigned char MSB_nibble=0;
 35610  016382  0E00               	movlw	0
 35611  016384  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 35612                           
 35613                           ;LCD.c: 110: unsigned char LSB_nibble=0;
 35614  016386  0E00               	movlw	0
 35615  016388  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 35616                           
 35617                           ;LCD.c: 112: LATA &= ~(0b00001000+0b00010000+0b00100000);
 35618  01638A  0EC7               	movlw	199
 35619  01638C  1689               	andwf	3977,f,c	;volatile
 35620                           
 35621                           ;LCD.c: 113: LATE &= ~0b00000001;
 35622  01638E  908D               	bcf	3981,0,c	;volatile
 35623                           
 35624                           ;LCD.c: 114: LATD &= ~(0b10000000 + 0b00100000);
 35625  016390  0E5F               	movlw	95
 35626  016392  168C               	andwf	3980,f,c	;volatile
 35627                           
 35628                           ;LCD.c: 115: delayUS(10);
 35629  016394  0E0A               	movlw	10
 35630  016396  6E01               	movwf	i1delayUS@US,c
 35631  016398  0E00               	movlw	0
 35632  01639A  6E02               	movwf	i1delayUS@US+1,c
 35633  01639C  0E00               	movlw	0
 35634  01639E  6E03               	movwf	i1delayUS@US+2,c
 35635  0163A0  0E00               	movlw	0
 35636  0163A2  6E04               	movwf	i1delayUS@US+3,c
 35637  0163A4  EC48  F0BC         	call	i1_delayUS	;wreg free
 35638                           
 35639                           ;LCD.c: 116: MSB_nibble = (data & 0xF0)>>4;
 35640  0163A8  380C               	swapf	i1SendLCDbyte@data,w,c
 35641  0163AA  0B0F               	andlw	15
 35642  0163AC  0B0F               	andlw	15
 35643  0163AE  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 35644                           
 35645                           ;LCD.c: 117: LSB_nibble = (data & 0x0F);
 35646  0163B0  500C               	movf	i1SendLCDbyte@data,w,c
 35647  0163B2  0B0F               	andlw	15
 35648  0163B4  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 35649                           
 35650                           ;LCD.c: 118: if(!LCDwait)
 35651  0163B6  0101               	movlb	1	; () banked
 35652  0163B8  5109               	movf	_LCDwait& (0+255),w,b
 35653  0163BA  A4D8               	btfss	status,2,c
 35654  0163BC  D039               	goto	i1l13645
 35655                           
 35656                           ; BSR set to: 1
 35657                           ;LCD.c: 119: {
 35658                           ;LCD.c: 120: if(isCommand)
 35659  0163BE  500B               	movf	i1SendLCDbyte@isCommand,w,c
 35660  0163C0  B4D8               	btfsc	status,2,c
 35661  0163C2  D002               	goto	i1l13601
 35662                           
 35663                           ; BSR set to: 1
 35664                           ;LCD.c: 121: {
 35665                           ;LCD.c: 122: LATD |= (0b00100000);
 35666  0163C4  8A8C               	bsf	3980,5,c	;volatile
 35667                           
 35668                           ;LCD.c: 123: }
 35669  0163C6  D002               	goto	i1l13603
 35670  0163C8                     i1l13601:
 35671                           
 35672                           ; BSR set to: 1
 35673                           ;LCD.c: 124: else
 35674                           ;LCD.c: 125: {
 35675                           ;LCD.c: 126: LATD &= ~(0b00100000);
 35676  0163C8  9A8C               	bcf	3980,5,c	;volatile
 35677  0163CA  D000               	goto	i1l13603
 35678  0163CC                     i1l13603:
 35679                           
 35680                           ; BSR set to: 1
 35681                           ;LCD.c: 127: }
 35682                           ;LCD.c: 128: if(MSB_nibble&0b1000)
 35683  0163CC  A60D               	btfss	i1SendLCDbyte@MSB_nibble,3,c
 35684  0163CE  D002               	goto	i1l13607
 35685                           
 35686                           ; BSR set to: 1
 35687                           ;LCD.c: 129: {
 35688                           ;LCD.c: 130: LATA |= 0b00001000;
 35689  0163D0  8689               	bsf	3977,3,c	;volatile
 35690  0163D2  D000               	goto	i1l13607
 35691  0163D4                     i1l13607:
 35692                           
 35693                           ; BSR set to: 1
 35694                           ;LCD.c: 131: }
 35695                           ;LCD.c: 132: if(MSB_nibble&0b0100)
 35696  0163D4  A40D               	btfss	i1SendLCDbyte@MSB_nibble,2,c
 35697  0163D6  D002               	goto	i1l13611
 35698                           
 35699                           ; BSR set to: 1
 35700                           ;LCD.c: 133: {
 35701                           ;LCD.c: 134: LATA |= 0b00010000;
 35702  0163D8  8889               	bsf	3977,4,c	;volatile
 35703  0163DA  D000               	goto	i1l13611
 35704  0163DC                     i1l13611:
 35705                           
 35706                           ; BSR set to: 1
 35707                           ;LCD.c: 135: }
 35708                           ;LCD.c: 136: if(MSB_nibble&0b0010)
 35709  0163DC  A20D               	btfss	i1SendLCDbyte@MSB_nibble,1,c
 35710  0163DE  D002               	goto	i1l13615
 35711                           
 35712                           ; BSR set to: 1
 35713                           ;LCD.c: 137: {
 35714                           ;LCD.c: 138: LATA |= 0b00100000;
 35715  0163E0  8A89               	bsf	3977,5,c	;volatile
 35716  0163E2  D000               	goto	i1l13615
 35717  0163E4                     i1l13615:
 35718                           
 35719                           ; BSR set to: 1
 35720                           ;LCD.c: 139: }
 35721                           ;LCD.c: 140: if(MSB_nibble&0b0001)
 35722  0163E4  A00D               	btfss	i1SendLCDbyte@MSB_nibble,0,c
 35723  0163E6  D002               	goto	i1l13619
 35724                           
 35725                           ; BSR set to: 1
 35726                           ;LCD.c: 141: {
 35727                           ;LCD.c: 142: LATE |= 0b00000001;
 35728  0163E8  808D               	bsf	3981,0,c	;volatile
 35729  0163EA  D000               	goto	i1l13619
 35730  0163EC                     i1l13619:
 35731                           
 35732                           ; BSR set to: 1
 35733                           ;LCD.c: 143: }
 35734                           ;LCD.c: 144: PulseEnablePin();
 35735  0163EC  ECB7  F0BE         	call	i1_PulseEnablePin	;wreg free
 35736                           
 35737                           ;LCD.c: 145: LATA &= ~(0b00001000+0b00010000+0b00100000);
 35738  0163F0  0EC7               	movlw	199
 35739  0163F2  1689               	andwf	3977,f,c	;volatile
 35740                           
 35741                           ;LCD.c: 146: LATE &= ~0b00000001;
 35742  0163F4  908D               	bcf	3981,0,c	;volatile
 35743                           
 35744                           ;LCD.c: 147: delayUS(10);
 35745  0163F6  0E0A               	movlw	10
 35746  0163F8  6E01               	movwf	i1delayUS@US,c
 35747  0163FA  0E00               	movlw	0
 35748  0163FC  6E02               	movwf	i1delayUS@US+1,c
 35749  0163FE  0E00               	movlw	0
 35750  016400  6E03               	movwf	i1delayUS@US+2,c
 35751  016402  0E00               	movlw	0
 35752  016404  6E04               	movwf	i1delayUS@US+3,c
 35753  016406  EC48  F0BC         	call	i1_delayUS	;wreg free
 35754                           
 35755                           ;LCD.c: 148: if(LSB_nibble&0b1000)
 35756  01640A  A60E               	btfss	i1SendLCDbyte@LSB_nibble,3,c
 35757  01640C  D002               	goto	i1l13631
 35758                           
 35759                           ;LCD.c: 149: {
 35760                           ;LCD.c: 150: LATA |= 0b00001000;
 35761  01640E  8689               	bsf	3977,3,c	;volatile
 35762  016410  D000               	goto	i1l13631
 35763  016412                     i1l13631:
 35764                           
 35765                           ;LCD.c: 151: }
 35766                           ;LCD.c: 152: if(LSB_nibble&0b0100)
 35767  016412  A40E               	btfss	i1SendLCDbyte@LSB_nibble,2,c
 35768  016414  D002               	goto	i1l13635
 35769                           
 35770                           ;LCD.c: 153: {
 35771                           ;LCD.c: 154: LATA |= 0b00010000;
 35772  016416  8889               	bsf	3977,4,c	;volatile
 35773  016418  D000               	goto	i1l13635
 35774  01641A                     i1l13635:
 35775                           
 35776                           ;LCD.c: 155: }
 35777                           ;LCD.c: 156: if(LSB_nibble&0b0010)
 35778  01641A  A20E               	btfss	i1SendLCDbyte@LSB_nibble,1,c
 35779  01641C  D002               	goto	i1l13639
 35780                           
 35781                           ;LCD.c: 157: {
 35782                           ;LCD.c: 158: LATA |= 0b00100000;
 35783  01641E  8A89               	bsf	3977,5,c	;volatile
 35784  016420  D000               	goto	i1l13639
 35785  016422                     i1l13639:
 35786                           
 35787                           ;LCD.c: 159: }
 35788                           ;LCD.c: 160: if(LSB_nibble&0b0001)
 35789  016422  A00E               	btfss	i1SendLCDbyte@LSB_nibble,0,c
 35790  016424  D002               	goto	i1l13643
 35791                           
 35792                           ;LCD.c: 161: {
 35793                           ;LCD.c: 162: LATE |= 0b00000001;
 35794  016426  808D               	bsf	3981,0,c	;volatile
 35795  016428  D000               	goto	i1l13643
 35796  01642A                     i1l13643:
 35797                           
 35798                           ;LCD.c: 163: }
 35799                           ;LCD.c: 164: PulseEnablePin();
 35800  01642A  ECB7  F0BE         	call	i1_PulseEnablePin	;wreg free
 35801                           
 35802                           ;LCD.c: 165: }
 35803  01642E  0012               	return	
 35804  016430                     i1l13645:
 35805                           
 35806                           ;LCD.c: 166: else
 35807                           ;LCD.c: 167: {
 35808                           ;LCD.c: 168: delayUS(20);
 35809  016430  0E14               	movlw	20
 35810  016432  6E01               	movwf	i1delayUS@US,c
 35811  016434  0E00               	movlw	0
 35812  016436  6E02               	movwf	i1delayUS@US+1,c
 35813  016438  0E00               	movlw	0
 35814  01643A  6E03               	movwf	i1delayUS@US+2,c
 35815  01643C  0E00               	movlw	0
 35816  01643E  6E04               	movwf	i1delayUS@US+3,c
 35817  016440  EC48  F0BC         	call	i1_delayUS	;wreg free
 35818  016444  0012               	return	
 35819  016446  0012               	return		;funcret
 35820  016448                     __end_ofi1_SendLCDbyte:
 35821                           	opt stack 0
 35822                           pclatu	equ	0xFFB
 35823                           pclath	equ	0xFFA
 35824                           tblptru	equ	0xFF8
 35825                           tblptrh	equ	0xFF7
 35826                           tblptrl	equ	0xFF6
 35827                           tablat	equ	0xFF5
 35828                           prodh	equ	0xFF4
 35829                           prodl	equ	0xFF3
 35830                           intcon	equ	0xFF2
 35831                           intcon2	equ	0xFF1
 35832                           indf0	equ	0xFEF
 35833                           postinc0	equ	0xFEE
 35834                           plusw0	equ	0xFEB
 35835                           fsr0h	equ	0xFEA
 35836                           fsr0l	equ	0xFE9
 35837                           wreg	equ	0xFE8
 35838                           indf1	equ	0xFE7
 35839                           postdec1	equ	0xFE5
 35840                           fsr1h	equ	0xFE2
 35841                           fsr1l	equ	0xFE1
 35842                           bsr	equ	0xFE0
 35843                           indf2	equ	0xFDF
 35844                           postinc2	equ	0xFDE
 35845                           postdec2	equ	0xFDD
 35846                           plusw2	equ	0xFDB
 35847                           fsr2h	equ	0xFDA
 35848                           fsr2l	equ	0xFD9
 35849                           status	equ	0xFD8
 35850                           
 35851 ;; *************** function i1_PulseEnablePin *****************
 35852 ;; Defined at:
 35853 ;;		line 178 in file "LCD.c"
 35854 ;; Parameters:    Size  Location     Type
 35855 ;;		None
 35856 ;; Auto vars:     Size  Location     Type
 35857 ;;		None
 35858 ;; Return value:  Size  Location     Type
 35859 ;;		None               void
 35860 ;; Registers used:
 35861 ;;		wreg, status,2, status,0, cstack
 35862 ;; Tracked objects:
 35863 ;;		On entry : 0/0
 35864 ;;		On exit  : 0/0
 35865 ;;		Unchanged: 0/0
 35866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35871 ;;Total ram usage:        0 bytes
 35872 ;; Hardware stack levels used:    1
 35873 ;; Hardware stack levels required when called:    2
 35874 ;; This function calls:
 35875 ;;		i1_delayUS
 35876 ;; This function is called by:
 35877 ;;		i1_SendLCDbyte
 35878 ;; This function uses a non-reentrant model
 35879 ;;
 35880                           
 35881                           	psect	text107
 35882  017D6E                     __ptext107:
 35883                           	opt stack 0
 35884  017D6E                     i1_PulseEnablePin:
 35885                           	opt stack 19
 35886                           
 35887                           ;LCD.c: 181: LATD |= (0b10000000);
 35888                           
 35889                           ;incstack = 0
 35890  017D6E  8E8C               	bsf	3980,7,c	;volatile
 35891                           
 35892                           ;LCD.c: 182: delayUS(2500);
 35893  017D70  0EC4               	movlw	196
 35894  017D72  6E01               	movwf	i1delayUS@US,c
 35895  017D74  0E09               	movlw	9
 35896  017D76  6E02               	movwf	i1delayUS@US+1,c
 35897  017D78  0E00               	movlw	0
 35898  017D7A  6E03               	movwf	i1delayUS@US+2,c
 35899  017D7C  0E00               	movlw	0
 35900  017D7E  6E04               	movwf	i1delayUS@US+3,c
 35901  017D80  EC48  F0BC         	call	i1_delayUS	;wreg free
 35902                           
 35903                           ;LCD.c: 184: LATD &= ~(0b10000000);
 35904  017D84  9E8C               	bcf	3980,7,c	;volatile
 35905                           
 35906                           ;LCD.c: 185: delayUS(2500);
 35907  017D86  0EC4               	movlw	196
 35908  017D88  6E01               	movwf	i1delayUS@US,c
 35909  017D8A  0E09               	movlw	9
 35910  017D8C  6E02               	movwf	i1delayUS@US+1,c
 35911  017D8E  0E00               	movlw	0
 35912  017D90  6E03               	movwf	i1delayUS@US+2,c
 35913  017D92  0E00               	movlw	0
 35914  017D94  6E04               	movwf	i1delayUS@US+3,c
 35915  017D96  EC48  F0BC         	call	i1_delayUS	;wreg free
 35916  017D9A  0012               	return		;funcret
 35917  017D9C                     __end_ofi1_PulseEnablePin:
 35918                           	opt stack 0
 35919                           pclatu	equ	0xFFB
 35920                           pclath	equ	0xFFA
 35921                           tblptru	equ	0xFF8
 35922                           tblptrh	equ	0xFF7
 35923                           tblptrl	equ	0xFF6
 35924                           tablat	equ	0xFF5
 35925                           prodh	equ	0xFF4
 35926                           prodl	equ	0xFF3
 35927                           intcon	equ	0xFF2
 35928                           intcon2	equ	0xFF1
 35929                           indf0	equ	0xFEF
 35930                           postinc0	equ	0xFEE
 35931                           plusw0	equ	0xFEB
 35932                           fsr0h	equ	0xFEA
 35933                           fsr0l	equ	0xFE9
 35934                           wreg	equ	0xFE8
 35935                           indf1	equ	0xFE7
 35936                           postdec1	equ	0xFE5
 35937                           fsr1h	equ	0xFE2
 35938                           fsr1l	equ	0xFE1
 35939                           bsr	equ	0xFE0
 35940                           indf2	equ	0xFDF
 35941                           postinc2	equ	0xFDE
 35942                           postdec2	equ	0xFDD
 35943                           plusw2	equ	0xFDB
 35944                           fsr2h	equ	0xFDA
 35945                           fsr2l	equ	0xFD9
 35946                           status	equ	0xFD8
 35947                           
 35948 ;; *************** function i1_BufferCopy *****************
 35949 ;; Defined at:
 35950 ;;		line 103 in file "MISC.c"
 35951 ;; Parameters:    Size  Location     Type
 35952 ;;  from            2    8[COMRAM] PTR unsigned char 
 35953 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 35954 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 35955 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 35956 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 35957 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 35958 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 35959 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 35960 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 35961 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 35962 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 35963 ;;		 -> STR_68(5), STR_67(9), STR_66(9), StringAddEqual@temp(100), 
 35964 ;;		 -> RemoveSpaces@That(100), low_isr@TEMP_Rxdata(100), 
 35965 ;;  to              2   10[COMRAM] PTR unsigned char 
 35966 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 35967 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 35968 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 35969 ;;  count           1   12[COMRAM] unsigned char 
 35970 ;;  shift           1   13[COMRAM] unsigned char 
 35971 ;; Auto vars:     Size  Location     Type
 35972 ;;  BufferCopy      1   14[COMRAM] unsigned char 
 35973 ;; Return value:  Size  Location     Type
 35974 ;;		None               void
 35975 ;; Registers used:
 35976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35977 ;; Tracked objects:
 35978 ;;		On entry : 0/0
 35979 ;;		On exit  : 0/0
 35980 ;;		Unchanged: 0/0
 35981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35982 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35985 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35986 ;;Total ram usage:        7 bytes
 35987 ;; Hardware stack levels used:    1
 35988 ;; Hardware stack levels required when called:    2
 35989 ;; This function calls:
 35990 ;;		i1_cleanBuffer
 35991 ;; This function is called by:
 35992 ;;		_low_isr
 35993 ;; This function uses a non-reentrant model
 35994 ;;
 35995                           
 35996                           	psect	text108
 35997  01688C                     __ptext108:
 35998                           	opt stack 0
 35999  01688C                     i1_BufferCopy:
 36000                           	opt stack 21
 36001                           
 36002                           ;MISC.c: 105: unsigned char i=0;
 36003                           
 36004                           ;incstack = 0
 36005  01688C  0E00               	movlw	0
 36006  01688E  6E0F               	movwf	i1BufferCopy@i,c
 36007                           
 36008                           ;MISC.c: 106: cleanBuffer(to,count);
 36009  016890  C00B  F001         	movff	i1BufferCopy@to,i1cleanBuffer@data
 36010  016894  C00C  F002         	movff	i1BufferCopy@to+1,i1cleanBuffer@data+1
 36011  016898  C00D  F003         	movff	i1BufferCopy@count,i1cleanBuffer@count
 36012  01689C  6A04               	clrf	i1cleanBuffer@count+1,c
 36013  01689E  EC7F  F0BD         	call	i1_cleanBuffer	;wreg free
 36014                           
 36015                           ;MISC.c: 107: for(i = shift; i>0;i--)
 36016  0168A2  C00E  F00F         	movff	i1BufferCopy@shift,i1BufferCopy@i
 36017  0168A6                     i1l14639:
 36018  0168A6  500F               	movf	i1BufferCopy@i,w,c
 36019  0168A8  B4D8               	btfsc	status,2,c
 36020  0168AA  D029               	goto	i1l14659
 36021  0168AC  D001               	goto	i1l14643
 36022  0168AE  D027               	goto	i1l14659
 36023  0168B0                     i1l14643:
 36024                           
 36025                           ;MISC.c: 108: {
 36026                           ;MISC.c: 109: *to = ' ';
 36027  0168B0  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 36028  0168B4  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 36029  0168B8  0E20               	movlw	32
 36030  0168BA  6EDF               	movwf	indf2,c
 36031                           
 36032                           ;MISC.c: 110: to++;
 36033  0168BC  4A0B               	infsnz	i1BufferCopy@to,f,c
 36034  0168BE  2A0C               	incf	i1BufferCopy@to+1,f,c
 36035  0168C0  060F               	decf	i1BufferCopy@i,f,c
 36036  0168C2  D7F1               	goto	i1l14639
 36037                           
 36038                           ;MISC.c: 111: }
 36039                           ;MISC.c: 112: while(*from != 0 && count >0)
 36040  0168C4  D01C               	goto	i1l14659
 36041  0168C6                     i1l14651:
 36042                           
 36043                           ;MISC.c: 113: {
 36044                           ;MISC.c: 114: *to = *from;
 36045  0168C6  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 36046  0168CA  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 36047  0168CE  0E00               	movlw	low (__mediumconst shr (0+16))
 36048  0168D0  6EF8               	movwf	tblptru,c
 36049  0168D2  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 36050  0168D6  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 36051  0168DA  0E0C               	movlw	(high __ramtop+-1)
 36052  0168DC  64F7               	cpfsgt	tblptrh,c
 36053  0168DE  D003               	bra	i1u1916_27
 36054  0168E0  0008               	tblrd		*
 36055  0168E2  50F5               	movf	tablat,w,c
 36056  0168E4  D005               	bra	i1u1916_20
 36057  0168E6                     i1u1916_27:
 36058  0168E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 36059  0168EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 36060  0168EE  50EF               	movf	indf0,w,c
 36061  0168F0                     i1u1916_20:
 36062  0168F0  6EDF               	movwf	indf2,c
 36063                           
 36064                           ;MISC.c: 115: from++;
 36065  0168F2  4A09               	infsnz	i1BufferCopy@from,f,c
 36066  0168F4  2A0A               	incf	i1BufferCopy@from+1,f,c
 36067                           
 36068                           ;MISC.c: 116: to++;
 36069  0168F6  4A0B               	infsnz	i1BufferCopy@to,f,c
 36070  0168F8  2A0C               	incf	i1BufferCopy@to+1,f,c
 36071                           
 36072                           ;MISC.c: 117: count--;
 36073  0168FA  060D               	decf	i1BufferCopy@count,f,c
 36074  0168FC  D000               	goto	i1l14659
 36075  0168FE                     i1l14659:
 36076  0168FE  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 36077  016902  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 36078  016906  0E00               	movlw	low (__mediumconst shr (0+16))
 36079  016908  6EF8               	movwf	tblptru,c
 36080  01690A  0E0C               	movlw	(high __ramtop+-1)
 36081  01690C  64F7               	cpfsgt	tblptrh,c
 36082  01690E  D003               	bra	i1u1917_27
 36083  016910  0008               	tblrd		*
 36084  016912  50F5               	movf	tablat,w,c
 36085  016914  D005               	bra	i1u1917_20
 36086  016916                     i1u1917_27:
 36087  016916  CFF6 FFE9          	movff	tblptrl,fsr0l
 36088  01691A  CFF7 FFEA          	movff	tblptrh,fsr0h
 36089  01691E  50EF               	movf	indf0,w,c
 36090  016920                     i1u1917_20:
 36091  016920  0900               	iorlw	0
 36092  016922  B4D8               	btfsc	status,2,c
 36093  016924  0012               	return	
 36094  016926  500D               	movf	i1BufferCopy@count,w,c
 36095  016928  B4D8               	btfsc	status,2,c
 36096  01692A  0012               	return	
 36097  01692C  D7CC               	goto	i1l14651
 36098  01692E  0012               	return	
 36099  016930  0012               	return		;funcret
 36100  016932                     __end_ofi1_BufferCopy:
 36101                           	opt stack 0
 36102                           pclatu	equ	0xFFB
 36103                           pclath	equ	0xFFA
 36104                           tblptru	equ	0xFF8
 36105                           tblptrh	equ	0xFF7
 36106                           tblptrl	equ	0xFF6
 36107                           tablat	equ	0xFF5
 36108                           prodh	equ	0xFF4
 36109                           prodl	equ	0xFF3
 36110                           intcon	equ	0xFF2
 36111                           intcon2	equ	0xFF1
 36112                           indf0	equ	0xFEF
 36113                           postinc0	equ	0xFEE
 36114                           plusw0	equ	0xFEB
 36115                           fsr0h	equ	0xFEA
 36116                           fsr0l	equ	0xFE9
 36117                           wreg	equ	0xFE8
 36118                           indf1	equ	0xFE7
 36119                           postdec1	equ	0xFE5
 36120                           fsr1h	equ	0xFE2
 36121                           fsr1l	equ	0xFE1
 36122                           bsr	equ	0xFE0
 36123                           indf2	equ	0xFDF
 36124                           postinc2	equ	0xFDE
 36125                           postdec2	equ	0xFDD
 36126                           plusw2	equ	0xFDB
 36127                           fsr2h	equ	0xFDA
 36128                           fsr2l	equ	0xFD9
 36129                           status	equ	0xFD8
 36130                           
 36131 ;; *************** function i1_cleanBuffer *****************
 36132 ;; Defined at:
 36133 ;;		line 75 in file "MISC.c"
 36134 ;; Parameters:    Size  Location     Type
 36135 ;;  data            2    0[COMRAM] PTR unsigned char 
 36136 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 36137 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 36138 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 36139 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 36140 ;;  count           2    2[COMRAM] int 
 36141 ;; Auto vars:     Size  Location     Type
 36142 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 36143 ;; Return value:  Size  Location     Type
 36144 ;;		None               void
 36145 ;; Registers used:
 36146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36147 ;; Tracked objects:
 36148 ;;		On entry : 0/0
 36149 ;;		On exit  : 0/0
 36150 ;;		Unchanged: 0/0
 36151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36154 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36155 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36156 ;;Total ram usage:        8 bytes
 36157 ;; Hardware stack levels used:    1
 36158 ;; Hardware stack levels required when called:    1
 36159 ;; This function calls:
 36160 ;;		Nothing
 36161 ;; This function is called by:
 36162 ;;		_low_isr
 36163 ;;		i1_BufferCopy
 36164 ;; This function uses a non-reentrant model
 36165 ;;
 36166                           
 36167                           	psect	text109
 36168  017AFE                     __ptext109:
 36169                           	opt stack 0
 36170  017AFE                     i1_cleanBuffer:
 36171                           	opt stack 22
 36172                           
 36173                           ;MISC.c: 77: unsigned char i=0;
 36174                           
 36175                           ;incstack = 0
 36176  017AFE  0E00               	movlw	0
 36177  017B00  6E08               	movwf	i1cleanBuffer@i,c
 36178                           
 36179                           ;MISC.c: 78: for(i=0; i<count;i++)
 36180  017B02  0E00               	movlw	0
 36181  017B04  6E08               	movwf	i1cleanBuffer@i,c
 36182  017B06  D00C               	goto	i1l13559
 36183  017B08                     i1l13555:
 36184                           
 36185                           ;MISC.c: 79: {
 36186                           ;MISC.c: 80: data[i]= 0;
 36187  017B08  5008               	movf	i1cleanBuffer@i,w,c
 36188  017B0A  0D01               	mullw	1
 36189  017B0C  50F3               	movf	prodl,w,c
 36190  017B0E  2401               	addwf	i1cleanBuffer@data,w,c
 36191  017B10  6ED9               	movwf	fsr2l,c
 36192  017B12  50F4               	movf	prodh,w,c
 36193  017B14  2002               	addwfc	i1cleanBuffer@data+1,w,c
 36194  017B16  6EDA               	movwf	fsr2h,c
 36195  017B18  0E00               	movlw	0
 36196  017B1A  6EDF               	movwf	indf2,c
 36197  017B1C  2A08               	incf	i1cleanBuffer@i,f,c
 36198  017B1E  D000               	goto	i1l13559
 36199  017B20                     i1l13559:
 36200  017B20  5008               	movf	i1cleanBuffer@i,w,c
 36201  017B22  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 36202  017B24  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 36203  017B26  5003               	movf	i1cleanBuffer@count,w,c
 36204  017B28  5C05               	subwf	??i1_cleanBuffer,w,c
 36205  017B2A  5006               	movf	??i1_cleanBuffer+1,w,c
 36206  017B2C  0A80               	xorlw	128
 36207  017B2E  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 36208  017B30  5004               	movf	i1cleanBuffer@count+1,w,c
 36209  017B32  0A80               	xorlw	128
 36210  017B34  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 36211  017B36  A0D8               	btfss	status,0,c
 36212  017B38  D7E7               	goto	i1l13555
 36213  017B3A  0012               	return		;funcret
 36214  017B3C                     __end_ofi1_cleanBuffer:
 36215                           	opt stack 0
 36216                           pclatu	equ	0xFFB
 36217                           pclath	equ	0xFFA
 36218                           tblptru	equ	0xFF8
 36219                           tblptrh	equ	0xFF7
 36220                           tblptrl	equ	0xFF6
 36221                           tablat	equ	0xFF5
 36222                           prodh	equ	0xFF4
 36223                           prodl	equ	0xFF3
 36224                           intcon	equ	0xFF2
 36225                           intcon2	equ	0xFF1
 36226                           indf0	equ	0xFEF
 36227                           postinc0	equ	0xFEE
 36228                           plusw0	equ	0xFEB
 36229                           fsr0h	equ	0xFEA
 36230                           fsr0l	equ	0xFE9
 36231                           wreg	equ	0xFE8
 36232                           indf1	equ	0xFE7
 36233                           postdec1	equ	0xFE5
 36234                           fsr1h	equ	0xFE2
 36235                           fsr1l	equ	0xFE1
 36236                           bsr	equ	0xFE0
 36237                           indf2	equ	0xFDF
 36238                           postinc2	equ	0xFDE
 36239                           postdec2	equ	0xFDD
 36240                           plusw2	equ	0xFDB
 36241                           fsr2h	equ	0xFDA
 36242                           fsr2l	equ	0xFD9
 36243                           status	equ	0xFD8
 36244                           
 36245 ;; *************** function _UseIRCode *****************
 36246 ;; Defined at:
 36247 ;;		line 264 in file "IR.c"
 36248 ;; Parameters:    Size  Location     Type
 36249 ;;  Code            2   10[COMRAM] PTR unsigned char 
 36250 ;;		 -> IR_New_Code(1), 
 36251 ;;  NEC             4   12[COMRAM] unsigned long 
 36252 ;; Auto vars:     Size  Location     Type
 36253 ;;  buf           100    0        unsigned char [100]
 36254 ;;  i               1   17[COMRAM] unsigned char 
 36255 ;; Return value:  Size  Location     Type
 36256 ;;		None               void
 36257 ;; Registers used:
 36258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36259 ;; Tracked objects:
 36260 ;;		On entry : 0/0
 36261 ;;		On exit  : 0/0
 36262 ;;		Unchanged: 0/0
 36263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36264 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36267 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36268 ;;Total ram usage:        8 bytes
 36269 ;; Hardware stack levels used:    1
 36270 ;; Hardware stack levels required when called:    2
 36271 ;; This function calls:
 36272 ;;		_ReadButton1
 36273 ;;		i1_delayUS
 36274 ;; This function is called by:
 36275 ;;		_low_isr
 36276 ;; This function uses a non-reentrant model
 36277 ;;
 36278                           
 36279                           	psect	text110
 36280  0165CA                     __ptext110:
 36281                           	opt stack 0
 36282  0165CA                     _UseIRCode:
 36283                           	opt stack 21
 36284                           
 36285                           ;IR.c: 266: unsigned char buf[100];
 36286                           ;IR.c: 267: unsigned char i;
 36287                           ;IR.c: 269: if(ReadButton1())
 36288                           
 36289                           ;incstack = 0
 36290  0165CA  ECBC  F0BF         	call	_ReadButton1	;wreg free
 36291  0165CE  0900               	iorlw	0
 36292  0165D0  B4D8               	btfsc	status,2,c
 36293  0165D2  D018               	goto	i1l13657
 36294                           
 36295                           ;IR.c: 270: {
 36296                           ;IR.c: 271: if(NEC == NEC_Stored1)
 36297  0165D4  5028               	movf	_NEC_Stored1,w,c
 36298  0165D6  180D               	xorwf	UseIRCode@NEC,w,c
 36299  0165D8  E147               	bnz	i1l13681
 36300  0165DA  5029               	movf	_NEC_Stored1+1,w,c
 36301  0165DC  180E               	xorwf	UseIRCode@NEC+1,w,c
 36302  0165DE  E144               	bnz	i1l13681
 36303  0165E0  502A               	movf	_NEC_Stored1+2,w,c
 36304  0165E2  180F               	xorwf	UseIRCode@NEC+2,w,c
 36305  0165E4  E141               	bnz	i1l13681
 36306  0165E6  502B               	movf	_NEC_Stored1+3,w,c
 36307  0165E8  1810               	xorwf	UseIRCode@NEC+3,w,c
 36308  0165EA  A4D8               	btfss	status,2,c
 36309  0165EC  D03D               	goto	i1l13681
 36310                           
 36311                           ;IR.c: 272: {
 36312                           ;IR.c: 273: if(*Code == 1)
 36313  0165EE  C00B  FFD9         	movff	UseIRCode@Code,fsr2l
 36314  0165F2  C00C  FFDA         	movff	UseIRCode@Code+1,fsr2h
 36315  0165F6  04DE               	decf	postinc2,w,c
 36316  0165F8  A4D8               	btfss	status,2,c
 36317  0165FA  D002               	goto	i1l13655
 36318                           
 36319                           ;IR.c: 274: {
 36320                           ;IR.c: 275: LATD |= 0b00000010;
 36321  0165FC  828C               	bsf	3980,1,c	;volatile
 36322                           
 36323                           ;IR.c: 276: }
 36324  0165FE  D034               	goto	i1l13681
 36325  016600                     i1l13655:
 36326                           
 36327                           ;IR.c: 277: else
 36328                           ;IR.c: 278: {
 36329                           ;IR.c: 279: LATD |= 0b00000100;
 36330  016600  848C               	bsf	3980,2,c	;volatile
 36331                           
 36332                           ;IR.c: 280: }
 36333                           ;IR.c: 281: }
 36334                           ;IR.c: 282: }
 36335  016602  D032               	goto	i1l13681
 36336  016604                     i1l13657:
 36337                           
 36338                           ;IR.c: 283: else
 36339                           ;IR.c: 284: {
 36340                           ;IR.c: 285: if(*Code == 1)
 36341  016604  C00B  FFD9         	movff	UseIRCode@Code,fsr2l
 36342  016608  C00C  FFDA         	movff	UseIRCode@Code+1,fsr2h
 36343  01660C  04DE               	decf	postinc2,w,c
 36344  01660E  A4D8               	btfss	status,2,c
 36345  016610  D02B               	goto	i1l13681
 36346                           
 36347                           ;IR.c: 286: {
 36348                           ;IR.c: 287: NEC_Stored1 = NEC;
 36349  016612  C00D  F028         	movff	UseIRCode@NEC,_NEC_Stored1
 36350  016616  C00E  F029         	movff	UseIRCode@NEC+1,_NEC_Stored1+1
 36351  01661A  C00F  F02A         	movff	UseIRCode@NEC+2,_NEC_Stored1+2
 36352  01661E  C010  F02B         	movff	UseIRCode@NEC+3,_NEC_Stored1+3
 36353                           
 36354                           ;IR.c: 288: for(i =0; i <10;i++)
 36355  016622  0E00               	movlw	0
 36356  016624  6E12               	movwf	UseIRCode@i,c
 36357  016626                     i1l13663:
 36358  016626  0E09               	movlw	9
 36359  016628  6412               	cpfsgt	UseIRCode@i,c
 36360  01662A  D001               	goto	i1l13667
 36361  01662C  D01A               	goto	i1l13679
 36362  01662E                     i1l13667:
 36363                           
 36364                           ;IR.c: 289: {
 36365                           ;IR.c: 290: LATD |= 0b00000010;
 36366  01662E  828C               	bsf	3980,1,c	;volatile
 36367                           
 36368                           ;IR.c: 291: LATD &= ~0b00000100;
 36369  016630  948C               	bcf	3980,2,c	;volatile
 36370                           
 36371                           ;IR.c: 292: delayUS(50000);
 36372  016632  0E50               	movlw	80
 36373  016634  6E01               	movwf	i1delayUS@US,c
 36374  016636  0EC3               	movlw	195
 36375  016638  6E02               	movwf	i1delayUS@US+1,c
 36376  01663A  0E00               	movlw	0
 36377  01663C  6E03               	movwf	i1delayUS@US+2,c
 36378  01663E  0E00               	movlw	0
 36379  016640  6E04               	movwf	i1delayUS@US+3,c
 36380  016642  EC48  F0BC         	call	i1_delayUS	;wreg free
 36381                           
 36382                           ;IR.c: 293: LATD |= 0b00000100;
 36383  016646  848C               	bsf	3980,2,c	;volatile
 36384                           
 36385                           ;IR.c: 294: LATD &= ~0b00000010;
 36386  016648  928C               	bcf	3980,1,c	;volatile
 36387                           
 36388                           ;IR.c: 295: delayUS(50000);
 36389  01664A  0E50               	movlw	80
 36390  01664C  6E01               	movwf	i1delayUS@US,c
 36391  01664E  0EC3               	movlw	195
 36392  016650  6E02               	movwf	i1delayUS@US+1,c
 36393  016652  0E00               	movlw	0
 36394  016654  6E03               	movwf	i1delayUS@US+2,c
 36395  016656  0E00               	movlw	0
 36396  016658  6E04               	movwf	i1delayUS@US+3,c
 36397  01665A  EC48  F0BC         	call	i1_delayUS	;wreg free
 36398  01665E  2A12               	incf	UseIRCode@i,f,c
 36399  016660  D7E2               	goto	i1l13663
 36400  016662                     i1l13679:
 36401                           
 36402                           ;IR.c: 296: }
 36403                           ;IR.c: 297: LATD &= ~0b00000010;
 36404  016662  928C               	bcf	3980,1,c	;volatile
 36405                           
 36406                           ;IR.c: 298: LATD &= ~0b00000100;
 36407  016664  948C               	bcf	3980,2,c	;volatile
 36408  016666  D000               	goto	i1l13681
 36409  016668                     i1l13681:
 36410                           
 36411                           ;IR.c: 299: }
 36412                           ;IR.c: 300: }
 36413                           ;IR.c: 301: *Code = 0;
 36414  016668  C00B  FFD9         	movff	UseIRCode@Code,fsr2l
 36415  01666C  C00C  FFDA         	movff	UseIRCode@Code+1,fsr2h
 36416  016670  0E00               	movlw	0
 36417  016672  6EDF               	movwf	indf2,c
 36418                           
 36419                           ;IR.c: 302: BlueLEDcount = 0;
 36420  016674  0E00               	movlw	0
 36421  016676  0101               	movlb	1	; () banked
 36422  016678  6FDC               	movwf	(_BlueLEDcount+1)& (0+255),b
 36423  01667A  0E00               	movlw	0
 36424  01667C  6FDB               	movwf	_BlueLEDcount& (0+255),b
 36425                           
 36426                           ; BSR set to: 1
 36427  01667E  0012               	return		;funcret
 36428  016680                     __end_of_UseIRCode:
 36429                           	opt stack 0
 36430                           pclatu	equ	0xFFB
 36431                           pclath	equ	0xFFA
 36432                           tblptru	equ	0xFF8
 36433                           tblptrh	equ	0xFF7
 36434                           tblptrl	equ	0xFF6
 36435                           tablat	equ	0xFF5
 36436                           prodh	equ	0xFF4
 36437                           prodl	equ	0xFF3
 36438                           intcon	equ	0xFF2
 36439                           intcon2	equ	0xFF1
 36440                           indf0	equ	0xFEF
 36441                           postinc0	equ	0xFEE
 36442                           plusw0	equ	0xFEB
 36443                           fsr0h	equ	0xFEA
 36444                           fsr0l	equ	0xFE9
 36445                           wreg	equ	0xFE8
 36446                           indf1	equ	0xFE7
 36447                           postdec1	equ	0xFE5
 36448                           fsr1h	equ	0xFE2
 36449                           fsr1l	equ	0xFE1
 36450                           bsr	equ	0xFE0
 36451                           indf2	equ	0xFDF
 36452                           postinc2	equ	0xFDE
 36453                           postdec2	equ	0xFDD
 36454                           plusw2	equ	0xFDB
 36455                           fsr2h	equ	0xFDA
 36456                           fsr2l	equ	0xFD9
 36457                           status	equ	0xFD8
 36458                           
 36459 ;; *************** function i1_delayUS *****************
 36460 ;; Defined at:
 36461 ;;		line 57 in file "MISC.c"
 36462 ;; Parameters:    Size  Location     Type
 36463 ;;  US              4    0[COMRAM] long 
 36464 ;; Auto vars:     Size  Location     Type
 36465 ;;  delayUS         4    5[COMRAM] long 
 36466 ;;  delayUS         1    9[COMRAM] unsigned char 
 36467 ;; Return value:  Size  Location     Type
 36468 ;;		None               void
 36469 ;; Registers used:
 36470 ;;		wreg, status,2, status,0
 36471 ;; Tracked objects:
 36472 ;;		On entry : 0/0
 36473 ;;		On exit  : 0/0
 36474 ;;		Unchanged: 0/0
 36475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36476 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36477 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36479 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36480 ;;Total ram usage:       10 bytes
 36481 ;; Hardware stack levels used:    1
 36482 ;; Hardware stack levels required when called:    1
 36483 ;; This function calls:
 36484 ;;		Nothing
 36485 ;; This function is called by:
 36486 ;;		_UseIRCode
 36487 ;;		i1_SendLCDbyte
 36488 ;;		i1_PulseEnablePin
 36489 ;; This function uses a non-reentrant model
 36490 ;;
 36491                           
 36492                           	psect	text111
 36493  017890                     __ptext111:
 36494                           	opt stack 0
 36495  017890                     i1_delayUS:
 36496                           	opt stack 20
 36497                           
 36498                           ;MISC.c: 59: long i;
 36499                           ;MISC.c: 60: unsigned char j;
 36500                           ;MISC.c: 61: for(i=0;i<US;i+=31)
 36501                           
 36502                           ; BSR set to: 1
 36503                           ;incstack = 0
 36504  017890  0E00               	movlw	0
 36505  017892  6E06               	movwf	i1delayUS@i,c
 36506  017894  0E00               	movlw	0
 36507  017896  6E07               	movwf	i1delayUS@i+1,c
 36508  017898  0E00               	movlw	0
 36509  01789A  6E08               	movwf	i1delayUS@i+2,c
 36510  01789C  0E00               	movlw	0
 36511  01789E  6E09               	movwf	i1delayUS@i+3,c
 36512  0178A0  D00F               	goto	i1l282
 36513  0178A2                     i1l11635:
 36514                           
 36515                           ;MISC.c: 62: {
 36516                           ;MISC.c: 63: for(j=0;j<41;j++)
 36517  0178A2  0E00               	movlw	0
 36518  0178A4  6E0A               	movwf	i1delayUS@j,c
 36519  0178A6                     i1l11637:
 36520  0178A6  0E28               	movlw	40
 36521  0178A8  640A               	cpfsgt	i1delayUS@j,c
 36522  0178AA  D001               	goto	i1l284
 36523  0178AC  D003               	goto	i1l11645
 36524  0178AE                     i1l284:
 36525                           
 36526                           ;MISC.c: 64: {
 36527                           ;MISC.c: 65: __nop();
 36528  0178AE  F000               	nop	
 36529  0178B0  2A0A               	incf	i1delayUS@j,f,c
 36530  0178B2  D7F9               	goto	i1l11637
 36531  0178B4                     i1l11645:
 36532  0178B4  0E1F               	movlw	31
 36533  0178B6  2606               	addwf	i1delayUS@i,f,c
 36534  0178B8  0E00               	movlw	0
 36535  0178BA  2207               	addwfc	i1delayUS@i+1,f,c
 36536  0178BC  2208               	addwfc	i1delayUS@i+2,f,c
 36537  0178BE  2209               	addwfc	i1delayUS@i+3,f,c
 36538  0178C0                     i1l282:
 36539  0178C0  5001               	movf	i1delayUS@US,w,c
 36540  0178C2  5C06               	subwf	i1delayUS@i,w,c
 36541  0178C4  5002               	movf	i1delayUS@US+1,w,c
 36542  0178C6  5807               	subwfb	i1delayUS@i+1,w,c
 36543  0178C8  5003               	movf	i1delayUS@US+2,w,c
 36544  0178CA  5808               	subwfb	i1delayUS@i+2,w,c
 36545  0178CC  5009               	movf	i1delayUS@i+3,w,c
 36546  0178CE  0A80               	xorlw	128
 36547  0178D0  6E05               	movwf	??i1_delayUS& (0+255),c
 36548  0178D2  5004               	movf	i1delayUS@US+3,w,c
 36549  0178D4  0A80               	xorlw	128
 36550  0178D6  5805               	subwfb	??i1_delayUS& (0+255),w,c
 36551  0178D8  A0D8               	btfss	status,0,c
 36552  0178DA  D7E3               	goto	i1l11635
 36553  0178DC  0012               	return		;funcret
 36554  0178DE                     __end_ofi1_delayUS:
 36555                           	opt stack 0
 36556                           pclatu	equ	0xFFB
 36557                           pclath	equ	0xFFA
 36558                           tblptru	equ	0xFF8
 36559                           tblptrh	equ	0xFF7
 36560                           tblptrl	equ	0xFF6
 36561                           tablat	equ	0xFF5
 36562                           prodh	equ	0xFF4
 36563                           prodl	equ	0xFF3
 36564                           intcon	equ	0xFF2
 36565                           intcon2	equ	0xFF1
 36566                           indf0	equ	0xFEF
 36567                           postinc0	equ	0xFEE
 36568                           plusw0	equ	0xFEB
 36569                           fsr0h	equ	0xFEA
 36570                           fsr0l	equ	0xFE9
 36571                           wreg	equ	0xFE8
 36572                           indf1	equ	0xFE7
 36573                           postdec1	equ	0xFE5
 36574                           fsr1h	equ	0xFE2
 36575                           fsr1l	equ	0xFE1
 36576                           bsr	equ	0xFE0
 36577                           indf2	equ	0xFDF
 36578                           postinc2	equ	0xFDE
 36579                           postdec2	equ	0xFDD
 36580                           plusw2	equ	0xFDB
 36581                           fsr2h	equ	0xFDA
 36582                           fsr2l	equ	0xFD9
 36583                           status	equ	0xFD8
 36584                           
 36585 ;; *************** function _ReadButton1 *****************
 36586 ;; Defined at:
 36587 ;;		line 60 in file "Button.c"
 36588 ;; Parameters:    Size  Location     Type
 36589 ;;		None
 36590 ;; Auto vars:     Size  Location     Type
 36591 ;;		None
 36592 ;; Return value:  Size  Location     Type
 36593 ;;                  1    wreg      unsigned char 
 36594 ;; Registers used:
 36595 ;;		wreg
 36596 ;; Tracked objects:
 36597 ;;		On entry : 0/0
 36598 ;;		On exit  : 0/0
 36599 ;;		Unchanged: 0/0
 36600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36605 ;;Total ram usage:        0 bytes
 36606 ;; Hardware stack levels used:    1
 36607 ;; Hardware stack levels required when called:    1
 36608 ;; This function calls:
 36609 ;;		Nothing
 36610 ;; This function is called by:
 36611 ;;		_UseIRCode
 36612 ;; This function uses a non-reentrant model
 36613 ;;
 36614                           
 36615                           	psect	text112
 36616  017F78                     __ptext112:
 36617                           	opt stack 0
 36618  017F78                     _ReadButton1:
 36619                           	opt stack 21
 36620                           
 36621                           ;Button.c: 63: if((PORTB & 0b00000001) == 0b00000001)
 36622                           
 36623                           ;incstack = 0
 36624  017F78  A081               	btfss	3969,0,c	;volatile
 36625  017F7A  D002               	goto	i1l9355
 36626                           
 36627                           ;Button.c: 64: {
 36628                           ;Button.c: 65: return (1);
 36629  017F7C  0E01               	movlw	1
 36630                           
 36631                           ;Button.c: 66: }
 36632  017F7E  0012               	return	
 36633  017F80                     i1l9355:
 36634                           
 36635                           ;Button.c: 67: else
 36636                           ;Button.c: 68: {
 36637                           ;Button.c: 69: return 0;
 36638  017F80  0E00               	movlw	0
 36639  017F82  0012               	return	
 36640  017F84  0012               	return		;funcret
 36641  017F86                     __end_of_ReadButton1:
 36642                           	opt stack 0
 36643                           pclatu	equ	0xFFB
 36644                           pclath	equ	0xFFA
 36645                           tblptru	equ	0xFF8
 36646                           tblptrh	equ	0xFF7
 36647                           tblptrl	equ	0xFF6
 36648                           tablat	equ	0xFF5
 36649                           prodh	equ	0xFF4
 36650                           prodl	equ	0xFF3
 36651                           intcon	equ	0xFF2
 36652                           intcon2	equ	0xFF1
 36653                           indf0	equ	0xFEF
 36654                           postinc0	equ	0xFEE
 36655                           plusw0	equ	0xFEB
 36656                           fsr0h	equ	0xFEA
 36657                           fsr0l	equ	0xFE9
 36658                           wreg	equ	0xFE8
 36659                           indf1	equ	0xFE7
 36660                           postdec1	equ	0xFE5
 36661                           fsr1h	equ	0xFE2
 36662                           fsr1l	equ	0xFE1
 36663                           bsr	equ	0xFE0
 36664                           indf2	equ	0xFDF
 36665                           postinc2	equ	0xFDE
 36666                           postdec2	equ	0xFDD
 36667                           plusw2	equ	0xFDB
 36668                           fsr2h	equ	0xFDA
 36669                           fsr2l	equ	0xFD9
 36670                           status	equ	0xFD8
 36671                           
 36672 ;; *************** function _Reset_Timer0 *****************
 36673 ;; Defined at:
 36674 ;;		line 101 in file "Timer.c"
 36675 ;; Parameters:    Size  Location     Type
 36676 ;;		None
 36677 ;; Auto vars:     Size  Location     Type
 36678 ;;		None
 36679 ;; Return value:  Size  Location     Type
 36680 ;;		None               void
 36681 ;; Registers used:
 36682 ;;		wreg, status,2
 36683 ;; Tracked objects:
 36684 ;;		On entry : 0/0
 36685 ;;		On exit  : 0/0
 36686 ;;		Unchanged: 0/0
 36687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36692 ;;Total ram usage:        0 bytes
 36693 ;; Hardware stack levels used:    1
 36694 ;; Hardware stack levels required when called:    1
 36695 ;; This function calls:
 36696 ;;		Nothing
 36697 ;; This function is called by:
 36698 ;;		_low_isr
 36699 ;; This function uses a non-reentrant model
 36700 ;;
 36701                           
 36702                           	psect	text113
 36703  017F9C                     __ptext113:
 36704                           	opt stack 0
 36705  017F9C                     _Reset_Timer0:
 36706                           	opt stack 22
 36707                           
 36708                           ;Timer.c: 107: TMR0H = 0;
 36709                           
 36710                           ;incstack = 0
 36711  017F9C  0E00               	movlw	0
 36712  017F9E  6ED7               	movwf	4055,c	;volatile
 36713                           
 36714                           ;Timer.c: 108: TMR0L = 2;
 36715  017FA0  0E02               	movlw	2
 36716  017FA2  6ED6               	movwf	4054,c	;volatile
 36717  017FA4  0012               	return		;funcret
 36718  017FA6                     __end_of_Reset_Timer0:
 36719                           	opt stack 0
 36720                           pclatu	equ	0xFFB
 36721                           pclath	equ	0xFFA
 36722                           tblptru	equ	0xFF8
 36723                           tblptrh	equ	0xFF7
 36724                           tblptrl	equ	0xFF6
 36725                           tablat	equ	0xFF5
 36726                           prodh	equ	0xFF4
 36727                           prodl	equ	0xFF3
 36728                           intcon	equ	0xFF2
 36729                           intcon2	equ	0xFF1
 36730                           indf0	equ	0xFEF
 36731                           postinc0	equ	0xFEE
 36732                           plusw0	equ	0xFEB
 36733                           fsr0h	equ	0xFEA
 36734                           fsr0l	equ	0xFE9
 36735                           wreg	equ	0xFE8
 36736                           indf1	equ	0xFE7
 36737                           postdec1	equ	0xFE5
 36738                           fsr1h	equ	0xFE2
 36739                           fsr1l	equ	0xFE1
 36740                           bsr	equ	0xFE0
 36741                           indf2	equ	0xFDF
 36742                           postinc2	equ	0xFDE
 36743                           postdec2	equ	0xFDD
 36744                           plusw2	equ	0xFDB
 36745                           fsr2h	equ	0xFDA
 36746                           fsr2l	equ	0xFD9
 36747                           status	equ	0xFD8
 36748                           
 36749 ;; *************** function _IsPrintableASCII *****************
 36750 ;; Defined at:
 36751 ;;		line 413 in file "MISC.c"
 36752 ;; Parameters:    Size  Location     Type
 36753 ;;  data            1    wreg     unsigned char 
 36754 ;; Auto vars:     Size  Location     Type
 36755 ;;  data            1    0[COMRAM] unsigned char 
 36756 ;; Return value:  Size  Location     Type
 36757 ;;                  1    wreg      unsigned char 
 36758 ;; Registers used:
 36759 ;;		wreg, status,2, status,0
 36760 ;; Tracked objects:
 36761 ;;		On entry : 0/0
 36762 ;;		On exit  : 0/0
 36763 ;;		Unchanged: 0/0
 36764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36769 ;;Total ram usage:        1 bytes
 36770 ;; Hardware stack levels used:    1
 36771 ;; Hardware stack levels required when called:    1
 36772 ;; This function calls:
 36773 ;;		Nothing
 36774 ;; This function is called by:
 36775 ;;		_low_isr
 36776 ;; This function uses a non-reentrant model
 36777 ;;
 36778                           
 36779                           	psect	text114
 36780  017E88                     __ptext114:
 36781                           	opt stack 0
 36782  017E88                     _IsPrintableASCII:
 36783                           	opt stack 22
 36784                           
 36785                           ;incstack = 0
 36786                           ;IsPrintableASCII@data stored from wreg
 36787  017E88  6E01               	movwf	IsPrintableASCII@data,c
 36788                           
 36789                           ;MISC.c: 415: if(data >= 0x20 && data < 0x7F)
 36790  017E8A  0E1F               	movlw	31
 36791  017E8C  6401               	cpfsgt	IsPrintableASCII@data,c
 36792  017E8E  D005               	goto	i1l9481
 36793  017E90  0E7F               	movlw	127
 36794  017E92  6001               	cpfslt	IsPrintableASCII@data,c
 36795  017E94  D002               	goto	i1l9481
 36796                           
 36797                           ;MISC.c: 416: {
 36798                           ;MISC.c: 417: return 1;
 36799  017E96  0E01               	movlw	1
 36800  017E98  0012               	return	
 36801  017E9A                     i1l9481:
 36802                           
 36803                           ;MISC.c: 418: }
 36804                           ;MISC.c: 419: return 0;
 36805  017E9A  0E00               	movlw	0
 36806  017E9C  0012               	return	
 36807  017E9E  0012               	return		;funcret
 36808  017EA0                     __end_of_IsPrintableASCII:
 36809                           	opt stack 0
 36810                           pclatu	equ	0xFFB
 36811                           pclath	equ	0xFFA
 36812                           tblptru	equ	0xFF8
 36813                           tblptrh	equ	0xFF7
 36814                           tblptrl	equ	0xFF6
 36815                           tablat	equ	0xFF5
 36816                           prodh	equ	0xFF4
 36817                           prodl	equ	0xFF3
 36818                           intcon	equ	0xFF2
 36819                           intcon2	equ	0xFF1
 36820                           indf0	equ	0xFEF
 36821                           postinc0	equ	0xFEE
 36822                           plusw0	equ	0xFEB
 36823                           fsr0h	equ	0xFEA
 36824                           fsr0l	equ	0xFE9
 36825                           wreg	equ	0xFE8
 36826                           indf1	equ	0xFE7
 36827                           postdec1	equ	0xFE5
 36828                           fsr1h	equ	0xFE2
 36829                           fsr1l	equ	0xFE1
 36830                           bsr	equ	0xFE0
 36831                           indf2	equ	0xFDF
 36832                           postinc2	equ	0xFDE
 36833                           postdec2	equ	0xFDD
 36834                           plusw2	equ	0xFDB
 36835                           fsr2h	equ	0xFDA
 36836                           fsr2l	equ	0xFD9
 36837                           status	equ	0xFD8
 36838                           
 36839 ;; *************** function _IRrawToNEC *****************
 36840 ;; Defined at:
 36841 ;;		line 106 in file "IR.c"
 36842 ;; Parameters:    Size  Location     Type
 36843 ;;  Raw             2    0[COMRAM] PTR unsigned int 
 36844 ;;		 -> IRRawCode(144), 
 36845 ;;  NEC             2    2[COMRAM] PTR unsigned long 
 36846 ;;		 -> IR_NEC(4), 
 36847 ;;  Invert          1    4[COMRAM] unsigned char 
 36848 ;; Auto vars:     Size  Location     Type
 36849 ;;  NECtemp         4    7[COMRAM] unsigned long 
 36850 ;;  StartBit        1   14[COMRAM] unsigned char 
 36851 ;;  i               1   13[COMRAM] unsigned char 
 36852 ;;  first           1   12[COMRAM] unsigned char 
 36853 ;;  Pause           1   11[COMRAM] unsigned char 
 36854 ;; Return value:  Size  Location     Type
 36855 ;;                  1    wreg      unsigned char 
 36856 ;; Registers used:
 36857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36858 ;; Tracked objects:
 36859 ;;		On entry : 0/0
 36860 ;;		On exit  : 0/0
 36861 ;;		Unchanged: 0/0
 36862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 36863 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36864 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36865 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36866 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 36867 ;;Total ram usage:       15 bytes
 36868 ;; Hardware stack levels used:    1
 36869 ;; Hardware stack levels required when called:    1
 36870 ;; This function calls:
 36871 ;;		Nothing
 36872 ;; This function is called by:
 36873 ;;		_low_isr
 36874 ;; This function uses a non-reentrant model
 36875 ;;
 36876                           
 36877                           	psect	text115
 36878  014200                     __ptext115:
 36879                           	opt stack 0
 36880  014200                     _IRrawToNEC:
 36881                           	opt stack 22
 36882                           
 36883                           ;IR.c: 134: unsigned char i;
 36884                           ;IR.c: 135: unsigned char Pause =0;
 36885                           
 36886                           ;incstack = 0
 36887  014200  0E00               	movlw	0
 36888  014202  6E0C               	movwf	IRrawToNEC@Pause,c
 36889                           
 36890                           ;IR.c: 136: unsigned char first =0;
 36891  014204  0E00               	movlw	0
 36892  014206  6E0D               	movwf	IRrawToNEC@first,c
 36893                           
 36894                           ;IR.c: 137: unsigned char StartBit=72;
 36895  014208  0E48               	movlw	72
 36896  01420A  6E0F               	movwf	IRrawToNEC@StartBit,c
 36897                           
 36898                           ;IR.c: 138: unsigned long NECtemp = 0;
 36899  01420C  0E00               	movlw	0
 36900  01420E  6E08               	movwf	IRrawToNEC@NECtemp,c
 36901  014210  0E00               	movlw	0
 36902  014212  6E09               	movwf	IRrawToNEC@NECtemp+1,c
 36903  014214  0E00               	movlw	0
 36904  014216  6E0A               	movwf	IRrawToNEC@NECtemp+2,c
 36905  014218  0E00               	movlw	0
 36906  01421A  6E0B               	movwf	IRrawToNEC@NECtemp+3,c
 36907                           
 36908                           ;IR.c: 141: for (i =0; i < 72; i++)
 36909  01421C  0E00               	movlw	0
 36910  01421E  6E0E               	movwf	IRrawToNEC@i,c
 36911  014220                     i1l9527:
 36912  014220  0E47               	movlw	71
 36913  014222  640E               	cpfsgt	IRrawToNEC@i,c
 36914  014224  D001               	goto	i1l9531
 36915  014226  D03F               	goto	i1l9551
 36916  014228                     i1l9531:
 36917                           
 36918                           ;IR.c: 142: {
 36919                           ;IR.c: 143: if(Raw[i] >= 28800L && Raw[i] <= 32000L )
 36920  014228  500E               	movf	IRrawToNEC@i,w,c
 36921  01422A  0D02               	mullw	2
 36922  01422C  50F3               	movf	prodl,w,c
 36923  01422E  2401               	addwf	IRrawToNEC@Raw,w,c
 36924  014230  6ED9               	movwf	fsr2l,c
 36925  014232  50F4               	movf	prodh,w,c
 36926  014234  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 36927  014236  6EDA               	movwf	fsr2h,c
 36928  014238  0E80               	movlw	128
 36929  01423A  5CDE               	subwf	postinc2,w,c
 36930  01423C  0E70               	movlw	112
 36931  01423E  58DE               	subwfb	postinc2,w,c
 36932  014240  A0D8               	btfss	status,0,c
 36933  014242  D010               	goto	i1l9541
 36934  014244  500E               	movf	IRrawToNEC@i,w,c
 36935  014246  0D02               	mullw	2
 36936  014248  50F3               	movf	prodl,w,c
 36937  01424A  2401               	addwf	IRrawToNEC@Raw,w,c
 36938  01424C  6ED9               	movwf	fsr2l,c
 36939  01424E  50F4               	movf	prodh,w,c
 36940  014250  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 36941  014252  6EDA               	movwf	fsr2h,c
 36942  014254  04DE               	decf	postinc2,w,c
 36943  014256  0E7D               	movlw	125
 36944  014258  58DE               	subwfb	postinc2,w,c
 36945  01425A  B0D8               	btfsc	status,0,c
 36946  01425C  D003               	goto	i1l9541
 36947                           
 36948                           ;IR.c: 144: {
 36949                           ;IR.c: 146: return 2;
 36950  01425E  0E02               	movlw	2
 36951  014260  0012               	return	
 36952                           
 36953                           ;IR.c: 147: }
 36954  014262  D01F               	goto	i1l9547
 36955  014264                     i1l9541:
 36956                           
 36957                           ;IR.c: 148: else if(Raw[i] >= 2560 && Raw[i] <= 3200 )
 36958  014264  500E               	movf	IRrawToNEC@i,w,c
 36959  014266  0D02               	mullw	2
 36960  014268  50F3               	movf	prodl,w,c
 36961  01426A  2401               	addwf	IRrawToNEC@Raw,w,c
 36962  01426C  6ED9               	movwf	fsr2l,c
 36963  01426E  50F4               	movf	prodh,w,c
 36964  014270  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 36965  014272  6EDA               	movwf	fsr2h,c
 36966  014274  52DE               	movf	postinc2,f,c
 36967  014276  0E0A               	movlw	10
 36968  014278  5CDE               	subwf	postinc2,w,c
 36969  01427A  A0D8               	btfss	status,0,c
 36970  01427C  D012               	goto	i1l9547
 36971  01427E  500E               	movf	IRrawToNEC@i,w,c
 36972  014280  0D02               	mullw	2
 36973  014282  50F3               	movf	prodl,w,c
 36974  014284  2401               	addwf	IRrawToNEC@Raw,w,c
 36975  014286  6ED9               	movwf	fsr2l,c
 36976  014288  50F4               	movf	prodh,w,c
 36977  01428A  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 36978  01428C  6EDA               	movwf	fsr2h,c
 36979  01428E  0E81               	movlw	129
 36980  014290  5CDE               	subwf	postinc2,w,c
 36981  014292  0E0C               	movlw	12
 36982  014294  58DE               	subwfb	postinc2,w,c
 36983  014296  B0D8               	btfsc	status,0,c
 36984  014298  D004               	goto	i1l9547
 36985                           
 36986                           ;IR.c: 149: {
 36987                           ;IR.c: 151: StartBit = i;
 36988  01429A  C00E  F00F         	movff	IRrawToNEC@i,IRrawToNEC@StartBit
 36989                           
 36990                           ;IR.c: 152: break;
 36991  01429E  D003               	goto	i1l9551
 36992  0142A0  D000               	goto	i1l9547
 36993  0142A2                     i1l9547:
 36994  0142A2  2A0E               	incf	IRrawToNEC@i,f,c
 36995  0142A4  D7BD               	goto	i1l9527
 36996  0142A6                     i1l9551:
 36997                           
 36998                           ;IR.c: 153: }
 36999                           ;IR.c: 154: }
 37000                           ;IR.c: 155: if(72 - StartBit < 72)
 37001  0142A6  500F               	movf	IRrawToNEC@StartBit,w,c
 37002  0142A8  6E06               	movwf	??_IRrawToNEC& (0+255),c
 37003  0142AA  6A07               	clrf	(??_IRrawToNEC+1)& (0+255),c
 37004  0142AC  1E06               	comf	??_IRrawToNEC,f,c
 37005  0142AE  1E07               	comf	??_IRrawToNEC+1,f,c
 37006  0142B0  4A06               	infsnz	??_IRrawToNEC,f,c
 37007  0142B2  2A07               	incf	??_IRrawToNEC+1,f,c
 37008  0142B4  0E48               	movlw	72
 37009  0142B6  2606               	addwf	??_IRrawToNEC,f,c
 37010  0142B8  0E00               	movlw	0
 37011  0142BA  2207               	addwfc	??_IRrawToNEC+1,f,c
 37012  0142BC  BE07               	btfsc	??_IRrawToNEC+1,7,c
 37013  0142BE  D006               	goto	i1l9553
 37014  0142C0  5007               	movf	??_IRrawToNEC+1,w,c
 37015  0142C2  E106               	bnz	i1l9557
 37016  0142C4  0E48               	movlw	72
 37017  0142C6  5C06               	subwf	??_IRrawToNEC,w,c
 37018  0142C8  B0D8               	btfsc	status,0,c
 37019  0142CA  D002               	goto	i1l9557
 37020  0142CC                     i1l9553:
 37021                           
 37022                           ;IR.c: 156: {
 37023                           ;IR.c: 158: return 0;
 37024  0142CC  0E00               	movlw	0
 37025  0142CE  0012               	return	
 37026  0142D0                     i1l9557:
 37027                           
 37028                           ;IR.c: 159: }
 37029                           ;IR.c: 161: StartBit++;
 37030  0142D0  2A0F               	incf	IRrawToNEC@StartBit,f,c
 37031                           
 37032                           ;IR.c: 162: if(Raw[StartBit] < 1120 || Raw[StartBit] > 1760 )
 37033  0142D2  500F               	movf	IRrawToNEC@StartBit,w,c
 37034  0142D4  0D02               	mullw	2
 37035  0142D6  50F3               	movf	prodl,w,c
 37036  0142D8  2401               	addwf	IRrawToNEC@Raw,w,c
 37037  0142DA  6ED9               	movwf	fsr2l,c
 37038  0142DC  50F4               	movf	prodh,w,c
 37039  0142DE  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37040  0142E0  6EDA               	movwf	fsr2h,c
 37041  0142E2  0E60               	movlw	96
 37042  0142E4  5CDE               	subwf	postinc2,w,c
 37043  0142E6  0E04               	movlw	4
 37044  0142E8  58DE               	subwfb	postinc2,w,c
 37045  0142EA  A0D8               	btfss	status,0,c
 37046  0142EC  D00E               	goto	i1l9563
 37047  0142EE  500F               	movf	IRrawToNEC@StartBit,w,c
 37048  0142F0  0D02               	mullw	2
 37049  0142F2  50F3               	movf	prodl,w,c
 37050  0142F4  2401               	addwf	IRrawToNEC@Raw,w,c
 37051  0142F6  6ED9               	movwf	fsr2l,c
 37052  0142F8  50F4               	movf	prodh,w,c
 37053  0142FA  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37054  0142FC  6EDA               	movwf	fsr2h,c
 37055  0142FE  0EE1               	movlw	225
 37056  014300  5CDE               	subwf	postinc2,w,c
 37057  014302  0E06               	movlw	6
 37058  014304  58DE               	subwfb	postinc2,w,c
 37059  014306  A0D8               	btfss	status,0,c
 37060  014308  D002               	goto	i1l9567
 37061  01430A                     i1l9563:
 37062                           
 37063                           ;IR.c: 163: {
 37064                           ;IR.c: 165: return 0;
 37065  01430A  0E00               	movlw	0
 37066  01430C  0012               	return	
 37067  01430E                     i1l9567:
 37068                           
 37069                           ;IR.c: 166: }
 37070                           ;IR.c: 169: StartBit++;
 37071  01430E  2A0F               	incf	IRrawToNEC@StartBit,f,c
 37072                           
 37073                           ;IR.c: 170: for(i = StartBit; i < 72;i++)
 37074  014310  C00F  F00E         	movff	IRrawToNEC@StartBit,IRrawToNEC@i
 37075  014314                     i1l9571:
 37076  014314  0E47               	movlw	71
 37077  014316  640E               	cpfsgt	IRrawToNEC@i,c
 37078  014318  D001               	goto	i1l9575
 37079  01431A  D11E               	goto	i1l9671
 37080  01431C                     i1l9575:
 37081                           
 37082                           ;IR.c: 171: {
 37083                           ;IR.c: 172: if(Raw[StartBit] >= 80 && Raw[StartBit] <= 384 )
 37084  01431C  500F               	movf	IRrawToNEC@StartBit,w,c
 37085  01431E  0D02               	mullw	2
 37086  014320  50F3               	movf	prodl,w,c
 37087  014322  2401               	addwf	IRrawToNEC@Raw,w,c
 37088  014324  6ED9               	movwf	fsr2l,c
 37089  014326  50F4               	movf	prodh,w,c
 37090  014328  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37091  01432A  6EDA               	movwf	fsr2h,c
 37092  01432C  0E01               	movlw	1
 37093  01432E  50DB               	movf	plusw2,w,c
 37094  014330  E104               	bnz	i1u1151_20
 37095  014332  0E50               	movlw	80
 37096  014334  5CDE               	subwf	postinc2,w,c
 37097  014336  A0D8               	btfss	status,0,c
 37098  014338  D037               	goto	i1l9599
 37099  01433A                     i1u1151_20:
 37100  01433A  500F               	movf	IRrawToNEC@StartBit,w,c
 37101  01433C  0D02               	mullw	2
 37102  01433E  50F3               	movf	prodl,w,c
 37103  014340  2401               	addwf	IRrawToNEC@Raw,w,c
 37104  014342  6ED9               	movwf	fsr2l,c
 37105  014344  50F4               	movf	prodh,w,c
 37106  014346  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37107  014348  6EDA               	movwf	fsr2h,c
 37108  01434A  0E81               	movlw	129
 37109  01434C  5CDE               	subwf	postinc2,w,c
 37110  01434E  0E01               	movlw	1
 37111  014350  58DE               	subwfb	postinc2,w,c
 37112  014352  B0D8               	btfsc	status,0,c
 37113  014354  D029               	goto	i1l9599
 37114                           
 37115                           ;IR.c: 173: {
 37116                           ;IR.c: 174: if(Pause != 3)
 37117  014356  0E03               	movlw	3
 37118  014358  180C               	xorwf	IRrawToNEC@Pause,w,c
 37119  01435A  B4D8               	btfsc	status,2,c
 37120  01435C  D016               	goto	i1l9593
 37121                           
 37122                           ;IR.c: 175: {
 37123                           ;IR.c: 176: if(!first)
 37124  01435E  500D               	movf	IRrawToNEC@first,w,c
 37125  014360  A4D8               	btfss	status,2,c
 37126  014362  D002               	goto	i1l9585
 37127                           
 37128                           ;IR.c: 177: {
 37129                           ;IR.c: 179: first = 1;
 37130  014364  0E01               	movlw	1
 37131  014366  D04F               	goto	L33
 37132  014368                     i1l9585:
 37133                           
 37134                           ;IR.c: 181: else
 37135                           ;IR.c: 182: {
 37136                           ;IR.c: 183: first = 0;
 37137  014368  0E00               	movlw	0
 37138  01436A  6E0D               	movwf	IRrawToNEC@first,c
 37139                           
 37140                           ;IR.c: 184: NECtemp <<= 1;
 37141  01436C  90D8               	bcf	status,0,c
 37142  01436E  3608               	rlcf	IRrawToNEC@NECtemp,f,c
 37143  014370  3609               	rlcf	IRrawToNEC@NECtemp+1,f,c
 37144  014372  360A               	rlcf	IRrawToNEC@NECtemp+2,f,c
 37145  014374  360B               	rlcf	IRrawToNEC@NECtemp+3,f,c
 37146                           
 37147                           ;IR.c: 185: if(!Invert)
 37148  014376  5005               	movf	IRrawToNEC@Invert,w,c
 37149  014378  A4D8               	btfss	status,2,c
 37150  01437A  D0EB               	goto	i1l9667
 37151                           
 37152                           ;IR.c: 186: {
 37153                           ;IR.c: 187: NECtemp++;
 37154  01437C  0E01               	movlw	1
 37155  01437E  2608               	addwf	IRrawToNEC@NECtemp,f,c
 37156  014380  0E00               	movlw	0
 37157  014382  2209               	addwfc	IRrawToNEC@NECtemp+1,f,c
 37158  014384  220A               	addwfc	IRrawToNEC@NECtemp+2,f,c
 37159  014386  220B               	addwfc	IRrawToNEC@NECtemp+3,f,c
 37160                           
 37161                           ;IR.c: 188: }
 37162                           ;IR.c: 190: }
 37163                           ;IR.c: 191: }
 37164  014388  D0E4               	goto	i1l9667
 37165  01438A                     i1l9593:
 37166                           
 37167                           ;IR.c: 192: else
 37168                           ;IR.c: 193: {
 37169                           ;IR.c: 195: *NEC = NECtemp;
 37170  01438A  C003  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 37171  01438E  C004  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 37172  014392  C008  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 37173  014396  C009  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 37174  01439A  C00A  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 37175  01439E  C00B  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 37176  0143A2  D046               	goto	i1l9623
 37177                           
 37178                           ;IR.c: 196: return 1;
 37179  0143A4  0012               	return	
 37180                           
 37181                           ;IR.c: 197: }
 37182                           ;IR.c: 198: }
 37183  0143A6  D0D5               	goto	i1l9667
 37184  0143A8                     i1l9599:
 37185                           
 37186                           ;IR.c: 199: else if(Raw[StartBit] >= 448 && Raw[StartBit] <= 608)
 37187  0143A8  500F               	movf	IRrawToNEC@StartBit,w,c
 37188  0143AA  0D02               	mullw	2
 37189  0143AC  50F3               	movf	prodl,w,c
 37190  0143AE  2401               	addwf	IRrawToNEC@Raw,w,c
 37191  0143B0  6ED9               	movwf	fsr2l,c
 37192  0143B2  50F4               	movf	prodh,w,c
 37193  0143B4  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37194  0143B6  6EDA               	movwf	fsr2h,c
 37195  0143B8  0EC0               	movlw	192
 37196  0143BA  5CDE               	subwf	postinc2,w,c
 37197  0143BC  0E01               	movlw	1
 37198  0143BE  58DE               	subwfb	postinc2,w,c
 37199  0143C0  A0D8               	btfss	status,0,c
 37200  0143C2  D026               	goto	i1l9617
 37201  0143C4  500F               	movf	IRrawToNEC@StartBit,w,c
 37202  0143C6  0D02               	mullw	2
 37203  0143C8  50F3               	movf	prodl,w,c
 37204  0143CA  2401               	addwf	IRrawToNEC@Raw,w,c
 37205  0143CC  6ED9               	movwf	fsr2l,c
 37206  0143CE  50F4               	movf	prodh,w,c
 37207  0143D0  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37208  0143D2  6EDA               	movwf	fsr2h,c
 37209  0143D4  0E61               	movlw	97
 37210  0143D6  5CDE               	subwf	postinc2,w,c
 37211  0143D8  0E02               	movlw	2
 37212  0143DA  58DE               	subwfb	postinc2,w,c
 37213  0143DC  B0D8               	btfsc	status,0,c
 37214  0143DE  D018               	goto	i1l9617
 37215                           
 37216                           ;IR.c: 200: {
 37217                           ;IR.c: 201: if(first)
 37218  0143E0  500D               	movf	IRrawToNEC@first,w,c
 37219  0143E2  B4D8               	btfsc	status,2,c
 37220  0143E4  D012               	goto	i1l9613
 37221                           
 37222                           ;IR.c: 202: {
 37223                           ;IR.c: 204: NECtemp <<= 1;
 37224  0143E6  90D8               	bcf	status,0,c
 37225  0143E8  3608               	rlcf	IRrawToNEC@NECtemp,f,c
 37226  0143EA  3609               	rlcf	IRrawToNEC@NECtemp+1,f,c
 37227  0143EC  360A               	rlcf	IRrawToNEC@NECtemp+2,f,c
 37228  0143EE  360B               	rlcf	IRrawToNEC@NECtemp+3,f,c
 37229                           
 37230                           ;IR.c: 205: if(Invert)
 37231  0143F0  5005               	movf	IRrawToNEC@Invert,w,c
 37232  0143F2  B4D8               	btfsc	status,2,c
 37233  0143F4  D007               	goto	i1l9611
 37234                           
 37235                           ;IR.c: 206: {
 37236                           ;IR.c: 207: NECtemp++;
 37237  0143F6  0E01               	movlw	1
 37238  0143F8  2608               	addwf	IRrawToNEC@NECtemp,f,c
 37239  0143FA  0E00               	movlw	0
 37240  0143FC  2209               	addwfc	IRrawToNEC@NECtemp+1,f,c
 37241  0143FE  220A               	addwfc	IRrawToNEC@NECtemp+2,f,c
 37242  014400  220B               	addwfc	IRrawToNEC@NECtemp+3,f,c
 37243  014402  D000               	goto	i1l9611
 37244  014404                     i1l9611:
 37245                           
 37246                           ;IR.c: 208: }
 37247                           ;IR.c: 209: first = 0;
 37248  014404  0E00               	movlw	0
 37249  014406                     L33:
 37250  014406  6E0D               	movwf	IRrawToNEC@first,c
 37251                           
 37252                           ;IR.c: 210: }
 37253  014408  D0A4               	goto	i1l9667
 37254  01440A                     i1l9613:
 37255                           
 37256                           ;IR.c: 211: else
 37257                           ;IR.c: 212: {
 37258                           ;IR.c: 214: return 0;
 37259  01440A  0E00               	movlw	0
 37260  01440C  0012               	return	
 37261                           
 37262                           ;IR.c: 215: }
 37263                           ;IR.c: 216: }
 37264  01440E  D0A1               	goto	i1l9667
 37265  014410                     i1l9617:
 37266                           
 37267                           ;IR.c: 217: else if(Raw[StartBit] == 0 && first == 1)
 37268  014410  500F               	movf	IRrawToNEC@StartBit,w,c
 37269  014412  0D02               	mullw	2
 37270  014414  50F3               	movf	prodl,w,c
 37271  014416  2401               	addwf	IRrawToNEC@Raw,w,c
 37272  014418  6ED9               	movwf	fsr2l,c
 37273  01441A  50F4               	movf	prodh,w,c
 37274  01441C  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37275  01441E  6EDA               	movwf	fsr2h,c
 37276  014420  50DE               	movf	postinc2,w,c
 37277  014422  10DE               	iorwf	postinc2,w,c
 37278  014424  A4D8               	btfss	status,2,c
 37279  014426  D007               	goto	i1l9629
 37280  014428  040D               	decf	IRrawToNEC@first,w,c
 37281  01442A  A4D8               	btfss	status,2,c
 37282  01442C  D004               	goto	i1l9629
 37283  01442E  D7AD               	goto	i1l9593
 37284  014430                     i1l9623:
 37285                           
 37286                           ;IR.c: 224: return 1;
 37287  014430  0E01               	movlw	1
 37288  014432  0012               	return	
 37289                           
 37290                           ;IR.c: 225: }
 37291  014434  D08E               	goto	i1l9667
 37292  014436                     i1l9629:
 37293                           
 37294                           ;IR.c: 226: else if(Raw[StartBit] >= 12160 && Raw[StartBit] <= 13440)
 37295  014436  500F               	movf	IRrawToNEC@StartBit,w,c
 37296  014438  0D02               	mullw	2
 37297  01443A  50F3               	movf	prodl,w,c
 37298  01443C  2401               	addwf	IRrawToNEC@Raw,w,c
 37299  01443E  6ED9               	movwf	fsr2l,c
 37300  014440  50F4               	movf	prodh,w,c
 37301  014442  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37302  014444  6EDA               	movwf	fsr2h,c
 37303  014446  0E80               	movlw	128
 37304  014448  5CDE               	subwf	postinc2,w,c
 37305  01444A  0E2F               	movlw	47
 37306  01444C  58DE               	subwfb	postinc2,w,c
 37307  01444E  A0D8               	btfss	status,0,c
 37308  014450  D010               	goto	i1l9635
 37309  014452  500F               	movf	IRrawToNEC@StartBit,w,c
 37310  014454  0D02               	mullw	2
 37311  014456  50F3               	movf	prodl,w,c
 37312  014458  2401               	addwf	IRrawToNEC@Raw,w,c
 37313  01445A  6ED9               	movwf	fsr2l,c
 37314  01445C  50F4               	movf	prodh,w,c
 37315  01445E  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37316  014460  6EDA               	movwf	fsr2h,c
 37317  014462  0E81               	movlw	129
 37318  014464  5CDE               	subwf	postinc2,w,c
 37319  014466  0E34               	movlw	52
 37320  014468  58DE               	subwfb	postinc2,w,c
 37321  01446A  B0D8               	btfsc	status,0,c
 37322  01446C  D002               	goto	i1l9635
 37323                           
 37324                           ;IR.c: 227: {
 37325                           ;IR.c: 229: Pause = 1;
 37326  01446E  0E01               	movlw	1
 37327  014470  D041               	goto	L35
 37328  014472                     i1l9635:
 37329                           
 37330                           ;IR.c: 231: else if(Pause == 1 && Raw[StartBit] >= 2560 && Raw[StartBit] <= 3200)
 37331  014472  040C               	decf	IRrawToNEC@Pause,w,c
 37332  014474  A4D8               	btfss	status,2,c
 37333  014476  D01D               	goto	i1l9643
 37334  014478  500F               	movf	IRrawToNEC@StartBit,w,c
 37335  01447A  0D02               	mullw	2
 37336  01447C  50F3               	movf	prodl,w,c
 37337  01447E  2401               	addwf	IRrawToNEC@Raw,w,c
 37338  014480  6ED9               	movwf	fsr2l,c
 37339  014482  50F4               	movf	prodh,w,c
 37340  014484  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37341  014486  6EDA               	movwf	fsr2h,c
 37342  014488  52DE               	movf	postinc2,f,c
 37343  01448A  0E0A               	movlw	10
 37344  01448C  5CDE               	subwf	postinc2,w,c
 37345  01448E  A0D8               	btfss	status,0,c
 37346  014490  D010               	goto	i1l9643
 37347  014492  500F               	movf	IRrawToNEC@StartBit,w,c
 37348  014494  0D02               	mullw	2
 37349  014496  50F3               	movf	prodl,w,c
 37350  014498  2401               	addwf	IRrawToNEC@Raw,w,c
 37351  01449A  6ED9               	movwf	fsr2l,c
 37352  01449C  50F4               	movf	prodh,w,c
 37353  01449E  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37354  0144A0  6EDA               	movwf	fsr2h,c
 37355  0144A2  0E81               	movlw	129
 37356  0144A4  5CDE               	subwf	postinc2,w,c
 37357  0144A6  0E0C               	movlw	12
 37358  0144A8  58DE               	subwfb	postinc2,w,c
 37359  0144AA  B0D8               	btfsc	status,0,c
 37360  0144AC  D002               	goto	i1l9643
 37361                           
 37362                           ;IR.c: 232: {
 37363                           ;IR.c: 234: Pause = 2;
 37364  0144AE  0E02               	movlw	2
 37365  0144B0  D021               	goto	L35
 37366  0144B2                     i1l9643:
 37367                           
 37368                           ;IR.c: 236: else if(Pause == 2 && Raw[StartBit] >= 592 && Raw[StartBit] <= 800)
 37369  0144B2  0E02               	movlw	2
 37370  0144B4  180C               	xorwf	IRrawToNEC@Pause,w,c
 37371  0144B6  A4D8               	btfss	status,2,c
 37372  0144B8  D01F               	goto	i1l9651
 37373  0144BA  500F               	movf	IRrawToNEC@StartBit,w,c
 37374  0144BC  0D02               	mullw	2
 37375  0144BE  50F3               	movf	prodl,w,c
 37376  0144C0  2401               	addwf	IRrawToNEC@Raw,w,c
 37377  0144C2  6ED9               	movwf	fsr2l,c
 37378  0144C4  50F4               	movf	prodh,w,c
 37379  0144C6  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37380  0144C8  6EDA               	movwf	fsr2h,c
 37381  0144CA  0E50               	movlw	80
 37382  0144CC  5CDE               	subwf	postinc2,w,c
 37383  0144CE  0E02               	movlw	2
 37384  0144D0  58DE               	subwfb	postinc2,w,c
 37385  0144D2  A0D8               	btfss	status,0,c
 37386  0144D4  D011               	goto	i1l9651
 37387  0144D6  500F               	movf	IRrawToNEC@StartBit,w,c
 37388  0144D8  0D02               	mullw	2
 37389  0144DA  50F3               	movf	prodl,w,c
 37390  0144DC  2401               	addwf	IRrawToNEC@Raw,w,c
 37391  0144DE  6ED9               	movwf	fsr2l,c
 37392  0144E0  50F4               	movf	prodh,w,c
 37393  0144E2  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37394  0144E4  6EDA               	movwf	fsr2h,c
 37395  0144E6  0E21               	movlw	33
 37396  0144E8  5CDE               	subwf	postinc2,w,c
 37397  0144EA  0E03               	movlw	3
 37398  0144EC  58DE               	subwfb	postinc2,w,c
 37399  0144EE  B0D8               	btfsc	status,0,c
 37400  0144F0  D003               	goto	i1l9651
 37401                           
 37402                           ;IR.c: 237: {
 37403                           ;IR.c: 240: Pause = 3;
 37404  0144F2  0E03               	movlw	3
 37405  0144F4                     L35:
 37406  0144F4  6E0C               	movwf	IRrawToNEC@Pause,c
 37407                           
 37408                           ;IR.c: 241: }
 37409  0144F6  D02D               	goto	i1l9667
 37410  0144F8                     i1l9651:
 37411                           
 37412                           ;IR.c: 242: else if(Raw[StartBit] >= 28800L && Raw[StartBit] <= 32000L)
 37413  0144F8  500F               	movf	IRrawToNEC@StartBit,w,c
 37414  0144FA  0D02               	mullw	2
 37415  0144FC  50F3               	movf	prodl,w,c
 37416  0144FE  2401               	addwf	IRrawToNEC@Raw,w,c
 37417  014500  6ED9               	movwf	fsr2l,c
 37418  014502  50F4               	movf	prodh,w,c
 37419  014504  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37420  014506  6EDA               	movwf	fsr2h,c
 37421  014508  0E80               	movlw	128
 37422  01450A  5CDE               	subwf	postinc2,w,c
 37423  01450C  0E70               	movlw	112
 37424  01450E  58DE               	subwfb	postinc2,w,c
 37425  014510  A0D8               	btfss	status,0,c
 37426  014512  D01C               	goto	i1l9663
 37427  014514  500F               	movf	IRrawToNEC@StartBit,w,c
 37428  014516  0D02               	mullw	2
 37429  014518  50F3               	movf	prodl,w,c
 37430  01451A  2401               	addwf	IRrawToNEC@Raw,w,c
 37431  01451C  6ED9               	movwf	fsr2l,c
 37432  01451E  50F4               	movf	prodh,w,c
 37433  014520  2002               	addwfc	IRrawToNEC@Raw+1,w,c
 37434  014522  6EDA               	movwf	fsr2h,c
 37435  014524  04DE               	decf	postinc2,w,c
 37436  014526  0E7D               	movlw	125
 37437  014528  58DE               	subwfb	postinc2,w,c
 37438  01452A  B0D8               	btfsc	status,0,c
 37439  01452C  D00F               	goto	i1l9663
 37440                           
 37441                           ;IR.c: 243: {
 37442                           ;IR.c: 245: *NEC = NECtemp;
 37443  01452E  C003  FFD9         	movff	IRrawToNEC@NEC,fsr2l
 37444  014532  C004  FFDA         	movff	IRrawToNEC@NEC+1,fsr2h
 37445  014536  C008  FFDE         	movff	IRrawToNEC@NECtemp,postinc2
 37446  01453A  C009  FFDE         	movff	IRrawToNEC@NECtemp+1,postinc2
 37447  01453E  C00A  FFDE         	movff	IRrawToNEC@NECtemp+2,postinc2
 37448  014542  C00B  FFDE         	movff	IRrawToNEC@NECtemp+3,postinc2
 37449                           
 37450                           ;IR.c: 246: return 2;
 37451  014546  0E02               	movlw	2
 37452  014548  0012               	return	
 37453                           
 37454                           ;IR.c: 247: }
 37455  01454A  D003               	goto	i1l9667
 37456  01454C                     i1l9663:
 37457                           
 37458                           ;IR.c: 248: else
 37459                           ;IR.c: 249: {
 37460                           ;IR.c: 250: return 0;
 37461  01454C  0E00               	movlw	0
 37462  01454E  0012               	return	
 37463  014550  D000               	goto	i1l9667
 37464  014552                     i1l9667:
 37465                           
 37466                           ;IR.c: 251: }
 37467                           ;IR.c: 252: StartBit++;
 37468  014552  2A0F               	incf	IRrawToNEC@StartBit,f,c
 37469  014554  2A0E               	incf	IRrawToNEC@i,f,c
 37470  014556  D6DE               	goto	i1l9571
 37471  014558                     i1l9671:
 37472                           
 37473                           ;IR.c: 253: }
 37474                           ;IR.c: 255: return 0;
 37475  014558  0E00               	movlw	0
 37476  01455A  0012               	return	
 37477  01455C  0012               	return		;funcret
 37478  01455E                     __end_of_IRrawToNEC:
 37479                           	opt stack 0
 37480                           pclatu	equ	0xFFB
 37481                           pclath	equ	0xFFA
 37482                           tblptru	equ	0xFF8
 37483                           tblptrh	equ	0xFF7
 37484                           tblptrl	equ	0xFF6
 37485                           tablat	equ	0xFF5
 37486                           prodh	equ	0xFF4
 37487                           prodl	equ	0xFF3
 37488                           intcon	equ	0xFF2
 37489                           intcon2	equ	0xFF1
 37490                           indf0	equ	0xFEF
 37491                           postinc0	equ	0xFEE
 37492                           plusw0	equ	0xFEB
 37493                           fsr0h	equ	0xFEA
 37494                           fsr0l	equ	0xFE9
 37495                           wreg	equ	0xFE8
 37496                           indf1	equ	0xFE7
 37497                           postdec1	equ	0xFE5
 37498                           fsr1h	equ	0xFE2
 37499                           fsr1l	equ	0xFE1
 37500                           bsr	equ	0xFE0
 37501                           indf2	equ	0xFDF
 37502                           postinc2	equ	0xFDE
 37503                           postdec2	equ	0xFDD
 37504                           plusw2	equ	0xFDB
 37505                           fsr2h	equ	0xFDA
 37506                           fsr2l	equ	0xFD9
 37507                           status	equ	0xFD8
 37508                           
 37509 ;; *************** function _high_isr *****************
 37510 ;; Defined at:
 37511 ;;		line 62 in file "interrupts.c"
 37512 ;; Parameters:    Size  Location     Type
 37513 ;;		None
 37514 ;; Auto vars:     Size  Location     Type
 37515 ;;		None
 37516 ;; Return value:  Size  Location     Type
 37517 ;;		None               void
 37518 ;; Registers used:
 37519 ;;		None
 37520 ;; Tracked objects:
 37521 ;;		On entry : 0/0
 37522 ;;		On exit  : 0/0
 37523 ;;		Unchanged: 0/0
 37524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 37525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 37527 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 37528 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 37529 ;;Total ram usage:       14 bytes
 37530 ;; Hardware stack levels used:    1
 37531 ;; This function calls:
 37532 ;;		Nothing
 37533 ;; This function is called by:
 37534 ;;		Interrupt level 2
 37535 ;; This function uses a non-reentrant model
 37536 ;;
 37537                           
 37538                           	psect	intcode
 37539  000008                     __pintcode:
 37540                           	opt stack 0
 37541  000008                     _high_isr:
 37542                           	opt stack 19
 37543                           
 37544                           ;incstack = 0
 37545  000008  CFFA F16E          	movff	pclath,??_high_isr
 37546  00000C  CFFB F16F          	movff	pclatu,??_high_isr+1
 37547  000010  CFE9 F170          	movff	fsr0l,??_high_isr+2
 37548  000014  EFD8  F0BA         	goto	int_func
 37549                           pclatu	equ	0xFFB
 37550                           pclath	equ	0xFFA
 37551                           tblptru	equ	0xFF8
 37552                           tblptrh	equ	0xFF7
 37553                           tblptrl	equ	0xFF6
 37554                           tablat	equ	0xFF5
 37555                           prodh	equ	0xFF4
 37556                           prodl	equ	0xFF3
 37557                           intcon	equ	0xFF2
 37558                           intcon2	equ	0xFF1
 37559                           indf0	equ	0xFEF
 37560                           postinc0	equ	0xFEE
 37561                           plusw0	equ	0xFEB
 37562                           fsr0h	equ	0xFEA
 37563                           fsr0l	equ	0xFE9
 37564                           wreg	equ	0xFE8
 37565                           indf1	equ	0xFE7
 37566                           postdec1	equ	0xFE5
 37567                           fsr1h	equ	0xFE2
 37568                           fsr1l	equ	0xFE1
 37569                           bsr	equ	0xFE0
 37570                           indf2	equ	0xFDF
 37571                           postinc2	equ	0xFDE
 37572                           postdec2	equ	0xFDD
 37573                           plusw2	equ	0xFDB
 37574                           fsr2h	equ	0xFDA
 37575                           fsr2l	equ	0xFD9
 37576                           status	equ	0xFD8
 37577                           
 37578                           	psect	intcode_body
 37579  0175B0                     __pintcode_body:
 37580                           	opt stack 19
 37581  0175B0                     int_func:
 37582                           	opt stack 19
 37583  0175B0  CFEA F171          	movff	fsr0h,??_high_isr+3
 37584  0175B4  CFE1 F172          	movff	fsr1l,??_high_isr+4
 37585  0175B8  CFE2 F173          	movff	fsr1h,??_high_isr+5
 37586  0175BC  CFD9 F174          	movff	fsr2l,??_high_isr+6
 37587  0175C0  CFDA F175          	movff	fsr2h,??_high_isr+7
 37588  0175C4  CFF3 F176          	movff	prodl,??_high_isr+8
 37589  0175C8  CFF4 F177          	movff	prodh,??_high_isr+9
 37590  0175CC  CFF6 F178          	movff	tblptrl,??_high_isr+10
 37591  0175D0  CFF7 F179          	movff	tblptrh,??_high_isr+11
 37592  0175D4  CFF8 F17A          	movff	tblptru,??_high_isr+12
 37593  0175D8  CFF5 F17B          	movff	tablat,??_high_isr+13
 37594  0175DC  C17B  FFF5         	movff	??_high_isr+13,tablat
 37595  0175E0  C17A  FFF8         	movff	??_high_isr+12,tblptru
 37596  0175E4  C179  FFF7         	movff	??_high_isr+11,tblptrh
 37597  0175E8  C178  FFF6         	movff	??_high_isr+10,tblptrl
 37598  0175EC  C177  FFF4         	movff	??_high_isr+9,prodh
 37599  0175F0  C176  FFF3         	movff	??_high_isr+8,prodl
 37600  0175F4  C175  FFDA         	movff	??_high_isr+7,fsr2h
 37601  0175F8  C174  FFD9         	movff	??_high_isr+6,fsr2l
 37602  0175FC  C173  FFE2         	movff	??_high_isr+5,fsr1h
 37603  017600  C172  FFE1         	movff	??_high_isr+4,fsr1l
 37604  017604  C171  FFEA         	movff	??_high_isr+3,fsr0h
 37605  017608  C170  FFE9         	movff	??_high_isr+2,fsr0l
 37606  01760C  C16F  FFFB         	movff	??_high_isr+1,pclatu
 37607  017610  C16E  FFFA         	movff	??_high_isr,pclath
 37608  017614  0011               	retfie		f
 37609  017616                     __end_of_high_isr:
 37610                           	opt stack 0
 37611                           pclatu	equ	0xFFB
 37612                           pclath	equ	0xFFA
 37613                           tblptru	equ	0xFF8
 37614                           tblptrh	equ	0xFF7
 37615                           tblptrl	equ	0xFF6
 37616                           tablat	equ	0xFF5
 37617                           prodh	equ	0xFF4
 37618                           prodl	equ	0xFF3
 37619                           intcon	equ	0xFF2
 37620                           intcon2	equ	0xFF1
 37621                           indf0	equ	0xFEF
 37622                           postinc0	equ	0xFEE
 37623                           plusw0	equ	0xFEB
 37624                           fsr0h	equ	0xFEA
 37625                           fsr0l	equ	0xFE9
 37626                           wreg	equ	0xFE8
 37627                           indf1	equ	0xFE7
 37628                           postdec1	equ	0xFE5
 37629                           fsr1h	equ	0xFE2
 37630                           fsr1l	equ	0xFE1
 37631                           bsr	equ	0xFE0
 37632                           indf2	equ	0xFDF
 37633                           postinc2	equ	0xFDE
 37634                           postdec2	equ	0xFDD
 37635                           plusw2	equ	0xFDB
 37636                           fsr2h	equ	0xFDA
 37637                           fsr2l	equ	0xFD9
 37638                           status	equ	0xFD8
 37639                           pclatu	equ	0xFFB
 37640                           pclath	equ	0xFFA
 37641                           tblptru	equ	0xFF8
 37642                           tblptrh	equ	0xFF7
 37643                           tblptrl	equ	0xFF6
 37644                           tablat	equ	0xFF5
 37645                           prodh	equ	0xFF4
 37646                           prodl	equ	0xFF3
 37647                           intcon	equ	0xFF2
 37648                           intcon2	equ	0xFF1
 37649                           indf0	equ	0xFEF
 37650                           postinc0	equ	0xFEE
 37651                           plusw0	equ	0xFEB
 37652                           fsr0h	equ	0xFEA
 37653                           fsr0l	equ	0xFE9
 37654                           wreg	equ	0xFE8
 37655                           indf1	equ	0xFE7
 37656                           postdec1	equ	0xFE5
 37657                           fsr1h	equ	0xFE2
 37658                           fsr1l	equ	0xFE1
 37659                           bsr	equ	0xFE0
 37660                           indf2	equ	0xFDF
 37661                           postinc2	equ	0xFDE
 37662                           postdec2	equ	0xFDD
 37663                           plusw2	equ	0xFDB
 37664                           fsr2h	equ	0xFDA
 37665                           fsr2l	equ	0xFD9
 37666                           status	equ	0xFD8
 37667                           
 37668                           	psect	param1
 37669  0000                     pclatu	equ	0xFFB
 37670                           pclath	equ	0xFFA
 37671                           tblptru	equ	0xFF8
 37672                           tblptrh	equ	0xFF7
 37673                           tblptrl	equ	0xFF6
 37674                           tablat	equ	0xFF5
 37675                           prodh	equ	0xFF4
 37676                           prodl	equ	0xFF3
 37677                           intcon	equ	0xFF2
 37678                           intcon2	equ	0xFF1
 37679                           indf0	equ	0xFEF
 37680                           postinc0	equ	0xFEE
 37681                           plusw0	equ	0xFEB
 37682                           fsr0h	equ	0xFEA
 37683                           fsr0l	equ	0xFE9
 37684                           wreg	equ	0xFE8
 37685                           indf1	equ	0xFE7
 37686                           postdec1	equ	0xFE5
 37687                           fsr1h	equ	0xFE2
 37688                           fsr1l	equ	0xFE1
 37689                           bsr	equ	0xFE0
 37690                           indf2	equ	0xFDF
 37691                           postinc2	equ	0xFDE
 37692                           postdec2	equ	0xFDD
 37693                           plusw2	equ	0xFDB
 37694                           fsr2h	equ	0xFDA
 37695                           fsr2l	equ	0xFD9
 37696                           status	equ	0xFD8


Data Sizes:
    Strings     4469
    Constant    412
    Data        30
    BSS         634
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      76
    BANK0           160    121     148
    BANK1           256    101     221
    BANK2           256    103     119
    BANK3           256      0     220
    BANK4           256      0     244
    BANK5           256    226     226
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    sprintf$2841	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_325(CODE[17]), STR_324(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_323(CODE[32]), STR_322(CODE[35]), STR_321(CODE[35]), STR_300(CODE[10]), 
		 -> STR_287(CODE[23]), STR_286(CODE[23]), STR_227(CODE[23]), STR_226(CODE[23]), 
		 -> STR_222(CODE[16]), STR_221(CODE[36]), STR_209(CODE[13]), STR_208(CODE[20]), 
		 -> STR_207(CODE[17]), STR_206(CODE[29]), STR_190(CODE[15]), STR_189(CODE[32]), 
		 -> STR_171(CODE[15]), STR_170(CODE[22]), STR_30(CODE[19]), STR_27(CODE[52]), 
		 -> STR_26(CODE[48]), STR_25(CODE[47]), STR_24(CODE[54]), STR_23(CODE[53]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK5[200]), SetBaud@buf(BANK2[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UseIRCode@Code	PTR unsigned char  size(2) Largest target is 1
		 -> IR_New_Code(BANK0[1]), 

    IRrawToNEC@NEC	PTR unsigned long  size(2) Largest target is 4
		 -> IR_NEC(BANK0[4]), 

    IRrawToNEC@Raw	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK4[144]), 

    Multiple_I2C_Read@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    I2C_Read_Sequential@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    Parse_Time@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    SprintDate@ReturnBuf	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK5[200]), 

    LCD_Scroll@This	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_298(CODE[6]), STR_297(CODE[5]), STR_296(CODE[5]), STR_295(CODE[10]), 
		 -> STR_294(CODE[16]), STR_293(CODE[11]), STR_292(CODE[12]), STR_291(CODE[9]), 
		 -> STR_290(CODE[14]), STR_270(CODE[6]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_252(CODE[4]), STR_251(CODE[5]), STR_250(CODE[8]), STR_249(CODE[10]), 
		 -> STR_248(CODE[9]), STR_217(CODE[2]), STR_216(CODE[10]), STR_215(CODE[9]), 
		 -> STR_196(CODE[10]), STR_195(CODE[10]), STR_194(CODE[13]), STR_179(CODE[10]), 
		 -> STR_178(CODE[10]), STR_177(CODE[17]), STR_157(CODE[6]), STR_156(CODE[6]), 
		 -> STR_155(CODE[9]), STR_154(CODE[10]), STR_129(CODE[7]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[9]), STR_125(CODE[13]), STR_94(CODE[4]), 
		 -> STR_93(CODE[6]), STR_92(CODE[9]), STR_91(CODE[14]), STR_69(CODE[5]), 
		 -> STR_68(CODE[5]), STR_67(CODE[9]), STR_66(CODE[9]), 

    LCDdisplayFeedback@Text	PTR const unsigned char  size(2) Largest target is 200
		 -> STR_318(CODE[16]), STR_316(CODE[16]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_205(CODE[16]), STR_203(CODE[16]), STR_201(CODE[13]), 
		 -> STR_188(CODE[14]), STR_186(CODE[16]), STR_184(CODE[15]), STR_173(CODE[16]), 
		 -> Command@buf(BANK5[200]), STR_169(CODE[14]), STR_167(CODE[16]), STR_165(CODE[15]), 
		 -> STR_147(CODE[13]), STR_145(CODE[15]), STR_141(CODE[14]), STR_137(CODE[16]), 
		 -> STR_124(CODE[16]), STR_116(CODE[16]), STR_114(CODE[16]), STR_111(CODE[15]), 
		 -> STR_108(CODE[15]), STR_105(CODE[14]), STR_102(CODE[16]), STR_90(CODE[16]), 
		 -> STR_83(CODE[16]), STR_81(CODE[15]), STR_78(CODE[14]), STR_75(CODE[16]), 
		 -> STR_59(CODE[12]), STR_57(CODE[9]), STR_54(CODE[8]), STR_51(CODE[13]), 
		 -> STR_48(CODE[9]), STR_45(CODE[8]), STR_42(CODE[13]), 

    LCDPrintString@Text	PTR const unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK2[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_318(CODE[16]), STR_316(CODE[16]), 
		 -> STR_289(CODE[17]), STR_284(CODE[10]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_229(CODE[17]), STR_225(CODE[17]), STR_205(CODE[16]), 
		 -> STR_203(CODE[16]), STR_201(CODE[13]), STR_188(CODE[14]), STR_186(CODE[16]), 
		 -> STR_184(CODE[15]), STR_173(CODE[16]), Command@buf(BANK5[200]), STR_169(CODE[14]), 
		 -> STR_167(CODE[16]), STR_165(CODE[15]), STR_147(CODE[13]), STR_145(CODE[15]), 
		 -> STR_141(CODE[14]), STR_137(CODE[16]), STR_124(CODE[16]), STR_116(CODE[16]), 
		 -> STR_114(CODE[16]), STR_111(CODE[15]), STR_108(CODE[15]), STR_105(CODE[14]), 
		 -> STR_102(CODE[16]), STR_90(CODE[16]), STR_83(CODE[16]), STR_81(CODE[15]), 
		 -> STR_78(CODE[14]), STR_75(CODE[16]), STR_59(CODE[12]), STR_57(CODE[9]), 
		 -> STR_54(CODE[8]), STR_51(CODE[13]), STR_48(CODE[9]), STR_45(CODE[8]), 
		 -> STR_42(CODE[13]), STR_20(CODE[10]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[12]), 
		 -> STR_13(CODE[11]), STR_12(CODE[10]), STR_10(CODE[9]), STR_9(CODE[14]), 
		 -> low_isr@LCD_TEMP(BANK0[16]), 

    LCDPrintString@c	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK2[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_318(CODE[16]), STR_316(CODE[16]), 
		 -> STR_289(CODE[17]), STR_284(CODE[10]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_229(CODE[17]), STR_225(CODE[17]), STR_205(CODE[16]), 
		 -> STR_203(CODE[16]), STR_201(CODE[13]), STR_188(CODE[14]), STR_186(CODE[16]), 
		 -> STR_184(CODE[15]), STR_173(CODE[16]), Command@buf(BANK5[200]), STR_169(CODE[14]), 
		 -> STR_167(CODE[16]), STR_165(CODE[15]), STR_147(CODE[13]), STR_145(CODE[15]), 
		 -> STR_141(CODE[14]), STR_137(CODE[16]), STR_124(CODE[16]), STR_116(CODE[16]), 
		 -> STR_114(CODE[16]), STR_111(CODE[15]), STR_108(CODE[15]), STR_105(CODE[14]), 
		 -> STR_102(CODE[16]), STR_90(CODE[16]), STR_83(CODE[16]), STR_81(CODE[15]), 
		 -> STR_78(CODE[14]), STR_75(CODE[16]), STR_59(CODE[12]), STR_57(CODE[9]), 
		 -> STR_54(CODE[8]), STR_51(CODE[13]), STR_48(CODE[9]), STR_45(CODE[8]), 
		 -> STR_42(CODE[13]), STR_20(CODE[10]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[12]), 
		 -> STR_13(CODE[11]), STR_12(CODE[10]), STR_10(CODE[9]), STR_9(CODE[14]), 
		 -> low_isr@LCD_TEMP(BANK0[16]), 

    Send_Config2@data	PTR const unsigned char  size(2) Largest target is 16
		 -> SubLightOFF(CODE[16]), SubLightON(CODE[16]), Aux2OFF(CODE[16]), Aux2ON(CODE[16]), 
		 -> BedOFF(CODE[16]), BedON(CODE[16]), AuxOFF(CODE[16]), AuxON(CODE[16]), 
		 -> fanOFF(CODE[16]), fanON(CODE[16]), 

    Send_Config1@data	PTR const unsigned char  size(2) Largest target is 12
		 -> TXdataF(CODE[12]), TXdataE(CODE[12]), TXdataD(CODE[12]), 

    Command@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    UARTstringWAIT@data	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_34(CODE[18]), STR_33(CODE[17]), STR_32(CODE[24]), STR_31(CODE[23]), 

    UARTstring@data	PTR const unsigned char  size(2) Largest target is 200
		 -> STR_320(CODE[26]), STR_319(CODE[3]), STR_317(CODE[18]), STR_315(CODE[18]), 
		 -> STR_311(CODE[20]), STR_288(CODE[24]), STR_285(CODE[3]), STR_283(CODE[15]), 
		 -> STR_282(CODE[22]), STR_281(CODE[50]), STR_280(CODE[8]), STR_279(CODE[6]), 
		 -> STR_278(CODE[6]), STR_277(CODE[11]), STR_276(CODE[17]), STR_275(CODE[12]), 
		 -> STR_274(CODE[13]), STR_273(CODE[10]), STR_272(CODE[12]), STR_267(CODE[28]), 
		 -> STR_266(CODE[68]), STR_265(CODE[9]), STR_264(CODE[11]), STR_263(CODE[23]), 
		 -> STR_261(CODE[19]), STR_259(CODE[20]), STR_256(CODE[20]), STR_247(CODE[21]), 
		 -> STR_246(CODE[61]), STR_245(CODE[69]), STR_244(CODE[7]), STR_243(CODE[7]), 
		 -> STR_242(CODE[10]), STR_241(CODE[11]), STR_240(CODE[29]), STR_239(CODE[13]), 
		 -> STR_238(CODE[33]), STR_237(CODE[25]), STR_236(CODE[28]), STR_235(CODE[3]), 
		 -> STR_234(CODE[26]), STR_233(CODE[2]), STR_232(CODE[34]), STR_231(CODE[37]), 
		 -> STR_228(CODE[24]), STR_224(CODE[3]), STR_214(CODE[13]), STR_213(CODE[73]), 
		 -> STR_212(CODE[5]), STR_211(CODE[12]), STR_210(CODE[17]), STR_204(CODE[28]), 
		 -> STR_202(CODE[30]), STR_200(CODE[33]), STR_193(CODE[42]), STR_192(CODE[62]), 
		 -> STR_191(CODE[26]), STR_187(CODE[43]), STR_185(CODE[48]), STR_183(CODE[27]), 
		 -> STR_176(CODE[42]), STR_175(CODE[66]), STR_174(CODE[25]), STR_172(CODE[49]), 
		 -> Command@buf(BANK5[200]), STR_168(CODE[33]), STR_166(CODE[38]), STR_164(CODE[27]), 
		 -> STR_163(CODE[28]), STR_153(CODE[37]), STR_152(CODE[68]), STR_151(CODE[18]), 
		 -> STR_150(CODE[15]), STR_149(CODE[11]), STR_148(CODE[28]), STR_146(CODE[18]), 
		 -> STR_144(CODE[32]), STR_140(CODE[31]), STR_136(CODE[38]), STR_123(CODE[24]), 
		 -> STR_122(CODE[68]), STR_121(CODE[10]), STR_120(CODE[6]), STR_119(CODE[8]), 
		 -> STR_118(CODE[11]), STR_117(CODE[21]), STR_115(CODE[16]), STR_113(CODE[19]), 
		 -> STR_110(CODE[18]), STR_107(CODE[16]), STR_104(CODE[15]), STR_101(CODE[22]), 
		 -> STR_89(CODE[27]), STR_88(CODE[68]), STR_87(CODE[7]), STR_86(CODE[8]), 
		 -> STR_85(CODE[11]), STR_84(CODE[24]), STR_82(CODE[19]), STR_80(CODE[19]), 
		 -> STR_77(CODE[18]), STR_74(CODE[25]), STR_65(CODE[17]), STR_64(CODE[68]), 
		 -> STR_63(CODE[8]), STR_62(CODE[7]), STR_61(CODE[11]), STR_60(CODE[17]), 
		 -> STR_58(CODE[12]), STR_56(CODE[9]), STR_53(CODE[8]), STR_50(CODE[13]), 
		 -> STR_47(CODE[9]), STR_44(CODE[8]), STR_41(CODE[13]), STR_36(CODE[4]), 
		 -> STR_35(CODE[22]), STR_29(CODE[22]), STR_28(CODE[3]), SetBaud@buf(BANK2[50]), 
		 -> STR_22(CODE[4]), STR_21(CODE[29]), STR_11(CODE[12]), STR_8(CODE[54]), 
		 -> STR_7(CODE[3]), Version(BANK3[20]), STR_6(CODE[19]), STR_5(CODE[38]), 
		 -> low_isr@TEMP_Rxdata(BANK0[100]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    lowercase@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@address	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    GetEnteredNumber@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StartsWith@That	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_253(CODE[4]), STR_218(CODE[4]), STR_197(CODE[4]), STR_180(CODE[9]), 
		 -> STR_161(CODE[17]), STR_160(CODE[7]), STR_158(CODE[4]), STR_95(CODE[8]), 
		 -> STR_70(CODE[11]), STR_38(CODE[4]), 

    StartsWith@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_314(CODE[2]), STR_313(CODE[14]), STR_312(CODE[7]), STR_310(CODE[13]), 
		 -> STR_309(CODE[12]), STR_308(CODE[18]), STR_307(CODE[17]), STR_306(CODE[16]), 
		 -> STR_305(CODE[2]), STR_304(CODE[11]), STR_303(CODE[8]), STR_302(CODE[8]), 
		 -> STR_301(CODE[16]), STR_254(CODE[2]), STR_230(CODE[4]), STR_223(CODE[5]), 
		 -> STR_220(CODE[8]), STR_219(CODE[2]), STR_199(CODE[2]), STR_198(CODE[2]), 
		 -> STR_182(CODE[2]), STR_181(CODE[2]), STR_162(CODE[2]), STR_159(CODE[2]), 
		 -> STR_143(CODE[5]), STR_142(CODE[6]), STR_139(CODE[4]), STR_138(CODE[6]), 
		 -> STR_135(CODE[2]), STR_134(CODE[6]), STR_133(CODE[2]), STR_132(CODE[10]), 
		 -> STR_131(CODE[6]), STR_130(CODE[6]), STR_98(CODE[4]), STR_97(CODE[6]), 
		 -> STR_96(CODE[2]), STR_71(CODE[2]), STR_39(CODE[2]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_299(CODE[6]), STR_271(CODE[2]), STR_258(CODE[18]), STR_255(CODE[17]), 
		 -> STR_112(CODE[18]), STR_109(CODE[17]), STR_106(CODE[15]), STR_103(CODE[14]), 
		 -> STR_100(CODE[17]), STR_99(CODE[16]), STR_79(CODE[18]), STR_76(CODE[17]), 
		 -> STR_73(CODE[20]), STR_72(CODE[19]), STR_55(CODE[9]), STR_52(CODE[8]), 
		 -> STR_49(CODE[5]), STR_46(CODE[9]), STR_43(CODE[8]), STR_40(CODE[5]), 
		 -> STR_37(CODE[2]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 100
		 -> STR_298(CODE[6]), STR_297(CODE[5]), STR_296(CODE[5]), STR_295(CODE[10]), 
		 -> STR_294(CODE[16]), STR_293(CODE[11]), STR_292(CODE[12]), STR_291(CODE[9]), 
		 -> STR_290(CODE[14]), STR_270(CODE[6]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_252(CODE[4]), STR_251(CODE[5]), STR_250(CODE[8]), STR_249(CODE[10]), 
		 -> STR_248(CODE[9]), STR_217(CODE[2]), STR_216(CODE[10]), STR_215(CODE[9]), 
		 -> STR_196(CODE[10]), STR_195(CODE[10]), STR_194(CODE[13]), STR_179(CODE[10]), 
		 -> STR_178(CODE[10]), STR_177(CODE[17]), STR_157(CODE[6]), STR_156(CODE[6]), 
		 -> STR_155(CODE[9]), STR_154(CODE[10]), STR_129(CODE[7]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[9]), STR_125(CODE[13]), STR_94(CODE[4]), 
		 -> STR_93(CODE[6]), STR_92(CODE[9]), STR_91(CODE[14]), STR_69(CODE[5]), 
		 -> STR_68(CODE[5]), STR_67(CODE[9]), STR_66(CODE[9]), StringAddEqual@temp(BANK2[100]), 
		 -> RemoveSpaces@That(BANK2[100]), low_isr@TEMP_Rxdata(BANK0[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK2[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), Rxdata(BANK3[100]), 

    cleanBuffer16bit@data	PTR unsigned int  size(2) Largest target is 144
		 -> IRRawCode(BANK4[144]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK2[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), StringAddEqual@temp(BANK2[100]), RemoveSpaces@That(BANK2[100]), 
		 -> Rxdata(BANK3[100]), low_isr@TEMP_Rxdata(BANK0[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->_UseIRCode
    _low_isr->i1_LCDPrintString
    i1_UARTstring->i1_UARTchar
    i1_UARTchar->i1_CheckSum_byte
    i1_SetLCDcursor->i1_SendLCDbyte
    i1_LCDPrintString->i1_SendLCDbyte
    i1_LCDPrintChar->i1_SendLCDbyte
    i1_ClearLCD->i1_SendLCDbyte
    i1_SendLCDbyte->i1_delayUS
    i1_PulseEnablePin->i1_delayUS
    i1_BufferCopy->i1_cleanBuffer
    _UseIRCode->i1_delayUS

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Command
    _init_LCD->_SendLCDbyte
    _init_IR->_cleanBuffer16bit
    _RTC_INIT->_InternalADC_Read
    _I2C_Read_At_Address->_WriteI2C
    _PWM_init->_SetDuty
    _SetFreq->___aldiv
    ___aldiv->___wmul
    _LCDScreenUpdate->_LCDPrintString
    _LCDPrintChar->_SendLCDbyte
    _InitApp->_delayUS
    _ContrastPWM_init->_SetDuty
    _Command->_SprintDate
    ___lwtoft->___ftpack
    _StringAddEqual->_BufferCopy
    _SprintDate->_sprintf
    _SetDuty->___fttol
    _SetContrast->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lbtoft
    _SetBaud->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _UARTstringWAIT->_UARTchar
    _SetMemoryParity->_GetMemoryParity
    _SetMemoryParity->_WriteEEPROM_1Byte
    _GetMemoryParity->_ReadEEPROM_1Byte
    _SetMemoryBaud->_GetMemoryBaud
    _GetMemoryBaud->_ReadEEPROM_1Byte
    _InitUART->___lldiv
    _Send_Config2->_One_Config2
    _Send_Config2->_Zero_Config2
    _Zero_Config2->_delayUS
    _One_Config2->_delayUS
    _Send_Config1->_One_Config1
    _Send_Config1->_Zero_Config1
    _Send_Config1->_f_Config1
    _f_Config1->_delayUS
    _Zero_Config1->_delayUS
    _One_Config1->_delayUS
    _SET_RTC_TIME->___awdiv
    _I2C_Write_At_Address->_WriteI2C
    _RemoveSpaces->_BufferCopy
    _ResetI2C->_delayUS
    _Init_I2C_Master->_OpenI2C
    _I2C_Read_Sequential->_Multiple_I2C_Read
    _WriteI2C->_IdleI2C
    _LCDdisplayFeedback->_LCDPrintString
    _SetLCDcursor->_SendLCDbyte
    _LCDPrintString->_SendLCDbyte
    _ClearLCD->_SendLCDbyte
    _SendLCDbyte->_delayUS
    _PulseEnablePin->_delayUS
    _LCD_Scroll->_BufferCopy
    _BufferCopy->_cleanBuffer
    _InternalADC_Read->_UARTstring
    _UARTstring->_UARTchar
    _UARTchar->_CheckSum_byte
    _GetEnteredNumber->___lmul

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _Command->_RemoveSpaces
    _Command->_StringAddEqual

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_Command

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  528990
                                             94 BANK1      7     7      0
                           _ClearLCD
                            _Command
                _ConfigureOscillator
                   _ContrastPWM_init
                  _EnableInternalADC
                      _GetMemoryBaud
                    _GetMemoryParity
                            _InitApp
                           _InitUART
                    _Init_I2C_Master
                       _LCDPrintChar
                     _LCDPrintString
                    _LCDScreenUpdate
                           _PWM_init
                           _RTC_INIT
                          _ReadUSART
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                      _SetMemoryBaud
                    _SetMemoryParity
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                            _init_IR
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             0     0      0   29438
                           _ClearLCD
                     _PulseEnablePin
                        _SendLCDbyte
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _init_IR                                              0     0      0     295
                          _ReadIRpin
                       _Start_Timer0
                   _cleanBuffer16bit
                        _init_Timer0
 ---------------------------------------------------------------------------------
 (2) _init_Timer0                                          0     0      0       0
                        _Stop_Timer0
 ---------------------------------------------------------------------------------
 (3) _Stop_Timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cleanBuffer16bit                                     8     4      4     295
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _Start_Timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadIRpin                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_INIT                                             0     0      0   25880
                   _InternalADC_Read
                   _RTC_Clock_Enable
               _RTC_TIME_NONMilitary
 ---------------------------------------------------------------------------------
 (2) _RTC_TIME_NONMilitary                                 5     5      0    7011
                                             24 BANK1      5     5      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (2) _RTC_Clock_Enable                                     3     3      0    6943
                                             24 BANK1      3     3      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_At_Address                                  3     1      2     432
                                             16 BANK1      3     1      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0   11941
                            _SetDuty
                            _SetFreq
 ---------------------------------------------------------------------------------
 (2) _SetFreq                                              3     1      2    1267
                                             34 BANK1      3     1      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     428
                                             20 BANK1     14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDScreenUpdate                                      0     0      0   54489
                           _ClearLCD
                       _LCDPrintChar
                     _LCDPrintString
                       _SetLCDcursor
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _LCDPrintChar                                         1     1      0   10218
                                             28 BANK1      1     1      0
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0    4532
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _EnableInternalADC                                    2     2      0     254
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ContrastPWM_init                                     0     0      0   10674
                            _SetDuty
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Command                                            228   226      2  296480
                                             92 BANK1      2     0      2
                                              0 BANK5    226   226      0
                            _GetBaud
                   _GetEnteredNumber
                           _ISNUMBER
                   _InternalADC_Read
                     _LCDPrintString
                         _LCD_Scroll
                 _LCDdisplayFeedback
                         _Parse_Time
                      _READ_RTC_TIME
                       _RemoveSpaces
                       _SET_RTC_TIME
                       _Send_Config1
                       _Send_Config2
                            _SetBaud
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                         _SprintDate
                         _StartsWith
                     _StringAddEqual
                     _StringContains
                        _StringMatch
                         _UARTstring
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwmod
                           ___lwtoft
                        _cleanBuffer
                            _delayUS
                          _lowercase
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercase                                            4     2      2     439
                                             14 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2649
                                             22 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          5     1      4    3395
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       5     1      4    6170
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     107   105      2   11060
                                             29 BANK1      4     2      2
                                              0 BANK2    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _StartsWith                                           5     1      4    1732
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _SprintDate                                          12     0     12   11386
                                             80 BANK1     12     0     12
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetDuty                                              8     8      0   10674
                                             71 BANK1      8     8      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) _SetContrast                                          8     8      0   10742
                                             71 BANK1      8     8      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2495
                                             22 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     679
                                             56 BANK1     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3682
                                             41 BANK1     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3614
                                             26 BANK1     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2464
                                             14 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _SetBaud                                             56    51      5   38869
                                             80 BANK1      5     0      5
                                              0 BANK2     51    51      0
                           _InitUART
                      _SetMemoryBaud
                    _SetMemoryParity
                         _UARTstring
                     _UARTstringWAIT
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             48    32     16    9932
                                             36 BANK1     44    28     16
                            _GetBaud (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     694
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     386
                                             27 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UARTstringWAIT                                       2     0      2    6057
                                             25 BANK1      2     0      2
                           _UARTchar
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _SetMemoryParity                                      2     2      0    1508
                                             18 BANK1      2     2      0
                    _GetMemoryParity
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (2) _GetMemoryParity                                      1     1      0     515
                                             17 BANK1      1     1      0
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (1) _SetMemoryBaud                                       16    12      4    2030
                                             49 BANK1     16    12      4
                      _GetMemoryBaud
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (2) _WriteEEPROM_1Byte                                    4     1      3     897
                                             14 BANK1      4     1      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (3) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetMemoryBaud                                       32    28      4     654
                                             17 BANK1     32    28      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (3) _ReadEEPROM_1Byte                                     3     1      2     481
                                             14 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (1) _InitUART                                            17    12      5    1944
                                             27 BANK1     17    12      5
                    _GetMemoryParity (ARG)
                          _OpenUSART
                          _ReadUSART
                            ___lldiv
                          _baudUSART
 ---------------------------------------------------------------------------------
 (2) _baudUSART                                            1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     857
                                             14 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (1) _ReadUSART                                            1     1      0      34
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     387
                                             14 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Send_Config2                                         6     4      2   20260
                                             25 BANK1      6     4      2
                        _One_Config2
                       _Zero_Config2
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config2                                         1     1      0    4594
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config2                                          1     1      0    4594
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _Send_Config1                                         6     4      2   20467
                                             25 BANK1      6     4      2
                        _One_Config1
                       _Zero_Config1
                            _delayUS
                          _f_Config1
 ---------------------------------------------------------------------------------
 (3) _f_Config1                                            1     1      0    4656
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config1                                         1     1      0    4656
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config1                                          1     1      0    4656
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SET_RTC_TIME                                        21    12      9    5638
                                             22 BANK1     21    12      9
               _I2C_Write_At_Address
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1357
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1369
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_At_Address                                 5     3      2    1664
                                             16 BANK1      5     3      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _RemoveSpaces                                       106   104      2   10151
                                             29 BANK1      3     1      2
                                              0 BANK2    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _READ_RTC_TIME                                        8     8      0    6015
                                             24 BANK1      8     8      0
                _I2C_Read_Sequential
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _ResetI2C                                             0     0      0    4773
                    _Init_I2C_Master
                            _delayUS
 ---------------------------------------------------------------------------------
 (4) _Init_I2C_Master                                      2     2      0     241
                                             16 BANK1      2     2      0
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (5) _OpenI2C                                              2     1      1     139
                                             14 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Sequential                                  5     1      4     667
                                             17 BANK1      5     1      4
                            _IdleI2C
                  _Multiple_I2C_Read
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             1     1      0      31
                                             15 BANK1      1     1      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Multiple_I2C_Read                                    3     0      3     250
                                             14 BANK1      3     0      3
                            _readI2C
 ---------------------------------------------------------------------------------
 (5) _readI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Parse_Time                                          13    11      2    2693
                                             14 BANK1     13    11      2
 ---------------------------------------------------------------------------------
 (2) _LCDdisplayFeedback                                   2     0      2   40463
                                             32 BANK1      2     0      2
                           _ClearLCD
                     _LCDPrintString
                       _SetLCDcursor
 ---------------------------------------------------------------------------------
 (1) _SetLCDcursor                                         3     2      1   13572
                                             28 BANK1      3     2      1
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _LCDPrintString                                       4     2      2   13285
                                             28 BANK1      4     2      2
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _ClearLCD                                             0     0      0   10187
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _SendLCDbyte                                          4     3      1   10187
                                             24 BANK1      4     3      1
                     _PulseEnablePin
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _PulseEnablePin                                       0     0      0    4532
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _delayUS                                             10     6      4    4532
                                             14 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Scroll                                           2     0      2   10679
                                             29 BANK1      2     0      2
                         _BufferCopy
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    7058
                                             22 BANK1      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    2695
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     5     3      2   11926
                                             29 BANK1      5     3      2
                         _UARTstring
 ---------------------------------------------------------------------------------
 (1) _UARTstring                                           4     2      2   11864
                                             25 BANK1      4     2      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (2) _UARTchar                                             4     2      2    1124
                                             21 BANK1      4     2      2
                      _CheckSum_byte
 ---------------------------------------------------------------------------------
 (3) _CheckSum_byte                                        7     4      3     546
                                             14 BANK1      7     4      3
 ---------------------------------------------------------------------------------
 (2) _ISNUMBER                                             1     1      0      62
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetEnteredNumber                                    15    11      4    1293
                                             26 BANK1     15    11      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             14 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _GetBaud                                              4     0      4       0
                                             14 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                            142   142      0   12408
                                             18 COMRAM    21    21      0
                                              0 BANK0    121   121      0
                         _IRrawToNEC
                   _IsPrintableASCII
                       _Reset_Timer0
                          _UseIRCode
                       i1_BufferCopy
                         i1_ClearLCD
                     i1_LCDPrintChar
                   i1_LCDPrintString
                        i1_ReadIRpin
                        i1_ReadUSART
                     i1_SetLCDcursor
                         i1_UARTchar
                       i1_UARTstring
                      i1_cleanBuffer
                 i1_cleanBuffer16bit
 ---------------------------------------------------------------------------------
 (8) i1_cleanBuffer16bit                                   8     4      4     143
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) i1_UARTstring                                         4     2      2    1007
                                             11 COMRAM     4     2      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (9) i1_UARTchar                                           4     2      2     704
                                              7 COMRAM     4     2      2
                    i1_CheckSum_byte
 ---------------------------------------------------------------------------------
 (10) i1_CheckSum_byte                                     7     4      3     378
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (8) i1_SetLCDcursor                                       3     2      1    1497
                                             14 COMRAM     3     2      1
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ReadUSART                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_ReadIRpin                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintString                                     4     2      2    1455
                                             14 COMRAM     4     2      2
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintChar                                       1     1      0    1321
                                             14 COMRAM     1     1      0
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ClearLCD                                           0     0      0    1290
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (9) i1_SendLCDbyte                                        4     3      1    1290
                                             10 COMRAM     4     3      1
                   i1_PulseEnablePin
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_PulseEnablePin                                    0     0      0     381
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (8) i1_BufferCopy                                         7     1      6    1024
                                              8 COMRAM     7     1      6
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_cleanBuffer                                        8     4      4     413
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _UseIRCode                                          108   102      6     912
                                             10 COMRAM     8     2      6
                        _ReadButton1
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_delayUS                                          10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (9) _ReadButton1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Reset_Timer0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _IsPrintableASCII                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _IRrawToNEC                                          15    10      5    1512
                                              0 COMRAM    15    10      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           14    14      0       0
                                              0 BANK1     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _Command
     _GetBaud
     _GetEnteredNumber
       ___lmul
     _ISNUMBER
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCD_Scroll
       _BufferCopy
         _cleanBuffer
     _LCDdisplayFeedback
       _ClearLCD
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _LCDPrintString
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _SetLCDcursor
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
     _Parse_Time
     _READ_RTC_TIME
       _I2C_Read_Sequential
         _IdleI2C
         _Multiple_I2C_Read
           _readI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RemoveSpaces
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _SET_RTC_TIME
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       ___awdiv
       ___awmod
     _Send_Config1
       _One_Config1
         _delayUS
       _Zero_Config1
         _delayUS
       _delayUS
       _f_Config1
         _delayUS
     _Send_Config2
       _One_Config2
         _delayUS
       _Zero_Config2
         _delayUS
       _delayUS
     _SetBaud
       _InitUART
         _GetMemoryParity (ARG)
           _ReadEEPROM_1Byte
         _OpenUSART (ARG)
         _ReadUSART (ARG)
         ___lldiv (ARG)
         _baudUSART (ARG)
       _SetMemoryBaud
         _GetMemoryBaud
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _SetMemoryParity
         _GetMemoryParity
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _UARTstring
         _UARTchar
           _CheckSum_byte
       _UARTstringWAIT
         _UARTchar
           _CheckSum_byte
         _delayUS
       _delayUS
       _sprintf
         _GetBaud (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _SetContrast
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SprintDate
       _sprintf
         _GetBaud (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _StartsWith
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringMatch
     _UARTstring
       _UARTchar
         _CheckSum_byte
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwmod
     ___lwtoft
       ___ftpack
     _cleanBuffer
     _delayUS
     _lowercase
     _sprintf
       _GetBaud (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
   _ConfigureOscillator
   _ContrastPWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
   _EnableInternalADC
   _GetMemoryBaud
     _ReadEEPROM_1Byte
   _GetMemoryParity
     _ReadEEPROM_1Byte
   _InitApp
     _delayUS
   _InitUART
     _GetMemoryParity (ARG)
       _ReadEEPROM_1Byte
     _OpenUSART (ARG)
     _ReadUSART (ARG)
     ___lldiv (ARG)
     _baudUSART (ARG)
   _Init_I2C_Master
     _OpenI2C
   _LCDPrintChar
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDPrintString
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDScreenUpdate
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintChar
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _cleanBuffer
     _delayUS
   _PWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetFreq
       ___aldiv
         ___wmul (ARG)
       ___wmul
   _RTC_INIT
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _RTC_Clock_Enable
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RTC_TIME_NONMilitary
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
   _ReadUSART
   _SetContrast
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetDuty
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetLCDcursor
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _SetMemoryBaud
     _GetMemoryBaud
       _ReadEEPROM_1Byte
     _WriteEEPROM_1Byte
       _EEPROM_UNLOCK
   _SetMemoryParity
     _GetMemoryParity
       _ReadEEPROM_1Byte
     _WriteEEPROM_1Byte
       _EEPROM_UNLOCK
   _UARTstring
     _UARTchar
       _CheckSum_byte
   _cleanBuffer
   _delayUS
   _init_IR
     _ReadIRpin
     _Start_Timer0
     _cleanBuffer16bit
     _init_Timer0
       _Stop_Timer0
   _init_LCD
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _PulseEnablePin
       _delayUS
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
     _delayUS

 _low_isr (ROOT)
   _IRrawToNEC
   _IsPrintableASCII
   _Reset_Timer0
   _UseIRCode
     _ReadButton1
     i1_delayUS
   i1_BufferCopy
     i1_cleanBuffer
   i1_ClearLCD
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintChar
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintString
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_ReadIRpin
   i1_ReadUSART
   i1_SetLCDcursor
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_UARTchar
     i1_CheckSum_byte
   i1_UARTstring
     i1_UARTchar
       i1_CheckSum_byte
   i1_cleanBuffer
   i1_cleanBuffer16bit

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100     E2      E2      15       88.3%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      F4      13       95.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      DC      11       85.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100     67      77       9       46.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     65      DD       7       86.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     79      94       5       92.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      4C       1       80.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4E6      20        0.0%
DATA                 0      0     4E6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Mar 12 19:05:00 2015

                      BufferCopy@shift 0189               __size_of_GetMemoryParity 001E  
                    i1LCDPrintString@c 0011                           main@Baudtemp 01CE  
              __size_of_StringContains 0080                           _Zero_Config1 6FE0  
                         _Zero_Config2 7A40                            _SSPSTATbits 000FC7  
                          ?_LCD_Scroll 018B                           ___awdiv@sign 0181  
                                   bsr 000FE0                    ___wmul@multiplicand 017E  
                          __CFG_BORV$3 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                           __CFG_CP4$OFF 000000  
                         __CFG_CP5$OFF 000000                                    l402 763A  
                                  l404 7644                                    l500 7296  
                                  l228 3464                                    l405 766A  
                                  l501 72A2                                    l502 72A4  
                                  l247 7FA8                                    l512 6D9A  
                                  l513 6D9E                                    l282 74AA  
                                  l530 7C32                                    l515 6DDE  
                                  l523 6A32                                    l284 7494  
                                  l532 7C3A                                    l533 7C42  
                                  l542 7302                                    l721 07C0  
                                  l706 03D0                                    l388 4EE4  
                                  l485 505E                                    l557 4944  
                                  l821 22C4                                    l495 7274  
                                  l499 7294                                    l685 26F8  
                                  l980 758C                           __CFG_CPB$OFF 000000  
                                  _PR2 000FCB                           __CFG_CPD$OFF 000000  
                   _TXToiletMyBathroom ED71                   i1LCDPrintString@Text 000F  
                                  _buf 0300                             _IRrawToNEC 4200  
                           _IRrawCount 00D9                           ___awmod@sign 0181  
                                  prod 000FF3                                    wreg 000FE8  
                      _LCDScreenUpdate 3D52                       ??i1_SetLCDcursor 0010  
                       SetContrast@LSB 01B9                         SetContrast@MSB 01B8  
                        Send_Config1@i 018B                          Send_Config2@i 018C  
                         __CFG_LVP$OFF 000000                           ___ftdiv@cntr 0191  
                      ??i1_SendLCDbyte 000C                           ___ftdiv@sign 0196  
                         __CFG_WDT$OFF 000000                                   l1007 7CDA  
                                 l1212 46AA                                   l1141 41EA  
                                 l1400 5702                                   l1410 5732  
                                 l1403 570A                                   l1252 3A82  
                                 l1244 39E8                                   l1236 393A  
                                 l1501 5C56                                   l1413 5806  
                                 l1510 5C76                                   l1430 57E2  
                                 l1422 5778                                   l1414 5768  
                                 l1343 742C                                   l1431 57B4  
                                 l1415 5758                                   l1352 7456  
                                 l1360 61F6                                   l2208 5A36  
                                 l1440 57CE                                   l1408 581A  
                                 l1273 3C74                                   l1265 3BDA  
                                 l1257 3B2C                                   l1521 7692  
                                 l1409 5742                                   l1193 7530  
                RTC_Clock_Enable@Error 0188                                   l1530 76C2  
                                 l1514 5C84                                   l1506 5C68  
                                 l1370 623A                                   l1434 57BE  
                                 l1426 57AC                                   l1418 57F8  
                                 l1283 3D30                                   l1363 61FE  
                                 l1443 57D6                                   l1427 579C  
                                 l1419 5770                                   l1380 6276  
                                 l1452 57FC                                   l1461 5B98  
                                 l1373 628E                                   l1437 57C6  
                                 l1470 5BCC                                   l1374 6260  
                                 l2422 73FA                                   l1471 5BC4  
                                 l1391 629E                                   l1375 6258  
                                 l1480 5BF2                                   l1464 5BA0  
                                 l1384 6284                                   l1368 629A  
                                 l2272 56BC                                   l1456 580A  
                                 l1448 57E6                                   l1369 6242  
                                 l1538 7E24                                   l1490 5C64  
                                 l1474 5C80                                   l1394 62A6  
                                 l1378 6280                                   l1802 2BA0  
                                 l1539 7E28                                   l1491 5C38  
                                 l1483 5BFA                                   l1475 5BEA  
                                 l1492 5C3E                                   l1476 5BE2  
                                 l1388 6292                                   l1572 7A2A  
                                 l2349 64FC                                   l1486 5C1A  
                                 l1566 7EC2                                   l1495 5C46  
                                 l1487 5C12                                   l1479 5C72  
                                 l1559 7B5C                                   l2359 69C4  
                                 l1841 2F4C                                   l1498 5C4E  
                                 l1783 2976                                   l1759 27A0  
                                 l1857 307A                                   l8151 5898  
                                 l8153 58AA                                   l8145 586A  
                                 l8171 593C                                   l8163 590A  
                                 l8155 58B4                                   l8139 584A  
                                 l8167 591E                                   l8455 76EA  
                                 l8449 7F48                                   _BAUD 01D3  
                                 l8459 770E                                   l9741 6826  
                                 l9733 680A                                   l9761 686E  
                                 l9753 6852                                   l9745 6834  
                                 l9737 6818                                   l9729 67FC  
                                 l9765 6880                                   l9757 6860  
                                 l9749 6842                                   l9767 6886  
                                 STR_1 FFFC                                   STR_2 F94E  
                                 STR_3 FFFC                                   STR_4 F4D1  
                                 STR_5 F280                                   STR_6 F813  
                                 STR_7 F6CE                                   STR_8 F04E  
                                 STR_9 FCC5                EnableInternalADC@config 017C  
                ??_I2C_Read_At_Address 0180                                   _LATA 000F89  
                                 _LATC 000F8B                                   _LATD 000F8C  
                                 _LATE 000F8D                                   _PIE1 000F9D  
                                 i1l72 02F8                                   i1l98 0474  
                                 i1l99 0444                           __CFG_PWRT$ON 000000  
                           i1delayUS@i 0006                             i1delayUS@j 000A  
                        ?_LCDPrintChar 0001             WriteEEPROM_1Byte@GIEstatus 017F  
                                 _main 33AC                     UARTstringWAIT@data 0187  
                         ___ftpack@arg 017C                           ___ftpack@exp 017F  
                                 fsr0h 000FEA                                   fsr1h 000FE2  
                                 indf0 000FEF                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                       ??_PulseEnablePin 0186  
                  baudUSART@baudconfig 017C                                   pclat 000FFA  
              __end_of_Init_I2C_Master 7890                                   prodh 000FF4  
                                 prodl 000FF3                                   start 04BC  
                      __end_of_Aux2OFF EDD5                          __CFG_IESO$OFF 000000  
                      Command@BAUDtemp 05CE                        __end_of_IdleI2C 7F1E  
                      __end_of_GetBaud 7F30                      ?_GetEnteredNumber 0188  
                         _sprintf$2841 01AD                           _sprintf$2834 01A9  
                         _sprintf$2835 01AB             __size_of_Multiple_I2C_Read 0062  
                        __CFG_MCLRE$ON 000000                           ___ftmul@cntr 01A4  
                      __end_of_Command 270E                         UARTstring@data 0187  
                          ?i1_UARTchar 0008                           ___param_bank 000001  
                         ___ftmul@sign 01A5                        __end_of_TXdataD EE71  
                      __end_of_TXdataE EE7D                        __end_of_TXdataF EE89  
                        ??_ReadButton1 0001                        __end_of_InitApp 7796  
                   ??_GetEnteredNumber 018C                        SetContrast@Duty 01BC  
                      __end_of_OpenI2C 7E10               I2C_Write_At_Address@data 017F  
                      __end_of_SetBaud 4A8A                           ___fttol@exp1 01B4  
               __size_of_READ_RTC_TIME 00EA                           ___fttol@lval 01B0  
                      __end_of_SetFreq 7842                        __end_of_SetDuty 67E6  
                      SetContrast@temp 01BA                           f_Config1@pin 0186  
    i1UARTchar@NinethBit_override_data 0009        UARTchar@NinethBit_override_data 0184  
                         ?_init_Timer0 0001                      IRrawToNEC@NECtemp 0008  
                       _LCDPrintString 714E                                  l12003 2D2A  
                                l12013 2DA4                                  l12005 2D4A  
                                l11303 7872                                  l12103 3090  
                                l11153 7484                                  l11305 787E  
                                l12121 3138                                  l12041 2ECE  
                                l12033 2E6A                                  l12025 2E12  
                                l12009 2D72                                  l11163 749C  
                                l11155 748A                                  l11411 5E04  
                                l11403 5DF0                                  l11219 7F0C  
                                l12027 2E1E                                  l12019 2DDA  
                                l13003 4A46                                  l13101 6E38  
                                l12133 3242                                  l12125 314C  
                                l12141 32E4                                  l12109 30D4  
                                l12053 2F44                                  l12045 2F06  
                                l13005 4A60                                  l11431 5E42  
                                l11415 5E0E                                  l11407 5DFA  
                                l11503 769E                                  l11511 76CA  
                                l13103 6E42                                  l11351 7278  
                                l11343 7260                                  l12151 334C  
                                l12135 3250                                  l12127 31D0  
                                l12143 3304                                  l12119 312C  
                                l12071 2FC4                                  l12047 2F12  
                                l12039 2EC2                                  l13007 4A72  
                                l12215 5712                                  l11185 7666  
                                l11177 7652                                  l11169 7630  
                                l11281 6DA2                                  l13121 7572  
                                l13041 4B66                                  l13033 4B06  
                                l11441 5E5C                                  l13201 3936  
                                l11601 6476                                  l12145 3310  
                                l12137 327E                                  l12401 55DE  
                                l11195 7674                                  l11275 6D6E  
                                l11283 6DBC                                  l11291 77A4  
                                l11435 5E4C                                  l11427 5E38  
                                l11507 76B2                                  l13107 6E48  
                                l11347 726A                                  l11339 7254  
                                l11603 6488                                  l12147 3318  
                                l12059 2F60                                  l12075 2FD4  
                                l12083 300A                                  l12251 57EA  
                                l12219 571C                                  l11277 6D82  
                                l11285 6DD4                                  l13061 4C56  
                                l13053 4BF6                                  l13045 4B96  
                                l13037 4B36                                  l13029 4AD6  
                                l13221 398E                                  l13213 395A  
                                l11453 7414                                  l12333 5BAE  
                                l12309 62B2                                  l11613 64E8  
                                l11605 6492                                  l11621 694E  
                                l12093 3046                                  l12077 2FE0  
                                l12069 2FB8                                  l12157 3376  
                                l11295 77C4                                  l11703 6592  
                                l11439 5E56                                  l13303 3B14  
                                l11471 743E                                  l12327 5BA8  
                                l13151 5F52                                  l12511 617C  
                                l12503 6150                                  l13071 605A  
                                l11359 728A                                  l11623 6960  
                                l12087 301C                                  l12159 339C  
                                l12407 5618                                  l12239 5788  
                                l13057 4C26                                  l13049 4BC6  
                                l13225 3992                                  l13209 3956  
                                l13153 5F58                                  l12273 620C  
                                l12521 61B8                                  l12513 6186  
                                l13081 60D8                                  l11801 730A  
                                l11625 696A                                  l12097 3072  
                                l14105 0A24                                  l14025 0476  
                                l14009 0358                                  l11651 6A3A  
                                l13331 3B84                                  l13315 3B48  
                                l13307 3B28                                  l13251 3A08  
                                l13235 39D0                                  l11467 743A  
                                l13075 6094                                  l13067 6050  
                                l11731 603A                                  l11811 273E  
                                l11571 59C2                                  l11563 596A  
                                l12427 567A                                  l12611 5590  
                                l12603 5552                                  l13163 5CF0  
                                l14131 0BF6                                  l14051 0658  
                                l11397 5DE2                                  l11661 7ADA  
                                l13341 3BC2                                  l11485 7466  
                                l12381 5C8E                                  l12509 616E  
                                l12525 61C8                                  l12541 669E  
                                l13085 60DE                                  l13093 6DF4  
                                l11629 69B0                                  l11549 7D34  
                                l11813 2754                                  l11805 271E  
                                l12437 56CE                                  l12453 5202  
                                l12605 5564                                  l13165 5D3A  
                                l14221 1194                                  l14213 1128  
                                l14205 10B0                                  l14117 0AFA  
                                l14037 054C                                  l14061 070C  
                                l15005 37D2                                  l12391 7110  
                                l11647 69D6                                  l11399 5DE6  
                                l13415 3CFA                                  l13327 3B80  
                                l13319 3B4C                                  l13263 3A40  
                                l13247 3A04                                  l13239 39E4  
                                l13183 38E0                                  l13175 38AC  
                                l11495 767C                                  l12551 66D2  
                                l13079 60CE                                  l11743 7C14  
                                l11911 2A68                                  l11903 2A32  
                                l11831 27D0                                  l11815 275A  
                                l11823 2774                                  l11591 5A60  
                                l11575 59E4                                  l11567 5980  
                                l12471 5272                                  l12447 51C8  
                                l12607 5572                                  l12711 6F26  
                                l14311 15E0                                  l14303 1578  
                                l14143 0CCA                                  l11673 718C  
                                l13353 3BF6                                  l13345 3BD6  
                                l13281 3A9E                                  l13273 3A7E  
                                l11489 746A                                  l12369 5C6C  
                                l12529 61DE                                  l12553 66DC  
                                l12561 6712                                  l12545 66B0  
                                l13097 6DFE                                  l11921 2AB8  
                                l11913 2A86                                  l11817 2760  
                                l11585 5A42                                  l11577 5A16  
                                l11569 5990                                  l12481 52B6  
                                l14233 1220                                  l14225 11A4  
                                l14217 1158                                  l14081 0866  
                                l14129 0BD2                                  l14049 0634  
                                l15025 3816                                  l12387 70E8  
                                l11683 652C                                  l11659 7AD2  
                                l13427 3D2C                                  l13259 3A3C  
                                l13187 38E4                                  l11771 505A  
                                l11907 2A54                                  l11827 27AC  
                                l11819 2766                                  l11579 5A26  
                                l12475 528E                                  l12467 5252  
                                l12715 6F2A                                  l12707 6EEA  
                                l14403 1B26                                  l14331 16CC  
                                l14323 166E                                  l14315 161C  
                                l15027 381C                                  l15019 37FA  
                                l12805 4CF4                                  l11669 7158  
                                l13365 3C2E                                  l13357 3BFA  
                                l13293 3AD6                                  l13197 3922  
                                l12565 6728                                  l12557 6702  
                                l12549 66C4                                  l11917 2AA0  
                                l11861 28EE                                  l11925 2AC0  
                                l12485 52D2                                  l12477 5296  
                                l12901 4EF0                                  l12741 6E92  
                                l12733 6E6C                                  l12717 6F38  
                                l13541 73C4                                  l14405 1B6C  
                                l14237 124A                                  l14229 11E6  
                                l14165 0E24                                  l14149 0D24  
                                l14093 093C                                  l14069 0784  
                                l15037 3860                                  l12831 4D5E  
                                l11695 6554                                  l11687 653A  
                                l13471 46D0                                  l13455 462C  
                                l13447 45C8                                  l11935 2B58  
                                l11927 2B16                                  l11871 296C  
                                l11847 288A                                  l11839 2852  
                                l12575 548C                                  l12903 4F0C  
                                l12751 6ED4                                  l12727 6F60  
                                l14327 1698                                  l14319 162C  
                                l14247 12BE                                  l12825 4D48  
                                l13369 3C32                                  l13289 3AD2  
                                l12497 6138                                  l11961 2C1C  
                                l11953 2BEC                                  l11881 29A6  
                                l11873 2972                                  l11865 293A  
                                l12593 5520                                  l12913 4F54  
                                l13545 73EA                                  l13537 73AC  
                                l14601 25C6                                  l14441 1CC8  
                                l14425 1C20                                  l14409 1B8A  
                                l14417 1BBA                                  l14281 1476  
                                l14273 13FA                                  l14265 13AE  
                                l14249 12E2                                  l14257 1346  
                                l14193 0FE8                                  l13529 7538  
                                l12843 4E06                                  l12819 4D30  
                                l13395 3CBA                                  l13387 3C90  
                                l13379 3C70                                  l11795 72B4  
                                l11939 2B80                                  l11891 29E2  
                                l11875 297C                                  l11859 28E2  
                                l11867 2956                                  l12923 4F84  
                                l12907 4F1A                                  l12747 6EA6  
                                l13539 73BA                                  l14603 25D8  
                                l14523 2298                                  l14443 1CDC  
                                l14339 1744                                  l14355 17EA  
                                l14363 186E                                  l14179 0F06  
                                l14195 100C                                  l13803 3D98  
                                l12853 4E4A                                  l12845 4E0E  
                                l11973 2C72                                  l11965 2C2A  
                                l11949 2BC2                                  l11885 29CC  
                                l11869 2966                                  l12597 5534  
                                l12773 6BF4                                  l12933 4FE8  
                                l12909 4F22                                  l14517 2234  
                                l14445 1D06                                  l14285 14A0  
                                l14277 143C                                  l14269 13EA  
                                l13741 7CD6                                  l13399 3CC0  
                                l12863 6AA4                                  l12871 6AE0  
                                l13495 47FC                                  l13487 4798  
                                l13479 4734                                  l11983 2CC6  
                                l11975 2C78                                  l11959 2C16  
                                l11895 29F6                                  l11887 29D8  
                                l12759 6BAC                                  l12775 6C02  
                                l12919 4F7A                                  l14623 26B0  
                                l14519 227A                                  l14447 1D1A  
                                l14295 1514                                  l12849 4E2C  
                                l12793 4CA8                                  l11993 2CE2  
                                l11969 2C6A                                  l11897 2A10  
                                l12961 48A0                                  l12769 6BEE  
                                l12929 4FE2                                  l14625 26B4  
                                l14617 2654                                  l14385 1A4C  
                                l12795 4CB0                                  l12947 7E68  
                                l11987 2CCE                                  l11979 2C86  
                                l12955 4816                                  l12787 6C38  
                                l12883 6D28                                  l14627 26D6  
                                l14547 2360                                  l14475 1F10  
                                l14459 1DEE                                  l13907 412A  
                                l13827 3E1A                                  l13819 3DEC  
                                l12869 6AD8                                  l11997 2D22  
                                l11989 2CD4                                  l12957 4844  
                                l12965 48CE                                  l12893 4E8C  
                                l12877 6CD4                                  l12885 6D2E  
                                l14565 245C                                  l14557 23E4  
                                l14549 2374                                  l13917 418C  
                                l13837 3E7C                                  l13925 41D2  
                                l12799 4CD2                                  l12959 4872  
                                l12967 48E8                                  l14591 2560  
                                l14583 251C                                  l14487 1FF6  
                                l13847 3EDE                                  l12993 49FE  
                                l12985 49B4                                  l12969 4916  
                                l12897 4EC6                                  l14569 2488  
                                l14489 2018                                  l14497 209A  
                                l13945 00B8                                  l13857 3F40  
                                l14905 347E                                  l12995 4A10  
                                l12899 4EEA                                  l14595 2582  
                                l14587 253E                                  l14579 24FA  
                                l13867 3FA2                                  l14931 3514  
                                l14915 34D0                                  l12997 4A22  
                                l14597 2596                                  l13981 0208  
                                l13973 01C2                                  l13965 017E  
                                l13957 013A                                  l13877 4004  
                                l12999 4A34                                  l13887 4066  
                                l14919 34DA                                  l13897 40C8  
                                l13997 0290                                  l13989 024C  
                                l14949 3590                                  l13999 02B4  
                                l14995 379E                                  l14899 3442  
                                l14999 37AC                        __end_of___aldiv 5950  
                                ?_main 0001               __size_ofi1_CheckSum_byte 004C  
               __size_ofi1_cleanBuffer 003E                        __end_of___awdiv 61EA  
                                _EEADR 000FA9                            ?i1_ClearLCD 0001  
                                STR_10 FEE9                                  STR_11 FDAB  
                                STR_12 FE7C                                  STR_20 FE72  
                                STR_13 FDF9                                  STR_21 F4B6  
                                STR_14 FDAB                                  STR_22 F4CF  
                                STR_30 F800                                  STR_31 F0A2  
                                STR_15 FD62                                  STR_23 F084  
                                STR_32 F036                                  STR_40 FFBD  
                                STR_16 FCB7                                  STR_24 F018  
                                STR_33 F1CE                                  STR_41 FD21  
                                STR_17 FC1C                                  STR_25 F1B0  
                                STR_34 F19E                                  STR_42 FD21  
                                STR_50 FD2E                                  STR_18 FB49  
                                STR_26 F180                                  STR_35 F0D7  
                                STR_51 FD2E                                  STR_43 FF2A  
                                STR_19 F9D8                                  STR_27 F0B9  
                                STR_36 EF13                                  STR_28 F6CE  
                                STR_52 FF32                                  STR_44 FF1A  
                                STR_60 F8FB                        __end_of___awmod 6734  
                                STR_37 F4D1                                  STR_45 FF1A  
                                STR_53 FF22                                  STR_61 FDB7  
                                STR_29 F6FD                                  STR_38 FF71  
                                STR_54 FF22                                  STR_62 FF60  
                                STR_46 FEB3                                  STR_70 FDEE  
                                STR_71 FA17                                  STR_39 FA17  
                                STR_63 FEF2                                  STR_55 FEBC  
                                STR_47 FEA1                                  STR_48 FEA1  
                                STR_56 FEAA                                  STR_72 F7ED  
                                STR_80 F7C7                                  STR_64 EF17  
                                STR_57 FEAA                                  STR_49 FFC7  
                                STR_81 FBA4                                  STR_65 F92E  
                                STR_73 F779                                  STR_58 FA3D  
                                STR_66 FEE0                                  STR_90 FB29  
                                STR_82 F7A1                                  STR_74 F615  
                                STR_59 FA3D                                  STR_67 FE8F  
                                STR_91 FCA9                                  STR_75 FA79  
                                STR_83 FA09                                  STR_92 FE8F  
                                STR_68 FFB8                                  STR_76 F972  
                                STR_84 F62E                                  STR_85 FDB7  
                                STR_69 FFC2                                  STR_93 FFA7  
                                STR_77 F892                                  STR_94 FFEC  
                                STR_86 FF02                                  STR_78 FC71  
                                STR_87 FF52                                  STR_95 FF12  
                                STR_79 F85C                                  STR_88 EF17  
                                STR_96 FA17                                  STR_97 FFAD  
                                STR_89 F57A                                  STR_98 FFF0  
                                STR_99 FB09                        __end_of___ftdiv 56F6  
                     __end_of_ISNUMBER 7E6E                        __end_of___lldiv 650E  
                      __end_of___ftmul 52FA                        ___awdiv@divisor 017E  
                      __end_of___llmod 69D6                        __end_of___fttol 55A4  
                                _T2CON 000FCA                ReadEEPROM_1Byte@address 017C  
                                u15220 2EB6                                  u16101 55BA  
                                u14600 6A72                                  u16121 55F4  
                                u14700 657E                                  u14710 65B4  
                                u14607 6A68                                  u16151 51A4  
                                u14560 69F8                                  u14640 7180  
                                u14707 6574                                  u15371 3108  
                                u16171 51DE                                  u16331 5468  
                                u14580 6A2C                                  u14660 71BA  
                                u14740 5F98                                  u14717 65AA  
                                u16350 54B2                                  u14567 69EE  
                                u14647 7176                                  u19000 24BE  
                                u14745 5F8C                                  u14587 6A22  
                                u14667 71B0                                  u16355 54A8  
                                u19011 24D6                                  u14780 50D0  
                                u19120 2690                                  u14785 50C4  
                                u17635 4636                                  u18620 1452  
                                u18540 11FC                                  i1l110 0470  
                                u18831 1C56                                  u19640 3424  
                                u18921 21B4                                  u18851 1C92  
                                u17971 3DB0                                  i1l108 0466  
                                u18781 1A8A                                  i1l402 7946  
                                i1l405 7968                                  i1l512 71F8  
                                i1l513 71FC                        __end_of___lwmod 7404  
                                i1l282 78C0                                  i1l530 7C98  
                                i1l515 7238                                  i1l523 6B6C  
                                i1l284 78AE                                  i1l532 7CA0  
                                i1l533 7CA8                        ___awdiv@counter 0180  
                                _RCREG 000FAE                                  _RCSTA 000FAB  
                                _TMR0H 000FD7                                  _TMR0L 000FD6  
                                _SPBRG 000FAF                             _BufferCopy 650E  
                                _PORTB 000F81                                  _BedON EE15  
                         InitUART@Baud 0189                                  _TXREG 000FAD  
                                _TXSTA 000FAC                          ??_One_Config1 0186  
                        ??_One_Config2 0186                    _ConfigureOscillator 7FA6  
                      __end_of_delayUS 74DC                       _InternalADC_Read 7546  
                                _AuxON EDF5                          __CFG_WRT0$OFF 000000  
                          i1delayUS@US 0001                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                    ___lmul@multiplicand 0180  
                        __CFG_WRT3$OFF 000000                          __CFG_WRT4$OFF 000000  
                        __CFG_WRT5$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
                       __CFG_EBTR4$OFF 000000                         __CFG_EBTR5$OFF 000000  
                         InitUART@temp 0196                           _IRrawCodeNum 00DC  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                                  _fanON EE55  
                     __end_of_UARTchar 6DE4                        __end_of_readI2C 7E32  
                           SetBaud@buf 0200                         __CFG_EBTRB$OFF 000000  
                      __end_of_init_IR 79BE                        __end_of_dpowers ED45  
                     __end_of_RTC_INIT 7F40                        __end_of_isdigit 7D40  
                        ___ftpack@sign 0180                       Command@ADC_Value 05C8  
                       ??_LCDPrintChar 018A                          ??_SendLCDbyte 0187  
                      __end_of_low_isr 04BC            I2C_Read_At_Address@Register 017E  
                                tablat 000FF5                          ?_SetLCDcursor 018A  
                  __size_of_LCD_Scroll 01FE                                  plusw0 000FEB  
                                plusw2 000FDB                       __end_of_PWM_init 7CE2  
                          ?_UARTstring 0187                InternalADC_Read@channel 018F  
                                status 000FD8                        __end_of_sprintf 33AC  
                     __end_of_ClearLCD 7E88                   __size_of_cleanBuffer 005A  
                __end_of_GetMemoryBaud 5452                         __CFG_PBADEN$ON 000000  
                 ?_ConfigureOscillator 0001                     StringContains@That 017E  
                   StringContains@This 017C                     __size_ofi1_delayUS 004E  
                           SetDuty@LSB 01BA                             SetDuty@MSB 01B9  
                      __initialization 6C3E                     StringAddEqual@temp 0200  
                  _I2C_Read_Sequential 5B8C                  __end_of_EEPROM_UNLOCK 7ECC  
                         __end_of_main 3880                       __end_of_InitUART 518E  
                     ??_UARTstringWAIT 0189                          ??_SetContrast 01B5  
               __end_of_LCDPrintString 71C6                         __CFG_OSC$HSPLL 000000  
              __end_of_LCDScreenUpdate 4200              __size_of_ContrastPWM_init 000C  
                        _LCDclearCount 01D7                                 ??_main 01CC  
                    ??_GetMemoryParity 017F                          ___fttol@sign1 01AF  
                       SetDuty@tempPR2 01B6                        Send_Config1@pin 018C  
                  __end_of_ReadButton1 7F86                        Send_Config2@pin 018B  
                     __end_of_ResetI2C 7DEC                        SendLCDbyte@data 0187  
                        __activetblptr 000003                            ?_IRrawToNEC 0001  
               Multiple_I2C_Read@rdptr 017C                             _Parse_Time 3880  
                      low_isr@LCD_TEMP 00C4                   ?_I2C_Read_Sequential 017F  
                     i1CheckSum_byte@i 0007                             UseIRCode@i 0012  
                       _StringAddEqual 4E5E                                 _ADCON0 000FC2  
                               _ADCON1 000FC1                                 _ADCON2 000FC0  
                  __size_ofi1_UARTchar 0078                       ___llmod@dividend 0189  
                               STR_100 F950                                 STR_101 F6E7  
                               STR_102 FA89                                 STR_110 F8A4  
                               STR_103 FC8D                                 STR_111 FBD1  
                               STR_120 FF89                                 STR_104 FBE0  
                               STR_112 F86E                                 STR_200 F3BE  
                               STR_121 FE04                                 STR_201 FCFA  
                               STR_105 FC7F                                 STR_113 F7DA  
                               STR_122 EF17                                 STR_130 FFA1  
                               STR_106 FBC2                                 STR_114 FAC9  
                               STR_210 F8EA                                 STR_202 F45E  
                               _ADRESH 000FC4                                 STR_131 FF9B  
                               STR_211 FD7B                                 STR_203 FAF9  
                               STR_107 FAD9                                 STR_115 FA19  
                               STR_123 F65E                                 STR_116 FA19  
                               STR_212 FFB3                                 STR_220 FF4A  
                               STR_132 FE54                                 STR_300 FE4A  
                               STR_108 FBB3                                 STR_124 FA29  
                               STR_204 F4EF                                 STR_140 F43F  
                               _EEADRH 000FAA                                 STR_133 FA17  
                               STR_125 FD55                                 STR_141 FC63  
                               STR_301 FB19                                 STR_205 FAB9  
                               STR_109 F983                                 STR_117 F713  
                               STR_221 F2F0                                 STR_213 EE89  
                               STR_118 FDB7                                 STR_126 FE8F  
                               STR_142 FF9B                                 STR_134 FFA1  
                               STR_230 FFF8                                 STR_302 FF3A  
                               STR_310 FD3B                                 STR_214 FCD3  
                               STR_150 FB68                                 STR_222 FA99  
                               STR_206 F499                                 _ADRESL 000FC3  
                               STR_119 FF02                                 STR_135 FD05  
                               STR_143 FEB7                                 STR_127 FFA7  
                               STR_223 FFDB                                 STR_303 FF0A  
                               STR_215 FECE                                 STR_207 F90C  
                               STR_151 F826                                 STR_311 F73D  
                               STR_231 F2CB                     _LCDdisplayFeedback 7BB0  
                               STR_224 F6CE                                 STR_152 EF17  
                               STR_216 FE36                                 STR_128 FFEC  
                               STR_312 FF7C                                 STR_160 FF6E  
                               STR_304 FDE3                                 STR_208 F751  
                               STR_320 F595                                 STR_240 F47C  
                               STR_144 F41F                                 STR_232 F35A  
                               STR_136 F25A                                 STR_217 FC37  
                               STR_305 FD05                                 STR_233 F4D1  
                               STR_129 FF75                                 STR_241 FDC2  
                               STR_209 FD14                                 STR_313 FC55  
                               STR_145 FB95                                 STR_137 FA69  
                               STR_161 F9A5                                 STR_225 F93F  
                               STR_321 F314                                 STR_153 F2A6  
                               STR_314 FD05                                 STR_162 FD05  
                               STR_138 FF9B                                 STR_218 FFE4  
                               STR_250 FF42                                 STR_154 FE5E  
                               STR_242 FE18                                 STR_306 FB39  
                               STR_146 F84A                                 STR_170 F6D1  
                               STR_226 F6A4                                 STR_234 F5C9  
                               STR_322 F337                                 STR_235 F6CE  
                               STR_155 FE8F                                 STR_219 FA17  
                               STR_139 FF2E                                 STR_251 FFD6  
                               STR_243 FF67                                 STR_147 FD07  
                               STR_171 FB86                                 STR_307 F9B6  
                               STR_315 F838                                 STR_227 F68D  
                               STR_163 F50B                                 STR_323 F3DF  
                               STR_156 FF9B                                 STR_252 FFF4  
                               STR_244 FF59                                 STR_180 FEC5  
                               STR_260 FAE9                                 STR_316 FAA9  
                               STR_324 F8C8                                 STR_308 F8B6  
                               STR_228 F646                                 STR_164 F55F  
                               STR_236 F543                                 STR_148 F4D3  
                               STR_172 F11F                                 STR_149 FDB7  
                               STR_317 F838                                 STR_181 FA17  
                               STR_157 FFA1                                 STR_253 FFE8  
                               STR_309 FD9F                                 STR_165 FC0D  
                               STR_173 FA39                                 STR_229 F961  
                               STR_325 F8D9                                 STR_261 F7B4  
                               STR_237 F5FC                                 STR_245 EED2  
                               _EEDATA 000FA8                                 STR_182 FD05  
                               STR_254 FA17                                 STR_158 F4B2  
                               STR_318 FAA9                                 STR_270 FFA7  
                               STR_190 FB77                                 STR_262 FA49  
                               STR_174 F5E3                                 STR_238 F39D  
                               STR_166 F234                                 STR_246 EFDB  
                               STR_319 F6CE                                 STR_183 F55F  
                               STR_271 FA17                                 STR_159 FA17  
                               STR_239 FCED                                 STR_167 F9F9  
                               STR_255 F994                                 STR_247 F728  
                               STR_263 F676                                 STR_191 F5AF  
                               STR_175 EF5B                                 STR_264 FDB7  
                               STR_280 FEFA                                 STR_248 FED7  
                               STR_272 FD6F                                 STR_184 FBFE  
                               STR_256 F78D                                 STR_168 F37C  
                               STR_176 F20A                                 STR_192 EF9D  
                               STR_193 F20A                                 STR_249 FE36  
                               STR_265 FE86                                 STR_273 FE0E  
                               STR_169 FC39                                 STR_257 FBEF  
                               STR_177 F9C7                                 STR_185 F150  
                               STR_281 F0ED                                 STR_266 EF17  
                               STR_178 FE36                                 STR_194 FD48  
                               STR_274 FCE0                                 STR_290 FC47  
                               STR_186 F9E9                                 STR_258 F880  
                               STR_282 F6BB                                 STR_195 FE36  
                               STR_291 FE98                                 STR_179 FE22  
                               STR_275 FD87                                 STR_283 FB59  
                               STR_259 F765                                 STR_267 F527  
                               STR_187 F1DF                                 STR_284 FE68  
                               STR_196 FE2C                                 STR_292 FD93  
                               STR_268 FC9B                                 STR_188 FC2B  
                               STR_276 F91D                                 STR_285 F6CE  
                               STR_269 FE8F                                 STR_197 FFE0  
                               STR_293 FDD8                                 STR_277 FDCD  
                               STR_189 F3FF                                 STR_198 FA17  
                               STR_286 F6A4                                 STR_278 FF83  
                               STR_294 FA59                                 _CCPR1L 000FBE  
                               STR_279 F658                                 STR_199 FD05  
                               STR_287 F68D                                 STR_295 FE40  
                               STR_288 F646                                 STR_296 FFCC  
                               STR_289 F961                                 STR_297 FFD1  
                               STR_298 FF8F                                 STR_299 FF95  
                               _EECON2 000FA7                       ___awdiv@dividend 017C  
                        _READ_RTC_TIME 5E76                       __end_of_WriteI2C 7470  
                      __CFG_BBSIZ$1024 000000                       __end_of___ftpack 5A70  
                     __end_of___lbtoft 7D12                         ??_SetLCDcursor 018B  
                      _ScrollFIFOCount 010C              __size_ofi1_LCDPrintString 0070  
                          OpenI2C@slew 017C                    __end_of_One_Config1 70D4  
                  __end_of_One_Config2 7AC0                                 i1l9611 4404  
                               i1l9531 4228                                 i1l9355 7F80  
                               i1l9613 440A                                 i1l9541 4264  
                               i1l9623 4430                                 i1l9551 42A6  
                               i1l9527 4220                                 i1l9617 4410  
                               i1l9553 42CC                                 i1l9481 7E9A  
                               i1l9651 44F8                                 i1l9643 44B2  
                               i1l9635 4472                                 i1l9571 4314  
                               i1l9563 430A                                 i1l9547 42A2  
                               i1l9629 4436                                 i1l9557 42D0  
                               i1l9663 454C                                 i1l9671 4558  
                               i1l9575 431C                                 i1l9567 430E  
                               i1l9585 4368                                 i1l9593 438A  
                               i1l9667 4552                                 i1l9599 43A8  
                               _PARITY 010A                       __end_of___lwtoft 7DC8  
                            ??_IdleI2C 017C                              ??_GetBaud 0180  
                   __size_of_ReadUSART 0034                                 _OSCCON 000FD3  
                               _IR_NEC 00EF                     __size_of_ReadIRpin 000E  
            __size_of_IsPrintableASCII 0018                                 _SPBRGH 000FB0  
                        i1_cleanBuffer 7AFE                                 _BedOFF EE05  
                               _SSPADD 000FC8                                 _SSPBUF 000FC9  
                            ??_Command 01CC                    ?_LCDdisplayFeedback 018E  
                               _Aux2ON EDD5                              ??_InitApp 0186  
                ??_ConfigureOscillator 017C                                 _TX_OLD 00DD  
                  __size_ofi1_ClearLCD 0016                                 _AuxOFF EDE5  
                     ?_Init_I2C_Master 0001   Command@RTC_Battery_Value_LOW_decimal 05D2  
                            ??_OpenI2C 017D                              ??_SetBaud 01C3  
                            ??_SetFreq 0192                              ??_SetDuty 01B5  
                  __end_of_SendLCDbyte 5E76                         __CFG_XINST$OFF 000000  
                        InitUART@spbrg 0192                            SetBaud@Baud 01BE  
                     __end_of_high_isr 7616                                 _Rxdata 0364  
                   __size_of_OpenUSART 0076                         _StringContains 6E68  
                           _SubLightON EE35                                 _Txdata 0400  
                               ___lmul 70D4                                 _fanOFF EE45  
                            ??___aldiv 018A                        Command@contrast 05D8  
                               ___wmul 7B78                              ??___awdiv 0180  
             __end_ofi1_PulseEnablePin 7D9C                         __CFG_STVREN$ON 000000  
                            ??___awmod 0180                              ??___ftdiv 018E  
                            ??___lldiv 0184                              ??___ftmul 019D  
                            ??___llmod 0191                              ??___fttol 01AA  
                      ?_LCDPrintString 018A                      cleanBuffer16bit@i 0183  
                     __end_of_init_LCD 5B8C                              ??___lwmod 0180  
              i1cleanBuffer16bit@count 0003                           ?i1_ReadUSART 0001  
                               clear_0 6C44                                 clear_1 6C50  
                               clear_2 6C5C                                 clear_3 6C68  
                               clear_4 6C74                                 clear_5 6C80  
                         ?i1_ReadIRpin 0001                       ___awdiv@quotient 0182  
                            ??_delayUS 0180                        ___awmod@divisor 017E  
                   __size_of_UseIRCode 00B6                        ___awmod@counter 0180  
        __size_of_I2C_Write_At_Address 00CE                                 main@ii 01CD  
                      Command@tempLONG 05DE                    SprintDate@ReturnBuf 01BE  
                 ??_LCDdisplayFeedback 0190                  ___ftmul@f3_as_product 01A1  
                            ??_readI2C 017C                    __size_of_UARTstring 00A4  
                        ?_Send_Config1 0187                          ?_Send_Config2 0187  
                      __CFG_BOREN$BOHW 000000                              ??_init_IR 0184  
                          ?_BufferCopy 0184                    __end_of_SetContrast 6380  
                    ?_cleanBuffer16bit 017C                              ??_isdigit 017C  
                ??_I2C_Read_Sequential 0183                 __end_of_StringAddEqual 5010  
                         __mediumconst ECEC                      __end_ofi1_delayUS 78DE  
                            ??_low_isr 0013                        Zero_Config1@pin 0186  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                        Zero_Config2@pin 0186  
                   ??_cleanBuffer16bit 0180                 __size_of_CheckSum_byte 0064  
                   IRrawToNEC@StartBit 000F                      ??i1_CheckSum_byte 0004  
                       ?_READ_RTC_TIME 0001                           _BlueLEDcount 01DB  
                            ??_sprintf 01A2                     __size_of_f_Config1 007A  
                           _StartsWith 6BAA                         ?i1_cleanBuffer 0001  
                           _SprintDate 5C94                            SetFreq@freq 0190  
                           __accesstop 0060                __end_of__initialization 6CC6  
                          SetFreq@temp 0192               __size_of_SetMemoryParity 0034  
                        ___rparam_used 000000                    StringAddEqual@Input 018B  
                           ___ftdiv@f1 0188                             ___ftdiv@f2 018B  
                           ___ftdiv@f3 0192                              ?_ISNUMBER 0001  
               __end_of_StringContains 6EE8                     __size_of_baudUSART 000E  
                        __end_of_BedON EE25                             ___lbtoft@c 0187  
            __size_of_ReadEEPROM_1Byte 003C                    __size_of_IRrawToNEC 035E  
                          SetDuty@Duty 01B5                             ___ftmul@f1 0197  
                           ___ftmul@f2 019A                          __end_of_AuxON EE05  
                           ___fttol@f1 01A6              __size_of_RTC_Clock_Enable 004C  
                       __pcstackCOMRAM 0001                            SetDuty@temp 01BB  
                         __pidataBANK1 7F92                           __pidataBANK3 7EE2  
                          _ReadButton1 7F78                          __end_of_fanON EE65  
                            ?_UARTchar 0183                           ??_LCD_Scroll 018D  
                   InitUART@baudconfig 0194                              ?_RTC_INIT 0001  
                 __end_of_LCDPrintChar 7F0A                       ?_LCDScreenUpdate 0001  
                    __end_of_ReadUSART 7C4E                      __end_of_ReadIRpin 7F4E  
                        ?i1_UARTstring 000C                             ___lwtoft@c 0184  
                       ??_Send_Config1 0189                         ??_Send_Config2 0189  
                  __end_of_SubLightOFF EE35            __size_ofi1_cleanBuffer16bit 0042  
                 __size_of_init_Timer0 0016                              ?_PWM_init 0001  
                   LCDPrintString@Text 018A                            ?_Parse_Time 017C  
                            ?_ClearLCD 0001                          ?_Reset_Timer0 0001  
                      ?_StringAddEqual 018B                            _One_Config1 705A  
                          _One_Config2 7A80                          ?_RemoveSpaces 018B  
                        ReadUSART@data 017C                         One_Config1@pin 0186  
                       One_Config2@pin 0186                      __end_of_OpenUSART 72B4  
                     Send_Config1@data 0187                          ??_Stop_Timer0 017C  
                     Send_Config2@data 0187                           sprintf@width 01B9  
               __size_of_SetMemoryBaud 00E0                             __pbssBANK0 00D9  
                           __pbssBANK1 0100                             __pbssBANK2 0267  
                           __pbssBANK3 0300                             __pbssBANK4 0400  
                            ?_InitUART 0189                            _SendLCDbyte 5D86  
                    __end_of_UseIRCode 6680                    SET_RTC_TIME@SetTime 0184  
          RTC_Clock_Enable@tempSeconds 0186                Multiple_I2C_Read@length 017E  
                   __end_of_LCD_Scroll 4C88                          ??_StringMatch 0180  
                  SetLCDcursor@address 018C                             ??_ISNUMBER 017C  
                            ?_ResetI2C 0001                  WriteEEPROM_1Byte@data 017E  
                      ?_StringContains 017C            __end_of_TXdataBedroomCLOSED ED89  
             __end_of_InternalADC_Read 75B0                    __size_of_BufferCopy 00BC  
        __size_of_RTC_TIME_NONMilitary 006A                          _CheckSum_byte 7616  
                         ??i1_UARTchar 000A            __end_of_TXdataBedroomOPENED ED95  
                        RemoveSpaces@i 0266                                ?___lmul 017C  
                  i1CheckSum_byte@This 0001                                ?___wmul 017C  
                    __end_of_f_Config1 6FE0                      Command@PARITYtemp 05D4  
                           ??_UARTchar 0185                            _SetContrast 62B8  
       I2C_Write_At_Address@I2Caddress 0182                             ??_RTC_INIT 0190  
                              _CCP1CON 000FBD                                _BAUDCON 000FB8  
                 __end_of_SetLCDcursor 7AFE                         ___lmul@product 0184  
                     _ContrastPWM_init 7F86                                _ECCPR1L 000FBB  
                       ??i1_UARTstring 000E                              ?_WriteI2C 0001  
                            ?___ftpack 017C                              ?___lbtoft 0184  
                   __size_of_lowercase 008C                  cleanBuffer16bit@count 017E  
                         ??i1_ClearLCD 000F                  i1CheckSum_byte@Parity 0006  
                            ?___lwtoft 0184                             ??_PWM_init 01BD  
                              i1l11635 78A2                                i1l11645 78B4  
                              i1l11637 78A6                                i1l10781 7F64  
                              i1l10693 79E4                                i1l12631 7954  
                              i1l12623 793E                                i1l13601 63C8  
                              i1l10689 79C8                                i1l13611 63DC  
                              i1l13603 63CC                                i1l13631 6412  
                              i1l13615 63E4                                i1l13607 63D4  
                              i1l12639 7964                                i1l12649 7970  
                              i1l13555 7B08                                i1l13643 642A  
                              i1l13635 641A                                i1l13619 63EC  
                              i1l13645 6430                                i1l13573 7200  
                              i1l13663 6626                                i1l13655 6600  
                              i1l13559 7B20                                i1l13639 6422  
                              i1l13567 71D6                                i1l13575 721A  
                              i1l14711 009E                                i1l13681 6668  
                              i1l13657 6604                                i1l13569 71E6  
                              i1l13577 722E                                i1l14801 02E8  
                              i1l13667 662E                                i1l14651 68C6  
                              i1l14643 68B0                                i1l14803 02F0  
                              i1l14725 00E6                                i1l13679 6662  
                              i1l14639 68A6                                i1l14663 6B14  
                              i1l14831 037C                                i1l14743 0166  
                              i1l14719 00C6                                i1l14673 7D4C  
                              i1l14841 03D2                                i1l14753 019E  
                              i1l14729 00FA                                i1l14659 68FE  
                              i1l14675 7D52                                i1l14667 6B74  
                              i1l14843 03DC                                i1l14747 0170  
                              i1l14685 7332                                i1l14845 03E2  
                              i1l14781 0254                                i1l14765 01FA  
                              i1l14757 01CA                                i1l14855 0432  
                              i1l14791 02A2                                i1l14689 7362  
                              i1l14857 043A                                i1l14793 02C0  
                              i1l14785 0272                                i1l14777 0240  
                       ??_Reset_Timer0 0001              __size_of_GetEnteredNumber 01D6  
                       ??_RemoveSpaces 018D                             ??_ClearLCD 018A  
             Command@RTC_Battery_Value 05CA                         StartsWith@That 017E  
                       StartsWith@This 017C                       i1UARTstring@data 000C  
          __end_of_I2C_Read_At_Address 5824                          UseIRCode@Code 000B  
                              _LCDwait 0109                        ??_READ_RTC_TIME 0186  
                    __end_of_baudUSART 7F5C                    Init_I2C_Master@baud 017E  
               GetMemoryBaud@BaudTempH 019B                 GetMemoryBaud@BaudTempL 019E  
                       lowercase@Input 017C                                _SSPCON1 000FC6  
                              _SSPCON2 000FC5                        ??i1_cleanBuffer 0005  
                            ?_high_isr 0001                                _SSPSTAT 000FC7  
                   __end_ofi1_UARTchar 723E                                _IRfault 002C  
                          ?_StartsWith 017C                       i1_LCDPrintString 7328  
             GetEnteredNumber@negative 0192                             ??_InitUART 018E  
                              _Aux2OFF EDC5                            ?_SprintDate 01BE  
                __end_ofi1_SendLCDbyte 6448                                _IdleI2C 7F0A  
                              _GetBaud 7F1E                              ?_init_LCD 0001  
                     _IsPrintableASCII 7E88                           ??_UARTstring 0189  
                              _Command 0000                                _TXdataD EE65  
                              _TXdataE EE71                                _TXdataF EE7D  
               SetMemoryBaud@BaudTempH 01AB                 SetMemoryBaud@BaudTempL 01AE  
                              _InitApp 773A                    __end_of_Stop_Timer0 7FB2  
                        ?i1_BufferCopy 0009                        SetLCDcursor@Col 018A  
              __size_ofi1_LCDPrintChar 000E                             ??_ResetI2C 0186  
                              _OpenI2C 7DEC                        SetLCDcursor@Row 018B  
                              _SetBaud 4802                     __end_ofi1_ClearLCD 7EE2  
                       InitUART@config 0195                         ?_CheckSum_byte 017C  
                              __Hparam 0000                                _SetFreq 77F0  
                      _GetMemoryParity 7E32                                _SetDuty 6734  
                              __Lparam 0000                                _NowTime 0100  
                        ?_SET_RTC_TIME 0184                    __size_of_Parse_Time 04D2  
                       InitUART@parity 018D                i1CheckSum_byte@Odd_Even 0003  
                    ??_SetMemoryParity 0180                      i1cleanBuffer@data 0001  
                              _Version 03C8                                ___aldiv 5824  
                          _SubLightOFF EE25                                ___awdiv 611A  
                      __size_of___lmul 007A                                ___awmod 6680  
                              ___ftdiv 55A4                                ___lldiv 6448  
                  __end_of_StringMatch 6F66                        __size_of___wmul 0038  
                              ___ftmul 518E                                ___llmod 6932  
                              ___fttol 5452                          _SetMemoryBaud 5F60  
                              ___lwmod 7398                        LCDPrintString@c 018C  
                              __pcinit 6C3E                             ??_WriteI2C 017D  
                              _delayUS 7470                             ??___ftpack 0181  
                           ??___lbtoft 0187                                __ramtop 0D00  
                    SetMemoryBaud@Baud 019F                                __ptext0 33AC  
                              __ptext1 5A70                                __ptext2 7976  
                              __ptext3 7EA0                                __ptext4 7FAE  
                              __ptext5 76DC                                __ptext6 7FB2  
                              __ptext7 7F40                                __ptext8 7F30  
                              __ptext9 74DC                      SetMemoryBaud@Test 01A7  
                           ??___lwtoft 0187                              _T0CONbits 000FD5  
                    GetMemoryBaud@baud 0197                                _readI2C 7E10  
                 __size_ofi1_ReadUSART 0032                      __end_of_hexpowers ED65  
                 __size_ofi1_ReadIRpin 000E                i1SendLCDbyte@LSB_nibble 000E  
                              _init_IR 7976                                _dpowers ED1D  
                         ??_IRrawToNEC 0006                     __end_of_UARTstring 6A7A  
              i1CheckSum_byte@ThisTemp 0004                                _isdigit 7D12  
                     ___awmod@dividend 017C                       ___aldiv@dividend 0182  
                              _low_isr 0018                i1SendLCDbyte@MSB_nibble 000D  
                              _sprintf 270E                             ??_high_isr 016E  
                       __pintcode_body 75B0                   end_of_initialization 6CC6  
                    __end_of_octpowers ED1D                          ??_cleanBuffer 0180  
                           ??_init_LCD 018A                        i1ReadUSART@data 0001  
                            i1u1151_20 433A                      __end_of_lowercase 6D58  
                              int_func 75B0                              i1u1920_20 6B36  
                            i1u1920_27 6B2C                         ??i1_BufferCopy 000F  
                            i1u1930_20 738C                              i1u1922_20 6B66  
                            i1u1930_27 7382                              i1u1922_27 6B5C  
                            i1u1916_20 68F0                              i1u1924_20 6BA2  
                            i1u1916_27 68E6                              i1u1924_27 6B98  
                            i1u1917_20 6920                              i1u1917_27 6916  
                            i1u1928_20 7358                              i1u1928_27 734E  
                 __end_of_Send_Config1 611A                   __end_of_Send_Config2 6E68  
                 GetEnteredNumber@This 0188                __size_ofi1_SetLCDcursor 002E  
                     ??_LCDPrintString 018C                        ___lldiv@divisor 0180  
                       ??_SET_RTC_TIME 018D                   GetEnteredNumber@temp 0193  
        I2C_Read_Sequential@I2Caddress 0183                       _ReadEEPROM_1Byte 7B3C  
                      ___lldiv@counter 0188                       _RTC_Clock_Enable 78DE  
                __size_of_LCDPrintChar 0014                     __end_of_IRrawToNEC 455E  
                            _RCSTAbits 000FAB                       ___aldiv@quotient 018C  
                              postdec1 000FE5                                postdec2 000FDD  
                       ?_SetMemoryBaud 019F                                postinc0 000FEE  
                              postinc2 000FDE                          i1BufferCopy@i 000F  
                    ?i1_PulseEnablePin 0001                     Parse_Time@TempTime 0180  
                            _IRRawCode 0464                __size_of_PulseEnablePin 0032  
                      i1_CheckSum_byte 792A                    __size_of_StartsWith 0094  
                   ??i1_PulseEnablePin 000B                i1LCDPrintChar@character 000F  
                  __size_of_SprintDate 00F2                          ?_Start_Timer0 0001  
                         ??_BufferCopy 018A                 __size_of_GetMemoryBaud 0158  
                            _TRISAbits 000F92                              _TRISBbits 000F93  
                            _TRISCbits 000F94                              _TRISDbits 000F95  
                            _TRISEbits 000F96                         BufferCopy@from 0184  
                   low_isr@TEMP_Rxdata 0060                 __size_of_EEPROM_UNLOCK 0016  
          __end_of_ConfigureOscillator 7FAE                            _Stop_Timer0 7FAE  
                            i1_delayUS 7890                __end_of_GetMemoryParity 7E50  
         __end_of_I2C_Write_At_Address 62B8                           _LCDPrintChar 7EF6  
                 __end_ofi1_UARTstring 6BAA                            ___ftdiv@exp 0195  
                      ??_CheckSum_byte 017F                              _TXSTAbits 000FAC  
            __size_of_cleanBuffer16bit 005E                         __end_of_BedOFF EE15  
                          _StringMatch 6EE8                   __end_of_Reset_Timer0 7FA6  
                  __end_of_cleanBuffer 77F0                         __end_of_Aux2ON EDE5  
                 __end_of_RemoveSpaces 6B14                         __end_of_AuxOFF EDF5  
                __size_of_SetLCDcursor 003E                     __end_of_BufferCopy 65CA  
                          ___ftmul@exp 01A0                      __size_of_ISNUMBER 001E  
                         ?_ReadButton1 0001                    RemoveSpaces@address 0264  
                        ?_Zero_Config1 0001                          ?_Zero_Config2 0001  
                CheckSum_byte@Odd_Even 017E                         __end_of___lmul 714E  
                       __end_of_fanOFF EE55               __size_of_Init_I2C_Master 004E  
                       __end_of___wmul 7BB0            __end_of_I2C_Read_Sequential 5C94  
                       ??_Start_Timer0 017C                       ??_StringAddEqual 018D  
                    _EnableInternalADC 67E6                      __size_of_UARTchar 008C  
                     IRrawToNEC@Invert 0005                      __size_of_RTC_INIT 0010  
          __size_of_LCDdisplayFeedback 0036                      GetEnteredNumber@i 0191  
                   ?_EnableInternalADC 0001                       _GetEnteredNumber 4C88  
                         ??_Parse_Time 017E                    start_initialization 6C3E  
                         ?_One_Config1 0001                           ?_One_Config2 0001  
                            _ReadUSART 7C1A                              _ReadIRpin 7F40  
              __size_of_UARTstringWAIT 0074                  SendLCDbyte@LSB_nibble 0189  
                    __size_of_PWM_init 0030                  CheckSum_byte@ThisTemp 017F  
                    __size_of_ClearLCD 001A                       WriteI2C@data_out 017D  
                SendLCDbyte@MSB_nibble 0188                    ??_EnableInternalADC 017C  
                  i1cleanBuffer16bit@i 0008                             ?i1_delayUS 0001  
         __end_of_TXToiletAlexBathroom ED71                           ?_SendLCDbyte 0186  
                     ??_StringContains 0180               __end_of_ContrastPWM_init 7F92  
                         _SetLCDcursor 7AC0                              _OpenUSART 723E  
                      ___llmod@divisor 018D                      __size_of_InitUART 017E  
                      ___llmod@counter 0191                      i1BufferCopy@count 000D  
                       i1_LCDPrintChar 7F6A                      i1BufferCopy@shift 000E  
                       Command@channel 05DA                              _UseIRCode 65CA  
                        _GetMemoryBaud 52FA                              _Scroll_10 0267  
              __end_ofi1_CheckSum_byte 7976                     SprintDate@Military 01C9  
                      ??_SetMemoryBaud 01A3              StringAddEqual@firstnumber 0264  
                    ?_InternalADC_Read 018B                     __end_of_Parse_Time 3D52  
               i1cleanBuffer16bit@data 0001                      __size_of_ResetI2C 0024  
                       ??_Zero_Config1 0186                         ??_Zero_Config2 0186  
                             ??___lmul 0184                          _EEPROM_UNLOCK 7EB6  
                             ??___wmul 0180                     ??_InternalADC_Read 018D  
            __end_of_EnableInternalADC 688C                           ?_SetContrast 0001  
                          __pdataBANK1 01D3                            __pdataBANK3 03C8  
                        ??_init_Timer0 017C                       __CFG_LPT1OSC$OFF 000000  
           __end_ofi1_cleanBuffer16bit 7A00               __end_ofi1_LCDPrintString 7398  
             __end_of_IsPrintableASCII 7EA0               WriteEEPROM_1Byte@address 017C  
                            _f_Config1 6F66                      __size_of_WriteI2C 006C  
                   SetContrast@tempPR2 01B5                      __size_of___ftpack 0120  
                    __size_of___lbtoft 0030                   __end_ofi1_BufferCopy 6932  
                LCDPrintChar@character 018A                       cleanBuffer@count 017E  
         __end_of_RTC_TIME_NONMilitary 7546                            __pbssCOMRAM 0028  
                           ?_ReadUSART 0001                      __size_of___lwtoft 002C  
                           ?_ReadIRpin 0001                          __pcstackBANK0 0060  
                        __pcstackBANK1 016E                          __pcstackBANK2 0200  
                        __pcstackBANK5 0500                   __end_of_SET_RTC_TIME 4802  
             __size_of_LCDScreenUpdate 04AE                           _isdigit$3120 017D  
                __size_of_Send_Config1 00DA                  __size_of_Send_Config2 0084  
                         ??_StartsWith 0180                              _baudUSART 7F4E  
                   __end_of_SubLightON EE45                           ??_SprintDate 01CA  
                      _SetMemoryParity 7BE6                            _cleanBuffer 7796  
                             ?_IdleI2C 0001                       ?_GetMemoryParity 0001  
                             ?_GetBaud 017C                 __end_ofi1_LCDPrintChar 7F78  
                           ?_OpenUSART 017C                         LCD_Scroll@This 018B  
                    __size_of_high_isr 760E                            sprintf@flag 01BC  
                          sprintf@prec 01B7                               ?_Command 01CA  
                       i1_SetLCDcursor 7D40          I2C_Read_At_Address@I2Caddress 0180  
                             ?_InitApp 0001                      __size_of_init_LCD 011C  
                       ?_GetMemoryBaud 017F                               ?_OpenI2C 017C  
                             ?_SetBaud 01BE                               ?_SetFreq 0190  
                           ?_UseIRCode 000B                               ?_SetDuty 0001  
                SprintDate@DisplayTime 01C0                         ?_EEPROM_UNLOCK 0001  
                            __pintcode 0008                          __pmediumconst ECEC  
                             ?___aldiv 0182                               ?___awdiv 017C  
                            __ptext100 7D40                              __ptext101 7C80  
                            __ptext110 65CA                              __ptext102 7F5C  
                            __ptext111 7890                              __ptext103 7328  
                            __ptext112 7F78                              __ptext104 7F6A  
                            __ptext113 7F9C                              __ptext105 7ECC  
                            __ptext114 7E88                              __ptext106 6380  
                            __ptext115 4200                              __ptext107 7D6E  
                            __ptext108 688C                              __ptext109 7AFE  
                          IRrawToNEC@i 000E                               ?___awmod 017C  
                      _TXdataLabCLOSED EDAD                               ?___ftdiv 0188  
                 cleanBuffer16bit@data 017C                               ?___lldiv 017C  
                             ?___ftmul 0197                               ?___llmod 0189  
                             ?___fttol 01A6                               ?___lwmod 017C  
                       _PulseEnablePin 7C4E                        _TXdataLabOPENED EDB9  
                         UseIRCode@NEC 000D                            __pintcodelo 0018  
                             ?_delayUS 017C                     __end_of_StartsWith 6C3E  
                 _I2C_Write_At_Address 61EA                             ?_f_Config1 0001  
                   __end_of_SprintDate 5D86                               ?_readI2C 0001  
                     RemoveSpaces@That 0200               I2C_Read_Sequential@rdptr 0180  
                     RemoveSpaces@This 018B                               ?_init_IR 0001  
                             _ECCP1CON 000FBA                          IRrawToNEC@NEC 0003  
                         _Send_Config1 6040                           _Send_Config2 6DE4  
                    _WriteEEPROM_1Byte 7A00                               ?_isdigit 0001  
                        IRrawToNEC@Raw 0001                      ??_Init_I2C_Master 017E  
                  __end_of_init_Timer0 7EB6               __end_of_ReadEEPROM_1Byte 7B78  
                             ?_low_isr 0001                     ?_WriteEEPROM_1Byte 017C  
             __end_of_RTC_Clock_Enable 792A                              _hexpowers ED45  
                __end_of_READ_RTC_TIME 5F60                  __size_ofi1_UARTstring 0096  
                             ?_sprintf 0192             UARTchar@NinethBit_override 0183  
                           ?_baudUSART 0001                            ??i1_delayUS 0005  
                           lowercase@i 017F                              delayUS@US 017C  
                __end_ofi1_cleanBuffer 7B3C                 __end_ofi1_SetLCDcursor 7D6E  
                __size_of_Reset_Timer0 000A           __size_of_I2C_Read_At_Address 012E  
                      ___aldiv@divisor 0186                        ?i1_LCDPrintChar 0001  
                       Parse_Time@This 017C                  __size_of_RemoveSpaces 009A  
                  ??_WriteEEPROM_1Byte 017F                        ___aldiv@counter 018A  
                 __end_of_Start_Timer0 7FB6                         ___wmul@product 0180  
                       Parse_Time@temp 017F                       _cleanBuffer16bit 76DC  
                            _octpowers ECED                               _IPR1bits 000F9F  
                             _PIE1bits 000F9D                           cleanBuffer@i 0183  
                          _bufferCount 00DE                               _ISNUMBER 7E50  
           __end_of_TXToiletMyBathroom ED7D                              _lowercase 6CCC  
                             _PIR1bits 000F9E                               _PIR2bits 000FA1  
              GetMemoryBaud@BaudTempMH 019C                GetMemoryBaud@BaudTempML 019D  
                     ?i1_CheckSum_byte 0001                 __end_of_PulseEnablePin 7C80  
                             _RCONbits 000FD0                       __CFG_WDTPS$32768 000000  
           __size_of_EnableInternalADC 00A6                               _UARTchar 6D58  
                             _RTC_INIT 7F30                          ??i1_ReadUSART 0001  
                        ??i1_ReadIRpin 0001                      i1SendLCDbyte@data 000C  
                 __size_of_ReadButton1 000E              ReadEEPROM_1Byte@GIEstatus 017E  
                ?_I2C_Write_At_Address 017E                   _TXToiletAlexBathroom ED65  
            __end_of_WriteEEPROM_1Byte 7A40                 __size_ofi1_SendLCDbyte 00C8  
                    ___wmul@multiplier 017C                           i1_UARTstring 6B14  
                             _IRpinOLD 00DB                               _PWM_init 7CB2  
            EnableInternalADC@channels 017D                              main@count 01D2  
                             _ClearLCD 7E6E                         _UARTstringWAIT 72B4  
                          ??_ReadUSART 017C                            ??_ReadIRpin 017C  
              __end_of_SetMemoryParity 7C1A                           _Reset_Timer0 7F9C  
                      StringAddEqual@i 0265                        StringAddEqual@j 0266  
                         _RemoveSpaces 6A7A                   __size_of_One_Config1 007A  
                 __size_of_One_Config2 0040              __size_ofi1_PulseEnablePin 002E  
                 __end_of_Zero_Config1 705A                   __end_of_Zero_Config2 7A80  
                    ___lmul@multiplier 017C                            _INTCON2bits 000FF1  
                            copy_data0 6C9A                           ?_Stop_Timer0 0001  
                            copy_data1 6CBA                           low_isr@IRpin 00D6  
                      IRrawToNEC@Pause 000C                               _InitUART 5010  
              SetMemoryBaud@BaudTempMH 01AC                SetMemoryBaud@BaudTempML 01AD  
                     OpenI2C@sync_mode 017D                        ?i1_SetLCDcursor 000F  
                          ??_OpenUSART 017E                        IRrawToNEC@first 000D  
                      ??_GetMemoryBaud 0183                      ??_LCDScreenUpdate 018E  
                     __size_of_IdleI2C 0014                       __size_of_GetBaud 0012  
                      OpenUSART@config 017E                  i1SetLCDcursor@address 0011  
                 __size_of_SendLCDbyte 00F0                             _EECON1bits 000FA6  
              __end_of_TXdataLabCLOSED EDB9                               __Hparam1 0000  
                         ?_StringMatch 017C                       __size_of_Command 270E  
             __end_of_GetEnteredNumber 4E5E                        ??_EEPROM_UNLOCK 017C  
                             _ResetI2C 7DC8                       i1BufferCopy@from 0009  
                     __size_of_InitApp 005C                               __Lparam1 0000  
                          ??_UseIRCode 0011                __end_of_TXdataLabOPENED EDC5  
                           ?_lowercase 017C                       __size_of_OpenI2C 0024  
                 _RTC_TIME_NONMilitary 74DC                               _Scroll_1 010E  
                             _Scroll_2 011E                               _Scroll_3 012E  
                             _Scroll_4 013E                               _Scroll_5 014E  
                             _Scroll_6 015E                               _Scroll_7 002D  
                             _Scroll_8 003D                               _Scroll_9 00DF  
                     __size_of_SetBaud 0288                         i1cleanBuffer@i 0008  
                     __size_of_SetFreq 0052                       __size_of_SetDuty 00B2  
                      ?_PulseEnablePin 0001                       __size_of___aldiv 012C  
                   i1cleanBuffer@count 0003                            _NEC_Stored1 0028  
                     __size_of___awdiv 00D0                  __size_ofi1_BufferCopy 00A6  
                     __size_of___awmod 00B4                       __size_of___ftdiv 0152  
                      cleanBuffer@data 017C                       __size_of___lldiv 00C6  
                     __size_of___ftmul 016C                       __size_of___llmod 00A4  
                     __size_of___fttol 0152                            _init_Timer0 7EA0  
                     __size_of___lwmod 006C            I2C_Read_Sequential@Register 017F  
                             _WriteI2C 7404                          SetBaud@Parity 01C2  
                             ___ftpack 5950                               ___lbtoft 7CE2  
                __size_of_SET_RTC_TIME 02A4                   __size_of_SetContrast 00C8  
                     __size_of_delayUS 006C                            ??_f_Config1 0186  
               __end_of_UARTstringWAIT 7328                               ___lwtoft 7D9C  
                           sprintf@idx 01A6                             sprintf@len 01AF  
                           sprintf@val 01B3                       __size_of_readI2C 0022  
                    SET_RTC_TIME@Error 0198                       __size_of_init_IR 0048  
                  __end_ofi1_ReadUSART 7CB2                    __end_ofi1_ReadIRpin 7F6A  
                     __size_of_isdigit 002E                       __size_of_low_isr 04A4  
                        ISNUMBER@ascii 017C                               __ptext10 78DE  
                             __ptext11 56F6                               __ptext20 7FA6  
                             __ptext12 7CB2                               __ptext21 0000  
                             __ptext13 77F0                 LCDdisplayFeedback@Text 018E  
                             __ptext30 6734                               __ptext22 6CCC  
                             __ptext14 5824                               __ptext31 62B8  
                             __ptext23 7D9C                               __ptext15 3D52  
                             __ptext40 7B78                               __ptext32 7CE2  
                             __ptext24 7398                               __ptext16 7EF6  
                             __ptext41 6932                               __ptext33 5452  
                             __ptext25 6EE8                               __ptext17 773A  
                             __ptext50 5010                               __ptext42 72B4  
                             __ptext34 518E                               __ptext26 6E68  
                             __ptext18 67E6                               __ptext51 7F4E  
                             __ptext43 7BE6                               __ptext35 55A4  
                             __ptext27 4E5E                               __ptext19 7F86  
                             __ptext60 6FE0                               __ptext52 6448  
                             __ptext44 7E32                               __ptext36 5950  
                             __ptext28 6BAA                               __ptext61 705A  
                             __ptext53 7C1A                               __ptext45 5F60  
                             __ptext37 4802                               __ptext29 5C94  
                             __ptext70 7DEC                               __ptext62 455E  
                             __ptext54 723E                               __ptext46 7A00  
                             __ptext38 270E                               __ptext71 5B8C  
                             __ptext63 6680                               __ptext55 6DE4  
                             __ptext47 7EB6                               __ptext39 7D12  
                             __ptext80 7E6E                               __ptext72 7404  
                             __ptext64 611A                               __ptext56 7A40  
                             __ptext48 52FA                               __ptext81 5D86  
                             __ptext73 7F0A                               __ptext65 61EA  
                             __ptext57 7A80                               __ptext49 7B3C  
                   READ_RTC_TIME@Error 018D                               __ptext90 7616  
                             __ptext82 7C4E                               __ptext74 767A  
                             __ptext66 6A7A                               __ptext58 6040  
                             __ptext91 7E50                               __ptext83 7470  
                             __ptext75 7E10                               __ptext67 5E76  
                             __ptext59 6F66                               __ptext92 4C88  
                             __ptext84 4A8A                               __ptext76 3880  
                             __ptext68 7DC8                               __ptext93 70D4  
                             __ptext85 650E                               __ptext77 7BB0  
                             __ptext69 7842                               __ptext94 7F1E  
                             __ptext86 7796                               __ptext78 7AC0  
                             __ptext87 7546                               __ptext79 714E  
                             __ptext96 79BE                               __ptext88 69D6  
                             __ptext97 6B14                               __ptext89 6D58  
                             __ptext98 71C6                               __ptext99 792A  
                        SetBaud@status 0232                               _high_isr 0008  
                          ??_baudUSART 017C                       __size_of_sprintf 0C9E  
                 IsPrintableASCII@data 0001                              low_isr@rx 00D8  
                             _init_LCD 5A70                      ?_ContrastPWM_init 0001  
                        i1_SendLCDbyte 6380          RTC_TIME_NONMilitary@temphours 0189  
                        __size_of_main 04D4                               delayUS@i 0181  
                             delayUS@j 0185                     ??_ContrastPWM_init 01BD  
                         i1_BufferCopy 688C           __size_of_ConfigureOscillator 0008  
                __end_of_CheckSum_byte 767A                  ?_RTC_TIME_NONMilitary 0001  
                         _SET_RTC_TIME 455E                         CheckSum_byte@i 0182  
                    _Multiple_I2C_Read 767A                           BufferCopy@to 0186  
               ??_I2C_Write_At_Address 0180                             _LCD_Scroll 4A8A  
           __end_of_LCDdisplayFeedback 7BE6                     ?_Multiple_I2C_Read 017C  
                    ?i1_LCDPrintString 000F                     main@MemoryBurnflag 01CC  
           __size_of_WriteEEPROM_1Byte 0040                __size_of_LCDPrintString 0078  
         I2C_Write_At_Address@Register 017E                      ?_IsPrintableASCII 0001  
                      ?_UARTstringWAIT 0187                    CheckSum_byte@Parity 0181  
                   ??i1_LCDPrintString 0011                           Command@Input 01CA  
                           _INTCONbits 000FF2                     ??_IsPrintableASCII 0001  
            __size_of_InternalADC_Read 006A                    ??_Multiple_I2C_Read 017F  
                       OpenUSART@spbrg 017C                       ?_SetMemoryParity 0001  
         __size_of_I2C_Read_Sequential 0108                           UARTchar@data 0186  
                      StringMatch@That 017E                        StringMatch@This 017C  
         i1UARTchar@NinethBit_override 0008                               isdigit@c 017E  
Command@RTC_Battery_Value_HIGH_decimal 05CC                     i1_cleanBuffer16bit 79BE  
                __size_of_Start_Timer0 0004                  GetMemoryParity@Parity 017F  
                             intlevel1 0000                               intlevel2 0000  
               i1SendLCDbyte@isCommand 000B                              sprintf@ap 01B1  
                            sprintf@cp 01A7                              sprintf@sp 0192  
                         ?_cleanBuffer 017C                         ?i1_SendLCDbyte 000B  
                  _TXdataBedroomCLOSED ED7D                       ___lwmod@dividend 017C  
                     SET_RTC_TIME@temp 0191                       ___lldiv@dividend 017C  
                    _TXdataFrontCLOSED ED95                  SetMemoryParity@Parity 0181  
                  ?i1_cleanBuffer16bit 0001                    _TXdataBedroomOPENED ED89  
                    READ_RTC_TIME@temp 0186                               low_isr@i 00D4  
                             low_isr@j 00D7                      _TXdataFrontOPENED EDA1  
                          _IR_New_Code 00F3                            ??_lowercase 017E  
            __end_of_Multiple_I2C_Read 76DC                             i1_UARTchar 71C6  
                          BufferCopy@i 018A                  __end_of_SetMemoryBaud 6040  
                      _Init_I2C_Master 7842                            i1_ReadUSART 7C80  
                          i1_ReadIRpin 7F5C                    _I2C_Read_At_Address 56F6  
                       i1BufferCopy@to 000B                            Command@duty 05DC  
                 ??i1_cleanBuffer16bit 0005                             i1_ClearLCD 7ECC  
                         _Start_Timer0 7FB2                               sprintf@c 01BB  
             __end_of_cleanBuffer16bit 773A                               sprintf@f 0194  
            RTC_TIME_NONMilitary@Error 0187                       ___lldiv@quotient 0184  
                __size_of_Zero_Config1 007A                  __size_of_Zero_Config2 0040  
                      ___lwmod@divisor 017E                        ___lwmod@counter 0180  
                         ___aldiv@sign 018B                      ?_ReadEEPROM_1Byte 017C  
            I2C_Read_Sequential@length 0182                            _SSPCON1bits 000FC6  
                     ??i1_LCDPrintChar 000F                            _SSPCON2bits 000FC5  
                _ScrollDisplayPosition 010B                      ?_RTC_Clock_Enable 0001  
                     i1_PulseEnablePin 7D6E                      CheckSum_byte@This 017C  
              __size_of_StringAddEqual 01B2                         i1UARTchar@data 000B  
                           Command@buf 0500                     ??_ReadEEPROM_1Byte 017E  
            __end_of_TXdataFrontCLOSED EDA1                     ??_RTC_Clock_Enable 0186  
                  SetMemoryParity@Test 0180                   ?_I2C_Read_At_Address 017E  
                 SendLCDbyte@isCommand 0186              __end_of_TXdataFrontOPENED EDAD  
                 __size_of_Stop_Timer0 0004                      i1SetLCDcursor@Col 000F  
                           _UARTstring 69D6                      i1SetLCDcursor@Row 0010  
               ??_RTC_TIME_NONMilitary 0186                           _USART_Status 010D  
                      BufferCopy@count 0188                   __size_of_StringMatch 007E  
