

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Feb 05 19:56:24 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4685
     2                           	fnconf	param1,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	idataBANK2,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    16                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   126                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   127                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   128                           	psect	param1,global,class=BANK1,space=1,delta=1
   129  0000                     
   130                           	psect	idataBANK1
   131  000742                     __pidataBANK1:
   132                           	opt stack 0
   133                           
   134                           ;initializer for _BAUD
   135  000742  2580               	dw	9600
   136  000744  0000               	dw	0
   137                           
   138                           ;initializer for _LCDclearCount
   139  000746  61A8               	dw	25000
   140  000748  0000               	dw	0
   141                           
   142                           	psect	idataBANK2
   143  0006AA                     __pidataBANK2:
   144                           	opt stack 0
   145                           
   146                           ;initializer for _Version
   147  0006AA  31                 	db	49
   148  0006AB  2E                 	db	46
   149  0006AC  30                 	db	48
   150  0006AD  5F                 	db	95
   151  0006AE  44                 	db	68
   152  0006AF  57                 	db	87
   153  0006B0  30                 	db	48
   154  0006B1  00                 	db	0
   155  0006B2  00                 	db	0
   156  0006B3  00                 	db	0
   157  0006B4  00                 	db	0
   158  0006B5  00                 	db	0
   159  0006B6  00                 	db	0
   160  0006B7  00                 	db	0
   161  0006B8  00                 	db	0
   162  0006B9  00                 	db	0
   163  0006BA  00                 	db	0
   164  0006BB  00                 	db	0
   165  0006BC  00                 	db	0
   166  0006BD  00                 	db	0
   167                           
   168                           	psect	mediumconst
   169  00ECEC                     __pmediumconst:
   170                           	opt stack 0
   171  00ECEC  00                 	db	0
   172  00ECED                     _octpowers:
   173                           	opt stack 0
   174  00ECED  0001               	dw	1
   175  00ECEF  0000               	dw	0
   176  00ECF1  0008               	dw	8
   177  00ECF3  0000               	dw	0
   178  00ECF5  0040               	dw	64
   179  00ECF7  0000               	dw	0
   180  00ECF9  0200               	dw	512
   181  00ECFB  0000               	dw	0
   182  00ECFD  1000               	dw	4096
   183  00ECFF  0000               	dw	0
   184  00ED01  8000               	dw	32768
   185  00ED03  0000               	dw	0
   186  00ED05  0000               	dw	0
   187  00ED07  0004               	dw	4
   188  00ED09  0000               	dw	0
   189  00ED0B  0020               	dw	32
   190  00ED0D  0000               	dw	0
   191  00ED0F  0100               	dw	256
   192  00ED11  0000               	dw	0
   193  00ED13  0800               	dw	2048
   194  00ED15  0000               	dw	0
   195  00ED17  4000               	dw	16384
   196  00ED19  0000               	dw	0
   197  00ED1B  0000               	dw	0
   198  00ED1D                     __end_of_octpowers:
   199                           	opt stack 0
   200  00ED1D                     _dpowers:
   201                           	opt stack 0
   202  00ED1D  0001               	dw	1
   203  00ED1F  0000               	dw	0
   204  00ED21  000A               	dw	10
   205  00ED23  0000               	dw	0
   206  00ED25  0064               	dw	100
   207  00ED27  0000               	dw	0
   208  00ED29  03E8               	dw	1000
   209  00ED2B  0000               	dw	0
   210  00ED2D  2710               	dw	10000
   211  00ED2F  0000               	dw	0
   212  00ED31  86A0               	dw	34464
   213  00ED33  0001               	dw	1
   214  00ED35  4240               	dw	16960
   215  00ED37  000F               	dw	15
   216  00ED39  9680               	dw	38528
   217  00ED3B  0098               	dw	152
   218  00ED3D  E100               	dw	57600
   219  00ED3F  05F5               	dw	1525
   220  00ED41  CA00               	dw	51712
   221  00ED43  3B9A               	dw	15258
   222  00ED45                     __end_of_dpowers:
   223                           	opt stack 0
   224  00ED45                     _hexpowers:
   225                           	opt stack 0
   226  00ED45  0001               	dw	1
   227  00ED47  0000               	dw	0
   228  00ED49  0010               	dw	16
   229  00ED4B  0000               	dw	0
   230  00ED4D  0100               	dw	256
   231  00ED4F  0000               	dw	0
   232  00ED51  1000               	dw	4096
   233  00ED53  0000               	dw	0
   234  00ED55  0000               	dw	0
   235  00ED57  0001               	dw	1
   236  00ED59  0000               	dw	0
   237  00ED5B  0010               	dw	16
   238  00ED5D  0000               	dw	0
   239  00ED5F  0100               	dw	256
   240  00ED61  0000               	dw	0
   241  00ED63  1000               	dw	4096
   242  00ED65                     __end_of_hexpowers:
   243                           	opt stack 0
   244  00ED65                     _TXToiletAlexBathroom:
   245                           	opt stack 0
   246  00ED65  00                 	db	0
   247  00ED66  00                 	db	0
   248  00ED67  00                 	db	0
   249  00ED68  00                 	db	0
   250  00ED69  00                 	db	0
   251  00ED6A  00                 	db	0
   252  00ED6B  00                 	db	0
   253  00ED6C  00                 	db	0
   254  00ED6D  00                 	db	0
   255  00ED6E  00                 	db	0
   256  00ED6F  00                 	db	0
   257  00ED70  02                 	db	2
   258  00ED71                     __end_of_TXToiletAlexBathroom:
   259                           	opt stack 0
   260  00ED71                     _TXToiletMyBathroom:
   261                           	opt stack 0
   262  00ED71  00                 	db	0
   263  00ED72  00                 	db	0
   264  00ED73  00                 	db	0
   265  00ED74  00                 	db	0
   266  00ED75  00                 	db	0
   267  00ED76  00                 	db	0
   268  00ED77  00                 	db	0
   269  00ED78  00                 	db	0
   270  00ED79  00                 	db	0
   271  00ED7A  00                 	db	0
   272  00ED7B  00                 	db	0
   273  00ED7C  01                 	db	1
   274  00ED7D                     __end_of_TXToiletMyBathroom:
   275                           	opt stack 0
   276  00ED7D                     _TXdataBedroomCLOSED:
   277                           	opt stack 0
   278  00ED7D  00                 	db	0
   279  00ED7E  00                 	db	0
   280  00ED7F  00                 	db	0
   281  00ED80  00                 	db	0
   282  00ED81  00                 	db	0
   283  00ED82  00                 	db	0
   284  00ED83  00                 	db	0
   285  00ED84  00                 	db	0
   286  00ED85  00                 	db	0
   287  00ED86  01                 	db	1
   288  00ED87  00                 	db	0
   289  00ED88  00                 	db	0
   290  00ED89                     __end_of_TXdataBedroomCLOSED:
   291                           	opt stack 0
   292  00ED89                     _TXdataBedroomOPENED:
   293                           	opt stack 0
   294  00ED89  00                 	db	0
   295  00ED8A  00                 	db	0
   296  00ED8B  00                 	db	0
   297  00ED8C  00                 	db	0
   298  00ED8D  00                 	db	0
   299  00ED8E  00                 	db	0
   300  00ED8F  00                 	db	0
   301  00ED90  00                 	db	0
   302  00ED91  00                 	db	0
   303  00ED92  02                 	db	2
   304  00ED93  00                 	db	0
   305  00ED94  00                 	db	0
   306  00ED95                     __end_of_TXdataBedroomOPENED:
   307                           	opt stack 0
   308  00ED95                     _TXdataFrontCLOSED:
   309                           	opt stack 0
   310  00ED95  00                 	db	0
   311  00ED96  00                 	db	0
   312  00ED97  00                 	db	0
   313  00ED98  00                 	db	0
   314  00ED99  00                 	db	0
   315  00ED9A  00                 	db	0
   316  00ED9B  00                 	db	0
   317  00ED9C  00                 	db	0
   318  00ED9D  00                 	db	0
   319  00ED9E  00                 	db	0
   320  00ED9F  02                 	db	2
   321  00EDA0  00                 	db	0
   322  00EDA1                     __end_of_TXdataFrontCLOSED:
   323                           	opt stack 0
   324  00EDA1                     _TXdataFrontOPENED:
   325                           	opt stack 0
   326  00EDA1  00                 	db	0
   327  00EDA2  00                 	db	0
   328  00EDA3  00                 	db	0
   329  00EDA4  00                 	db	0
   330  00EDA5  00                 	db	0
   331  00EDA6  00                 	db	0
   332  00EDA7  00                 	db	0
   333  00EDA8  00                 	db	0
   334  00EDA9  00                 	db	0
   335  00EDAA  00                 	db	0
   336  00EDAB  01                 	db	1
   337  00EDAC  00                 	db	0
   338  00EDAD                     __end_of_TXdataFrontOPENED:
   339                           	opt stack 0
   340  00EDAD                     _TXdataLabCLOSED:
   341                           	opt stack 0
   342  00EDAD  00                 	db	0
   343  00EDAE  00                 	db	0
   344  00EDAF  00                 	db	0
   345  00EDB0  00                 	db	0
   346  00EDB1  00                 	db	0
   347  00EDB2  00                 	db	0
   348  00EDB3  00                 	db	0
   349  00EDB4  00                 	db	0
   350  00EDB5  02                 	db	2
   351  00EDB6  00                 	db	0
   352  00EDB7  00                 	db	0
   353  00EDB8  00                 	db	0
   354  00EDB9                     __end_of_TXdataLabCLOSED:
   355                           	opt stack 0
   356  00EDB9                     _TXdataLabOPENED:
   357                           	opt stack 0
   358  00EDB9  00                 	db	0
   359  00EDBA  00                 	db	0
   360  00EDBB  00                 	db	0
   361  00EDBC  00                 	db	0
   362  00EDBD  00                 	db	0
   363  00EDBE  00                 	db	0
   364  00EDBF  00                 	db	0
   365  00EDC0  00                 	db	0
   366  00EDC1  01                 	db	1
   367  00EDC2  00                 	db	0
   368  00EDC3  00                 	db	0
   369  00EDC4  00                 	db	0
   370  00EDC5                     __end_of_TXdataLabOPENED:
   371                           	opt stack 0
   372  00EDC5                     _Aux2OFF:
   373                           	opt stack 0
   374  00EDC5  00                 	db	0
   375  00EDC6  01                 	db	1
   376  00EDC7  01                 	db	1
   377  00EDC8  00                 	db	0
   378  00EDC9  01                 	db	1
   379  00EDCA  00                 	db	0
   380  00EDCB  00                 	db	0
   381  00EDCC  00                 	db	0
   382  00EDCD  00                 	db	0
   383  00EDCE  00                 	db	0
   384  00EDCF  00                 	db	0
   385  00EDD0  01                 	db	1
   386  00EDD1  00                 	db	0
   387  00EDD2  00                 	db	0
   388  00EDD3  00                 	db	0
   389  00EDD4  01                 	db	1
   390  00EDD5                     __end_of_Aux2OFF:
   391                           	opt stack 0
   392  00EDD5                     _Aux2ON:
   393                           	opt stack 0
   394  00EDD5  00                 	db	0
   395  00EDD6  01                 	db	1
   396  00EDD7  01                 	db	1
   397  00EDD8  00                 	db	0
   398  00EDD9  01                 	db	1
   399  00EDDA  00                 	db	0
   400  00EDDB  00                 	db	0
   401  00EDDC  00                 	db	0
   402  00EDDD  00                 	db	0
   403  00EDDE  00                 	db	0
   404  00EDDF  01                 	db	1
   405  00EDE0  00                 	db	0
   406  00EDE1  00                 	db	0
   407  00EDE2  00                 	db	0
   408  00EDE3  00                 	db	0
   409  00EDE4  01                 	db	1
   410  00EDE5                     __end_of_Aux2ON:
   411                           	opt stack 0
   412  00EDE5                     _AuxOFF:
   413                           	opt stack 0
   414  00EDE5  00                 	db	0
   415  00EDE6  01                 	db	1
   416  00EDE7  01                 	db	1
   417  00EDE8  00                 	db	0
   418  00EDE9  01                 	db	1
   419  00EDEA  00                 	db	0
   420  00EDEB  01                 	db	1
   421  00EDEC  00                 	db	0
   422  00EDED  00                 	db	0
   423  00EDEE  00                 	db	0
   424  00EDEF  00                 	db	0
   425  00EDF0  00                 	db	0
   426  00EDF1  00                 	db	0
   427  00EDF2  00                 	db	0
   428  00EDF3  00                 	db	0
   429  00EDF4  00                 	db	0
   430  00EDF5                     __end_of_AuxOFF:
   431                           	opt stack 0
   432  00EDF5                     _AuxON:
   433                           	opt stack 0
   434  00EDF5  00                 	db	0
   435  00EDF6  01                 	db	1
   436  00EDF7  01                 	db	1
   437  00EDF8  00                 	db	0
   438  00EDF9  01                 	db	1
   439  00EDFA  00                 	db	0
   440  00EDFB  00                 	db	0
   441  00EDFC  01                 	db	1
   442  00EDFD  00                 	db	0
   443  00EDFE  00                 	db	0
   444  00EDFF  00                 	db	0
   445  00EE00  00                 	db	0
   446  00EE01  00                 	db	0
   447  00EE02  00                 	db	0
   448  00EE03  00                 	db	0
   449  00EE04  00                 	db	0
   450  00EE05                     __end_of_AuxON:
   451                           	opt stack 0
   452  00EE05                     _BedOFF:
   453                           	opt stack 0
   454  00EE05  00                 	db	0
   455  00EE06  01                 	db	1
   456  00EE07  01                 	db	1
   457  00EE08  00                 	db	0
   458  00EE09  01                 	db	1
   459  00EE0A  00                 	db	0
   460  00EE0B  00                 	db	0
   461  00EE0C  00                 	db	0
   462  00EE0D  00                 	db	0
   463  00EE0E  01                 	db	1
   464  00EE0F  00                 	db	0
   465  00EE10  00                 	db	0
   466  00EE11  00                 	db	0
   467  00EE12  00                 	db	0
   468  00EE13  00                 	db	0
   469  00EE14  00                 	db	0
   470  00EE15                     __end_of_BedOFF:
   471                           	opt stack 0
   472  00EE15                     _BedON:
   473                           	opt stack 0
   474  00EE15  00                 	db	0
   475  00EE16  01                 	db	1
   476  00EE17  01                 	db	1
   477  00EE18  00                 	db	0
   478  00EE19  01                 	db	1
   479  00EE1A  00                 	db	0
   480  00EE1B  00                 	db	0
   481  00EE1C  00                 	db	0
   482  00EE1D  01                 	db	1
   483  00EE1E  00                 	db	0
   484  00EE1F  00                 	db	0
   485  00EE20  00                 	db	0
   486  00EE21  00                 	db	0
   487  00EE22  00                 	db	0
   488  00EE23  00                 	db	0
   489  00EE24  00                 	db	0
   490  00EE25                     __end_of_BedON:
   491                           	opt stack 0
   492  00EE25                     _SubLightOFF:
   493                           	opt stack 0
   494  00EE25  00                 	db	0
   495  00EE26  01                 	db	1
   496  00EE27  01                 	db	1
   497  00EE28  00                 	db	0
   498  00EE29  01                 	db	1
   499  00EE2A  00                 	db	0
   500  00EE2B  00                 	db	0
   501  00EE2C  00                 	db	0
   502  00EE2D  00                 	db	0
   503  00EE2E  00                 	db	0
   504  00EE2F  00                 	db	0
   505  00EE30  01                 	db	1
   506  00EE31  00                 	db	0
   507  00EE32  01                 	db	1
   508  00EE33  00                 	db	0
   509  00EE34  00                 	db	0
   510  00EE35                     __end_of_SubLightOFF:
   511                           	opt stack 0
   512  00EE35                     _SubLightON:
   513                           	opt stack 0
   514  00EE35  00                 	db	0
   515  00EE36  01                 	db	1
   516  00EE37  01                 	db	1
   517  00EE38  00                 	db	0
   518  00EE39  01                 	db	1
   519  00EE3A  00                 	db	0
   520  00EE3B  00                 	db	0
   521  00EE3C  00                 	db	0
   522  00EE3D  00                 	db	0
   523  00EE3E  00                 	db	0
   524  00EE3F  01                 	db	1
   525  00EE40  00                 	db	0
   526  00EE41  00                 	db	0
   527  00EE42  01                 	db	1
   528  00EE43  00                 	db	0
   529  00EE44  00                 	db	0
   530  00EE45                     __end_of_SubLightON:
   531                           	opt stack 0
   532  00EE45                     _fanOFF:
   533                           	opt stack 0
   534  00EE45  00                 	db	0
   535  00EE46  01                 	db	1
   536  00EE47  01                 	db	1
   537  00EE48  00                 	db	0
   538  00EE49  01                 	db	1
   539  00EE4A  00                 	db	0
   540  00EE4B  00                 	db	0
   541  00EE4C  00                 	db	0
   542  00EE4D  00                 	db	0
   543  00EE4E  00                 	db	0
   544  00EE4F  00                 	db	0
   545  00EE50  01                 	db	1
   546  00EE51  00                 	db	0
   547  00EE52  00                 	db	0
   548  00EE53  00                 	db	0
   549  00EE54  00                 	db	0
   550  00EE55                     __end_of_fanOFF:
   551                           	opt stack 0
   552  00EE55                     _fanON:
   553                           	opt stack 0
   554  00EE55  00                 	db	0
   555  00EE56  01                 	db	1
   556  00EE57  01                 	db	1
   557  00EE58  00                 	db	0
   558  00EE59  01                 	db	1
   559  00EE5A  00                 	db	0
   560  00EE5B  00                 	db	0
   561  00EE5C  00                 	db	0
   562  00EE5D  00                 	db	0
   563  00EE5E  00                 	db	0
   564  00EE5F  01                 	db	1
   565  00EE60  00                 	db	0
   566  00EE61  00                 	db	0
   567  00EE62  00                 	db	0
   568  00EE63  00                 	db	0
   569  00EE64  00                 	db	0
   570  00EE65                     __end_of_fanON:
   571                           	opt stack 0
   572  00EE65                     _TXdataD:
   573                           	opt stack 0
   574  00EE65  02                 	db	2
   575  00EE66  02                 	db	2
   576  00EE67  02                 	db	2
   577  00EE68  02                 	db	2
   578  00EE69  02                 	db	2
   579  00EE6A  02                 	db	2
   580  00EE6B  00                 	db	0
   581  00EE6C  00                 	db	0
   582  00EE6D  01                 	db	1
   583  00EE6E  00                 	db	0
   584  00EE6F  00                 	db	0
   585  00EE70  00                 	db	0
   586  00EE71                     __end_of_TXdataD:
   587                           	opt stack 0
   588  00EE71                     _TXdataE:
   589                           	opt stack 0
   590  00EE71  00                 	db	0
   591  00EE72  02                 	db	2
   592  00EE73  02                 	db	2
   593  00EE74  02                 	db	2
   594  00EE75  02                 	db	2
   595  00EE76  02                 	db	2
   596  00EE77  00                 	db	0
   597  00EE78  00                 	db	0
   598  00EE79  01                 	db	1
   599  00EE7A  00                 	db	0
   600  00EE7B  00                 	db	0
   601  00EE7C  00                 	db	0
   602  00EE7D                     __end_of_TXdataE:
   603                           	opt stack 0
   604  00EE7D                     _TXdataF:
   605                           	opt stack 0
   606  00EE7D  02                 	db	2
   607  00EE7E  00                 	db	0
   608  00EE7F  02                 	db	2
   609  00EE80  02                 	db	2
   610  00EE81  02                 	db	2
   611  00EE82  02                 	db	2
   612  00EE83  00                 	db	0
   613  00EE84  00                 	db	0
   614  00EE85  01                 	db	1
   615  00EE86  00                 	db	0
   616  00EE87  00                 	db	0
   617  00EE88  00                 	db	0
   618  00EE89                     __end_of_TXdataF:
   619                           	opt stack 0
   620  0000                     _ADCON0	set	4034
   621  0000                     _ADCON1	set	4033
   622  0000                     _ADCON2	set	4032
   623  0000                     _ADRESH	set	4036
   624  0000                     _ADRESL	set	4035
   625  0000                     _BAUDCON	set	4024
   626  0000                     _CCP1CON	set	4029
   627  0000                     _CCPR1L	set	4030
   628  0000                     _ECCP1CON	set	4026
   629  0000                     _ECCPR1L	set	4027
   630  0000                     _EEADR	set	4009
   631  0000                     _EEADRH	set	4010
   632  0000                     _EECON1bits	set	4006
   633  0000                     _EECON2	set	4007
   634  0000                     _EEDATA	set	4008
   635  0000                     _INTCONbits	set	4082
   636  0000                     _IPR1bits	set	3999
   637  0000                     _LATA	set	3977
   638  0000                     _LATC	set	3979
   639  0000                     _LATD	set	3980
   640  0000                     _LATE	set	3981
   641  0000                     _OSCCON	set	4051
   642  0000                     _PIE1	set	3997
   643  0000                     _PIE1bits	set	3997
   644  0000                     _PIR1bits	set	3998
   645  0000                     _PIR2bits	set	4001
   646  0000                     _PR2	set	4043
   647  0000                     _RCONbits	set	4048
   648  0000                     _RCREG	set	4014
   649  0000                     _RCSTA	set	4011
   650  0000                     _RCSTAbits	set	4011
   651  0000                     _SPBRG	set	4015
   652  0000                     _SPBRGH	set	4016
   653  0000                     _SSPADD	set	4040
   654  0000                     _SSPBUF	set	4041
   655  0000                     _SSPCON1	set	4038
   656  0000                     _SSPCON1bits	set	4038
   657  0000                     _SSPCON2	set	4037
   658  0000                     _SSPCON2bits	set	4037
   659  0000                     _SSPSTAT	set	4039
   660  0000                     _SSPSTATbits	set	4039
   661  0000                     _T2CON	set	4042
   662  0000                     _TRISAbits	set	3986
   663  0000                     _TRISCbits	set	3988
   664  0000                     _TRISDbits	set	3989
   665  0000                     _TRISEbits	set	3990
   666  0000                     _TXREG	set	4013
   667  0000                     _TXSTA	set	4012
   668  0000                     _TXSTAbits	set	4012
   669  00EE89                     __stringdata:
   670                           	opt stack 0
   671  00EE89                     STR_213:
   672  00EE89  54                 	db	84	;'T'
   673  00EE8A  6F                 	db	111	;'o'
   674  00EE8B  20                 	db	32
   675  00EE8C  72                 	db	114	;'r'
   676  00EE8D  65                 	db	101	;'e'
   677  00EE8E  61                 	db	97	;'a'
   678  00EE8F  64                 	db	100	;'d'
   679  00EE90  20                 	db	32
   680  00EE91  61                 	db	97	;'a'
   681  00EE92  6E                 	db	110	;'n'
   682  00EE93  64                 	db	100	;'d'
   683  00EE94  20                 	db	32
   684  00EE95  61                 	db	97	;'a'
   685  00EE96  64                 	db	100	;'d'
   686  00EE97  63                 	db	99	;'c'
   687  00EE98  20                 	db	32
   688  00EE99  63                 	db	99	;'c'
   689  00EE9A  68                 	db	104	;'h'
   690  00EE9B  61                 	db	97	;'a'
   691  00EE9C  6E                 	db	110	;'n'
   692  00EE9D  6E                 	db	110	;'n'
   693  00EE9E  65                 	db	101	;'e'
   694  00EE9F  6C                 	db	108	;'l'
   695  00EEA0  2C                 	db	44
   696  00EEA1  20                 	db	32
   697  00EEA2  74                 	db	116	;'t'
   698  00EEA3  79                 	db	121	;'y'
   699  00EEA4  70                 	db	112	;'p'
   700  00EEA5  65                 	db	101	;'e'
   701  00EEA6  20                 	db	32
   702  00EEA7  74                 	db	116	;'t'
   703  00EEA8  68                 	db	104	;'h'
   704  00EEA9  65                 	db	101	;'e'
   705  00EEAA  20                 	db	32
   706  00EEAB  63                 	db	99	;'c'
   707  00EEAC  6F                 	db	111	;'o'
   708  00EEAD  6D                 	db	109	;'m'
   709  00EEAE  6D                 	db	109	;'m'
   710  00EEAF  61                 	db	97	;'a'
   711  00EEB0  6E                 	db	110	;'n'
   712  00EEB1  64                 	db	100	;'d'
   713  00EEB2  0D                 	db	13
   714  00EEB3  0A                 	db	10
   715  00EEB4  20                 	db	32
   716  00EEB5  41                 	db	65	;'A'
   717  00EEB6  44                 	db	68	;'D'
   718  00EEB7  43                 	db	67	;'C'
   719  00EEB8  20                 	db	32
   720  00EEB9  66                 	db	102	;'f'
   721  00EEBA  6F                 	db	111	;'o'
   722  00EEBB  6C                 	db	108	;'l'
   723  00EEBC  6C                 	db	108	;'l'
   724  00EEBD  6F                 	db	111	;'o'
   725  00EEBE  77                 	db	119	;'w'
   726  00EEBF  65                 	db	101	;'e'
   727  00EEC0  64                 	db	100	;'d'
   728  00EEC1  20                 	db	32
   729  00EEC2  62                 	db	98	;'b'
   730  00EEC3  79                 	db	121	;'y'
   731  00EEC4  20                 	db	32
   732  00EEC5  27                 	db	39
   733  00EEC6  43                 	db	67	;'C'
   734  00EEC7  68                 	db	104	;'h'
   735  00EEC8  61                 	db	97	;'a'
   736  00EEC9  6E                 	db	110	;'n'
   737  00EECA  6E                 	db	110	;'n'
   738  00EECB  65                 	db	101	;'e'
   739  00EECC  6C                 	db	108	;'l'
   740  00EECD  27                 	db	39
   741  00EECE  20                 	db	32
   742  00EECF  0D                 	db	13
   743  00EED0  0A                 	db	10
   744  00EED1  00                 	db	0
   745  00EED2                     STR_245:
   746  00EED2  54                 	db	84	;'T'
   747  00EED3  6F                 	db	111	;'o'
   748  00EED4  20                 	db	32
   749  00EED5  63                 	db	99	;'c'
   750  00EED6  6F                 	db	111	;'o'
   751  00EED7  6D                 	db	109	;'m'
   752  00EED8  6D                 	db	109	;'m'
   753  00EED9  61                 	db	97	;'a'
   754  00EEDA  6E                 	db	110	;'n'
   755  00EEDB  64                 	db	100	;'d'
   756  00EEDC  20                 	db	32
   757  00EEDD  74                 	db	116	;'t'
   758  00EEDE  68                 	db	104	;'h'
   759  00EEDF  65                 	db	101	;'e'
   760  00EEE0  20                 	db	32
   761  00EEE1  52                 	db	82	;'R'
   762  00EEE2  54                 	db	84	;'T'
   763  00EEE3  43                 	db	67	;'C'
   764  00EEE4  2C                 	db	44
   765  00EEE5  20                 	db	32
   766  00EEE6  74                 	db	116	;'t'
   767  00EEE7  79                 	db	121	;'y'
   768  00EEE8  70                 	db	112	;'p'
   769  00EEE9  65                 	db	101	;'e'
   770  00EEEA  20                 	db	32
   771  00EEEB  74                 	db	116	;'t'
   772  00EEEC  68                 	db	104	;'h'
   773  00EEED  65                 	db	101	;'e'
   774  00EEEE  20                 	db	32
   775  00EEEF  61                 	db	97	;'a'
   776  00EEF0  63                 	db	99	;'c'
   777  00EEF1  74                 	db	116	;'t'
   778  00EEF2  69                 	db	105	;'i'
   779  00EEF3  6F                 	db	111	;'o'
   780  00EEF4  6E                 	db	110	;'n'
   781  00EEF5  0D                 	db	13
   782  00EEF6  0A                 	db	10
   783  00EEF7  20                 	db	32
   784  00EEF8  66                 	db	102	;'f'
   785  00EEF9  6F                 	db	111	;'o'
   786  00EEFA  6C                 	db	108	;'l'
   787  00EEFB  6C                 	db	108	;'l'
   788  00EEFC  6F                 	db	111	;'o'
   789  00EEFD  77                 	db	119	;'w'
   790  00EEFE  65                 	db	101	;'e'
   791  00EEFF  64                 	db	100	;'d'
   792  00EF00  20                 	db	32
   793  00EF01  62                 	db	98	;'b'
   794  00EF02  79                 	db	121	;'y'
   795  00EF03  20                 	db	32
   796  00EF04  74                 	db	116	;'t'
   797  00EF05  68                 	db	104	;'h'
   798  00EF06  65                 	db	101	;'e'
   799  00EF07  20                 	db	32
   800  00EF08  70                 	db	112	;'p'
   801  00EF09  61                 	db	97	;'a'
   802  00EF0A  72                 	db	114	;'r'
   803  00EF0B  61                 	db	97	;'a'
   804  00EF0C  6D                 	db	109	;'m'
   805  00EF0D  65                 	db	101	;'e'
   806  00EF0E  74                 	db	116	;'t'
   807  00EF0F  65                 	db	101	;'e'
   808  00EF10  72                 	db	114	;'r'
   809  00EF11  73                 	db	115	;'s'
   810  00EF12  20                 	db	32
   811  00EF13  0D                 	db	13
   812  00EF14  0A                 	db	10
   813  00EF15  0A                 	db	10
   814  00EF16  00                 	db	0
   815  00EF17                     STR_64:
   816  00EF17  54                 	db	84	;'T'
   817  00EF18  6F                 	db	111	;'o'
   818  00EF19  20                 	db	32
   819  00EF1A  63                 	db	99	;'c'
   820  00EF1B  6F                 	db	111	;'o'
   821  00EF1C  6E                 	db	110	;'n'
   822  00EF1D  74                 	db	116	;'t'
   823  00EF1E  72                 	db	114	;'r'
   824  00EF1F  6F                 	db	111	;'o'
   825  00EF20  6C                 	db	108	;'l'
   826  00EF21  20                 	db	32
   827  00EF22  61                 	db	97	;'a'
   828  00EF23  20                 	db	32
   829  00EF24  64                 	db	100	;'d'
   830  00EF25  65                 	db	101	;'e'
   831  00EF26  76                 	db	118	;'v'
   832  00EF27  69                 	db	105	;'i'
   833  00EF28  63                 	db	99	;'c'
   834  00EF29  65                 	db	101	;'e'
   835  00EF2A  20                 	db	32
   836  00EF2B  65                 	db	101	;'e'
   837  00EF2C  6E                 	db	110	;'n'
   838  00EF2D  74                 	db	116	;'t'
   839  00EF2E  65                 	db	101	;'e'
   840  00EF2F  72                 	db	114	;'r'
   841  00EF30  20                 	db	32
   842  00EF31  74                 	db	116	;'t'
   843  00EF32  68                 	db	104	;'h'
   844  00EF33  65                 	db	101	;'e'
   845  00EF34  20                 	db	32
   846  00EF35  64                 	db	100	;'d'
   847  00EF36  65                 	db	101	;'e'
   848  00EF37  76                 	db	118	;'v'
   849  00EF38  69                 	db	105	;'i'
   850  00EF39  63                 	db	99	;'c'
   851  00EF3A  65                 	db	101	;'e'
   852  00EF3B  20                 	db	32
   853  00EF3C  66                 	db	102	;'f'
   854  00EF3D  6F                 	db	111	;'o'
   855  00EF3E  6C                 	db	108	;'l'
   856  00EF3F  6C                 	db	108	;'l'
   857  00EF40  6F                 	db	111	;'o'
   858  00EF41  77                 	db	119	;'w'
   859  00EF42  65                 	db	101	;'e'
   860  00EF43  64                 	db	100	;'d'
   861  00EF44  20                 	db	32
   862  00EF45  62                 	db	98	;'b'
   863  00EF46  79                 	db	121	;'y'
   864  00EF47  20                 	db	32
   865  00EF48  27                 	db	39
   866  00EF49  3D                 	db	61	;'='
   867  00EF4A  27                 	db	39
   868  00EF4B  20                 	db	32
   869  00EF4C  61                 	db	97	;'a'
   870  00EF4D  6E                 	db	110	;'n'
   871  00EF4E  64                 	db	100	;'d'
   872  00EF4F  20                 	db	32
   873  00EF50  27                 	db	39
   874  00EF51  4F                 	db	79	;'O'
   875  00EF52  6E                 	db	110	;'n'
   876  00EF53  2F                 	db	47
   877  00EF54  4F                 	db	79	;'O'
   878  00EF55  66                 	db	102	;'f'
   879  00EF56  66                 	db	102	;'f'
   880  00EF57  27                 	db	39
   881  00EF58  0D                 	db	13
   882  00EF59  0A                 	db	10
   883  00EF5A  00                 	db	0
   884  00EF5B                     STR_175:
   885  00EF5B  54                 	db	84	;'T'
   886  00EF5C  6F                 	db	111	;'o'
   887  00EF5D  20                 	db	32
   888  00EF5E  73                 	db	115	;'s'
   889  00EF5F  65                 	db	101	;'e'
   890  00EF60  74                 	db	116	;'t'
   891  00EF61  20                 	db	32
   892  00EF62  74                 	db	116	;'t'
   893  00EF63  65                 	db	101	;'e'
   894  00EF64  20                 	db	32
   895  00EF65  50                 	db	80	;'P'
   896  00EF66  57                 	db	87	;'W'
   897  00EF67  4D                 	db	77	;'M'
   898  00EF68  20                 	db	32
   899  00EF69  62                 	db	98	;'b'
   900  00EF6A  72                 	db	114	;'r'
   901  00EF6B  69                 	db	105	;'i'
   902  00EF6C  67                 	db	103	;'g'
   903  00EF6D  68                 	db	104	;'h'
   904  00EF6E  74                 	db	116	;'t'
   905  00EF6F  6E                 	db	110	;'n'
   906  00EF70  65                 	db	101	;'e'
   907  00EF71  73                 	db	115	;'s'
   908  00EF72  73                 	db	115	;'s'
   909  00EF73  20                 	db	32
   910  00EF74  65                 	db	101	;'e'
   911  00EF75  6E                 	db	110	;'n'
   912  00EF76  74                 	db	116	;'t'
   913  00EF77  65                 	db	101	;'e'
   914  00EF78  72                 	db	114	;'r'
   915  00EF79  20                 	db	32
   916  00EF7A  27                 	db	39
   917  00EF7B  52                 	db	82	;'R'
   918  00EF7C  65                 	db	101	;'e'
   919  00EF7D  64                 	db	100	;'d'
   920  00EF7E  20                 	db	32
   921  00EF7F  4C                 	db	76	;'L'
   922  00EF80  45                 	db	69	;'E'
   923  00EF81  44                 	db	68	;'D'
   924  00EF82  20                 	db	32
   925  00EF83  62                 	db	98	;'b'
   926  00EF84  72                 	db	114	;'r'
   927  00EF85  69                 	db	105	;'i'
   928  00EF86  67                 	db	103	;'g'
   929  00EF87  68                 	db	104	;'h'
   930  00EF88  74                 	db	116	;'t'
   931  00EF89  6E                 	db	110	;'n'
   932  00EF8A  65                 	db	101	;'e'
   933  00EF8B  73                 	db	115	;'s'
   934  00EF8C  73                 	db	115	;'s'
   935  00EF8D  20                 	db	32
   936  00EF8E  3D                 	db	61	;'='
   937  00EF8F  20                 	db	32
   938  00EF90  64                 	db	100	;'d'
   939  00EF91  75                 	db	117	;'u'
   940  00EF92  74                 	db	116	;'t'
   941  00EF93  79                 	db	121	;'y'
   942  00EF94  63                 	db	99	;'c'
   943  00EF95  79                 	db	121	;'y'
   944  00EF96  63                 	db	99	;'c'
   945  00EF97  6C                 	db	108	;'l'
   946  00EF98  65                 	db	101	;'e'
   947  00EF99  27                 	db	39
   948  00EF9A  0D                 	db	13
   949  00EF9B  0A                 	db	10
   950  00EF9C  00                 	db	0
   951  00EF9D                     STR_192:
   952  00EF9D  54                 	db	84	;'T'
   953  00EF9E  6F                 	db	111	;'o'
   954  00EF9F  20                 	db	32
   955  00EFA0  73                 	db	115	;'s'
   956  00EFA1  65                 	db	101	;'e'
   957  00EFA2  74                 	db	116	;'t'
   958  00EFA3  20                 	db	32
   959  00EFA4  43                 	db	67	;'C'
   960  00EFA5  6F                 	db	111	;'o'
   961  00EFA6  6E                 	db	110	;'n'
   962  00EFA7  74                 	db	116	;'t'
   963  00EFA8  72                 	db	114	;'r'
   964  00EFA9  61                 	db	97	;'a'
   965  00EFAA  73                 	db	115	;'s'
   966  00EFAB  74                 	db	116	;'t'
   967  00EFAC  20                 	db	32
   968  00EFAD  50                 	db	80	;'P'
   969  00EFAE  57                 	db	87	;'W'
   970  00EFAF  4D                 	db	77	;'M'
   971  00EFB0  20                 	db	32
   972  00EFB1  62                 	db	98	;'b'
   973  00EFB2  72                 	db	114	;'r'
   974  00EFB3  69                 	db	105	;'i'
   975  00EFB4  67                 	db	103	;'g'
   976  00EFB5  68                 	db	104	;'h'
   977  00EFB6  74                 	db	116	;'t'
   978  00EFB7  6E                 	db	110	;'n'
   979  00EFB8  65                 	db	101	;'e'
   980  00EFB9  73                 	db	115	;'s'
   981  00EFBA  73                 	db	115	;'s'
   982  00EFBB  20                 	db	32
   983  00EFBC  65                 	db	101	;'e'
   984  00EFBD  6E                 	db	110	;'n'
   985  00EFBE  74                 	db	116	;'t'
   986  00EFBF  65                 	db	101	;'e'
   987  00EFC0  72                 	db	114	;'r'
   988  00EFC1  20                 	db	32
   989  00EFC2  27                 	db	39
   990  00EFC3  43                 	db	67	;'C'
   991  00EFC4  6F                 	db	111	;'o'
   992  00EFC5  6E                 	db	110	;'n'
   993  00EFC6  74                 	db	116	;'t'
   994  00EFC7  72                 	db	114	;'r'
   995  00EFC8  61                 	db	97	;'a'
   996  00EFC9  73                 	db	115	;'s'
   997  00EFCA  74                 	db	116	;'t'
   998  00EFCB  20                 	db	32
   999  00EFCC  3D                 	db	61	;'='
  1000  00EFCD  20                 	db	32
  1001  00EFCE  64                 	db	100	;'d'
  1002  00EFCF  75                 	db	117	;'u'
  1003  00EFD0  74                 	db	116	;'t'
  1004  00EFD1  79                 	db	121	;'y'
  1005  00EFD2  63                 	db	99	;'c'
  1006  00EFD3  79                 	db	121	;'y'
  1007  00EFD4  63                 	db	99	;'c'
  1008  00EFD5  6C                 	db	108	;'l'
  1009  00EFD6  65                 	db	101	;'e'
  1010  00EFD7  27                 	db	39
  1011  00EFD8  0D                 	db	13
  1012  00EFD9  0A                 	db	10
  1013  00EFDA  00                 	db	0
  1014  00EFDB                     STR_246:
  1015  00EFDB  66                 	db	102	;'f'
  1016  00EFDC  75                 	db	117	;'u'
  1017  00EFDD  72                 	db	114	;'r'
  1018  00EFDE  74                 	db	116	;'t'
  1019  00EFDF  68                 	db	104	;'h'
  1020  00EFE0  65                 	db	101	;'e'
  1021  00EFE1  72                 	db	114	;'r'
  1022  00EFE2  20                 	db	32
  1023  00EFE3  73                 	db	115	;'s'
  1024  00EFE4  75                 	db	117	;'u'
  1025  00EFE5  62                 	db	98	;'b'
  1026  00EFE6  20                 	db	32
  1027  00EFE7  6D                 	db	109	;'m'
  1028  00EFE8  65                 	db	101	;'e'
  1029  00EFE9  6E                 	db	110	;'n'
  1030  00EFEA  75                 	db	117	;'u'
  1031  00EFEB  73                 	db	115	;'s'
  1032  00EFEC  20                 	db	32
  1033  00EFED  61                 	db	97	;'a'
  1034  00EFEE  76                 	db	118	;'v'
  1035  00EFEF  61                 	db	97	;'a'
  1036  00EFF0  69                 	db	105	;'i'
  1037  00EFF1  6C                 	db	108	;'l'
  1038  00EFF2  61                 	db	97	;'a'
  1039  00EFF3  62                 	db	98	;'b'
  1040  00EFF4  6C                 	db	108	;'l'
  1041  00EFF5  65                 	db	101	;'e'
  1042  00EFF6  20                 	db	32
  1043  00EFF7  62                 	db	98	;'b'
  1044  00EFF8  79                 	db	121	;'y'
  1045  00EFF9  20                 	db	32
  1046  00EFFA  65                 	db	101	;'e'
  1047  00EFFB  6E                 	db	110	;'n'
  1048  00EFFC  74                 	db	116	;'t'
  1049  00EFFD  65                 	db	101	;'e'
  1050  00EFFE  72                 	db	114	;'r'
  1051  00EFFF  69                 	db	105	;'i'
  1052  00F000  6E                 	db	110	;'n'
  1053  00F001  67                 	db	103	;'g'
  1054  00F002  20                 	db	32
  1055  00F003  74                 	db	116	;'t'
  1056  00F004  68                 	db	104	;'h'
  1057  00F005  65                 	db	101	;'e'
  1058  00F006  20                 	db	32
  1059  00F007  61                 	db	97	;'a'
  1060  00F008  63                 	db	99	;'c'
  1061  00F009  74                 	db	116	;'t'
  1062  00F00A  69                 	db	105	;'i'
  1063  00F00B  6F                 	db	111	;'o'
  1064  00F00C  6E                 	db	110	;'n'
  1065  00F00D  20                 	db	32
  1066  00F00E  61                 	db	97	;'a'
  1067  00F00F  6E                 	db	110	;'n'
  1068  00F010  64                 	db	100	;'d'
  1069  00F011  20                 	db	32
  1070  00F012  61                 	db	97	;'a'
  1071  00F013  20                 	db	32
  1072  00F014  27                 	db	39
  1073  00F015  3F                 	db	63	;'?'
  1074  00F016  27                 	db	39
  1075  00F017  00                 	db	0
  1076  00F018                     STR_24:
  1077  00F018  53                 	db	83	;'S'
  1078  00F019  79                 	db	121	;'y'
  1079  00F01A  73                 	db	115	;'s'
  1080  00F01B  74                 	db	116	;'t'
  1081  00F01C  65                 	db	101	;'e'
  1082  00F01D  6D                 	db	109	;'m'
  1083  00F01E  20                 	db	32
  1084  00F01F  42                 	db	66	;'B'
  1085  00F020  61                 	db	97	;'a'
  1086  00F021  75                 	db	117	;'u'
  1087  00F022  64                 	db	100	;'d'
  1088  00F023  20                 	db	32
  1089  00F024  77                 	db	119	;'w'
  1090  00F025  69                 	db	105	;'i'
  1091  00F026  6C                 	db	108	;'l'
  1092  00F027  6C                 	db	108	;'l'
  1093  00F028  20                 	db	32
  1094  00F029  62                 	db	98	;'b'
  1095  00F02A  65                 	db	101	;'e'
  1096  00F02B  20                 	db	32
  1097  00F02C  73                 	db	115	;'s'
  1098  00F02D  65                 	db	101	;'e'
  1099  00F02E  74                 	db	116	;'t'
  1100  00F02F  20                 	db	32
  1101  00F030  74                 	db	116	;'t'
  1102  00F031  6F                 	db	111	;'o'
  1103  00F032  20                 	db	32
  1104  00F033  25                 	db	37
  1105  00F034  6C                 	db	108	;'l'
  1106  00F035  75                 	db	117	;'u'
  1107  00F036  20                 	db	32
  1108  00F037  77                 	db	119	;'w'
  1109  00F038  69                 	db	105	;'i'
  1110  00F039  74                 	db	116	;'t'
  1111  00F03A  68                 	db	104	;'h'
  1112  00F03B  20                 	db	32
  1113  00F03C  45                 	db	69	;'E'
  1114  00F03D  76                 	db	118	;'v'
  1115  00F03E  65                 	db	101	;'e'
  1116  00F03F  6E                 	db	110	;'n'
  1117  00F040  20                 	db	32
  1118  00F041  70                 	db	112	;'p'
  1119  00F042  61                 	db	97	;'a'
  1120  00F043  72                 	db	114	;'r'
  1121  00F044  69                 	db	105	;'i'
  1122  00F045  74                 	db	116	;'t'
  1123  00F046  79                 	db	121	;'y'
  1124  00F047  20                 	db	32
  1125  00F048  62                 	db	98	;'b'
  1126  00F049  69                 	db	105	;'i'
  1127  00F04A  74                 	db	116	;'t'
  1128  00F04B  0D                 	db	13
  1129  00F04C  0A                 	db	10
  1130  00F04D  00                 	db	0
  1131  00F04E                     STR_8:
  1132  00F04E  45                 	db	69	;'E'
  1133  00F04F  72                 	db	114	;'r'
  1134  00F050  72                 	db	114	;'r'
  1135  00F051  6F                 	db	111	;'o'
  1136  00F052  72                 	db	114	;'r'
  1137  00F053  3A                 	db	58	;':'
  1138  00F054  20                 	db	32
  1139  00F055  43                 	db	67	;'C'
  1140  00F056  6F                 	db	111	;'o'
  1141  00F057  75                 	db	117	;'u'
  1142  00F058  6C                 	db	108	;'l'
  1143  00F059  64                 	db	100	;'d'
  1144  00F05A  20                 	db	32
  1145  00F05B  6E                 	db	110	;'n'
  1146  00F05C  6F                 	db	111	;'o'
  1147  00F05D  74                 	db	116	;'t'
  1148  00F05E  20                 	db	32
  1149  00F05F  62                 	db	98	;'b'
  1150  00F060  75                 	db	117	;'u'
  1151  00F061  72                 	db	114	;'r'
  1152  00F062  6E                 	db	110	;'n'
  1153  00F063  20                 	db	32
  1154  00F064  64                 	db	100	;'d'
  1155  00F065  65                 	db	101	;'e'
  1156  00F066  66                 	db	102	;'f'
  1157  00F067  61                 	db	97	;'a'
  1158  00F068  75                 	db	117	;'u'
  1159  00F069  6C                 	db	108	;'l'
  1160  00F06A  74                 	db	116	;'t'
  1161  00F06B  20                 	db	32
  1162  00F06C  42                 	db	66	;'B'
  1163  00F06D  61                 	db	97	;'a'
  1164  00F06E  75                 	db	117	;'u'
  1165  00F06F  64                 	db	100	;'d'
  1166  00F070  20                 	db	32
  1167  00F071  72                 	db	114	;'r'
  1168  00F072  61                 	db	97	;'a'
  1169  00F073  74                 	db	116	;'t'
  1170  00F074  65                 	db	101	;'e'
  1171  00F075  20                 	db	32
  1172  00F076  69                 	db	105	;'i'
  1173  00F077  6E                 	db	110	;'n'
  1174  00F078  74                 	db	116	;'t'
  1175  00F079  6F                 	db	111	;'o'
  1176  00F07A  20                 	db	32
  1177  00F07B  4D                 	db	77	;'M'
  1178  00F07C  65                 	db	101	;'e'
  1179  00F07D  6D                 	db	109	;'m'
  1180  00F07E  6F                 	db	111	;'o'
  1181  00F07F  72                 	db	114	;'r'
  1182  00F080  79                 	db	121	;'y'
  1183  00F081  0D                 	db	13
  1184  00F082  0A                 	db	10
  1185  00F083  00                 	db	0
  1186  00F084                     STR_23:
  1187  00F084  53                 	db	83	;'S'
  1188  00F085  79                 	db	121	;'y'
  1189  00F086  73                 	db	115	;'s'
  1190  00F087  74                 	db	116	;'t'
  1191  00F088  65                 	db	101	;'e'
  1192  00F089  6D                 	db	109	;'m'
  1193  00F08A  20                 	db	32
  1194  00F08B  42                 	db	66	;'B'
  1195  00F08C  61                 	db	97	;'a'
  1196  00F08D  75                 	db	117	;'u'
  1197  00F08E  64                 	db	100	;'d'
  1198  00F08F  20                 	db	32
  1199  00F090  77                 	db	119	;'w'
  1200  00F091  69                 	db	105	;'i'
  1201  00F092  6C                 	db	108	;'l'
  1202  00F093  6C                 	db	108	;'l'
  1203  00F094  20                 	db	32
  1204  00F095  62                 	db	98	;'b'
  1205  00F096  65                 	db	101	;'e'
  1206  00F097  20                 	db	32
  1207  00F098  73                 	db	115	;'s'
  1208  00F099  65                 	db	101	;'e'
  1209  00F09A  74                 	db	116	;'t'
  1210  00F09B  20                 	db	32
  1211  00F09C  74                 	db	116	;'t'
  1212  00F09D  6F                 	db	111	;'o'
  1213  00F09E  20                 	db	32
  1214  00F09F  25                 	db	37
  1215  00F0A0  6C                 	db	108	;'l'
  1216  00F0A1  75                 	db	117	;'u'
  1217  00F0A2  20                 	db	32
  1218  00F0A3  77                 	db	119	;'w'
  1219  00F0A4  69                 	db	105	;'i'
  1220  00F0A5  74                 	db	116	;'t'
  1221  00F0A6  68                 	db	104	;'h'
  1222  00F0A7  20                 	db	32
  1223  00F0A8  4F                 	db	79	;'O'
  1224  00F0A9  64                 	db	100	;'d'
  1225  00F0AA  64                 	db	100	;'d'
  1226  00F0AB  20                 	db	32
  1227  00F0AC  70                 	db	112	;'p'
  1228  00F0AD  61                 	db	97	;'a'
  1229  00F0AE  72                 	db	114	;'r'
  1230  00F0AF  69                 	db	105	;'i'
  1231  00F0B0  74                 	db	116	;'t'
  1232  00F0B1  79                 	db	121	;'y'
  1233  00F0B2  20                 	db	32
  1234  00F0B3  62                 	db	98	;'b'
  1235  00F0B4  69                 	db	105	;'i'
  1236  00F0B5  74                 	db	116	;'t'
  1237  00F0B6  0D                 	db	13
  1238  00F0B7  0A                 	db	10
  1239  00F0B8  00                 	db	0
  1240  00F0B9                     STR_27:
  1241  00F0B9  53                 	db	83	;'S'
  1242  00F0BA  79                 	db	121	;'y'
  1243  00F0BB  73                 	db	115	;'s'
  1244  00F0BC  74                 	db	116	;'t'
  1245  00F0BD  65                 	db	101	;'e'
  1246  00F0BE  6D                 	db	109	;'m'
  1247  00F0BF  20                 	db	32
  1248  00F0C0  42                 	db	66	;'B'
  1249  00F0C1  61                 	db	97	;'a'
  1250  00F0C2  75                 	db	117	;'u'
  1251  00F0C3  64                 	db	100	;'d'
  1252  00F0C4  20                 	db	32
  1253  00F0C5  77                 	db	119	;'w'
  1254  00F0C6  69                 	db	105	;'i'
  1255  00F0C7  6C                 	db	108	;'l'
  1256  00F0C8  6C                 	db	108	;'l'
  1257  00F0C9  20                 	db	32
  1258  00F0CA  62                 	db	98	;'b'
  1259  00F0CB  65                 	db	101	;'e'
  1260  00F0CC  20                 	db	32
  1261  00F0CD  73                 	db	115	;'s'
  1262  00F0CE  65                 	db	101	;'e'
  1263  00F0CF  74                 	db	116	;'t'
  1264  00F0D0  20                 	db	32
  1265  00F0D1  74                 	db	116	;'t'
  1266  00F0D2  6F                 	db	111	;'o'
  1267  00F0D3  20                 	db	32
  1268  00F0D4  25                 	db	37
  1269  00F0D5  6C                 	db	108	;'l'
  1270  00F0D6  75                 	db	117	;'u'
  1271  00F0D7  20                 	db	32
  1272  00F0D8  77                 	db	119	;'w'
  1273  00F0D9  69                 	db	105	;'i'
  1274  00F0DA  74                 	db	116	;'t'
  1275  00F0DB  68                 	db	104	;'h'
  1276  00F0DC  20                 	db	32
  1277  00F0DD  6E                 	db	110	;'n'
  1278  00F0DE  6F                 	db	111	;'o'
  1279  00F0DF  20                 	db	32
  1280  00F0E0  70                 	db	112	;'p'
  1281  00F0E1  61                 	db	97	;'a'
  1282  00F0E2  72                 	db	114	;'r'
  1283  00F0E3  69                 	db	105	;'i'
  1284  00F0E4  74                 	db	116	;'t'
  1285  00F0E5  79                 	db	121	;'y'
  1286  00F0E6  20                 	db	32
  1287  00F0E7  62                 	db	98	;'b'
  1288  00F0E8  69                 	db	105	;'i'
  1289  00F0E9  74                 	db	116	;'t'
  1290  00F0EA  0D                 	db	13
  1291  00F0EB  0A                 	db	10
  1292  00F0EC  00                 	db	0
  1293  00F0ED                     STR_281:
  1294  00F0ED  46                 	db	70	;'F'
  1295  00F0EE  6F                 	db	111	;'o'
  1296  00F0EF  72                 	db	114	;'r'
  1297  00F0F0  20                 	db	32
  1298  00F0F1  44                 	db	68	;'D'
  1299  00F0F2  65                 	db	101	;'e'
  1300  00F0F3  76                 	db	118	;'v'
  1301  00F0F4  69                 	db	105	;'i'
  1302  00F0F5  63                 	db	99	;'c'
  1303  00F0F6  65                 	db	101	;'e'
  1304  00F0F7  20                 	db	32
  1305  00F0F8  68                 	db	104	;'h'
  1306  00F0F9  65                 	db	101	;'e'
  1307  00F0FA  6C                 	db	108	;'l'
  1308  00F0FB  70                 	db	112	;'p'
  1309  00F0FC  20                 	db	32
  1310  00F0FD  65                 	db	101	;'e'
  1311  00F0FE  6E                 	db	110	;'n'
  1312  00F0FF  74                 	db	116	;'t'
  1313  00F100  65                 	db	101	;'e'
  1314  00F101  72                 	db	114	;'r'
  1315  00F102  20                 	db	32
  1316  00F103  64                 	db	100	;'d'
  1317  00F104  65                 	db	101	;'e'
  1318  00F105  76                 	db	118	;'v'
  1319  00F106  69                 	db	105	;'i'
  1320  00F107  63                 	db	99	;'c'
  1321  00F108  65                 	db	101	;'e'
  1322  00F109  20                 	db	32
  1323  00F10A  66                 	db	102	;'f'
  1324  00F10B  6F                 	db	111	;'o'
  1325  00F10C  6C                 	db	108	;'l'
  1326  00F10D  6C                 	db	108	;'l'
  1327  00F10E  6F                 	db	111	;'o'
  1328  00F10F  77                 	db	119	;'w'
  1329  00F110  65                 	db	101	;'e'
  1330  00F111  64                 	db	100	;'d'
  1331  00F112  20                 	db	32
  1332  00F113  62                 	db	98	;'b'
  1333  00F114  79                 	db	121	;'y'
  1334  00F115  20                 	db	32
  1335  00F116  61                 	db	97	;'a'
  1336  00F117  20                 	db	32
  1337  00F118  27                 	db	39
  1338  00F119  3F                 	db	63	;'?'
  1339  00F11A  27                 	db	39
  1340  00F11B  20                 	db	32
  1341  00F11C  0D                 	db	13
  1342  00F11D  0A                 	db	10
  1343  00F11E  00                 	db	0
  1344  00F11F                     STR_172:
  1345  00F11F  72                 	db	114	;'r'
  1346  00F120  65                 	db	101	;'e'
  1347  00F121  64                 	db	100	;'d'
  1348  00F122  6C                 	db	108	;'l'
  1349  00F123  65                 	db	101	;'e'
  1350  00F124  64                 	db	100	;'d'
  1351  00F125  20                 	db	32
  1352  00F126  77                 	db	119	;'w'
  1353  00F127  68                 	db	104	;'h'
  1354  00F128  61                 	db	97	;'a'
  1355  00F129  74                 	db	116	;'t'
  1356  00F12A  3F                 	db	63	;'?'
  1357  00F12B  3F                 	db	63	;'?'
  1358  00F12C  3F                 	db	63	;'?'
  1359  00F12D  20                 	db	32
  1360  00F12E  44                 	db	68	;'D'
  1361  00F12F  6F                 	db	111	;'o'
  1362  00F130  20                 	db	32
  1363  00F131  79                 	db	121	;'y'
  1364  00F132  6F                 	db	111	;'o'
  1365  00F133  75                 	db	117	;'u'
  1366  00F134  20                 	db	32
  1367  00F135  6D                 	db	109	;'m'
  1368  00F136  65                 	db	101	;'e'
  1369  00F137  61                 	db	97	;'a'
  1370  00F138  6E                 	db	110	;'n'
  1371  00F139  20                 	db	32
  1372  00F13A  52                 	db	82	;'R'
  1373  00F13B  65                 	db	101	;'e'
  1374  00F13C  64                 	db	100	;'d'
  1375  00F13D  20                 	db	32
  1376  00F13E  4C                 	db	76	;'L'
  1377  00F13F  65                 	db	101	;'e'
  1378  00F140  64                 	db	100	;'d'
  1379  00F141  20                 	db	32
  1380  00F142  42                 	db	66	;'B'
  1381  00F143  72                 	db	114	;'r'
  1382  00F144  69                 	db	105	;'i'
  1383  00F145  67                 	db	103	;'g'
  1384  00F146  68                 	db	104	;'h'
  1385  00F147  74                 	db	116	;'t'
  1386  00F148  6E                 	db	110	;'n'
  1387  00F149  65                 	db	101	;'e'
  1388  00F14A  73                 	db	115	;'s'
  1389  00F14B  73                 	db	115	;'s'
  1390  00F14C  3F                 	db	63	;'?'
  1391  00F14D  3F                 	db	63	;'?'
  1392  00F14E  3F                 	db	63	;'?'
  1393  00F14F  00                 	db	0
  1394  00F150                     STR_185:
  1395  00F150  49                 	db	73	;'I'
  1396  00F151  6E                 	db	110	;'n'
  1397  00F152  76                 	db	118	;'v'
  1398  00F153  61                 	db	97	;'a'
  1399  00F154  6C                 	db	108	;'l'
  1400  00F155  69                 	db	105	;'i'
  1401  00F156  64                 	db	100	;'d'
  1402  00F157  20                 	db	32
  1403  00F158  43                 	db	67	;'C'
  1404  00F159  6F                 	db	111	;'o'
  1405  00F15A  6E                 	db	110	;'n'
  1406  00F15B  74                 	db	116	;'t'
  1407  00F15C  72                 	db	114	;'r'
  1408  00F15D  61                 	db	97	;'a'
  1409  00F15E  73                 	db	115	;'s'
  1410  00F15F  74                 	db	116	;'t'
  1411  00F160  20                 	db	32
  1412  00F161  44                 	db	68	;'D'
  1413  00F162  75                 	db	117	;'u'
  1414  00F163  74                 	db	116	;'t'
  1415  00F164  79                 	db	121	;'y'
  1416  00F165  20                 	db	32
  1417  00F166  63                 	db	99	;'c'
  1418  00F167  79                 	db	121	;'y'
  1419  00F168  63                 	db	99	;'c'
  1420  00F169  6C                 	db	108	;'l'
  1421  00F16A  65                 	db	101	;'e'
  1422  00F16B  3A                 	db	58	;':'
  1423  00F16C  20                 	db	32
  1424  00F16D  47                 	db	71	;'G'
  1425  00F16E  72                 	db	114	;'r'
  1426  00F16F  65                 	db	101	;'e'
  1427  00F170  61                 	db	97	;'a'
  1428  00F171  74                 	db	116	;'t'
  1429  00F172  65                 	db	101	;'e'
  1430  00F173  72                 	db	114	;'r'
  1431  00F174  20                 	db	32
  1432  00F175  74                 	db	116	;'t'
  1433  00F176  68                 	db	104	;'h'
  1434  00F177  61                 	db	97	;'a'
  1435  00F178  6E                 	db	110	;'n'
  1436  00F179  20                 	db	32
  1437  00F17A  31                 	db	49	;'1'
  1438  00F17B  30                 	db	48	;'0'
  1439  00F17C  30                 	db	48	;'0'
  1440  00F17D  0D                 	db	13
  1441  00F17E  0A                 	db	10
  1442  00F17F  00                 	db	0
  1443  00F180                     STR_26:
  1444  00F180  53                 	db	83	;'S'
  1445  00F181  79                 	db	121	;'y'
  1446  00F182  73                 	db	115	;'s'
  1447  00F183  74                 	db	116	;'t'
  1448  00F184  65                 	db	101	;'e'
  1449  00F185  6D                 	db	109	;'m'
  1450  00F186  20                 	db	32
  1451  00F187  42                 	db	66	;'B'
  1452  00F188  61                 	db	97	;'a'
  1453  00F189  75                 	db	117	;'u'
  1454  00F18A  64                 	db	100	;'d'
  1455  00F18B  20                 	db	32
  1456  00F18C  77                 	db	119	;'w'
  1457  00F18D  69                 	db	105	;'i'
  1458  00F18E  6C                 	db	108	;'l'
  1459  00F18F  6C                 	db	108	;'l'
  1460  00F190  20                 	db	32
  1461  00F191  62                 	db	98	;'b'
  1462  00F192  65                 	db	101	;'e'
  1463  00F193  20                 	db	32
  1464  00F194  73                 	db	115	;'s'
  1465  00F195  65                 	db	101	;'e'
  1466  00F196  74                 	db	116	;'t'
  1467  00F197  20                 	db	32
  1468  00F198  74                 	db	116	;'t'
  1469  00F199  6F                 	db	111	;'o'
  1470  00F19A  20                 	db	32
  1471  00F19B  25                 	db	37
  1472  00F19C  6C                 	db	108	;'l'
  1473  00F19D  75                 	db	117	;'u'
  1474  00F19E  20                 	db	32
  1475  00F19F  77                 	db	119	;'w'
  1476  00F1A0  69                 	db	105	;'i'
  1477  00F1A1  74                 	db	116	;'t'
  1478  00F1A2  68                 	db	104	;'h'
  1479  00F1A3  20                 	db	32
  1480  00F1A4  53                 	db	83	;'S'
  1481  00F1A5  70                 	db	112	;'p'
  1482  00F1A6  61                 	db	97	;'a'
  1483  00F1A7  63                 	db	99	;'c'
  1484  00F1A8  65                 	db	101	;'e'
  1485  00F1A9  20                 	db	32
  1486  00F1AA  62                 	db	98	;'b'
  1487  00F1AB  69                 	db	105	;'i'
  1488  00F1AC  74                 	db	116	;'t'
  1489  00F1AD  0D                 	db	13
  1490  00F1AE  0A                 	db	10
  1491  00F1AF  00                 	db	0
  1492  00F1B0                     STR_25:
  1493  00F1B0  53                 	db	83	;'S'
  1494  00F1B1  79                 	db	121	;'y'
  1495  00F1B2  73                 	db	115	;'s'
  1496  00F1B3  74                 	db	116	;'t'
  1497  00F1B4  65                 	db	101	;'e'
  1498  00F1B5  6D                 	db	109	;'m'
  1499  00F1B6  20                 	db	32
  1500  00F1B7  42                 	db	66	;'B'
  1501  00F1B8  61                 	db	97	;'a'
  1502  00F1B9  75                 	db	117	;'u'
  1503  00F1BA  64                 	db	100	;'d'
  1504  00F1BB  20                 	db	32
  1505  00F1BC  77                 	db	119	;'w'
  1506  00F1BD  69                 	db	105	;'i'
  1507  00F1BE  6C                 	db	108	;'l'
  1508  00F1BF  6C                 	db	108	;'l'
  1509  00F1C0  20                 	db	32
  1510  00F1C1  62                 	db	98	;'b'
  1511  00F1C2  65                 	db	101	;'e'
  1512  00F1C3  20                 	db	32
  1513  00F1C4  73                 	db	115	;'s'
  1514  00F1C5  65                 	db	101	;'e'
  1515  00F1C6  74                 	db	116	;'t'
  1516  00F1C7  20                 	db	32
  1517  00F1C8  74                 	db	116	;'t'
  1518  00F1C9  6F                 	db	111	;'o'
  1519  00F1CA  20                 	db	32
  1520  00F1CB  25                 	db	37
  1521  00F1CC  6C                 	db	108	;'l'
  1522  00F1CD  75                 	db	117	;'u'
  1523  00F1CE  20                 	db	32
  1524  00F1CF  77                 	db	119	;'w'
  1525  00F1D0  69                 	db	105	;'i'
  1526  00F1D1  74                 	db	116	;'t'
  1527  00F1D2  68                 	db	104	;'h'
  1528  00F1D3  20                 	db	32
  1529  00F1D4  4D                 	db	77	;'M'
  1530  00F1D5  61                 	db	97	;'a'
  1531  00F1D6  72                 	db	114	;'r'
  1532  00F1D7  6B                 	db	107	;'k'
  1533  00F1D8  20                 	db	32
  1534  00F1D9  62                 	db	98	;'b'
  1535  00F1DA  69                 	db	105	;'i'
  1536  00F1DB  74                 	db	116	;'t'
  1537  00F1DC  0D                 	db	13
  1538  00F1DD  0A                 	db	10
  1539  00F1DE  00                 	db	0
  1540  00F1DF                     STR_187:
  1541  00F1DF  49                 	db	73	;'I'
  1542  00F1E0  6E                 	db	110	;'n'
  1543  00F1E1  76                 	db	118	;'v'
  1544  00F1E2  61                 	db	97	;'a'
  1545  00F1E3  6C                 	db	108	;'l'
  1546  00F1E4  69                 	db	105	;'i'
  1547  00F1E5  64                 	db	100	;'d'
  1548  00F1E6  20                 	db	32
  1549  00F1E7  43                 	db	67	;'C'
  1550  00F1E8  6F                 	db	111	;'o'
  1551  00F1E9  6E                 	db	110	;'n'
  1552  00F1EA  74                 	db	116	;'t'
  1553  00F1EB  72                 	db	114	;'r'
  1554  00F1EC  61                 	db	97	;'a'
  1555  00F1ED  73                 	db	115	;'s'
  1556  00F1EE  74                 	db	116	;'t'
  1557  00F1EF  20                 	db	32
  1558  00F1F0  44                 	db	68	;'D'
  1559  00F1F1  75                 	db	117	;'u'
  1560  00F1F2  74                 	db	116	;'t'
  1561  00F1F3  79                 	db	121	;'y'
  1562  00F1F4  20                 	db	32
  1563  00F1F5  43                 	db	67	;'C'
  1564  00F1F6  79                 	db	121	;'y'
  1565  00F1F7  63                 	db	99	;'c'
  1566  00F1F8  6C                 	db	108	;'l'
  1567  00F1F9  65                 	db	101	;'e'
  1568  00F1FA  3A                 	db	58	;':'
  1569  00F1FB  20                 	db	32
  1570  00F1FC  4C                 	db	76	;'L'
  1571  00F1FD  65                 	db	101	;'e'
  1572  00F1FE  73                 	db	115	;'s'
  1573  00F1FF  73                 	db	115	;'s'
  1574  00F200  20                 	db	32
  1575  00F201  74                 	db	116	;'t'
  1576  00F202  68                 	db	104	;'h'
  1577  00F203  61                 	db	97	;'a'
  1578  00F204  6E                 	db	110	;'n'
  1579  00F205  20                 	db	32
  1580  00F206  30                 	db	48	;'0'
  1581  00F207  0D                 	db	13
  1582  00F208  0A                 	db	10
  1583  00F209  00                 	db	0
  1584  00F20A                     STR_176:
  1585  00F20A  77                 	db	119	;'w'
  1586  00F20B  68                 	db	104	;'h'
  1587  00F20C  65                 	db	101	;'e'
  1588  00F20D  72                 	db	114	;'r'
  1589  00F20E  65                 	db	101	;'e'
  1590  00F20F  20                 	db	32
  1591  00F210  74                 	db	116	;'t'
  1592  00F211  68                 	db	104	;'h'
  1593  00F212  65                 	db	101	;'e'
  1594  00F213  20                 	db	32
  1595  00F214  64                 	db	100	;'d'
  1596  00F215  75                 	db	117	;'u'
  1597  00F216  74                 	db	116	;'t'
  1598  00F217  79                 	db	121	;'y'
  1599  00F218  63                 	db	99	;'c'
  1600  00F219  79                 	db	121	;'y'
  1601  00F21A  63                 	db	99	;'c'
  1602  00F21B  6C                 	db	108	;'l'
  1603  00F21C  65                 	db	101	;'e'
  1604  00F21D  20                 	db	32
  1605  00F21E  69                 	db	105	;'i'
  1606  00F21F  73                 	db	115	;'s'
  1607  00F220  20                 	db	32
  1608  00F221  61                 	db	97	;'a'
  1609  00F222  20                 	db	32
  1610  00F223  6E                 	db	110	;'n'
  1611  00F224  75                 	db	117	;'u'
  1612  00F225  6D                 	db	109	;'m'
  1613  00F226  62                 	db	98	;'b'
  1614  00F227  65                 	db	101	;'e'
  1615  00F228  72                 	db	114	;'r'
  1616  00F229  20                 	db	32
  1617  00F22A  30                 	db	48	;'0'
  1618  00F22B  20                 	db	32
  1619  00F22C  2D                 	db	45
  1620  00F22D  20                 	db	32
  1621  00F22E  31                 	db	49	;'1'
  1622  00F22F  30                 	db	48	;'0'
  1623  00F230  30                 	db	48	;'0'
  1624  00F231  0D                 	db	13
  1625  00F232  0A                 	db	10
  1626  00F233  00                 	db	0
  1627  00F234                     STR_166:
  1628  00F234  49                 	db	73	;'I'
  1629  00F235  6E                 	db	110	;'n'
  1630  00F236  76                 	db	118	;'v'
  1631  00F237  61                 	db	97	;'a'
  1632  00F238  6C                 	db	108	;'l'
  1633  00F239  69                 	db	105	;'i'
  1634  00F23A  64                 	db	100	;'d'
  1635  00F23B  20                 	db	32
  1636  00F23C  44                 	db	68	;'D'
  1637  00F23D  75                 	db	117	;'u'
  1638  00F23E  74                 	db	116	;'t'
  1639  00F23F  79                 	db	121	;'y'
  1640  00F240  63                 	db	99	;'c'
  1641  00F241  79                 	db	121	;'y'
  1642  00F242  63                 	db	99	;'c'
  1643  00F243  6C                 	db	108	;'l'
  1644  00F244  65                 	db	101	;'e'
  1645  00F245  3A                 	db	58	;':'
  1646  00F246  20                 	db	32
  1647  00F247  47                 	db	71	;'G'
  1648  00F248  72                 	db	114	;'r'
  1649  00F249  65                 	db	101	;'e'
  1650  00F24A  61                 	db	97	;'a'
  1651  00F24B  74                 	db	116	;'t'
  1652  00F24C  65                 	db	101	;'e'
  1653  00F24D  72                 	db	114	;'r'
  1654  00F24E  20                 	db	32
  1655  00F24F  74                 	db	116	;'t'
  1656  00F250  68                 	db	104	;'h'
  1657  00F251  61                 	db	97	;'a'
  1658  00F252  6E                 	db	110	;'n'
  1659  00F253  20                 	db	32
  1660  00F254  31                 	db	49	;'1'
  1661  00F255  30                 	db	48	;'0'
  1662  00F256  30                 	db	48	;'0'
  1663  00F257  0D                 	db	13
  1664  00F258  0A                 	db	10
  1665  00F259  00                 	db	0
  1666  00F25A                     STR_136:
  1667  00F25A  43                 	db	67	;'C'
  1668  00F25B  68                 	db	104	;'h'
  1669  00F25C  72                 	db	114	;'r'
  1670  00F25D  69                 	db	105	;'i'
  1671  00F25E  73                 	db	115	;'s'
  1672  00F25F  74                 	db	116	;'t'
  1673  00F260  6D                 	db	109	;'m'
  1674  00F261  61                 	db	97	;'a'
  1675  00F262  73                 	db	115	;'s'
  1676  00F263  20                 	db	32
  1677  00F264  54                 	db	84	;'T'
  1678  00F265  72                 	db	114	;'r'
  1679  00F266  65                 	db	101	;'e'
  1680  00F267  65                 	db	101	;'e'
  1681  00F268  20                 	db	32
  1682  00F269  43                 	db	67	;'C'
  1683  00F26A  6F                 	db	111	;'o'
  1684  00F26B  6C                 	db	108	;'l'
  1685  00F26C  6F                 	db	111	;'o'
  1686  00F26D  72                 	db	114	;'r'
  1687  00F26E  65                 	db	101	;'e'
  1688  00F26F  64                 	db	100	;'d'
  1689  00F270  20                 	db	32
  1690  00F271  4C                 	db	76	;'L'
  1691  00F272  69                 	db	105	;'i'
  1692  00F273  67                 	db	103	;'g'
  1693  00F274  68                 	db	104	;'h'
  1694  00F275  74                 	db	116	;'t'
  1695  00F276  73                 	db	115	;'s'
  1696  00F277  20                 	db	32
  1697  00F278  54                 	db	84	;'T'
  1698  00F279  6F                 	db	111	;'o'
  1699  00F27A  67                 	db	103	;'g'
  1700  00F27B  67                 	db	103	;'g'
  1701  00F27C  6C                 	db	108	;'l'
  1702  00F27D  65                 	db	101	;'e'
  1703  00F27E  64                 	db	100	;'d'
  1704  00F27F  00                 	db	0
  1705  00F280                     STR_5:
  1706  00F280  0D                 	db	13
  1707  00F281  0A                 	db	10
  1708  00F282  42                 	db	66	;'B'
  1709  00F283  75                 	db	117	;'u'
  1710  00F284  66                 	db	102	;'f'
  1711  00F285  66                 	db	102	;'f'
  1712  00F286  65                 	db	101	;'e'
  1713  00F287  72                 	db	114	;'r'
  1714  00F288  20                 	db	32
  1715  00F289  6F                 	db	111	;'o'
  1716  00F28A  76                 	db	118	;'v'
  1717  00F28B  65                 	db	101	;'e'
  1718  00F28C  72                 	db	114	;'r'
  1719  00F28D  66                 	db	102	;'f'
  1720  00F28E  6C                 	db	108	;'l'
  1721  00F28F  6F                 	db	111	;'o'
  1722  00F290  77                 	db	119	;'w'
  1723  00F291  21                 	db	33
  1724  00F292  20                 	db	32
  1725  00F293  44                 	db	68	;'D'
  1726  00F294  65                 	db	101	;'e'
  1727  00F295  6C                 	db	108	;'l'
  1728  00F296  65                 	db	101	;'e'
  1729  00F297  74                 	db	116	;'t'
  1730  00F298  69                 	db	105	;'i'
  1731  00F299  6E                 	db	110	;'n'
  1732  00F29A  67                 	db	103	;'g'
  1733  00F29B  20                 	db	32
  1734  00F29C  42                 	db	66	;'B'
  1735  00F29D  75                 	db	117	;'u'
  1736  00F29E  66                 	db	102	;'f'
  1737  00F29F  66                 	db	102	;'f'
  1738  00F2A0  65                 	db	101	;'e'
  1739  00F2A1  72                 	db	114	;'r'
  1740  00F2A2  20                 	db	32
  1741  00F2A3  0D                 	db	13
  1742  00F2A4  0A                 	db	10
  1743  00F2A5  00                 	db	0
  1744  00F2A6                     STR_153:
  1745  00F2A6  69                 	db	105	;'i'
  1746  00F2A7  2E                 	db	46
  1747  00F2A8  65                 	db	101	;'e'
  1748  00F2A9  2E                 	db	46
  1749  00F2AA  20                 	db	32
  1750  00F2AB  43                 	db	67	;'C'
  1751  00F2AC  68                 	db	104	;'h'
  1752  00F2AD  72                 	db	114	;'r'
  1753  00F2AE  69                 	db	105	;'i'
  1754  00F2AF  73                 	db	115	;'s'
  1755  00F2B0  74                 	db	116	;'t'
  1756  00F2B1  6D                 	db	109	;'m'
  1757  00F2B2  61                 	db	97	;'a'
  1758  00F2B3  73                 	db	115	;'s'
  1759  00F2B4  20                 	db	32
  1760  00F2B5  43                 	db	67	;'C'
  1761  00F2B6  6F                 	db	111	;'o'
  1762  00F2B7  6C                 	db	108	;'l'
  1763  00F2B8  6F                 	db	111	;'o'
  1764  00F2B9  72                 	db	114	;'r'
  1765  00F2BA  65                 	db	101	;'e'
  1766  00F2BB  64                 	db	100	;'d'
  1767  00F2BC  20                 	db	32
  1768  00F2BD  6C                 	db	108	;'l'
  1769  00F2BE  69                 	db	105	;'i'
  1770  00F2BF  67                 	db	103	;'g'
  1771  00F2C0  68                 	db	104	;'h'
  1772  00F2C1  74                 	db	116	;'t'
  1773  00F2C2  73                 	db	115	;'s'
  1774  00F2C3  20                 	db	32
  1775  00F2C4  3D                 	db	61	;'='
  1776  00F2C5  20                 	db	32
  1777  00F2C6  4F                 	db	79	;'O'
  1778  00F2C7  6E                 	db	110	;'n'
  1779  00F2C8  0D                 	db	13
  1780  00F2C9  0A                 	db	10
  1781  00F2CA  00                 	db	0
  1782  00F2CB                     STR_231:
  1783  00F2CB  45                 	db	69	;'E'
  1784  00F2CC  6E                 	db	110	;'n'
  1785  00F2CD  74                 	db	116	;'t'
  1786  00F2CE  65                 	db	101	;'e'
  1787  00F2CF  72                 	db	114	;'r'
  1788  00F2D0  20                 	db	32
  1789  00F2D1  54                 	db	84	;'T'
  1790  00F2D2  69                 	db	105	;'i'
  1791  00F2D3  6D                 	db	109	;'m'
  1792  00F2D4  65                 	db	101	;'e'
  1793  00F2D5  20                 	db	32
  1794  00F2D6  4D                 	db	77	;'M'
  1795  00F2D7  4D                 	db	77	;'M'
  1796  00F2D8  2F                 	db	47
  1797  00F2D9  44                 	db	68	;'D'
  1798  00F2DA  44                 	db	68	;'D'
  1799  00F2DB  2F                 	db	47
  1800  00F2DC  59                 	db	89	;'Y'
  1801  00F2DD  59                 	db	89	;'Y'
  1802  00F2DE  20                 	db	32
  1803  00F2DF  48                 	db	72	;'H'
  1804  00F2E0  48                 	db	72	;'H'
  1805  00F2E1  3A                 	db	58	;':'
  1806  00F2E2  4D                 	db	77	;'M'
  1807  00F2E3  4D                 	db	77	;'M'
  1808  00F2E4  3A                 	db	58	;':'
  1809  00F2E5  53                 	db	83	;'S'
  1810  00F2E6  53                 	db	83	;'S'
  1811  00F2E7  20                 	db	32
  1812  00F2E8  41                 	db	65	;'A'
  1813  00F2E9  4D                 	db	77	;'M'
  1814  00F2EA  20                 	db	32
  1815  00F2EB  6F                 	db	111	;'o'
  1816  00F2EC  72                 	db	114	;'r'
  1817  00F2ED  0D                 	db	13
  1818  00F2EE  0A                 	db	10
  1819  00F2EF  00                 	db	0
  1820  00F2F0                     STR_221:
  1821  00F2F0  20                 	db	32
  1822  00F2F1  33                 	db	51	;'3'
  1823  00F2F2  20                 	db	32
  1824  00F2F3  56                 	db	86	;'V'
  1825  00F2F4  6F                 	db	111	;'o'
  1826  00F2F5  6C                 	db	108	;'l'
  1827  00F2F6  74                 	db	116	;'t'
  1828  00F2F7  20                 	db	32
  1829  00F2F8  52                 	db	82	;'R'
  1830  00F2F9  54                 	db	84	;'T'
  1831  00F2FA  43                 	db	67	;'C'
  1832  00F2FB  20                 	db	32
  1833  00F2FC  42                 	db	66	;'B'
  1834  00F2FD  61                 	db	97	;'a'
  1835  00F2FE  74                 	db	116	;'t'
  1836  00F2FF  74                 	db	116	;'t'
  1837  00F300  65                 	db	101	;'e'
  1838  00F301  72                 	db	114	;'r'
  1839  00F302  79                 	db	121	;'y'
  1840  00F303  20                 	db	32
  1841  00F304  56                 	db	86	;'V'
  1842  00F305  6F                 	db	111	;'o'
  1843  00F306  6C                 	db	108	;'l'
  1844  00F307  74                 	db	116	;'t'
  1845  00F308  61                 	db	97	;'a'
  1846  00F309  67                 	db	103	;'g'
  1847  00F30A  65                 	db	101	;'e'
  1848  00F30B  20                 	db	32
  1849  00F30C  3D                 	db	61	;'='
  1850  00F30D  20                 	db	32
  1851  00F30E  25                 	db	37
  1852  00F30F  64                 	db	100	;'d'
  1853  00F310  2E                 	db	46
  1854  00F311  25                 	db	37
  1855  00F312  64                 	db	100	;'d'
  1856  00F313  00                 	db	0
  1857  00F314                     STR_321:
  1858  00F314  25                 	db	37
  1859  00F315  30                 	db	48	;'0'
  1860  00F316  32                 	db	50	;'2'
  1861  00F317  64                 	db	100	;'d'
  1862  00F318  2F                 	db	47
  1863  00F319  25                 	db	37
  1864  00F31A  30                 	db	48	;'0'
  1865  00F31B  32                 	db	50	;'2'
  1866  00F31C  64                 	db	100	;'d'
  1867  00F31D  2F                 	db	47
  1868  00F31E  32                 	db	50	;'2'
  1869  00F31F  30                 	db	48	;'0'
  1870  00F320  25                 	db	37
  1871  00F321  30                 	db	48	;'0'
  1872  00F322  32                 	db	50	;'2'
  1873  00F323  64                 	db	100	;'d'
  1874  00F324  20                 	db	32
  1875  00F325  25                 	db	37
  1876  00F326  30                 	db	48	;'0'
  1877  00F327  32                 	db	50	;'2'
  1878  00F328  64                 	db	100	;'d'
  1879  00F329  3A                 	db	58	;':'
  1880  00F32A  25                 	db	37
  1881  00F32B  30                 	db	48	;'0'
  1882  00F32C  32                 	db	50	;'2'
  1883  00F32D  64                 	db	100	;'d'
  1884  00F32E  3A                 	db	58	;':'
  1885  00F32F  25                 	db	37
  1886  00F330  30                 	db	48	;'0'
  1887  00F331  32                 	db	50	;'2'
  1888  00F332  64                 	db	100	;'d'
  1889  00F333  20                 	db	32
  1890  00F334  41                 	db	65	;'A'
  1891  00F335  4D                 	db	77	;'M'
  1892  00F336  00                 	db	0
  1893  00F337                     STR_322:
  1894  00F337  25                 	db	37
  1895  00F338  30                 	db	48	;'0'
  1896  00F339  32                 	db	50	;'2'
  1897  00F33A  64                 	db	100	;'d'
  1898  00F33B  2F                 	db	47
  1899  00F33C  25                 	db	37
  1900  00F33D  30                 	db	48	;'0'
  1901  00F33E  32                 	db	50	;'2'
  1902  00F33F  64                 	db	100	;'d'
  1903  00F340  2F                 	db	47
  1904  00F341  32                 	db	50	;'2'
  1905  00F342  30                 	db	48	;'0'
  1906  00F343  25                 	db	37
  1907  00F344  30                 	db	48	;'0'
  1908  00F345  32                 	db	50	;'2'
  1909  00F346  64                 	db	100	;'d'
  1910  00F347  20                 	db	32
  1911  00F348  25                 	db	37
  1912  00F349  30                 	db	48	;'0'
  1913  00F34A  32                 	db	50	;'2'
  1914  00F34B  64                 	db	100	;'d'
  1915  00F34C  3A                 	db	58	;':'
  1916  00F34D  25                 	db	37
  1917  00F34E  30                 	db	48	;'0'
  1918  00F34F  32                 	db	50	;'2'
  1919  00F350  64                 	db	100	;'d'
  1920  00F351  3A                 	db	58	;':'
  1921  00F352  25                 	db	37
  1922  00F353  30                 	db	48	;'0'
  1923  00F354  32                 	db	50	;'2'
  1924  00F355  64                 	db	100	;'d'
  1925  00F356  20                 	db	32
  1926  00F357  50                 	db	80	;'P'
  1927  00F358  4D                 	db	77	;'M'
  1928  00F359  00                 	db	0
  1929  00F35A                     STR_232:
  1930  00F35A  45                 	db	69	;'E'
  1931  00F35B  6E                 	db	110	;'n'
  1932  00F35C  74                 	db	116	;'t'
  1933  00F35D  65                 	db	101	;'e'
  1934  00F35E  72                 	db	114	;'r'
  1935  00F35F  20                 	db	32
  1936  00F360  54                 	db	84	;'T'
  1937  00F361  69                 	db	105	;'i'
  1938  00F362  6D                 	db	109	;'m'
  1939  00F363  65                 	db	101	;'e'
  1940  00F364  20                 	db	32
  1941  00F365  4D                 	db	77	;'M'
  1942  00F366  4D                 	db	77	;'M'
  1943  00F367  2F                 	db	47
  1944  00F368  44                 	db	68	;'D'
  1945  00F369  44                 	db	68	;'D'
  1946  00F36A  2F                 	db	47
  1947  00F36B  59                 	db	89	;'Y'
  1948  00F36C  59                 	db	89	;'Y'
  1949  00F36D  20                 	db	32
  1950  00F36E  48                 	db	72	;'H'
  1951  00F36F  48                 	db	72	;'H'
  1952  00F370  3A                 	db	58	;':'
  1953  00F371  4D                 	db	77	;'M'
  1954  00F372  4D                 	db	77	;'M'
  1955  00F373  3A                 	db	58	;':'
  1956  00F374  53                 	db	83	;'S'
  1957  00F375  53                 	db	83	;'S'
  1958  00F376  20                 	db	32
  1959  00F377  50                 	db	80	;'P'
  1960  00F378  4D                 	db	77	;'M'
  1961  00F379  0D                 	db	13
  1962  00F37A  0A                 	db	10
  1963  00F37B  00                 	db	0
  1964  00F37C                     STR_168:
  1965  00F37C  49                 	db	73	;'I'
  1966  00F37D  6E                 	db	110	;'n'
  1967  00F37E  76                 	db	118	;'v'
  1968  00F37F  61                 	db	97	;'a'
  1969  00F380  6C                 	db	108	;'l'
  1970  00F381  69                 	db	105	;'i'
  1971  00F382  64                 	db	100	;'d'
  1972  00F383  20                 	db	32
  1973  00F384  44                 	db	68	;'D'
  1974  00F385  75                 	db	117	;'u'
  1975  00F386  74                 	db	116	;'t'
  1976  00F387  79                 	db	121	;'y'
  1977  00F388  63                 	db	99	;'c'
  1978  00F389  79                 	db	121	;'y'
  1979  00F38A  63                 	db	99	;'c'
  1980  00F38B  6C                 	db	108	;'l'
  1981  00F38C  65                 	db	101	;'e'
  1982  00F38D  3A                 	db	58	;':'
  1983  00F38E  20                 	db	32
  1984  00F38F  4C                 	db	76	;'L'
  1985  00F390  65                 	db	101	;'e'
  1986  00F391  73                 	db	115	;'s'
  1987  00F392  73                 	db	115	;'s'
  1988  00F393  20                 	db	32
  1989  00F394  74                 	db	116	;'t'
  1990  00F395  68                 	db	104	;'h'
  1991  00F396  61                 	db	97	;'a'
  1992  00F397  6E                 	db	110	;'n'
  1993  00F398  20                 	db	32
  1994  00F399  30                 	db	48	;'0'
  1995  00F39A  0D                 	db	13
  1996  00F39B  0A                 	db	10
  1997  00F39C  00                 	db	0
  1998  00F39D                     STR_238:
  1999  00F39D  46                 	db	70	;'F'
  2000  00F39E  6F                 	db	111	;'o'
  2001  00F39F  72                 	db	114	;'r'
  2002  00F3A0  6D                 	db	109	;'m'
  2003  00F3A1  61                 	db	97	;'a'
  2004  00F3A2  74                 	db	116	;'t'
  2005  00F3A3  20                 	db	32
  2006  00F3A4  69                 	db	105	;'i'
  2007  00F3A5  73                 	db	115	;'s'
  2008  00F3A6  20                 	db	32
  2009  00F3A7  4D                 	db	77	;'M'
  2010  00F3A8  4D                 	db	77	;'M'
  2011  00F3A9  2F                 	db	47
  2012  00F3AA  44                 	db	68	;'D'
  2013  00F3AB  44                 	db	68	;'D'
  2014  00F3AC  2F                 	db	47
  2015  00F3AD  59                 	db	89	;'Y'
  2016  00F3AE  59                 	db	89	;'Y'
  2017  00F3AF  20                 	db	32
  2018  00F3B0  48                 	db	72	;'H'
  2019  00F3B1  48                 	db	72	;'H'
  2020  00F3B2  3A                 	db	58	;':'
  2021  00F3B3  4D                 	db	77	;'M'
  2022  00F3B4  4D                 	db	77	;'M'
  2023  00F3B5  3A                 	db	58	;':'
  2024  00F3B6  53                 	db	83	;'S'
  2025  00F3B7  53                 	db	83	;'S'
  2026  00F3B8  20                 	db	32
  2027  00F3B9  41                 	db	65	;'A'
  2028  00F3BA  4D                 	db	77	;'M'
  2029  00F3BB  0D                 	db	13
  2030  00F3BC  0A                 	db	10
  2031  00F3BD  00                 	db	0
  2032  00F3BE                     STR_200:
  2033  00F3BE  45                 	db	69	;'E'
  2034  00F3BF  72                 	db	114	;'r'
  2035  00F3C0  72                 	db	114	;'r'
  2036  00F3C1  6F                 	db	111	;'o'
  2037  00F3C2  72                 	db	114	;'r'
  2038  00F3C3  3A                 	db	58	;':'
  2039  00F3C4  20                 	db	32
  2040  00F3C5  6F                 	db	111	;'o'
  2041  00F3C6  6E                 	db	110	;'n'
  2042  00F3C7  6C                 	db	108	;'l'
  2043  00F3C8  79                 	db	121	;'y'
  2044  00F3C9  20                 	db	32
  2045  00F3CA  75                 	db	117	;'u'
  2046  00F3CB  73                 	db	115	;'s'
  2047  00F3CC  65                 	db	101	;'e'
  2048  00F3CD  20                 	db	32
  2049  00F3CE  6F                 	db	111	;'o'
  2050  00F3CF  6E                 	db	110	;'n'
  2051  00F3D0  65                 	db	101	;'e'
  2052  00F3D1  20                 	db	32
  2053  00F3D2  65                 	db	101	;'e'
  2054  00F3D3  71                 	db	113	;'q'
  2055  00F3D4  75                 	db	117	;'u'
  2056  00F3D5  61                 	db	97	;'a'
  2057  00F3D6  6C                 	db	108	;'l'
  2058  00F3D7  20                 	db	32
  2059  00F3D8  73                 	db	115	;'s'
  2060  00F3D9  69                 	db	105	;'i'
  2061  00F3DA  67                 	db	103	;'g'
  2062  00F3DB  6E                 	db	110	;'n'
  2063  00F3DC  0D                 	db	13
  2064  00F3DD  0A                 	db	10
  2065  00F3DE  00                 	db	0
  2066  00F3DF                     STR_323:
  2067  00F3DF  25                 	db	37
  2068  00F3E0  30                 	db	48	;'0'
  2069  00F3E1  32                 	db	50	;'2'
  2070  00F3E2  64                 	db	100	;'d'
  2071  00F3E3  2F                 	db	47
  2072  00F3E4  25                 	db	37
  2073  00F3E5  30                 	db	48	;'0'
  2074  00F3E6  32                 	db	50	;'2'
  2075  00F3E7  64                 	db	100	;'d'
  2076  00F3E8  2F                 	db	47
  2077  00F3E9  32                 	db	50	;'2'
  2078  00F3EA  30                 	db	48	;'0'
  2079  00F3EB  25                 	db	37
  2080  00F3EC  30                 	db	48	;'0'
  2081  00F3ED  32                 	db	50	;'2'
  2082  00F3EE  64                 	db	100	;'d'
  2083  00F3EF  20                 	db	32
  2084  00F3F0  25                 	db	37
  2085  00F3F1  30                 	db	48	;'0'
  2086  00F3F2  32                 	db	50	;'2'
  2087  00F3F3  64                 	db	100	;'d'
  2088  00F3F4  3A                 	db	58	;':'
  2089  00F3F5  25                 	db	37
  2090  00F3F6  30                 	db	48	;'0'
  2091  00F3F7  32                 	db	50	;'2'
  2092  00F3F8  64                 	db	100	;'d'
  2093  00F3F9  3A                 	db	58	;':'
  2094  00F3FA  25                 	db	37
  2095  00F3FB  30                 	db	48	;'0'
  2096  00F3FC  32                 	db	50	;'2'
  2097  00F3FD  64                 	db	100	;'d'
  2098  00F3FE  00                 	db	0
  2099  00F3FF                     STR_189:
  2100  00F3FF  43                 	db	67	;'C'
  2101  00F400  6F                 	db	111	;'o'
  2102  00F401  6E                 	db	110	;'n'
  2103  00F402  74                 	db	116	;'t'
  2104  00F403  72                 	db	114	;'r'
  2105  00F404  61                 	db	97	;'a'
  2106  00F405  73                 	db	115	;'s'
  2107  00F406  74                 	db	116	;'t'
  2108  00F407  20                 	db	32
  2109  00F408  44                 	db	68	;'D'
  2110  00F409  75                 	db	117	;'u'
  2111  00F40A  74                 	db	116	;'t'
  2112  00F40B  79                 	db	121	;'y'
  2113  00F40C  20                 	db	32
  2114  00F40D  43                 	db	67	;'C'
  2115  00F40E  79                 	db	121	;'y'
  2116  00F40F  63                 	db	99	;'c'
  2117  00F410  6C                 	db	108	;'l'
  2118  00F411  65                 	db	101	;'e'
  2119  00F412  20                 	db	32
  2120  00F413  73                 	db	115	;'s'
  2121  00F414  65                 	db	101	;'e'
  2122  00F415  74                 	db	116	;'t'
  2123  00F416  20                 	db	32
  2124  00F417  74                 	db	116	;'t'
  2125  00F418  6F                 	db	111	;'o'
  2126  00F419  20                 	db	32
  2127  00F41A  25                 	db	37
  2128  00F41B  64                 	db	100	;'d'
  2129  00F41C  0D                 	db	13
  2130  00F41D  0A                 	db	10
  2131  00F41E  00                 	db	0
  2132  00F41F                     STR_144:
  2133  00F41F  43                 	db	67	;'C'
  2134  00F420  68                 	db	104	;'h'
  2135  00F421  72                 	db	114	;'r'
  2136  00F422  69                 	db	105	;'i'
  2137  00F423  73                 	db	115	;'s'
  2138  00F424  74                 	db	116	;'t'
  2139  00F425  6D                 	db	109	;'m'
  2140  00F426  61                 	db	97	;'a'
  2141  00F427  73                 	db	115	;'s'
  2142  00F428  20                 	db	32
  2143  00F429  54                 	db	84	;'T'
  2144  00F42A  72                 	db	114	;'r'
  2145  00F42B  65                 	db	101	;'e'
  2146  00F42C  65                 	db	101	;'e'
  2147  00F42D  20                 	db	32
  2148  00F42E  57                 	db	87	;'W'
  2149  00F42F  68                 	db	104	;'h'
  2150  00F430  69                 	db	105	;'i'
  2151  00F431  74                 	db	116	;'t'
  2152  00F432  65                 	db	101	;'e'
  2153  00F433  20                 	db	32
  2154  00F434  4C                 	db	76	;'L'
  2155  00F435  69                 	db	105	;'i'
  2156  00F436  67                 	db	103	;'g'
  2157  00F437  68                 	db	104	;'h'
  2158  00F438  74                 	db	116	;'t'
  2159  00F439  73                 	db	115	;'s'
  2160  00F43A  20                 	db	32
  2161  00F43B  4F                 	db	79	;'O'
  2162  00F43C  66                 	db	102	;'f'
  2163  00F43D  66                 	db	102	;'f'
  2164  00F43E  00                 	db	0
  2165  00F43F                     STR_140:
  2166  00F43F  43                 	db	67	;'C'
  2167  00F440  68                 	db	104	;'h'
  2168  00F441  72                 	db	114	;'r'
  2169  00F442  69                 	db	105	;'i'
  2170  00F443  73                 	db	115	;'s'
  2171  00F444  74                 	db	116	;'t'
  2172  00F445  6D                 	db	109	;'m'
  2173  00F446  61                 	db	97	;'a'
  2174  00F447  73                 	db	115	;'s'
  2175  00F448  20                 	db	32
  2176  00F449  54                 	db	84	;'T'
  2177  00F44A  72                 	db	114	;'r'
  2178  00F44B  65                 	db	101	;'e'
  2179  00F44C  65                 	db	101	;'e'
  2180  00F44D  20                 	db	32
  2181  00F44E  57                 	db	87	;'W'
  2182  00F44F  68                 	db	104	;'h'
  2183  00F450  69                 	db	105	;'i'
  2184  00F451  74                 	db	116	;'t'
  2185  00F452  65                 	db	101	;'e'
  2186  00F453  20                 	db	32
  2187  00F454  4C                 	db	76	;'L'
  2188  00F455  69                 	db	105	;'i'
  2189  00F456  67                 	db	103	;'g'
  2190  00F457  68                 	db	104	;'h'
  2191  00F458  74                 	db	116	;'t'
  2192  00F459  73                 	db	115	;'s'
  2193  00F45A  20                 	db	32
  2194  00F45B  4F                 	db	79	;'O'
  2195  00F45C  6E                 	db	110	;'n'
  2196  00F45D  00                 	db	0
  2197  00F45E                     STR_202:
  2198  00F45E  45                 	db	69	;'E'
  2199  00F45F  72                 	db	114	;'r'
  2200  00F460  72                 	db	114	;'r'
  2201  00F461  6F                 	db	111	;'o'
  2202  00F462  72                 	db	114	;'r'
  2203  00F463  3A                 	db	58	;':'
  2204  00F464  20                 	db	32
  2205  00F465  4E                 	db	78	;'N'
  2206  00F466  6F                 	db	111	;'o'
  2207  00F467  20                 	db	32
  2208  00F468  6E                 	db	110	;'n'
  2209  00F469  65                 	db	101	;'e'
  2210  00F46A  67                 	db	103	;'g'
  2211  00F46B  61                 	db	97	;'a'
  2212  00F46C  74                 	db	116	;'t'
  2213  00F46D  69                 	db	105	;'i'
  2214  00F46E  76                 	db	118	;'v'
  2215  00F46F  65                 	db	101	;'e'
  2216  00F470  20                 	db	32
  2217  00F471  63                 	db	99	;'c'
  2218  00F472  68                 	db	104	;'h'
  2219  00F473  61                 	db	97	;'a'
  2220  00F474  6E                 	db	110	;'n'
  2221  00F475  6E                 	db	110	;'n'
  2222  00F476  65                 	db	101	;'e'
  2223  00F477  6C                 	db	108	;'l'
  2224  00F478  73                 	db	115	;'s'
  2225  00F479  0D                 	db	13
  2226  00F47A  0A                 	db	10
  2227  00F47B  00                 	db	0
  2228  00F47C                     STR_240:
  2229  00F47C  52                 	db	82	;'R'
  2230  00F47D  65                 	db	101	;'e'
  2231  00F47E  61                 	db	97	;'a'
  2232  00F47F  6C                 	db	108	;'l'
  2233  00F480  20                 	db	32
  2234  00F481  54                 	db	84	;'T'
  2235  00F482  69                 	db	105	;'i'
  2236  00F483  6D                 	db	109	;'m'
  2237  00F484  65                 	db	101	;'e'
  2238  00F485  20                 	db	32
  2239  00F486  43                 	db	67	;'C'
  2240  00F487  6C                 	db	108	;'l'
  2241  00F488  6F                 	db	111	;'o'
  2242  00F489  63                 	db	99	;'c'
  2243  00F48A  6B                 	db	107	;'k'
  2244  00F48B  20                 	db	32
  2245  00F48C  48                 	db	72	;'H'
  2246  00F48D  65                 	db	101	;'e'
  2247  00F48E  6C                 	db	108	;'l'
  2248  00F48F  70                 	db	112	;'p'
  2249  00F490  20                 	db	32
  2250  00F491  4D                 	db	77	;'M'
  2251  00F492  65                 	db	101	;'e'
  2252  00F493  6E                 	db	110	;'n'
  2253  00F494  75                 	db	117	;'u'
  2254  00F495  0D                 	db	13
  2255  00F496  0A                 	db	10
  2256  00F497  0A                 	db	10
  2257  00F498  00                 	db	0
  2258  00F499                     STR_206:
  2259  00F499  43                 	db	67	;'C'
  2260  00F49A  68                 	db	104	;'h'
  2261  00F49B  61                 	db	97	;'a'
  2262  00F49C  6E                 	db	110	;'n'
  2263  00F49D  6E                 	db	110	;'n'
  2264  00F49E  65                 	db	101	;'e'
  2265  00F49F  6C                 	db	108	;'l'
  2266  00F4A0  20                 	db	32
  2267  00F4A1  25                 	db	37
  2268  00F4A2  64                 	db	100	;'d'
  2269  00F4A3  20                 	db	32
  2270  00F4A4  69                 	db	105	;'i'
  2271  00F4A5  73                 	db	115	;'s'
  2272  00F4A6  20                 	db	32
  2273  00F4A7  6E                 	db	110	;'n'
  2274  00F4A8  6F                 	db	111	;'o'
  2275  00F4A9  74                 	db	116	;'t'
  2276  00F4AA  20                 	db	32
  2277  00F4AB  63                 	db	99	;'c'
  2278  00F4AC  6F                 	db	111	;'o'
  2279  00F4AD  6E                 	db	110	;'n'
  2280  00F4AE  66                 	db	102	;'f'
  2281  00F4AF  69                 	db	105	;'i'
  2282  00F4B0  67                 	db	103	;'g'
  2283  00F4B1  75                 	db	117	;'u'
  2284  00F4B2  72                 	db	114	;'r'
  2285  00F4B3  65                 	db	101	;'e'
  2286  00F4B4  64                 	db	100	;'d'
  2287  00F4B5  00                 	db	0
  2288  00F4B6                     STR_21:
  2289  00F4B6  0D                 	db	13
  2290  00F4B7  0A                 	db	10
  2291  00F4B8  45                 	db	69	;'E'
  2292  00F4B9  6E                 	db	110	;'n'
  2293  00F4BA  74                 	db	116	;'t'
  2294  00F4BB  65                 	db	101	;'e'
  2295  00F4BC  72                 	db	114	;'r'
  2296  00F4BD  20                 	db	32
  2297  00F4BE  27                 	db	39
  2298  00F4BF  3F                 	db	63	;'?'
  2299  00F4C0  27                 	db	39
  2300  00F4C1  20                 	db	32
  2301  00F4C2  66                 	db	102	;'f'
  2302  00F4C3  6F                 	db	111	;'o'
  2303  00F4C4  72                 	db	114	;'r'
  2304  00F4C5  20                 	db	32
  2305  00F4C6  48                 	db	72	;'H'
  2306  00F4C7  65                 	db	101	;'e'
  2307  00F4C8  6C                 	db	108	;'l'
  2308  00F4C9  70                 	db	112	;'p'
  2309  00F4CA  20                 	db	32
  2310  00F4CB  4D                 	db	77	;'M'
  2311  00F4CC  65                 	db	101	;'e'
  2312  00F4CD  6E                 	db	110	;'n'
  2313  00F4CE  75                 	db	117	;'u'
  2314  00F4CF  0D                 	db	13
  2315  00F4D0  0A                 	db	10
  2316  00F4D1  3E                 	db	62	;'>'
  2317  00F4D2  00                 	db	0
  2318  00F4D3                     STR_148:
  2319  00F4D3  43                 	db	67	;'C'
  2320  00F4D4  68                 	db	104	;'h'
  2321  00F4D5  72                 	db	114	;'r'
  2322  00F4D6  69                 	db	105	;'i'
  2323  00F4D7  73                 	db	115	;'s'
  2324  00F4D8  74                 	db	116	;'t'
  2325  00F4D9  6D                 	db	109	;'m'
  2326  00F4DA  61                 	db	97	;'a'
  2327  00F4DB  73                 	db	115	;'s'
  2328  00F4DC  20                 	db	32
  2329  00F4DD  74                 	db	116	;'t'
  2330  00F4DE  72                 	db	114	;'r'
  2331  00F4DF  65                 	db	101	;'e'
  2332  00F4E0  65                 	db	101	;'e'
  2333  00F4E1  20                 	db	32
  2334  00F4E2  48                 	db	72	;'H'
  2335  00F4E3  65                 	db	101	;'e'
  2336  00F4E4  6C                 	db	108	;'l'
  2337  00F4E5  70                 	db	112	;'p'
  2338  00F4E6  20                 	db	32
  2339  00F4E7  4D                 	db	77	;'M'
  2340  00F4E8  65                 	db	101	;'e'
  2341  00F4E9  6E                 	db	110	;'n'
  2342  00F4EA  75                 	db	117	;'u'
  2343  00F4EB  0D                 	db	13
  2344  00F4EC  0A                 	db	10
  2345  00F4ED  0A                 	db	10
  2346  00F4EE  00                 	db	0
  2347  00F4EF                     STR_204:
  2348  00F4EF  45                 	db	69	;'E'
  2349  00F4F0  72                 	db	114	;'r'
  2350  00F4F1  72                 	db	114	;'r'
  2351  00F4F2  6F                 	db	111	;'o'
  2352  00F4F3  72                 	db	114	;'r'
  2353  00F4F4  3A                 	db	58	;':'
  2354  00F4F5  20                 	db	32
  2355  00F4F6  69                 	db	105	;'i'
  2356  00F4F7  6E                 	db	110	;'n'
  2357  00F4F8  20                 	db	32
  2358  00F4F9  70                 	db	112	;'p'
  2359  00F4FA  61                 	db	97	;'a'
  2360  00F4FB  72                 	db	114	;'r'
  2361  00F4FC  73                 	db	115	;'s'
  2362  00F4FD  69                 	db	105	;'i'
  2363  00F4FE  6E                 	db	110	;'n'
  2364  00F4FF  67                 	db	103	;'g'
  2365  00F500  20                 	db	32
  2366  00F501  63                 	db	99	;'c'
  2367  00F502  6F                 	db	111	;'o'
  2368  00F503  6D                 	db	109	;'m'
  2369  00F504  6D                 	db	109	;'m'
  2370  00F505  61                 	db	97	;'a'
  2371  00F506  6E                 	db	110	;'n'
  2372  00F507  64                 	db	100	;'d'
  2373  00F508  0D                 	db	13
  2374  00F509  0A                 	db	10
  2375  00F50A  00                 	db	0
  2376  00F50B                     STR_163:
  2377  00F50B  74                 	db	116	;'t'
  2378  00F50C  68                 	db	104	;'h'
  2379  00F50D  65                 	db	101	;'e'
  2380  00F50E  72                 	db	114	;'r'
  2381  00F50F  65                 	db	101	;'e'
  2382  00F510  20                 	db	32
  2383  00F511  69                 	db	105	;'i'
  2384  00F512  73                 	db	115	;'s'
  2385  00F513  20                 	db	32
  2386  00F514  6E                 	db	110	;'n'
  2387  00F515  6F                 	db	111	;'o'
  2388  00F516  20                 	db	32
  2389  00F517  71                 	db	113	;'q'
  2390  00F518  75                 	db	117	;'u'
  2391  00F519  65                 	db	101	;'e'
  2392  00F51A  73                 	db	115	;'s'
  2393  00F51B  74                 	db	116	;'t'
  2394  00F51C  69                 	db	105	;'i'
  2395  00F51D  6F                 	db	111	;'o'
  2396  00F51E  6E                 	db	110	;'n'
  2397  00F51F  20                 	db	32
  2398  00F520  6D                 	db	109	;'m'
  2399  00F521  61                 	db	97	;'a'
  2400  00F522  72                 	db	114	;'r'
  2401  00F523  6B                 	db	107	;'k'
  2402  00F524  0D                 	db	13
  2403  00F525  0A                 	db	10
  2404  00F526  00                 	db	0
  2405  00F527                     STR_267:
  2406  00F527  69                 	db	105	;'i'
  2407  00F528  2E                 	db	46
  2408  00F529  65                 	db	101	;'e'
  2409  00F52A  2E                 	db	46
  2410  00F52B  20                 	db	32
  2411  00F52C  4A                 	db	74	;'J'
  2412  00F52D  6F                 	db	111	;'o'
  2413  00F52E  65                 	db	101	;'e'
  2414  00F52F  73                 	db	115	;'s'
  2415  00F530  20                 	db	32
  2416  00F531  72                 	db	114	;'r'
  2417  00F532  6F                 	db	111	;'o'
  2418  00F533  6F                 	db	111	;'o'
  2419  00F534  6D                 	db	109	;'m'
  2420  00F535  20                 	db	32
  2421  00F536  6C                 	db	108	;'l'
  2422  00F537  69                 	db	105	;'i'
  2423  00F538  67                 	db	103	;'g'
  2424  00F539  68                 	db	104	;'h'
  2425  00F53A  74                 	db	116	;'t'
  2426  00F53B  20                 	db	32
  2427  00F53C  3D                 	db	61	;'='
  2428  00F53D  20                 	db	32
  2429  00F53E  4F                 	db	79	;'O'
  2430  00F53F  6E                 	db	110	;'n'
  2431  00F540  0D                 	db	13
  2432  00F541  0A                 	db	10
  2433  00F542  00                 	db	0
  2434  00F543                     STR_236:
  2435  00F543  0D                 	db	13
  2436  00F544  0A                 	db	10
  2437  00F545  54                 	db	84	;'T'
  2438  00F546  69                 	db	105	;'i'
  2439  00F547  6D                 	db	109	;'m'
  2440  00F548  65                 	db	101	;'e'
  2441  00F549  20                 	db	32
  2442  00F54A  4E                 	db	78	;'N'
  2443  00F54B  6F                 	db	111	;'o'
  2444  00F54C  74                 	db	116	;'t'
  2445  00F54D  20                 	db	32
  2446  00F54E  53                 	db	83	;'S'
  2447  00F54F  65                 	db	101	;'e'
  2448  00F550  74                 	db	116	;'t'
  2449  00F551  20                 	db	32
  2450  00F552  53                 	db	83	;'S'
  2451  00F553  75                 	db	117	;'u'
  2452  00F554  63                 	db	99	;'c'
  2453  00F555  63                 	db	99	;'c'
  2454  00F556  65                 	db	101	;'e'
  2455  00F557  73                 	db	115	;'s'
  2456  00F558  73                 	db	115	;'s'
  2457  00F559  66                 	db	102	;'f'
  2458  00F55A  75                 	db	117	;'u'
  2459  00F55B  6C                 	db	108	;'l'
  2460  00F55C  6C                 	db	108	;'l'
  2461  00F55D  79                 	db	121	;'y'
  2462  00F55E  00                 	db	0
  2463  00F55F                     STR_164:
  2464  00F55F  45                 	db	69	;'E'
  2465  00F560  72                 	db	114	;'r'
  2466  00F561  72                 	db	114	;'r'
  2467  00F562  6F                 	db	111	;'o'
  2468  00F563  72                 	db	114	;'r'
  2469  00F564  3A                 	db	58	;':'
  2470  00F565  20                 	db	32
  2471  00F566  4E                 	db	78	;'N'
  2472  00F567  6F                 	db	111	;'o'
  2473  00F568  20                 	db	32
  2474  00F569  6E                 	db	110	;'n'
  2475  00F56A  75                 	db	117	;'u'
  2476  00F56B  6D                 	db	109	;'m'
  2477  00F56C  62                 	db	98	;'b'
  2478  00F56D  65                 	db	101	;'e'
  2479  00F56E  72                 	db	114	;'r'
  2480  00F56F  20                 	db	32
  2481  00F570  65                 	db	101	;'e'
  2482  00F571  6E                 	db	110	;'n'
  2483  00F572  74                 	db	116	;'t'
  2484  00F573  65                 	db	101	;'e'
  2485  00F574  72                 	db	114	;'r'
  2486  00F575  65                 	db	101	;'e'
  2487  00F576  64                 	db	100	;'d'
  2488  00F577  0D                 	db	13
  2489  00F578  0A                 	db	10
  2490  00F579  00                 	db	0
  2491  00F57A                     STR_89:
  2492  00F57A  69                 	db	105	;'i'
  2493  00F57B  2E                 	db	46
  2494  00F57C  65                 	db	101	;'e'
  2495  00F57D  2E                 	db	46
  2496  00F57E  20                 	db	32
  2497  00F57F  4C                 	db	76	;'L'
  2498  00F580  69                 	db	105	;'i'
  2499  00F581  76                 	db	118	;'v'
  2500  00F582  69                 	db	105	;'i'
  2501  00F583  6E                 	db	110	;'n'
  2502  00F584  67                 	db	103	;'g'
  2503  00F585  72                 	db	114	;'r'
  2504  00F586  6F                 	db	111	;'o'
  2505  00F587  6F                 	db	111	;'o'
  2506  00F588  6D                 	db	109	;'m'
  2507  00F589  20                 	db	32
  2508  00F58A  66                 	db	102	;'f'
  2509  00F58B  61                 	db	97	;'a'
  2510  00F58C  6E                 	db	110	;'n'
  2511  00F58D  20                 	db	32
  2512  00F58E  3D                 	db	61	;'='
  2513  00F58F  20                 	db	32
  2514  00F590  4F                 	db	79	;'O'
  2515  00F591  6E                 	db	110	;'n'
  2516  00F592  0D                 	db	13
  2517  00F593  0A                 	db	10
  2518  00F594  00                 	db	0
  2519  00F595                     STR_320:
  2520  00F595  41                 	db	65	;'A'
  2521  00F596  44                 	db	68	;'D'
  2522  00F597  43                 	db	67	;'C'
  2523  00F598  20                 	db	32
  2524  00F599  43                 	db	67	;'C'
  2525  00F59A  68                 	db	104	;'h'
  2526  00F59B  61                 	db	97	;'a'
  2527  00F59C  6E                 	db	110	;'n'
  2528  00F59D  6E                 	db	110	;'n'
  2529  00F59E  65                 	db	101	;'e'
  2530  00F59F  6C                 	db	108	;'l'
  2531  00F5A0  20                 	db	32
  2532  00F5A1  4F                 	db	79	;'O'
  2533  00F5A2  75                 	db	117	;'u'
  2534  00F5A3  74                 	db	116	;'t'
  2535  00F5A4  20                 	db	32
  2536  00F5A5  6F                 	db	111	;'o'
  2537  00F5A6  66                 	db	102	;'f'
  2538  00F5A7  20                 	db	32
  2539  00F5A8  42                 	db	66	;'B'
  2540  00F5A9  6F                 	db	111	;'o'
  2541  00F5AA  75                 	db	117	;'u'
  2542  00F5AB  6E                 	db	110	;'n'
  2543  00F5AC  64                 	db	100	;'d'
  2544  00F5AD  73                 	db	115	;'s'
  2545  00F5AE  00                 	db	0
  2546  00F5AF                     STR_191:
  2547  00F5AF  43                 	db	67	;'C'
  2548  00F5B0  6F                 	db	111	;'o'
  2549  00F5B1  6E                 	db	110	;'n'
  2550  00F5B2  74                 	db	116	;'t'
  2551  00F5B3  72                 	db	114	;'r'
  2552  00F5B4  61                 	db	97	;'a'
  2553  00F5B5  73                 	db	115	;'s'
  2554  00F5B6  74                 	db	116	;'t'
  2555  00F5B7  20                 	db	32
  2556  00F5B8  50                 	db	80	;'P'
  2557  00F5B9  57                 	db	87	;'W'
  2558  00F5BA  4D                 	db	77	;'M'
  2559  00F5BB  20                 	db	32
  2560  00F5BC  48                 	db	72	;'H'
  2561  00F5BD  65                 	db	101	;'e'
  2562  00F5BE  6C                 	db	108	;'l'
  2563  00F5BF  70                 	db	112	;'p'
  2564  00F5C0  20                 	db	32
  2565  00F5C1  4D                 	db	77	;'M'
  2566  00F5C2  65                 	db	101	;'e'
  2567  00F5C3  6E                 	db	110	;'n'
  2568  00F5C4  75                 	db	117	;'u'
  2569  00F5C5  0D                 	db	13
  2570  00F5C6  0A                 	db	10
  2571  00F5C7  0A                 	db	10
  2572  00F5C8  00                 	db	0
  2573  00F5C9                     STR_234:
  2574  00F5C9  0D                 	db	13
  2575  00F5CA  0A                 	db	10
  2576  00F5CB  54                 	db	84	;'T'
  2577  00F5CC  69                 	db	105	;'i'
  2578  00F5CD  6D                 	db	109	;'m'
  2579  00F5CE  65                 	db	101	;'e'
  2580  00F5CF  20                 	db	32
  2581  00F5D0  53                 	db	83	;'S'
  2582  00F5D1  65                 	db	101	;'e'
  2583  00F5D2  74                 	db	116	;'t'
  2584  00F5D3  20                 	db	32
  2585  00F5D4  53                 	db	83	;'S'
  2586  00F5D5  75                 	db	117	;'u'
  2587  00F5D6  63                 	db	99	;'c'
  2588  00F5D7  63                 	db	99	;'c'
  2589  00F5D8  65                 	db	101	;'e'
  2590  00F5D9  73                 	db	115	;'s'
  2591  00F5DA  73                 	db	115	;'s'
  2592  00F5DB  66                 	db	102	;'f'
  2593  00F5DC  75                 	db	117	;'u'
  2594  00F5DD  6C                 	db	108	;'l'
  2595  00F5DE  6C                 	db	108	;'l'
  2596  00F5DF  79                 	db	121	;'y'
  2597  00F5E0  0D                 	db	13
  2598  00F5E1  0A                 	db	10
  2599  00F5E2  00                 	db	0
  2600  00F5E3                     STR_174:
  2601  00F5E3  52                 	db	82	;'R'
  2602  00F5E4  65                 	db	101	;'e'
  2603  00F5E5  64                 	db	100	;'d'
  2604  00F5E6  20                 	db	32
  2605  00F5E7  4C                 	db	76	;'L'
  2606  00F5E8  45                 	db	69	;'E'
  2607  00F5E9  44                 	db	68	;'D'
  2608  00F5EA  20                 	db	32
  2609  00F5EB  50                 	db	80	;'P'
  2610  00F5EC  57                 	db	87	;'W'
  2611  00F5ED  4D                 	db	77	;'M'
  2612  00F5EE  20                 	db	32
  2613  00F5EF  48                 	db	72	;'H'
  2614  00F5F0  65                 	db	101	;'e'
  2615  00F5F1  6C                 	db	108	;'l'
  2616  00F5F2  70                 	db	112	;'p'
  2617  00F5F3  20                 	db	32
  2618  00F5F4  4D                 	db	77	;'M'
  2619  00F5F5  65                 	db	101	;'e'
  2620  00F5F6  6E                 	db	110	;'n'
  2621  00F5F7  75                 	db	117	;'u'
  2622  00F5F8  0D                 	db	13
  2623  00F5F9  0A                 	db	10
  2624  00F5FA  0A                 	db	10
  2625  00F5FB  00                 	db	0
  2626  00F5FC                     STR_237:
  2627  00F5FC  0D                 	db	13
  2628  00F5FD  0A                 	db	10
  2629  00F5FE  49                 	db	73	;'I'
  2630  00F5FF  6E                 	db	110	;'n'
  2631  00F600  76                 	db	118	;'v'
  2632  00F601  61                 	db	97	;'a'
  2633  00F602  6C                 	db	108	;'l'
  2634  00F603  69                 	db	105	;'i'
  2635  00F604  64                 	db	100	;'d'
  2636  00F605  20                 	db	32
  2637  00F606  54                 	db	84	;'T'
  2638  00F607  69                 	db	105	;'i'
  2639  00F608  6D                 	db	109	;'m'
  2640  00F609  65                 	db	101	;'e'
  2641  00F60A  20                 	db	32
  2642  00F60B  45                 	db	69	;'E'
  2643  00F60C  6E                 	db	110	;'n'
  2644  00F60D  74                 	db	116	;'t'
  2645  00F60E  65                 	db	101	;'e'
  2646  00F60F  72                 	db	114	;'r'
  2647  00F610  65                 	db	101	;'e'
  2648  00F611  64                 	db	100	;'d'
  2649  00F612  0D                 	db	13
  2650  00F613  0A                 	db	10
  2651  00F614  00                 	db	0
  2652  00F615                     STR_74:
  2653  00F615  4C                 	db	76	;'L'
  2654  00F616  69                 	db	105	;'i'
  2655  00F617  76                 	db	118	;'v'
  2656  00F618  69                 	db	105	;'i'
  2657  00F619  6E                 	db	110	;'n'
  2658  00F61A  67                 	db	103	;'g'
  2659  00F61B  72                 	db	114	;'r'
  2660  00F61C  6F                 	db	111	;'o'
  2661  00F61D  6F                 	db	111	;'o'
  2662  00F61E  6D                 	db	109	;'m'
  2663  00F61F  20                 	db	32
  2664  00F620  4C                 	db	76	;'L'
  2665  00F621  69                 	db	105	;'i'
  2666  00F622  67                 	db	103	;'g'
  2667  00F623  68                 	db	104	;'h'
  2668  00F624  74                 	db	116	;'t'
  2669  00F625  20                 	db	32
  2670  00F626  54                 	db	84	;'T'
  2671  00F627  6F                 	db	111	;'o'
  2672  00F628  67                 	db	103	;'g'
  2673  00F629  67                 	db	103	;'g'
  2674  00F62A  6C                 	db	108	;'l'
  2675  00F62B  65                 	db	101	;'e'
  2676  00F62C  64                 	db	100	;'d'
  2677  00F62D  00                 	db	0
  2678  00F62E                     STR_84:
  2679  00F62E  4C                 	db	76	;'L'
  2680  00F62F  69                 	db	105	;'i'
  2681  00F630  76                 	db	118	;'v'
  2682  00F631  69                 	db	105	;'i'
  2683  00F632  6E                 	db	110	;'n'
  2684  00F633  67                 	db	103	;'g'
  2685  00F634  72                 	db	114	;'r'
  2686  00F635  6F                 	db	111	;'o'
  2687  00F636  6F                 	db	111	;'o'
  2688  00F637  6D                 	db	109	;'m'
  2689  00F638  20                 	db	32
  2690  00F639  48                 	db	72	;'H'
  2691  00F63A  65                 	db	101	;'e'
  2692  00F63B  6C                 	db	108	;'l'
  2693  00F63C  70                 	db	112	;'p'
  2694  00F63D  20                 	db	32
  2695  00F63E  4D                 	db	77	;'M'
  2696  00F63F  65                 	db	101	;'e'
  2697  00F640  6E                 	db	110	;'n'
  2698  00F641  75                 	db	117	;'u'
  2699  00F642  0D                 	db	13
  2700  00F643  0A                 	db	10
  2701  00F644  0A                 	db	10
  2702  00F645  00                 	db	0
  2703  00F646                     STR_228:
  2704  00F646  45                 	db	69	;'E'
  2705  00F647  52                 	db	82	;'R'
  2706  00F648  52                 	db	82	;'R'
  2707  00F649  4F                 	db	79	;'O'
  2708  00F64A  52                 	db	82	;'R'
  2709  00F64B  3A                 	db	58	;':'
  2710  00F64C  20                 	db	32
  2711  00F64D  43                 	db	67	;'C'
  2712  00F64E  61                 	db	97	;'a'
  2713  00F64F  6E                 	db	110	;'n'
  2714  00F650  27                 	db	39
  2715  00F651  74                 	db	116	;'t'
  2716  00F652  20                 	db	32
  2717  00F653  52                 	db	82	;'R'
  2718  00F654  65                 	db	101	;'e'
  2719  00F655  61                 	db	97	;'a'
  2720  00F656  64                 	db	100	;'d'
  2721  00F657  20                 	db	32
  2722  00F658  52                 	db	82	;'R'
  2723  00F659  54                 	db	84	;'T'
  2724  00F65A  43                 	db	67	;'C'
  2725  00F65B  0D                 	db	13
  2726  00F65C  0A                 	db	10
  2727  00F65D  00                 	db	0
  2728  00F65E                     STR_123:
  2729  00F65E  69                 	db	105	;'i'
  2730  00F65F  2E                 	db	46
  2731  00F660  65                 	db	101	;'e'
  2732  00F661  2E                 	db	46
  2733  00F662  20                 	db	32
  2734  00F663  42                 	db	66	;'B'
  2735  00F664  65                 	db	101	;'e'
  2736  00F665  64                 	db	100	;'d'
  2737  00F666  72                 	db	114	;'r'
  2738  00F667  6F                 	db	111	;'o'
  2739  00F668  6F                 	db	111	;'o'
  2740  00F669  6D                 	db	109	;'m'
  2741  00F66A  20                 	db	32
  2742  00F66B  66                 	db	102	;'f'
  2743  00F66C  61                 	db	97	;'a'
  2744  00F66D  6E                 	db	110	;'n'
  2745  00F66E  20                 	db	32
  2746  00F66F  3D                 	db	61	;'='
  2747  00F670  20                 	db	32
  2748  00F671  4F                 	db	79	;'O'
  2749  00F672  6E                 	db	110	;'n'
  2750  00F673  0D                 	db	13
  2751  00F674  0A                 	db	10
  2752  00F675  00                 	db	0
  2753  00F676                     STR_263:
  2754  00F676  4A                 	db	74	;'J'
  2755  00F677  6F                 	db	111	;'o'
  2756  00F678  65                 	db	101	;'e'
  2757  00F679  73                 	db	115	;'s'
  2758  00F67A  20                 	db	32
  2759  00F67B  52                 	db	82	;'R'
  2760  00F67C  6F                 	db	111	;'o'
  2761  00F67D  6F                 	db	111	;'o'
  2762  00F67E  6D                 	db	109	;'m'
  2763  00F67F  20                 	db	32
  2764  00F680  48                 	db	72	;'H'
  2765  00F681  65                 	db	101	;'e'
  2766  00F682  6C                 	db	108	;'l'
  2767  00F683  70                 	db	112	;'p'
  2768  00F684  20                 	db	32
  2769  00F685  4D                 	db	77	;'M'
  2770  00F686  65                 	db	101	;'e'
  2771  00F687  6E                 	db	110	;'n'
  2772  00F688  75                 	db	117	;'u'
  2773  00F689  0D                 	db	13
  2774  00F68A  0A                 	db	10
  2775  00F68B  0A                 	db	10
  2776  00F68C  00                 	db	0
  2777  00F68D                     STR_227:
  2778  00F68D  25                 	db	37
  2779  00F68E  30                 	db	48	;'0'
  2780  00F68F  32                 	db	50	;'2'
  2781  00F690  64                 	db	100	;'d'
  2782  00F691  2F                 	db	47
  2783  00F692  25                 	db	37
  2784  00F693  30                 	db	48	;'0'
  2785  00F694  32                 	db	50	;'2'
  2786  00F695  64                 	db	100	;'d'
  2787  00F696  20                 	db	32
  2788  00F697  25                 	db	37
  2789  00F698  30                 	db	48	;'0'
  2790  00F699  32                 	db	50	;'2'
  2791  00F69A  64                 	db	100	;'d'
  2792  00F69B  3A                 	db	58	;':'
  2793  00F69C  25                 	db	37
  2794  00F69D  30                 	db	48	;'0'
  2795  00F69E  32                 	db	50	;'2'
  2796  00F69F  64                 	db	100	;'d'
  2797  00F6A0  20                 	db	32
  2798  00F6A1  41                 	db	65	;'A'
  2799  00F6A2  4D                 	db	77	;'M'
  2800  00F6A3  00                 	db	0
  2801  00F6A4                     STR_226:
  2802  00F6A4  25                 	db	37
  2803  00F6A5  30                 	db	48	;'0'
  2804  00F6A6  32                 	db	50	;'2'
  2805  00F6A7  64                 	db	100	;'d'
  2806  00F6A8  2F                 	db	47
  2807  00F6A9  25                 	db	37
  2808  00F6AA  30                 	db	48	;'0'
  2809  00F6AB  32                 	db	50	;'2'
  2810  00F6AC  64                 	db	100	;'d'
  2811  00F6AD  20                 	db	32
  2812  00F6AE  25                 	db	37
  2813  00F6AF  30                 	db	48	;'0'
  2814  00F6B0  32                 	db	50	;'2'
  2815  00F6B1  64                 	db	100	;'d'
  2816  00F6B2  3A                 	db	58	;':'
  2817  00F6B3  25                 	db	37
  2818  00F6B4  30                 	db	48	;'0'
  2819  00F6B5  32                 	db	50	;'2'
  2820  00F6B6  64                 	db	100	;'d'
  2821  00F6B7  20                 	db	32
  2822  00F6B8  50                 	db	80	;'P'
  2823  00F6B9  4D                 	db	77	;'M'
  2824  00F6BA  00                 	db	0
  2825  00F6BB                     STR_282:
  2826  00F6BB  69                 	db	105	;'i'
  2827  00F6BC  2E                 	db	46
  2828  00F6BD  65                 	db	101	;'e'
  2829  00F6BE  2E                 	db	46
  2830  00F6BF  20                 	db	32
  2831  00F6C0  20                 	db	32
  2832  00F6C1  4C                 	db	76	;'L'
  2833  00F6C2  69                 	db	105	;'i'
  2834  00F6C3  76                 	db	118	;'v'
  2835  00F6C4  69                 	db	105	;'i'
  2836  00F6C5  6E                 	db	110	;'n'
  2837  00F6C6  67                 	db	103	;'g'
  2838  00F6C7  72                 	db	114	;'r'
  2839  00F6C8  6F                 	db	111	;'o'
  2840  00F6C9  6F                 	db	111	;'o'
  2841  00F6CA  6D                 	db	109	;'m'
  2842  00F6CB  3F                 	db	63	;'?'
  2843  00F6CC  0D                 	db	13
  2844  00F6CD  0A                 	db	10
  2845  00F6CE  0D                 	db	13
  2846  00F6CF  0A                 	db	10
  2847  00F6D0  00                 	db	0
  2848  00F6D1                     STR_170:
  2849  00F6D1  44                 	db	68	;'D'
  2850  00F6D2  75                 	db	117	;'u'
  2851  00F6D3  74                 	db	116	;'t'
  2852  00F6D4  79                 	db	121	;'y'
  2853  00F6D5  63                 	db	99	;'c'
  2854  00F6D6  79                 	db	121	;'y'
  2855  00F6D7  63                 	db	99	;'c'
  2856  00F6D8  6C                 	db	108	;'l'
  2857  00F6D9  65                 	db	101	;'e'
  2858  00F6DA  20                 	db	32
  2859  00F6DB  73                 	db	115	;'s'
  2860  00F6DC  65                 	db	101	;'e'
  2861  00F6DD  74                 	db	116	;'t'
  2862  00F6DE  20                 	db	32
  2863  00F6DF  74                 	db	116	;'t'
  2864  00F6E0  6F                 	db	111	;'o'
  2865  00F6E1  20                 	db	32
  2866  00F6E2  25                 	db	37
  2867  00F6E3  64                 	db	100	;'d'
  2868  00F6E4  0D                 	db	13
  2869  00F6E5  0A                 	db	10
  2870  00F6E6  00                 	db	0
  2871  00F6E7                     STR_101:
  2872  00F6E7  42                 	db	66	;'B'
  2873  00F6E8  65                 	db	101	;'e'
  2874  00F6E9  64                 	db	100	;'d'
  2875  00F6EA  72                 	db	114	;'r'
  2876  00F6EB  6F                 	db	111	;'o'
  2877  00F6EC  6F                 	db	111	;'o'
  2878  00F6ED  6D                 	db	109	;'m'
  2879  00F6EE  20                 	db	32
  2880  00F6EF  4C                 	db	76	;'L'
  2881  00F6F0  69                 	db	105	;'i'
  2882  00F6F1  67                 	db	103	;'g'
  2883  00F6F2  68                 	db	104	;'h'
  2884  00F6F3  74                 	db	116	;'t'
  2885  00F6F4  20                 	db	32
  2886  00F6F5  54                 	db	84	;'T'
  2887  00F6F6  6F                 	db	111	;'o'
  2888  00F6F7  67                 	db	103	;'g'
  2889  00F6F8  67                 	db	103	;'g'
  2890  00F6F9  6C                 	db	108	;'l'
  2891  00F6FA  65                 	db	101	;'e'
  2892  00F6FB  64                 	db	100	;'d'
  2893  00F6FC  00                 	db	0
  2894  00F6FD                     STR_29:
  2895  00F6FD  53                 	db	83	;'S'
  2896  00F6FE  79                 	db	121	;'y'
  2897  00F6FF  73                 	db	115	;'s'
  2898  00F700  74                 	db	116	;'t'
  2899  00F701  65                 	db	101	;'e'
  2900  00F702  6D                 	db	109	;'m'
  2901  00F703  20                 	db	32
  2902  00F704  50                 	db	80	;'P'
  2903  00F705  72                 	db	114	;'r'
  2904  00F706  6F                 	db	111	;'o'
  2905  00F707  67                 	db	103	;'g'
  2906  00F708  72                 	db	114	;'r'
  2907  00F709  61                 	db	97	;'a'
  2908  00F70A  6D                 	db	109	;'m'
  2909  00F70B  20                 	db	32
  2910  00F70C  46                 	db	70	;'F'
  2911  00F70D  61                 	db	97	;'a'
  2912  00F70E  69                 	db	105	;'i'
  2913  00F70F  6C                 	db	108	;'l'
  2914  00F710  0D                 	db	13
  2915  00F711  0A                 	db	10
  2916  00F712  00                 	db	0
  2917  00F713                     STR_117:
  2918  00F713  42                 	db	66	;'B'
  2919  00F714  65                 	db	101	;'e'
  2920  00F715  64                 	db	100	;'d'
  2921  00F716  72                 	db	114	;'r'
  2922  00F717  6F                 	db	111	;'o'
  2923  00F718  6F                 	db	111	;'o'
  2924  00F719  6D                 	db	109	;'m'
  2925  00F71A  20                 	db	32
  2926  00F71B  48                 	db	72	;'H'
  2927  00F71C  65                 	db	101	;'e'
  2928  00F71D  6C                 	db	108	;'l'
  2929  00F71E  70                 	db	112	;'p'
  2930  00F71F  20                 	db	32
  2931  00F720  4D                 	db	77	;'M'
  2932  00F721  65                 	db	101	;'e'
  2933  00F722  6E                 	db	110	;'n'
  2934  00F723  75                 	db	117	;'u'
  2935  00F724  0D                 	db	13
  2936  00F725  0A                 	db	10
  2937  00F726  0A                 	db	10
  2938  00F727  00                 	db	0
  2939  00F728                     STR_247:
  2940  00F728  69                 	db	105	;'i'
  2941  00F729  2E                 	db	46
  2942  00F72A  65                 	db	101	;'e'
  2943  00F72B  2E                 	db	46
  2944  00F72C  20                 	db	32
  2945  00F72D  52                 	db	82	;'R'
  2946  00F72E  54                 	db	84	;'T'
  2947  00F72F  43                 	db	67	;'C'
  2948  00F730  20                 	db	32
  2949  00F731  53                 	db	83	;'S'
  2950  00F732  65                 	db	101	;'e'
  2951  00F733  74                 	db	116	;'t'
  2952  00F734  20                 	db	32
  2953  00F735  54                 	db	84	;'T'
  2954  00F736  69                 	db	105	;'i'
  2955  00F737  6D                 	db	109	;'m'
  2956  00F738  65                 	db	101	;'e'
  2957  00F739  3F                 	db	63	;'?'
  2958  00F73A  0D                 	db	13
  2959  00F73B  0A                 	db	10
  2960  00F73C  00                 	db	0
  2961  00F73D                     STR_311:
  2962  00F73D  42                 	db	66	;'B'
  2963  00F73E  61                 	db	97	;'a'
  2964  00F73F  75                 	db	117	;'u'
  2965  00F740  64                 	db	100	;'d'
  2966  00F741  20                 	db	32
  2967  00F742  4F                 	db	79	;'O'
  2968  00F743  75                 	db	117	;'u'
  2969  00F744  74                 	db	116	;'t'
  2970  00F745  20                 	db	32
  2971  00F746  6F                 	db	111	;'o'
  2972  00F747  66                 	db	102	;'f'
  2973  00F748  20                 	db	32
  2974  00F749  72                 	db	114	;'r'
  2975  00F74A  61                 	db	97	;'a'
  2976  00F74B  6E                 	db	110	;'n'
  2977  00F74C  67                 	db	103	;'g'
  2978  00F74D  65                 	db	101	;'e'
  2979  00F74E  0D                 	db	13
  2980  00F74F  0A                 	db	10
  2981  00F750  00                 	db	0
  2982  00F751                     STR_208:
  2983  00F751  41                 	db	65	;'A'
  2984  00F752  44                 	db	68	;'D'
  2985  00F753  43                 	db	67	;'C'
  2986  00F754  20                 	db	32
  2987  00F755  63                 	db	99	;'c'
  2988  00F756  68                 	db	104	;'h'
  2989  00F757  61                 	db	97	;'a'
  2990  00F758  6E                 	db	110	;'n'
  2991  00F759  6E                 	db	110	;'n'
  2992  00F75A  65                 	db	101	;'e'
  2993  00F75B  6C                 	db	108	;'l'
  2994  00F75C  20                 	db	32
  2995  00F75D  25                 	db	37
  2996  00F75E  64                 	db	100	;'d'
  2997  00F75F  20                 	db	32
  2998  00F760  3D                 	db	61	;'='
  2999  00F761  20                 	db	32
  3000  00F762  25                 	db	37
  3001  00F763  64                 	db	100	;'d'
  3002  00F764  00                 	db	0
  3003  00F765                     STR_259:
  3004  00F765  4A                 	db	74	;'J'
  3005  00F766  6F                 	db	111	;'o'
  3006  00F767  65                 	db	101	;'e'
  3007  00F768  73                 	db	115	;'s'
  3008  00F769  20                 	db	32
  3009  00F76A  72                 	db	114	;'r'
  3010  00F76B  6F                 	db	111	;'o'
  3011  00F76C  6F                 	db	111	;'o'
  3012  00F76D  6D                 	db	109	;'m'
  3013  00F76E  20                 	db	32
  3014  00F76F  6C                 	db	108	;'l'
  3015  00F770  69                 	db	105	;'i'
  3016  00F771  67                 	db	103	;'g'
  3017  00F772  68                 	db	104	;'h'
  3018  00F773  74                 	db	116	;'t'
  3019  00F774  20                 	db	32
  3020  00F775  4F                 	db	79	;'O'
  3021  00F776  66                 	db	102	;'f'
  3022  00F777  66                 	db	102	;'f'
  3023  00F778  00                 	db	0
  3024  00F779                     STR_73:
  3025  00F779  6C                 	db	108	;'l'
  3026  00F77A  69                 	db	105	;'i'
  3027  00F77B  76                 	db	118	;'v'
  3028  00F77C  69                 	db	105	;'i'
  3029  00F77D  6E                 	db	110	;'n'
  3030  00F77E  67                 	db	103	;'g'
  3031  00F77F  72                 	db	114	;'r'
  3032  00F780  6F                 	db	111	;'o'
  3033  00F781  6F                 	db	111	;'o'
  3034  00F782  6D                 	db	109	;'m'
  3035  00F783  6C                 	db	108	;'l'
  3036  00F784  69                 	db	105	;'i'
  3037  00F785  67                 	db	103	;'g'
  3038  00F786  68                 	db	104	;'h'
  3039  00F787  74                 	db	116	;'t'
  3040  00F788  3D                 	db	61	;'='
  3041  00F789  6F                 	db	111	;'o'
  3042  00F78A  66                 	db	102	;'f'
  3043  00F78B  66                 	db	102	;'f'
  3044  00F78C  00                 	db	0
  3045  00F78D                     STR_256:
  3046  00F78D  4A                 	db	74	;'J'
  3047  00F78E  6F                 	db	111	;'o'
  3048  00F78F  65                 	db	101	;'e'
  3049  00F790  27                 	db	39
  3050  00F791  73                 	db	115	;'s'
  3051  00F792  20                 	db	32
  3052  00F793  72                 	db	114	;'r'
  3053  00F794  6F                 	db	111	;'o'
  3054  00F795  6F                 	db	111	;'o'
  3055  00F796  6D                 	db	109	;'m'
  3056  00F797  20                 	db	32
  3057  00F798  6C                 	db	108	;'l'
  3058  00F799  69                 	db	105	;'i'
  3059  00F79A  67                 	db	103	;'g'
  3060  00F79B  68                 	db	104	;'h'
  3061  00F79C  74                 	db	116	;'t'
  3062  00F79D  20                 	db	32
  3063  00F79E  4F                 	db	79	;'O'
  3064  00F79F  6E                 	db	110	;'n'
  3065  00F7A0  00                 	db	0
  3066  00F7A1                     STR_82:
  3067  00F7A1  4C                 	db	76	;'L'
  3068  00F7A2  69                 	db	105	;'i'
  3069  00F7A3  76                 	db	118	;'v'
  3070  00F7A4  69                 	db	105	;'i'
  3071  00F7A5  6E                 	db	110	;'n'
  3072  00F7A6  67                 	db	103	;'g'
  3073  00F7A7  72                 	db	114	;'r'
  3074  00F7A8  6F                 	db	111	;'o'
  3075  00F7A9  6F                 	db	111	;'o'
  3076  00F7AA  6D                 	db	109	;'m'
  3077  00F7AB  20                 	db	32
  3078  00F7AC  54                 	db	84	;'T'
  3079  00F7AD  61                 	db	97	;'a'
  3080  00F7AE  73                 	db	115	;'s'
  3081  00F7AF  6B                 	db	107	;'k'
  3082  00F7B0  3F                 	db	63	;'?'
  3083  00F7B1  3F                 	db	63	;'?'
  3084  00F7B2  3F                 	db	63	;'?'
  3085  00F7B3  00                 	db	0
  3086  00F7B4                     STR_261:
  3087  00F7B4  4A                 	db	74	;'J'
  3088  00F7B5  6F                 	db	111	;'o'
  3089  00F7B6  65                 	db	101	;'e'
  3090  00F7B7  27                 	db	39
  3091  00F7B8  73                 	db	115	;'s'
  3092  00F7B9  20                 	db	32
  3093  00F7BA  72                 	db	114	;'r'
  3094  00F7BB  6F                 	db	111	;'o'
  3095  00F7BC  6F                 	db	111	;'o'
  3096  00F7BD  6D                 	db	109	;'m'
  3097  00F7BE  20                 	db	32
  3098  00F7BF  77                 	db	119	;'w'
  3099  00F7C0  68                 	db	104	;'h'
  3100  00F7C1  61                 	db	97	;'a'
  3101  00F7C2  74                 	db	116	;'t'
  3102  00F7C3  3F                 	db	63	;'?'
  3103  00F7C4  3F                 	db	63	;'?'
  3104  00F7C5  3F                 	db	63	;'?'
  3105  00F7C6  00                 	db	0
  3106  00F7C7                     STR_80:
  3107  00F7C7  4C                 	db	76	;'L'
  3108  00F7C8  69                 	db	105	;'i'
  3109  00F7C9  76                 	db	118	;'v'
  3110  00F7CA  69                 	db	105	;'i'
  3111  00F7CB  6E                 	db	110	;'n'
  3112  00F7CC  67                 	db	103	;'g'
  3113  00F7CD  72                 	db	114	;'r'
  3114  00F7CE  6F                 	db	111	;'o'
  3115  00F7CF  6F                 	db	111	;'o'
  3116  00F7D0  6D                 	db	109	;'m'
  3117  00F7D1  20                 	db	32
  3118  00F7D2  46                 	db	70	;'F'
  3119  00F7D3  61                 	db	97	;'a'
  3120  00F7D4  6E                 	db	110	;'n'
  3121  00F7D5  20                 	db	32
  3122  00F7D6  4F                 	db	79	;'O'
  3123  00F7D7  66                 	db	102	;'f'
  3124  00F7D8  66                 	db	102	;'f'
  3125  00F7D9  00                 	db	0
  3126  00F7DA                     STR_113:
  3127  00F7DA  42                 	db	66	;'B'
  3128  00F7DB  65                 	db	101	;'e'
  3129  00F7DC  64                 	db	100	;'d'
  3130  00F7DD  72                 	db	114	;'r'
  3131  00F7DE  6F                 	db	111	;'o'
  3132  00F7DF  6F                 	db	111	;'o'
  3133  00F7E0  6D                 	db	109	;'m'
  3134  00F7E1  20                 	db	32
  3135  00F7E2  53                 	db	83	;'S'
  3136  00F7E3  68                 	db	104	;'h'
  3137  00F7E4  61                 	db	97	;'a'
  3138  00F7E5  6B                 	db	107	;'k'
  3139  00F7E6  65                 	db	101	;'e'
  3140  00F7E7  72                 	db	114	;'r'
  3141  00F7E8  20                 	db	32
  3142  00F7E9  4F                 	db	79	;'O'
  3143  00F7EA  66                 	db	102	;'f'
  3144  00F7EB  66                 	db	102	;'f'
  3145  00F7EC  00                 	db	0
  3146  00F7ED                     STR_72:
  3147  00F7ED  6C                 	db	108	;'l'
  3148  00F7EE  69                 	db	105	;'i'
  3149  00F7EF  76                 	db	118	;'v'
  3150  00F7F0  69                 	db	105	;'i'
  3151  00F7F1  6E                 	db	110	;'n'
  3152  00F7F2  67                 	db	103	;'g'
  3153  00F7F3  72                 	db	114	;'r'
  3154  00F7F4  6F                 	db	111	;'o'
  3155  00F7F5  6F                 	db	111	;'o'
  3156  00F7F6  6D                 	db	109	;'m'
  3157  00F7F7  6C                 	db	108	;'l'
  3158  00F7F8  69                 	db	105	;'i'
  3159  00F7F9  67                 	db	103	;'g'
  3160  00F7FA  68                 	db	104	;'h'
  3161  00F7FB  74                 	db	116	;'t'
  3162  00F7FC  3D                 	db	61	;'='
  3163  00F7FD  6F                 	db	111	;'o'
  3164  00F7FE  6E                 	db	110	;'n'
  3165  00F7FF  00                 	db	0
  3166  00F800                     STR_30:
  3167  00F800  53                 	db	83	;'S'
  3168  00F801  79                 	db	121	;'y'
  3169  00F802  73                 	db	115	;'s'
  3170  00F803  74                 	db	116	;'t'
  3171  00F804  65                 	db	101	;'e'
  3172  00F805  6D                 	db	109	;'m'
  3173  00F806  20                 	db	32
  3174  00F807  42                 	db	66	;'B'
  3175  00F808  61                 	db	97	;'a'
  3176  00F809  75                 	db	117	;'u'
  3177  00F80A  64                 	db	100	;'d'
  3178  00F80B  20                 	db	32
  3179  00F80C  69                 	db	105	;'i'
  3180  00F80D  73                 	db	115	;'s'
  3181  00F80E  20                 	db	32
  3182  00F80F  25                 	db	37
  3183  00F810  6C                 	db	108	;'l'
  3184  00F811  75                 	db	117	;'u'
  3185  00F812  00                 	db	0
  3186  00F813                     STR_6:
  3187  00F813  46                 	db	70	;'F'
  3188  00F814  69                 	db	105	;'i'
  3189  00F815  72                 	db	114	;'r'
  3190  00F816  6D                 	db	109	;'m'
  3191  00F817  77                 	db	119	;'w'
  3192  00F818  61                 	db	97	;'a'
  3193  00F819  72                 	db	114	;'r'
  3194  00F81A  65                 	db	101	;'e'
  3195  00F81B  20                 	db	32
  3196  00F81C  56                 	db	86	;'V'
  3197  00F81D  65                 	db	101	;'e'
  3198  00F81E  72                 	db	114	;'r'
  3199  00F81F  73                 	db	115	;'s'
  3200  00F820  69                 	db	105	;'i'
  3201  00F821  6F                 	db	111	;'o'
  3202  00F822  6E                 	db	110	;'n'
  3203  00F823  3A                 	db	58	;':'
  3204  00F824  20                 	db	32
  3205  00F825  00                 	db	0
  3206  00F826                     STR_151:
  3207  00F826  63                 	db	99	;'c'
  3208  00F827  6F                 	db	111	;'o'
  3209  00F828  6C                 	db	108	;'l'
  3210  00F829  6F                 	db	111	;'o'
  3211  00F82A  72                 	db	114	;'r'
  3212  00F82B  65                 	db	101	;'e'
  3213  00F82C  64                 	db	100	;'d'
  3214  00F82D  20                 	db	32
  3215  00F82E  6C                 	db	108	;'l'
  3216  00F82F  69                 	db	105	;'i'
  3217  00F830  67                 	db	103	;'g'
  3218  00F831  68                 	db	104	;'h'
  3219  00F832  74                 	db	116	;'t'
  3220  00F833  73                 	db	115	;'s'
  3221  00F834  0D                 	db	13
  3222  00F835  0A                 	db	10
  3223  00F836  0A                 	db	10
  3224  00F837  00                 	db	0
  3225  00F838                     STR_315:
  3226  00F838  49                 	db	73	;'I'
  3227  00F839  6E                 	db	110	;'n'
  3228  00F83A  76                 	db	118	;'v'
  3229  00F83B  61                 	db	97	;'a'
  3230  00F83C  6C                 	db	108	;'l'
  3231  00F83D  69                 	db	105	;'i'
  3232  00F83E  64                 	db	100	;'d'
  3233  00F83F  20                 	db	32
  3234  00F840  43                 	db	67	;'C'
  3235  00F841  6F                 	db	111	;'o'
  3236  00F842  6D                 	db	109	;'m'
  3237  00F843  6D                 	db	109	;'m'
  3238  00F844  61                 	db	97	;'a'
  3239  00F845  6E                 	db	110	;'n'
  3240  00F846  64                 	db	100	;'d'
  3241  00F847  0D                 	db	13
  3242  00F848  0A                 	db	10
  3243  00F849  00                 	db	0
  3244  00F84A                     STR_146:
  3245  00F84A  43                 	db	67	;'C'
  3246  00F84B  68                 	db	104	;'h'
  3247  00F84C  72                 	db	114	;'r'
  3248  00F84D  69                 	db	105	;'i'
  3249  00F84E  73                 	db	115	;'s'
  3250  00F84F  74                 	db	116	;'t'
  3251  00F850  6D                 	db	109	;'m'
  3252  00F851  61                 	db	97	;'a'
  3253  00F852  73                 	db	115	;'s'
  3254  00F853  20                 	db	32
  3255  00F854  57                 	db	87	;'W'
  3256  00F855  68                 	db	104	;'h'
  3257  00F856  61                 	db	97	;'a'
  3258  00F857  74                 	db	116	;'t'
  3259  00F858  3F                 	db	63	;'?'
  3260  00F859  3F                 	db	63	;'?'
  3261  00F85A  3F                 	db	63	;'?'
  3262  00F85B  00                 	db	0
  3263  00F85C                     STR_79:
  3264  00F85C  6C                 	db	108	;'l'
  3265  00F85D  69                 	db	105	;'i'
  3266  00F85E  76                 	db	118	;'v'
  3267  00F85F  69                 	db	105	;'i'
  3268  00F860  6E                 	db	110	;'n'
  3269  00F861  67                 	db	103	;'g'
  3270  00F862  72                 	db	114	;'r'
  3271  00F863  6F                 	db	111	;'o'
  3272  00F864  6F                 	db	111	;'o'
  3273  00F865  6D                 	db	109	;'m'
  3274  00F866  66                 	db	102	;'f'
  3275  00F867  61                 	db	97	;'a'
  3276  00F868  6E                 	db	110	;'n'
  3277  00F869  3D                 	db	61	;'='
  3278  00F86A  6F                 	db	111	;'o'
  3279  00F86B  66                 	db	102	;'f'
  3280  00F86C  66                 	db	102	;'f'
  3281  00F86D  00                 	db	0
  3282  00F86E                     STR_112:
  3283  00F86E  62                 	db	98	;'b'
  3284  00F86F  65                 	db	101	;'e'
  3285  00F870  64                 	db	100	;'d'
  3286  00F871  72                 	db	114	;'r'
  3287  00F872  6F                 	db	111	;'o'
  3288  00F873  6F                 	db	111	;'o'
  3289  00F874  6D                 	db	109	;'m'
  3290  00F875  73                 	db	115	;'s'
  3291  00F876  68                 	db	104	;'h'
  3292  00F877  61                 	db	97	;'a'
  3293  00F878  6B                 	db	107	;'k'
  3294  00F879  65                 	db	101	;'e'
  3295  00F87A  72                 	db	114	;'r'
  3296  00F87B  3D                 	db	61	;'='
  3297  00F87C  6F                 	db	111	;'o'
  3298  00F87D  66                 	db	102	;'f'
  3299  00F87E  66                 	db	102	;'f'
  3300  00F87F  00                 	db	0
  3301  00F880                     STR_258:
  3302  00F880  6A                 	db	106	;'j'
  3303  00F881  6F                 	db	111	;'o'
  3304  00F882  65                 	db	101	;'e'
  3305  00F883  73                 	db	115	;'s'
  3306  00F884  72                 	db	114	;'r'
  3307  00F885  6F                 	db	111	;'o'
  3308  00F886  6F                 	db	111	;'o'
  3309  00F887  6D                 	db	109	;'m'
  3310  00F888  6C                 	db	108	;'l'
  3311  00F889  69                 	db	105	;'i'
  3312  00F88A  67                 	db	103	;'g'
  3313  00F88B  68                 	db	104	;'h'
  3314  00F88C  74                 	db	116	;'t'
  3315  00F88D  3D                 	db	61	;'='
  3316  00F88E  6F                 	db	111	;'o'
  3317  00F88F  66                 	db	102	;'f'
  3318  00F890  66                 	db	102	;'f'
  3319  00F891  00                 	db	0
  3320  00F892                     STR_77:
  3321  00F892  4C                 	db	76	;'L'
  3322  00F893  69                 	db	105	;'i'
  3323  00F894  76                 	db	118	;'v'
  3324  00F895  69                 	db	105	;'i'
  3325  00F896  6E                 	db	110	;'n'
  3326  00F897  67                 	db	103	;'g'
  3327  00F898  72                 	db	114	;'r'
  3328  00F899  6F                 	db	111	;'o'
  3329  00F89A  6F                 	db	111	;'o'
  3330  00F89B  6D                 	db	109	;'m'
  3331  00F89C  20                 	db	32
  3332  00F89D  46                 	db	70	;'F'
  3333  00F89E  61                 	db	97	;'a'
  3334  00F89F  6E                 	db	110	;'n'
  3335  00F8A0  20                 	db	32
  3336  00F8A1  4F                 	db	79	;'O'
  3337  00F8A2  6E                 	db	110	;'n'
  3338  00F8A3  00                 	db	0
  3339  00F8A4                     STR_110:
  3340  00F8A4  42                 	db	66	;'B'
  3341  00F8A5  65                 	db	101	;'e'
  3342  00F8A6  64                 	db	100	;'d'
  3343  00F8A7  72                 	db	114	;'r'
  3344  00F8A8  6F                 	db	111	;'o'
  3345  00F8A9  6F                 	db	111	;'o'
  3346  00F8AA  6D                 	db	109	;'m'
  3347  00F8AB  20                 	db	32
  3348  00F8AC  53                 	db	83	;'S'
  3349  00F8AD  68                 	db	104	;'h'
  3350  00F8AE  61                 	db	97	;'a'
  3351  00F8AF  6B                 	db	107	;'k'
  3352  00F8B0  65                 	db	101	;'e'
  3353  00F8B1  72                 	db	114	;'r'
  3354  00F8B2  20                 	db	32
  3355  00F8B3  4F                 	db	79	;'O'
  3356  00F8B4  6E                 	db	110	;'n'
  3357  00F8B5  00                 	db	0
  3358  00F8B6                     STR_308:
  3359  00F8B6  77                 	db	119	;'w'
  3360  00F8B7  69                 	db	105	;'i'
  3361  00F8B8  74                 	db	116	;'t'
  3362  00F8B9  68                 	db	104	;'h'
  3363  00F8BA  65                 	db	101	;'e'
  3364  00F8BB  76                 	db	118	;'v'
  3365  00F8BC  65                 	db	101	;'e'
  3366  00F8BD  6E                 	db	110	;'n'
  3367  00F8BE  70                 	db	112	;'p'
  3368  00F8BF  61                 	db	97	;'a'
  3369  00F8C0  72                 	db	114	;'r'
  3370  00F8C1  69                 	db	105	;'i'
  3371  00F8C2  74                 	db	116	;'t'
  3372  00F8C3  79                 	db	121	;'y'
  3373  00F8C4  62                 	db	98	;'b'
  3374  00F8C5  69                 	db	105	;'i'
  3375  00F8C6  74                 	db	116	;'t'
  3376  00F8C7  00                 	db	0
  3377  00F8C8                     STR_324:
  3378  00F8C8  30                 	db	48	;'0'
  3379  00F8C9  31                 	db	49	;'1'
  3380  00F8CA  32                 	db	50	;'2'
  3381  00F8CB  33                 	db	51	;'3'
  3382  00F8CC  34                 	db	52	;'4'
  3383  00F8CD  35                 	db	53	;'5'
  3384  00F8CE  36                 	db	54	;'6'
  3385  00F8CF  37                 	db	55	;'7'
  3386  00F8D0  38                 	db	56	;'8'
  3387  00F8D1  39                 	db	57	;'9'
  3388  00F8D2  41                 	db	65	;'A'
  3389  00F8D3  42                 	db	66	;'B'
  3390  00F8D4  43                 	db	67	;'C'
  3391  00F8D5  44                 	db	68	;'D'
  3392  00F8D6  45                 	db	69	;'E'
  3393  00F8D7  46                 	db	70	;'F'
  3394  00F8D8  00                 	db	0
  3395  00F8D9                     STR_325:
  3396  00F8D9  30                 	db	48	;'0'
  3397  00F8DA  31                 	db	49	;'1'
  3398  00F8DB  32                 	db	50	;'2'
  3399  00F8DC  33                 	db	51	;'3'
  3400  00F8DD  34                 	db	52	;'4'
  3401  00F8DE  35                 	db	53	;'5'
  3402  00F8DF  36                 	db	54	;'6'
  3403  00F8E0  37                 	db	55	;'7'
  3404  00F8E1  38                 	db	56	;'8'
  3405  00F8E2  39                 	db	57	;'9'
  3406  00F8E3  61                 	db	97	;'a'
  3407  00F8E4  62                 	db	98	;'b'
  3408  00F8E5  63                 	db	99	;'c'
  3409  00F8E6  64                 	db	100	;'d'
  3410  00F8E7  65                 	db	101	;'e'
  3411  00F8E8  66                 	db	102	;'f'
  3412  00F8E9  00                 	db	0
  3413  00F8EA                     STR_210:
  3414  00F8EA  41                 	db	65	;'A'
  3415  00F8EB  44                 	db	68	;'D'
  3416  00F8EC  43                 	db	67	;'C'
  3417  00F8ED  20                 	db	32
  3418  00F8EE  48                 	db	72	;'H'
  3419  00F8EF  65                 	db	101	;'e'
  3420  00F8F0  6C                 	db	108	;'l'
  3421  00F8F1  70                 	db	112	;'p'
  3422  00F8F2  20                 	db	32
  3423  00F8F3  4D                 	db	77	;'M'
  3424  00F8F4  65                 	db	101	;'e'
  3425  00F8F5  6E                 	db	110	;'n'
  3426  00F8F6  75                 	db	117	;'u'
  3427  00F8F7  0D                 	db	13
  3428  00F8F8  0A                 	db	10
  3429  00F8F9  0A                 	db	10
  3430  00F8FA  00                 	db	0
  3431  00F8FB                     STR_60:
  3432  00F8FB  4C                 	db	76	;'L'
  3433  00F8FC  45                 	db	69	;'E'
  3434  00F8FD  44                 	db	68	;'D'
  3435  00F8FE  20                 	db	32
  3436  00F8FF  48                 	db	72	;'H'
  3437  00F900  65                 	db	101	;'e'
  3438  00F901  6C                 	db	108	;'l'
  3439  00F902  70                 	db	112	;'p'
  3440  00F903  20                 	db	32
  3441  00F904  4D                 	db	77	;'M'
  3442  00F905  65                 	db	101	;'e'
  3443  00F906  6E                 	db	110	;'n'
  3444  00F907  75                 	db	117	;'u'
  3445  00F908  0D                 	db	13
  3446  00F909  0A                 	db	10
  3447  00F90A  0A                 	db	10
  3448  00F90B  00                 	db	0
  3449  00F90C                     STR_207:
  3450  00F90C  43                 	db	67	;'C'
  3451  00F90D  68                 	db	104	;'h'
  3452  00F90E  6E                 	db	110	;'n'
  3453  00F90F  6C                 	db	108	;'l'
  3454  00F910  20                 	db	32
  3455  00F911  73                 	db	115	;'s'
  3456  00F912  65                 	db	101	;'e'
  3457  00F913  74                 	db	116	;'t'
  3458  00F914  20                 	db	32
  3459  00F915  74                 	db	116	;'t'
  3460  00F916  6F                 	db	111	;'o'
  3461  00F917  20                 	db	32
  3462  00F918  25                 	db	37
  3463  00F919  64                 	db	100	;'d'
  3464  00F91A  0D                 	db	13
  3465  00F91B  0A                 	db	10
  3466  00F91C  00                 	db	0
  3467  00F91D                     STR_276:
  3468  00F91D  43                 	db	67	;'C'
  3469  00F91E  68                 	db	104	;'h'
  3470  00F91F  72                 	db	114	;'r'
  3471  00F920  69                 	db	105	;'i'
  3472  00F921  73                 	db	115	;'s'
  3473  00F922  74                 	db	116	;'t'
  3474  00F923  6D                 	db	109	;'m'
  3475  00F924  61                 	db	97	;'a'
  3476  00F925  73                 	db	115	;'s'
  3477  00F926  20                 	db	32
  3478  00F927  54                 	db	84	;'T'
  3479  00F928  72                 	db	114	;'r'
  3480  00F929  65                 	db	101	;'e'
  3481  00F92A  65                 	db	101	;'e'
  3482  00F92B  0D                 	db	13
  3483  00F92C  0A                 	db	10
  3484  00F92D  00                 	db	0
  3485  00F92E                     STR_65:
  3486  00F92E  69                 	db	105	;'i'
  3487  00F92F  2E                 	db	46
  3488  00F930  65                 	db	101	;'e'
  3489  00F931  2E                 	db	46
  3490  00F932  20                 	db	32
  3491  00F933  4C                 	db	76	;'L'
  3492  00F934  45                 	db	69	;'E'
  3493  00F935  44                 	db	68	;'D'
  3494  00F936  31                 	db	49	;'1'
  3495  00F937  20                 	db	32
  3496  00F938  3D                 	db	61	;'='
  3497  00F939  20                 	db	32
  3498  00F93A  4F                 	db	79	;'O'
  3499  00F93B  6E                 	db	110	;'n'
  3500  00F93C  0D                 	db	13
  3501  00F93D  0A                 	db	10
  3502  00F93E  00                 	db	0
  3503  00F93F                     STR_225:
  3504  00F93F  52                 	db	82	;'R'
  3505  00F940  54                 	db	84	;'T'
  3506  00F941  43                 	db	67	;'C'
  3507  00F942  20                 	db	32
  3508  00F943  54                 	db	84	;'T'
  3509  00F944  69                 	db	105	;'i'
  3510  00F945  6D                 	db	109	;'m'
  3511  00F946  65                 	db	101	;'e'
  3512  00F947  20                 	db	32
  3513  00F948  69                 	db	105	;'i'
  3514  00F949  73                 	db	115	;'s'
  3515  00F94A  3A                 	db	58	;':'
  3516  00F94B  20                 	db	32
  3517  00F94C  20                 	db	32
  3518  00F94D  20                 	db	32
  3519  00F94E  20                 	db	32
  3520  00F94F  00                 	db	0
  3521  00F950                     STR_100:
  3522  00F950  62                 	db	98	;'b'
  3523  00F951  65                 	db	101	;'e'
  3524  00F952  64                 	db	100	;'d'
  3525  00F953  72                 	db	114	;'r'
  3526  00F954  6F                 	db	111	;'o'
  3527  00F955  6F                 	db	111	;'o'
  3528  00F956  6D                 	db	109	;'m'
  3529  00F957  6C                 	db	108	;'l'
  3530  00F958  69                 	db	105	;'i'
  3531  00F959  67                 	db	103	;'g'
  3532  00F95A  68                 	db	104	;'h'
  3533  00F95B  74                 	db	116	;'t'
  3534  00F95C  3D                 	db	61	;'='
  3535  00F95D  6F                 	db	111	;'o'
  3536  00F95E  66                 	db	102	;'f'
  3537  00F95F  66                 	db	102	;'f'
  3538  00F960  00                 	db	0
  3539  00F961                     STR_229:
  3540  00F961  52                 	db	82	;'R'
  3541  00F962  54                 	db	84	;'T'
  3542  00F963  43                 	db	67	;'C'
  3543  00F964  20                 	db	32
  3544  00F965  69                 	db	105	;'i'
  3545  00F966  73                 	db	115	;'s'
  3546  00F967  6E                 	db	110	;'n'
  3547  00F968  74                 	db	116	;'t'
  3548  00F969  20                 	db	32
  3549  00F96A  77                 	db	119	;'w'
  3550  00F96B  6F                 	db	111	;'o'
  3551  00F96C  72                 	db	114	;'r'
  3552  00F96D  6B                 	db	107	;'k'
  3553  00F96E  69                 	db	105	;'i'
  3554  00F96F  6E                 	db	110	;'n'
  3555  00F970  67                 	db	103	;'g'
  3556  00F971  00                 	db	0
  3557  00F972                     STR_76:
  3558  00F972  6C                 	db	108	;'l'
  3559  00F973  69                 	db	105	;'i'
  3560  00F974  76                 	db	118	;'v'
  3561  00F975  69                 	db	105	;'i'
  3562  00F976  6E                 	db	110	;'n'
  3563  00F977  67                 	db	103	;'g'
  3564  00F978  72                 	db	114	;'r'
  3565  00F979  6F                 	db	111	;'o'
  3566  00F97A  6F                 	db	111	;'o'
  3567  00F97B  6D                 	db	109	;'m'
  3568  00F97C  66                 	db	102	;'f'
  3569  00F97D  61                 	db	97	;'a'
  3570  00F97E  6E                 	db	110	;'n'
  3571  00F97F  3D                 	db	61	;'='
  3572  00F980  6F                 	db	111	;'o'
  3573  00F981  6E                 	db	110	;'n'
  3574  00F982  00                 	db	0
  3575  00F983                     STR_109:
  3576  00F983  62                 	db	98	;'b'
  3577  00F984  65                 	db	101	;'e'
  3578  00F985  64                 	db	100	;'d'
  3579  00F986  72                 	db	114	;'r'
  3580  00F987  6F                 	db	111	;'o'
  3581  00F988  6F                 	db	111	;'o'
  3582  00F989  6D                 	db	109	;'m'
  3583  00F98A  73                 	db	115	;'s'
  3584  00F98B  68                 	db	104	;'h'
  3585  00F98C  61                 	db	97	;'a'
  3586  00F98D  6B                 	db	107	;'k'
  3587  00F98E  65                 	db	101	;'e'
  3588  00F98F  72                 	db	114	;'r'
  3589  00F990  3D                 	db	61	;'='
  3590  00F991  6F                 	db	111	;'o'
  3591  00F992  6E                 	db	110	;'n'
  3592  00F993  00                 	db	0
  3593  00F994                     STR_255:
  3594  00F994  6A                 	db	106	;'j'
  3595  00F995  6F                 	db	111	;'o'
  3596  00F996  65                 	db	101	;'e'
  3597  00F997  73                 	db	115	;'s'
  3598  00F998  72                 	db	114	;'r'
  3599  00F999  6F                 	db	111	;'o'
  3600  00F99A  6F                 	db	111	;'o'
  3601  00F99B  6D                 	db	109	;'m'
  3602  00F99C  6C                 	db	108	;'l'
  3603  00F99D  69                 	db	105	;'i'
  3604  00F99E  67                 	db	103	;'g'
  3605  00F99F  68                 	db	104	;'h'
  3606  00F9A0  74                 	db	116	;'t'
  3607  00F9A1  3D                 	db	61	;'='
  3608  00F9A2  6F                 	db	111	;'o'
  3609  00F9A3  6E                 	db	110	;'n'
  3610  00F9A4  00                 	db	0
  3611  00F9A5                     STR_161:
  3612  00F9A5  72                 	db	114	;'r'
  3613  00F9A6  65                 	db	101	;'e'
  3614  00F9A7  64                 	db	100	;'d'
  3615  00F9A8  6C                 	db	108	;'l'
  3616  00F9A9  65                 	db	101	;'e'
  3617  00F9AA  64                 	db	100	;'d'
  3618  00F9AB  62                 	db	98	;'b'
  3619  00F9AC  72                 	db	114	;'r'
  3620  00F9AD  69                 	db	105	;'i'
  3621  00F9AE  67                 	db	103	;'g'
  3622  00F9AF  68                 	db	104	;'h'
  3623  00F9B0  74                 	db	116	;'t'
  3624  00F9B1  6E                 	db	110	;'n'
  3625  00F9B2  65                 	db	101	;'e'
  3626  00F9B3  73                 	db	115	;'s'
  3627  00F9B4  73                 	db	115	;'s'
  3628  00F9B5  00                 	db	0
  3629  00F9B6                     STR_307:
  3630  00F9B6  77                 	db	119	;'w'
  3631  00F9B7  69                 	db	105	;'i'
  3632  00F9B8  74                 	db	116	;'t'
  3633  00F9B9  68                 	db	104	;'h'
  3634  00F9BA  6F                 	db	111	;'o'
  3635  00F9BB  64                 	db	100	;'d'
  3636  00F9BC  64                 	db	100	;'d'
  3637  00F9BD  70                 	db	112	;'p'
  3638  00F9BE  61                 	db	97	;'a'
  3639  00F9BF  72                 	db	114	;'r'
  3640  00F9C0  69                 	db	105	;'i'
  3641  00F9C1  74                 	db	116	;'t'
  3642  00F9C2  79                 	db	121	;'y'
  3643  00F9C3  62                 	db	98	;'b'
  3644  00F9C4  69                 	db	105	;'i'
  3645  00F9C5  74                 	db	116	;'t'
  3646  00F9C6  00                 	db	0
  3647  00F9C7                     STR_177:
  3648  00F9C7  52                 	db	82	;'R'
  3649  00F9C8  65                 	db	101	;'e'
  3650  00F9C9  64                 	db	100	;'d'
  3651  00F9CA  20                 	db	32
  3652  00F9CB  4C                 	db	76	;'L'
  3653  00F9CC  45                 	db	69	;'E'
  3654  00F9CD  44                 	db	68	;'D'
  3655  00F9CE  20                 	db	32
  3656  00F9CF  43                 	db	67	;'C'
  3657  00F9D0  6F                 	db	111	;'o'
  3658  00F9D1  6E                 	db	110	;'n'
  3659  00F9D2  74                 	db	116	;'t'
  3660  00F9D3  72                 	db	114	;'r'
  3661  00F9D4  61                 	db	97	;'a'
  3662  00F9D5  73                 	db	115	;'s'
  3663  00F9D6  74                 	db	116	;'t'
  3664  00F9D7  00                 	db	0
  3665  00F9D8                     STR_19:
  3666  00F9D8  53                 	db	83	;'S'
  3667  00F9D9  74                 	db	116	;'t'
  3668  00F9DA  61                 	db	97	;'a'
  3669  00F9DB  72                 	db	114	;'r'
  3670  00F9DC  74                 	db	116	;'t'
  3671  00F9DD  69                 	db	105	;'i'
  3672  00F9DE  6E                 	db	110	;'n'
  3673  00F9DF  67                 	db	103	;'g'
  3674  00F9E0  2E                 	db	46
  3675  00F9E1  2E                 	db	46
  3676  00F9E2  2E                 	db	46
  3677  00F9E3  2E                 	db	46
  3678  00F9E4  2E                 	db	46
  3679  00F9E5  2E                 	db	46
  3680  00F9E6  2E                 	db	46
  3681  00F9E7  2E                 	db	46
  3682  00F9E8  00                 	db	0
  3683  00F9E9                     STR_186:
  3684  00F9E9  45                 	db	69	;'E'
  3685  00F9EA  52                 	db	82	;'R'
  3686  00F9EB  52                 	db	82	;'R'
  3687  00F9EC  3A                 	db	58	;':'
  3688  00F9ED  20                 	db	32
  3689  00F9EE  43                 	db	67	;'C'
  3690  00F9EF  4E                 	db	78	;'N'
  3691  00F9F0  53                 	db	83	;'S'
  3692  00F9F1  54                 	db	84	;'T'
  3693  00F9F2  20                 	db	32
  3694  00F9F3  3E                 	db	62	;'>'
  3695  00F9F4  20                 	db	32
  3696  00F9F5  31                 	db	49	;'1'
  3697  00F9F6  30                 	db	48	;'0'
  3698  00F9F7  30                 	db	48	;'0'
  3699  00F9F8  00                 	db	0
  3700  00F9F9                     STR_167:
  3701  00F9F9  45                 	db	69	;'E'
  3702  00F9FA  52                 	db	82	;'R'
  3703  00F9FB  52                 	db	82	;'R'
  3704  00F9FC  3A                 	db	58	;':'
  3705  00F9FD  20                 	db	32
  3706  00F9FE  44                 	db	68	;'D'
  3707  00F9FF  75                 	db	117	;'u'
  3708  00FA00  74                 	db	116	;'t'
  3709  00FA01  79                 	db	121	;'y'
  3710  00FA02  20                 	db	32
  3711  00FA03  3E                 	db	62	;'>'
  3712  00FA04  20                 	db	32
  3713  00FA05  31                 	db	49	;'1'
  3714  00FA06  30                 	db	48	;'0'
  3715  00FA07  30                 	db	48	;'0'
  3716  00FA08  00                 	db	0
  3717  00FA09                     STR_83:
  3718  00FA09  4C                 	db	76	;'L'
  3719  00FA0A  56                 	db	86	;'V'
  3720  00FA0B  4E                 	db	78	;'N'
  3721  00FA0C  47                 	db	71	;'G'
  3722  00FA0D  20                 	db	32
  3723  00FA0E  52                 	db	82	;'R'
  3724  00FA0F  6D                 	db	109	;'m'
  3725  00FA10  20                 	db	32
  3726  00FA11  54                 	db	84	;'T'
  3727  00FA12  61                 	db	97	;'a'
  3728  00FA13  73                 	db	115	;'s'
  3729  00FA14  6B                 	db	107	;'k'
  3730  00FA15  3F                 	db	63	;'?'
  3731  00FA16  3F                 	db	63	;'?'
  3732  00FA17  3F                 	db	63	;'?'
  3733  00FA18  00                 	db	0
  3734  00FA19                     STR_115:
  3735  00FA19  42                 	db	66	;'B'
  3736  00FA1A  65                 	db	101	;'e'
  3737  00FA1B  64                 	db	100	;'d'
  3738  00FA1C  72                 	db	114	;'r'
  3739  00FA1D  6F                 	db	111	;'o'
  3740  00FA1E  6F                 	db	111	;'o'
  3741  00FA1F  6D                 	db	109	;'m'
  3742  00FA20  20                 	db	32
  3743  00FA21  54                 	db	84	;'T'
  3744  00FA22  61                 	db	97	;'a'
  3745  00FA23  73                 	db	115	;'s'
  3746  00FA24  6B                 	db	107	;'k'
  3747  00FA25  3F                 	db	63	;'?'
  3748  00FA26  3F                 	db	63	;'?'
  3749  00FA27  3F                 	db	63	;'?'
  3750  00FA28  00                 	db	0
  3751  00FA29                     STR_124:
  3752  00FA29  42                 	db	66	;'B'
  3753  00FA2A  65                 	db	101	;'e'
  3754  00FA2B  64                 	db	100	;'d'
  3755  00FA2C  72                 	db	114	;'r'
  3756  00FA2D  6F                 	db	111	;'o'
  3757  00FA2E  6F                 	db	111	;'o'
  3758  00FA2F  6D                 	db	109	;'m'
  3759  00FA30  20                 	db	32
  3760  00FA31  48                 	db	72	;'H'
  3761  00FA32  65                 	db	101	;'e'
  3762  00FA33  6C                 	db	108	;'l'
  3763  00FA34  70                 	db	112	;'p'
  3764  00FA35  3F                 	db	63	;'?'
  3765  00FA36  3F                 	db	63	;'?'
  3766  00FA37  3F                 	db	63	;'?'
  3767  00FA38  00                 	db	0
  3768  00FA39                     STR_173:
  3769  00FA39  52                 	db	82	;'R'
  3770  00FA3A  65                 	db	101	;'e'
  3771  00FA3B  64                 	db	100	;'d'
  3772  00FA3C  20                 	db	32
  3773  00FA3D  4C                 	db	76	;'L'
  3774  00FA3E  45                 	db	69	;'E'
  3775  00FA3F  44                 	db	68	;'D'
  3776  00FA40  20                 	db	32
  3777  00FA41  57                 	db	87	;'W'
  3778  00FA42  68                 	db	104	;'h'
  3779  00FA43  61                 	db	97	;'a'
  3780  00FA44  74                 	db	116	;'t'
  3781  00FA45  3F                 	db	63	;'?'
  3782  00FA46  3F                 	db	63	;'?'
  3783  00FA47  3F                 	db	63	;'?'
  3784  00FA48  00                 	db	0
  3785  00FA49                     STR_262:
  3786  00FA49  4A                 	db	74	;'J'
  3787  00FA4A  6F                 	db	111	;'o'
  3788  00FA4B  65                 	db	101	;'e'
  3789  00FA4C  20                 	db	32
  3790  00FA4D  72                 	db	114	;'r'
  3791  00FA4E  6F                 	db	111	;'o'
  3792  00FA4F  6F                 	db	111	;'o'
  3793  00FA50  6D                 	db	109	;'m'
  3794  00FA51  20                 	db	32
  3795  00FA52  77                 	db	119	;'w'
  3796  00FA53  68                 	db	104	;'h'
  3797  00FA54  61                 	db	97	;'a'
  3798  00FA55  74                 	db	116	;'t'
  3799  00FA56  3F                 	db	63	;'?'
  3800  00FA57  3F                 	db	63	;'?'
  3801  00FA58  00                 	db	0
  3802  00FA59                     STR_294:
  3803  00FA59  43                 	db	67	;'C'
  3804  00FA5A  68                 	db	104	;'h'
  3805  00FA5B  72                 	db	114	;'r'
  3806  00FA5C  69                 	db	105	;'i'
  3807  00FA5D  73                 	db	115	;'s'
  3808  00FA5E  74                 	db	116	;'t'
  3809  00FA5F  6D                 	db	109	;'m'
  3810  00FA60  61                 	db	97	;'a'
  3811  00FA61  73                 	db	115	;'s'
  3812  00FA62  20                 	db	32
  3813  00FA63  54                 	db	84	;'T'
  3814  00FA64  72                 	db	114	;'r'
  3815  00FA65  65                 	db	101	;'e'
  3816  00FA66  65                 	db	101	;'e'
  3817  00FA67  3F                 	db	63	;'?'
  3818  00FA68  00                 	db	0
  3819  00FA69                     STR_137:
  3820  00FA69  58                 	db	88	;'X'
  3821  00FA6A  4D                 	db	77	;'M'
  3822  00FA6B  41                 	db	65	;'A'
  3823  00FA6C  53                 	db	83	;'S'
  3824  00FA6D  20                 	db	32
  3825  00FA6E  43                 	db	67	;'C'
  3826  00FA6F  6F                 	db	111	;'o'
  3827  00FA70  6C                 	db	108	;'l'
  3828  00FA71  6F                 	db	111	;'o'
  3829  00FA72  72                 	db	114	;'r'
  3830  00FA73  20                 	db	32
  3831  00FA74  54                 	db	84	;'T'
  3832  00FA75  47                 	db	71	;'G'
  3833  00FA76  4C                 	db	76	;'L'
  3834  00FA77  44                 	db	68	;'D'
  3835  00FA78  00                 	db	0
  3836  00FA79                     STR_75:
  3837  00FA79  4C                 	db	76	;'L'
  3838  00FA7A  56                 	db	86	;'V'
  3839  00FA7B  4E                 	db	78	;'N'
  3840  00FA7C  47                 	db	71	;'G'
  3841  00FA7D  20                 	db	32
  3842  00FA7E  52                 	db	82	;'R'
  3843  00FA7F  6D                 	db	109	;'m'
  3844  00FA80  20                 	db	32
  3845  00FA81  4C                 	db	76	;'L'
  3846  00FA82  74                 	db	116	;'t'
  3847  00FA83  20                 	db	32
  3848  00FA84  54                 	db	84	;'T'
  3849  00FA85  47                 	db	71	;'G'
  3850  00FA86  4C                 	db	76	;'L'
  3851  00FA87  44                 	db	68	;'D'
  3852  00FA88  00                 	db	0
  3853  00FA89                     STR_102:
  3854  00FA89  42                 	db	66	;'B'
  3855  00FA8A  65                 	db	101	;'e'
  3856  00FA8B  64                 	db	100	;'d'
  3857  00FA8C  72                 	db	114	;'r'
  3858  00FA8D  6F                 	db	111	;'o'
  3859  00FA8E  6F                 	db	111	;'o'
  3860  00FA8F  6D                 	db	109	;'m'
  3861  00FA90  20                 	db	32
  3862  00FA91  4C                 	db	76	;'L'
  3863  00FA92  74                 	db	116	;'t'
  3864  00FA93  20                 	db	32
  3865  00FA94  54                 	db	84	;'T'
  3866  00FA95  47                 	db	71	;'G'
  3867  00FA96  4C                 	db	76	;'L'
  3868  00FA97  44                 	db	68	;'D'
  3869  00FA98  00                 	db	0
  3870  00FA99                     STR_222:
  3871  00FA99  52                 	db	82	;'R'
  3872  00FA9A  54                 	db	84	;'T'
  3873  00FA9B  43                 	db	67	;'C'
  3874  00FA9C  20                 	db	32
  3875  00FA9D  42                 	db	66	;'B'
  3876  00FA9E  74                 	db	116	;'t'
  3877  00FA9F  79                 	db	121	;'y'
  3878  00FAA0  20                 	db	32
  3879  00FAA1  3D                 	db	61	;'='
  3880  00FAA2  20                 	db	32
  3881  00FAA3  25                 	db	37
  3882  00FAA4  64                 	db	100	;'d'
  3883  00FAA5  2E                 	db	46
  3884  00FAA6  25                 	db	37
  3885  00FAA7  64                 	db	100	;'d'
  3886  00FAA8  00                 	db	0
  3887  00FAA9                     STR_316:
  3888  00FAA9  49                 	db	73	;'I'
  3889  00FAAA  6E                 	db	110	;'n'
  3890  00FAAB  76                 	db	118	;'v'
  3891  00FAAC  61                 	db	97	;'a'
  3892  00FAAD  6C                 	db	108	;'l'
  3893  00FAAE  69                 	db	105	;'i'
  3894  00FAAF  64                 	db	100	;'d'
  3895  00FAB0  20                 	db	32
  3896  00FAB1  43                 	db	67	;'C'
  3897  00FAB2  6F                 	db	111	;'o'
  3898  00FAB3  6D                 	db	109	;'m'
  3899  00FAB4  6D                 	db	109	;'m'
  3900  00FAB5  61                 	db	97	;'a'
  3901  00FAB6  6E                 	db	110	;'n'
  3902  00FAB7  64                 	db	100	;'d'
  3903  00FAB8  00                 	db	0
  3904  00FAB9                     STR_205:
  3905  00FAB9  45                 	db	69	;'E'
  3906  00FABA  52                 	db	82	;'R'
  3907  00FABB  52                 	db	82	;'R'
  3908  00FABC  3A                 	db	58	;':'
  3909  00FABD  20                 	db	32
  3910  00FABE  43                 	db	67	;'C'
  3911  00FABF  61                 	db	97	;'a'
  3912  00FAC0  6E                 	db	110	;'n'
  3913  00FAC1  74                 	db	116	;'t'
  3914  00FAC2  20                 	db	32
  3915  00FAC3  70                 	db	112	;'p'
  3916  00FAC4  61                 	db	97	;'a'
  3917  00FAC5  72                 	db	114	;'r'
  3918  00FAC6  73                 	db	115	;'s'
  3919  00FAC7  65                 	db	101	;'e'
  3920  00FAC8  00                 	db	0
  3921  00FAC9                     STR_114:
  3922  00FAC9  42                 	db	66	;'B'
  3923  00FACA  65                 	db	101	;'e'
  3924  00FACB  64                 	db	100	;'d'
  3925  00FACC  72                 	db	114	;'r'
  3926  00FACD  6F                 	db	111	;'o'
  3927  00FACE  6F                 	db	111	;'o'
  3928  00FACF  6D                 	db	109	;'m'
  3929  00FAD0  20                 	db	32
  3930  00FAD1  53                 	db	83	;'S'
  3931  00FAD2  4B                 	db	75	;'K'
  3932  00FAD3  52                 	db	82	;'R'
  3933  00FAD4  20                 	db	32
  3934  00FAD5  4F                 	db	79	;'O'
  3935  00FAD6  66                 	db	102	;'f'
  3936  00FAD7  66                 	db	102	;'f'
  3937  00FAD8  00                 	db	0
  3938  00FAD9                     STR_107:
  3939  00FAD9  42                 	db	66	;'B'
  3940  00FADA  65                 	db	101	;'e'
  3941  00FADB  64                 	db	100	;'d'
  3942  00FADC  72                 	db	114	;'r'
  3943  00FADD  6F                 	db	111	;'o'
  3944  00FADE  6F                 	db	111	;'o'
  3945  00FADF  6D                 	db	109	;'m'
  3946  00FAE0  20                 	db	32
  3947  00FAE1  46                 	db	70	;'F'
  3948  00FAE2  61                 	db	97	;'a'
  3949  00FAE3  6E                 	db	110	;'n'
  3950  00FAE4  20                 	db	32
  3951  00FAE5  4F                 	db	79	;'O'
  3952  00FAE6  66                 	db	102	;'f'
  3953  00FAE7  66                 	db	102	;'f'
  3954  00FAE8  00                 	db	0
  3955  00FAE9                     STR_260:
  3956  00FAE9  4A                 	db	74	;'J'
  3957  00FAEA  6F                 	db	111	;'o'
  3958  00FAEB  65                 	db	101	;'e'
  3959  00FAEC  20                 	db	32
  3960  00FAED  72                 	db	114	;'r'
  3961  00FAEE  6F                 	db	111	;'o'
  3962  00FAEF  6F                 	db	111	;'o'
  3963  00FAF0  6D                 	db	109	;'m'
  3964  00FAF1  20                 	db	32
  3965  00FAF2  6C                 	db	108	;'l'
  3966  00FAF3  74                 	db	116	;'t'
  3967  00FAF4  20                 	db	32
  3968  00FAF5  4F                 	db	79	;'O'
  3969  00FAF6  66                 	db	102	;'f'
  3970  00FAF7  66                 	db	102	;'f'
  3971  00FAF8  00                 	db	0
  3972  00FAF9                     STR_203:
  3973  00FAF9  45                 	db	69	;'E'
  3974  00FAFA  52                 	db	82	;'R'
  3975  00FAFB  52                 	db	82	;'R'
  3976  00FAFC  3A                 	db	58	;':'
  3977  00FAFD  20                 	db	32
  3978  00FAFE  55                 	db	85	;'U'
  3979  00FAFF  73                 	db	115	;'s'
  3980  00FB00  65                 	db	101	;'e'
  3981  00FB01  20                 	db	32
  3982  00FB02  2B                 	db	43
  3983  00FB03  20                 	db	32
  3984  00FB04  43                 	db	67	;'C'
  3985  00FB05  68                 	db	104	;'h'
  3986  00FB06  6E                 	db	110	;'n'
  3987  00FB07  6C                 	db	108	;'l'
  3988  00FB08  00                 	db	0
  3989  00FB09                     STR_99:
  3990  00FB09  62                 	db	98	;'b'
  3991  00FB0A  65                 	db	101	;'e'
  3992  00FB0B  64                 	db	100	;'d'
  3993  00FB0C  72                 	db	114	;'r'
  3994  00FB0D  6F                 	db	111	;'o'
  3995  00FB0E  6F                 	db	111	;'o'
  3996  00FB0F  6D                 	db	109	;'m'
  3997  00FB10  6C                 	db	108	;'l'
  3998  00FB11  69                 	db	105	;'i'
  3999  00FB12  67                 	db	103	;'g'
  4000  00FB13  68                 	db	104	;'h'
  4001  00FB14  74                 	db	116	;'t'
  4002  00FB15  3D                 	db	61	;'='
  4003  00FB16  6F                 	db	111	;'o'
  4004  00FB17  6E                 	db	110	;'n'
  4005  00FB18  00                 	db	0
  4006  00FB19                     STR_301:
  4007  00FB19  62                 	db	98	;'b'
  4008  00FB1A  61                 	db	97	;'a'
  4009  00FB1B  75                 	db	117	;'u'
  4010  00FB1C  64                 	db	100	;'d'
  4011  00FB1D  77                 	db	119	;'w'
  4012  00FB1E  69                 	db	105	;'i'
  4013  00FB1F  6C                 	db	108	;'l'
  4014  00FB20  6C                 	db	108	;'l'
  4015  00FB21  62                 	db	98	;'b'
  4016  00FB22  65                 	db	101	;'e'
  4017  00FB23  73                 	db	115	;'s'
  4018  00FB24  65                 	db	101	;'e'
  4019  00FB25  74                 	db	116	;'t'
  4020  00FB26  74                 	db	116	;'t'
  4021  00FB27  6F                 	db	111	;'o'
  4022  00FB28  00                 	db	0
  4023  00FB29                     STR_90:
  4024  00FB29  4C                 	db	76	;'L'
  4025  00FB2A  56                 	db	86	;'V'
  4026  00FB2B  4E                 	db	78	;'N'
  4027  00FB2C  47                 	db	71	;'G'
  4028  00FB2D  20                 	db	32
  4029  00FB2E  52                 	db	82	;'R'
  4030  00FB2F  6D                 	db	109	;'m'
  4031  00FB30  20                 	db	32
  4032  00FB31  4C                 	db	76	;'L'
  4033  00FB32  74                 	db	116	;'t'
  4034  00FB33  20                 	db	32
  4035  00FB34  68                 	db	104	;'h'
  4036  00FB35  65                 	db	101	;'e'
  4037  00FB36  6C                 	db	108	;'l'
  4038  00FB37  70                 	db	112	;'p'
  4039  00FB38  00                 	db	0
  4040  00FB39                     STR_306:
  4041  00FB39  77                 	db	119	;'w'
  4042  00FB3A  69                 	db	105	;'i'
  4043  00FB3B  74                 	db	116	;'t'
  4044  00FB3C  68                 	db	104	;'h'
  4045  00FB3D  6E                 	db	110	;'n'
  4046  00FB3E  6F                 	db	111	;'o'
  4047  00FB3F  70                 	db	112	;'p'
  4048  00FB40  61                 	db	97	;'a'
  4049  00FB41  72                 	db	114	;'r'
  4050  00FB42  69                 	db	105	;'i'
  4051  00FB43  74                 	db	116	;'t'
  4052  00FB44  79                 	db	121	;'y'
  4053  00FB45  62                 	db	98	;'b'
  4054  00FB46  69                 	db	105	;'i'
  4055  00FB47  74                 	db	116	;'t'
  4056  00FB48  00                 	db	0
  4057  00FB49                     STR_18:
  4058  00FB49  53                 	db	83	;'S'
  4059  00FB4A  74                 	db	116	;'t'
  4060  00FB4B  61                 	db	97	;'a'
  4061  00FB4C  72                 	db	114	;'r'
  4062  00FB4D  74                 	db	116	;'t'
  4063  00FB4E  69                 	db	105	;'i'
  4064  00FB4F  6E                 	db	110	;'n'
  4065  00FB50  67                 	db	103	;'g'
  4066  00FB51  2E                 	db	46
  4067  00FB52  2E                 	db	46
  4068  00FB53  2E                 	db	46
  4069  00FB54  2E                 	db	46
  4070  00FB55  2E                 	db	46
  4071  00FB56  2E                 	db	46
  4072  00FB57  2E                 	db	46
  4073  00FB58  00                 	db	0
  4074  00FB59                     STR_283:
  4075  00FB59  43                 	db	67	;'C'
  4076  00FB5A  75                 	db	117	;'u'
  4077  00FB5B  72                 	db	114	;'r'
  4078  00FB5C  72                 	db	114	;'r'
  4079  00FB5D  65                 	db	101	;'e'
  4080  00FB5E  6E                 	db	110	;'n'
  4081  00FB5F  74                 	db	116	;'t'
  4082  00FB60  20                 	db	32
  4083  00FB61  54                 	db	84	;'T'
  4084  00FB62  69                 	db	105	;'i'
  4085  00FB63  6D                 	db	109	;'m'
  4086  00FB64  65                 	db	101	;'e'
  4087  00FB65  0D                 	db	13
  4088  00FB66  0A                 	db	10
  4089  00FB67  00                 	db	0
  4090  00FB68                     STR_150:
  4091  00FB68  77                 	db	119	;'w'
  4092  00FB69  68                 	db	104	;'h'
  4093  00FB6A  69                 	db	105	;'i'
  4094  00FB6B  74                 	db	116	;'t'
  4095  00FB6C  65                 	db	101	;'e'
  4096  00FB6D  20                 	db	32
  4097  00FB6E  6C                 	db	108	;'l'
  4098  00FB6F  69                 	db	105	;'i'
  4099  00FB70  67                 	db	103	;'g'
  4100  00FB71  68                 	db	104	;'h'
  4101  00FB72  74                 	db	116	;'t'
  4102  00FB73  73                 	db	115	;'s'
  4103  00FB74  0D                 	db	13
  4104  00FB75  0A                 	db	10
  4105  00FB76  00                 	db	0
  4106  00FB77                     STR_190:
  4107  00FB77  43                 	db	67	;'C'
  4108  00FB78  4E                 	db	78	;'N'
  4109  00FB79  53                 	db	83	;'S'
  4110  00FB7A  54                 	db	84	;'T'
  4111  00FB7B  20                 	db	32
  4112  00FB7C  73                 	db	115	;'s'
  4113  00FB7D  65                 	db	101	;'e'
  4114  00FB7E  74                 	db	116	;'t'
  4115  00FB7F  20                 	db	32
  4116  00FB80  74                 	db	116	;'t'
  4117  00FB81  6F                 	db	111	;'o'
  4118  00FB82  20                 	db	32
  4119  00FB83  25                 	db	37
  4120  00FB84  64                 	db	100	;'d'
  4121  00FB85  00                 	db	0
  4122  00FB86                     STR_171:
  4123  00FB86  44                 	db	68	;'D'
  4124  00FB87  75                 	db	117	;'u'
  4125  00FB88  74                 	db	116	;'t'
  4126  00FB89  79                 	db	121	;'y'
  4127  00FB8A  20                 	db	32
  4128  00FB8B  73                 	db	115	;'s'
  4129  00FB8C  65                 	db	101	;'e'
  4130  00FB8D  74                 	db	116	;'t'
  4131  00FB8E  20                 	db	32
  4132  00FB8F  74                 	db	116	;'t'
  4133  00FB90  6F                 	db	111	;'o'
  4134  00FB91  20                 	db	32
  4135  00FB92  25                 	db	37
  4136  00FB93  64                 	db	100	;'d'
  4137  00FB94  00                 	db	0
  4138  00FB95                     STR_145:
  4139  00FB95  58                 	db	88	;'X'
  4140  00FB96  4D                 	db	77	;'M'
  4141  00FB97  41                 	db	65	;'A'
  4142  00FB98  53                 	db	83	;'S'
  4143  00FB99  20                 	db	32
  4144  00FB9A  57                 	db	87	;'W'
  4145  00FB9B  68                 	db	104	;'h'
  4146  00FB9C  69                 	db	105	;'i'
  4147  00FB9D  74                 	db	116	;'t'
  4148  00FB9E  65                 	db	101	;'e'
  4149  00FB9F  20                 	db	32
  4150  00FBA0  4F                 	db	79	;'O'
  4151  00FBA1  66                 	db	102	;'f'
  4152  00FBA2  66                 	db	102	;'f'
  4153  00FBA3  00                 	db	0
  4154  00FBA4                     STR_81:
  4155  00FBA4  4C                 	db	76	;'L'
  4156  00FBA5  56                 	db	86	;'V'
  4157  00FBA6  4E                 	db	78	;'N'
  4158  00FBA7  47                 	db	71	;'G'
  4159  00FBA8  20                 	db	32
  4160  00FBA9  52                 	db	82	;'R'
  4161  00FBAA  6D                 	db	109	;'m'
  4162  00FBAB  20                 	db	32
  4163  00FBAC  4C                 	db	76	;'L'
  4164  00FBAD  74                 	db	116	;'t'
  4165  00FBAE  20                 	db	32
  4166  00FBAF  4F                 	db	79	;'O'
  4167  00FBB0  66                 	db	102	;'f'
  4168  00FBB1  66                 	db	102	;'f'
  4169  00FBB2  00                 	db	0
  4170  00FBB3                     STR_108:
  4171  00FBB3  42                 	db	66	;'B'
  4172  00FBB4  65                 	db	101	;'e'
  4173  00FBB5  64                 	db	100	;'d'
  4174  00FBB6  72                 	db	114	;'r'
  4175  00FBB7  6F                 	db	111	;'o'
  4176  00FBB8  6F                 	db	111	;'o'
  4177  00FBB9  6D                 	db	109	;'m'
  4178  00FBBA  20                 	db	32
  4179  00FBBB  4C                 	db	76	;'L'
  4180  00FBBC  74                 	db	116	;'t'
  4181  00FBBD  20                 	db	32
  4182  00FBBE  4F                 	db	79	;'O'
  4183  00FBBF  66                 	db	102	;'f'
  4184  00FBC0  66                 	db	102	;'f'
  4185  00FBC1  00                 	db	0
  4186  00FBC2                     STR_106:
  4187  00FBC2  62                 	db	98	;'b'
  4188  00FBC3  65                 	db	101	;'e'
  4189  00FBC4  64                 	db	100	;'d'
  4190  00FBC5  72                 	db	114	;'r'
  4191  00FBC6  6F                 	db	111	;'o'
  4192  00FBC7  6F                 	db	111	;'o'
  4193  00FBC8  6D                 	db	109	;'m'
  4194  00FBC9  66                 	db	102	;'f'
  4195  00FBCA  61                 	db	97	;'a'
  4196  00FBCB  6E                 	db	110	;'n'
  4197  00FBCC  3D                 	db	61	;'='
  4198  00FBCD  6F                 	db	111	;'o'
  4199  00FBCE  66                 	db	102	;'f'
  4200  00FBCF  66                 	db	102	;'f'
  4201  00FBD0  00                 	db	0
  4202  00FBD1                     STR_111:
  4203  00FBD1  42                 	db	66	;'B'
  4204  00FBD2  65                 	db	101	;'e'
  4205  00FBD3  64                 	db	100	;'d'
  4206  00FBD4  72                 	db	114	;'r'
  4207  00FBD5  6F                 	db	111	;'o'
  4208  00FBD6  6F                 	db	111	;'o'
  4209  00FBD7  6D                 	db	109	;'m'
  4210  00FBD8  20                 	db	32
  4211  00FBD9  53                 	db	83	;'S'
  4212  00FBDA  4B                 	db	75	;'K'
  4213  00FBDB  52                 	db	82	;'R'
  4214  00FBDC  20                 	db	32
  4215  00FBDD  4F                 	db	79	;'O'
  4216  00FBDE  6E                 	db	110	;'n'
  4217  00FBDF  00                 	db	0
  4218  00FBE0                     STR_104:
  4219  00FBE0  42                 	db	66	;'B'
  4220  00FBE1  65                 	db	101	;'e'
  4221  00FBE2  64                 	db	100	;'d'
  4222  00FBE3  72                 	db	114	;'r'
  4223  00FBE4  6F                 	db	111	;'o'
  4224  00FBE5  6F                 	db	111	;'o'
  4225  00FBE6  6D                 	db	109	;'m'
  4226  00FBE7  20                 	db	32
  4227  00FBE8  46                 	db	70	;'F'
  4228  00FBE9  61                 	db	97	;'a'
  4229  00FBEA  6E                 	db	110	;'n'
  4230  00FBEB  20                 	db	32
  4231  00FBEC  4F                 	db	79	;'O'
  4232  00FBED  6E                 	db	110	;'n'
  4233  00FBEE  00                 	db	0
  4234  00FBEF                     STR_257:
  4235  00FBEF  4A                 	db	74	;'J'
  4236  00FBF0  6F                 	db	111	;'o'
  4237  00FBF1  65                 	db	101	;'e'
  4238  00FBF2  20                 	db	32
  4239  00FBF3  72                 	db	114	;'r'
  4240  00FBF4  6F                 	db	111	;'o'
  4241  00FBF5  6F                 	db	111	;'o'
  4242  00FBF6  6D                 	db	109	;'m'
  4243  00FBF7  20                 	db	32
  4244  00FBF8  6C                 	db	108	;'l'
  4245  00FBF9  74                 	db	116	;'t'
  4246  00FBFA  20                 	db	32
  4247  00FBFB  4F                 	db	79	;'O'
  4248  00FBFC  6E                 	db	110	;'n'
  4249  00FBFD  00                 	db	0
  4250  00FBFE                     STR_184:
  4251  00FBFE  45                 	db	69	;'E'
  4252  00FBFF  52                 	db	82	;'R'
  4253  00FC00  52                 	db	82	;'R'
  4254  00FC01  3A                 	db	58	;':'
  4255  00FC02  20                 	db	32
  4256  00FC03  4E                 	db	78	;'N'
  4257  00FC04  6F                 	db	111	;'o'
  4258  00FC05  20                 	db	32
  4259  00FC06  6E                 	db	110	;'n'
  4260  00FC07  75                 	db	117	;'u'
  4261  00FC08  6D                 	db	109	;'m'
  4262  00FC09  62                 	db	98	;'b'
  4263  00FC0A  65                 	db	101	;'e'
  4264  00FC0B  72                 	db	114	;'r'
  4265  00FC0C  00                 	db	0
  4266  00FC0D                     STR_165:
  4267  00FC0D  45                 	db	69	;'E'
  4268  00FC0E  52                 	db	82	;'R'
  4269  00FC0F  52                 	db	82	;'R'
  4270  00FC10  3A                 	db	58	;':'
  4271  00FC11  20                 	db	32
  4272  00FC12  6E                 	db	110	;'n'
  4273  00FC13  6F                 	db	111	;'o'
  4274  00FC14  20                 	db	32
  4275  00FC15  6E                 	db	110	;'n'
  4276  00FC16  75                 	db	117	;'u'
  4277  00FC17  6D                 	db	109	;'m'
  4278  00FC18  62                 	db	98	;'b'
  4279  00FC19  65                 	db	101	;'e'
  4280  00FC1A  72                 	db	114	;'r'
  4281  00FC1B  00                 	db	0
  4282  00FC1C                     STR_17:
  4283  00FC1C  53                 	db	83	;'S'
  4284  00FC1D  74                 	db	116	;'t'
  4285  00FC1E  61                 	db	97	;'a'
  4286  00FC1F  72                 	db	114	;'r'
  4287  00FC20  74                 	db	116	;'t'
  4288  00FC21  69                 	db	105	;'i'
  4289  00FC22  6E                 	db	110	;'n'
  4290  00FC23  67                 	db	103	;'g'
  4291  00FC24  2E                 	db	46
  4292  00FC25  2E                 	db	46
  4293  00FC26  2E                 	db	46
  4294  00FC27  2E                 	db	46
  4295  00FC28  2E                 	db	46
  4296  00FC29  2E                 	db	46
  4297  00FC2A  00                 	db	0
  4298  00FC2B                     STR_188:
  4299  00FC2B  45                 	db	69	;'E'
  4300  00FC2C  52                 	db	82	;'R'
  4301  00FC2D  52                 	db	82	;'R'
  4302  00FC2E  3A                 	db	58	;':'
  4303  00FC2F  20                 	db	32
  4304  00FC30  43                 	db	67	;'C'
  4305  00FC31  4E                 	db	78	;'N'
  4306  00FC32  53                 	db	83	;'S'
  4307  00FC33  54                 	db	84	;'T'
  4308  00FC34  20                 	db	32
  4309  00FC35  3C                 	db	60	;'<'
  4310  00FC36  20                 	db	32
  4311  00FC37  30                 	db	48	;'0'
  4312  00FC38  00                 	db	0
  4313  00FC39                     STR_169:
  4314  00FC39  45                 	db	69	;'E'
  4315  00FC3A  52                 	db	82	;'R'
  4316  00FC3B  52                 	db	82	;'R'
  4317  00FC3C  3A                 	db	58	;':'
  4318  00FC3D  20                 	db	32
  4319  00FC3E  44                 	db	68	;'D'
  4320  00FC3F  75                 	db	117	;'u'
  4321  00FC40  74                 	db	116	;'t'
  4322  00FC41  79                 	db	121	;'y'
  4323  00FC42  20                 	db	32
  4324  00FC43  3C                 	db	60	;'<'
  4325  00FC44  20                 	db	32
  4326  00FC45  30                 	db	48	;'0'
  4327  00FC46  00                 	db	0
  4328  00FC47                     STR_290:
  4329  00FC47  44                 	db	68	;'D'
  4330  00FC48  65                 	db	101	;'e'
  4331  00FC49  76                 	db	118	;'v'
  4332  00FC4A  69                 	db	105	;'i'
  4333  00FC4B  63                 	db	99	;'c'
  4334  00FC4C  65                 	db	101	;'e'
  4335  00FC4D  20                 	db	32
  4336  00FC4E  4D                 	db	77	;'M'
  4337  00FC4F  65                 	db	101	;'e'
  4338  00FC50  6E                 	db	110	;'n'
  4339  00FC51  75                 	db	117	;'u'
  4340  00FC52  73                 	db	115	;'s'
  4341  00FC53  3A                 	db	58	;':'
  4342  00FC54  00                 	db	0
  4343  00FC55                     STR_313:
  4344  00FC55  65                 	db	101	;'e'
  4345  00FC56  6E                 	db	110	;'n'
  4346  00FC57  74                 	db	116	;'t'
  4347  00FC58  65                 	db	101	;'e'
  4348  00FC59  72                 	db	114	;'r'
  4349  00FC5A  62                 	db	98	;'b'
  4350  00FC5B  61                 	db	97	;'a'
  4351  00FC5C  75                 	db	117	;'u'
  4352  00FC5D  64                 	db	100	;'d'
  4353  00FC5E  72                 	db	114	;'r'
  4354  00FC5F  61                 	db	97	;'a'
  4355  00FC60  74                 	db	116	;'t'
  4356  00FC61  65                 	db	101	;'e'
  4357  00FC62  00                 	db	0
  4358  00FC63                     STR_141:
  4359  00FC63  58                 	db	88	;'X'
  4360  00FC64  4D                 	db	77	;'M'
  4361  00FC65  41                 	db	65	;'A'
  4362  00FC66  53                 	db	83	;'S'
  4363  00FC67  20                 	db	32
  4364  00FC68  57                 	db	87	;'W'
  4365  00FC69  68                 	db	104	;'h'
  4366  00FC6A  69                 	db	105	;'i'
  4367  00FC6B  74                 	db	116	;'t'
  4368  00FC6C  65                 	db	101	;'e'
  4369  00FC6D  20                 	db	32
  4370  00FC6E  4F                 	db	79	;'O'
  4371  00FC6F  6E                 	db	110	;'n'
  4372  00FC70  00                 	db	0
  4373  00FC71                     STR_78:
  4374  00FC71  4C                 	db	76	;'L'
  4375  00FC72  56                 	db	86	;'V'
  4376  00FC73  4E                 	db	78	;'N'
  4377  00FC74  47                 	db	71	;'G'
  4378  00FC75  20                 	db	32
  4379  00FC76  52                 	db	82	;'R'
  4380  00FC77  6D                 	db	109	;'m'
  4381  00FC78  20                 	db	32
  4382  00FC79  4C                 	db	76	;'L'
  4383  00FC7A  74                 	db	116	;'t'
  4384  00FC7B  20                 	db	32
  4385  00FC7C  4F                 	db	79	;'O'
  4386  00FC7D  6E                 	db	110	;'n'
  4387  00FC7E  00                 	db	0
  4388  00FC7F                     STR_105:
  4389  00FC7F  42                 	db	66	;'B'
  4390  00FC80  65                 	db	101	;'e'
  4391  00FC81  64                 	db	100	;'d'
  4392  00FC82  72                 	db	114	;'r'
  4393  00FC83  6F                 	db	111	;'o'
  4394  00FC84  6F                 	db	111	;'o'
  4395  00FC85  6D                 	db	109	;'m'
  4396  00FC86  20                 	db	32
  4397  00FC87  4C                 	db	76	;'L'
  4398  00FC88  74                 	db	116	;'t'
  4399  00FC89  20                 	db	32
  4400  00FC8A  4F                 	db	79	;'O'
  4401  00FC8B  6E                 	db	110	;'n'
  4402  00FC8C  00                 	db	0
  4403  00FC8D                     STR_103:
  4404  00FC8D  62                 	db	98	;'b'
  4405  00FC8E  65                 	db	101	;'e'
  4406  00FC8F  64                 	db	100	;'d'
  4407  00FC90  72                 	db	114	;'r'
  4408  00FC91  6F                 	db	111	;'o'
  4409  00FC92  6F                 	db	111	;'o'
  4410  00FC93  6D                 	db	109	;'m'
  4411  00FC94  66                 	db	102	;'f'
  4412  00FC95  61                 	db	97	;'a'
  4413  00FC96  6E                 	db	110	;'n'
  4414  00FC97  3D                 	db	61	;'='
  4415  00FC98  6F                 	db	111	;'o'
  4416  00FC99  6E                 	db	110	;'n'
  4417  00FC9A  00                 	db	0
  4418  00FC9B                     STR_268:
  4419  00FC9B  4A                 	db	74	;'J'
  4420  00FC9C  6F                 	db	111	;'o'
  4421  00FC9D  65                 	db	101	;'e'
  4422  00FC9E  20                 	db	32
  4423  00FC9F  72                 	db	114	;'r'
  4424  00FCA0  6F                 	db	111	;'o'
  4425  00FCA1  6F                 	db	111	;'o'
  4426  00FCA2  6D                 	db	109	;'m'
  4427  00FCA3  20                 	db	32
  4428  00FCA4  4D                 	db	77	;'M'
  4429  00FCA5  65                 	db	101	;'e'
  4430  00FCA6  6E                 	db	110	;'n'
  4431  00FCA7  75                 	db	117	;'u'
  4432  00FCA8  00                 	db	0
  4433  00FCA9                     STR_91:
  4434  00FCA9  4C                 	db	76	;'L'
  4435  00FCAA  56                 	db	86	;'V'
  4436  00FCAB  4E                 	db	78	;'N'
  4437  00FCAC  47                 	db	71	;'G'
  4438  00FCAD  72                 	db	114	;'r'
  4439  00FCAE  6F                 	db	111	;'o'
  4440  00FCAF  6F                 	db	111	;'o'
  4441  00FCB0  6D                 	db	109	;'m'
  4442  00FCB1  20                 	db	32
  4443  00FCB2  4D                 	db	77	;'M'
  4444  00FCB3  65                 	db	101	;'e'
  4445  00FCB4  6E                 	db	110	;'n'
  4446  00FCB5  75                 	db	117	;'u'
  4447  00FCB6  00                 	db	0
  4448  00FCB7                     STR_16:
  4449  00FCB7  53                 	db	83	;'S'
  4450  00FCB8  74                 	db	116	;'t'
  4451  00FCB9  61                 	db	97	;'a'
  4452  00FCBA  72                 	db	114	;'r'
  4453  00FCBB  74                 	db	116	;'t'
  4454  00FCBC  69                 	db	105	;'i'
  4455  00FCBD  6E                 	db	110	;'n'
  4456  00FCBE  67                 	db	103	;'g'
  4457  00FCBF  2E                 	db	46
  4458  00FCC0  2E                 	db	46
  4459  00FCC1  2E                 	db	46
  4460  00FCC2  2E                 	db	46
  4461  00FCC3  2E                 	db	46
  4462  00FCC4  00                 	db	0
  4463  00FCC5                     STR_9:
  4464  00FCC5  45                 	db	69	;'E'
  4465  00FCC6  72                 	db	114	;'r'
  4466  00FCC7  72                 	db	114	;'r'
  4467  00FCC8  3A                 	db	58	;':'
  4468  00FCC9  20                 	db	32
  4469  00FCCA  42                 	db	66	;'B'
  4470  00FCCB  61                 	db	97	;'a'
  4471  00FCCC  75                 	db	117	;'u'
  4472  00FCCD  64                 	db	100	;'d'
  4473  00FCCE  20                 	db	32
  4474  00FCCF  4D                 	db	77	;'M'
  4475  00FCD0  65                 	db	101	;'e'
  4476  00FCD1  6D                 	db	109	;'m'
  4477  00FCD2  00                 	db	0
  4478  00FCD3                     STR_214:
  4479  00FCD3  69                 	db	105	;'i'
  4480  00FCD4  2E                 	db	46
  4481  00FCD5  65                 	db	101	;'e'
  4482  00FCD6  2E                 	db	46
  4483  00FCD7  20                 	db	32
  4484  00FCD8  41                 	db	65	;'A'
  4485  00FCD9  44                 	db	68	;'D'
  4486  00FCDA  43                 	db	67	;'C'
  4487  00FCDB  20                 	db	32
  4488  00FCDC  30                 	db	48	;'0'
  4489  00FCDD  0D                 	db	13
  4490  00FCDE  0A                 	db	10
  4491  00FCDF  00                 	db	0
  4492  00FCE0                     STR_274:
  4493  00FCE0  4C                 	db	76	;'L'
  4494  00FCE1  69                 	db	105	;'i'
  4495  00FCE2  76                 	db	118	;'v'
  4496  00FCE3  69                 	db	105	;'i'
  4497  00FCE4  6E                 	db	110	;'n'
  4498  00FCE5  67                 	db	103	;'g'
  4499  00FCE6  72                 	db	114	;'r'
  4500  00FCE7  6F                 	db	111	;'o'
  4501  00FCE8  6F                 	db	111	;'o'
  4502  00FCE9  6D                 	db	109	;'m'
  4503  00FCEA  0D                 	db	13
  4504  00FCEB  0A                 	db	10
  4505  00FCEC  00                 	db	0
  4506  00FCED                     STR_239:
  4507  00FCED  52                 	db	82	;'R'
  4508  00FCEE  54                 	db	84	;'T'
  4509  00FCEF  43                 	db	67	;'C'
  4510  00FCF0  20                 	db	32
  4511  00FCF1  57                 	db	87	;'W'
  4512  00FCF2  68                 	db	104	;'h'
  4513  00FCF3  61                 	db	97	;'a'
  4514  00FCF4  74                 	db	116	;'t'
  4515  00FCF5  3F                 	db	63	;'?'
  4516  00FCF6  3F                 	db	63	;'?'
  4517  00FCF7  3F                 	db	63	;'?'
  4518  00FCF8  0A                 	db	10
  4519  00FCF9  00                 	db	0
  4520  00FCFA                     STR_201:
  4521  00FCFA  45                 	db	69	;'E'
  4522  00FCFB  52                 	db	82	;'R'
  4523  00FCFC  52                 	db	82	;'R'
  4524  00FCFD  3A                 	db	58	;':'
  4525  00FCFE  20                 	db	32
  4526  00FCFF  55                 	db	85	;'U'
  4527  00FD00  73                 	db	115	;'s'
  4528  00FD01  65                 	db	101	;'e'
  4529  00FD02  20                 	db	32
  4530  00FD03  31                 	db	49	;'1'
  4531  00FD04  20                 	db	32
  4532  00FD05  3D                 	db	61	;'='
  4533  00FD06  00                 	db	0
  4534  00FD07                     STR_147:
  4535  00FD07  58                 	db	88	;'X'
  4536  00FD08  4D                 	db	77	;'M'
  4537  00FD09  41                 	db	65	;'A'
  4538  00FD0A  53                 	db	83	;'S'
  4539  00FD0B  20                 	db	32
  4540  00FD0C  57                 	db	87	;'W'
  4541  00FD0D  68                 	db	104	;'h'
  4542  00FD0E  61                 	db	97	;'a'
  4543  00FD0F  74                 	db	116	;'t'
  4544  00FD10  3F                 	db	63	;'?'
  4545  00FD11  3F                 	db	63	;'?'
  4546  00FD12  3F                 	db	63	;'?'
  4547  00FD13  00                 	db	0
  4548  00FD14                     STR_209:
  4549  00FD14  43                 	db	67	;'C'
  4550  00FD15  68                 	db	104	;'h'
  4551  00FD16  6E                 	db	110	;'n'
  4552  00FD17  6C                 	db	108	;'l'
  4553  00FD18  20                 	db	32
  4554  00FD19  25                 	db	37
  4555  00FD1A  64                 	db	100	;'d'
  4556  00FD1B  20                 	db	32
  4557  00FD1C  3D                 	db	61	;'='
  4558  00FD1D  20                 	db	32
  4559  00FD1E  25                 	db	37
  4560  00FD1F  64                 	db	100	;'d'
  4561  00FD20  00                 	db	0
  4562  00FD21                     STR_41:
  4563  00FD21  4C                 	db	76	;'L'
  4564  00FD22  45                 	db	69	;'E'
  4565  00FD23  44                 	db	68	;'D'
  4566  00FD24  30                 	db	48	;'0'
  4567  00FD25  20                 	db	32
  4568  00FD26  54                 	db	84	;'T'
  4569  00FD27  6F                 	db	111	;'o'
  4570  00FD28  67                 	db	103	;'g'
  4571  00FD29  67                 	db	103	;'g'
  4572  00FD2A  6C                 	db	108	;'l'
  4573  00FD2B  65                 	db	101	;'e'
  4574  00FD2C  64                 	db	100	;'d'
  4575  00FD2D  00                 	db	0
  4576  00FD2E                     STR_50:
  4577  00FD2E  4C                 	db	76	;'L'
  4578  00FD2F  45                 	db	69	;'E'
  4579  00FD30  44                 	db	68	;'D'
  4580  00FD31  31                 	db	49	;'1'
  4581  00FD32  20                 	db	32
  4582  00FD33  54                 	db	84	;'T'
  4583  00FD34  6F                 	db	111	;'o'
  4584  00FD35  67                 	db	103	;'g'
  4585  00FD36  67                 	db	103	;'g'
  4586  00FD37  6C                 	db	108	;'l'
  4587  00FD38  65                 	db	101	;'e'
  4588  00FD39  64                 	db	100	;'d'
  4589  00FD3A  00                 	db	0
  4590  00FD3B                     STR_310:
  4591  00FD3B  77                 	db	119	;'w'
  4592  00FD3C  69                 	db	105	;'i'
  4593  00FD3D  74                 	db	116	;'t'
  4594  00FD3E  68                 	db	104	;'h'
  4595  00FD3F  73                 	db	115	;'s'
  4596  00FD40  70                 	db	112	;'p'
  4597  00FD41  61                 	db	97	;'a'
  4598  00FD42  63                 	db	99	;'c'
  4599  00FD43  65                 	db	101	;'e'
  4600  00FD44  62                 	db	98	;'b'
  4601  00FD45  69                 	db	105	;'i'
  4602  00FD46  74                 	db	116	;'t'
  4603  00FD47  00                 	db	0
  4604  00FD48                     STR_194:
  4605  00FD48  4C                 	db	76	;'L'
  4606  00FD49  43                 	db	67	;'C'
  4607  00FD4A  44                 	db	68	;'D'
  4608  00FD4B  20                 	db	32
  4609  00FD4C  43                 	db	67	;'C'
  4610  00FD4D  6F                 	db	111	;'o'
  4611  00FD4E  6E                 	db	110	;'n'
  4612  00FD4F  74                 	db	116	;'t'
  4613  00FD50  72                 	db	114	;'r'
  4614  00FD51  61                 	db	97	;'a'
  4615  00FD52  73                 	db	115	;'s'
  4616  00FD53  74                 	db	116	;'t'
  4617  00FD54  00                 	db	0
  4618  00FD55                     STR_125:
  4619  00FD55  42                 	db	66	;'B'
  4620  00FD56  65                 	db	101	;'e'
  4621  00FD57  64                 	db	100	;'d'
  4622  00FD58  72                 	db	114	;'r'
  4623  00FD59  6F                 	db	111	;'o'
  4624  00FD5A  6F                 	db	111	;'o'
  4625  00FD5B  6D                 	db	109	;'m'
  4626  00FD5C  20                 	db	32
  4627  00FD5D  4D                 	db	77	;'M'
  4628  00FD5E  65                 	db	101	;'e'
  4629  00FD5F  6E                 	db	110	;'n'
  4630  00FD60  75                 	db	117	;'u'
  4631  00FD61  00                 	db	0
  4632  00FD62                     STR_15:
  4633  00FD62  53                 	db	83	;'S'
  4634  00FD63  74                 	db	116	;'t'
  4635  00FD64  61                 	db	97	;'a'
  4636  00FD65  72                 	db	114	;'r'
  4637  00FD66  74                 	db	116	;'t'
  4638  00FD67  69                 	db	105	;'i'
  4639  00FD68  6E                 	db	110	;'n'
  4640  00FD69  67                 	db	103	;'g'
  4641  00FD6A  2E                 	db	46
  4642  00FD6B  2E                 	db	46
  4643  00FD6C  2E                 	db	46
  4644  00FD6D  2E                 	db	46
  4645  00FD6E  00                 	db	0
  4646  00FD6F                     STR_272:
  4647  00FD6F  44                 	db	68	;'D'
  4648  00FD70  65                 	db	101	;'e'
  4649  00FD71  76                 	db	118	;'v'
  4650  00FD72  69                 	db	105	;'i'
  4651  00FD73  63                 	db	99	;'c'
  4652  00FD74  65                 	db	101	;'e'
  4653  00FD75  73                 	db	115	;'s'
  4654  00FD76  3A                 	db	58	;':'
  4655  00FD77  0D                 	db	13
  4656  00FD78  0A                 	db	10
  4657  00FD79  0A                 	db	10
  4658  00FD7A  00                 	db	0
  4659  00FD7B                     STR_211:
  4660  00FD7B  43                 	db	67	;'C'
  4661  00FD7C  68                 	db	104	;'h'
  4662  00FD7D  61                 	db	97	;'a'
  4663  00FD7E  6E                 	db	110	;'n'
  4664  00FD7F  6E                 	db	110	;'n'
  4665  00FD80  65                 	db	101	;'e'
  4666  00FD81  6C                 	db	108	;'l'
  4667  00FD82  73                 	db	115	;'s'
  4668  00FD83  3A                 	db	58	;':'
  4669  00FD84  0D                 	db	13
  4670  00FD85  0A                 	db	10
  4671  00FD86  00                 	db	0
  4672  00FD87                     STR_275:
  4673  00FD87  4A                 	db	74	;'J'
  4674  00FD88  6F                 	db	111	;'o'
  4675  00FD89  65                 	db	101	;'e'
  4676  00FD8A  73                 	db	115	;'s'
  4677  00FD8B  20                 	db	32
  4678  00FD8C  72                 	db	114	;'r'
  4679  00FD8D  6F                 	db	111	;'o'
  4680  00FD8E  6F                 	db	111	;'o'
  4681  00FD8F  6D                 	db	109	;'m'
  4682  00FD90  0D                 	db	13
  4683  00FD91  0A                 	db	10
  4684  00FD92  00                 	db	0
  4685  00FD93                     STR_292:
  4686  00FD93  4C                 	db	76	;'L'
  4687  00FD94  69                 	db	105	;'i'
  4688  00FD95  76                 	db	118	;'v'
  4689  00FD96  69                 	db	105	;'i'
  4690  00FD97  6E                 	db	110	;'n'
  4691  00FD98  67                 	db	103	;'g'
  4692  00FD99  72                 	db	114	;'r'
  4693  00FD9A  6F                 	db	111	;'o'
  4694  00FD9B  6F                 	db	111	;'o'
  4695  00FD9C  6D                 	db	109	;'m'
  4696  00FD9D  3F                 	db	63	;'?'
  4697  00FD9E  00                 	db	0
  4698  00FD9F                     STR_309:
  4699  00FD9F  77                 	db	119	;'w'
  4700  00FDA0  69                 	db	105	;'i'
  4701  00FDA1  74                 	db	116	;'t'
  4702  00FDA2  68                 	db	104	;'h'
  4703  00FDA3  6D                 	db	109	;'m'
  4704  00FDA4  61                 	db	97	;'a'
  4705  00FDA5  72                 	db	114	;'r'
  4706  00FDA6  6B                 	db	107	;'k'
  4707  00FDA7  62                 	db	98	;'b'
  4708  00FDA8  69                 	db	105	;'i'
  4709  00FDA9  74                 	db	116	;'t'
  4710  00FDAA  00                 	db	0
  4711  00FDAB                     STR_11:
  4712  00FDAB  53                 	db	83	;'S'
  4713  00FDAC  74                 	db	116	;'t'
  4714  00FDAD  61                 	db	97	;'a'
  4715  00FDAE  72                 	db	114	;'r'
  4716  00FDAF  74                 	db	116	;'t'
  4717  00FDB0  69                 	db	105	;'i'
  4718  00FDB1  6E                 	db	110	;'n'
  4719  00FDB2  67                 	db	103	;'g'
  4720  00FDB3  2E                 	db	46
  4721  00FDB4  2E                 	db	46
  4722  00FDB5  2E                 	db	46
  4723  00FDB6  00                 	db	0
  4724  00FDB7                     STR_61:
  4725  00FDB7  44                 	db	68	;'D'
  4726  00FDB8  65                 	db	101	;'e'
  4727  00FDB9  76                 	db	118	;'v'
  4728  00FDBA  69                 	db	105	;'i'
  4729  00FDBB  63                 	db	99	;'c'
  4730  00FDBC  65                 	db	101	;'e'
  4731  00FDBD  73                 	db	115	;'s'
  4732  00FDBE  3A                 	db	58	;':'
  4733  00FDBF  0D                 	db	13
  4734  00FDC0  0A                 	db	10
  4735  00FDC1  00                 	db	0
  4736  00FDC2                     STR_241:
  4737  00FDC2  41                 	db	65	;'A'
  4738  00FDC3  63                 	db	99	;'c'
  4739  00FDC4  74                 	db	116	;'t'
  4740  00FDC5  69                 	db	105	;'i'
  4741  00FDC6  6F                 	db	111	;'o'
  4742  00FDC7  6E                 	db	110	;'n'
  4743  00FDC8  73                 	db	115	;'s'
  4744  00FDC9  3A                 	db	58	;':'
  4745  00FDCA  0D                 	db	13
  4746  00FDCB  0A                 	db	10
  4747  00FDCC  00                 	db	0
  4748  00FDCD                     STR_277:
  4749  00FDCD  43                 	db	67	;'C'
  4750  00FDCE  6F                 	db	111	;'o'
  4751  00FDCF  6E                 	db	110	;'n'
  4752  00FDD0  74                 	db	116	;'t'
  4753  00FDD1  72                 	db	114	;'r'
  4754  00FDD2  61                 	db	97	;'a'
  4755  00FDD3  73                 	db	115	;'s'
  4756  00FDD4  74                 	db	116	;'t'
  4757  00FDD5  0D                 	db	13
  4758  00FDD6  0A                 	db	10
  4759  00FDD7  00                 	db	0
  4760  00FDD8                     STR_293:
  4761  00FDD8  4A                 	db	74	;'J'
  4762  00FDD9  6F                 	db	111	;'o'
  4763  00FDDA  65                 	db	101	;'e'
  4764  00FDDB  73                 	db	115	;'s'
  4765  00FDDC  20                 	db	32
  4766  00FDDD  52                 	db	82	;'R'
  4767  00FDDE  6F                 	db	111	;'o'
  4768  00FDDF  6F                 	db	111	;'o'
  4769  00FDE0  6D                 	db	109	;'m'
  4770  00FDE1  3F                 	db	63	;'?'
  4771  00FDE2  00                 	db	0
  4772  00FDE3                     STR_304:
  4773  00FDE3  63                 	db	99	;'c'
  4774  00FDE4  68                 	db	104	;'h'
  4775  00FDE5  61                 	db	97	;'a'
  4776  00FDE6  6E                 	db	110	;'n'
  4777  00FDE7  67                 	db	103	;'g'
  4778  00FDE8  65                 	db	101	;'e'
  4779  00FDE9  62                 	db	98	;'b'
  4780  00FDEA  61                 	db	97	;'a'
  4781  00FDEB  75                 	db	117	;'u'
  4782  00FDEC  64                 	db	100	;'d'
  4783  00FDED  00                 	db	0
  4784  00FDEE                     STR_70:
  4785  00FDEE  6C                 	db	108	;'l'
  4786  00FDEF  69                 	db	105	;'i'
  4787  00FDF0  76                 	db	118	;'v'
  4788  00FDF1  69                 	db	105	;'i'
  4789  00FDF2  6E                 	db	110	;'n'
  4790  00FDF3  67                 	db	103	;'g'
  4791  00FDF4  72                 	db	114	;'r'
  4792  00FDF5  6F                 	db	111	;'o'
  4793  00FDF6  6F                 	db	111	;'o'
  4794  00FDF7  6D                 	db	109	;'m'
  4795  00FDF8  00                 	db	0
  4796  00FDF9                     STR_13:
  4797  00FDF9  53                 	db	83	;'S'
  4798  00FDFA  74                 	db	116	;'t'
  4799  00FDFB  61                 	db	97	;'a'
  4800  00FDFC  72                 	db	114	;'r'
  4801  00FDFD  74                 	db	116	;'t'
  4802  00FDFE  69                 	db	105	;'i'
  4803  00FDFF  6E                 	db	110	;'n'
  4804  00FE00  67                 	db	103	;'g'
  4805  00FE01  2E                 	db	46
  4806  00FE02  2E                 	db	46
  4807  00FE03  00                 	db	0
  4808  00FE04                     STR_121:
  4809  00FE04  73                 	db	115	;'s'
  4810  00FE05  68                 	db	104	;'h'
  4811  00FE06  61                 	db	97	;'a'
  4812  00FE07  6B                 	db	107	;'k'
  4813  00FE08  65                 	db	101	;'e'
  4814  00FE09  72                 	db	114	;'r'
  4815  00FE0A  0D                 	db	13
  4816  00FE0B  0A                 	db	10
  4817  00FE0C  0A                 	db	10
  4818  00FE0D  00                 	db	0
  4819  00FE0E                     STR_273:
  4820  00FE0E  42                 	db	66	;'B'
  4821  00FE0F  65                 	db	101	;'e'
  4822  00FE10  64                 	db	100	;'d'
  4823  00FE11  72                 	db	114	;'r'
  4824  00FE12  6F                 	db	111	;'o'
  4825  00FE13  6F                 	db	111	;'o'
  4826  00FE14  6D                 	db	109	;'m'
  4827  00FE15  0D                 	db	13
  4828  00FE16  0A                 	db	10
  4829  00FE17  00                 	db	0
  4830  00FE18                     STR_242:
  4831  00FE18  42                 	db	66	;'B'
  4832  00FE19  61                 	db	97	;'a'
  4833  00FE1A  74                 	db	116	;'t'
  4834  00FE1B  74                 	db	116	;'t'
  4835  00FE1C  65                 	db	101	;'e'
  4836  00FE1D  72                 	db	114	;'r'
  4837  00FE1E  79                 	db	121	;'y'
  4838  00FE1F  0D                 	db	13
  4839  00FE20  0A                 	db	10
  4840  00FE21  00                 	db	0
  4841  00FE22                     STR_179:
  4842  00FE22  52                 	db	82	;'R'
  4843  00FE23  65                 	db	101	;'e'
  4844  00FE24  64                 	db	100	;'d'
  4845  00FE25  20                 	db	32
  4846  00FE26  4C                 	db	76	;'L'
  4847  00FE27  45                 	db	69	;'E'
  4848  00FE28  44                 	db	68	;'D'
  4849  00FE29  3D                 	db	61	;'='
  4850  00FE2A  23                 	db	35
  4851  00FE2B  00                 	db	0
  4852  00FE2C                     STR_196:
  4853  00FE2C  43                 	db	67	;'C'
  4854  00FE2D  6F                 	db	111	;'o'
  4855  00FE2E  6E                 	db	110	;'n'
  4856  00FE2F  74                 	db	116	;'t'
  4857  00FE30  72                 	db	114	;'r'
  4858  00FE31  61                 	db	97	;'a'
  4859  00FE32  73                 	db	115	;'s'
  4860  00FE33  74                 	db	116	;'t'
  4861  00FE34  23                 	db	35
  4862  00FE35  00                 	db	0
  4863  00FE36                     STR_178:
  4864  00FE36  43                 	db	67	;'C'
  4865  00FE37  6F                 	db	111	;'o'
  4866  00FE38  6D                 	db	109	;'m'
  4867  00FE39  6D                 	db	109	;'m'
  4868  00FE3A  61                 	db	97	;'a'
  4869  00FE3B  6E                 	db	110	;'n'
  4870  00FE3C  64                 	db	100	;'d'
  4871  00FE3D  73                 	db	115	;'s'
  4872  00FE3E  3A                 	db	58	;':'
  4873  00FE3F  00                 	db	0
  4874  00FE40                     STR_295:
  4875  00FE40  43                 	db	67	;'C'
  4876  00FE41  6F                 	db	111	;'o'
  4877  00FE42  6E                 	db	110	;'n'
  4878  00FE43  74                 	db	116	;'t'
  4879  00FE44  72                 	db	114	;'r'
  4880  00FE45  61                 	db	97	;'a'
  4881  00FE46  73                 	db	115	;'s'
  4882  00FE47  74                 	db	116	;'t'
  4883  00FE48  3F                 	db	63	;'?'
  4884  00FE49  00                 	db	0
  4885  00FE4A                     STR_300:
  4886  00FE4A  42                 	db	66	;'B'
  4887  00FE4B  41                 	db	65	;'A'
  4888  00FE4C  55                 	db	85	;'U'
  4889  00FE4D  44                 	db	68	;'D'
  4890  00FE4E  20                 	db	32
  4891  00FE4F  3D                 	db	61	;'='
  4892  00FE50  20                 	db	32
  4893  00FE51  25                 	db	37
  4894  00FE52  64                 	db	100	;'d'
  4895  00FE53  00                 	db	0
  4896  00FE54                     STR_132:
  4897  00FE54  63                 	db	99	;'c'
  4898  00FE55  68                 	db	104	;'h'
  4899  00FE56  72                 	db	114	;'r'
  4900  00FE57  69                 	db	105	;'i'
  4901  00FE58  73                 	db	115	;'s'
  4902  00FE59  74                 	db	116	;'t'
  4903  00FE5A  6D                 	db	109	;'m'
  4904  00FE5B  61                 	db	97	;'a'
  4905  00FE5C  73                 	db	115	;'s'
  4906  00FE5D  00                 	db	0
  4907  00FE5E                     STR_154:
  4908  00FE5E  58                 	db	88	;'X'
  4909  00FE5F  4D                 	db	77	;'M'
  4910  00FE60  41                 	db	65	;'A'
  4911  00FE61  53                 	db	83	;'S'
  4912  00FE62  20                 	db	32
  4913  00FE63  4D                 	db	77	;'M'
  4914  00FE64  65                 	db	101	;'e'
  4915  00FE65  6E                 	db	110	;'n'
  4916  00FE66  75                 	db	117	;'u'
  4917  00FE67  00                 	db	0
  4918  00FE68                     STR_284:
  4919  00FE68  48                 	db	72	;'H'
  4920  00FE69  65                 	db	101	;'e'
  4921  00FE6A  6C                 	db	108	;'l'
  4922  00FE6B  70                 	db	112	;'p'
  4923  00FE6C  20                 	db	32
  4924  00FE6D  4D                 	db	77	;'M'
  4925  00FE6E  65                 	db	101	;'e'
  4926  00FE6F  6E                 	db	110	;'n'
  4927  00FE70  75                 	db	117	;'u'
  4928  00FE71  00                 	db	0
  4929  00FE72                     STR_20:
  4930  00FE72  45                 	db	69	;'E'
  4931  00FE73  6E                 	db	110	;'n'
  4932  00FE74  74                 	db	116	;'t'
  4933  00FE75  65                 	db	101	;'e'
  4934  00FE76  72                 	db	114	;'r'
  4935  00FE77  20                 	db	32
  4936  00FE78  27                 	db	39
  4937  00FE79  3F                 	db	63	;'?'
  4938  00FE7A  27                 	db	39
  4939  00FE7B  00                 	db	0
  4940  00FE7C                     STR_12:
  4941  00FE7C  53                 	db	83	;'S'
  4942  00FE7D  74                 	db	116	;'t'
  4943  00FE7E  61                 	db	97	;'a'
  4944  00FE7F  72                 	db	114	;'r'
  4945  00FE80  74                 	db	116	;'t'
  4946  00FE81  69                 	db	105	;'i'
  4947  00FE82  6E                 	db	110	;'n'
  4948  00FE83  67                 	db	103	;'g'
  4949  00FE84  2E                 	db	46
  4950  00FE85  00                 	db	0
  4951  00FE86                     STR_265:
  4952  00FE86  4C                 	db	76	;'L'
  4953  00FE87  69                 	db	105	;'i'
  4954  00FE88  67                 	db	103	;'g'
  4955  00FE89  68                 	db	104	;'h'
  4956  00FE8A  74                 	db	116	;'t'
  4957  00FE8B  0D                 	db	13
  4958  00FE8C  0A                 	db	10
  4959  00FE8D  0A                 	db	10
  4960  00FE8E  00                 	db	0
  4961  00FE8F                     STR_67:
  4962  00FE8F  44                 	db	68	;'D'
  4963  00FE90  65                 	db	101	;'e'
  4964  00FE91  76                 	db	118	;'v'
  4965  00FE92  69                 	db	105	;'i'
  4966  00FE93  63                 	db	99	;'c'
  4967  00FE94  65                 	db	101	;'e'
  4968  00FE95  73                 	db	115	;'s'
  4969  00FE96  3A                 	db	58	;':'
  4970  00FE97  00                 	db	0
  4971  00FE98                     STR_291:
  4972  00FE98  42                 	db	66	;'B'
  4973  00FE99  65                 	db	101	;'e'
  4974  00FE9A  64                 	db	100	;'d'
  4975  00FE9B  72                 	db	114	;'r'
  4976  00FE9C  6F                 	db	111	;'o'
  4977  00FE9D  6F                 	db	111	;'o'
  4978  00FE9E  6D                 	db	109	;'m'
  4979  00FE9F  3F                 	db	63	;'?'
  4980  00FEA0  00                 	db	0
  4981  00FEA1                     STR_47:
  4982  00FEA1  4C                 	db	76	;'L'
  4983  00FEA2  45                 	db	69	;'E'
  4984  00FEA3  44                 	db	68	;'D'
  4985  00FEA4  30                 	db	48	;'0'
  4986  00FEA5  20                 	db	32
  4987  00FEA6  4F                 	db	79	;'O'
  4988  00FEA7  66                 	db	102	;'f'
  4989  00FEA8  66                 	db	102	;'f'
  4990  00FEA9  00                 	db	0
  4991  00FEAA                     STR_56:
  4992  00FEAA  4C                 	db	76	;'L'
  4993  00FEAB  45                 	db	69	;'E'
  4994  00FEAC  44                 	db	68	;'D'
  4995  00FEAD  31                 	db	49	;'1'
  4996  00FEAE  20                 	db	32
  4997  00FEAF  4F                 	db	79	;'O'
  4998  00FEB0  66                 	db	102	;'f'
  4999  00FEB1  66                 	db	102	;'f'
  5000  00FEB2  00                 	db	0
  5001  00FEB3                     STR_46:
  5002  00FEB3  6C                 	db	108	;'l'
  5003  00FEB4  65                 	db	101	;'e'
  5004  00FEB5  64                 	db	100	;'d'
  5005  00FEB6  30                 	db	48	;'0'
  5006  00FEB7  3D                 	db	61	;'='
  5007  00FEB8  6F                 	db	111	;'o'
  5008  00FEB9  66                 	db	102	;'f'
  5009  00FEBA  66                 	db	102	;'f'
  5010  00FEBB  00                 	db	0
  5011  00FEBC                     STR_55:
  5012  00FEBC  6C                 	db	108	;'l'
  5013  00FEBD  65                 	db	101	;'e'
  5014  00FEBE  64                 	db	100	;'d'
  5015  00FEBF  31                 	db	49	;'1'
  5016  00FEC0  3D                 	db	61	;'='
  5017  00FEC1  6F                 	db	111	;'o'
  5018  00FEC2  66                 	db	102	;'f'
  5019  00FEC3  66                 	db	102	;'f'
  5020  00FEC4  00                 	db	0
  5021  00FEC5                     STR_180:
  5022  00FEC5  63                 	db	99	;'c'
  5023  00FEC6  6F                 	db	111	;'o'
  5024  00FEC7  6E                 	db	110	;'n'
  5025  00FEC8  74                 	db	116	;'t'
  5026  00FEC9  72                 	db	114	;'r'
  5027  00FECA  61                 	db	97	;'a'
  5028  00FECB  73                 	db	115	;'s'
  5029  00FECC  74                 	db	116	;'t'
  5030  00FECD  00                 	db	0
  5031  00FECE                     STR_215:
  5032  00FECE  41                 	db	65	;'A'
  5033  00FECF  44                 	db	68	;'D'
  5034  00FED0  43                 	db	67	;'C'
  5035  00FED1  20                 	db	32
  5036  00FED2  4D                 	db	77	;'M'
  5037  00FED3  65                 	db	101	;'e'
  5038  00FED4  6E                 	db	110	;'n'
  5039  00FED5  75                 	db	117	;'u'
  5040  00FED6  00                 	db	0
  5041  00FED7                     STR_248:
  5042  00FED7  52                 	db	82	;'R'
  5043  00FED8  54                 	db	84	;'T'
  5044  00FED9  43                 	db	67	;'C'
  5045  00FEDA  20                 	db	32
  5046  00FEDB  4D                 	db	77	;'M'
  5047  00FEDC  65                 	db	101	;'e'
  5048  00FEDD  6E                 	db	110	;'n'
  5049  00FEDE  75                 	db	117	;'u'
  5050  00FEDF  00                 	db	0
  5051  00FEE0                     STR_66:
  5052  00FEE0  4C                 	db	76	;'L'
  5053  00FEE1  45                 	db	69	;'E'
  5054  00FEE2  44                 	db	68	;'D'
  5055  00FEE3  20                 	db	32
  5056  00FEE4  4D                 	db	77	;'M'
  5057  00FEE5  65                 	db	101	;'e'
  5058  00FEE6  6E                 	db	110	;'n'
  5059  00FEE7  75                 	db	117	;'u'
  5060  00FEE8  00                 	db	0
  5061  00FEE9                     STR_10:
  5062  00FEE9  53                 	db	83	;'S'
  5063  00FEEA  74                 	db	116	;'t'
  5064  00FEEB  61                 	db	97	;'a'
  5065  00FEEC  72                 	db	114	;'r'
  5066  00FEED  74                 	db	116	;'t'
  5067  00FEEE  69                 	db	105	;'i'
  5068  00FEEF  6E                 	db	110	;'n'
  5069  00FEF0  67                 	db	103	;'g'
  5070  00FEF1  00                 	db	0
  5071  00FEF2                     STR_63:
  5072  00FEF2  4C                 	db	76	;'L'
  5073  00FEF3  45                 	db	69	;'E'
  5074  00FEF4  44                 	db	68	;'D'
  5075  00FEF5  31                 	db	49	;'1'
  5076  00FEF6  0D                 	db	13
  5077  00FEF7  0A                 	db	10
  5078  00FEF8  0A                 	db	10
  5079  00FEF9  00                 	db	0
  5080  00FEFA                     STR_280:
  5081  00FEFA  42                 	db	66	;'B'
  5082  00FEFB  61                 	db	97	;'a'
  5083  00FEFC  75                 	db	117	;'u'
  5084  00FEFD  64                 	db	100	;'d'
  5085  00FEFE  0D                 	db	13
  5086  00FEFF  0A                 	db	10
  5087  00FF00  0A                 	db	10
  5088  00FF01  00                 	db	0
  5089  00FF02                     STR_86:
  5090  00FF02  6C                 	db	108	;'l'
  5091  00FF03  69                 	db	105	;'i'
  5092  00FF04  67                 	db	103	;'g'
  5093  00FF05  68                 	db	104	;'h'
  5094  00FF06  74                 	db	116	;'t'
  5095  00FF07  0D                 	db	13
  5096  00FF08  0A                 	db	10
  5097  00FF09  00                 	db	0
  5098  00FF0A                     STR_303:
  5099  00FF0A  73                 	db	115	;'s'
  5100  00FF0B  65                 	db	101	;'e'
  5101  00FF0C  74                 	db	116	;'t'
  5102  00FF0D  62                 	db	98	;'b'
  5103  00FF0E  61                 	db	97	;'a'
  5104  00FF0F  75                 	db	117	;'u'
  5105  00FF10  64                 	db	100	;'d'
  5106  00FF11  00                 	db	0
  5107  00FF12                     STR_95:
  5108  00FF12  62                 	db	98	;'b'
  5109  00FF13  65                 	db	101	;'e'
  5110  00FF14  64                 	db	100	;'d'
  5111  00FF15  72                 	db	114	;'r'
  5112  00FF16  6F                 	db	111	;'o'
  5113  00FF17  6F                 	db	111	;'o'
  5114  00FF18  6D                 	db	109	;'m'
  5115  00FF19  00                 	db	0
  5116  00FF1A                     STR_44:
  5117  00FF1A  4C                 	db	76	;'L'
  5118  00FF1B  45                 	db	69	;'E'
  5119  00FF1C  44                 	db	68	;'D'
  5120  00FF1D  30                 	db	48	;'0'
  5121  00FF1E  20                 	db	32
  5122  00FF1F  4F                 	db	79	;'O'
  5123  00FF20  6E                 	db	110	;'n'
  5124  00FF21  00                 	db	0
  5125  00FF22                     STR_53:
  5126  00FF22  4C                 	db	76	;'L'
  5127  00FF23  45                 	db	69	;'E'
  5128  00FF24  44                 	db	68	;'D'
  5129  00FF25  31                 	db	49	;'1'
  5130  00FF26  20                 	db	32
  5131  00FF27  4F                 	db	79	;'O'
  5132  00FF28  6E                 	db	110	;'n'
  5133  00FF29  00                 	db	0
  5134  00FF2A                     STR_43:
  5135  00FF2A  6C                 	db	108	;'l'
  5136  00FF2B  65                 	db	101	;'e'
  5137  00FF2C  64                 	db	100	;'d'
  5138  00FF2D  30                 	db	48	;'0'
  5139  00FF2E  3D                 	db	61	;'='
  5140  00FF2F  6F                 	db	111	;'o'
  5141  00FF30  6E                 	db	110	;'n'
  5142  00FF31  00                 	db	0
  5143  00FF32                     STR_52:
  5144  00FF32  6C                 	db	108	;'l'
  5145  00FF33  65                 	db	101	;'e'
  5146  00FF34  64                 	db	100	;'d'
  5147  00FF35  31                 	db	49	;'1'
  5148  00FF36  3D                 	db	61	;'='
  5149  00FF37  6F                 	db	111	;'o'
  5150  00FF38  6E                 	db	110	;'n'
  5151  00FF39  00                 	db	0
  5152  00FF3A                     STR_302:
  5153  00FF3A  72                 	db	114	;'r'
  5154  00FF3B  65                 	db	101	;'e'
  5155  00FF3C  73                 	db	115	;'s'
  5156  00FF3D  65                 	db	101	;'e'
  5157  00FF3E  74                 	db	116	;'t'
  5158  00FF3F  74                 	db	116	;'t'
  5159  00FF40  6F                 	db	111	;'o'
  5160  00FF41  00                 	db	0
  5161  00FF42                     STR_250:
  5162  00FF42  42                 	db	66	;'B'
  5163  00FF43  61                 	db	97	;'a'
  5164  00FF44  74                 	db	116	;'t'
  5165  00FF45  74                 	db	116	;'t'
  5166  00FF46  65                 	db	101	;'e'
  5167  00FF47  72                 	db	114	;'r'
  5168  00FF48  79                 	db	121	;'y'
  5169  00FF49  00                 	db	0
  5170  00FF4A                     STR_220:
  5171  00FF4A  62                 	db	98	;'b'
  5172  00FF4B  61                 	db	97	;'a'
  5173  00FF4C  74                 	db	116	;'t'
  5174  00FF4D  74                 	db	116	;'t'
  5175  00FF4E  65                 	db	101	;'e'
  5176  00FF4F  72                 	db	114	;'r'
  5177  00FF50  79                 	db	121	;'y'
  5178  00FF51  00                 	db	0
  5179  00FF52                     STR_87:
  5180  00FF52  66                 	db	102	;'f'
  5181  00FF53  61                 	db	97	;'a'
  5182  00FF54  6E                 	db	110	;'n'
  5183  00FF55  0D                 	db	13
  5184  00FF56  0A                 	db	10
  5185  00FF57  0A                 	db	10
  5186  00FF58  00                 	db	0
  5187  00FF59                     STR_244:
  5188  00FF59  53                 	db	83	;'S'
  5189  00FF5A  65                 	db	101	;'e'
  5190  00FF5B  74                 	db	116	;'t'
  5191  00FF5C  0D                 	db	13
  5192  00FF5D  0A                 	db	10
  5193  00FF5E  0A                 	db	10
  5194  00FF5F  00                 	db	0
  5195  00FF60                     STR_62:
  5196  00FF60  4C                 	db	76	;'L'
  5197  00FF61  45                 	db	69	;'E'
  5198  00FF62  44                 	db	68	;'D'
  5199  00FF63  30                 	db	48	;'0'
  5200  00FF64  0D                 	db	13
  5201  00FF65  0A                 	db	10
  5202  00FF66  00                 	db	0
  5203  00FF67                     STR_243:
  5204  00FF67  52                 	db	82	;'R'
  5205  00FF68  65                 	db	101	;'e'
  5206  00FF69  61                 	db	97	;'a'
  5207  00FF6A  64                 	db	100	;'d'
  5208  00FF6B  0D                 	db	13
  5209  00FF6C  0A                 	db	10
  5210  00FF6D  00                 	db	0
  5211  00FF6E                     STR_160:
  5212  00FF6E  72                 	db	114	;'r'
  5213  00FF6F  65                 	db	101	;'e'
  5214  00FF70  64                 	db	100	;'d'
  5215  00FF71  6C                 	db	108	;'l'
  5216  00FF72  65                 	db	101	;'e'
  5217  00FF73  64                 	db	100	;'d'
  5218  00FF74  00                 	db	0
  5219  00FF75                     STR_129:
  5220  00FF75  53                 	db	83	;'S'
  5221  00FF76  68                 	db	104	;'h'
  5222  00FF77  61                 	db	97	;'a'
  5223  00FF78  6B                 	db	107	;'k'
  5224  00FF79  65                 	db	101	;'e'
  5225  00FF7A  72                 	db	114	;'r'
  5226  00FF7B  00                 	db	0
  5227  00FF7C                     STR_312:
  5228  00FF7C  62                 	db	98	;'b'
  5229  00FF7D  61                 	db	97	;'a'
  5230  00FF7E  75                 	db	117	;'u'
  5231  00FF7F  64                 	db	100	;'d'
  5232  00FF80  69                 	db	105	;'i'
  5233  00FF81  73                 	db	115	;'s'
  5234  00FF82  00                 	db	0
  5235  00FF83                     STR_278:
  5236  00FF83  41                 	db	65	;'A'
  5237  00FF84  44                 	db	68	;'D'
  5238  00FF85  43                 	db	67	;'C'
  5239  00FF86  0D                 	db	13
  5240  00FF87  0A                 	db	10
  5241  00FF88  00                 	db	0
  5242  00FF89                     STR_120:
  5243  00FF89  66                 	db	102	;'f'
  5244  00FF8A  61                 	db	97	;'a'
  5245  00FF8B  6E                 	db	110	;'n'
  5246  00FF8C  0D                 	db	13
  5247  00FF8D  0A                 	db	10
  5248  00FF8E  00                 	db	0
  5249  00FF8F                     STR_298:
  5250  00FF8F  42                 	db	66	;'B'
  5251  00FF90  61                 	db	97	;'a'
  5252  00FF91  75                 	db	117	;'u'
  5253  00FF92  64                 	db	100	;'d'
  5254  00FF93  3F                 	db	63	;'?'
  5255  00FF94  00                 	db	0
  5256  00FF95                     STR_299:
  5257  00FF95  62                 	db	98	;'b'
  5258  00FF96  61                 	db	97	;'a'
  5259  00FF97  75                 	db	117	;'u'
  5260  00FF98  64                 	db	100	;'d'
  5261  00FF99  3F                 	db	63	;'?'
  5262  00FF9A  00                 	db	0
  5263  00FF9B                     STR_131:
  5264  00FF9B  77                 	db	119	;'w'
  5265  00FF9C  68                 	db	104	;'h'
  5266  00FF9D  69                 	db	105	;'i'
  5267  00FF9E  74                 	db	116	;'t'
  5268  00FF9F  65                 	db	101	;'e'
  5269  00FFA0  00                 	db	0
  5270  00FFA1                     STR_130:
  5271  00FFA1  63                 	db	99	;'c'
  5272  00FFA2  6F                 	db	111	;'o'
  5273  00FFA3  6C                 	db	108	;'l'
  5274  00FFA4  6F                 	db	111	;'o'
  5275  00FFA5  72                 	db	114	;'r'
  5276  00FFA6  00                 	db	0
  5277  00FFA7                     STR_93:
  5278  00FFA7  4C                 	db	76	;'L'
  5279  00FFA8  69                 	db	105	;'i'
  5280  00FFA9  67                 	db	103	;'g'
  5281  00FFAA  68                 	db	104	;'h'
  5282  00FFAB  74                 	db	116	;'t'
  5283  00FFAC  00                 	db	0
  5284  00FFAD                     STR_97:
  5285  00FFAD  6C                 	db	108	;'l'
  5286  00FFAE  69                 	db	105	;'i'
  5287  00FFAF  67                 	db	103	;'g'
  5288  00FFB0  68                 	db	104	;'h'
  5289  00FFB1  74                 	db	116	;'t'
  5290  00FFB2  00                 	db	0
  5291  00FFB3                     STR_212:
  5292  00FFB3  30                 	db	48	;'0'
  5293  00FFB4  0D                 	db	13
  5294  00FFB5  0A                 	db	10
  5295  00FFB6  0A                 	db	10
  5296  00FFB7  00                 	db	0
  5297  00FFB8                     STR_68:
  5298  00FFB8  4C                 	db	76	;'L'
  5299  00FFB9  45                 	db	69	;'E'
  5300  00FFBA  44                 	db	68	;'D'
  5301  00FFBB  30                 	db	48	;'0'
  5302  00FFBC  00                 	db	0
  5303  00FFBD                     STR_40:
  5304  00FFBD  6C                 	db	108	;'l'
  5305  00FFBE  65                 	db	101	;'e'
  5306  00FFBF  64                 	db	100	;'d'
  5307  00FFC0  30                 	db	48	;'0'
  5308  00FFC1  00                 	db	0
  5309  00FFC2                     STR_69:
  5310  00FFC2  4C                 	db	76	;'L'
  5311  00FFC3  45                 	db	69	;'E'
  5312  00FFC4  44                 	db	68	;'D'
  5313  00FFC5  31                 	db	49	;'1'
  5314  00FFC6  00                 	db	0
  5315  00FFC7                     STR_49:
  5316  00FFC7  6C                 	db	108	;'l'
  5317  00FFC8  65                 	db	101	;'e'
  5318  00FFC9  64                 	db	100	;'d'
  5319  00FFCA  31                 	db	49	;'1'
  5320  00FFCB  00                 	db	0
  5321  00FFCC                     STR_296:
  5322  00FFCC  41                 	db	65	;'A'
  5323  00FFCD  44                 	db	68	;'D'
  5324  00FFCE  43                 	db	67	;'C'
  5325  00FFCF  3F                 	db	63	;'?'
  5326  00FFD0  00                 	db	0
  5327  00FFD1                     STR_297:
  5328  00FFD1  52                 	db	82	;'R'
  5329  00FFD2  54                 	db	84	;'T'
  5330  00FFD3  43                 	db	67	;'C'
  5331  00FFD4  3F                 	db	63	;'?'
  5332  00FFD5  00                 	db	0
  5333  00FFD6                     STR_251:
  5334  00FFD6  52                 	db	82	;'R'
  5335  00FFD7  65                 	db	101	;'e'
  5336  00FFD8  61                 	db	97	;'a'
  5337  00FFD9  64                 	db	100	;'d'
  5338  00FFDA  00                 	db	0
  5339  00FFDB                     STR_223:
  5340  00FFDB  72                 	db	114	;'r'
  5341  00FFDC  65                 	db	101	;'e'
  5342  00FFDD  61                 	db	97	;'a'
  5343  00FFDE  64                 	db	100	;'d'
  5344  00FFDF  00                 	db	0
  5345  00FFE0                     STR_197:
  5346  00FFE0  61                 	db	97	;'a'
  5347  00FFE1  64                 	db	100	;'d'
  5348  00FFE2  63                 	db	99	;'c'
  5349  00FFE3  00                 	db	0
  5350  00FFE4                     STR_218:
  5351  00FFE4  72                 	db	114	;'r'
  5352  00FFE5  74                 	db	116	;'t'
  5353  00FFE6  63                 	db	99	;'c'
  5354  00FFE7  00                 	db	0
  5355  00FFE8                     STR_253:
  5356  00FFE8  6A                 	db	106	;'j'
  5357  00FFE9  6F                 	db	111	;'o'
  5358  00FFEA  65                 	db	101	;'e'
  5359  00FFEB  00                 	db	0
  5360  00FFEC                     STR_94:
  5361  00FFEC  46                 	db	70	;'F'
  5362  00FFED  61                 	db	97	;'a'
  5363  00FFEE  6E                 	db	110	;'n'
  5364  00FFEF  00                 	db	0
  5365  00FFF0                     STR_98:
  5366  00FFF0  66                 	db	102	;'f'
  5367  00FFF1  61                 	db	97	;'a'
  5368  00FFF2  6E                 	db	110	;'n'
  5369  00FFF3  00                 	db	0
  5370  00FFF4                     STR_252:
  5371  00FFF4  53                 	db	83	;'S'
  5372  00FFF5  65                 	db	101	;'e'
  5373  00FFF6  74                 	db	116	;'t'
  5374  00FFF7  00                 	db	0
  5375  00FFF8                     STR_230:
  5376  00FFF8  73                 	db	115	;'s'
  5377  00FFF9  65                 	db	101	;'e'
  5378  00FFFA  74                 	db	116	;'t'
  5379  00FFFB  00                 	db	0
  5380  00FFFC                     STR_1:
  5381  00FFFC  0D                 	db	13
  5382  00FFFD  00                 	db	0
  5383  00FFFE                     __end_of__stringdata:
  5384                           	opt stack 0
  5385                           
  5386                           ; #config settings
  5387  00FFFE  00                 	db	0	; dummy byte at the end
  5388  0000                     
  5389                           	psect	cinit
  5390  0171CE                     __pcinit:
  5391                           	opt stack 0
  5392  0171CE                     start_initialization:
  5393                           	opt stack 0
  5394  0171CE                     __initialization:
  5395                           	opt stack 0
  5396                           
  5397                           ; Clear objects allocated to BANK4 (100 bytes)
  5398  0171CE  EE04  F000         	lfsr	0,__pbssBANK4
  5399  0171D2  0E64               	movlw	100
  5400  0171D4                     clear_0:
  5401  0171D4  6AEE               	clrf	postinc0,c
  5402  0171D6  06E8               	decf	wreg,f,c
  5403  0171D8  E1FD               	bnz	clear_0
  5404                           
  5405                           ; Clear objects allocated to BANK3 (200 bytes)
  5406  0171DA  EE03  F000         	lfsr	0,__pbssBANK3
  5407  0171DE  0EC8               	movlw	200
  5408  0171E0                     clear_1:
  5409  0171E0  6AEE               	clrf	postinc0,c
  5410  0171E2  06E8               	decf	wreg,f,c
  5411  0171E4  E1FD               	bnz	clear_1
  5412                           
  5413                           ; Clear objects allocated to BANK1 (110 bytes)
  5414  0171E6  EE01  F000         	lfsr	0,__pbssBANK1
  5415  0171EA  0E6E               	movlw	110
  5416  0171EC                     clear_2:
  5417  0171EC  6AEE               	clrf	postinc0,c
  5418  0171EE  06E8               	decf	wreg,f,c
  5419  0171F0  E1FD               	bnz	clear_2
  5420                           
  5421                           ; Clear objects allocated to BANK0 (34 bytes)
  5422  0171F2  EE00  F0D8         	lfsr	0,__pbssBANK0
  5423  0171F6  0E22               	movlw	34
  5424  0171F8                     clear_3:
  5425  0171F8  6AEE               	clrf	postinc0,c
  5426  0171FA  06E8               	decf	wreg,f,c
  5427  0171FC  E1FD               	bnz	clear_3
  5428                           
  5429                           ; Clear objects allocated to COMRAM (32 bytes)
  5430  0171FE  EE00  F027         	lfsr	0,__pbssCOMRAM
  5431  017202  0E20               	movlw	32
  5432  017204                     clear_4:
  5433  017204  6AEE               	clrf	postinc0,c
  5434  017206  06E8               	decf	wreg,f,c
  5435  017208  E1FD               	bnz	clear_4
  5436                           
  5437                           ; Initialize objects allocated to BANK2 (20 bytes)
  5438                           ; load TBLPTR registers with __pidataBANK2
  5439  01720A  0EAA               	movlw	low __pidataBANK2
  5440  01720C  6EF6               	movwf	tblptrl,c
  5441  01720E  0E06               	movlw	high __pidataBANK2
  5442  017210  6EF7               	movwf	tblptrh,c
  5443  017212  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  5444  017214  6EF8               	movwf	tblptru,c
  5445  017216  EE02  F067         	lfsr	0,__pdataBANK2
  5446  01721A  EE10 F014          	lfsr	1,20
  5447  01721E                     copy_data0:
  5448  01721E  0009               	tblrd		*+
  5449  017220  CFF5 FFEE          	movff	tablat,postinc0
  5450  017224  50E5               	movf	postdec1,w,c
  5451  017226  50E1               	movf	fsr1l,w,c
  5452  017228  E1FA               	bnz	copy_data0
  5453                           
  5454                           ; Initialize objects allocated to BANK1 (8 bytes)
  5455                           ; load TBLPTR registers with __pidataBANK1
  5456  01722A  0E42               	movlw	low __pidataBANK1
  5457  01722C  6EF6               	movwf	tblptrl,c
  5458  01722E  0E07               	movlw	high __pidataBANK1
  5459  017230  6EF7               	movwf	tblptrh,c
  5460  017232  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  5461  017234  6EF8               	movwf	tblptru,c
  5462  017236  EE01  F0D5         	lfsr	0,__pdataBANK1
  5463  01723A  EE10 F008          	lfsr	1,8
  5464  01723E                     copy_data1:
  5465  01723E  0009               	tblrd		*+
  5466  017240  CFF5 FFEE          	movff	tablat,postinc0
  5467  017244  50E5               	movf	postdec1,w,c
  5468  017246  50E1               	movf	fsr1l,w,c
  5469  017248  E1FA               	bnz	copy_data1
  5470  01724A                     end_of_initialization:
  5471                           	opt stack 0
  5472  01724A                     __end_of__initialization:
  5473                           	opt stack 0
  5474  01724A  0100               	movlb	0
  5475  01724C  EF7C  F0A0         	goto	_main	;jump to C main() function
  5476                           tblptru	equ	0xFF8
  5477                           tblptrh	equ	0xFF7
  5478                           tblptrl	equ	0xFF6
  5479                           tablat	equ	0xFF5
  5480                           postinc0	equ	0xFEE
  5481                           wreg	equ	0xFE8
  5482                           postdec1	equ	0xFE5
  5483                           fsr1l	equ	0xFE1
  5484                           
  5485                           	psect	bssCOMRAM
  5486  000027                     __pbssCOMRAM:
  5487                           	opt stack 0
  5488  000027                     _Scroll_7:
  5489                           	opt stack 0
  5490  000027                     	ds	16
  5491  000037                     _Scroll_8:
  5492                           	opt stack 0
  5493  000037                     	ds	16
  5494                           tblptru	equ	0xFF8
  5495                           tblptrh	equ	0xFF7
  5496                           tblptrl	equ	0xFF6
  5497                           tablat	equ	0xFF5
  5498                           postinc0	equ	0xFEE
  5499                           wreg	equ	0xFE8
  5500                           postdec1	equ	0xFE5
  5501                           fsr1l	equ	0xFE1
  5502                           
  5503                           	psect	bssBANK0
  5504  0000D8                     __pbssBANK0:
  5505                           	opt stack 0
  5506  0000D8                     _TX_OLD:
  5507                           	opt stack 0
  5508  0000D8                     	ds	1
  5509  0000D9                     _bufferCount:
  5510                           	opt stack 0
  5511  0000D9                     	ds	1
  5512  0000DA                     _Scroll_10:
  5513                           	opt stack 0
  5514  0000DA                     	ds	16
  5515  0000EA                     _Scroll_9:
  5516                           	opt stack 0
  5517  0000EA                     	ds	16
  5518                           tblptru	equ	0xFF8
  5519                           tblptrh	equ	0xFF7
  5520                           tblptrl	equ	0xFF6
  5521                           tablat	equ	0xFF5
  5522                           postinc0	equ	0xFEE
  5523                           wreg	equ	0xFE8
  5524                           postdec1	equ	0xFE5
  5525                           fsr1l	equ	0xFE1
  5526                           
  5527                           	psect	bssBANK1
  5528  000100                     __pbssBANK1:
  5529                           	opt stack 0
  5530  000100                     _NowTime:
  5531                           	opt stack 0
  5532  000100                     	ds	9
  5533  000109                     _LCDwait:
  5534                           	opt stack 0
  5535  000109                     	ds	1
  5536  00010A                     _PARITY:
  5537                           	opt stack 0
  5538  00010A                     	ds	1
  5539  00010B                     _ScrollDisplayPosition:
  5540                           	opt stack 0
  5541  00010B                     	ds	1
  5542  00010C                     _ScrollFIFOCount:
  5543                           	opt stack 0
  5544  00010C                     	ds	1
  5545  00010D                     _USART_Status:
  5546                           	opt stack 0
  5547  00010D                     	ds	1
  5548  00010E                     _Scroll_1:
  5549                           	opt stack 0
  5550  00010E                     	ds	16
  5551  00011E                     _Scroll_2:
  5552                           	opt stack 0
  5553  00011E                     	ds	16
  5554  00012E                     _Scroll_3:
  5555                           	opt stack 0
  5556  00012E                     	ds	16
  5557  00013E                     _Scroll_4:
  5558                           	opt stack 0
  5559  00013E                     	ds	16
  5560  00014E                     _Scroll_5:
  5561                           	opt stack 0
  5562  00014E                     	ds	16
  5563  00015E                     _Scroll_6:
  5564                           	opt stack 0
  5565  00015E                     	ds	16
  5566                           tblptru	equ	0xFF8
  5567                           tblptrh	equ	0xFF7
  5568                           tblptrl	equ	0xFF6
  5569                           tablat	equ	0xFF5
  5570                           postinc0	equ	0xFEE
  5571                           wreg	equ	0xFE8
  5572                           postdec1	equ	0xFE5
  5573                           fsr1l	equ	0xFE1
  5574                           
  5575                           	psect	dataBANK1
  5576  0001D5                     __pdataBANK1:
  5577                           	opt stack 0
  5578  0001D5                     _BAUD:
  5579                           	opt stack 0
  5580  0001D5                     	ds	4
  5581  0001D9                     _LCDclearCount:
  5582                           	opt stack 0
  5583  0001D9                     	ds	4
  5584                           tblptru	equ	0xFF8
  5585                           tblptrh	equ	0xFF7
  5586                           tblptrl	equ	0xFF6
  5587                           tablat	equ	0xFF5
  5588                           postinc0	equ	0xFEE
  5589                           wreg	equ	0xFE8
  5590                           postdec1	equ	0xFE5
  5591                           fsr1l	equ	0xFE1
  5592                           
  5593                           	psect	dataBANK2
  5594  000267                     __pdataBANK2:
  5595                           	opt stack 0
  5596  000267                     _Version:
  5597                           	opt stack 0
  5598  000267                     	ds	20
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           postinc0	equ	0xFEE
  5604                           wreg	equ	0xFE8
  5605                           postdec1	equ	0xFE5
  5606                           fsr1l	equ	0xFE1
  5607                           
  5608                           	psect	bssBANK3
  5609  000300                     __pbssBANK3:
  5610                           	opt stack 0
  5611  000300                     _buf:
  5612                           	opt stack 0
  5613  000300                     	ds	100
  5614  000364                     _Rxdata:
  5615                           	opt stack 0
  5616  000364                     	ds	100
  5617                           tblptru	equ	0xFF8
  5618                           tblptrh	equ	0xFF7
  5619                           tblptrl	equ	0xFF6
  5620                           tablat	equ	0xFF5
  5621                           postinc0	equ	0xFEE
  5622                           wreg	equ	0xFE8
  5623                           postdec1	equ	0xFE5
  5624                           fsr1l	equ	0xFE1
  5625                           
  5626                           	psect	bssBANK4
  5627  000400                     __pbssBANK4:
  5628                           	opt stack 0
  5629  000400                     _Txdata:
  5630                           	opt stack 0
  5631  000400                     	ds	100
  5632                           tblptru	equ	0xFF8
  5633                           tblptrh	equ	0xFF7
  5634                           tblptrl	equ	0xFF6
  5635                           tablat	equ	0xFF5
  5636                           postinc0	equ	0xFEE
  5637                           wreg	equ	0xFE8
  5638                           postdec1	equ	0xFE5
  5639                           fsr1l	equ	0xFE1
  5640                           
  5641                           	psect	cstackBANK5
  5642  000500                     __pcstackBANK5:
  5643                           	opt stack 0
  5644  000500                     Command@buf:
  5645                           	opt stack 0
  5646                           
  5647                           ; 200 bytes @ 0x0
  5648  000500                     	ds	200
  5649  0005C8                     Command@ADC_Value:
  5650                           	opt stack 0
  5651                           
  5652                           ; 2 bytes @ 0xC8
  5653  0005C8                     	ds	2
  5654  0005CA                     Command@RTC_Battery_Value:
  5655                           	opt stack 0
  5656                           
  5657                           ; 2 bytes @ 0xCA
  5658  0005CA                     	ds	2
  5659  0005CC                     Command@RTC_Battery_Value_HIGH_decimal:
  5660                           	opt stack 0
  5661                           
  5662                           ; 2 bytes @ 0xCC
  5663  0005CC                     	ds	2
  5664  0005CE                     Command@BAUDtemp:
  5665                           	opt stack 0
  5666                           
  5667                           ; 4 bytes @ 0xCE
  5668  0005CE                     	ds	4
  5669  0005D2                     Command@RTC_Battery_Value_LOW_decimal:
  5670                           	opt stack 0
  5671                           
  5672                           ; 2 bytes @ 0xD2
  5673  0005D2                     	ds	2
  5674  0005D4                     Command@PARITYtemp:
  5675                           	opt stack 0
  5676                           
  5677                           ; 4 bytes @ 0xD4
  5678  0005D4                     	ds	4
  5679  0005D8                     Command@contrast:
  5680                           	opt stack 0
  5681                           
  5682                           ; 2 bytes @ 0xD8
  5683  0005D8                     	ds	2
  5684  0005DA                     Command@channel:
  5685                           	opt stack 0
  5686                           
  5687                           ; 2 bytes @ 0xDA
  5688  0005DA                     	ds	2
  5689  0005DC                     Command@duty:
  5690                           	opt stack 0
  5691                           
  5692                           ; 2 bytes @ 0xDC
  5693  0005DC                     	ds	2
  5694  0005DE                     Command@tempLONG:
  5695                           	opt stack 0
  5696                           
  5697                           ; 4 bytes @ 0xDE
  5698  0005DE                     	ds	4
  5699                           tblptru	equ	0xFF8
  5700                           tblptrh	equ	0xFF7
  5701                           tblptrl	equ	0xFF6
  5702                           tablat	equ	0xFF5
  5703                           postinc0	equ	0xFEE
  5704                           wreg	equ	0xFE8
  5705                           postdec1	equ	0xFE5
  5706                           fsr1l	equ	0xFE1
  5707                           
  5708                           	psect	cstackBANK2
  5709  000200                     __pcstackBANK2:
  5710                           	opt stack 0
  5711  000200                     SetBaud@buf:
  5712                           	opt stack 0
  5713  000200                     RemoveSpaces@That:
  5714                           	opt stack 0
  5715  000200                     StringAddEqual@temp:
  5716                           	opt stack 0
  5717                           
  5718                           ; 100 bytes @ 0x0
  5719  000200                     	ds	50
  5720  000232                     SetBaud@status:
  5721                           	opt stack 0
  5722                           
  5723                           ; 1 bytes @ 0x32
  5724  000232                     	ds	50
  5725  000264                     StringAddEqual@firstnumber:
  5726                           	opt stack 0
  5727  000264                     RemoveSpaces@address:
  5728                           	opt stack 0
  5729                           
  5730                           ; 2 bytes @ 0x64
  5731  000264                     	ds	1
  5732  000265                     StringAddEqual@i:
  5733                           	opt stack 0
  5734                           
  5735                           ; 1 bytes @ 0x65
  5736  000265                     	ds	1
  5737  000266                     RemoveSpaces@i:
  5738                           	opt stack 0
  5739  000266                     StringAddEqual@j:
  5740                           	opt stack 0
  5741                           
  5742                           ; 1 bytes @ 0x66
  5743  000266                     	ds	1
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           postinc0	equ	0xFEE
  5749                           wreg	equ	0xFE8
  5750                           postdec1	equ	0xFE5
  5751                           fsr1l	equ	0xFE1
  5752                           
  5753                           	psect	cstackBANK1
  5754  00016E                     __pcstackBANK1:
  5755                           	opt stack 0
  5756  00016E                     ??_high_isr:
  5757                           
  5758                           ; 0 bytes @ 0x0
  5759  00016E                     	ds	14
  5760  00017C                     ??_readI2C:
  5761  00017C                     ??_isdigit:
  5762  00017C                     ??_IdleI2C:
  5763  00017C                     ?_ReadEEPROM_1Byte:
  5764                           	opt stack 0
  5765  00017C                     ?___wmul:
  5766                           	opt stack 0
  5767  00017C                     ?___awdiv:
  5768                           	opt stack 0
  5769  00017C                     ?___awmod:
  5770                           	opt stack 0
  5771  00017C                     ?___lwmod:
  5772                           	opt stack 0
  5773  00017C                     ?___ftpack:
  5774                           	opt stack 0
  5775  00017C                     ?_GetBaud:
  5776                           	opt stack 0
  5777  00017C                     ?___lmul:
  5778                           	opt stack 0
  5779  00017C                     ?___lldiv:
  5780                           	opt stack 0
  5781  00017C                     ISNUMBER@ascii:
  5782                           	opt stack 0
  5783  00017C                     baudUSART@baudconfig:
  5784                           	opt stack 0
  5785  00017C                     ReadUSART@data:
  5786                           	opt stack 0
  5787  00017C                     EnableInternalADC@config:
  5788                           	opt stack 0
  5789  00017C                     OpenI2C@slew:
  5790                           	opt stack 0
  5791  00017C                     cleanBuffer@data:
  5792                           	opt stack 0
  5793  00017C                     StringMatch@This:
  5794                           	opt stack 0
  5795  00017C                     StringContains@This:
  5796                           	opt stack 0
  5797  00017C                     StartsWith@This:
  5798                           	opt stack 0
  5799  00017C                     lowercase@Input:
  5800                           	opt stack 0
  5801  00017C                     CheckSum_byte@This:
  5802                           	opt stack 0
  5803  00017C                     OpenUSART@spbrg:
  5804                           	opt stack 0
  5805  00017C                     Parse_Time@This:
  5806                           	opt stack 0
  5807  00017C                     ReadEEPROM_1Byte@address:
  5808                           	opt stack 0
  5809  00017C                     WriteEEPROM_1Byte@address:
  5810                           	opt stack 0
  5811  00017C                     ___wmul@multiplier:
  5812                           	opt stack 0
  5813  00017C                     ___awdiv@dividend:
  5814                           	opt stack 0
  5815  00017C                     ___awmod@dividend:
  5816                           	opt stack 0
  5817  00017C                     ___lwmod@dividend:
  5818                           	opt stack 0
  5819  00017C                     ___ftpack@arg:
  5820                           	opt stack 0
  5821  00017C                     delayUS@US:
  5822                           	opt stack 0
  5823  00017C                     ___lmul@multiplier:
  5824                           	opt stack 0
  5825  00017C                     ___lldiv@dividend:
  5826                           	opt stack 0
  5827                           
  5828                           ; 4 bytes @ 0xE
  5829  00017C                     	ds	1
  5830  00017D                     ??_WriteI2C:
  5831  00017D                     EnableInternalADC@channels:
  5832                           	opt stack 0
  5833  00017D                     OpenI2C@sync_mode:
  5834                           	opt stack 0
  5835  00017D                     _isdigit$2730:
  5836                           	opt stack 0
  5837  00017D                     Multiple_I2C_Read@rdptr:
  5838                           	opt stack 0
  5839                           
  5840                           ; 2 bytes @ 0xF
  5841  00017D                     	ds	1
  5842  00017E                     ??_OpenUSART:
  5843  00017E                     ??_Parse_Time:
  5844  00017E                     ??_lowercase:
  5845  00017E                     ??_ReadEEPROM_1Byte:
  5846  00017E                     CheckSum_byte@Odd_Even:
  5847                           	opt stack 0
  5848  00017E                     WriteI2C@data_out:
  5849                           	opt stack 0
  5850  00017E                     WriteEEPROM_1Byte@data:
  5851                           	opt stack 0
  5852  00017E                     isdigit@c:
  5853                           	opt stack 0
  5854  00017E                     cleanBuffer@count:
  5855                           	opt stack 0
  5856  00017E                     StringMatch@That:
  5857                           	opt stack 0
  5858  00017E                     StringContains@That:
  5859                           	opt stack 0
  5860  00017E                     StartsWith@That:
  5861                           	opt stack 0
  5862  00017E                     Init_I2C_Master@baud:
  5863                           	opt stack 0
  5864  00017E                     ___wmul@multiplicand:
  5865                           	opt stack 0
  5866  00017E                     ___awdiv@divisor:
  5867                           	opt stack 0
  5868  00017E                     ___awmod@divisor:
  5869                           	opt stack 0
  5870  00017E                     ___lwmod@divisor:
  5871                           	opt stack 0
  5872                           
  5873                           ; 2 bytes @ 0x10
  5874  00017E                     	ds	1
  5875  00017F                     ??_WriteEEPROM_1Byte:
  5876  00017F                     ?_I2C_Read_At_Address:
  5877                           	opt stack 0
  5878  00017F                     lowercase@i:
  5879                           	opt stack 0
  5880  00017F                     Parse_Time@temp:
  5881                           	opt stack 0
  5882  00017F                     I2C_Write_At_Address@Register:
  5883                           	opt stack 0
  5884  00017F                     I2C_Read_At_Address@Register:
  5885                           	opt stack 0
  5886  00017F                     Multiple_I2C_Read@length:
  5887                           	opt stack 0
  5888  00017F                     ___ftpack@exp:
  5889                           	opt stack 0
  5890  00017F                     CheckSum_byte@ThisTemp:
  5891                           	opt stack 0
  5892                           
  5893                           ; 2 bytes @ 0x11
  5894  00017F                     	ds	1
  5895  000180                     ??_cleanBuffer:
  5896  000180                     ??_delayUS:
  5897  000180                     ??_Multiple_I2C_Read:
  5898  000180                     ??_StringContains:
  5899  000180                     ??_StartsWith:
  5900  000180                     I2C_Write_At_Address@data:
  5901                           	opt stack 0
  5902  000180                     ___awdiv@counter:
  5903                           	opt stack 0
  5904  000180                     ___awmod@counter:
  5905                           	opt stack 0
  5906  000180                     ___ftpack@sign:
  5907                           	opt stack 0
  5908  000180                     ___lwmod@counter:
  5909                           	opt stack 0
  5910  000180                     ___wmul@product:
  5911                           	opt stack 0
  5912  000180                     ___lmul@multiplicand:
  5913                           	opt stack 0
  5914  000180                     ___lldiv@divisor:
  5915                           	opt stack 0
  5916  000180                     Parse_Time@TempTime:
  5917                           	opt stack 0
  5918                           
  5919                           ; 9 bytes @ 0x12
  5920  000180                     	ds	1
  5921  000181                     ??_I2C_Write_At_Address:
  5922  000181                     ??___ftpack:
  5923  000181                     CheckSum_byte@Parity:
  5924                           	opt stack 0
  5925  000181                     OpenUSART@config:
  5926                           	opt stack 0
  5927  000181                     I2C_Read_At_Address@I2Caddress:
  5928                           	opt stack 0
  5929  000181                     I2C_Read_Sequential@Register:
  5930                           	opt stack 0
  5931  000181                     ReadEEPROM_1Byte@GIEstatus:
  5932                           	opt stack 0
  5933  000181                     ___awdiv@sign:
  5934                           	opt stack 0
  5935  000181                     ___awmod@sign:
  5936                           	opt stack 0
  5937  000181                     delayUS@i:
  5938                           	opt stack 0
  5939                           
  5940                           ; 4 bytes @ 0x13
  5941  000181                     	ds	1
  5942  000182                     ?_GetMemoryBaud:
  5943                           	opt stack 0
  5944  000182                     ?___aldiv:
  5945                           	opt stack 0
  5946  000182                     CheckSum_byte@i:
  5947                           	opt stack 0
  5948  000182                     WriteEEPROM_1Byte@GIEstatus:
  5949                           	opt stack 0
  5950  000182                     GetMemoryParity@Parity:
  5951                           	opt stack 0
  5952  000182                     I2C_Read_Sequential@rdptr:
  5953                           	opt stack 0
  5954  000182                     ___awdiv@quotient:
  5955                           	opt stack 0
  5956  000182                     ___aldiv@dividend:
  5957                           	opt stack 0
  5958                           
  5959                           ; 4 bytes @ 0x14
  5960  000182                     	ds	1
  5961  000183                     cleanBuffer@i:
  5962                           	opt stack 0
  5963  000183                     UARTchar@NinethBit_override:
  5964                           	opt stack 0
  5965  000183                     I2C_Write_At_Address@I2Caddress:
  5966                           	opt stack 0
  5967  000183                     SetMemoryParity@Test:
  5968                           	opt stack 0
  5969                           
  5970                           ; 1 bytes @ 0x15
  5971  000183                     	ds	1
  5972  000184                     ?___lbtoft:
  5973                           	opt stack 0
  5974  000184                     ?___lwtoft:
  5975                           	opt stack 0
  5976  000184                     UARTchar@NinethBit_override_data:
  5977                           	opt stack 0
  5978  000184                     I2C_Read_Sequential@length:
  5979                           	opt stack 0
  5980  000184                     SetMemoryParity@Parity:
  5981                           	opt stack 0
  5982  000184                     BufferCopy@from:
  5983                           	opt stack 0
  5984  000184                     ___lwtoft@c:
  5985                           	opt stack 0
  5986  000184                     ___lmul@product:
  5987                           	opt stack 0
  5988  000184                     ___lldiv@quotient:
  5989                           	opt stack 0
  5990  000184                     SET_RTC_TIME@SetTime:
  5991                           	opt stack 0
  5992                           
  5993                           ; 9 bytes @ 0x16
  5994  000184                     	ds	1
  5995  000185                     ??_UARTchar:
  5996  000185                     delayUS@j:
  5997                           	opt stack 0
  5998  000185                     I2C_Read_Sequential@I2Caddress:
  5999                           	opt stack 0
  6000                           
  6001                           ; 1 bytes @ 0x17
  6002  000185                     	ds	1
  6003  000186                     ??_GetMemoryBaud:
  6004  000186                     ??_RTC_TIME_NONMilitary:
  6005  000186                     UARTchar@data:
  6006                           	opt stack 0
  6007  000186                     Zero_Config1@pin:
  6008                           	opt stack 0
  6009  000186                     One_Config1@pin:
  6010                           	opt stack 0
  6011  000186                     f_Config1@pin:
  6012                           	opt stack 0
  6013  000186                     Zero_Config2@pin:
  6014                           	opt stack 0
  6015  000186                     One_Config2@pin:
  6016                           	opt stack 0
  6017  000186                     SendLCDbyte@isCommand:
  6018                           	opt stack 0
  6019  000186                     BufferCopy@to:
  6020                           	opt stack 0
  6021  000186                     RTC_Clock_Enable@tempSeconds:
  6022                           	opt stack 0
  6023  000186                     ___aldiv@divisor:
  6024                           	opt stack 0
  6025  000186                     READ_RTC_TIME@temp:
  6026                           	opt stack 0
  6027                           
  6028                           ; 7 bytes @ 0x18
  6029  000186                     	ds	1
  6030  000187                     SendLCDbyte@data:
  6031                           	opt stack 0
  6032  000187                     ___lbtoft@c:
  6033                           	opt stack 0
  6034  000187                     UARTstring@data:
  6035                           	opt stack 0
  6036  000187                     UARTstringWAIT@data:
  6037                           	opt stack 0
  6038  000187                     Send_Config1@data:
  6039                           	opt stack 0
  6040  000187                     Send_Config2@data:
  6041                           	opt stack 0
  6042  000187                     RTC_TIME_NONMilitary@Error:
  6043                           	opt stack 0
  6044                           
  6045                           ; 2 bytes @ 0x19
  6046  000187                     	ds	1
  6047  000188                     ?___ftdiv:
  6048                           	opt stack 0
  6049  000188                     ?_GetEnteredNumber:
  6050                           	opt stack 0
  6051  000188                     BufferCopy@count:
  6052                           	opt stack 0
  6053  000188                     SendLCDbyte@MSB_nibble:
  6054                           	opt stack 0
  6055  000188                     RTC_Clock_Enable@Error:
  6056                           	opt stack 0
  6057  000188                     ___lldiv@counter:
  6058                           	opt stack 0
  6059  000188                     GetEnteredNumber@This:
  6060                           	opt stack 0
  6061  000188                     ___ftdiv@f1:
  6062                           	opt stack 0
  6063                           
  6064                           ; 3 bytes @ 0x1A
  6065  000188                     	ds	1
  6066  000189                     ??_UARTstring:
  6067  000189                     ??_Send_Config1:
  6068  000189                     ??_Send_Config2:
  6069  000189                     ?___llmod:
  6070                           	opt stack 0
  6071  000189                     BufferCopy@shift:
  6072                           	opt stack 0
  6073  000189                     SendLCDbyte@LSB_nibble:
  6074                           	opt stack 0
  6075  000189                     RTC_TIME_NONMilitary@temphours:
  6076                           	opt stack 0
  6077  000189                     InitUART@Baud:
  6078                           	opt stack 0
  6079  000189                     ___llmod@dividend:
  6080                           	opt stack 0
  6081                           
  6082                           ; 4 bytes @ 0x1B
  6083  000189                     	ds	1
  6084  00018A                     BufferCopy@i:
  6085                           	opt stack 0
  6086  00018A                     SetLCDcursor@Col:
  6087                           	opt stack 0
  6088  00018A                     LCDPrintChar@character:
  6089                           	opt stack 0
  6090  00018A                     ___aldiv@counter:
  6091                           	opt stack 0
  6092  00018A                     LCDPrintString@Text:
  6093                           	opt stack 0
  6094                           
  6095                           ; 2 bytes @ 0x1C
  6096  00018A                     	ds	1
  6097  00018B                     ?_InternalADC_Read:
  6098                           	opt stack 0
  6099  00018B                     Send_Config2@pin:
  6100                           	opt stack 0
  6101  00018B                     SetLCDcursor@Row:
  6102                           	opt stack 0
  6103  00018B                     ___aldiv@sign:
  6104                           	opt stack 0
  6105  00018B                     RemoveSpaces@This:
  6106                           	opt stack 0
  6107  00018B                     StringAddEqual@Input:
  6108                           	opt stack 0
  6109  00018B                     LCD_Scroll@This:
  6110                           	opt stack 0
  6111  00018B                     ___ftdiv@f2:
  6112                           	opt stack 0
  6113                           
  6114                           ; 3 bytes @ 0x1D
  6115  00018B                     	ds	1
  6116  00018C                     ??_GetEnteredNumber:
  6117  00018C                     Send_Config1@i:
  6118                           	opt stack 0
  6119  00018C                     Send_Config2@i:
  6120                           	opt stack 0
  6121  00018C                     SetLCDcursor@address:
  6122                           	opt stack 0
  6123  00018C                     LCDPrintString@c:
  6124                           	opt stack 0
  6125  00018C                     ___aldiv@quotient:
  6126                           	opt stack 0
  6127                           
  6128                           ; 4 bytes @ 0x1E
  6129  00018C                     	ds	1
  6130  00018D                     ??_InternalADC_Read:
  6131  00018D                     ??_SET_RTC_TIME:
  6132  00018D                     ??_StringAddEqual:
  6133  00018D                     InitUART@parity:
  6134                           	opt stack 0
  6135  00018D                     Send_Config1@pin:
  6136                           	opt stack 0
  6137  00018D                     READ_RTC_TIME@Error:
  6138                           	opt stack 0
  6139  00018D                     ___llmod@divisor:
  6140                           	opt stack 0
  6141                           
  6142                           ; 4 bytes @ 0x1F
  6143  00018D                     	ds	1
  6144  00018E                     ??_InitUART:
  6145  00018E                     ??_LCDScreenUpdate:
  6146  00018E                     ??___ftdiv:
  6147  00018E                     LCDdisplayFeedback@Text:
  6148                           	opt stack 0
  6149                           
  6150                           ; 2 bytes @ 0x20
  6151  00018E                     	ds	1
  6152  00018F                     InternalADC_Read@channel:
  6153                           	opt stack 0
  6154                           
  6155                           ; 1 bytes @ 0x21
  6156  00018F                     	ds	1
  6157  000190                     SetFreq@freq:
  6158                           	opt stack 0
  6159                           
  6160                           ; 2 bytes @ 0x22
  6161  000190                     	ds	1
  6162  000191                     GetEnteredNumber@i:
  6163                           	opt stack 0
  6164  000191                     ___ftdiv@cntr:
  6165                           	opt stack 0
  6166  000191                     ___llmod@counter:
  6167                           	opt stack 0
  6168  000191                     SET_RTC_TIME@temp:
  6169                           	opt stack 0
  6170                           
  6171                           ; 7 bytes @ 0x23
  6172  000191                     	ds	1
  6173  000192                     ??_SetFreq:
  6174  000192                     ?_sprintf:
  6175                           	opt stack 0
  6176  000192                     GetEnteredNumber@negative:
  6177                           	opt stack 0
  6178  000192                     InitUART@spbrg:
  6179                           	opt stack 0
  6180  000192                     sprintf@sp:
  6181                           	opt stack 0
  6182  000192                     ___ftdiv@f3:
  6183                           	opt stack 0
  6184                           
  6185                           ; 3 bytes @ 0x24
  6186  000192                     	ds	1
  6187  000193                     GetEnteredNumber@temp:
  6188                           	opt stack 0
  6189                           
  6190                           ; 4 bytes @ 0x25
  6191  000193                     	ds	1
  6192  000194                     InitUART@baudconfig:
  6193                           	opt stack 0
  6194  000194                     sprintf@f:
  6195                           	opt stack 0
  6196                           
  6197                           ; 2 bytes @ 0x26
  6198  000194                     	ds	1
  6199  000195                     InitUART@config:
  6200                           	opt stack 0
  6201  000195                     ___ftdiv@exp:
  6202                           	opt stack 0
  6203                           
  6204                           ; 1 bytes @ 0x27
  6205  000195                     	ds	1
  6206  000196                     SetFreq@temp:
  6207                           	opt stack 0
  6208  000196                     ___ftdiv@sign:
  6209                           	opt stack 0
  6210  000196                     InitUART@temp:
  6211                           	opt stack 0
  6212                           
  6213                           ; 4 bytes @ 0x28
  6214  000196                     	ds	1
  6215  000197                     ?___ftmul:
  6216                           	opt stack 0
  6217  000197                     ___ftmul@f1:
  6218                           	opt stack 0
  6219                           
  6220                           ; 3 bytes @ 0x29
  6221  000197                     	ds	1
  6222  000198                     SET_RTC_TIME@Error:
  6223                           	opt stack 0
  6224                           
  6225                           ; 1 bytes @ 0x2A
  6226  000198                     	ds	2
  6227  00019A                     ___ftmul@f2:
  6228                           	opt stack 0
  6229  00019A                     GetMemoryBaud@baud:
  6230                           	opt stack 0
  6231                           
  6232                           ; 4 bytes @ 0x2C
  6233  00019A                     	ds	3
  6234  00019D                     ??___ftmul:
  6235                           
  6236                           ; 0 bytes @ 0x2F
  6237  00019D                     	ds	1
  6238  00019E                     GetMemoryBaud@BaudTempH:
  6239                           	opt stack 0
  6240                           
  6241                           ; 1 bytes @ 0x30
  6242  00019E                     	ds	1
  6243  00019F                     GetMemoryBaud@BaudTempMH:
  6244                           	opt stack 0
  6245                           
  6246                           ; 1 bytes @ 0x31
  6247  00019F                     	ds	1
  6248  0001A0                     GetMemoryBaud@BaudTempML:
  6249                           	opt stack 0
  6250  0001A0                     ___ftmul@exp:
  6251                           	opt stack 0
  6252                           
  6253                           ; 1 bytes @ 0x32
  6254  0001A0                     	ds	1
  6255  0001A1                     GetMemoryBaud@BaudTempL:
  6256                           	opt stack 0
  6257  0001A1                     ___ftmul@f3_as_product:
  6258                           	opt stack 0
  6259                           
  6260                           ; 3 bytes @ 0x33
  6261  0001A1                     	ds	1
  6262  0001A2                     ??_sprintf:
  6263  0001A2                     SetMemoryBaud@Baud:
  6264                           	opt stack 0
  6265                           
  6266                           ; 4 bytes @ 0x34
  6267  0001A2                     	ds	2
  6268  0001A4                     ___ftmul@cntr:
  6269                           	opt stack 0
  6270                           
  6271                           ; 1 bytes @ 0x36
  6272  0001A4                     	ds	1
  6273  0001A5                     ___ftmul@sign:
  6274                           	opt stack 0
  6275                           
  6276                           ; 1 bytes @ 0x37
  6277  0001A5                     	ds	1
  6278  0001A6                     ??_SetMemoryBaud:
  6279  0001A6                     ?___fttol:
  6280                           	opt stack 0
  6281  0001A6                     ___fttol@f1:
  6282                           	opt stack 0
  6283                           
  6284                           ; 3 bytes @ 0x38
  6285  0001A6                     	ds	2
  6286  0001A8                     sprintf@idx:
  6287                           	opt stack 0
  6288                           
  6289                           ; 1 bytes @ 0x3A
  6290  0001A8                     	ds	1
  6291  0001A9                     _sprintf$2444:
  6292                           	opt stack 0
  6293                           
  6294                           ; 2 bytes @ 0x3B
  6295  0001A9                     	ds	1
  6296  0001AA                     ??___fttol:
  6297  0001AA                     SetMemoryBaud@Test:
  6298                           	opt stack 0
  6299                           
  6300                           ; 4 bytes @ 0x3C
  6301  0001AA                     	ds	1
  6302  0001AB                     _sprintf$2445:
  6303                           	opt stack 0
  6304                           
  6305                           ; 2 bytes @ 0x3D
  6306  0001AB                     	ds	2
  6307  0001AD                     _sprintf$2451:
  6308                           	opt stack 0
  6309                           
  6310                           ; 2 bytes @ 0x3F
  6311  0001AD                     	ds	1
  6312  0001AE                     SetMemoryBaud@BaudTempH:
  6313                           	opt stack 0
  6314                           
  6315                           ; 1 bytes @ 0x40
  6316  0001AE                     	ds	1
  6317  0001AF                     SetMemoryBaud@BaudTempMH:
  6318                           	opt stack 0
  6319  0001AF                     ___fttol@sign1:
  6320                           	opt stack 0
  6321  0001AF                     sprintf@ap:
  6322                           	opt stack 0
  6323                           
  6324                           ; 2 bytes @ 0x41
  6325  0001AF                     	ds	1
  6326  0001B0                     SetMemoryBaud@BaudTempML:
  6327                           	opt stack 0
  6328  0001B0                     ___fttol@lval:
  6329                           	opt stack 0
  6330                           
  6331                           ; 4 bytes @ 0x42
  6332  0001B0                     	ds	1
  6333  0001B1                     SetMemoryBaud@BaudTempL:
  6334                           	opt stack 0
  6335  0001B1                     sprintf@prec:
  6336                           	opt stack 0
  6337                           
  6338                           ; 2 bytes @ 0x43
  6339  0001B1                     	ds	2
  6340  0001B3                     sprintf@width:
  6341                           	opt stack 0
  6342                           
  6343                           ; 2 bytes @ 0x45
  6344  0001B3                     	ds	1
  6345  0001B4                     ___fttol@exp1:
  6346                           	opt stack 0
  6347                           
  6348                           ; 1 bytes @ 0x46
  6349  0001B4                     	ds	1
  6350  0001B5                     ??_SetContrast:
  6351  0001B5                     ??_SetDuty:
  6352  0001B5                     sprintf@_val:
  6353                           	opt stack 0
  6354                           
  6355                           ; 4 bytes @ 0x47
  6356  0001B5                     	ds	4
  6357  0001B9                     SetDuty@Duty:
  6358                           	opt stack 0
  6359  0001B9                     sprintf@c:
  6360                           	opt stack 0
  6361  0001B9                     SetContrast@tempPR2:
  6362                           	opt stack 0
  6363                           
  6364                           ; 3 bytes @ 0x4B
  6365  0001B9                     	ds	1
  6366  0001BA                     sprintf@flag:
  6367                           	opt stack 0
  6368  0001BA                     SetDuty@tempPR2:
  6369                           	opt stack 0
  6370                           
  6371                           ; 3 bytes @ 0x4C
  6372  0001BA                     	ds	2
  6373  0001BC                     SetContrast@MSB:
  6374                           	opt stack 0
  6375  0001BC                     SprintDate@ReturnBuf:
  6376                           	opt stack 0
  6377  0001BC                     SetBaud@Baud:
  6378                           	opt stack 0
  6379                           
  6380                           ; 4 bytes @ 0x4E
  6381  0001BC                     	ds	1
  6382  0001BD                     SetContrast@LSB:
  6383                           	opt stack 0
  6384  0001BD                     SetDuty@MSB:
  6385                           	opt stack 0
  6386                           
  6387                           ; 1 bytes @ 0x4F
  6388  0001BD                     	ds	1
  6389  0001BE                     SetDuty@LSB:
  6390                           	opt stack 0
  6391  0001BE                     SetContrast@temp:
  6392                           	opt stack 0
  6393  0001BE                     SprintDate@DisplayTime:
  6394                           	opt stack 0
  6395                           
  6396                           ; 9 bytes @ 0x50
  6397  0001BE                     	ds	1
  6398  0001BF                     SetDuty@temp:
  6399                           	opt stack 0
  6400                           
  6401                           ; 2 bytes @ 0x51
  6402  0001BF                     	ds	1
  6403  0001C0                     SetBaud@Parity:
  6404                           	opt stack 0
  6405  0001C0                     SetContrast@Duty:
  6406                           	opt stack 0
  6407                           
  6408                           ; 1 bytes @ 0x52
  6409  0001C0                     	ds	1
  6410  0001C1                     
  6411                           ; 0 bytes @ 0x53
  6412  0001C1                     	ds	6
  6413  0001C7                     SprintDate@Military:
  6414                           	opt stack 0
  6415                           
  6416                           ; 1 bytes @ 0x59
  6417  0001C7                     	ds	1
  6418  0001C8                     Command@Input:
  6419                           	opt stack 0
  6420                           
  6421                           ; 2 bytes @ 0x5A
  6422  0001C8                     	ds	2
  6423  0001CA                     ??_Command:
  6424                           
  6425                           ; 0 bytes @ 0x5C
  6426  0001CA                     	ds	4
  6427  0001CE                     main@MemoryBurnflag:
  6428                           	opt stack 0
  6429                           
  6430                           ; 1 bytes @ 0x60
  6431  0001CE                     	ds	1
  6432  0001CF                     main@ii:
  6433                           	opt stack 0
  6434                           
  6435                           ; 1 bytes @ 0x61
  6436  0001CF                     	ds	1
  6437  0001D0                     main@Baudtemp:
  6438                           	opt stack 0
  6439                           
  6440                           ; 4 bytes @ 0x62
  6441  0001D0                     	ds	4
  6442  0001D4                     main@count:
  6443                           	opt stack 0
  6444                           
  6445                           ; 1 bytes @ 0x66
  6446  0001D4                     	ds	1
  6447                           tblptru	equ	0xFF8
  6448                           tblptrh	equ	0xFF7
  6449                           tblptrl	equ	0xFF6
  6450                           tablat	equ	0xFF5
  6451                           postinc0	equ	0xFEE
  6452                           wreg	equ	0xFE8
  6453                           postdec1	equ	0xFE5
  6454                           fsr1l	equ	0xFE1
  6455                           
  6456                           	psect	cstackBANK0
  6457  000060                     __pcstackBANK0:
  6458                           	opt stack 0
  6459  000060                     low_isr@TEMP_Rxdata:
  6460                           	opt stack 0
  6461                           
  6462                           ; 100 bytes @ 0x0
  6463  000060                     	ds	100
  6464  0000C4                     low_isr@LCD_TEMP:
  6465                           	opt stack 0
  6466                           
  6467                           ; 16 bytes @ 0x64
  6468  0000C4                     	ds	16
  6469  0000D4                     low_isr@i:
  6470                           	opt stack 0
  6471                           
  6472                           ; 2 bytes @ 0x74
  6473  0000D4                     	ds	2
  6474  0000D6                     low_isr@j:
  6475                           	opt stack 0
  6476                           
  6477                           ; 1 bytes @ 0x76
  6478  0000D6                     	ds	1
  6479  0000D7                     low_isr@rx:
  6480                           	opt stack 0
  6481                           
  6482                           ; 1 bytes @ 0x77
  6483  0000D7                     	ds	1
  6484                           tblptru	equ	0xFF8
  6485                           tblptrh	equ	0xFF7
  6486                           tblptrl	equ	0xFF6
  6487                           tablat	equ	0xFF5
  6488                           postinc0	equ	0xFEE
  6489                           wreg	equ	0xFE8
  6490                           postdec1	equ	0xFE5
  6491                           fsr1l	equ	0xFE1
  6492                           
  6493                           	psect	cstackCOMRAM
  6494  000001                     __pcstackCOMRAM:
  6495                           	opt stack 0
  6496  000001                     IsPrintableASCII@data:
  6497                           	opt stack 0
  6498  000001                     i1ReadUSART@data:
  6499                           	opt stack 0
  6500  000001                     i1cleanBuffer@data:
  6501                           	opt stack 0
  6502  000001                     i1CheckSum_byte@This:
  6503                           	opt stack 0
  6504  000001                     i1delayUS@US:
  6505                           	opt stack 0
  6506                           
  6507                           ; 4 bytes @ 0x0
  6508  000001                     	ds	2
  6509  000003                     i1CheckSum_byte@Odd_Even:
  6510                           	opt stack 0
  6511  000003                     i1cleanBuffer@count:
  6512                           	opt stack 0
  6513                           
  6514                           ; 2 bytes @ 0x2
  6515  000003                     	ds	1
  6516  000004                     i1CheckSum_byte@ThisTemp:
  6517                           	opt stack 0
  6518                           
  6519                           ; 2 bytes @ 0x3
  6520  000004                     	ds	1
  6521  000005                     ??i1_delayUS:
  6522  000005                     ??i1_cleanBuffer:
  6523                           
  6524                           ; 0 bytes @ 0x4
  6525  000005                     	ds	1
  6526  000006                     i1CheckSum_byte@Parity:
  6527                           	opt stack 0
  6528  000006                     i1delayUS@i:
  6529                           	opt stack 0
  6530                           
  6531                           ; 4 bytes @ 0x5
  6532  000006                     	ds	1
  6533  000007                     i1CheckSum_byte@i:
  6534                           	opt stack 0
  6535                           
  6536                           ; 1 bytes @ 0x6
  6537  000007                     	ds	1
  6538  000008                     i1cleanBuffer@i:
  6539                           	opt stack 0
  6540  000008                     i1UARTchar@NinethBit_override:
  6541                           	opt stack 0
  6542                           
  6543                           ; 1 bytes @ 0x7
  6544  000008                     	ds	1
  6545  000009                     i1UARTchar@NinethBit_override_data:
  6546                           	opt stack 0
  6547  000009                     i1BufferCopy@from:
  6548                           	opt stack 0
  6549                           
  6550                           ; 2 bytes @ 0x8
  6551  000009                     	ds	1
  6552  00000A                     ??i1_UARTchar:
  6553  00000A                     i1delayUS@j:
  6554                           	opt stack 0
  6555                           
  6556                           ; 1 bytes @ 0x9
  6557  00000A                     	ds	1
  6558  00000B                     i1UARTchar@data:
  6559                           	opt stack 0
  6560  00000B                     i1SendLCDbyte@isCommand:
  6561                           	opt stack 0
  6562  00000B                     i1BufferCopy@to:
  6563                           	opt stack 0
  6564                           
  6565                           ; 2 bytes @ 0xA
  6566  00000B                     	ds	1
  6567  00000C                     i1SendLCDbyte@data:
  6568                           	opt stack 0
  6569  00000C                     i1UARTstring@data:
  6570                           	opt stack 0
  6571                           
  6572                           ; 2 bytes @ 0xB
  6573  00000C                     	ds	1
  6574  00000D                     i1BufferCopy@count:
  6575                           	opt stack 0
  6576  00000D                     i1SendLCDbyte@MSB_nibble:
  6577                           	opt stack 0
  6578                           
  6579                           ; 1 bytes @ 0xC
  6580  00000D                     	ds	1
  6581  00000E                     ??i1_UARTstring:
  6582  00000E                     i1BufferCopy@shift:
  6583                           	opt stack 0
  6584  00000E                     i1SendLCDbyte@LSB_nibble:
  6585                           	opt stack 0
  6586                           
  6587                           ; 1 bytes @ 0xD
  6588  00000E                     	ds	1
  6589  00000F                     i1BufferCopy@i:
  6590                           	opt stack 0
  6591  00000F                     i1SetLCDcursor@Col:
  6592                           	opt stack 0
  6593  00000F                     i1LCDPrintChar@character:
  6594                           	opt stack 0
  6595  00000F                     i1LCDPrintString@Text:
  6596                           	opt stack 0
  6597                           
  6598                           ; 2 bytes @ 0xE
  6599  00000F                     	ds	1
  6600  000010                     i1SetLCDcursor@Row:
  6601                           	opt stack 0
  6602                           
  6603                           ; 1 bytes @ 0xF
  6604  000010                     	ds	1
  6605  000011                     i1SetLCDcursor@address:
  6606                           	opt stack 0
  6607  000011                     i1LCDPrintString@c:
  6608                           	opt stack 0
  6609                           
  6610                           ; 2 bytes @ 0x10
  6611  000011                     	ds	2
  6612  000013                     ??_low_isr:
  6613                           
  6614                           ; 0 bytes @ 0x12
  6615  000013                     	ds	20
  6616                           tblptru	equ	0xFF8
  6617                           tblptrh	equ	0xFF7
  6618                           tblptrl	equ	0xFF6
  6619                           tablat	equ	0xFF5
  6620                           postinc0	equ	0xFEE
  6621                           wreg	equ	0xFE8
  6622                           postdec1	equ	0xFE5
  6623                           fsr1l	equ	0xFE1
  6624                           
  6625 ;;
  6626 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6627 ;;
  6628 ;; *************** function _main *****************
  6629 ;; Defined at:
  6630 ;;		line 74 in file "main.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;		None
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;  Baudtemp        4   98[BANK1 ] unsigned long 
  6635 ;;  count           1  102[BANK1 ] unsigned char 
  6636 ;;  ii              1   97[BANK1 ] unsigned char 
  6637 ;;  MemoryBurnfl    1   96[BANK1 ] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;		None               void
  6640 ;; Registers used:
  6641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6648 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6650 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  6651 ;;Total ram usage:        7 bytes
  6652 ;; Hardware stack levels required when called:   12
  6653 ;; This function calls:
  6654 ;;		_ClearLCD
  6655 ;;		_Command
  6656 ;;		_ConfigureOscillator
  6657 ;;		_ContrastPWM_init
  6658 ;;		_EnableInternalADC
  6659 ;;		_GetMemoryBaud
  6660 ;;		_GetMemoryParity
  6661 ;;		_InitApp
  6662 ;;		_InitUART
  6663 ;;		_Init_I2C_Master
  6664 ;;		_LCDPrintChar
  6665 ;;		_LCDPrintString
  6666 ;;		_LCDScreenUpdate
  6667 ;;		_PWM_init
  6668 ;;		_RTC_INIT
  6669 ;;		_ReadUSART
  6670 ;;		_SetContrast
  6671 ;;		_SetDuty
  6672 ;;		_SetLCDcursor
  6673 ;;		_SetMemoryBaud
  6674 ;;		_SetMemoryParity
  6675 ;;		_UARTstring
  6676 ;;		_cleanBuffer
  6677 ;;		_delayUS
  6678 ;;		_init_LCD
  6679 ;; This function is called by:
  6680 ;;		Startup code after reset
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text0
  6685  0140F8                     __ptext0:
  6686                           	opt stack 0
  6687  0140F8                     _main:
  6688                           	opt stack 18
  6689                           
  6690                           ;main.c: 76: unsigned char ii = 0;
  6691                           
  6692                           ;incstack = 0
  6693  0140F8  0E00               	movlw	0
  6694  0140FA  0101               	movlb	1	; () banked
  6695  0140FC  6FCF               	movwf	main@ii& (0+255),b
  6696                           
  6697                           ;main.c: 77: unsigned char count = 0;
  6698  0140FE  0E00               	movlw	0
  6699  014100  0101               	movlb	1	; () banked
  6700  014102  6FD4               	movwf	main@count& (0+255),b
  6701                           
  6702                           ;main.c: 78: unsigned long Baudtemp = 0;
  6703  014104  0E00               	movlw	0
  6704  014106  0101               	movlb	1	; () banked
  6705  014108  6FD0               	movwf	main@Baudtemp& (0+255),b
  6706  01410A  0E00               	movlw	0
  6707  01410C  0101               	movlb	1	; () banked
  6708  01410E  6FD1               	movwf	(main@Baudtemp+1)& (0+255),b
  6709  014110  0E00               	movlw	0
  6710  014112  0101               	movlb	1	; () banked
  6711  014114  6FD2               	movwf	(main@Baudtemp+2)& (0+255),b
  6712  014116  0E00               	movlw	0
  6713  014118  0101               	movlb	1	; () banked
  6714  01411A  6FD3               	movwf	(main@Baudtemp+3)& (0+255),b
  6715                           
  6716                           ;main.c: 79: unsigned char MemoryBurnflag = 0;
  6717  01411C  0E00               	movlw	0
  6718  01411E  0101               	movlb	1	; () banked
  6719  014120  6FCE               	movwf	main@MemoryBurnflag& (0+255),b
  6720                           
  6721                           ; BSR set to: 1
  6722                           ;main.c: 81: ConfigureOscillator();
  6723  014122  EC7D  F0BE         	call	_ConfigureOscillator	;wreg free
  6724                           
  6725                           ;main.c: 82: InitApp();
  6726  014126  ECB5  F0BC         	call	_InitApp	;wreg free
  6727                           
  6728                           ;main.c: 83: EnableInternalADC(1);
  6729  01412A  0E01               	movlw	1
  6730  01412C  EC23  F0B5         	call	_EnableInternalADC
  6731                           
  6732                           ;main.c: 84: PWM_init();
  6733  014130  ECDA  F002         	call	_PWM_init	;wreg free
  6734                           
  6735                           ;main.c: 85: ContrastPWM_init();
  6736  014134  EC9B  F003         	call	_ContrastPWM_init	;wreg free
  6737                           
  6738                           ;main.c: 86: init_LCD();
  6739  014138  EC30  F0AD         	call	_init_LCD	;wreg free
  6740                           
  6741                           ;main.c: 87: Init_I2C_Master();
  6742  01413C  EC38  F0BD         	call	_Init_I2C_Master	;wreg free
  6743                           
  6744                           ;main.c: 88: RTC_INIT();
  6745  014140  EC85  F003         	call	_RTC_INIT	;wreg free
  6746                           
  6747                           ;main.c: 89: Baudtemp = GetMemoryBaud();
  6748  014144  ECCF  F0AB         	call	_GetMemoryBaud	;wreg free
  6749  014148  C182  F1D0         	movff	?_GetMemoryBaud,main@Baudtemp
  6750  01414C  C183  F1D1         	movff	?_GetMemoryBaud+1,main@Baudtemp+1
  6751  014150  C184  F1D2         	movff	?_GetMemoryBaud+2,main@Baudtemp+2
  6752  014154  C185  F1D3         	movff	?_GetMemoryBaud+3,main@Baudtemp+3
  6753                           
  6754                           ;main.c: 90: if(Baudtemp < 2400 || Baudtemp > 115200)
  6755  014158  0E60               	movlw	96
  6756  01415A  0101               	movlb	1	; () banked
  6757  01415C  5DD0               	subwf	main@Baudtemp& (0+255),w,b
  6758  01415E  0E09               	movlw	9
  6759  014160  0101               	movlb	1	; () banked
  6760  014162  59D1               	subwfb	(main@Baudtemp+1)& (0+255),w,b
  6761  014164  0E00               	movlw	0
  6762  014166  0101               	movlb	1	; () banked
  6763  014168  59D2               	subwfb	(main@Baudtemp+2)& (0+255),w,b
  6764  01416A  0E00               	movlw	0
  6765  01416C  0101               	movlb	1	; () banked
  6766  01416E  59D3               	subwfb	(main@Baudtemp+3)& (0+255),w,b
  6767  014170  A0D8               	btfss	status,0,c
  6768  014172  D00E               	goto	l13750
  6769                           
  6770                           ; BSR set to: 1
  6771  014174  0E01               	movlw	1
  6772  014176  0101               	movlb	1	; () banked
  6773  014178  5DD0               	subwf	main@Baudtemp& (0+255),w,b
  6774  01417A  0EC2               	movlw	194
  6775  01417C  0101               	movlb	1	; () banked
  6776  01417E  59D1               	subwfb	(main@Baudtemp+1)& (0+255),w,b
  6777  014180  0E01               	movlw	1
  6778  014182  0101               	movlb	1	; () banked
  6779  014184  59D2               	subwfb	(main@Baudtemp+2)& (0+255),w,b
  6780  014186  0E00               	movlw	0
  6781  014188  0101               	movlb	1	; () banked
  6782  01418A  59D3               	subwfb	(main@Baudtemp+3)& (0+255),w,b
  6783  01418C  A0D8               	btfss	status,0,c
  6784  01418E  D023               	goto	l13756
  6785  014190                     l13750:
  6786                           
  6787                           ; BSR set to: 1
  6788                           ;main.c: 91: {
  6789                           ;main.c: 92: if(SetMemoryBaud(9600))
  6790  014190  0E80               	movlw	128
  6791  014192  0101               	movlb	1	; () banked
  6792  014194  6FA2               	movwf	SetMemoryBaud@Baud& (0+255),b
  6793  014196  0E25               	movlw	37
  6794  014198  0101               	movlb	1	; () banked
  6795  01419A  6FA3               	movwf	(SetMemoryBaud@Baud+1)& (0+255),b
  6796  01419C  0E00               	movlw	0
  6797  01419E  0101               	movlb	1	; () banked
  6798  0141A0  6FA4               	movwf	(SetMemoryBaud@Baud+2)& (0+255),b
  6799  0141A2  0E00               	movlw	0
  6800  0141A4  0101               	movlb	1	; () banked
  6801  0141A6  6FA5               	movwf	(SetMemoryBaud@Baud+3)& (0+255),b
  6802  0141A8  EC5A  F0B0         	call	_SetMemoryBaud	;wreg free
  6803  0141AC  0900               	iorlw	0
  6804  0141AE  B4D8               	btfsc	status,2,c
  6805  0141B0  D003               	goto	l184
  6806                           
  6807                           ;main.c: 93: {
  6808                           ;main.c: 94: MemoryBurnflag = 1;
  6809  0141B2  0E01               	movlw	1
  6810  0141B4  0101               	movlb	1	; () banked
  6811  0141B6  6FCE               	movwf	main@MemoryBurnflag& (0+255),b
  6812  0141B8                     l184:
  6813                           
  6814                           ;main.c: 95: }
  6815                           ;main.c: 96: Baudtemp = 9600;
  6816  0141B8  0E80               	movlw	128
  6817  0141BA  0101               	movlb	1	; () banked
  6818  0141BC  6FD0               	movwf	main@Baudtemp& (0+255),b
  6819  0141BE  0E25               	movlw	37
  6820  0141C0  0101               	movlb	1	; () banked
  6821  0141C2  6FD1               	movwf	(main@Baudtemp+1)& (0+255),b
  6822  0141C4  0E00               	movlw	0
  6823  0141C6  0101               	movlb	1	; () banked
  6824  0141C8  6FD2               	movwf	(main@Baudtemp+2)& (0+255),b
  6825  0141CA  0E00               	movlw	0
  6826  0141CC  0101               	movlb	1	; () banked
  6827  0141CE  6FD3               	movwf	(main@Baudtemp+3)& (0+255),b
  6828                           
  6829                           ; BSR set to: 1
  6830                           ;main.c: 97: SetMemoryParity(0);
  6831  0141D0  0E00               	movlw	0
  6832  0141D2  EC21  F002         	call	_SetMemoryParity
  6833  0141D6                     l13756:
  6834                           
  6835                           ;main.c: 98: }
  6836                           ;main.c: 99: InitUART(Baudtemp, GetMemoryParity());
  6837  0141D6  C1D0  F189         	movff	main@Baudtemp,InitUART@Baud
  6838  0141DA  C1D1  F18A         	movff	main@Baudtemp+1,InitUART@Baud+1
  6839  0141DE  C1D2  F18B         	movff	main@Baudtemp+2,InitUART@Baud+2
  6840  0141E2  C1D3  F18C         	movff	main@Baudtemp+3,InitUART@Baud+3
  6841  0141E6  EC13  F003         	call	_GetMemoryParity	;wreg free
  6842  0141EA  0101               	movlb	1	; () banked
  6843  0141EC  6F8D               	movwf	InitUART@parity& (0+255),b
  6844  0141EE  ECB2  F0A8         	call	_InitUART	;wreg free
  6845                           
  6846                           ;main.c: 100: UARTstring("Firmware Version: ");
  6847  0141F2  0EF8               	movlw	high STR_6
  6848  0141F4  0101               	movlb	1	; () banked
  6849  0141F6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  6850  0141F8  0E13               	movlw	low STR_6
  6851  0141FA  0101               	movlb	1	; () banked
  6852  0141FC  6F87               	movwf	UARTstring@data& (0+255),b
  6853  0141FE  ECD0  F0B4         	call	_UARTstring	;wreg free
  6854                           
  6855                           ;main.c: 101: UARTstring(Version);
  6856  014202  0102               	movlb	2	; () banked
  6857  014204  0E02               	movlw	high _Version
  6858  014206  0101               	movlb	1	; () banked
  6859  014208  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  6860  01420A  0102               	movlb	2	; () banked
  6861  01420C  0E67               	movlw	low _Version
  6862  01420E  0101               	movlb	1	; () banked
  6863  014210  6F87               	movwf	UARTstring@data& (0+255),b
  6864  014212  ECD0  F0B4         	call	_UARTstring	;wreg free
  6865                           
  6866                           ;main.c: 102: UARTstring("\r\n");
  6867  014216  0EF6               	movlw	high (STR_282+19)
  6868  014218  0101               	movlb	1	; () banked
  6869  01421A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  6870  01421C  0ECE               	movlw	low (STR_282+19)
  6871  01421E  0101               	movlb	1	; () banked
  6872  014220  6F87               	movwf	UARTstring@data& (0+255),b
  6873  014222  ECD0  F0B4         	call	_UARTstring	;wreg free
  6874                           
  6875                           ;main.c: 104: for(ii =0; ii <10;ii++)
  6876  014226  0E00               	movlw	0
  6877  014228  0101               	movlb	1	; () banked
  6878  01422A  6FCF               	movwf	main@ii& (0+255),b
  6879  01422C  D022               	goto	L1
  6880  01422E                     l13770:
  6881                           
  6882                           ; BSR set to: 1
  6883                           ;main.c: 105: {
  6884                           ;main.c: 106: LATD |= 0b00000010;
  6885  01422E  828C               	bsf	3980,1,c	;volatile
  6886                           
  6887                           ;main.c: 107: LATD &= ~0b00000100;
  6888  014230  948C               	bcf	3980,2,c	;volatile
  6889                           
  6890                           ; BSR set to: 1
  6891                           ;main.c: 108: delayUS(50000);
  6892  014232  0E50               	movlw	80
  6893  014234  0101               	movlb	1	; () banked
  6894  014236  6F7C               	movwf	delayUS@US& (0+255),b
  6895  014238  0EC3               	movlw	195
  6896  01423A  0101               	movlb	1	; () banked
  6897  01423C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6898  01423E  0E00               	movlw	0
  6899  014240  0101               	movlb	1	; () banked
  6900  014242  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6901  014244  0E00               	movlw	0
  6902  014246  0101               	movlb	1	; () banked
  6903  014248  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6904  01424A  ECA4  F0BA         	call	_delayUS	;wreg free
  6905                           
  6906                           ;main.c: 109: LATD |= 0b00000100;
  6907  01424E  848C               	bsf	3980,2,c	;volatile
  6908                           
  6909                           ;main.c: 110: LATD &= ~0b00000010;
  6910  014250  928C               	bcf	3980,1,c	;volatile
  6911                           
  6912                           ;main.c: 111: delayUS(50000);
  6913  014252  0E50               	movlw	80
  6914  014254  0101               	movlb	1	; () banked
  6915  014256  6F7C               	movwf	delayUS@US& (0+255),b
  6916  014258  0EC3               	movlw	195
  6917  01425A  0101               	movlb	1	; () banked
  6918  01425C  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6919  01425E  0E00               	movlw	0
  6920  014260  0101               	movlb	1	; () banked
  6921  014262  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6922  014264  0E00               	movlw	0
  6923  014266  0101               	movlb	1	; () banked
  6924  014268  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6925  01426A  ECA4  F0BA         	call	_delayUS	;wreg free
  6926  01426E  0101               	movlb	1	; () banked
  6927  014270  2BCF               	incf	main@ii& (0+255),f,b
  6928  014272                     L1:
  6929                           
  6930                           ; BSR set to: 1
  6931  014272  0E09               	movlw	9
  6932  014274  0101               	movlb	1	; () banked
  6933  014276  65CF               	cpfsgt	main@ii& (0+255),b
  6934  014278  D7DA               	goto	l13770
  6935                           
  6936                           ; BSR set to: 1
  6937                           ;main.c: 112: }
  6938                           ;main.c: 113: SetContrast(65);
  6939                           
  6940                           ; BSR set to: 1
  6941  01427A  0E41               	movlw	65
  6942  01427C  ECE6  F0AF         	call	_SetContrast
  6943                           
  6944                           ;main.c: 114: delayUS(20);
  6945  014280  0E14               	movlw	20
  6946  014282  0101               	movlb	1	; () banked
  6947  014284  6F7C               	movwf	delayUS@US& (0+255),b
  6948  014286  0E00               	movlw	0
  6949  014288  0101               	movlb	1	; () banked
  6950  01428A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6951  01428C  0E00               	movlw	0
  6952  01428E  0101               	movlb	1	; () banked
  6953  014290  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  6954  014292  0E00               	movlw	0
  6955  014294  0101               	movlb	1	; () banked
  6956  014296  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  6957  014298  ECA4  F0BA         	call	_delayUS	;wreg free
  6958                           
  6959                           ;main.c: 115: SetLCDcursor(0, 0);
  6960  01429C  0E00               	movlw	0
  6961  01429E  0101               	movlb	1	; () banked
  6962  0142A0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  6963  0142A2  0E00               	movlw	0
  6964  0142A4  ECEE  F001         	call	_SetLCDcursor
  6965                           
  6966                           ;main.c: 116: if(MemoryBurnflag)
  6967  0142A8  0101               	movlb	1	; () banked
  6968  0142AA  51CE               	movf	main@MemoryBurnflag& (0+255),w,b
  6969  0142AC  B4D8               	btfsc	status,2,c
  6970  0142AE  D024               	goto	l187
  6971                           
  6972                           ; BSR set to: 1
  6973                           ;main.c: 117: {
  6974                           ;main.c: 118: UARTstring("Error: Could not burn default Baud rate into Memory\r\n");
  6975  0142B0  0EF0               	movlw	high STR_8
  6976  0142B2  0101               	movlb	1	; () banked
  6977  0142B4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  6978  0142B6  0E4E               	movlw	low STR_8
  6979  0142B8  0101               	movlb	1	; () banked
  6980  0142BA  6F87               	movwf	UARTstring@data& (0+255),b
  6981  0142BC  ECD0  F0B4         	call	_UARTstring	;wreg free
  6982                           
  6983                           ;main.c: 119: LCDPrintString("Err: Baud Mem");
  6984  0142C0  0EFC               	movlw	high STR_9
  6985  0142C2  0101               	movlb	1	; () banked
  6986  0142C4  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  6987  0142C6  0EC5               	movlw	low STR_9
  6988  0142C8  0101               	movlb	1	; () banked
  6989  0142CA  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  6990  0142CC  EC66  F0BA         	call	_LCDPrintString	;wreg free
  6991                           
  6992                           ;main.c: 120: delayUS(100000);
  6993  0142D0  0EA0               	movlw	160
  6994  0142D2  0101               	movlb	1	; () banked
  6995  0142D4  6F7C               	movwf	delayUS@US& (0+255),b
  6996  0142D6  0E86               	movlw	134
  6997  0142D8  0101               	movlb	1	; () banked
  6998  0142DA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  6999  0142DC  0E01               	movlw	1
  7000  0142DE  0101               	movlb	1	; () banked
  7001  0142E0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7002  0142E2  0E00               	movlw	0
  7003  0142E4  0101               	movlb	1	; () banked
  7004  0142E6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7005  0142E8  ECA4  F0BA         	call	_delayUS	;wreg free
  7006                           
  7007                           ;main.c: 121: SetLCDcursor(0, 0);
  7008  0142EC  0E00               	movlw	0
  7009  0142EE  0101               	movlb	1	; () banked
  7010  0142F0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7011  0142F2  0E00               	movlw	0
  7012  0142F4  ECEE  F001         	call	_SetLCDcursor
  7013  0142F8                     l187:
  7014                           
  7015                           ;main.c: 122: }
  7016                           ;main.c: 123: LCDPrintString("Starting");
  7017  0142F8  0EFE               	movlw	high STR_10
  7018  0142FA  0101               	movlb	1	; () banked
  7019  0142FC  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7020  0142FE  0EE9               	movlw	low STR_10
  7021  014300  0101               	movlb	1	; () banked
  7022  014302  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7023  014304  EC66  F0BA         	call	_LCDPrintString	;wreg free
  7024                           
  7025                           ;main.c: 124: UARTstring("Starting...");
  7026  014308  0EFD               	movlw	high STR_11
  7027  01430A  0101               	movlb	1	; () banked
  7028  01430C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  7029  01430E  0EAB               	movlw	low STR_11
  7030  014310  0101               	movlb	1	; () banked
  7031  014312  6F87               	movwf	UARTstring@data& (0+255),b
  7032  014314  ECD0  F0B4         	call	_UARTstring	;wreg free
  7033                           
  7034                           ;main.c: 125: delayUS(100000);
  7035  014318  0EA0               	movlw	160
  7036  01431A  0101               	movlb	1	; () banked
  7037  01431C  6F7C               	movwf	delayUS@US& (0+255),b
  7038  01431E  0E86               	movlw	134
  7039  014320  0101               	movlb	1	; () banked
  7040  014322  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7041  014324  0E01               	movlw	1
  7042  014326  0101               	movlb	1	; () banked
  7043  014328  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7044  01432A  0E00               	movlw	0
  7045  01432C  0101               	movlb	1	; () banked
  7046  01432E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7047  014330  ECA4  F0BA         	call	_delayUS	;wreg free
  7048                           
  7049                           ;main.c: 126: SetLCDcursor(0, 0);
  7050  014334  0E00               	movlw	0
  7051  014336  0101               	movlb	1	; () banked
  7052  014338  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7053  01433A  0E00               	movlw	0
  7054  01433C  ECEE  F001         	call	_SetLCDcursor
  7055                           
  7056                           ;main.c: 127: LCDPrintString("Starting.");
  7057  014340  0EFE               	movlw	high STR_12
  7058  014342  0101               	movlb	1	; () banked
  7059  014344  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7060  014346  0E7C               	movlw	low STR_12
  7061  014348  0101               	movlb	1	; () banked
  7062  01434A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7063  01434C  EC66  F0BA         	call	_LCDPrintString	;wreg free
  7064                           
  7065                           ;main.c: 128: delayUS(100000);
  7066  014350  0EA0               	movlw	160
  7067  014352  0101               	movlb	1	; () banked
  7068  014354  6F7C               	movwf	delayUS@US& (0+255),b
  7069  014356  0E86               	movlw	134
  7070  014358  0101               	movlb	1	; () banked
  7071  01435A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7072  01435C  0E01               	movlw	1
  7073  01435E  0101               	movlb	1	; () banked
  7074  014360  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7075  014362  0E00               	movlw	0
  7076  014364  0101               	movlb	1	; () banked
  7077  014366  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7078  014368  ECA4  F0BA         	call	_delayUS	;wreg free
  7079                           
  7080                           ;main.c: 129: SetLCDcursor(0, 0);
  7081  01436C  0E00               	movlw	0
  7082  01436E  0101               	movlb	1	; () banked
  7083  014370  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7084  014372  0E00               	movlw	0
  7085  014374  ECEE  F001         	call	_SetLCDcursor
  7086                           
  7087                           ;main.c: 130: LCDPrintString("Starting..");
  7088  014378  0EFD               	movlw	high STR_13
  7089  01437A  0101               	movlb	1	; () banked
  7090  01437C  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7091  01437E  0EF9               	movlw	low STR_13
  7092  014380  0101               	movlb	1	; () banked
  7093  014382  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7094  014384  EC66  F0BA         	call	_LCDPrintString	;wreg free
  7095                           
  7096                           ;main.c: 131: delayUS(100000);
  7097  014388  0EA0               	movlw	160
  7098  01438A  0101               	movlb	1	; () banked
  7099  01438C  6F7C               	movwf	delayUS@US& (0+255),b
  7100  01438E  0E86               	movlw	134
  7101  014390  0101               	movlb	1	; () banked
  7102  014392  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7103  014394  0E01               	movlw	1
  7104  014396  0101               	movlb	1	; () banked
  7105  014398  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7106  01439A  0E00               	movlw	0
  7107  01439C  0101               	movlb	1	; () banked
  7108  01439E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7109  0143A0  ECA4  F0BA         	call	_delayUS	;wreg free
  7110                           
  7111                           ;main.c: 132: SetLCDcursor(0, 0);
  7112  0143A4  0E00               	movlw	0
  7113  0143A6  0101               	movlb	1	; () banked
  7114  0143A8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7115  0143AA  0E00               	movlw	0
  7116  0143AC  ECEE  F001         	call	_SetLCDcursor
  7117                           
  7118                           ;main.c: 133: LCDPrintString("Starting...");
  7119  0143B0  0EFD               	movlw	high STR_11
  7120  0143B2  0101               	movlb	1	; () banked
  7121  0143B4  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7122  0143B6  0EAB               	movlw	low STR_11
  7123  0143B8  0101               	movlb	1	; () banked
  7124  0143BA  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7125  0143BC  EC66  F0BA         	call	_LCDPrintString	;wreg free
  7126                           
  7127                           ;main.c: 134: delayUS(100000);
  7128  0143C0  0EA0               	movlw	160
  7129  0143C2  0101               	movlb	1	; () banked
  7130  0143C4  6F7C               	movwf	delayUS@US& (0+255),b
  7131  0143C6  0E86               	movlw	134
  7132  0143C8  0101               	movlb	1	; () banked
  7133  0143CA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7134  0143CC  0E01               	movlw	1
  7135  0143CE  0101               	movlb	1	; () banked
  7136  0143D0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7137  0143D2  0E00               	movlw	0
  7138  0143D4  0101               	movlb	1	; () banked
  7139  0143D6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7140  0143D8  ECA4  F0BA         	call	_delayUS	;wreg free
  7141                           
  7142                           ;main.c: 135: SetLCDcursor(0, 0);
  7143  0143DC  0E00               	movlw	0
  7144  0143DE  0101               	movlb	1	; () banked
  7145  0143E0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7146  0143E2  0E00               	movlw	0
  7147  0143E4  ECEE  F001         	call	_SetLCDcursor
  7148                           
  7149                           ;main.c: 136: LCDPrintString("Starting....");
  7150  0143E8  0EFD               	movlw	high STR_15
  7151  0143EA  0101               	movlb	1	; () banked
  7152  0143EC  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7153  0143EE  0E62               	movlw	low STR_15
  7154  0143F0  0101               	movlb	1	; () banked
  7155  0143F2  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7156  0143F4  EC66  F0BA         	call	_LCDPrintString	;wreg free
  7157                           
  7158                           ;main.c: 137: delayUS(100000);
  7159  0143F8  0EA0               	movlw	160
  7160  0143FA  0101               	movlb	1	; () banked
  7161  0143FC  6F7C               	movwf	delayUS@US& (0+255),b
  7162  0143FE  0E86               	movlw	134
  7163  014400  0101               	movlb	1	; () banked
  7164  014402  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7165  014404  0E01               	movlw	1
  7166  014406  0101               	movlb	1	; () banked
  7167  014408  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7168  01440A  0E00               	movlw	0
  7169  01440C  0101               	movlb	1	; () banked
  7170  01440E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7171  014410  ECA4  F0BA         	call	_delayUS	;wreg free
  7172                           
  7173                           ;main.c: 138: SetLCDcursor(0, 0);
  7174  014414  0E00               	movlw	0
  7175  014416  0101               	movlb	1	; () banked
  7176  014418  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7177  01441A  0E00               	movlw	0
  7178  01441C  ECEE  F001         	call	_SetLCDcursor
  7179                           
  7180                           ;main.c: 139: LCDPrintString("Starting.....");
  7181  014420  0EFC               	movlw	high STR_16
  7182  014422  0101               	movlb	1	; () banked
  7183  014424  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7184  014426  0EB7               	movlw	low STR_16
  7185  014428  0101               	movlb	1	; () banked
  7186  01442A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7187  01442C  EC66  F0BA         	call	_LCDPrintString	;wreg free
  7188                           
  7189                           ;main.c: 140: delayUS(100000);
  7190  014430  0EA0               	movlw	160
  7191  014432  0101               	movlb	1	; () banked
  7192  014434  6F7C               	movwf	delayUS@US& (0+255),b
  7193  014436  0E86               	movlw	134
  7194  014438  0101               	movlb	1	; () banked
  7195  01443A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7196  01443C  0E01               	movlw	1
  7197  01443E  0101               	movlb	1	; () banked
  7198  014440  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7199  014442  0E00               	movlw	0
  7200  014444  0101               	movlb	1	; () banked
  7201  014446  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7202  014448  ECA4  F0BA         	call	_delayUS	;wreg free
  7203                           
  7204                           ;main.c: 141: SetLCDcursor(0, 0);
  7205  01444C  0E00               	movlw	0
  7206  01444E  0101               	movlb	1	; () banked
  7207  014450  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7208  014452  0E00               	movlw	0
  7209  014454  ECEE  F001         	call	_SetLCDcursor
  7210                           
  7211                           ;main.c: 142: LCDPrintString("Starting......");
  7212  014458  0EFC               	movlw	high STR_17
  7213  01445A  0101               	movlb	1	; () banked
  7214  01445C  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7215  01445E  0E1C               	movlw	low STR_17
  7216  014460  0101               	movlb	1	; () banked
  7217  014462  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7218  014464  EC66  F0BA         	call	_LCDPrintString	;wreg free
  7219                           
  7220                           ;main.c: 143: delayUS(100000);
  7221  014468  0EA0               	movlw	160
  7222  01446A  0101               	movlb	1	; () banked
  7223  01446C  6F7C               	movwf	delayUS@US& (0+255),b
  7224  01446E  0E86               	movlw	134
  7225  014470  0101               	movlb	1	; () banked
  7226  014472  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7227  014474  0E01               	movlw	1
  7228  014476  0101               	movlb	1	; () banked
  7229  014478  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7230  01447A  0E00               	movlw	0
  7231  01447C  0101               	movlb	1	; () banked
  7232  01447E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7233  014480  ECA4  F0BA         	call	_delayUS	;wreg free
  7234                           
  7235                           ;main.c: 144: SetLCDcursor(0, 0);
  7236  014484  0E00               	movlw	0
  7237  014486  0101               	movlb	1	; () banked
  7238  014488  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7239  01448A  0E00               	movlw	0
  7240  01448C  ECEE  F001         	call	_SetLCDcursor
  7241                           
  7242                           ;main.c: 145: LCDPrintString("Starting.......");
  7243  014490  0EFB               	movlw	high STR_18
  7244  014492  0101               	movlb	1	; () banked
  7245  014494  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7246  014496  0E49               	movlw	low STR_18
  7247  014498  0101               	movlb	1	; () banked
  7248  01449A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7249  01449C  EC66  F0BA         	call	_LCDPrintString	;wreg free
  7250                           
  7251                           ;main.c: 146: delayUS(100000);
  7252  0144A0  0EA0               	movlw	160
  7253  0144A2  0101               	movlb	1	; () banked
  7254  0144A4  6F7C               	movwf	delayUS@US& (0+255),b
  7255  0144A6  0E86               	movlw	134
  7256  0144A8  0101               	movlb	1	; () banked
  7257  0144AA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7258  0144AC  0E01               	movlw	1
  7259  0144AE  0101               	movlb	1	; () banked
  7260  0144B0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7261  0144B2  0E00               	movlw	0
  7262  0144B4  0101               	movlb	1	; () banked
  7263  0144B6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7264  0144B8  ECA4  F0BA         	call	_delayUS	;wreg free
  7265                           
  7266                           ;main.c: 147: SetLCDcursor(0, 0);
  7267  0144BC  0E00               	movlw	0
  7268  0144BE  0101               	movlb	1	; () banked
  7269  0144C0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7270  0144C2  0E00               	movlw	0
  7271  0144C4  ECEE  F001         	call	_SetLCDcursor
  7272                           
  7273                           ;main.c: 148: LCDPrintString("Starting........");
  7274  0144C8  0EF9               	movlw	high STR_19
  7275  0144CA  0101               	movlb	1	; () banked
  7276  0144CC  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7277  0144CE  0ED8               	movlw	low STR_19
  7278  0144D0  0101               	movlb	1	; () banked
  7279  0144D2  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7280  0144D4  EC66  F0BA         	call	_LCDPrintString	;wreg free
  7281                           
  7282                           ;main.c: 149: delayUS(100000);
  7283  0144D8  0EA0               	movlw	160
  7284  0144DA  0101               	movlb	1	; () banked
  7285  0144DC  6F7C               	movwf	delayUS@US& (0+255),b
  7286  0144DE  0E86               	movlw	134
  7287  0144E0  0101               	movlb	1	; () banked
  7288  0144E2  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7289  0144E4  0E01               	movlw	1
  7290  0144E6  0101               	movlb	1	; () banked
  7291  0144E8  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7292  0144EA  0E00               	movlw	0
  7293  0144EC  0101               	movlb	1	; () banked
  7294  0144EE  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7295  0144F0  ECA4  F0BA         	call	_delayUS	;wreg free
  7296                           
  7297                           ;main.c: 150: SetLCDcursor(1, 0);
  7298  0144F4  0E00               	movlw	0
  7299  0144F6  0101               	movlb	1	; () banked
  7300  0144F8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7301  0144FA  0E01               	movlw	1
  7302  0144FC  ECEE  F001         	call	_SetLCDcursor
  7303                           
  7304                           ;main.c: 151: LCDPrintString("Enter '?'");
  7305  014500  0EFE               	movlw	high STR_20
  7306  014502  0101               	movlb	1	; () banked
  7307  014504  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  7308  014506  0E72               	movlw	low STR_20
  7309  014508  0101               	movlb	1	; () banked
  7310  01450A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  7311  01450C  EC66  F0BA         	call	_LCDPrintString	;wreg free
  7312                           
  7313                           ;main.c: 152: delayUS(100000);
  7314  014510  0EA0               	movlw	160
  7315  014512  0101               	movlb	1	; () banked
  7316  014514  6F7C               	movwf	delayUS@US& (0+255),b
  7317  014516  0E86               	movlw	134
  7318  014518  0101               	movlb	1	; () banked
  7319  01451A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7320  01451C  0E01               	movlw	1
  7321  01451E  0101               	movlb	1	; () banked
  7322  014520  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7323  014522  0E00               	movlw	0
  7324  014524  0101               	movlb	1	; () banked
  7325  014526  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7326  014528  ECA4  F0BA         	call	_delayUS	;wreg free
  7327                           
  7328                           ;main.c: 153: UARTstring("\r\nEnter '?' for Help Menu\r\n>");
  7329  01452C  0EF4               	movlw	high STR_21
  7330  01452E  0101               	movlb	1	; () banked
  7331  014530  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  7332  014532  0EB6               	movlw	low STR_21
  7333  014534  0101               	movlb	1	; () banked
  7334  014536  6F87               	movwf	UARTstring@data& (0+255),b
  7335  014538  ECD0  F0B4         	call	_UARTstring	;wreg free
  7336                           
  7337                           ;main.c: 155: for(count =100; count >0; count-=5)
  7338  01453C  0E64               	movlw	100
  7339  01453E  0101               	movlb	1	; () banked
  7340  014540  6FD4               	movwf	main@count& (0+255),b
  7341  014542  D015               	goto	L2
  7342  014544                     l13838:
  7343                           
  7344                           ; BSR set to: 1
  7345                           ;main.c: 156: {
  7346                           ;main.c: 157: SetDuty(count);
  7347  014544  0101               	movlb	1	; () banked
  7348  014546  51D4               	movf	main@count& (0+255),w,b
  7349  014548  ECF7  F0B2         	call	_SetDuty
  7350                           
  7351                           ;main.c: 158: delayUS(50000);
  7352  01454C  0E50               	movlw	80
  7353  01454E  0101               	movlb	1	; () banked
  7354  014550  6F7C               	movwf	delayUS@US& (0+255),b
  7355  014552  0EC3               	movlw	195
  7356  014554  0101               	movlb	1	; () banked
  7357  014556  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7358  014558  0E00               	movlw	0
  7359  01455A  0101               	movlb	1	; () banked
  7360  01455C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7361  01455E  0E00               	movlw	0
  7362  014560  0101               	movlb	1	; () banked
  7363  014562  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7364  014564  ECA4  F0BA         	call	_delayUS	;wreg free
  7365  014568  0E05               	movlw	5
  7366  01456A  0101               	movlb	1	; () banked
  7367  01456C  5FD4               	subwf	main@count& (0+255),f,b
  7368  01456E                     L2:
  7369                           
  7370                           ; BSR set to: 1
  7371  01456E  0101               	movlb	1	; () banked
  7372  014570  67D4               	tstfsz	main@count& (0+255),b
  7373  014572  D7E8               	goto	l13838
  7374                           
  7375                           ; BSR set to: 1
  7376                           ;main.c: 159: }
  7377                           ;main.c: 161: LATD &= ~(0b00000010+0b00000100);
  7378                           
  7379                           ; BSR set to: 1
  7380  014574  0EF9               	movlw	249
  7381  014576  168C               	andwf	3980,f,c	;volatile
  7382                           
  7383                           ; BSR set to: 1
  7384                           ;main.c: 162: ReadUSART();
  7385  014578  EC3A  F002         	call	_ReadUSART	;wreg free
  7386                           
  7387                           ;main.c: 163: ReadUSART();
  7388  01457C  EC3A  F002         	call	_ReadUSART	;wreg free
  7389                           
  7390                           ;main.c: 164: ReadUSART();
  7391  014580  EC3A  F002         	call	_ReadUSART	;wreg free
  7392                           
  7393                           ;main.c: 166: ClearLCD();
  7394  014584  EC31  F003         	call	_ClearLCD	;wreg free
  7395                           
  7396                           ;main.c: 167: SetLCDcursor(0, 0);
  7397  014588  0E00               	movlw	0
  7398  01458A  0101               	movlb	1	; () banked
  7399  01458C  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  7400  01458E  0E00               	movlw	0
  7401  014590  ECEE  F001         	call	_SetLCDcursor
  7402                           
  7403                           ;main.c: 168: LCDPrintChar('>');
  7404  014594  0E3E               	movlw	62
  7405  014596  EC5F  F003         	call	_LCDPrintChar
  7406  01459A                     l13858:
  7407                           
  7408                           ;main.c: 171: {
  7409                           ;main.c: 173: LCDScreenUpdate();
  7410  01459A  EC42  F09B         	call	_LCDScreenUpdate	;wreg free
  7411                           
  7412                           ;main.c: 174: if(Rxdata[0] != 0)
  7413  01459E  0103               	movlb	3	; () banked
  7414  0145A0  5164               	movf	_Rxdata& (0+255),w,b
  7415  0145A2  B4D8               	btfsc	status,2,c
  7416  0145A4  D7FA               	goto	l13858
  7417                           
  7418                           ; BSR set to: 3
  7419                           ;main.c: 175: {
  7420                           ;main.c: 176: if (Rxdata[0] != '\r' && Rxdata[0] != '\n')
  7421  0145A6  0103               	movlb	3	; () banked
  7422  0145A8  5164               	movf	_Rxdata& (0+255),w,b
  7423  0145AA  0A0D               	xorlw	13
  7424  0145AC  B4D8               	btfsc	status,2,c
  7425  0145AE  D01A               	goto	l13870
  7426                           
  7427                           ; BSR set to: 3
  7428  0145B0  0103               	movlb	3	; () banked
  7429  0145B2  5164               	movf	_Rxdata& (0+255),w,b
  7430  0145B4  0A0A               	xorlw	10
  7431  0145B6  B4D8               	btfsc	status,2,c
  7432  0145B8  D015               	goto	l13870
  7433                           
  7434                           ; BSR set to: 3
  7435                           ;main.c: 177: {
  7436                           ;main.c: 178: if(Command(Rxdata))
  7437  0145BA  0103               	movlb	3	; () banked
  7438  0145BC  0E03               	movlw	high _Rxdata
  7439  0145BE  0101               	movlb	1	; () banked
  7440  0145C0  6FC9               	movwf	(Command@Input+1)& (0+255),b
  7441  0145C2  0103               	movlb	3	; () banked
  7442  0145C4  0E64               	movlw	low _Rxdata
  7443  0145C6  0101               	movlb	1	; () banked
  7444  0145C8  6FC8               	movwf	Command@Input& (0+255),b
  7445  0145CA  EC00  F080         	call	_Command	;wreg free
  7446  0145CE  0900               	iorlw	0
  7447  0145D0  B4D8               	btfsc	status,2,c
  7448  0145D2  D008               	goto	l13870
  7449                           
  7450                           ;main.c: 179: {
  7451                           ;main.c: 180: UARTstring("\r\n>");
  7452  0145D4  0EF4               	movlw	high (STR_21+25)
  7453  0145D6  0101               	movlb	1	; () banked
  7454  0145D8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
  7455  0145DA  0ECF               	movlw	low (STR_21+25)
  7456  0145DC  0101               	movlb	1	; () banked
  7457  0145DE  6F87               	movwf	UARTstring@data& (0+255),b
  7458  0145E0  ECD0  F0B4         	call	_UARTstring	;wreg free
  7459  0145E4                     l13870:
  7460                           
  7461                           ;main.c: 181: }
  7462                           ;main.c: 182: }
  7463                           ;main.c: 183: cleanBuffer(Rxdata, 100);
  7464  0145E4  0103               	movlb	3	; () banked
  7465  0145E6  0E03               	movlw	high _Rxdata
  7466  0145E8  0101               	movlb	1	; () banked
  7467  0145EA  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  7468  0145EC  0103               	movlb	3	; () banked
  7469  0145EE  0E64               	movlw	low _Rxdata
  7470  0145F0  0101               	movlb	1	; () banked
  7471  0145F2  6F7C               	movwf	cleanBuffer@data& (0+255),b
  7472  0145F4  0E00               	movlw	0
  7473  0145F6  0101               	movlb	1	; () banked
  7474  0145F8  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  7475  0145FA  0E64               	movlw	100
  7476  0145FC  0101               	movlb	1	; () banked
  7477  0145FE  6F7E               	movwf	cleanBuffer@count& (0+255),b
  7478  014600  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  7479  014604  D7CA               	goto	l13858
  7480  014606                     __end_of_main:
  7481                           	opt stack 0
  7482                           tblptru	equ	0xFF8
  7483                           tblptrh	equ	0xFF7
  7484                           tblptrl	equ	0xFF6
  7485                           tablat	equ	0xFF5
  7486                           postinc0	equ	0xFEE
  7487                           wreg	equ	0xFE8
  7488                           postdec1	equ	0xFE5
  7489                           fsr1l	equ	0xFE1
  7490                           status	equ	0xFD8
  7491                           
  7492 ;; *************** function _init_LCD *****************
  7493 ;; Defined at:
  7494 ;;		line 66 in file "LCD.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;		None
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;		None
  7499 ;; Return value:  Size  Location     Type
  7500 ;;		None               void
  7501 ;; Registers used:
  7502 ;;		wreg, status,2, status,0, cstack
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;Total ram usage:        0 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:   10
  7515 ;; This function calls:
  7516 ;;		_ClearLCD
  7517 ;;		_PulseEnablePin
  7518 ;;		_SendLCDbyte
  7519 ;;		_delayUS
  7520 ;; This function is called by:
  7521 ;;		_main
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text1
  7526  015A60                     __ptext1:
  7527                           	opt stack 0
  7528  015A60                     _init_LCD:
  7529                           	opt stack 19
  7530                           
  7531                           ;LCD.c: 68: LATD &= ~(0b01000000);
  7532                           
  7533                           ;incstack = 0
  7534  015A60  9C8C               	bcf	3980,6,c	;volatile
  7535                           
  7536                           ;LCD.c: 69: PulseEnablePin();
  7537  015A62  EC5E  F0BE         	call	_PulseEnablePin	;wreg free
  7538                           
  7539                           ;LCD.c: 70: LATD &= ~(0b10000000 + 0b00100000);
  7540  015A66  0E5F               	movlw	95
  7541  015A68  168C               	andwf	3980,f,c	;volatile
  7542                           
  7543                           ;LCD.c: 71: PulseEnablePin();
  7544  015A6A  EC5E  F0BE         	call	_PulseEnablePin	;wreg free
  7545                           
  7546                           ;LCD.c: 73: SendLCDbyte(0x00, 1);
  7547  015A6E  0E01               	movlw	1
  7548  015A70  0101               	movlb	1	; () banked
  7549  015A72  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  7550  015A74  0E00               	movlw	0
  7551  015A76  EC20  F0B2         	call	_SendLCDbyte
  7552                           
  7553                           ;LCD.c: 74: delayUS(50000);
  7554  015A7A  0E50               	movlw	80
  7555  015A7C  0101               	movlb	1	; () banked
  7556  015A7E  6F7C               	movwf	delayUS@US& (0+255),b
  7557  015A80  0EC3               	movlw	195
  7558  015A82  0101               	movlb	1	; () banked
  7559  015A84  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7560  015A86  0E00               	movlw	0
  7561  015A88  0101               	movlb	1	; () banked
  7562  015A8A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7563  015A8C  0E00               	movlw	0
  7564  015A8E  0101               	movlb	1	; () banked
  7565  015A90  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7566  015A92  ECA4  F0BA         	call	_delayUS	;wreg free
  7567                           
  7568                           ;LCD.c: 75: SendLCDbyte(0x00, 0);
  7569  015A96  0E00               	movlw	0
  7570  015A98  0101               	movlb	1	; () banked
  7571  015A9A  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  7572  015A9C  0E00               	movlw	0
  7573  015A9E  EC20  F0B2         	call	_SendLCDbyte
  7574                           
  7575                           ;LCD.c: 76: delayUS(50000);
  7576  015AA2  0E50               	movlw	80
  7577  015AA4  0101               	movlb	1	; () banked
  7578  015AA6  6F7C               	movwf	delayUS@US& (0+255),b
  7579  015AA8  0EC3               	movlw	195
  7580  015AAA  0101               	movlb	1	; () banked
  7581  015AAC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7582  015AAE  0E00               	movlw	0
  7583  015AB0  0101               	movlb	1	; () banked
  7584  015AB2  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7585  015AB4  0E00               	movlw	0
  7586  015AB6  0101               	movlb	1	; () banked
  7587  015AB8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7588  015ABA  ECA4  F0BA         	call	_delayUS	;wreg free
  7589                           
  7590                           ;LCD.c: 78: LATA |= (0b00100000);
  7591  015ABE  8A89               	bsf	3977,5,c	;volatile
  7592                           
  7593                           ;LCD.c: 79: delayUS(50000);
  7594  015AC0  0E50               	movlw	80
  7595  015AC2  0101               	movlb	1	; () banked
  7596  015AC4  6F7C               	movwf	delayUS@US& (0+255),b
  7597  015AC6  0EC3               	movlw	195
  7598  015AC8  0101               	movlb	1	; () banked
  7599  015ACA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7600  015ACC  0E00               	movlw	0
  7601  015ACE  0101               	movlb	1	; () banked
  7602  015AD0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7603  015AD2  0E00               	movlw	0
  7604  015AD4  0101               	movlb	1	; () banked
  7605  015AD6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7606  015AD8  ECA4  F0BA         	call	_delayUS	;wreg free
  7607                           
  7608                           ;LCD.c: 80: PulseEnablePin();
  7609  015ADC  EC5E  F0BE         	call	_PulseEnablePin	;wreg free
  7610                           
  7611                           ;LCD.c: 81: delayUS(50000);
  7612  015AE0  0E50               	movlw	80
  7613  015AE2  0101               	movlb	1	; () banked
  7614  015AE4  6F7C               	movwf	delayUS@US& (0+255),b
  7615  015AE6  0EC3               	movlw	195
  7616  015AE8  0101               	movlb	1	; () banked
  7617  015AEA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7618  015AEC  0E00               	movlw	0
  7619  015AEE  0101               	movlb	1	; () banked
  7620  015AF0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7621  015AF2  0E00               	movlw	0
  7622  015AF4  0101               	movlb	1	; () banked
  7623  015AF6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7624  015AF8  ECA4  F0BA         	call	_delayUS	;wreg free
  7625                           
  7626                           ;LCD.c: 85: SendLCDbyte(0x28, 0);
  7627  015AFC  0E00               	movlw	0
  7628  015AFE  0101               	movlb	1	; () banked
  7629  015B00  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  7630  015B02  0E28               	movlw	40
  7631  015B04  EC20  F0B2         	call	_SendLCDbyte
  7632                           
  7633                           ;LCD.c: 86: delayUS(50000);
  7634  015B08  0E50               	movlw	80
  7635  015B0A  0101               	movlb	1	; () banked
  7636  015B0C  6F7C               	movwf	delayUS@US& (0+255),b
  7637  015B0E  0EC3               	movlw	195
  7638  015B10  0101               	movlb	1	; () banked
  7639  015B12  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7640  015B14  0E00               	movlw	0
  7641  015B16  0101               	movlb	1	; () banked
  7642  015B18  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7643  015B1A  0E00               	movlw	0
  7644  015B1C  0101               	movlb	1	; () banked
  7645  015B1E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7646  015B20  ECA4  F0BA         	call	_delayUS	;wreg free
  7647                           
  7648                           ;LCD.c: 89: SendLCDbyte(0x0C, 0);
  7649  015B24  0E00               	movlw	0
  7650  015B26  0101               	movlb	1	; () banked
  7651  015B28  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  7652  015B2A  0E0C               	movlw	12
  7653  015B2C  EC20  F0B2         	call	_SendLCDbyte
  7654                           
  7655                           ;LCD.c: 90: delayUS(50000);
  7656  015B30  0E50               	movlw	80
  7657  015B32  0101               	movlb	1	; () banked
  7658  015B34  6F7C               	movwf	delayUS@US& (0+255),b
  7659  015B36  0EC3               	movlw	195
  7660  015B38  0101               	movlb	1	; () banked
  7661  015B3A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7662  015B3C  0E00               	movlw	0
  7663  015B3E  0101               	movlb	1	; () banked
  7664  015B40  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7665  015B42  0E00               	movlw	0
  7666  015B44  0101               	movlb	1	; () banked
  7667  015B46  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7668  015B48  ECA4  F0BA         	call	_delayUS	;wreg free
  7669                           
  7670                           ;LCD.c: 93: SendLCDbyte(0x06, 0);
  7671  015B4C  0E00               	movlw	0
  7672  015B4E  0101               	movlb	1	; () banked
  7673  015B50  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  7674  015B52  0E06               	movlw	6
  7675  015B54  EC20  F0B2         	call	_SendLCDbyte
  7676                           
  7677                           ;LCD.c: 94: delayUS(50000);
  7678  015B58  0E50               	movlw	80
  7679  015B5A  0101               	movlb	1	; () banked
  7680  015B5C  6F7C               	movwf	delayUS@US& (0+255),b
  7681  015B5E  0EC3               	movlw	195
  7682  015B60  0101               	movlb	1	; () banked
  7683  015B62  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7684  015B64  0E00               	movlw	0
  7685  015B66  0101               	movlb	1	; () banked
  7686  015B68  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7687  015B6A  0E00               	movlw	0
  7688  015B6C  0101               	movlb	1	; () banked
  7689  015B6E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7690  015B70  ECA4  F0BA         	call	_delayUS	;wreg free
  7691                           
  7692                           ;LCD.c: 96: ClearLCD();
  7693  015B74  EC31  F003         	call	_ClearLCD	;wreg free
  7694                           
  7695                           ;LCD.c: 97: delayUS(50000);
  7696  015B78  0E50               	movlw	80
  7697  015B7A  0101               	movlb	1	; () banked
  7698  015B7C  6F7C               	movwf	delayUS@US& (0+255),b
  7699  015B7E  0EC3               	movlw	195
  7700  015B80  0101               	movlb	1	; () banked
  7701  015B82  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  7702  015B84  0E00               	movlw	0
  7703  015B86  0101               	movlb	1	; () banked
  7704  015B88  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  7705  015B8A  0E00               	movlw	0
  7706  015B8C  0101               	movlb	1	; () banked
  7707  015B8E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  7708  015B90  ECA4  F0BA         	call	_delayUS	;wreg free
  7709  015B94  0012               	return	
  7710  015B96                     __end_of_init_LCD:
  7711                           	opt stack 0
  7712                           tblptru	equ	0xFF8
  7713                           tblptrh	equ	0xFF7
  7714                           tblptrl	equ	0xFF6
  7715                           tablat	equ	0xFF5
  7716                           postinc0	equ	0xFEE
  7717                           wreg	equ	0xFE8
  7718                           postdec1	equ	0xFE5
  7719                           fsr1l	equ	0xFE1
  7720                           status	equ	0xFD8
  7721                           
  7722 ;; *************** function _RTC_INIT *****************
  7723 ;; Defined at:
  7724 ;;		line 57 in file "RTC.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;		None
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;		None
  7729 ;; Return value:  Size  Location     Type
  7730 ;;		None               void
  7731 ;; Registers used:
  7732 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;Total ram usage:        0 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:   10
  7745 ;; This function calls:
  7746 ;;		_InternalADC_Read
  7747 ;;		_RTC_Clock_Enable
  7748 ;;		_RTC_TIME_NONMilitary
  7749 ;; This function is called by:
  7750 ;;		_main
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text2
  7755  00070A                     __ptext2:
  7756                           	opt stack 0
  7757  00070A                     _RTC_INIT:
  7758                           	opt stack 19
  7759                           
  7760                           ;RTC.c: 59: RTC_Clock_Enable();
  7761                           
  7762                           ;incstack = 0
  7763  00070A  EC10  F0BD         	call	_RTC_Clock_Enable	;wreg free
  7764                           
  7765                           ;RTC.c: 60: RTC_TIME_NONMilitary();
  7766  00070E  EC28  F0B9         	call	_RTC_TIME_NONMilitary	;wreg free
  7767                           
  7768                           ;RTC.c: 61: InternalADC_Read(2);
  7769  000712  0E02               	movlw	2
  7770  000714  ECEE  F0BB         	call	_InternalADC_Read
  7771  000718  0012               	return	
  7772  00071A                     __end_of_RTC_INIT:
  7773                           	opt stack 0
  7774                           tblptru	equ	0xFF8
  7775                           tblptrh	equ	0xFF7
  7776                           tblptrl	equ	0xFF6
  7777                           tablat	equ	0xFF5
  7778                           postinc0	equ	0xFEE
  7779                           wreg	equ	0xFE8
  7780                           postdec1	equ	0xFE5
  7781                           fsr1l	equ	0xFE1
  7782                           status	equ	0xFD8
  7783                           
  7784 ;; *************** function _RTC_TIME_NONMilitary *****************
  7785 ;; Defined at:
  7786 ;;		line 89 in file "RTC.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  temphours       2   27[BANK1 ] int 
  7791 ;;  Error           2   25[BANK1 ] int 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;		None               void
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0, prodl, cstack
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7802 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7803 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;Total ram usage:        5 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:    9
  7808 ;; This function calls:
  7809 ;;		_I2C_Read_At_Address
  7810 ;;		_I2C_Write_At_Address
  7811 ;;		_ResetI2C
  7812 ;; This function is called by:
  7813 ;;		_RTC_INIT
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           	psect	text3
  7818  017250                     __ptext3:
  7819                           	opt stack 0
  7820  017250                     _RTC_TIME_NONMilitary:
  7821                           	opt stack 19
  7822                           
  7823                           ;RTC.c: 91: int temphours = 0;
  7824                           
  7825                           ;incstack = 0
  7826  017250  0E00               	movlw	0
  7827  017252  0101               	movlb	1	; () banked
  7828  017254  6F8A               	movwf	(RTC_TIME_NONMilitary@temphours+1)& (0+255),b
  7829  017256  0E00               	movlw	0
  7830  017258  0101               	movlb	1	; () banked
  7831  01725A  6F89               	movwf	RTC_TIME_NONMilitary@temphours& (0+255),b
  7832                           
  7833                           ; BSR set to: 1
  7834                           ;RTC.c: 92: int Error = -1;
  7835  01725C  0101               	movlb	1	; () banked
  7836  01725E  6987               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  7837  017260  0101               	movlb	1	; () banked
  7838  017262  6988               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  7839                           
  7840                           ; BSR set to: 1
  7841                           ;RTC.c: 94: temphours = I2C_Read_At_Address(0b1101000, 0x02);
  7842  017264  0E02               	movlw	2
  7843  017266  0101               	movlb	1	; () banked
  7844  017268  6F7F               	movwf	I2C_Read_At_Address@Register& (0+255),b
  7845  01726A  0E68               	movlw	104
  7846  01726C  ECCB  F0AD         	call	_I2C_Read_At_Address
  7847  017270  0101               	movlb	1	; () banked
  7848  017272  C17F  F189         	movff	?_I2C_Read_At_Address,RTC_TIME_NONMilitary@temphours
  7849  017276  0101               	movlb	1	; () banked
  7850  017278  C180  F18A         	movff	?_I2C_Read_At_Address+1,RTC_TIME_NONMilitary@temphours+1
  7851                           
  7852                           ; BSR set to: 1
  7853                           ;RTC.c: 95: if(temphours >= 0)
  7854  01727C  0101               	movlb	1	; () banked
  7855  01727E  BF8A               	btfsc	(RTC_TIME_NONMilitary@temphours+1)& (0+255),7,b
  7856  017280  D016               	goto	l1127
  7857                           
  7858                           ; BSR set to: 1
  7859                           ;RTC.c: 96: {
  7860                           ;RTC.c: 97: if((temphours & 0x40) == 0)
  7861  017282  0101               	movlb	1	; () banked
  7862  017284  BD89               	btfsc	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  7863  017286  D017               	goto	l12490
  7864                           
  7865                           ; BSR set to: 1
  7866                           ;RTC.c: 98: {
  7867                           ;RTC.c: 99: temphours |= 0x40;
  7868  017288  0101               	movlb	1	; () banked
  7869  01728A  8D89               	bsf	RTC_TIME_NONMilitary@temphours& (0+255),6,b
  7870                           
  7871                           ; BSR set to: 1
  7872                           ;RTC.c: 100: Error = I2C_Write_At_Address( 0b1101000, 0x02, temphours );
  7873  01728C  0E02               	movlw	2
  7874  01728E  0101               	movlb	1	; () banked
  7875  017290  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
  7876  017292  C189  F180         	movff	RTC_TIME_NONMilitary@temphours,I2C_Write_At_Address@data
  7877  017296  0E68               	movlw	104
  7878  017298  EC78  F0B4         	call	_I2C_Write_At_Address
  7879  01729C  0101               	movlb	1	; () banked
  7880  01729E  6F86               	movwf	??_RTC_TIME_NONMilitary& (0+255),b
  7881  0172A0  0101               	movlb	1	; () banked
  7882  0172A2  5186               	movf	??_RTC_TIME_NONMilitary& (0+255),w,b
  7883  0172A4  0101               	movlb	1	; () banked
  7884  0172A6  6F87               	movwf	RTC_TIME_NONMilitary@Error& (0+255),b
  7885  0172A8  0101               	movlb	1	; () banked
  7886  0172AA  6B88               	clrf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  7887  0172AC  D004               	goto	l12490
  7888  0172AE                     l1127:
  7889                           
  7890                           ; BSR set to: 1
  7891                           ;RTC.c: 103: else
  7892                           ;RTC.c: 104: {
  7893                           ;RTC.c: 105: Error = -1;
  7894  0172AE  0101               	movlb	1	; () banked
  7895  0172B0  6987               	setf	RTC_TIME_NONMilitary@Error& (0+255),b
  7896  0172B2  0101               	movlb	1	; () banked
  7897  0172B4  6988               	setf	(RTC_TIME_NONMilitary@Error+1)& (0+255),b
  7898  0172B6                     l12490:
  7899                           
  7900                           ; BSR set to: 1
  7901                           ;RTC.c: 106: }
  7902                           ;RTC.c: 107: if(Error < 0 )
  7903  0172B6  0101               	movlb	1	; () banked
  7904  0172B8  5188               	movf	(RTC_TIME_NONMilitary@Error+1)& (0+255),w,b
  7905  0172BA  0A80               	xorlw	128
  7906  0172BC  6EF3               	movwf	prodl,c
  7907  0172BE  0E80               	movlw	128
  7908  0172C0  5CF3               	subwf	prodl,w,c
  7909  0172C2  0E00               	movlw	0
  7910  0172C4  B4D8               	btfsc	status,2,c
  7911  0172C6  5D87               	subwf	RTC_TIME_NONMilitary@Error& (0+255),w,b
  7912  0172C8  B0D8               	btfsc	status,0,c
  7913  0172CA  0012               	return	
  7914                           
  7915                           ; BSR set to: 1
  7916                           ;RTC.c: 108: {
  7917                           ;RTC.c: 109: ResetI2C();
  7918  0172CC  ECC5  F002         	call	_ResetI2C	;wreg free
  7919  0172D0  0012               	return	
  7920  0172D2                     __end_of_RTC_TIME_NONMilitary:
  7921                           	opt stack 0
  7922                           tblptru	equ	0xFF8
  7923                           tblptrh	equ	0xFF7
  7924                           tblptrl	equ	0xFF6
  7925                           tablat	equ	0xFF5
  7926                           prodl	equ	0xFF3
  7927                           postinc0	equ	0xFEE
  7928                           wreg	equ	0xFE8
  7929                           postdec1	equ	0xFE5
  7930                           fsr1l	equ	0xFE1
  7931                           status	equ	0xFD8
  7932                           
  7933 ;; *************** function _RTC_Clock_Enable *****************
  7934 ;; Defined at:
  7935 ;;		line 70 in file "RTC.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;		None
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;  tempSeconds     2   24[BANK1 ] int 
  7940 ;;  Error           1   26[BANK1 ] char 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;		None               void
  7943 ;; Registers used:
  7944 ;;		wreg, status,2, status,0, cstack
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;Total ram usage:        3 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:    9
  7957 ;; This function calls:
  7958 ;;		_I2C_Read_At_Address
  7959 ;;		_I2C_Write_At_Address
  7960 ;;		_ResetI2C
  7961 ;; This function is called by:
  7962 ;;		_RTC_INIT
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           	psect	text4
  7967  017A20                     __ptext4:
  7968                           	opt stack 0
  7969  017A20                     _RTC_Clock_Enable:
  7970                           	opt stack 19
  7971                           
  7972                           ;RTC.c: 72: int tempSeconds =0;
  7973                           
  7974                           ;incstack = 0
  7975  017A20  0E00               	movlw	0
  7976  017A22  0101               	movlb	1	; () banked
  7977  017A24  6F87               	movwf	(RTC_Clock_Enable@tempSeconds+1)& (0+255),b
  7978  017A26  0E00               	movlw	0
  7979  017A28  0101               	movlb	1	; () banked
  7980  017A2A  6F86               	movwf	RTC_Clock_Enable@tempSeconds& (0+255),b
  7981                           
  7982                           ;RTC.c: 73: signed char Error=0;
  7983  017A2C  0E00               	movlw	0
  7984  017A2E  0101               	movlb	1	; () banked
  7985  017A30  6F88               	movwf	RTC_Clock_Enable@Error& (0+255),b
  7986                           
  7987                           ; BSR set to: 1
  7988                           ;RTC.c: 75: tempSeconds = I2C_Read_At_Address(0b1101000, 0x00);
  7989  017A32  0E00               	movlw	0
  7990  017A34  0101               	movlb	1	; () banked
  7991  017A36  6F7F               	movwf	I2C_Read_At_Address@Register& (0+255),b
  7992  017A38  0E68               	movlw	104
  7993  017A3A  ECCB  F0AD         	call	_I2C_Read_At_Address
  7994  017A3E  0101               	movlb	1	; () banked
  7995  017A40  C17F  F186         	movff	?_I2C_Read_At_Address,RTC_Clock_Enable@tempSeconds
  7996  017A44  0101               	movlb	1	; () banked
  7997  017A46  C180  F187         	movff	?_I2C_Read_At_Address+1,RTC_Clock_Enable@tempSeconds+1
  7998                           
  7999                           ; BSR set to: 1
  8000                           ;RTC.c: 76: Error = I2C_Write_At_Address( 0b1101000, 0x00, (tempSeconds & 0x7F) );
  8001  017A4A  0E00               	movlw	0
  8002  017A4C  0101               	movlb	1	; () banked
  8003  017A4E  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
  8004  017A50  0101               	movlb	1	; () banked
  8005  017A52  5186               	movf	RTC_Clock_Enable@tempSeconds& (0+255),w,b
  8006  017A54  0B7F               	andlw	127
  8007  017A56  0101               	movlb	1	; () banked
  8008  017A58  6F80               	movwf	I2C_Write_At_Address@data& (0+255),b
  8009  017A5A  0E68               	movlw	104
  8010  017A5C  EC78  F0B4         	call	_I2C_Write_At_Address
  8011  017A60  0101               	movlb	1	; () banked
  8012  017A62  6F88               	movwf	RTC_Clock_Enable@Error& (0+255),b
  8013                           
  8014                           ; BSR set to: 1
  8015                           ;RTC.c: 78: if(Error < 0 )
  8016  017A64  0101               	movlb	1	; () banked
  8017  017A66  AF88               	btfss	RTC_Clock_Enable@Error& (0+255),7,b
  8018  017A68  0012               	return	
  8019                           
  8020                           ; BSR set to: 1
  8021                           ;RTC.c: 79: {
  8022                           ;RTC.c: 80: ResetI2C();
  8023  017A6A  ECC5  F002         	call	_ResetI2C	;wreg free
  8024  017A6E  0012               	return	
  8025  017A70                     __end_of_RTC_Clock_Enable:
  8026                           	opt stack 0
  8027                           tblptru	equ	0xFF8
  8028                           tblptrh	equ	0xFF7
  8029                           tblptrl	equ	0xFF6
  8030                           tablat	equ	0xFF5
  8031                           prodl	equ	0xFF3
  8032                           postinc0	equ	0xFEE
  8033                           wreg	equ	0xFE8
  8034                           postdec1	equ	0xFE5
  8035                           fsr1l	equ	0xFE1
  8036                           status	equ	0xFD8
  8037                           
  8038 ;; *************** function _I2C_Read_At_Address *****************
  8039 ;; Defined at:
  8040 ;;		line 224 in file "I2C.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  I2Caddress      1    wreg     unsigned char 
  8043 ;;  Register        1   17[BANK1 ] unsigned char 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  I2Caddress      1   19[BANK1 ] unsigned char 
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  2   17[BANK1 ] int 
  8048 ;; Registers used:
  8049 ;;		wreg, status,2, status,0, cstack
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8055 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8059 ;;Total ram usage:        3 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    8
  8062 ;; This function calls:
  8063 ;;		_IdleI2C
  8064 ;;		_WriteI2C
  8065 ;; This function is called by:
  8066 ;;		_RTC_Clock_Enable
  8067 ;;		_RTC_TIME_NONMilitary
  8068 ;;		_RTC_Clock_Disable
  8069 ;;		_READ_RTC_SECONDS
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text5
  8074  015B96                     __ptext5:
  8075                           	opt stack 0
  8076  015B96                     _I2C_Read_At_Address:
  8077                           	opt stack 19
  8078                           
  8079                           ;incstack = 0
  8080                           ;I2C_Read_At_Address@I2Caddress stored from wreg
  8081  015B96  0101               	movlb	1	; () banked
  8082  015B98  6F81               	movwf	I2C_Read_At_Address@I2Caddress& (0+255),b
  8083                           
  8084                           ; BSR set to: 1
  8085                           ;I2C.c: 226: IdleI2C();
  8086  015B9A  EC73  F003         	call	_IdleI2C	;wreg free
  8087                           
  8088                           ;I2C.c: 227: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  8089  015B9E  80C5               	bsf	4037,0,c	;volatile
  8090  015BA0                     l1334:
  8091  015BA0  B0C5               	btfsc	4037,0,c	;volatile
  8092  015BA2  D7FE               	goto	l1334
  8093  015BA4                     l1337:
  8094  015BA4  B0C5               	btfsc	4037,0,c	;volatile
  8095  015BA6  D7FE               	goto	l1337
  8096                           
  8097                           ;I2C.c: 229: if ( PIR2bits.BCLIF )
  8098  015BA8  A6A1               	btfss	4001,3,c	;volatile
  8099  015BAA  D005               	goto	l11168
  8100                           
  8101                           ;I2C.c: 230: {
  8102                           ;I2C.c: 231: return ( -1 );
  8103  015BAC  0101               	movlb	1	; () banked
  8104  015BAE  697F               	setf	?_I2C_Read_At_Address& (0+255),b
  8105  015BB0  0101               	movlb	1	; () banked
  8106  015BB2  6980               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  8107  015BB4  0012               	return	
  8108  015BB6                     l11168:
  8109                           
  8110                           ;I2C.c: 233: else
  8111                           ;I2C.c: 234: {
  8112                           ;I2C.c: 235: if ( WriteI2C( (I2Caddress << 1 ) & 0xFE ) )
  8113  015BB6  0101               	movlb	1	; () banked
  8114  015BB8  5181               	movf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  8115  015BBA  0101               	movlb	1	; () banked
  8116  015BBC  2581               	addwf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  8117  015BBE  0BFE               	andlw	254
  8118  015BC0  EC19  F0B8         	call	_WriteI2C
  8119  015BC4  0900               	iorlw	0
  8120  015BC6  B4D8               	btfsc	status,2,c
  8121  015BC8  D00A               	goto	l1343
  8122                           
  8123                           ;I2C.c: 236: {
  8124                           ;I2C.c: 237: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8125  015BCA  84C5               	bsf	4037,2,c	;volatile
  8126  015BCC                     l1344:
  8127  015BCC  B4C5               	btfsc	4037,2,c	;volatile
  8128  015BCE  D7FE               	goto	l1344
  8129                           
  8130                           ;I2C.c: 238: return ( -3 );
  8131  015BD0  0EFF               	movlw	255
  8132  015BD2  0101               	movlb	1	; () banked
  8133  015BD4  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8134  015BD6  0EFD               	movlw	253
  8135  015BD8  0101               	movlb	1	; () banked
  8136  015BDA  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  8137  015BDC  0012               	return	
  8138  015BDE                     l1343:
  8139                           
  8140                           ;I2C.c: 239: }
  8141                           ;I2C.c: 242: if ( !SSPCON2bits.ACKSTAT )
  8142  015BDE  BCC5               	btfsc	4037,6,c	;volatile
  8143  015BE0  D05C               	goto	l1347
  8144                           
  8145                           ;I2C.c: 243: {
  8146                           ;I2C.c: 244: if ( WriteI2C( Register ) )
  8147  015BE2  0101               	movlb	1	; () banked
  8148  015BE4  517F               	movf	I2C_Read_At_Address@Register& (0+255),w,b
  8149  015BE6  EC19  F0B8         	call	_WriteI2C
  8150  015BEA  0900               	iorlw	0
  8151  015BEC  B4D8               	btfsc	status,2,c
  8152  015BEE  D00A               	goto	l1348
  8153                           
  8154                           ;I2C.c: 245: {
  8155                           ;I2C.c: 246: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8156  015BF0  84C5               	bsf	4037,2,c	;volatile
  8157  015BF2                     l1349:
  8158  015BF2  B4C5               	btfsc	4037,2,c	;volatile
  8159  015BF4  D7FE               	goto	l1349
  8160                           
  8161                           ;I2C.c: 247: return ( -3 );
  8162  015BF6  0EFF               	movlw	255
  8163  015BF8  0101               	movlb	1	; () banked
  8164  015BFA  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8165  015BFC  0EFD               	movlw	253
  8166  015BFE  0101               	movlb	1	; () banked
  8167  015C00  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  8168  015C02  0012               	return	
  8169  015C04                     l1348:
  8170                           
  8171                           ;I2C.c: 248: }
  8172                           ;I2C.c: 251: if ( !SSPCON2bits.ACKSTAT )
  8173  015C04  BCC5               	btfsc	4037,6,c	;volatile
  8174  015C06  D03F               	goto	l1352
  8175                           
  8176                           ;I2C.c: 252: {
  8177                           ;I2C.c: 253: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  8178  015C08  82C5               	bsf	4037,1,c	;volatile
  8179  015C0A                     l1353:
  8180  015C0A  B2C5               	btfsc	4037,1,c	;volatile
  8181  015C0C  D7FE               	goto	l1353
  8182  015C0E                     l1356:
  8183  015C0E  B2C5               	btfsc	4037,1,c	;volatile
  8184  015C10  D7FE               	goto	l1356
  8185                           
  8186                           ;I2C.c: 255: if ( PIR2bits.BCLIF )
  8187  015C12  A6A1               	btfss	4001,3,c	;volatile
  8188  015C14  D005               	goto	l11188
  8189                           
  8190                           ;I2C.c: 256: {
  8191                           ;I2C.c: 257: return ( -1 );
  8192  015C16  0101               	movlb	1	; () banked
  8193  015C18  697F               	setf	?_I2C_Read_At_Address& (0+255),b
  8194  015C1A  0101               	movlb	1	; () banked
  8195  015C1C  6980               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  8196  015C1E  0012               	return	
  8197  015C20                     l11188:
  8198                           
  8199                           ;I2C.c: 258: }
  8200                           ;I2C.c: 260: if ( WriteI2C( (I2Caddress << 1) + 1 ) )
  8201  015C20  80D8               	bsf	status,0,c
  8202  015C22  0101               	movlb	1	; () banked
  8203  015C24  3581               	rlcf	I2C_Read_At_Address@I2Caddress& (0+255),w,b
  8204  015C26  EC19  F0B8         	call	_WriteI2C
  8205  015C2A  0900               	iorlw	0
  8206  015C2C  B4D8               	btfsc	status,2,c
  8207  015C2E  D00A               	goto	l1360
  8208                           
  8209                           ;I2C.c: 261: {
  8210                           ;I2C.c: 262: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8211  015C30  84C5               	bsf	4037,2,c	;volatile
  8212  015C32                     l1361:
  8213  015C32  B4C5               	btfsc	4037,2,c	;volatile
  8214  015C34  D7FE               	goto	l1361
  8215                           
  8216                           ;I2C.c: 263: return ( -3 );
  8217  015C36  0EFF               	movlw	255
  8218  015C38  0101               	movlb	1	; () banked
  8219  015C3A  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8220  015C3C  0EFD               	movlw	253
  8221  015C3E  0101               	movlb	1	; () banked
  8222  015C40  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  8223  015C42  0012               	return	
  8224  015C44                     l1360:
  8225                           
  8226                           ;I2C.c: 264: }
  8227                           ;I2C.c: 267: if ( !SSPCON2bits.ACKSTAT )
  8228  015C44  BCC5               	btfsc	4037,6,c	;volatile
  8229  015C46  D015               	goto	l1364
  8230                           
  8231                           ;I2C.c: 268: {
  8232                           ;I2C.c: 269: SSPCON2bits.RCEN = 1;
  8233  015C48  86C5               	bsf	4037,3,c	;volatile
  8234  015C4A                     l1365:
  8235  015C4A  B6C5               	btfsc	4037,3,c	;volatile
  8236  015C4C  D7FE               	goto	l1365
  8237                           
  8238                           ;I2C.c: 271: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  8239  015C4E  8AC5               	bsf	4037,5,c	;volatile
  8240  015C50  88C5               	bsf	4037,4,c	;volatile
  8241  015C52                     l1368:
  8242  015C52  B8C5               	btfsc	4037,4,c	;volatile
  8243  015C54  D7FE               	goto	l1368
  8244  015C56                     l1371:
  8245  015C56  B8C5               	btfsc	4037,4,c	;volatile
  8246  015C58  D7FE               	goto	l1371
  8247                           
  8248                           ;I2C.c: 273: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8249  015C5A  84C5               	bsf	4037,2,c	;volatile
  8250  015C5C                     l1374:
  8251  015C5C  B4C5               	btfsc	4037,2,c	;volatile
  8252  015C5E  D7FE               	goto	l1374
  8253  015C60                     l1377:
  8254  015C60  B4C5               	btfsc	4037,2,c	;volatile
  8255  015C62  D7FE               	goto	l1377
  8256                           
  8257                           ;I2C.c: 275: if ( PIR2bits.BCLIF )
  8258  015C64  A6A1               	btfss	4001,3,c	;volatile
  8259  015C66  D023               	goto	l1342
  8260                           
  8261                           ;I2C.c: 276: {
  8262                           ;I2C.c: 277: return ( -1 );
  8263  015C68  0101               	movlb	1	; () banked
  8264  015C6A  697F               	setf	?_I2C_Read_At_Address& (0+255),b
  8265  015C6C  0101               	movlb	1	; () banked
  8266  015C6E  6980               	setf	(?_I2C_Read_At_Address+1)& (0+255),b
  8267  015C70  0012               	return	
  8268  015C72                     l1364:
  8269                           
  8270                           ;I2C.c: 280: else
  8271                           ;I2C.c: 281: {
  8272                           ;I2C.c: 282: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8273  015C72  84C5               	bsf	4037,2,c	;volatile
  8274  015C74                     l1382:
  8275  015C74  B4C5               	btfsc	4037,2,c	;volatile
  8276  015C76  D7FE               	goto	l1382
  8277                           
  8278                           ;I2C.c: 283: return ( -2 );
  8279  015C78  0EFF               	movlw	255
  8280  015C7A  0101               	movlb	1	; () banked
  8281  015C7C  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8282  015C7E  0EFE               	movlw	254
  8283  015C80  0101               	movlb	1	; () banked
  8284  015C82  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  8285  015C84  0012               	return	
  8286  015C86                     l1352:
  8287                           
  8288                           ;I2C.c: 287: else
  8289                           ;I2C.c: 288: {
  8290                           ;I2C.c: 289: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8291  015C86  84C5               	bsf	4037,2,c	;volatile
  8292  015C88                     l1386:
  8293  015C88  B4C5               	btfsc	4037,2,c	;volatile
  8294  015C8A  D7FE               	goto	l1386
  8295                           
  8296                           ;I2C.c: 290: return ( -2 );
  8297  015C8C  0EFF               	movlw	255
  8298  015C8E  0101               	movlb	1	; () banked
  8299  015C90  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8300  015C92  0EFE               	movlw	254
  8301  015C94  0101               	movlb	1	; () banked
  8302  015C96  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  8303  015C98  0012               	return	
  8304  015C9A                     l1347:
  8305                           
  8306                           ;I2C.c: 293: else
  8307                           ;I2C.c: 294: {
  8308                           ;I2C.c: 295: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  8309  015C9A  84C5               	bsf	4037,2,c	;volatile
  8310  015C9C                     l1390:
  8311  015C9C  B4C5               	btfsc	4037,2,c	;volatile
  8312  015C9E  D7FE               	goto	l1390
  8313                           
  8314                           ;I2C.c: 296: return ( -2 );
  8315  015CA0  0EFF               	movlw	255
  8316  015CA2  0101               	movlb	1	; () banked
  8317  015CA4  6F80               	movwf	(?_I2C_Read_At_Address+1)& (0+255),b
  8318  015CA6  0EFE               	movlw	254
  8319  015CA8  0101               	movlb	1	; () banked
  8320  015CAA  6F7F               	movwf	?_I2C_Read_At_Address& (0+255),b
  8321  015CAC  0012               	return	
  8322  015CAE                     l1342:
  8323                           
  8324                           ;I2C.c: 297: }
  8325                           ;I2C.c: 298: }
  8326                           ;I2C.c: 299: return ( (unsigned int) SSPBUF );
  8327  015CAE  0101               	movlb	1	; () banked
  8328  015CB0  CFC9 F17F          	movff	4041,?_I2C_Read_At_Address	;volatile
  8329  015CB4  0101               	movlb	1	; () banked
  8330  015CB6  6B80               	clrf	(?_I2C_Read_At_Address+1)& (0+255),b
  8331                           
  8332                           ; BSR set to: 1
  8333  015CB8  0012               	return	
  8334  015CBA                     __end_of_I2C_Read_At_Address:
  8335                           	opt stack 0
  8336                           tblptru	equ	0xFF8
  8337                           tblptrh	equ	0xFF7
  8338                           tblptrl	equ	0xFF6
  8339                           tablat	equ	0xFF5
  8340                           prodl	equ	0xFF3
  8341                           postinc0	equ	0xFEE
  8342                           wreg	equ	0xFE8
  8343                           postdec1	equ	0xFE5
  8344                           fsr1l	equ	0xFE1
  8345                           status	equ	0xFD8
  8346                           
  8347 ;; *************** function _PWM_init *****************
  8348 ;; Defined at:
  8349 ;;		line 54 in file "PWM.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;		None
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;		None
  8354 ;; Return value:  Size  Location     Type
  8355 ;;		None               void
  8356 ;; Registers used:
  8357 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;Total ram usage:        0 bytes
  8368 ;; Hardware stack levels used:    1
  8369 ;; Hardware stack levels required when called:    9
  8370 ;; This function calls:
  8371 ;;		_SetDuty
  8372 ;;		_SetFreq
  8373 ;; This function is called by:
  8374 ;;		_main
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text6
  8379  0005B4                     __ptext6:
  8380                           	opt stack 0
  8381  0005B4                     _PWM_init:
  8382                           	opt stack 20
  8383                           
  8384                           ;PWM.c: 57: SetFreq(60);
  8385                           
  8386                           ; BSR set to: 1
  8387                           ;incstack = 0
  8388  0005B4  0E00               	movlw	0
  8389  0005B6  0101               	movlb	1	; () banked
  8390  0005B8  6F91               	movwf	(SetFreq@freq+1)& (0+255),b
  8391  0005BA  0E3C               	movlw	60
  8392  0005BC  0101               	movlb	1	; () banked
  8393  0005BE  6F90               	movwf	SetFreq@freq& (0+255),b
  8394  0005C0  EC19  F0BB         	call	_SetFreq	;wreg free
  8395                           
  8396                           ;PWM.c: 58: SetDuty(0);
  8397  0005C4  0E00               	movlw	0
  8398  0005C6  ECF7  F0B2         	call	_SetDuty
  8399                           
  8400                           ;PWM.c: 59: T2CON &= ~0x03;
  8401  0005CA  0EFC               	movlw	252
  8402  0005CC  16CA               	andwf	4042,f,c	;volatile
  8403                           
  8404                           ;PWM.c: 60: if(16 == 1)
  8405  0005CE  D001               	goto	l12660
  8406                           
  8407                           ;PWM.c: 61: {
  8408                           ;PWM.c: 62: __nop();
  8409  0005D0  F000               	nop	
  8410  0005D2                     l12660:
  8411                           
  8412                           ;PWM.c: 68: else
  8413                           ;PWM.c: 69: {
  8414                           ;PWM.c: 70: T2CON |= 0x10;
  8415  0005D2  88CA               	bsf	4042,4,c	;volatile
  8416                           
  8417                           ;PWM.c: 71: }
  8418                           ;PWM.c: 72: T2CON |= 0b00000100;
  8419  0005D4  84CA               	bsf	4042,2,c	;volatile
  8420                           
  8421                           ;PWM.c: 73: CCP1CON |= 0b00001100;
  8422  0005D6  0E0C               	movlw	12
  8423  0005D8  12BD               	iorwf	4029,f,c	;volatile
  8424  0005DA  0012               	return	
  8425  0005DC                     __end_of_PWM_init:
  8426                           	opt stack 0
  8427                           tblptru	equ	0xFF8
  8428                           tblptrh	equ	0xFF7
  8429                           tblptrl	equ	0xFF6
  8430                           tablat	equ	0xFF5
  8431                           prodl	equ	0xFF3
  8432                           postinc0	equ	0xFEE
  8433                           wreg	equ	0xFE8
  8434                           postdec1	equ	0xFE5
  8435                           fsr1l	equ	0xFE1
  8436                           status	equ	0xFD8
  8437                           
  8438 ;; *************** function _SetFreq *****************
  8439 ;; Defined at:
  8440 ;;		line 144 in file "PWM.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;  freq            2   34[BANK1 ] unsigned int 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  temp            1   40[BANK1 ] unsigned char 
  8445 ;; Return value:  Size  Location     Type
  8446 ;;		None               void
  8447 ;; Registers used:
  8448 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8454 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8457 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8458 ;;Total ram usage:        7 bytes
  8459 ;; Hardware stack levels used:    1
  8460 ;; Hardware stack levels required when called:    7
  8461 ;; This function calls:
  8462 ;;		___aldiv
  8463 ;;		___wmul
  8464 ;; This function is called by:
  8465 ;;		_PWM_init
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text7
  8470  017632                     __ptext7:
  8471                           	opt stack 0
  8472  017632                     _SetFreq:
  8473                           	opt stack 21
  8474                           
  8475                           ;PWM.c: 147: unsigned char temp =0;
  8476                           
  8477                           ;incstack = 0
  8478  017632  0E00               	movlw	0
  8479  017634  0101               	movlb	1	; () banked
  8480  017636  6F96               	movwf	SetFreq@temp& (0+255),b
  8481                           
  8482                           ; BSR set to: 1
  8483                           ;PWM.c: 148: temp = (unsigned char)(((40960000L >> 2)/(freq*1000))-1);
  8484  017638  0E00               	movlw	0
  8485  01763A  0101               	movlb	1	; () banked
  8486  01763C  6F82               	movwf	___aldiv@dividend& (0+255),b
  8487  01763E  0E40               	movlw	64
  8488  017640  0101               	movlb	1	; () banked
  8489  017642  6F83               	movwf	(___aldiv@dividend+1)& (0+255),b
  8490  017644  0E9C               	movlw	156
  8491  017646  0101               	movlb	1	; () banked
  8492  017648  6F84               	movwf	(___aldiv@dividend+2)& (0+255),b
  8493  01764A  0E00               	movlw	0
  8494  01764C  0101               	movlb	1	; () banked
  8495  01764E  6F85               	movwf	(___aldiv@dividend+3)& (0+255),b
  8496  017650  C190  F17C         	movff	SetFreq@freq,___wmul@multiplier
  8497  017654  C191  F17D         	movff	SetFreq@freq+1,___wmul@multiplier+1
  8498  017658  0E03               	movlw	3
  8499  01765A  0101               	movlb	1	; () banked
  8500  01765C  6F7F               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8501  01765E  0EE8               	movlw	232
  8502  017660  0101               	movlb	1	; () banked
  8503  017662  6F7E               	movwf	___wmul@multiplicand& (0+255),b
  8504  017664  ECD3  F001         	call	___wmul	;wreg free
  8505  017668  0101               	movlb	1	; () banked
  8506  01766A  C17C  F186         	movff	?___wmul,___aldiv@divisor
  8507  01766E  0101               	movlb	1	; () banked
  8508  017670  C17D  F187         	movff	?___wmul+1,___aldiv@divisor+1
  8509  017674  0101               	movlb	1	; () banked
  8510  017676  6B88               	clrf	(___aldiv@divisor+2)& (0+255),b
  8511  017678  0101               	movlb	1	; () banked
  8512  01767A  6B89               	clrf	(___aldiv@divisor+3)& (0+255),b
  8513  01767C  EC8E  F0A9         	call	___aldiv	;wreg free
  8514  017680  C182  F192         	movff	?___aldiv,??_SetFreq
  8515  017684  C183  F193         	movff	?___aldiv+1,??_SetFreq+1
  8516  017688  C184  F194         	movff	?___aldiv+2,??_SetFreq+2
  8517  01768C  C185  F195         	movff	?___aldiv+3,??_SetFreq+3
  8518  017690  0101               	movlb	1	; () banked
  8519  017692  0592               	decf	??_SetFreq& (0+255),w,b
  8520  017694  0101               	movlb	1	; () banked
  8521  017696  6F96               	movwf	SetFreq@temp& (0+255),b
  8522                           
  8523                           ; BSR set to: 1
  8524                           ;PWM.c: 150: PR2 = temp;
  8525  017698  C196  FFCB         	movff	SetFreq@temp,4043	;volatile
  8526                           
  8527                           ; BSR set to: 1
  8528  01769C  0012               	return	
  8529  01769E                     __end_of_SetFreq:
  8530                           	opt stack 0
  8531                           tblptru	equ	0xFF8
  8532                           tblptrh	equ	0xFF7
  8533                           tblptrl	equ	0xFF6
  8534                           tablat	equ	0xFF5
  8535                           prodl	equ	0xFF3
  8536                           postinc0	equ	0xFEE
  8537                           wreg	equ	0xFE8
  8538                           postdec1	equ	0xFE5
  8539                           fsr1l	equ	0xFE1
  8540                           status	equ	0xFD8
  8541                           
  8542 ;; *************** function ___aldiv *****************
  8543 ;; Defined at:
  8544 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  dividend        4   20[BANK1 ] long 
  8547 ;;  divisor         4   24[BANK1 ] long 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;  quotient        4   30[BANK1 ] long 
  8550 ;;  sign            1   29[BANK1 ] unsigned char 
  8551 ;;  counter         1   28[BANK1 ] unsigned char 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  4   20[BANK1 ] long 
  8554 ;; Registers used:
  8555 ;;		wreg, status,2, status,0
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8561 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  8562 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;Total ram usage:       14 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    6
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_SetFreq
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           	psect	text8
  8576  01531C                     __ptext8:
  8577                           	opt stack 0
  8578  01531C                     ___aldiv:
  8579                           	opt stack 21
  8580                           
  8581                           ; BSR set to: 1
  8582                           ;incstack = 0
  8583  01531C  0E00               	movlw	0
  8584  01531E  0101               	movlb	1	; () banked
  8585  015320  6F8B               	movwf	___aldiv@sign& (0+255),b
  8586                           
  8587                           ; BSR set to: 1
  8588  015322  0101               	movlb	1	; () banked
  8589  015324  5189               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8590  015326  0A80               	xorlw	128
  8591  015328  0F80               	addlw	128
  8592  01532A  E10B               	bnz	u8445
  8593  01532C  0E00               	movlw	0
  8594  01532E  0101               	movlb	1	; () banked
  8595  015330  5D88               	subwf	(___aldiv@divisor+2)& (0+255),w,b
  8596  015332  E107               	bnz	u8445
  8597  015334  0E00               	movlw	0
  8598  015336  0101               	movlb	1	; () banked
  8599  015338  5D87               	subwf	(___aldiv@divisor+1)& (0+255),w,b
  8600  01533A  E103               	bnz	u8445
  8601  01533C  0E00               	movlw	0
  8602  01533E  0101               	movlb	1	; () banked
  8603  015340  5D86               	subwf	___aldiv@divisor& (0+255),w,b
  8604  015342                     u8445:
  8605  015342  B0D8               	btfsc	status,0,c
  8606  015344  D012               	goto	l7442
  8607                           
  8608                           ; BSR set to: 1
  8609  015346  0101               	movlb	1	; () banked
  8610  015348  1F89               	comf	(___aldiv@divisor+3)& (0+255),f,b
  8611  01534A  0101               	movlb	1	; () banked
  8612  01534C  1F88               	comf	(___aldiv@divisor+2)& (0+255),f,b
  8613  01534E  0101               	movlb	1	; () banked
  8614  015350  1F87               	comf	(___aldiv@divisor+1)& (0+255),f,b
  8615  015352  0101               	movlb	1	; () banked
  8616  015354  6D86               	negf	___aldiv@divisor& (0+255),b
  8617  015356  0E00               	movlw	0
  8618  015358  0101               	movlb	1	; () banked
  8619  01535A  2387               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  8620  01535C  0101               	movlb	1	; () banked
  8621  01535E  2388               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  8622  015360  0101               	movlb	1	; () banked
  8623  015362  2389               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  8624                           
  8625                           ; BSR set to: 1
  8626  015364  0E01               	movlw	1
  8627  015366  0101               	movlb	1	; () banked
  8628  015368  6F8B               	movwf	___aldiv@sign& (0+255),b
  8629  01536A                     l7442:
  8630                           
  8631                           ; BSR set to: 1
  8632  01536A  0101               	movlb	1	; () banked
  8633  01536C  5185               	movf	(___aldiv@dividend+3)& (0+255),w,b
  8634  01536E  0A80               	xorlw	128
  8635  015370  0F80               	addlw	128
  8636  015372  E10B               	bnz	u8455
  8637  015374  0E00               	movlw	0
  8638  015376  0101               	movlb	1	; () banked
  8639  015378  5D84               	subwf	(___aldiv@dividend+2)& (0+255),w,b
  8640  01537A  E107               	bnz	u8455
  8641  01537C  0E00               	movlw	0
  8642  01537E  0101               	movlb	1	; () banked
  8643  015380  5D83               	subwf	(___aldiv@dividend+1)& (0+255),w,b
  8644  015382  E103               	bnz	u8455
  8645  015384  0E00               	movlw	0
  8646  015386  0101               	movlb	1	; () banked
  8647  015388  5D82               	subwf	___aldiv@dividend& (0+255),w,b
  8648  01538A                     u8455:
  8649  01538A  B0D8               	btfsc	status,0,c
  8650  01538C  D012               	goto	l7448
  8651                           
  8652                           ; BSR set to: 1
  8653  01538E  0101               	movlb	1	; () banked
  8654  015390  1F85               	comf	(___aldiv@dividend+3)& (0+255),f,b
  8655  015392  0101               	movlb	1	; () banked
  8656  015394  1F84               	comf	(___aldiv@dividend+2)& (0+255),f,b
  8657  015396  0101               	movlb	1	; () banked
  8658  015398  1F83               	comf	(___aldiv@dividend+1)& (0+255),f,b
  8659  01539A  0101               	movlb	1	; () banked
  8660  01539C  6D82               	negf	___aldiv@dividend& (0+255),b
  8661  01539E  0E00               	movlw	0
  8662  0153A0  0101               	movlb	1	; () banked
  8663  0153A2  2383               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  8664  0153A4  0101               	movlb	1	; () banked
  8665  0153A6  2384               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  8666  0153A8  0101               	movlb	1	; () banked
  8667  0153AA  2385               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  8668                           
  8669                           ; BSR set to: 1
  8670  0153AC  0E01               	movlw	1
  8671  0153AE  0101               	movlb	1	; () banked
  8672  0153B0  1B8B               	xorwf	___aldiv@sign& (0+255),f,b
  8673  0153B2                     l7448:
  8674                           
  8675                           ; BSR set to: 1
  8676  0153B2  0E00               	movlw	0
  8677  0153B4  0101               	movlb	1	; () banked
  8678  0153B6  6F8C               	movwf	___aldiv@quotient& (0+255),b
  8679  0153B8  0E00               	movlw	0
  8680  0153BA  0101               	movlb	1	; () banked
  8681  0153BC  6F8D               	movwf	(___aldiv@quotient+1)& (0+255),b
  8682  0153BE  0E00               	movlw	0
  8683  0153C0  0101               	movlb	1	; () banked
  8684  0153C2  6F8E               	movwf	(___aldiv@quotient+2)& (0+255),b
  8685  0153C4  0E00               	movlw	0
  8686  0153C6  0101               	movlb	1	; () banked
  8687  0153C8  6F8F               	movwf	(___aldiv@quotient+3)& (0+255),b
  8688                           
  8689                           ; BSR set to: 1
  8690  0153CA  0101               	movlb	1	; () banked
  8691  0153CC  5189               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8692  0153CE  1186               	iorwf	___aldiv@divisor& (0+255),w,b
  8693  0153D0  1187               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  8694  0153D2  1188               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  8695  0153D4  B4D8               	btfsc	status,2,c
  8696  0153D6  D04E               	goto	l7470
  8697                           
  8698                           ; BSR set to: 1
  8699  0153D8  0E01               	movlw	1
  8700  0153DA  0101               	movlb	1	; () banked
  8701  0153DC  6F8A               	movwf	___aldiv@counter& (0+255),b
  8702  0153DE  D00C               	goto	l7456
  8703  0153E0                     l7454:
  8704                           
  8705                           ; BSR set to: 1
  8706  0153E0  0101               	movlb	1	; () banked
  8707  0153E2  90D8               	bcf	status,0,c
  8708  0153E4  0101               	movlb	1	; () banked
  8709  0153E6  3786               	rlcf	___aldiv@divisor& (0+255),f,b
  8710  0153E8  0101               	movlb	1	; () banked
  8711  0153EA  3787               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  8712  0153EC  0101               	movlb	1	; () banked
  8713  0153EE  3788               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  8714  0153F0  0101               	movlb	1	; () banked
  8715  0153F2  3789               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  8716  0153F4  0101               	movlb	1	; () banked
  8717  0153F6  2B8A               	incf	___aldiv@counter& (0+255),f,b
  8718  0153F8                     l7456:
  8719                           
  8720                           ; BSR set to: 1
  8721  0153F8  0101               	movlb	1	; () banked
  8722  0153FA  AF89               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  8723  0153FC  D7F1               	goto	l7454
  8724  0153FE                     l7458:
  8725                           
  8726                           ; BSR set to: 1
  8727  0153FE  0101               	movlb	1	; () banked
  8728  015400  90D8               	bcf	status,0,c
  8729  015402  0101               	movlb	1	; () banked
  8730  015404  378C               	rlcf	___aldiv@quotient& (0+255),f,b
  8731  015406  0101               	movlb	1	; () banked
  8732  015408  378D               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  8733  01540A  0101               	movlb	1	; () banked
  8734  01540C  378E               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  8735  01540E  0101               	movlb	1	; () banked
  8736  015410  378F               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  8737                           
  8738                           ; BSR set to: 1
  8739  015412  0101               	movlb	1	; () banked
  8740  015414  5186               	movf	___aldiv@divisor& (0+255),w,b
  8741  015416  0101               	movlb	1	; () banked
  8742  015418  5D82               	subwf	___aldiv@dividend& (0+255),w,b
  8743  01541A  0101               	movlb	1	; () banked
  8744  01541C  5187               	movf	(___aldiv@divisor+1)& (0+255),w,b
  8745  01541E  0101               	movlb	1	; () banked
  8746  015420  5983               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  8747  015422  0101               	movlb	1	; () banked
  8748  015424  5188               	movf	(___aldiv@divisor+2)& (0+255),w,b
  8749  015426  0101               	movlb	1	; () banked
  8750  015428  5984               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  8751  01542A  0101               	movlb	1	; () banked
  8752  01542C  5189               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8753  01542E  0101               	movlb	1	; () banked
  8754  015430  5985               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  8755  015432  A0D8               	btfss	status,0,c
  8756  015434  D012               	goto	l7466
  8757                           
  8758                           ; BSR set to: 1
  8759  015436  0101               	movlb	1	; () banked
  8760  015438  5186               	movf	___aldiv@divisor& (0+255),w,b
  8761  01543A  0101               	movlb	1	; () banked
  8762  01543C  5F82               	subwf	___aldiv@dividend& (0+255),f,b
  8763  01543E  0101               	movlb	1	; () banked
  8764  015440  5187               	movf	(___aldiv@divisor+1)& (0+255),w,b
  8765  015442  0101               	movlb	1	; () banked
  8766  015444  5B83               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  8767  015446  0101               	movlb	1	; () banked
  8768  015448  5188               	movf	(___aldiv@divisor+2)& (0+255),w,b
  8769  01544A  0101               	movlb	1	; () banked
  8770  01544C  5B84               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  8771  01544E  0101               	movlb	1	; () banked
  8772  015450  5189               	movf	(___aldiv@divisor+3)& (0+255),w,b
  8773  015452  0101               	movlb	1	; () banked
  8774  015454  5B85               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  8775                           
  8776                           ; BSR set to: 1
  8777  015456  0101               	movlb	1	; () banked
  8778  015458  818C               	bsf	___aldiv@quotient& (0+255),0,b
  8779  01545A                     l7466:
  8780                           
  8781                           ; BSR set to: 1
  8782  01545A  0101               	movlb	1	; () banked
  8783  01545C  90D8               	bcf	status,0,c
  8784  01545E  0101               	movlb	1	; () banked
  8785  015460  3389               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  8786  015462  0101               	movlb	1	; () banked
  8787  015464  3388               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  8788  015466  0101               	movlb	1	; () banked
  8789  015468  3387               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  8790  01546A  0101               	movlb	1	; () banked
  8791  01546C  3386               	rrcf	___aldiv@divisor& (0+255),f,b
  8792                           
  8793                           ; BSR set to: 1
  8794  01546E  0101               	movlb	1	; () banked
  8795  015470  2F8A               	decfsz	___aldiv@counter& (0+255),f,b
  8796  015472  D7C5               	goto	l7458
  8797  015474                     l7470:
  8798                           
  8799                           ; BSR set to: 1
  8800  015474  0101               	movlb	1	; () banked
  8801  015476  518B               	movf	___aldiv@sign& (0+255),w,b
  8802  015478  B4D8               	btfsc	status,2,c
  8803  01547A  D00F               	goto	l7474
  8804                           
  8805                           ; BSR set to: 1
  8806  01547C  0101               	movlb	1	; () banked
  8807  01547E  1F8F               	comf	(___aldiv@quotient+3)& (0+255),f,b
  8808  015480  0101               	movlb	1	; () banked
  8809  015482  1F8E               	comf	(___aldiv@quotient+2)& (0+255),f,b
  8810  015484  0101               	movlb	1	; () banked
  8811  015486  1F8D               	comf	(___aldiv@quotient+1)& (0+255),f,b
  8812  015488  0101               	movlb	1	; () banked
  8813  01548A  6D8C               	negf	___aldiv@quotient& (0+255),b
  8814  01548C  0E00               	movlw	0
  8815  01548E  0101               	movlb	1	; () banked
  8816  015490  238D               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  8817  015492  0101               	movlb	1	; () banked
  8818  015494  238E               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  8819  015496  0101               	movlb	1	; () banked
  8820  015498  238F               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  8821  01549A                     l7474:
  8822                           
  8823                           ; BSR set to: 1
  8824  01549A  C18C  F182         	movff	___aldiv@quotient,?___aldiv
  8825  01549E  C18D  F183         	movff	___aldiv@quotient+1,?___aldiv+1
  8826  0154A2  C18E  F184         	movff	___aldiv@quotient+2,?___aldiv+2
  8827  0154A6  C18F  F185         	movff	___aldiv@quotient+3,?___aldiv+3
  8828  0154AA  0012               	return	
  8829  0154AC                     __end_of___aldiv:
  8830                           	opt stack 0
  8831                           tblptru	equ	0xFF8
  8832                           tblptrh	equ	0xFF7
  8833                           tblptrl	equ	0xFF6
  8834                           tablat	equ	0xFF5
  8835                           prodl	equ	0xFF3
  8836                           postinc0	equ	0xFEE
  8837                           wreg	equ	0xFE8
  8838                           postdec1	equ	0xFE5
  8839                           fsr1l	equ	0xFE1
  8840                           status	equ	0xFD8
  8841                           
  8842 ;; *************** function _LCDScreenUpdate *****************
  8843 ;; Defined at:
  8844 ;;		line 277 in file "LCD.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;		None
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;		None
  8849 ;; Return value:  Size  Location     Type
  8850 ;;		None               void
  8851 ;; Registers used:
  8852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8860 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8861 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8862 ;;Total ram usage:        4 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:   10
  8865 ;; This function calls:
  8866 ;;		_ClearLCD
  8867 ;;		_LCDPrintChar
  8868 ;;		_LCDPrintString
  8869 ;;		_SetLCDcursor
  8870 ;;		_cleanBuffer
  8871 ;;		_delayUS
  8872 ;; This function is called by:
  8873 ;;		_main
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           	psect	text9
  8878  013684                     __ptext9:
  8879                           	opt stack 0
  8880  013684                     _LCDScreenUpdate:
  8881                           	opt stack 19
  8882                           
  8883                           ;LCD.c: 280: delayUS(10);
  8884                           
  8885                           ; BSR set to: 1
  8886                           ;incstack = 0
  8887  013684  0E0A               	movlw	10
  8888  013686  0101               	movlb	1	; () banked
  8889  013688  6F7C               	movwf	delayUS@US& (0+255),b
  8890  01368A  0E00               	movlw	0
  8891  01368C  0101               	movlb	1	; () banked
  8892  01368E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  8893  013690  0E00               	movlw	0
  8894  013692  0101               	movlb	1	; () banked
  8895  013694  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  8896  013696  0E00               	movlw	0
  8897  013698  0101               	movlb	1	; () banked
  8898  01369A  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  8899  01369C  ECA4  F0BA         	call	_delayUS	;wreg free
  8900                           
  8901                           ;LCD.c: 281: if(LCDclearCount<(25000-1))
  8902  0136A0  0EA7               	movlw	167
  8903  0136A2  0101               	movlb	1	; () banked
  8904  0136A4  6F8E               	movwf	??_LCDScreenUpdate& (0+255),b
  8905  0136A6  0E61               	movlw	97
  8906  0136A8  6F8F               	movwf	(??_LCDScreenUpdate+1)& (0+255),b
  8907  0136AA  0E00               	movlw	0
  8908  0136AC  6F90               	movwf	(??_LCDScreenUpdate+2)& (0+255),b
  8909  0136AE  0E00               	movlw	0
  8910  0136B0  6F91               	movwf	(??_LCDScreenUpdate+3)& (0+255),b
  8911  0136B2  0101               	movlb	1	; () banked
  8912  0136B4  518E               	movf	??_LCDScreenUpdate& (0+255),w,b
  8913  0136B6  0101               	movlb	1	; () banked
  8914  0136B8  5DD9               	subwf	_LCDclearCount& (0+255),w,b
  8915  0136BA  0101               	movlb	1	; () banked
  8916  0136BC  518F               	movf	(??_LCDScreenUpdate+1)& (0+255),w,b
  8917  0136BE  0101               	movlb	1	; () banked
  8918  0136C0  59DA               	subwfb	(_LCDclearCount+1)& (0+255),w,b
  8919  0136C2  0101               	movlb	1	; () banked
  8920  0136C4  5190               	movf	(??_LCDScreenUpdate+2)& (0+255),w,b
  8921  0136C6  0101               	movlb	1	; () banked
  8922  0136C8  59DB               	subwfb	(_LCDclearCount+2)& (0+255),w,b
  8923  0136CA  0101               	movlb	1	; () banked
  8924  0136CC  5191               	movf	(??_LCDScreenUpdate+3)& (0+255),w,b
  8925  0136CE  0101               	movlb	1	; () banked
  8926  0136D0  59DC               	subwfb	(_LCDclearCount+3)& (0+255),w,b
  8927  0136D2  B0D8               	btfsc	status,0,c
  8928  0136D4  D00E               	goto	l12722
  8929                           
  8930                           ; BSR set to: 1
  8931                           ;LCD.c: 282: {
  8932                           ;LCD.c: 283: LCDclearCount++;
  8933  0136D6  0E01               	movlw	1
  8934  0136D8  0101               	movlb	1	; () banked
  8935  0136DA  27D9               	addwf	_LCDclearCount& (0+255),f,b
  8936  0136DC  0E00               	movlw	0
  8937  0136DE  0101               	movlb	1	; () banked
  8938  0136E0  23DA               	addwfc	(_LCDclearCount+1)& (0+255),f,b
  8939  0136E2  0101               	movlb	1	; () banked
  8940  0136E4  23DB               	addwfc	(_LCDclearCount+2)& (0+255),f,b
  8941  0136E6  0101               	movlb	1	; () banked
  8942  0136E8  23DC               	addwfc	(_LCDclearCount+3)& (0+255),f,b
  8943                           
  8944                           ; BSR set to: 1
  8945                           ;LCD.c: 284: LCDwait = 1;
  8946  0136EA  0E01               	movlw	1
  8947  0136EC  0101               	movlb	1	; () banked
  8948  0136EE  6F09               	movwf	_LCDwait& (0+255),b
  8949                           
  8950                           ;LCD.c: 285: }
  8951  0136F0  0012               	return	
  8952  0136F2                     l12722:
  8953                           
  8954                           ; BSR set to: 1
  8955                           ;LCD.c: 286: else if(LCDclearCount == (25000-1))
  8956  0136F2  0101               	movlb	1	; () banked
  8957  0136F4  51DA               	movf	(_LCDclearCount+1)& (0+255),w,b
  8958  0136F6  0A61               	xorlw	97
  8959  0136F8  0EA7               	movlw	167
  8960  0136FA  B4D8               	btfsc	status,2,c
  8961  0136FC  19D9               	xorwf	_LCDclearCount& (0+255),w,b
  8962  0136FE  11DB               	iorwf	(_LCDclearCount+2)& (0+255),w,b
  8963  013700  11DC               	iorwf	(_LCDclearCount+3)& (0+255),w,b
  8964  013702  A4D8               	btfss	status,2,c
  8965  013704  0012               	return	
  8966                           
  8967                           ; BSR set to: 1
  8968                           ;LCD.c: 287: {
  8969                           ;LCD.c: 288: LCDclearCount++;
  8970  013706  0E01               	movlw	1
  8971  013708  0101               	movlb	1	; () banked
  8972  01370A  27D9               	addwf	_LCDclearCount& (0+255),f,b
  8973  01370C  0E00               	movlw	0
  8974  01370E  0101               	movlb	1	; () banked
  8975  013710  23DA               	addwfc	(_LCDclearCount+1)& (0+255),f,b
  8976  013712  0101               	movlb	1	; () banked
  8977  013714  23DB               	addwfc	(_LCDclearCount+2)& (0+255),f,b
  8978  013716  0101               	movlb	1	; () banked
  8979  013718  23DC               	addwfc	(_LCDclearCount+3)& (0+255),f,b
  8980                           
  8981                           ; BSR set to: 1
  8982                           ;LCD.c: 289: LCDwait = 0;
  8983  01371A  0E00               	movlw	0
  8984  01371C  0101               	movlb	1	; () banked
  8985  01371E  6F09               	movwf	_LCDwait& (0+255),b
  8986                           
  8987                           ; BSR set to: 1
  8988                           ;LCD.c: 290: if(ScrollFIFOCount == 0)
  8989  013720  0101               	movlb	1	; () banked
  8990  013722  670C               	tstfsz	_ScrollFIFOCount& (0+255),b
  8991  013724  D00F               	goto	l12738
  8992                           
  8993                           ; BSR set to: 1
  8994                           ;LCD.c: 291: {
  8995                           ;LCD.c: 292: ScrollDisplayPosition = 0;
  8996  013726  0E00               	movlw	0
  8997  013728  0101               	movlb	1	; () banked
  8998  01372A  6F0B               	movwf	_ScrollDisplayPosition& (0+255),b
  8999                           
  9000                           ; BSR set to: 1
  9001                           ;LCD.c: 293: ClearLCD();
  9002  01372C  EC31  F003         	call	_ClearLCD	;wreg free
  9003                           
  9004                           ;LCD.c: 294: SetLCDcursor(0, 0);
  9005  013730  0E00               	movlw	0
  9006  013732  0101               	movlb	1	; () banked
  9007  013734  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9008  013736  0E00               	movlw	0
  9009  013738  ECEE  F001         	call	_SetLCDcursor
  9010                           
  9011                           ;LCD.c: 295: LCDPrintChar('>');
  9012  01373C  0E3E               	movlw	62
  9013  01373E  EC5F  F003         	call	_LCDPrintChar
  9014                           
  9015                           ;LCD.c: 296: }
  9016  013742  0012               	return	
  9017  013744                     l12738:
  9018                           
  9019                           ;LCD.c: 297: else
  9020                           ;LCD.c: 298: {
  9021                           ;LCD.c: 299: ScrollDisplayPosition++;
  9022  013744  0101               	movlb	1	; () banked
  9023  013746  2B0B               	incf	_ScrollDisplayPosition& (0+255),f,b
  9024                           
  9025                           ; BSR set to: 1
  9026                           ;LCD.c: 300: if(ScrollDisplayPosition == 1)
  9027  013748  0101               	movlb	1	; () banked
  9028  01374A  050B               	decf	_ScrollDisplayPosition& (0+255),w,b
  9029  01374C  A4D8               	btfss	status,2,c
  9030  01374E  D013               	goto	l12746
  9031                           
  9032                           ; BSR set to: 1
  9033                           ;LCD.c: 301: {
  9034                           ;LCD.c: 302: ClearLCD();
  9035  013750  EC31  F003         	call	_ClearLCD	;wreg free
  9036                           
  9037                           ;LCD.c: 303: SetLCDcursor(1, 0);
  9038  013754  0E00               	movlw	0
  9039  013756  0101               	movlb	1	; () banked
  9040  013758  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9041  01375A  0E01               	movlw	1
  9042  01375C  ECEE  F001         	call	_SetLCDcursor
  9043                           
  9044                           ;LCD.c: 304: LCDPrintString(Scroll_1);
  9045  013760  0101               	movlb	1	; () banked
  9046  013762  0E01               	movlw	high _Scroll_1
  9047  013764  0101               	movlb	1	; () banked
  9048  013766  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9049  013768  0101               	movlb	1	; () banked
  9050  01376A  0E0E               	movlw	low _Scroll_1
  9051  01376C  0101               	movlb	1	; () banked
  9052  01376E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9053  013770  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9054                           
  9055                           ;LCD.c: 305: }
  9056  013774  D213               	goto	l12844
  9057  013776                     l12746:
  9058                           
  9059                           ;LCD.c: 306: else if(ScrollDisplayPosition == 2)
  9060  013776  0101               	movlb	1	; () banked
  9061  013778  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9062  01377A  0A02               	xorlw	2
  9063  01377C  A4D8               	btfss	status,2,c
  9064  01377E  D033               	goto	l12756
  9065                           
  9066                           ; BSR set to: 1
  9067                           ;LCD.c: 307: {
  9068                           ;LCD.c: 308: ClearLCD();
  9069  013780  EC31  F003         	call	_ClearLCD	;wreg free
  9070                           
  9071                           ;LCD.c: 309: SetLCDcursor(0, 0);
  9072  013784  0E00               	movlw	0
  9073  013786  0101               	movlb	1	; () banked
  9074  013788  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9075  01378A  0E00               	movlw	0
  9076  01378C  ECEE  F001         	call	_SetLCDcursor
  9077                           
  9078                           ;LCD.c: 310: LCDPrintString(Scroll_1);
  9079  013790  0101               	movlb	1	; () banked
  9080  013792  0E01               	movlw	high _Scroll_1
  9081  013794  0101               	movlb	1	; () banked
  9082  013796  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9083  013798  0101               	movlb	1	; () banked
  9084  01379A  0E0E               	movlw	low _Scroll_1
  9085  01379C  0101               	movlb	1	; () banked
  9086  01379E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9087  0137A0  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9088                           
  9089                           ;LCD.c: 311: SetLCDcursor(1, 0);
  9090  0137A4  0E00               	movlw	0
  9091  0137A6  0101               	movlb	1	; () banked
  9092  0137A8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9093  0137AA  0E01               	movlw	1
  9094  0137AC  ECEE  F001         	call	_SetLCDcursor
  9095                           
  9096                           ;LCD.c: 312: LCDPrintString(Scroll_2);
  9097  0137B0  0101               	movlb	1	; () banked
  9098  0137B2  0E01               	movlw	high _Scroll_2
  9099  0137B4  0101               	movlb	1	; () banked
  9100  0137B6  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9101  0137B8  0101               	movlb	1	; () banked
  9102  0137BA  0E1E               	movlw	low _Scroll_2
  9103  0137BC  0101               	movlb	1	; () banked
  9104  0137BE  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9105  0137C0  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9106                           
  9107                           ;LCD.c: 313: cleanBuffer(Scroll_1, 16);
  9108  0137C4  0101               	movlb	1	; () banked
  9109  0137C6  0E01               	movlw	high _Scroll_1
  9110  0137C8  0101               	movlb	1	; () banked
  9111  0137CA  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9112  0137CC  0101               	movlb	1	; () banked
  9113  0137CE  0E0E               	movlw	low _Scroll_1
  9114  0137D0  0101               	movlb	1	; () banked
  9115  0137D2  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9116  0137D4  0E00               	movlw	0
  9117  0137D6  0101               	movlb	1	; () banked
  9118  0137D8  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9119  0137DA  0E10               	movlw	16
  9120  0137DC  0101               	movlb	1	; () banked
  9121  0137DE  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9122  0137E0  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  9123                           
  9124                           ;LCD.c: 314: }
  9125  0137E4  D1DB               	goto	l12844
  9126  0137E6                     l12756:
  9127                           
  9128                           ;LCD.c: 315: else if(ScrollDisplayPosition == 3)
  9129  0137E6  0101               	movlb	1	; () banked
  9130  0137E8  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9131  0137EA  0A03               	xorlw	3
  9132  0137EC  A4D8               	btfss	status,2,c
  9133  0137EE  D033               	goto	l12766
  9134                           
  9135                           ; BSR set to: 1
  9136                           ;LCD.c: 316: {
  9137                           ;LCD.c: 317: ClearLCD();
  9138  0137F0  EC31  F003         	call	_ClearLCD	;wreg free
  9139                           
  9140                           ;LCD.c: 318: SetLCDcursor(0, 0);
  9141  0137F4  0E00               	movlw	0
  9142  0137F6  0101               	movlb	1	; () banked
  9143  0137F8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9144  0137FA  0E00               	movlw	0
  9145  0137FC  ECEE  F001         	call	_SetLCDcursor
  9146                           
  9147                           ;LCD.c: 319: LCDPrintString(Scroll_2);
  9148  013800  0101               	movlb	1	; () banked
  9149  013802  0E01               	movlw	high _Scroll_2
  9150  013804  0101               	movlb	1	; () banked
  9151  013806  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9152  013808  0101               	movlb	1	; () banked
  9153  01380A  0E1E               	movlw	low _Scroll_2
  9154  01380C  0101               	movlb	1	; () banked
  9155  01380E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9156  013810  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9157                           
  9158                           ;LCD.c: 320: SetLCDcursor(1, 0);
  9159  013814  0E00               	movlw	0
  9160  013816  0101               	movlb	1	; () banked
  9161  013818  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9162  01381A  0E01               	movlw	1
  9163  01381C  ECEE  F001         	call	_SetLCDcursor
  9164                           
  9165                           ;LCD.c: 321: LCDPrintString(Scroll_3);
  9166  013820  0101               	movlb	1	; () banked
  9167  013822  0E01               	movlw	high _Scroll_3
  9168  013824  0101               	movlb	1	; () banked
  9169  013826  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9170  013828  0101               	movlb	1	; () banked
  9171  01382A  0E2E               	movlw	low _Scroll_3
  9172  01382C  0101               	movlb	1	; () banked
  9173  01382E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9174  013830  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9175                           
  9176                           ;LCD.c: 322: cleanBuffer(Scroll_2, 16);
  9177  013834  0101               	movlb	1	; () banked
  9178  013836  0E01               	movlw	high _Scroll_2
  9179  013838  0101               	movlb	1	; () banked
  9180  01383A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9181  01383C  0101               	movlb	1	; () banked
  9182  01383E  0E1E               	movlw	low _Scroll_2
  9183  013840  0101               	movlb	1	; () banked
  9184  013842  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9185  013844  0E00               	movlw	0
  9186  013846  0101               	movlb	1	; () banked
  9187  013848  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9188  01384A  0E10               	movlw	16
  9189  01384C  0101               	movlb	1	; () banked
  9190  01384E  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9191  013850  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  9192                           
  9193                           ;LCD.c: 323: }
  9194  013854  D1A3               	goto	l12844
  9195  013856                     l12766:
  9196                           
  9197                           ;LCD.c: 324: else if(ScrollDisplayPosition == 4)
  9198  013856  0101               	movlb	1	; () banked
  9199  013858  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9200  01385A  0A04               	xorlw	4
  9201  01385C  A4D8               	btfss	status,2,c
  9202  01385E  D033               	goto	l12776
  9203                           
  9204                           ; BSR set to: 1
  9205                           ;LCD.c: 325: {
  9206                           ;LCD.c: 326: ClearLCD();
  9207  013860  EC31  F003         	call	_ClearLCD	;wreg free
  9208                           
  9209                           ;LCD.c: 327: SetLCDcursor(0, 0);
  9210  013864  0E00               	movlw	0
  9211  013866  0101               	movlb	1	; () banked
  9212  013868  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9213  01386A  0E00               	movlw	0
  9214  01386C  ECEE  F001         	call	_SetLCDcursor
  9215                           
  9216                           ;LCD.c: 328: LCDPrintString(Scroll_3);
  9217  013870  0101               	movlb	1	; () banked
  9218  013872  0E01               	movlw	high _Scroll_3
  9219  013874  0101               	movlb	1	; () banked
  9220  013876  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9221  013878  0101               	movlb	1	; () banked
  9222  01387A  0E2E               	movlw	low _Scroll_3
  9223  01387C  0101               	movlb	1	; () banked
  9224  01387E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9225  013880  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9226                           
  9227                           ;LCD.c: 329: SetLCDcursor(1, 0);
  9228  013884  0E00               	movlw	0
  9229  013886  0101               	movlb	1	; () banked
  9230  013888  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9231  01388A  0E01               	movlw	1
  9232  01388C  ECEE  F001         	call	_SetLCDcursor
  9233                           
  9234                           ;LCD.c: 330: LCDPrintString(Scroll_4);
  9235  013890  0101               	movlb	1	; () banked
  9236  013892  0E01               	movlw	high _Scroll_4
  9237  013894  0101               	movlb	1	; () banked
  9238  013896  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9239  013898  0101               	movlb	1	; () banked
  9240  01389A  0E3E               	movlw	low _Scroll_4
  9241  01389C  0101               	movlb	1	; () banked
  9242  01389E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9243  0138A0  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9244                           
  9245                           ;LCD.c: 331: cleanBuffer(Scroll_3, 16);
  9246  0138A4  0101               	movlb	1	; () banked
  9247  0138A6  0E01               	movlw	high _Scroll_3
  9248  0138A8  0101               	movlb	1	; () banked
  9249  0138AA  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9250  0138AC  0101               	movlb	1	; () banked
  9251  0138AE  0E2E               	movlw	low _Scroll_3
  9252  0138B0  0101               	movlb	1	; () banked
  9253  0138B2  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9254  0138B4  0E00               	movlw	0
  9255  0138B6  0101               	movlb	1	; () banked
  9256  0138B8  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9257  0138BA  0E10               	movlw	16
  9258  0138BC  0101               	movlb	1	; () banked
  9259  0138BE  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9260  0138C0  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  9261                           
  9262                           ;LCD.c: 332: }
  9263  0138C4  D16B               	goto	l12844
  9264  0138C6                     l12776:
  9265                           
  9266                           ;LCD.c: 333: else if(ScrollDisplayPosition == 5)
  9267  0138C6  0101               	movlb	1	; () banked
  9268  0138C8  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9269  0138CA  0A05               	xorlw	5
  9270  0138CC  A4D8               	btfss	status,2,c
  9271  0138CE  D033               	goto	l12786
  9272                           
  9273                           ; BSR set to: 1
  9274                           ;LCD.c: 334: {
  9275                           ;LCD.c: 335: ClearLCD();
  9276  0138D0  EC31  F003         	call	_ClearLCD	;wreg free
  9277                           
  9278                           ;LCD.c: 336: SetLCDcursor(0, 0);
  9279  0138D4  0E00               	movlw	0
  9280  0138D6  0101               	movlb	1	; () banked
  9281  0138D8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9282  0138DA  0E00               	movlw	0
  9283  0138DC  ECEE  F001         	call	_SetLCDcursor
  9284                           
  9285                           ;LCD.c: 337: LCDPrintString(Scroll_4);
  9286  0138E0  0101               	movlb	1	; () banked
  9287  0138E2  0E01               	movlw	high _Scroll_4
  9288  0138E4  0101               	movlb	1	; () banked
  9289  0138E6  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9290  0138E8  0101               	movlb	1	; () banked
  9291  0138EA  0E3E               	movlw	low _Scroll_4
  9292  0138EC  0101               	movlb	1	; () banked
  9293  0138EE  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9294  0138F0  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9295                           
  9296                           ;LCD.c: 338: SetLCDcursor(1, 0);
  9297  0138F4  0E00               	movlw	0
  9298  0138F6  0101               	movlb	1	; () banked
  9299  0138F8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9300  0138FA  0E01               	movlw	1
  9301  0138FC  ECEE  F001         	call	_SetLCDcursor
  9302                           
  9303                           ;LCD.c: 339: LCDPrintString(Scroll_5);
  9304  013900  0101               	movlb	1	; () banked
  9305  013902  0E01               	movlw	high _Scroll_5
  9306  013904  0101               	movlb	1	; () banked
  9307  013906  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9308  013908  0101               	movlb	1	; () banked
  9309  01390A  0E4E               	movlw	low _Scroll_5
  9310  01390C  0101               	movlb	1	; () banked
  9311  01390E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9312  013910  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9313                           
  9314                           ;LCD.c: 340: cleanBuffer(Scroll_4, 16);
  9315  013914  0101               	movlb	1	; () banked
  9316  013916  0E01               	movlw	high _Scroll_4
  9317  013918  0101               	movlb	1	; () banked
  9318  01391A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9319  01391C  0101               	movlb	1	; () banked
  9320  01391E  0E3E               	movlw	low _Scroll_4
  9321  013920  0101               	movlb	1	; () banked
  9322  013922  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9323  013924  0E00               	movlw	0
  9324  013926  0101               	movlb	1	; () banked
  9325  013928  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9326  01392A  0E10               	movlw	16
  9327  01392C  0101               	movlb	1	; () banked
  9328  01392E  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9329  013930  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  9330                           
  9331                           ;LCD.c: 341: }
  9332  013934  D133               	goto	l12844
  9333  013936                     l12786:
  9334                           
  9335                           ;LCD.c: 342: else if(ScrollDisplayPosition == 6)
  9336  013936  0101               	movlb	1	; () banked
  9337  013938  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9338  01393A  0A06               	xorlw	6
  9339  01393C  A4D8               	btfss	status,2,c
  9340  01393E  D033               	goto	l12796
  9341                           
  9342                           ; BSR set to: 1
  9343                           ;LCD.c: 343: {
  9344                           ;LCD.c: 344: ClearLCD();
  9345  013940  EC31  F003         	call	_ClearLCD	;wreg free
  9346                           
  9347                           ;LCD.c: 345: SetLCDcursor(0, 0);
  9348  013944  0E00               	movlw	0
  9349  013946  0101               	movlb	1	; () banked
  9350  013948  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9351  01394A  0E00               	movlw	0
  9352  01394C  ECEE  F001         	call	_SetLCDcursor
  9353                           
  9354                           ;LCD.c: 346: LCDPrintString(Scroll_5);
  9355  013950  0101               	movlb	1	; () banked
  9356  013952  0E01               	movlw	high _Scroll_5
  9357  013954  0101               	movlb	1	; () banked
  9358  013956  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9359  013958  0101               	movlb	1	; () banked
  9360  01395A  0E4E               	movlw	low _Scroll_5
  9361  01395C  0101               	movlb	1	; () banked
  9362  01395E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9363  013960  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9364                           
  9365                           ;LCD.c: 347: SetLCDcursor(1, 0);
  9366  013964  0E00               	movlw	0
  9367  013966  0101               	movlb	1	; () banked
  9368  013968  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9369  01396A  0E01               	movlw	1
  9370  01396C  ECEE  F001         	call	_SetLCDcursor
  9371                           
  9372                           ;LCD.c: 348: LCDPrintString(Scroll_6);
  9373  013970  0101               	movlb	1	; () banked
  9374  013972  0E01               	movlw	high _Scroll_6
  9375  013974  0101               	movlb	1	; () banked
  9376  013976  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9377  013978  0101               	movlb	1	; () banked
  9378  01397A  0E5E               	movlw	low _Scroll_6
  9379  01397C  0101               	movlb	1	; () banked
  9380  01397E  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9381  013980  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9382                           
  9383                           ;LCD.c: 349: cleanBuffer(Scroll_5, 16);
  9384  013984  0101               	movlb	1	; () banked
  9385  013986  0E01               	movlw	high _Scroll_5
  9386  013988  0101               	movlb	1	; () banked
  9387  01398A  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9388  01398C  0101               	movlb	1	; () banked
  9389  01398E  0E4E               	movlw	low _Scroll_5
  9390  013990  0101               	movlb	1	; () banked
  9391  013992  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9392  013994  0E00               	movlw	0
  9393  013996  0101               	movlb	1	; () banked
  9394  013998  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9395  01399A  0E10               	movlw	16
  9396  01399C  0101               	movlb	1	; () banked
  9397  01399E  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9398  0139A0  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  9399                           
  9400                           ;LCD.c: 350: }
  9401  0139A4  D0FB               	goto	l12844
  9402  0139A6                     l12796:
  9403                           
  9404                           ;LCD.c: 351: else if(ScrollDisplayPosition == 7)
  9405  0139A6  0101               	movlb	1	; () banked
  9406  0139A8  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9407  0139AA  0A07               	xorlw	7
  9408  0139AC  A4D8               	btfss	status,2,c
  9409  0139AE  D031               	goto	l12806
  9410                           
  9411                           ; BSR set to: 1
  9412                           ;LCD.c: 352: {
  9413                           ;LCD.c: 353: ClearLCD();
  9414  0139B0  EC31  F003         	call	_ClearLCD	;wreg free
  9415                           
  9416                           ;LCD.c: 354: SetLCDcursor(0, 0);
  9417  0139B4  0E00               	movlw	0
  9418  0139B6  0101               	movlb	1	; () banked
  9419  0139B8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9420  0139BA  0E00               	movlw	0
  9421  0139BC  ECEE  F001         	call	_SetLCDcursor
  9422                           
  9423                           ;LCD.c: 355: LCDPrintString(Scroll_6);
  9424  0139C0  0101               	movlb	1	; () banked
  9425  0139C2  0E01               	movlw	high _Scroll_6
  9426  0139C4  0101               	movlb	1	; () banked
  9427  0139C6  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9428  0139C8  0101               	movlb	1	; () banked
  9429  0139CA  0E5E               	movlw	low _Scroll_6
  9430  0139CC  0101               	movlb	1	; () banked
  9431  0139CE  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9432  0139D0  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9433                           
  9434                           ;LCD.c: 356: SetLCDcursor(1, 0);
  9435  0139D4  0E00               	movlw	0
  9436  0139D6  0101               	movlb	1	; () banked
  9437  0139D8  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9438  0139DA  0E01               	movlw	1
  9439  0139DC  ECEE  F001         	call	_SetLCDcursor
  9440                           
  9441                           ;LCD.c: 357: LCDPrintString(Scroll_7);
  9442  0139E0  0E00               	movlw	high _Scroll_7
  9443  0139E2  0101               	movlb	1	; () banked
  9444  0139E4  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9445  0139E6  0E27               	movlw	low _Scroll_7
  9446  0139E8  0101               	movlb	1	; () banked
  9447  0139EA  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9448  0139EC  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9449                           
  9450                           ;LCD.c: 358: cleanBuffer(Scroll_6, 16);
  9451  0139F0  0101               	movlb	1	; () banked
  9452  0139F2  0E01               	movlw	high _Scroll_6
  9453  0139F4  0101               	movlb	1	; () banked
  9454  0139F6  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9455  0139F8  0101               	movlb	1	; () banked
  9456  0139FA  0E5E               	movlw	low _Scroll_6
  9457  0139FC  0101               	movlb	1	; () banked
  9458  0139FE  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9459  013A00  0E00               	movlw	0
  9460  013A02  0101               	movlb	1	; () banked
  9461  013A04  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9462  013A06  0E10               	movlw	16
  9463  013A08  0101               	movlb	1	; () banked
  9464  013A0A  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9465  013A0C  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  9466                           
  9467                           ;LCD.c: 359: }
  9468  013A10  D0C5               	goto	l12844
  9469  013A12                     l12806:
  9470                           
  9471                           ;LCD.c: 360: else if(ScrollDisplayPosition == 8)
  9472  013A12  0101               	movlb	1	; () banked
  9473  013A14  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9474  013A16  0A08               	xorlw	8
  9475  013A18  A4D8               	btfss	status,2,c
  9476  013A1A  D02D               	goto	l12816
  9477                           
  9478                           ; BSR set to: 1
  9479                           ;LCD.c: 361: {
  9480                           ;LCD.c: 362: ClearLCD();
  9481  013A1C  EC31  F003         	call	_ClearLCD	;wreg free
  9482                           
  9483                           ;LCD.c: 363: SetLCDcursor(0, 0);
  9484  013A20  0E00               	movlw	0
  9485  013A22  0101               	movlb	1	; () banked
  9486  013A24  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9487  013A26  0E00               	movlw	0
  9488  013A28  ECEE  F001         	call	_SetLCDcursor
  9489                           
  9490                           ;LCD.c: 364: LCDPrintString(Scroll_7);
  9491  013A2C  0E00               	movlw	high _Scroll_7
  9492  013A2E  0101               	movlb	1	; () banked
  9493  013A30  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9494  013A32  0E27               	movlw	low _Scroll_7
  9495  013A34  0101               	movlb	1	; () banked
  9496  013A36  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9497  013A38  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9498                           
  9499                           ;LCD.c: 365: SetLCDcursor(1, 0);
  9500  013A3C  0E00               	movlw	0
  9501  013A3E  0101               	movlb	1	; () banked
  9502  013A40  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9503  013A42  0E01               	movlw	1
  9504  013A44  ECEE  F001         	call	_SetLCDcursor
  9505                           
  9506                           ;LCD.c: 366: LCDPrintString(Scroll_8);
  9507  013A48  0E00               	movlw	high _Scroll_8
  9508  013A4A  0101               	movlb	1	; () banked
  9509  013A4C  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9510  013A4E  0E37               	movlw	low _Scroll_8
  9511  013A50  0101               	movlb	1	; () banked
  9512  013A52  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9513  013A54  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9514                           
  9515                           ;LCD.c: 367: cleanBuffer(Scroll_7, 16);
  9516  013A58  0E00               	movlw	high _Scroll_7
  9517  013A5A  0101               	movlb	1	; () banked
  9518  013A5C  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9519  013A5E  0E27               	movlw	low _Scroll_7
  9520  013A60  0101               	movlb	1	; () banked
  9521  013A62  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9522  013A64  0E00               	movlw	0
  9523  013A66  0101               	movlb	1	; () banked
  9524  013A68  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9525  013A6A  0E10               	movlw	16
  9526  013A6C  0101               	movlb	1	; () banked
  9527  013A6E  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9528  013A70  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  9529                           
  9530                           ;LCD.c: 368: }
  9531  013A74  D093               	goto	l12844
  9532  013A76                     l12816:
  9533                           
  9534                           ;LCD.c: 369: else if(ScrollDisplayPosition == 9)
  9535  013A76  0101               	movlb	1	; () banked
  9536  013A78  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9537  013A7A  0A09               	xorlw	9
  9538  013A7C  A4D8               	btfss	status,2,c
  9539  013A7E  D02F               	goto	l12826
  9540                           
  9541                           ; BSR set to: 1
  9542                           ;LCD.c: 370: {
  9543                           ;LCD.c: 371: ClearLCD();
  9544  013A80  EC31  F003         	call	_ClearLCD	;wreg free
  9545                           
  9546                           ;LCD.c: 372: SetLCDcursor(0, 0);
  9547  013A84  0E00               	movlw	0
  9548  013A86  0101               	movlb	1	; () banked
  9549  013A88  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9550  013A8A  0E00               	movlw	0
  9551  013A8C  ECEE  F001         	call	_SetLCDcursor
  9552                           
  9553                           ;LCD.c: 373: LCDPrintString(Scroll_8);
  9554  013A90  0E00               	movlw	high _Scroll_8
  9555  013A92  0101               	movlb	1	; () banked
  9556  013A94  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9557  013A96  0E37               	movlw	low _Scroll_8
  9558  013A98  0101               	movlb	1	; () banked
  9559  013A9A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9560  013A9C  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9561                           
  9562                           ;LCD.c: 374: SetLCDcursor(1, 0);
  9563  013AA0  0E00               	movlw	0
  9564  013AA2  0101               	movlb	1	; () banked
  9565  013AA4  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9566  013AA6  0E01               	movlw	1
  9567  013AA8  ECEE  F001         	call	_SetLCDcursor
  9568                           
  9569                           ;LCD.c: 375: LCDPrintString(Scroll_9);
  9570  013AAC  0100               	movlb	0	; () banked
  9571  013AAE  0E00               	movlw	high _Scroll_9
  9572  013AB0  0101               	movlb	1	; () banked
  9573  013AB2  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9574  013AB4  0100               	movlb	0	; () banked
  9575  013AB6  0EEA               	movlw	low _Scroll_9
  9576  013AB8  0101               	movlb	1	; () banked
  9577  013ABA  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9578  013ABC  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9579                           
  9580                           ;LCD.c: 376: cleanBuffer(Scroll_8, 16);
  9581  013AC0  0E00               	movlw	high _Scroll_8
  9582  013AC2  0101               	movlb	1	; () banked
  9583  013AC4  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9584  013AC6  0E37               	movlw	low _Scroll_8
  9585  013AC8  0101               	movlb	1	; () banked
  9586  013ACA  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9587  013ACC  0E00               	movlw	0
  9588  013ACE  0101               	movlb	1	; () banked
  9589  013AD0  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9590  013AD2  0E10               	movlw	16
  9591  013AD4  0101               	movlb	1	; () banked
  9592  013AD6  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9593  013AD8  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  9594                           
  9595                           ;LCD.c: 377: }
  9596  013ADC  D05F               	goto	l12844
  9597  013ADE                     l12826:
  9598                           
  9599                           ;LCD.c: 378: else if(ScrollDisplayPosition == 10)
  9600  013ADE  0101               	movlb	1	; () banked
  9601  013AE0  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9602  013AE2  0A0A               	xorlw	10
  9603  013AE4  A4D8               	btfss	status,2,c
  9604  013AE6  D033               	goto	l12836
  9605                           
  9606                           ; BSR set to: 1
  9607                           ;LCD.c: 379: {
  9608                           ;LCD.c: 380: ClearLCD();
  9609  013AE8  EC31  F003         	call	_ClearLCD	;wreg free
  9610                           
  9611                           ;LCD.c: 381: SetLCDcursor(0, 0);
  9612  013AEC  0E00               	movlw	0
  9613  013AEE  0101               	movlb	1	; () banked
  9614  013AF0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9615  013AF2  0E00               	movlw	0
  9616  013AF4  ECEE  F001         	call	_SetLCDcursor
  9617                           
  9618                           ;LCD.c: 382: LCDPrintString(Scroll_9);
  9619  013AF8  0100               	movlb	0	; () banked
  9620  013AFA  0E00               	movlw	high _Scroll_9
  9621  013AFC  0101               	movlb	1	; () banked
  9622  013AFE  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9623  013B00  0100               	movlb	0	; () banked
  9624  013B02  0EEA               	movlw	low _Scroll_9
  9625  013B04  0101               	movlb	1	; () banked
  9626  013B06  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9627  013B08  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9628                           
  9629                           ;LCD.c: 383: SetLCDcursor(1, 0);
  9630  013B0C  0E00               	movlw	0
  9631  013B0E  0101               	movlb	1	; () banked
  9632  013B10  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9633  013B12  0E01               	movlw	1
  9634  013B14  ECEE  F001         	call	_SetLCDcursor
  9635                           
  9636                           ;LCD.c: 384: LCDPrintString(Scroll_10);
  9637  013B18  0100               	movlb	0	; () banked
  9638  013B1A  0E00               	movlw	high _Scroll_10
  9639  013B1C  0101               	movlb	1	; () banked
  9640  013B1E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9641  013B20  0100               	movlb	0	; () banked
  9642  013B22  0EDA               	movlw	low _Scroll_10
  9643  013B24  0101               	movlb	1	; () banked
  9644  013B26  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9645  013B28  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9646                           
  9647                           ;LCD.c: 385: cleanBuffer(Scroll_9, 16);
  9648  013B2C  0100               	movlb	0	; () banked
  9649  013B2E  0E00               	movlw	high _Scroll_9
  9650  013B30  0101               	movlb	1	; () banked
  9651  013B32  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9652  013B34  0100               	movlb	0	; () banked
  9653  013B36  0EEA               	movlw	low _Scroll_9
  9654  013B38  0101               	movlb	1	; () banked
  9655  013B3A  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9656  013B3C  0E00               	movlw	0
  9657  013B3E  0101               	movlb	1	; () banked
  9658  013B40  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9659  013B42  0E10               	movlw	16
  9660  013B44  0101               	movlb	1	; () banked
  9661  013B46  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9662  013B48  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  9663                           
  9664                           ;LCD.c: 386: }
  9665  013B4C  D027               	goto	l12844
  9666  013B4E                     l12836:
  9667                           
  9668                           ;LCD.c: 387: else if(ScrollDisplayPosition == 11)
  9669  013B4E  0101               	movlb	1	; () banked
  9670  013B50  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9671  013B52  0A0B               	xorlw	11
  9672  013B54  A4D8               	btfss	status,2,c
  9673  013B56  D022               	goto	l12844
  9674                           
  9675                           ; BSR set to: 1
  9676                           ;LCD.c: 388: {
  9677                           ;LCD.c: 389: ClearLCD();
  9678  013B58  EC31  F003         	call	_ClearLCD	;wreg free
  9679                           
  9680                           ;LCD.c: 390: SetLCDcursor(0, 0);
  9681  013B5C  0E00               	movlw	0
  9682  013B5E  0101               	movlb	1	; () banked
  9683  013B60  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
  9684  013B62  0E00               	movlw	0
  9685  013B64  ECEE  F001         	call	_SetLCDcursor
  9686                           
  9687                           ;LCD.c: 391: LCDPrintString(Scroll_10);
  9688  013B68  0100               	movlb	0	; () banked
  9689  013B6A  0E00               	movlw	high _Scroll_10
  9690  013B6C  0101               	movlb	1	; () banked
  9691  013B6E  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
  9692  013B70  0100               	movlb	0	; () banked
  9693  013B72  0EDA               	movlw	low _Scroll_10
  9694  013B74  0101               	movlb	1	; () banked
  9695  013B76  6F8A               	movwf	LCDPrintString@Text& (0+255),b
  9696  013B78  EC66  F0BA         	call	_LCDPrintString	;wreg free
  9697                           
  9698                           ;LCD.c: 392: cleanBuffer(Scroll_10, 16);
  9699  013B7C  0100               	movlb	0	; () banked
  9700  013B7E  0E00               	movlw	high _Scroll_10
  9701  013B80  0101               	movlb	1	; () banked
  9702  013B82  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
  9703  013B84  0100               	movlb	0	; () banked
  9704  013B86  0EDA               	movlw	low _Scroll_10
  9705  013B88  0101               	movlb	1	; () banked
  9706  013B8A  6F7C               	movwf	cleanBuffer@data& (0+255),b
  9707  013B8C  0E00               	movlw	0
  9708  013B8E  0101               	movlb	1	; () banked
  9709  013B90  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
  9710  013B92  0E10               	movlw	16
  9711  013B94  0101               	movlb	1	; () banked
  9712  013B96  6F7E               	movwf	cleanBuffer@count& (0+255),b
  9713  013B98  ECE4  F0BC         	call	_cleanBuffer	;wreg free
  9714  013B9C                     l12844:
  9715                           
  9716                           ;LCD.c: 393: }
  9717                           ;LCD.c: 394: if(ScrollDisplayPosition > ScrollFIFOCount)
  9718  013B9C  0101               	movlb	1	; () banked
  9719  013B9E  510B               	movf	_ScrollDisplayPosition& (0+255),w,b
  9720  013BA0  0101               	movlb	1	; () banked
  9721  013BA2  5D0C               	subwf	_ScrollFIFOCount& (0+255),w,b
  9722  013BA4  B0D8               	btfsc	status,0,c
  9723  013BA6  D006               	goto	l1075
  9724                           
  9725                           ; BSR set to: 1
  9726                           ;LCD.c: 395: {
  9727                           ;LCD.c: 396: ScrollFIFOCount=0;
  9728  013BA8  0E00               	movlw	0
  9729  013BAA  0101               	movlb	1	; () banked
  9730  013BAC  6F0C               	movwf	_ScrollFIFOCount& (0+255),b
  9731                           
  9732                           ;LCD.c: 397: ScrollDisplayPosition=0;
  9733  013BAE  0E00               	movlw	0
  9734  013BB0  0101               	movlb	1	; () banked
  9735  013BB2  6F0B               	movwf	_ScrollDisplayPosition& (0+255),b
  9736  013BB4                     l1075:
  9737                           
  9738                           ; BSR set to: 1
  9739                           ;LCD.c: 398: }
  9740                           ;LCD.c: 399: LCDclearCount = 15000;
  9741  013BB4  0E98               	movlw	152
  9742  013BB6  0101               	movlb	1	; () banked
  9743  013BB8  6FD9               	movwf	_LCDclearCount& (0+255),b
  9744  013BBA  0E3A               	movlw	58
  9745  013BBC  0101               	movlb	1	; () banked
  9746  013BBE  6FDA               	movwf	(_LCDclearCount+1)& (0+255),b
  9747  013BC0  0E00               	movlw	0
  9748  013BC2  0101               	movlb	1	; () banked
  9749  013BC4  6FDB               	movwf	(_LCDclearCount+2)& (0+255),b
  9750  013BC6  0E00               	movlw	0
  9751  013BC8  0101               	movlb	1	; () banked
  9752  013BCA  6FDC               	movwf	(_LCDclearCount+3)& (0+255),b
  9753  013BCC  0012               	return	
  9754  013BCE                     __end_of_LCDScreenUpdate:
  9755                           	opt stack 0
  9756                           tblptru	equ	0xFF8
  9757                           tblptrh	equ	0xFF7
  9758                           tblptrl	equ	0xFF6
  9759                           tablat	equ	0xFF5
  9760                           prodl	equ	0xFF3
  9761                           postinc0	equ	0xFEE
  9762                           wreg	equ	0xFE8
  9763                           postdec1	equ	0xFE5
  9764                           fsr1l	equ	0xFE1
  9765                           status	equ	0xFD8
  9766                           
  9767 ;; *************** function _LCDPrintChar *****************
  9768 ;; Defined at:
  9769 ;;		line 266 in file "LCD.c"
  9770 ;; Parameters:    Size  Location     Type
  9771 ;;  character       1    wreg     unsigned char 
  9772 ;; Auto vars:     Size  Location     Type
  9773 ;;  character       1   28[BANK1 ] unsigned char 
  9774 ;; Return value:  Size  Location     Type
  9775 ;;		None               void
  9776 ;; Registers used:
  9777 ;;		wreg, status,2, status,0, cstack
  9778 ;; Tracked objects:
  9779 ;;		On entry : 0/0
  9780 ;;		On exit  : 0/0
  9781 ;;		Unchanged: 0/0
  9782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9784 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9786 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  9787 ;;Total ram usage:        1 bytes
  9788 ;; Hardware stack levels used:    1
  9789 ;; Hardware stack levels required when called:    9
  9790 ;; This function calls:
  9791 ;;		_SendLCDbyte
  9792 ;; This function is called by:
  9793 ;;		_main
  9794 ;;		_LCDScreenUpdate
  9795 ;; This function uses a non-reentrant model
  9796 ;;
  9797                           
  9798                           	psect	text10
  9799  0006BE                     __ptext10:
  9800                           	opt stack 0
  9801  0006BE                     _LCDPrintChar:
  9802                           	opt stack 19
  9803                           
  9804                           ;incstack = 0
  9805                           ;LCDPrintChar@character stored from wreg
  9806  0006BE  0101               	movlb	1	; () banked
  9807  0006C0  6F8A               	movwf	LCDPrintChar@character& (0+255),b
  9808                           
  9809                           ; BSR set to: 1
  9810                           ;LCD.c: 268: SendLCDbyte(character, 1);
  9811  0006C2  0E01               	movlw	1
  9812  0006C4  0101               	movlb	1	; () banked
  9813  0006C6  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
  9814  0006C8  0101               	movlb	1	; () banked
  9815  0006CA  518A               	movf	LCDPrintChar@character& (0+255),w,b
  9816  0006CC  EC20  F0B2         	call	_SendLCDbyte
  9817  0006D0  0012               	return	
  9818  0006D2                     __end_of_LCDPrintChar:
  9819                           	opt stack 0
  9820                           tblptru	equ	0xFF8
  9821                           tblptrh	equ	0xFF7
  9822                           tblptrl	equ	0xFF6
  9823                           tablat	equ	0xFF5
  9824                           prodl	equ	0xFF3
  9825                           postinc0	equ	0xFEE
  9826                           wreg	equ	0xFE8
  9827                           postdec1	equ	0xFE5
  9828                           fsr1l	equ	0xFE1
  9829                           status	equ	0xFD8
  9830                           
  9831 ;; *************** function _InitApp *****************
  9832 ;; Defined at:
  9833 ;;		line 53 in file "user.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;		None
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;		None
  9838 ;; Return value:  Size  Location     Type
  9839 ;;		None               void
  9840 ;; Registers used:
  9841 ;;		wreg, status,2, status,0, cstack
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9851 ;;Total ram usage:        0 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; Hardware stack levels required when called:    7
  9854 ;; This function calls:
  9855 ;;		_delayUS
  9856 ;; This function is called by:
  9857 ;;		_main
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           	psect	text11
  9862  01796A                     __ptext11:
  9863                           	opt stack 0
  9864  01796A                     _InitApp:
  9865                           	opt stack 22
  9866                           
  9867                           ;user.c: 55: TRISDbits.TRISD1 = 0;
  9868                           
  9869                           ;incstack = 0
  9870  01796A  9295               	bcf	3989,1,c	;volatile
  9871                           
  9872                           ;user.c: 56: TRISDbits.TRISD2 = 0;
  9873  01796C  9495               	bcf	3989,2,c	;volatile
  9874                           
  9875                           ;user.c: 57: TRISDbits.TRISD0 = 0;
  9876  01796E  9095               	bcf	3989,0,c	;volatile
  9877                           
  9878                           ;user.c: 58: TRISAbits.TRISA0 = 1;
  9879  017970  8092               	bsf	3986,0,c	;volatile
  9880                           
  9881                           ;user.c: 59: TRISCbits.TRISC2 = 0;
  9882  017972  9494               	bcf	3988,2,c	;volatile
  9883                           
  9884                           ;user.c: 60: TRISCbits.TRISC1 = 0;
  9885  017974  9294               	bcf	3988,1,c	;volatile
  9886                           
  9887                           ;user.c: 61: TRISEbits.TRISE2 = 1;
  9888  017976  8496               	bsf	3990,2,c	;volatile
  9889                           
  9890                           ;user.c: 62: TRISEbits.TRISE1 = 0;
  9891  017978  9296               	bcf	3990,1,c	;volatile
  9892                           
  9893                           ;user.c: 64: TRISCbits.TRISC3 = 0;
  9894  01797A  9694               	bcf	3988,3,c	;volatile
  9895                           
  9896                           ;user.c: 65: TRISCbits.TRISC4 = 0;
  9897  01797C  9894               	bcf	3988,4,c	;volatile
  9898                           
  9899                           ;user.c: 67: LATC &= ~0b00001000;
  9900  01797E  968B               	bcf	3979,3,c	;volatile
  9901                           
  9902                           ;user.c: 68: delayUS(200);
  9903  017980  0EC8               	movlw	200
  9904  017982  0101               	movlb	1	; () banked
  9905  017984  6F7C               	movwf	delayUS@US& (0+255),b
  9906  017986  0E00               	movlw	0
  9907  017988  0101               	movlb	1	; () banked
  9908  01798A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
  9909  01798C  0E00               	movlw	0
  9910  01798E  0101               	movlb	1	; () banked
  9911  017990  6F7E               	movwf	(delayUS@US+2)& (0+255),b
  9912  017992  0E00               	movlw	0
  9913  017994  0101               	movlb	1	; () banked
  9914  017996  6F7F               	movwf	(delayUS@US+3)& (0+255),b
  9915  017998  ECA4  F0BA         	call	_delayUS	;wreg free
  9916                           
  9917                           ;user.c: 69: TRISCbits.TRISC3 = 1;
  9918  01799C  8694               	bsf	3988,3,c	;volatile
  9919                           
  9920                           ;user.c: 71: LATD &= ~(0b00000010 + 0b00000100 + 0b00000001);
  9921  01799E  0EF8               	movlw	248
  9922  0179A0  168C               	andwf	3980,f,c	;volatile
  9923                           
  9924                           ;user.c: 72: LATE &= ~0b00000010;
  9925  0179A2  928D               	bcf	3981,1,c	;volatile
  9926                           
  9927                           ;user.c: 73: LATC &= ~(0b00000010);
  9928  0179A4  928B               	bcf	3979,1,c	;volatile
  9929                           
  9930                           ;user.c: 76: TRISAbits.TRISA3 = 0;
  9931  0179A6  9692               	bcf	3986,3,c	;volatile
  9932                           
  9933                           ;user.c: 77: TRISAbits.TRISA4 = 0;
  9934  0179A8  9892               	bcf	3986,4,c	;volatile
  9935                           
  9936                           ;user.c: 78: TRISAbits.TRISA5 = 0;
  9937  0179AA  9A92               	bcf	3986,5,c	;volatile
  9938                           
  9939                           ;user.c: 79: TRISEbits.TRISE0 = 0;
  9940  0179AC  9096               	bcf	3990,0,c	;volatile
  9941                           
  9942                           ;user.c: 80: TRISDbits.TRISD4 = 0;
  9943  0179AE  9895               	bcf	3989,4,c	;volatile
  9944                           
  9945                           ;user.c: 81: TRISDbits.TRISD7 = 0;
  9946  0179B0  9E95               	bcf	3989,7,c	;volatile
  9947                           
  9948                           ;user.c: 82: TRISDbits.TRISD6 = 0;
  9949  0179B2  9C95               	bcf	3989,6,c	;volatile
  9950                           
  9951                           ;user.c: 83: TRISDbits.TRISD5 = 0;
  9952  0179B4  9A95               	bcf	3989,5,c	;volatile
  9953                           
  9954                           ;user.c: 85: LATA &= ~(0b00001000+0b00010000+0b00100000);
  9955  0179B6  0EC7               	movlw	199
  9956  0179B8  1689               	andwf	3977,f,c	;volatile
  9957                           
  9958                           ;user.c: 86: LATD &= ~(0b10000000 + 0b00100000 + 0b01000000);
  9959  0179BA  0E1F               	movlw	31
  9960  0179BC  168C               	andwf	3980,f,c	;volatile
  9961                           
  9962                           ;user.c: 87: LATE &= ~0b00000001;
  9963  0179BE  908D               	bcf	3981,0,c	;volatile
  9964                           
  9965                           ;user.c: 89: RCONbits.IPEN = 1;
  9966  0179C0  8ED0               	bsf	4048,7,c	;volatile
  9967                           
  9968                           ;user.c: 90: INTCONbits.PEIE = 1;
  9969  0179C2  8CF2               	bsf	intcon,6,c	;volatile
  9970                           
  9971                           ;user.c: 91: INTCONbits.GIE = 1;
  9972  0179C4  8EF2               	bsf	intcon,7,c	;volatile
  9973  0179C6  0012               	return	
  9974  0179C8                     __end_of_InitApp:
  9975                           	opt stack 0
  9976                           tblptru	equ	0xFF8
  9977                           tblptrh	equ	0xFF7
  9978                           tblptrl	equ	0xFF6
  9979                           tablat	equ	0xFF5
  9980                           prodl	equ	0xFF3
  9981                           intcon	equ	0xFF2
  9982                           postinc0	equ	0xFEE
  9983                           wreg	equ	0xFE8
  9984                           postdec1	equ	0xFE5
  9985                           fsr1l	equ	0xFE1
  9986                           status	equ	0xFD8
  9987                           
  9988 ;; *************** function _EnableInternalADC *****************
  9989 ;; Defined at:
  9990 ;;		line 53 in file "ADC.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  channels        1    wreg     unsigned char 
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  channels        1   15[BANK1 ] unsigned char 
  9995 ;;  config          1   14[BANK1 ] unsigned char 
  9996 ;; Return value:  Size  Location     Type
  9997 ;;		None               void
  9998 ;; Registers used:
  9999 ;;		wreg, status,2, status,0
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10006 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10008 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10009 ;;Total ram usage:        2 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:    6
 10012 ;; This function calls:
 10013 ;;		Nothing
 10014 ;; This function is called by:
 10015 ;;		_main
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           	psect	text12
 10020  016A46                     __ptext12:
 10021                           	opt stack 0
 10022  016A46                     _EnableInternalADC:
 10023                           	opt stack 23
 10024                           
 10025                           ;incstack = 0
 10026                           ;EnableInternalADC@channels stored from wreg
 10027  016A46  0101               	movlb	1	; () banked
 10028  016A48  6F7D               	movwf	EnableInternalADC@channels& (0+255),b
 10029                           
 10030                           ; BSR set to: 1
 10031                           ;ADC.c: 55: unsigned char config =0;
 10032  016A4A  0E00               	movlw	0
 10033  016A4C  0101               	movlb	1	; () banked
 10034  016A4E  6F7C               	movwf	EnableInternalADC@config& (0+255),b
 10035                           
 10036                           ; BSR set to: 1
 10037                           ;ADC.c: 57: if(channels == 1)
 10038  016A50  0101               	movlb	1	; () banked
 10039  016A52  057D               	decf	EnableInternalADC@channels& (0+255),w,b
 10040  016A54  A4D8               	btfss	status,2,c
 10041  016A56  D002               	goto	l8804
 10042                           
 10043                           ; BSR set to: 1
 10044                           ;ADC.c: 58: {
 10045                           ;ADC.c: 59: config |= 0b00001110;
 10046  016A58  0E0E               	movlw	14
 10047  016A5A  D03F               	goto	L10
 10048  016A5C                     l8804:
 10049                           
 10050                           ; BSR set to: 1
 10051                           ;ADC.c: 61: else if(channels ==2)
 10052  016A5C  0101               	movlb	1	; () banked
 10053  016A5E  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10054  016A60  0A02               	xorlw	2
 10055  016A62  A4D8               	btfss	status,2,c
 10056  016A64  D002               	goto	l8808
 10057                           
 10058                           ; BSR set to: 1
 10059                           ;ADC.c: 62: {
 10060                           ;ADC.c: 63: config |= 0b00001101;
 10061  016A66  0E0D               	movlw	13
 10062  016A68  D038               	goto	L10
 10063  016A6A                     l8808:
 10064                           
 10065                           ; BSR set to: 1
 10066                           ;ADC.c: 65: else if(channels ==3)
 10067  016A6A  0101               	movlb	1	; () banked
 10068  016A6C  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10069  016A6E  0A03               	xorlw	3
 10070  016A70  A4D8               	btfss	status,2,c
 10071  016A72  D002               	goto	l8812
 10072                           
 10073                           ; BSR set to: 1
 10074                           ;ADC.c: 66: {
 10075                           ;ADC.c: 67: config |= 0b00001100;
 10076  016A74  0E0C               	movlw	12
 10077  016A76  D031               	goto	L10
 10078  016A78                     l8812:
 10079                           
 10080                           ; BSR set to: 1
 10081                           ;ADC.c: 69: else if(channels ==4)
 10082  016A78  0101               	movlb	1	; () banked
 10083  016A7A  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10084  016A7C  0A04               	xorlw	4
 10085  016A7E  A4D8               	btfss	status,2,c
 10086  016A80  D002               	goto	l8816
 10087                           
 10088                           ; BSR set to: 1
 10089                           ;ADC.c: 70: {
 10090                           ;ADC.c: 71: config |= 0b00001011;
 10091  016A82  0E0B               	movlw	11
 10092  016A84  D02A               	goto	L10
 10093  016A86                     l8816:
 10094                           
 10095                           ; BSR set to: 1
 10096                           ;ADC.c: 73: else if(channels ==5)
 10097  016A86  0101               	movlb	1	; () banked
 10098  016A88  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10099  016A8A  0A05               	xorlw	5
 10100  016A8C  A4D8               	btfss	status,2,c
 10101  016A8E  D002               	goto	l8820
 10102                           
 10103                           ; BSR set to: 1
 10104                           ;ADC.c: 74: {
 10105                           ;ADC.c: 75: config |= 0b00001010;
 10106  016A90  0E0A               	movlw	10
 10107  016A92  D023               	goto	L10
 10108  016A94                     l8820:
 10109                           
 10110                           ; BSR set to: 1
 10111                           ;ADC.c: 77: else if(channels ==6)
 10112  016A94  0101               	movlb	1	; () banked
 10113  016A96  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10114  016A98  0A06               	xorlw	6
 10115  016A9A  A4D8               	btfss	status,2,c
 10116  016A9C  D002               	goto	l8824
 10117                           
 10118                           ; BSR set to: 1
 10119                           ;ADC.c: 78: {
 10120                           ;ADC.c: 79: config |= 0b00001001;
 10121  016A9E  0E09               	movlw	9
 10122  016AA0  D01C               	goto	L10
 10123  016AA2                     l8824:
 10124                           
 10125                           ; BSR set to: 1
 10126                           ;ADC.c: 81: else if(channels ==7)
 10127  016AA2  0101               	movlb	1	; () banked
 10128  016AA4  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10129  016AA6  0A07               	xorlw	7
 10130  016AA8  A4D8               	btfss	status,2,c
 10131  016AAA  D003               	goto	l8828
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;ADC.c: 82: {
 10135                           ;ADC.c: 83: config |= 0b00001000;
 10136  016AAC  0101               	movlb	1	; () banked
 10137  016AAE  877C               	bsf	EnableInternalADC@config& (0+255),3,b
 10138                           
 10139                           ;ADC.c: 84: }
 10140  016AB0  D019               	goto	l8842
 10141  016AB2                     l8828:
 10142                           
 10143                           ; BSR set to: 1
 10144                           ;ADC.c: 85: else if(channels ==8)
 10145  016AB2  0101               	movlb	1	; () banked
 10146  016AB4  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10147  016AB6  0A08               	xorlw	8
 10148  016AB8  A4D8               	btfss	status,2,c
 10149  016ABA  D002               	goto	l8832
 10150                           
 10151                           ; BSR set to: 1
 10152                           ;ADC.c: 86: {
 10153                           ;ADC.c: 87: config |= 0b00000111;
 10154  016ABC  0E07               	movlw	7
 10155  016ABE  D00D               	goto	L10
 10156  016AC0                     l8832:
 10157                           
 10158                           ; BSR set to: 1
 10159                           ;ADC.c: 89: else if(channels ==9)
 10160  016AC0  0101               	movlb	1	; () banked
 10161  016AC2  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10162  016AC4  0A09               	xorlw	9
 10163  016AC6  A4D8               	btfss	status,2,c
 10164  016AC8  D002               	goto	l8836
 10165                           
 10166                           ; BSR set to: 1
 10167                           ;ADC.c: 90: {
 10168                           ;ADC.c: 91: config |= 0b00000110;
 10169  016ACA  0E06               	movlw	6
 10170  016ACC  D006               	goto	L10
 10171  016ACE                     l8836:
 10172                           
 10173                           ; BSR set to: 1
 10174                           ;ADC.c: 93: else if(channels ==10)
 10175  016ACE  0101               	movlb	1	; () banked
 10176  016AD0  517D               	movf	EnableInternalADC@channels& (0+255),w,b
 10177  016AD2  0A0A               	xorlw	10
 10178  016AD4  A4D8               	btfss	status,2,c
 10179  016AD6  D004               	goto	l8840
 10180                           
 10181                           ; BSR set to: 1
 10182                           ;ADC.c: 94: {
 10183                           ;ADC.c: 95: config |= 0b00000101;
 10184  016AD8  0E05               	movlw	5
 10185  016ADA                     L10:
 10186  016ADA  0101               	movlb	1	; () banked
 10187  016ADC  137C               	iorwf	EnableInternalADC@config& (0+255),f,b
 10188                           
 10189                           ;ADC.c: 96: }
 10190  016ADE  D002               	goto	l8842
 10191  016AE0                     l8840:
 10192                           
 10193                           ; BSR set to: 1
 10194                           ;ADC.c: 97: else
 10195                           ;ADC.c: 98: {
 10196                           ;ADC.c: 99: config |= 0b00000100;
 10197  016AE0  0101               	movlb	1	; () banked
 10198  016AE2  857C               	bsf	EnableInternalADC@config& (0+255),2,b
 10199  016AE4                     l8842:
 10200                           
 10201                           ; BSR set to: 1
 10202                           ;ADC.c: 100: }
 10203                           ;ADC.c: 102: ADCON1 = config;
 10204  016AE4  C17C  FFC1         	movff	EnableInternalADC@config,4033	;volatile
 10205                           
 10206                           ; BSR set to: 1
 10207  016AE8  0012               	return	
 10208  016AEA                     __end_of_EnableInternalADC:
 10209                           	opt stack 0
 10210                           tblptru	equ	0xFF8
 10211                           tblptrh	equ	0xFF7
 10212                           tblptrl	equ	0xFF6
 10213                           tablat	equ	0xFF5
 10214                           prodl	equ	0xFF3
 10215                           intcon	equ	0xFF2
 10216                           postinc0	equ	0xFEE
 10217                           wreg	equ	0xFE8
 10218                           postdec1	equ	0xFE5
 10219                           fsr1l	equ	0xFE1
 10220                           status	equ	0xFD8
 10221                           
 10222 ;; *************** function _ContrastPWM_init *****************
 10223 ;; Defined at:
 10224 ;;		line 81 in file "PWM.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;		None
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;		None               void
 10231 ;; Registers used:
 10232 ;;		wreg, status,2, status,0, cstack
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10242 ;;Total ram usage:        0 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:    9
 10245 ;; This function calls:
 10246 ;;		_SetDuty
 10247 ;; This function is called by:
 10248 ;;		_main
 10249 ;; This function uses a non-reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text13
 10253  000736                     __ptext13:
 10254                           	opt stack 0
 10255  000736                     _ContrastPWM_init:
 10256                           	opt stack 20
 10257                           
 10258                           ;PWM.c: 85: SetDuty(0);
 10259                           
 10260                           ; BSR set to: 1
 10261                           ;incstack = 0
 10262  000736  0E00               	movlw	0
 10263  000738  ECF7  F0B2         	call	_SetDuty
 10264                           
 10265                           ;PWM.c: 86: ECCP1CON |= 0b00001100;
 10266  00073C  0E0C               	movlw	12
 10267  00073E  12BA               	iorwf	4026,f,c	;volatile
 10268  000740  0012               	return	
 10269  000742                     __end_of_ContrastPWM_init:
 10270                           	opt stack 0
 10271                           tblptru	equ	0xFF8
 10272                           tblptrh	equ	0xFF7
 10273                           tblptrl	equ	0xFF6
 10274                           tablat	equ	0xFF5
 10275                           prodl	equ	0xFF3
 10276                           intcon	equ	0xFF2
 10277                           postinc0	equ	0xFEE
 10278                           wreg	equ	0xFE8
 10279                           postdec1	equ	0xFE5
 10280                           fsr1l	equ	0xFE1
 10281                           status	equ	0xFD8
 10282                           
 10283 ;; *************** function _ConfigureOscillator *****************
 10284 ;; Defined at:
 10285 ;;		line 52 in file "system.c"
 10286 ;; Parameters:    Size  Location     Type
 10287 ;;		None
 10288 ;; Auto vars:     Size  Location     Type
 10289 ;;		None
 10290 ;; Return value:  Size  Location     Type
 10291 ;;		None               void
 10292 ;; Registers used:
 10293 ;;		None
 10294 ;; Tracked objects:
 10295 ;;		On entry : 0/0
 10296 ;;		On exit  : 0/0
 10297 ;;		Unchanged: 0/0
 10298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10303 ;;Total ram usage:        0 bytes
 10304 ;; Hardware stack levels used:    1
 10305 ;; Hardware stack levels required when called:    6
 10306 ;; This function calls:
 10307 ;;		Nothing
 10308 ;; This function is called by:
 10309 ;;		_main
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text14
 10314  017CFA                     __ptext14:
 10315                           	opt stack 0
 10316  017CFA                     _ConfigureOscillator:
 10317                           	opt stack 23
 10318  017CFA                     l201:
 10319  017CFA  B6D3               	btfsc	4051,3,c	;volatile
 10320  017CFC  0012               	return	
 10321  017CFE  D7FD               	goto	l201
 10322  017D00                     __end_of_ConfigureOscillator:
 10323                           	opt stack 0
 10324                           tblptru	equ	0xFF8
 10325                           tblptrh	equ	0xFF7
 10326                           tblptrl	equ	0xFF6
 10327                           tablat	equ	0xFF5
 10328                           prodl	equ	0xFF3
 10329                           intcon	equ	0xFF2
 10330                           postinc0	equ	0xFEE
 10331                           wreg	equ	0xFE8
 10332                           postdec1	equ	0xFE5
 10333                           fsr1l	equ	0xFE1
 10334                           status	equ	0xFD8
 10335                           
 10336 ;; *************** function _Command *****************
 10337 ;; Defined at:
 10338 ;;		line 67 in file "StringCommand.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  Input           2   90[BANK1 ] PTR unsigned char 
 10341 ;;		 -> Rxdata(100), 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  buf           200    0[BANK5 ] unsigned char [200]
 10344 ;;  tempLONG        4  222[BANK5 ] long 
 10345 ;;  PARITYtemp      4  212[BANK5 ] unsigned long 
 10346 ;;  BAUDtemp        4  206[BANK5 ] unsigned long 
 10347 ;;  duty            2  220[BANK5 ] int 
 10348 ;;  channel         2  218[BANK5 ] int 
 10349 ;;  contrast        2  216[BANK5 ] int 
 10350 ;;  RTC_Battery_    2  210[BANK5 ] unsigned int 
 10351 ;;  RTC_Battery_    2  204[BANK5 ] unsigned int 
 10352 ;;  RTC_Battery_    2  202[BANK5 ] unsigned int 
 10353 ;;  ADC_Value       2  200[BANK5 ] unsigned int 
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      unsigned char 
 10356 ;; Registers used:
 10357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10363 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;      Locals:         0       0       0       0       0       0     226       0       0       0       0       0       
      +0       0
 10365 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Totals:         0       0       6       0       0       0     226       0       0       0       0       0       
      +0       0
 10367 ;;Total ram usage:      232 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:   11
 10370 ;; This function calls:
 10371 ;;		_GetBaud
 10372 ;;		_GetEnteredNumber
 10373 ;;		_ISNUMBER
 10374 ;;		_InternalADC_Read
 10375 ;;		_LCDPrintString
 10376 ;;		_LCD_Scroll
 10377 ;;		_LCDdisplayFeedback
 10378 ;;		_Parse_Time
 10379 ;;		_READ_RTC_TIME
 10380 ;;		_RemoveSpaces
 10381 ;;		_SET_RTC_TIME
 10382 ;;		_Send_Config1
 10383 ;;		_Send_Config2
 10384 ;;		_SetBaud
 10385 ;;		_SetContrast
 10386 ;;		_SetDuty
 10387 ;;		_SetLCDcursor
 10388 ;;		_SprintDate
 10389 ;;		_StartsWith
 10390 ;;		_StringAddEqual
 10391 ;;		_StringContains
 10392 ;;		_StringMatch
 10393 ;;		_UARTstring
 10394 ;;		___ftdiv
 10395 ;;		___ftmul
 10396 ;;		___fttol
 10397 ;;		___lwmod
 10398 ;;		___lwtoft
 10399 ;;		_cleanBuffer
 10400 ;;		_delayUS
 10401 ;;		_lowercase
 10402 ;;		_sprintf
 10403 ;; This function is called by:
 10404 ;;		_main
 10405 ;; This function uses a non-reentrant model
 10406 ;;
 10407                           
 10408                           	psect	text15
 10409  010000                     __ptext15:
 10410                           	opt stack 0
 10411  010000                     _Command:
 10412                           	opt stack 18
 10413                           
 10414                           ;StringCommand.c: 69: int channel = 20;
 10415                           
 10416                           ;incstack = 0
 10417  010000  0E00               	movlw	0
 10418  010002  0105               	movlb	5	; () banked
 10419  010004  6FDB               	movwf	(Command@channel+1)& (0+255),b
 10420  010006  0E14               	movlw	20
 10421  010008  0105               	movlb	5	; () banked
 10422  01000A  6FDA               	movwf	Command@channel& (0+255),b
 10423                           
 10424                           ;StringCommand.c: 70: unsigned int ADC_Value = 0;
 10425  01000C  0E00               	movlw	0
 10426  01000E  0105               	movlb	5	; () banked
 10427  010010  6FC9               	movwf	(Command@ADC_Value+1)& (0+255),b
 10428  010012  0E00               	movlw	0
 10429  010014  0105               	movlb	5	; () banked
 10430  010016  6FC8               	movwf	Command@ADC_Value& (0+255),b
 10431                           
 10432                           ;StringCommand.c: 71: unsigned int RTC_Battery_Value =0;
 10433  010018  0E00               	movlw	0
 10434  01001A  0105               	movlb	5	; () banked
 10435  01001C  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 10436  01001E  0E00               	movlw	0
 10437  010020  0105               	movlb	5	; () banked
 10438  010022  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 10439                           
 10440                           ;StringCommand.c: 72: unsigned int RTC_Battery_Value_HIGH_decimal =0;
 10441  010024  0E00               	movlw	0
 10442  010026  0105               	movlb	5	; () banked
 10443  010028  6FCD               	movwf	(Command@RTC_Battery_Value_HIGH_decimal+1)& (0+255),b
 10444  01002A  0E00               	movlw	0
 10445  01002C  0105               	movlb	5	; () banked
 10446  01002E  6FCC               	movwf	Command@RTC_Battery_Value_HIGH_decimal& (0+255),b
 10447                           
 10448                           ;StringCommand.c: 73: unsigned int RTC_Battery_Value_LOW_decimal =0;
 10449  010030  0E00               	movlw	0
 10450  010032  0105               	movlb	5	; () banked
 10451  010034  6FD3               	movwf	(Command@RTC_Battery_Value_LOW_decimal+1)& (0+255),b
 10452  010036  0E00               	movlw	0
 10453  010038  0105               	movlb	5	; () banked
 10454  01003A  6FD2               	movwf	Command@RTC_Battery_Value_LOW_decimal& (0+255),b
 10455                           
 10456                           ;StringCommand.c: 74: int duty = 0;
 10457  01003C  0E00               	movlw	0
 10458  01003E  0105               	movlb	5	; () banked
 10459  010040  6FDD               	movwf	(Command@duty+1)& (0+255),b
 10460  010042  0E00               	movlw	0
 10461  010044  0105               	movlb	5	; () banked
 10462  010046  6FDC               	movwf	Command@duty& (0+255),b
 10463                           
 10464                           ;StringCommand.c: 75: long tempLONG;
 10465                           ;StringCommand.c: 76: int contrast = 0;
 10466  010048  0E00               	movlw	0
 10467  01004A  0105               	movlb	5	; () banked
 10468  01004C  6FD9               	movwf	(Command@contrast+1)& (0+255),b
 10469  01004E  0E00               	movlw	0
 10470  010050  0105               	movlb	5	; () banked
 10471  010052  6FD8               	movwf	Command@contrast& (0+255),b
 10472                           
 10473                           ;StringCommand.c: 77: unsigned char buf[200];
 10474                           ;StringCommand.c: 78: unsigned long BAUDtemp = 0;
 10475  010054  0E00               	movlw	0
 10476  010056  0105               	movlb	5	; () banked
 10477  010058  6FCE               	movwf	Command@BAUDtemp& (0+255),b
 10478  01005A  0E00               	movlw	0
 10479  01005C  0105               	movlb	5	; () banked
 10480  01005E  6FCF               	movwf	(Command@BAUDtemp+1)& (0+255),b
 10481  010060  0E00               	movlw	0
 10482  010062  0105               	movlb	5	; () banked
 10483  010064  6FD0               	movwf	(Command@BAUDtemp+2)& (0+255),b
 10484  010066  0E00               	movlw	0
 10485  010068  0105               	movlb	5	; () banked
 10486  01006A  6FD1               	movwf	(Command@BAUDtemp+3)& (0+255),b
 10487                           
 10488                           ;StringCommand.c: 79: unsigned long PARITYtemp = 0;
 10489  01006C  0E00               	movlw	0
 10490  01006E  0105               	movlb	5	; () banked
 10491  010070  6FD4               	movwf	Command@PARITYtemp& (0+255),b
 10492  010072  0E00               	movlw	0
 10493  010074  0105               	movlb	5	; () banked
 10494  010076  6FD5               	movwf	(Command@PARITYtemp+1)& (0+255),b
 10495  010078  0E00               	movlw	0
 10496  01007A  0105               	movlb	5	; () banked
 10497  01007C  6FD6               	movwf	(Command@PARITYtemp+2)& (0+255),b
 10498  01007E  0E00               	movlw	0
 10499  010080  0105               	movlb	5	; () banked
 10500  010082  6FD7               	movwf	(Command@PARITYtemp+3)& (0+255),b
 10501                           
 10502                           ; BSR set to: 5
 10503                           ;StringCommand.c: 81: UARTstring("\r\n\n");
 10504  010084  0EEF               	movlw	high (STR_245+65)
 10505  010086  0101               	movlb	1	; () banked
 10506  010088  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10507  01008A  0E13               	movlw	low (STR_245+65)
 10508  01008C  0101               	movlb	1	; () banked
 10509  01008E  6F87               	movwf	UARTstring@data& (0+255),b
 10510  010090  ECD0  F0B4         	call	_UARTstring	;wreg free
 10511                           
 10512                           ;StringCommand.c: 82: lowercase(Input);
 10513  010094  0101               	movlb	1	; () banked
 10514  010096  C1C9  F17D         	movff	Command@Input+1,lowercase@Input+1
 10515  01009A  0101               	movlb	1	; () banked
 10516  01009C  C1C8  F17C         	movff	Command@Input,lowercase@Input
 10517  0100A0  ECD2  F0B7         	call	_lowercase	;wreg free
 10518                           
 10519                           ;StringCommand.c: 83: RemoveSpaces(Input);
 10520  0100A4  0101               	movlb	1	; () banked
 10521  0100A6  C1C9  F18C         	movff	Command@Input+1,RemoveSpaces@This+1
 10522  0100AA  0101               	movlb	1	; () banked
 10523  0100AC  C1C8  F18B         	movff	Command@Input,RemoveSpaces@This
 10524  0100B0  EC1E  F0B4         	call	_RemoveSpaces	;wreg free
 10525                           
 10526                           ;StringCommand.c: 85: if(StringMatch(Input, ">"))
 10527  0100B4  0101               	movlb	1	; () banked
 10528  0100B6  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 10529  0100BA  0101               	movlb	1	; () banked
 10530  0100BC  C1C8  F17C         	movff	Command@Input,StringMatch@This
 10531  0100C0  0EF4               	movlw	high (STR_21+27)
 10532  0100C2  0101               	movlb	1	; () banked
 10533  0100C4  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10534  0100C6  0ED1               	movlw	low (STR_21+27)
 10535  0100C8  0101               	movlb	1	; () banked
 10536  0100CA  6F7E               	movwf	StringMatch@That& (0+255),b
 10537  0100CC  EC28  F0BA         	call	_StringMatch	;wreg free
 10538  0100D0  0900               	iorlw	0
 10539  0100D2  B4D8               	btfsc	status,2,c
 10540  0100D4  D002               	goto	l12864
 10541                           
 10542                           ;StringCommand.c: 86: {
 10543                           ;StringCommand.c: 87: return 0;
 10544  0100D6  0E00               	movlw	0
 10545  0100D8  0012               	return	
 10546  0100DA                     l12864:
 10547                           
 10548                           ;StringCommand.c: 89: else if (StartsWith(Input, "led"))
 10549  0100DA  0101               	movlb	1	; () banked
 10550  0100DC  C1C9  F17D         	movff	Command@Input+1,StartsWith@This+1
 10551  0100E0  0101               	movlb	1	; () banked
 10552  0100E2  C1C8  F17C         	movff	Command@Input,StartsWith@This
 10553  0100E6  0EFF               	movlw	high (STR_160+3)
 10554  0100E8  0101               	movlb	1	; () banked
 10555  0100EA  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 10556  0100EC  0E71               	movlw	low (STR_160+3)
 10557  0100EE  0101               	movlb	1	; () banked
 10558  0100F0  6F7E               	movwf	StartsWith@That& (0+255),b
 10559  0100F2  EC64  F0B6         	call	_StartsWith	;wreg free
 10560  0100F6  0900               	iorlw	0
 10561  0100F8  B4D8               	btfsc	status,2,c
 10562  0100FA  D14F               	goto	l12928
 10563                           
 10564                           ;StringCommand.c: 90: {
 10565                           ;StringCommand.c: 91: if (!StringContains(Input, "?"))
 10566  0100FC  0101               	movlb	1	; () banked
 10567  0100FE  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 10568  010102  0101               	movlb	1	; () banked
 10569  010104  C1C8  F17C         	movff	Command@Input,StringContains@This
 10570  010108  0EFA               	movlw	high (STR_83+14)
 10571  01010A  0101               	movlb	1	; () banked
 10572  01010C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 10573  01010E  0E17               	movlw	low (STR_83+14)
 10574  010110  0101               	movlb	1	; () banked
 10575  010112  6F7E               	movwf	StringContains@That& (0+255),b
 10576  010114  ECE9  F0B9         	call	_StringContains	;wreg free
 10577  010118  0900               	iorlw	0
 10578  01011A  A4D8               	btfss	status,2,c
 10579  01011C  D0EC               	goto	l12918
 10580                           
 10581                           ;StringCommand.c: 92: {
 10582                           ;StringCommand.c: 93: if (StringMatch(Input, "led0"))
 10583  01011E  0101               	movlb	1	; () banked
 10584  010120  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 10585  010124  0101               	movlb	1	; () banked
 10586  010126  C1C8  F17C         	movff	Command@Input,StringMatch@This
 10587  01012A  0EFF               	movlw	high STR_40
 10588  01012C  0101               	movlb	1	; () banked
 10589  01012E  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10590  010130  0EBD               	movlw	low STR_40
 10591  010132  0101               	movlb	1	; () banked
 10592  010134  6F7E               	movwf	StringMatch@That& (0+255),b
 10593  010136  EC28  F0BA         	call	_StringMatch	;wreg free
 10594  01013A  0900               	iorlw	0
 10595  01013C  B4D8               	btfsc	status,2,c
 10596  01013E  D014               	goto	l12876
 10597                           
 10598                           ;StringCommand.c: 94: {
 10599                           ;StringCommand.c: 95: LATD ^= 0b00000010;
 10600  010140  0E02               	movlw	2
 10601  010142  1A8C               	xorwf	3980,f,c	;volatile
 10602                           
 10603                           ;StringCommand.c: 96: UARTstring("LED0 Toggled");
 10604  010144  0EFD               	movlw	high STR_41
 10605  010146  0101               	movlb	1	; () banked
 10606  010148  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10607  01014A  0E21               	movlw	low STR_41
 10608  01014C  0101               	movlb	1	; () banked
 10609  01014E  6F87               	movwf	UARTstring@data& (0+255),b
 10610  010150  ECD0  F0B4         	call	_UARTstring	;wreg free
 10611                           
 10612                           ;StringCommand.c: 97: LCDdisplayFeedback("LED0 Toggled");
 10613  010154  0EFD               	movlw	high STR_41
 10614  010156  0101               	movlb	1	; () banked
 10615  010158  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10616  01015A  0E21               	movlw	low STR_41
 10617  01015C  0101               	movlb	1	; () banked
 10618  01015E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10619  010160  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 10620                           
 10621                           ;StringCommand.c: 98: }
 10622  010164  EFBA  F094         	goto	l619
 10623  010168                     l12876:
 10624                           
 10625                           ;StringCommand.c: 99: else if (StringMatch(Input, "led0=on"))
 10626  010168  0101               	movlb	1	; () banked
 10627  01016A  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 10628  01016E  0101               	movlb	1	; () banked
 10629  010170  C1C8  F17C         	movff	Command@Input,StringMatch@This
 10630  010174  0EFF               	movlw	high STR_43
 10631  010176  0101               	movlb	1	; () banked
 10632  010178  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10633  01017A  0E2A               	movlw	low STR_43
 10634  01017C  0101               	movlb	1	; () banked
 10635  01017E  6F7E               	movwf	StringMatch@That& (0+255),b
 10636  010180  EC28  F0BA         	call	_StringMatch	;wreg free
 10637  010184  0900               	iorlw	0
 10638  010186  B4D8               	btfsc	status,2,c
 10639  010188  D013               	goto	l12884
 10640                           
 10641                           ;StringCommand.c: 100: {
 10642                           ;StringCommand.c: 101: LATD |= 0b00000010;
 10643  01018A  828C               	bsf	3980,1,c	;volatile
 10644                           
 10645                           ;StringCommand.c: 102: UARTstring("LED0 On");
 10646  01018C  0EFF               	movlw	high STR_44
 10647  01018E  0101               	movlb	1	; () banked
 10648  010190  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10649  010192  0E1A               	movlw	low STR_44
 10650  010194  0101               	movlb	1	; () banked
 10651  010196  6F87               	movwf	UARTstring@data& (0+255),b
 10652  010198  ECD0  F0B4         	call	_UARTstring	;wreg free
 10653                           
 10654                           ;StringCommand.c: 103: LCDdisplayFeedback("LED0 On");
 10655  01019C  0EFF               	movlw	high STR_44
 10656  01019E  0101               	movlb	1	; () banked
 10657  0101A0  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10658  0101A2  0E1A               	movlw	low STR_44
 10659  0101A4  0101               	movlb	1	; () banked
 10660  0101A6  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10661  0101A8  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 10662                           
 10663                           ;StringCommand.c: 104: }
 10664  0101AC  EFBA  F094         	goto	l619
 10665  0101B0                     l12884:
 10666                           
 10667                           ;StringCommand.c: 105: else if (StringMatch(Input, "led0=off"))
 10668  0101B0  0101               	movlb	1	; () banked
 10669  0101B2  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 10670  0101B6  0101               	movlb	1	; () banked
 10671  0101B8  C1C8  F17C         	movff	Command@Input,StringMatch@This
 10672  0101BC  0EFE               	movlw	high STR_46
 10673  0101BE  0101               	movlb	1	; () banked
 10674  0101C0  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10675  0101C2  0EB3               	movlw	low STR_46
 10676  0101C4  0101               	movlb	1	; () banked
 10677  0101C6  6F7E               	movwf	StringMatch@That& (0+255),b
 10678  0101C8  EC28  F0BA         	call	_StringMatch	;wreg free
 10679  0101CC  0900               	iorlw	0
 10680  0101CE  B4D8               	btfsc	status,2,c
 10681  0101D0  D013               	goto	l12892
 10682                           
 10683                           ;StringCommand.c: 106: {
 10684                           ;StringCommand.c: 107: LATD &= ~0b00000010;
 10685  0101D2  928C               	bcf	3980,1,c	;volatile
 10686                           
 10687                           ;StringCommand.c: 108: UARTstring("LED0 Off");
 10688  0101D4  0EFE               	movlw	high STR_47
 10689  0101D6  0101               	movlb	1	; () banked
 10690  0101D8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10691  0101DA  0EA1               	movlw	low STR_47
 10692  0101DC  0101               	movlb	1	; () banked
 10693  0101DE  6F87               	movwf	UARTstring@data& (0+255),b
 10694  0101E0  ECD0  F0B4         	call	_UARTstring	;wreg free
 10695                           
 10696                           ;StringCommand.c: 109: LCDdisplayFeedback("LED0 Off");
 10697  0101E4  0EFE               	movlw	high STR_47
 10698  0101E6  0101               	movlb	1	; () banked
 10699  0101E8  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10700  0101EA  0EA1               	movlw	low STR_47
 10701  0101EC  0101               	movlb	1	; () banked
 10702  0101EE  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10703  0101F0  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 10704                           
 10705                           ;StringCommand.c: 110: }
 10706  0101F4  EFBA  F094         	goto	l619
 10707  0101F8                     l12892:
 10708                           
 10709                           ;StringCommand.c: 111: else if (StringMatch(Input, "led1"))
 10710  0101F8  0101               	movlb	1	; () banked
 10711  0101FA  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 10712  0101FE  0101               	movlb	1	; () banked
 10713  010200  C1C8  F17C         	movff	Command@Input,StringMatch@This
 10714  010204  0EFF               	movlw	high STR_49
 10715  010206  0101               	movlb	1	; () banked
 10716  010208  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10717  01020A  0EC7               	movlw	low STR_49
 10718  01020C  0101               	movlb	1	; () banked
 10719  01020E  6F7E               	movwf	StringMatch@That& (0+255),b
 10720  010210  EC28  F0BA         	call	_StringMatch	;wreg free
 10721  010214  0900               	iorlw	0
 10722  010216  B4D8               	btfsc	status,2,c
 10723  010218  D014               	goto	l12900
 10724                           
 10725                           ;StringCommand.c: 112: {
 10726                           ;StringCommand.c: 113: LATD ^= 0b00000100;
 10727  01021A  0E04               	movlw	4
 10728  01021C  1A8C               	xorwf	3980,f,c	;volatile
 10729                           
 10730                           ;StringCommand.c: 114: UARTstring("LED1 Toggled");
 10731  01021E  0EFD               	movlw	high STR_50
 10732  010220  0101               	movlb	1	; () banked
 10733  010222  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10734  010224  0E2E               	movlw	low STR_50
 10735  010226  0101               	movlb	1	; () banked
 10736  010228  6F87               	movwf	UARTstring@data& (0+255),b
 10737  01022A  ECD0  F0B4         	call	_UARTstring	;wreg free
 10738                           
 10739                           ;StringCommand.c: 115: LCDdisplayFeedback("LED1 Toggled");
 10740  01022E  0EFD               	movlw	high STR_50
 10741  010230  0101               	movlb	1	; () banked
 10742  010232  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10743  010234  0E2E               	movlw	low STR_50
 10744  010236  0101               	movlb	1	; () banked
 10745  010238  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10746  01023A  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 10747                           
 10748                           ;StringCommand.c: 116: }
 10749  01023E  EFBA  F094         	goto	l619
 10750  010242                     l12900:
 10751                           
 10752                           ;StringCommand.c: 117: else if (StringMatch(Input, "led1=on"))
 10753  010242  0101               	movlb	1	; () banked
 10754  010244  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 10755  010248  0101               	movlb	1	; () banked
 10756  01024A  C1C8  F17C         	movff	Command@Input,StringMatch@This
 10757  01024E  0EFF               	movlw	high STR_52
 10758  010250  0101               	movlb	1	; () banked
 10759  010252  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10760  010254  0E32               	movlw	low STR_52
 10761  010256  0101               	movlb	1	; () banked
 10762  010258  6F7E               	movwf	StringMatch@That& (0+255),b
 10763  01025A  EC28  F0BA         	call	_StringMatch	;wreg free
 10764  01025E  0900               	iorlw	0
 10765  010260  B4D8               	btfsc	status,2,c
 10766  010262  D013               	goto	l12908
 10767                           
 10768                           ;StringCommand.c: 118: {
 10769                           ;StringCommand.c: 119: LATD |= 0b00000100;
 10770  010264  848C               	bsf	3980,2,c	;volatile
 10771                           
 10772                           ;StringCommand.c: 120: UARTstring("LED1 On");
 10773  010266  0EFF               	movlw	high STR_53
 10774  010268  0101               	movlb	1	; () banked
 10775  01026A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10776  01026C  0E22               	movlw	low STR_53
 10777  01026E  0101               	movlb	1	; () banked
 10778  010270  6F87               	movwf	UARTstring@data& (0+255),b
 10779  010272  ECD0  F0B4         	call	_UARTstring	;wreg free
 10780                           
 10781                           ;StringCommand.c: 121: LCDdisplayFeedback("LED1 On");
 10782  010276  0EFF               	movlw	high STR_53
 10783  010278  0101               	movlb	1	; () banked
 10784  01027A  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10785  01027C  0E22               	movlw	low STR_53
 10786  01027E  0101               	movlb	1	; () banked
 10787  010280  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10788  010282  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 10789                           
 10790                           ;StringCommand.c: 122: }
 10791  010286  EFBA  F094         	goto	l619
 10792  01028A                     l12908:
 10793                           
 10794                           ;StringCommand.c: 123: else if (StringMatch(Input, "led1=off"))
 10795  01028A  0101               	movlb	1	; () banked
 10796  01028C  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 10797  010290  0101               	movlb	1	; () banked
 10798  010292  C1C8  F17C         	movff	Command@Input,StringMatch@This
 10799  010296  0EFE               	movlw	high STR_55
 10800  010298  0101               	movlb	1	; () banked
 10801  01029A  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10802  01029C  0EBC               	movlw	low STR_55
 10803  01029E  0101               	movlb	1	; () banked
 10804  0102A0  6F7E               	movwf	StringMatch@That& (0+255),b
 10805  0102A2  EC28  F0BA         	call	_StringMatch	;wreg free
 10806  0102A6  0900               	iorlw	0
 10807  0102A8  B4D8               	btfsc	status,2,c
 10808  0102AA  D013               	goto	l12916
 10809                           
 10810                           ;StringCommand.c: 124: {
 10811                           ;StringCommand.c: 125: LATD &= ~0b00000100;
 10812  0102AC  948C               	bcf	3980,2,c	;volatile
 10813                           
 10814                           ;StringCommand.c: 126: UARTstring("LED1 Off");
 10815  0102AE  0EFE               	movlw	high STR_56
 10816  0102B0  0101               	movlb	1	; () banked
 10817  0102B2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10818  0102B4  0EAA               	movlw	low STR_56
 10819  0102B6  0101               	movlb	1	; () banked
 10820  0102B8  6F87               	movwf	UARTstring@data& (0+255),b
 10821  0102BA  ECD0  F0B4         	call	_UARTstring	;wreg free
 10822                           
 10823                           ;StringCommand.c: 127: LCDdisplayFeedback("LED1 Off");
 10824  0102BE  0EFE               	movlw	high STR_56
 10825  0102C0  0101               	movlb	1	; () banked
 10826  0102C2  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10827  0102C4  0EAA               	movlw	low STR_56
 10828  0102C6  0101               	movlb	1	; () banked
 10829  0102C8  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10830  0102CA  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 10831                           
 10832                           ;StringCommand.c: 128: }
 10833  0102CE  EFBA  F094         	goto	l619
 10834  0102D2                     l12916:
 10835                           
 10836                           ;StringCommand.c: 129: else
 10837                           ;StringCommand.c: 130: {
 10838                           ;StringCommand.c: 131: UARTstring("LED What???");
 10839  0102D2  0EFA               	movlw	high (STR_173+4)
 10840  0102D4  0101               	movlb	1	; () banked
 10841  0102D6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10842  0102D8  0E3D               	movlw	low (STR_173+4)
 10843  0102DA  0101               	movlb	1	; () banked
 10844  0102DC  6F87               	movwf	UARTstring@data& (0+255),b
 10845  0102DE  ECD0  F0B4         	call	_UARTstring	;wreg free
 10846                           
 10847                           ;StringCommand.c: 132: LCDdisplayFeedback("LED What???");
 10848  0102E2  0EFA               	movlw	high (STR_173+4)
 10849  0102E4  0101               	movlb	1	; () banked
 10850  0102E6  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 10851  0102E8  0E3D               	movlw	low (STR_173+4)
 10852  0102EA  0101               	movlb	1	; () banked
 10853  0102EC  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 10854  0102EE  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 10855  0102F2  EFBA  F094         	goto	l619
 10856  0102F6                     l12918:
 10857                           
 10858                           ;StringCommand.c: 135: else
 10859                           ;StringCommand.c: 136: {
 10860                           ;StringCommand.c: 137: UARTstring("LED Help Menu\r\n\n");
 10861  0102F6  0EF8               	movlw	high STR_60
 10862  0102F8  0101               	movlb	1	; () banked
 10863  0102FA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10864  0102FC  0EFB               	movlw	low STR_60
 10865  0102FE  0101               	movlb	1	; () banked
 10866  010300  6F87               	movwf	UARTstring@data& (0+255),b
 10867  010302  ECD0  F0B4         	call	_UARTstring	;wreg free
 10868                           
 10869                           ;StringCommand.c: 138: UARTstring("Devices:\r\n");
 10870  010306  0EFD               	movlw	high STR_61
 10871  010308  0101               	movlb	1	; () banked
 10872  01030A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10873  01030C  0EB7               	movlw	low STR_61
 10874  01030E  0101               	movlb	1	; () banked
 10875  010310  6F87               	movwf	UARTstring@data& (0+255),b
 10876  010312  ECD0  F0B4         	call	_UARTstring	;wreg free
 10877                           
 10878                           ;StringCommand.c: 139: UARTstring("LED0\r\n");
 10879  010316  0EFF               	movlw	high STR_62
 10880  010318  0101               	movlb	1	; () banked
 10881  01031A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10882  01031C  0E60               	movlw	low STR_62
 10883  01031E  0101               	movlb	1	; () banked
 10884  010320  6F87               	movwf	UARTstring@data& (0+255),b
 10885  010322  ECD0  F0B4         	call	_UARTstring	;wreg free
 10886                           
 10887                           ;StringCommand.c: 140: UARTstring("LED1\r\n\n");
 10888  010326  0EFE               	movlw	high STR_63
 10889  010328  0101               	movlb	1	; () banked
 10890  01032A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10891  01032C  0EF2               	movlw	low STR_63
 10892  01032E  0101               	movlb	1	; () banked
 10893  010330  6F87               	movwf	UARTstring@data& (0+255),b
 10894  010332  ECD0  F0B4         	call	_UARTstring	;wreg free
 10895                           
 10896                           ;StringCommand.c: 141: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 10897  010336  0EEF               	movlw	high STR_64
 10898  010338  0101               	movlb	1	; () banked
 10899  01033A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10900  01033C  0E17               	movlw	low STR_64
 10901  01033E  0101               	movlb	1	; () banked
 10902  010340  6F87               	movwf	UARTstring@data& (0+255),b
 10903  010342  ECD0  F0B4         	call	_UARTstring	;wreg free
 10904                           
 10905                           ;StringCommand.c: 142: UARTstring("i.e. LED1 = On\r\n");
 10906  010346  0EF9               	movlw	high STR_65
 10907  010348  0101               	movlb	1	; () banked
 10908  01034A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 10909  01034C  0E2E               	movlw	low STR_65
 10910  01034E  0101               	movlb	1	; () banked
 10911  010350  6F87               	movwf	UARTstring@data& (0+255),b
 10912  010352  ECD0  F0B4         	call	_UARTstring	;wreg free
 10913                           
 10914                           ;StringCommand.c: 143: LCD_Scroll("LED Menu");
 10915  010356  0EFE               	movlw	high STR_66
 10916  010358  0101               	movlb	1	; () banked
 10917  01035A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10918  01035C  0EE0               	movlw	low STR_66
 10919  01035E  0101               	movlb	1	; () banked
 10920  010360  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 10921  010362  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 10922                           
 10923                           ;StringCommand.c: 144: LCD_Scroll("Devices:");
 10924  010366  0EFE               	movlw	high STR_67
 10925  010368  0101               	movlb	1	; () banked
 10926  01036A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10927  01036C  0E8F               	movlw	low STR_67
 10928  01036E  0101               	movlb	1	; () banked
 10929  010370  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 10930  010372  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 10931                           
 10932                           ;StringCommand.c: 145: LCD_Scroll("LED0");
 10933  010376  0EFF               	movlw	high STR_68
 10934  010378  0101               	movlb	1	; () banked
 10935  01037A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10936  01037C  0EB8               	movlw	low STR_68
 10937  01037E  0101               	movlb	1	; () banked
 10938  010380  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 10939  010382  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 10940                           
 10941                           ;StringCommand.c: 146: LCD_Scroll("LED1");
 10942  010386  0EFF               	movlw	high STR_69
 10943  010388  0101               	movlb	1	; () banked
 10944  01038A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 10945  01038C  0EC2               	movlw	low STR_69
 10946  01038E  0101               	movlb	1	; () banked
 10947  010390  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 10948  010392  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 10949  010396  EFBA  F094         	goto	l619
 10950  01039A                     l12928:
 10951                           
 10952                           ;StringCommand.c: 150: else if (StartsWith(Input, "livingroom"))
 10953  01039A  0101               	movlb	1	; () banked
 10954  01039C  C1C9  F17D         	movff	Command@Input+1,StartsWith@This+1
 10955  0103A0  0101               	movlb	1	; () banked
 10956  0103A2  C1C8  F17C         	movff	Command@Input,StartsWith@This
 10957  0103A6  0EFD               	movlw	high STR_70
 10958  0103A8  0101               	movlb	1	; () banked
 10959  0103AA  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 10960  0103AC  0EEE               	movlw	low STR_70
 10961  0103AE  0101               	movlb	1	; () banked
 10962  0103B0  6F7E               	movwf	StartsWith@That& (0+255),b
 10963  0103B2  EC64  F0B6         	call	_StartsWith	;wreg free
 10964  0103B6  0900               	iorlw	0
 10965  0103B8  B4D8               	btfsc	status,2,c
 10966  0103BA  D1D5               	goto	l12980
 10967                           
 10968                           ;StringCommand.c: 151: {
 10969                           ;StringCommand.c: 152: if (!StringContains(Input, "?"))
 10970  0103BC  0101               	movlb	1	; () banked
 10971  0103BE  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 10972  0103C2  0101               	movlb	1	; () banked
 10973  0103C4  C1C8  F17C         	movff	Command@Input,StringContains@This
 10974  0103C8  0EFA               	movlw	high (STR_83+14)
 10975  0103CA  0101               	movlb	1	; () banked
 10976  0103CC  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 10977  0103CE  0E17               	movlw	low (STR_83+14)
 10978  0103D0  0101               	movlb	1	; () banked
 10979  0103D2  6F7E               	movwf	StringContains@That& (0+255),b
 10980  0103D4  ECE9  F0B9         	call	_StringContains	;wreg free
 10981  0103D8  0900               	iorlw	0
 10982  0103DA  A4D8               	btfss	status,2,c
 10983  0103DC  D16A               	goto	l12970
 10984                           
 10985                           ;StringCommand.c: 153: {
 10986                           ;StringCommand.c: 154: if (StringMatch(Input, "livingroomlight=on") || StringMatch(Input
      +                          , "livingroomlight=off"))
 10987  0103DE  0101               	movlb	1	; () banked
 10988  0103E0  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 10989  0103E4  0101               	movlb	1	; () banked
 10990  0103E6  C1C8  F17C         	movff	Command@Input,StringMatch@This
 10991  0103EA  0EF7               	movlw	high STR_72
 10992  0103EC  0101               	movlb	1	; () banked
 10993  0103EE  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 10994  0103F0  0EED               	movlw	low STR_72
 10995  0103F2  0101               	movlb	1	; () banked
 10996  0103F4  6F7E               	movwf	StringMatch@That& (0+255),b
 10997  0103F6  EC28  F0BA         	call	_StringMatch	;wreg free
 10998  0103FA  0900               	iorlw	0
 10999  0103FC  A4D8               	btfss	status,2,c
 11000  0103FE  D011               	goto	l640
 11001  010400  0101               	movlb	1	; () banked
 11002  010402  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 11003  010406  0101               	movlb	1	; () banked
 11004  010408  C1C8  F17C         	movff	Command@Input,StringMatch@This
 11005  01040C  0EF7               	movlw	high STR_73
 11006  01040E  0101               	movlb	1	; () banked
 11007  010410  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11008  010412  0E79               	movlw	low STR_73
 11009  010414  0101               	movlb	1	; () banked
 11010  010416  6F7E               	movwf	StringMatch@That& (0+255),b
 11011  010418  EC28  F0BA         	call	_StringMatch	;wreg free
 11012  01041C  0900               	iorlw	0
 11013  01041E  B4D8               	btfsc	status,2,c
 11014  010420  D053               	goto	l12944
 11015  010422                     l640:
 11016                           
 11017                           ;StringCommand.c: 155: {
 11018                           ;StringCommand.c: 156: INTCONbits.GIE = 0;
 11019  010422  9EF2               	bcf	intcon,7,c	;volatile
 11020                           
 11021                           ;StringCommand.c: 157: Send_Config1(0b00000001, TXdataD);
 11022  010424  0EEE               	movlw	high _TXdataD
 11023  010426  0101               	movlb	1	; () banked
 11024  010428  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11025  01042A  0E65               	movlw	low _TXdataD
 11026  01042C  0101               	movlb	1	; () banked
 11027  01042E  6F87               	movwf	Send_Config1@data& (0+255),b
 11028  010430  0E01               	movlw	1
 11029  010432  EC6F  F0AF         	call	_Send_Config1
 11030                           
 11031                           ;StringCommand.c: 158: Send_Config1(0b00000001, TXdataD);
 11032  010436  0EEE               	movlw	high _TXdataD
 11033  010438  0101               	movlb	1	; () banked
 11034  01043A  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11035  01043C  0E65               	movlw	low _TXdataD
 11036  01043E  0101               	movlb	1	; () banked
 11037  010440  6F87               	movwf	Send_Config1@data& (0+255),b
 11038  010442  0E01               	movlw	1
 11039  010444  EC6F  F0AF         	call	_Send_Config1
 11040                           
 11041                           ;StringCommand.c: 159: Send_Config1(0b00000001, TXdataD);
 11042  010448  0EEE               	movlw	high _TXdataD
 11043  01044A  0101               	movlb	1	; () banked
 11044  01044C  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11045  01044E  0E65               	movlw	low _TXdataD
 11046  010450  0101               	movlb	1	; () banked
 11047  010452  6F87               	movwf	Send_Config1@data& (0+255),b
 11048  010454  0E01               	movlw	1
 11049  010456  EC6F  F0AF         	call	_Send_Config1
 11050                           
 11051                           ;StringCommand.c: 160: Send_Config1(0b00000001, TXdataD);
 11052  01045A  0EEE               	movlw	high _TXdataD
 11053  01045C  0101               	movlb	1	; () banked
 11054  01045E  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11055  010460  0E65               	movlw	low _TXdataD
 11056  010462  0101               	movlb	1	; () banked
 11057  010464  6F87               	movwf	Send_Config1@data& (0+255),b
 11058  010466  0E01               	movlw	1
 11059  010468  EC6F  F0AF         	call	_Send_Config1
 11060                           
 11061                           ;StringCommand.c: 161: Send_Config1(0b00000001, TXdataD);
 11062  01046C  0EEE               	movlw	high _TXdataD
 11063  01046E  0101               	movlb	1	; () banked
 11064  010470  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11065  010472  0E65               	movlw	low _TXdataD
 11066  010474  0101               	movlb	1	; () banked
 11067  010476  6F87               	movwf	Send_Config1@data& (0+255),b
 11068  010478  0E01               	movlw	1
 11069  01047A  EC6F  F0AF         	call	_Send_Config1
 11070                           
 11071                           ;StringCommand.c: 162: Send_Config1(0b00000001, TXdataD);
 11072  01047E  0EEE               	movlw	high _TXdataD
 11073  010480  0101               	movlb	1	; () banked
 11074  010482  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11075  010484  0E65               	movlw	low _TXdataD
 11076  010486  0101               	movlb	1	; () banked
 11077  010488  6F87               	movwf	Send_Config1@data& (0+255),b
 11078  01048A  0E01               	movlw	1
 11079  01048C  EC6F  F0AF         	call	_Send_Config1
 11080                           
 11081                           ;StringCommand.c: 163: Send_Config1(0b00000001, TXdataD);
 11082  010490  0EEE               	movlw	high _TXdataD
 11083  010492  0101               	movlb	1	; () banked
 11084  010494  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11085  010496  0E65               	movlw	low _TXdataD
 11086  010498  0101               	movlb	1	; () banked
 11087  01049A  6F87               	movwf	Send_Config1@data& (0+255),b
 11088  01049C  0E01               	movlw	1
 11089  01049E  EC6F  F0AF         	call	_Send_Config1
 11090                           
 11091                           ;StringCommand.c: 164: INTCONbits.GIE = 1;
 11092  0104A2  8EF2               	bsf	intcon,7,c	;volatile
 11093                           
 11094                           ;StringCommand.c: 165: UARTstring("Livingroom Light Toggled");
 11095  0104A4  0EF6               	movlw	high STR_74
 11096  0104A6  0101               	movlb	1	; () banked
 11097  0104A8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11098  0104AA  0E15               	movlw	low STR_74
 11099  0104AC  0101               	movlb	1	; () banked
 11100  0104AE  6F87               	movwf	UARTstring@data& (0+255),b
 11101  0104B0  ECD0  F0B4         	call	_UARTstring	;wreg free
 11102                           
 11103                           ;StringCommand.c: 166: LCDdisplayFeedback("LVNG Rm Lt TGLD");
 11104  0104B4  0EFA               	movlw	high STR_75
 11105  0104B6  0101               	movlb	1	; () banked
 11106  0104B8  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11107  0104BA  0E79               	movlw	low STR_75
 11108  0104BC  0101               	movlb	1	; () banked
 11109  0104BE  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11110  0104C0  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 11111                           
 11112                           ;StringCommand.c: 167: }
 11113  0104C4  EFBA  F094         	goto	l619
 11114  0104C8                     l12944:
 11115                           
 11116                           ;StringCommand.c: 168: else if (StringMatch(Input, "livingroomfan=on"))
 11117  0104C8  0101               	movlb	1	; () banked
 11118  0104CA  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 11119  0104CE  0101               	movlb	1	; () banked
 11120  0104D0  C1C8  F17C         	movff	Command@Input,StringMatch@This
 11121  0104D4  0EF9               	movlw	high STR_76
 11122  0104D6  0101               	movlb	1	; () banked
 11123  0104D8  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11124  0104DA  0E72               	movlw	low STR_76
 11125  0104DC  0101               	movlb	1	; () banked
 11126  0104DE  6F7E               	movwf	StringMatch@That& (0+255),b
 11127  0104E0  EC28  F0BA         	call	_StringMatch	;wreg free
 11128  0104E4  0900               	iorlw	0
 11129  0104E6  B4D8               	btfsc	status,2,c
 11130  0104E8  D05C               	goto	l12956
 11131                           
 11132                           ;StringCommand.c: 169: {
 11133                           ;StringCommand.c: 170: INTCONbits.GIE = 0;
 11134  0104EA  9EF2               	bcf	intcon,7,c	;volatile
 11135                           
 11136                           ;StringCommand.c: 171: Send_Config2(0b00000001, fanON);
 11137  0104EC  0EEE               	movlw	high _fanON
 11138  0104EE  0101               	movlb	1	; () banked
 11139  0104F0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11140  0104F2  0E55               	movlw	low _fanON
 11141  0104F4  0101               	movlb	1	; () banked
 11142  0104F6  6F87               	movwf	Send_Config2@data& (0+255),b
 11143  0104F8  0E01               	movlw	1
 11144  0104FA  EC5F  F0B8         	call	_Send_Config2
 11145                           
 11146                           ;StringCommand.c: 172: Send_Config2(0b00000001, fanON);
 11147  0104FE  0EEE               	movlw	high _fanON
 11148  010500  0101               	movlb	1	; () banked
 11149  010502  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11150  010504  0E55               	movlw	low _fanON
 11151  010506  0101               	movlb	1	; () banked
 11152  010508  6F87               	movwf	Send_Config2@data& (0+255),b
 11153  01050A  0E01               	movlw	1
 11154  01050C  EC5F  F0B8         	call	_Send_Config2
 11155                           
 11156                           ;StringCommand.c: 173: Send_Config2(0b00000001, fanON);
 11157  010510  0EEE               	movlw	high _fanON
 11158  010512  0101               	movlb	1	; () banked
 11159  010514  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11160  010516  0E55               	movlw	low _fanON
 11161  010518  0101               	movlb	1	; () banked
 11162  01051A  6F87               	movwf	Send_Config2@data& (0+255),b
 11163  01051C  0E01               	movlw	1
 11164  01051E  EC5F  F0B8         	call	_Send_Config2
 11165                           
 11166                           ;StringCommand.c: 174: Send_Config2(0b00000001, fanON);
 11167  010522  0EEE               	movlw	high _fanON
 11168  010524  0101               	movlb	1	; () banked
 11169  010526  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11170  010528  0E55               	movlw	low _fanON
 11171  01052A  0101               	movlb	1	; () banked
 11172  01052C  6F87               	movwf	Send_Config2@data& (0+255),b
 11173  01052E  0E01               	movlw	1
 11174  010530  EC5F  F0B8         	call	_Send_Config2
 11175                           
 11176                           ;StringCommand.c: 175: Send_Config2(0b00000001, fanON);
 11177  010534  0EEE               	movlw	high _fanON
 11178  010536  0101               	movlb	1	; () banked
 11179  010538  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11180  01053A  0E55               	movlw	low _fanON
 11181  01053C  0101               	movlb	1	; () banked
 11182  01053E  6F87               	movwf	Send_Config2@data& (0+255),b
 11183  010540  0E01               	movlw	1
 11184  010542  EC5F  F0B8         	call	_Send_Config2
 11185                           
 11186                           ;StringCommand.c: 176: Send_Config2(0b00000001, fanON);
 11187  010546  0EEE               	movlw	high _fanON
 11188  010548  0101               	movlb	1	; () banked
 11189  01054A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11190  01054C  0E55               	movlw	low _fanON
 11191  01054E  0101               	movlb	1	; () banked
 11192  010550  6F87               	movwf	Send_Config2@data& (0+255),b
 11193  010552  0E01               	movlw	1
 11194  010554  EC5F  F0B8         	call	_Send_Config2
 11195                           
 11196                           ;StringCommand.c: 177: Send_Config2(0b00000001, fanON);
 11197  010558  0EEE               	movlw	high _fanON
 11198  01055A  0101               	movlb	1	; () banked
 11199  01055C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11200  01055E  0E55               	movlw	low _fanON
 11201  010560  0101               	movlb	1	; () banked
 11202  010562  6F87               	movwf	Send_Config2@data& (0+255),b
 11203  010564  0E01               	movlw	1
 11204  010566  EC5F  F0B8         	call	_Send_Config2
 11205                           
 11206                           ;StringCommand.c: 178: Send_Config2(0b00000001, fanON);
 11207  01056A  0EEE               	movlw	high _fanON
 11208  01056C  0101               	movlb	1	; () banked
 11209  01056E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11210  010570  0E55               	movlw	low _fanON
 11211  010572  0101               	movlb	1	; () banked
 11212  010574  6F87               	movwf	Send_Config2@data& (0+255),b
 11213  010576  0E01               	movlw	1
 11214  010578  EC5F  F0B8         	call	_Send_Config2
 11215                           
 11216                           ;StringCommand.c: 179: INTCONbits.GIE = 1;
 11217  01057C  8EF2               	bsf	intcon,7,c	;volatile
 11218                           
 11219                           ;StringCommand.c: 180: UARTstring("Livingroom Fan On");
 11220  01057E  0EF8               	movlw	high STR_77
 11221  010580  0101               	movlb	1	; () banked
 11222  010582  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11223  010584  0E92               	movlw	low STR_77
 11224  010586  0101               	movlb	1	; () banked
 11225  010588  6F87               	movwf	UARTstring@data& (0+255),b
 11226  01058A  ECD0  F0B4         	call	_UARTstring	;wreg free
 11227                           
 11228                           ;StringCommand.c: 181: LCDdisplayFeedback("LVNG Rm Lt On");
 11229  01058E  0EFC               	movlw	high STR_78
 11230  010590  0101               	movlb	1	; () banked
 11231  010592  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11232  010594  0E71               	movlw	low STR_78
 11233  010596  0101               	movlb	1	; () banked
 11234  010598  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11235  01059A  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 11236                           
 11237                           ;StringCommand.c: 182: }
 11238  01059E  EFBA  F094         	goto	l619
 11239  0105A2                     l12956:
 11240                           
 11241                           ;StringCommand.c: 183: else if (StringMatch(Input, "livingroomfan=off"))
 11242  0105A2  0101               	movlb	1	; () banked
 11243  0105A4  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 11244  0105A8  0101               	movlb	1	; () banked
 11245  0105AA  C1C8  F17C         	movff	Command@Input,StringMatch@This
 11246  0105AE  0EF8               	movlw	high STR_79
 11247  0105B0  0101               	movlb	1	; () banked
 11248  0105B2  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11249  0105B4  0E5C               	movlw	low STR_79
 11250  0105B6  0101               	movlb	1	; () banked
 11251  0105B8  6F7E               	movwf	StringMatch@That& (0+255),b
 11252  0105BA  EC28  F0BA         	call	_StringMatch	;wreg free
 11253  0105BE  0900               	iorlw	0
 11254  0105C0  B4D8               	btfsc	status,2,c
 11255  0105C2  D065               	goto	l12968
 11256                           
 11257                           ;StringCommand.c: 184: {
 11258                           ;StringCommand.c: 185: INTCONbits.GIE = 0;
 11259  0105C4  9EF2               	bcf	intcon,7,c	;volatile
 11260                           
 11261                           ;StringCommand.c: 186: Send_Config2(0b00000001, fanOFF);
 11262  0105C6  0EEE               	movlw	high _fanOFF
 11263  0105C8  0101               	movlb	1	; () banked
 11264  0105CA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11265  0105CC  0E45               	movlw	low _fanOFF
 11266  0105CE  0101               	movlb	1	; () banked
 11267  0105D0  6F87               	movwf	Send_Config2@data& (0+255),b
 11268  0105D2  0E01               	movlw	1
 11269  0105D4  EC5F  F0B8         	call	_Send_Config2
 11270                           
 11271                           ;StringCommand.c: 187: Send_Config2(0b00000001, fanOFF);
 11272  0105D8  0EEE               	movlw	high _fanOFF
 11273  0105DA  0101               	movlb	1	; () banked
 11274  0105DC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11275  0105DE  0E45               	movlw	low _fanOFF
 11276  0105E0  0101               	movlb	1	; () banked
 11277  0105E2  6F87               	movwf	Send_Config2@data& (0+255),b
 11278  0105E4  0E01               	movlw	1
 11279  0105E6  EC5F  F0B8         	call	_Send_Config2
 11280                           
 11281                           ;StringCommand.c: 188: Send_Config2(0b00000001, fanOFF);
 11282  0105EA  0EEE               	movlw	high _fanOFF
 11283  0105EC  0101               	movlb	1	; () banked
 11284  0105EE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11285  0105F0  0E45               	movlw	low _fanOFF
 11286  0105F2  0101               	movlb	1	; () banked
 11287  0105F4  6F87               	movwf	Send_Config2@data& (0+255),b
 11288  0105F6  0E01               	movlw	1
 11289  0105F8  EC5F  F0B8         	call	_Send_Config2
 11290                           
 11291                           ;StringCommand.c: 189: Send_Config2(0b00000001, fanOFF);
 11292  0105FC  0EEE               	movlw	high _fanOFF
 11293  0105FE  0101               	movlb	1	; () banked
 11294  010600  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11295  010602  0E45               	movlw	low _fanOFF
 11296  010604  0101               	movlb	1	; () banked
 11297  010606  6F87               	movwf	Send_Config2@data& (0+255),b
 11298  010608  0E01               	movlw	1
 11299  01060A  EC5F  F0B8         	call	_Send_Config2
 11300                           
 11301                           ;StringCommand.c: 190: Send_Config2(0b00000001, fanOFF);
 11302  01060E  0EEE               	movlw	high _fanOFF
 11303  010610  0101               	movlb	1	; () banked
 11304  010612  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11305  010614  0E45               	movlw	low _fanOFF
 11306  010616  0101               	movlb	1	; () banked
 11307  010618  6F87               	movwf	Send_Config2@data& (0+255),b
 11308  01061A  0E01               	movlw	1
 11309  01061C  EC5F  F0B8         	call	_Send_Config2
 11310                           
 11311                           ;StringCommand.c: 191: Send_Config2(0b00000001, fanOFF);
 11312  010620  0EEE               	movlw	high _fanOFF
 11313  010622  0101               	movlb	1	; () banked
 11314  010624  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11315  010626  0E45               	movlw	low _fanOFF
 11316  010628  0101               	movlb	1	; () banked
 11317  01062A  6F87               	movwf	Send_Config2@data& (0+255),b
 11318  01062C  0E01               	movlw	1
 11319  01062E  EC5F  F0B8         	call	_Send_Config2
 11320                           
 11321                           ;StringCommand.c: 192: Send_Config2(0b00000001, fanOFF);
 11322  010632  0EEE               	movlw	high _fanOFF
 11323  010634  0101               	movlb	1	; () banked
 11324  010636  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11325  010638  0E45               	movlw	low _fanOFF
 11326  01063A  0101               	movlb	1	; () banked
 11327  01063C  6F87               	movwf	Send_Config2@data& (0+255),b
 11328  01063E  0E01               	movlw	1
 11329  010640  EC5F  F0B8         	call	_Send_Config2
 11330                           
 11331                           ;StringCommand.c: 193: Send_Config2(0b00000001, fanOFF);
 11332  010644  0EEE               	movlw	high _fanOFF
 11333  010646  0101               	movlb	1	; () banked
 11334  010648  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11335  01064A  0E45               	movlw	low _fanOFF
 11336  01064C  0101               	movlb	1	; () banked
 11337  01064E  6F87               	movwf	Send_Config2@data& (0+255),b
 11338  010650  0E01               	movlw	1
 11339  010652  EC5F  F0B8         	call	_Send_Config2
 11340                           
 11341                           ;StringCommand.c: 194: Send_Config2(0b00000001, fanOFF);
 11342  010656  0EEE               	movlw	high _fanOFF
 11343  010658  0101               	movlb	1	; () banked
 11344  01065A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11345  01065C  0E45               	movlw	low _fanOFF
 11346  01065E  0101               	movlb	1	; () banked
 11347  010660  6F87               	movwf	Send_Config2@data& (0+255),b
 11348  010662  0E01               	movlw	1
 11349  010664  EC5F  F0B8         	call	_Send_Config2
 11350                           
 11351                           ;StringCommand.c: 195: INTCONbits.GIE = 1;
 11352  010668  8EF2               	bsf	intcon,7,c	;volatile
 11353                           
 11354                           ;StringCommand.c: 196: UARTstring("Livingroom Fan Off");
 11355  01066A  0EF7               	movlw	high STR_80
 11356  01066C  0101               	movlb	1	; () banked
 11357  01066E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11358  010670  0EC7               	movlw	low STR_80
 11359  010672  0101               	movlb	1	; () banked
 11360  010674  6F87               	movwf	UARTstring@data& (0+255),b
 11361  010676  ECD0  F0B4         	call	_UARTstring	;wreg free
 11362                           
 11363                           ;StringCommand.c: 197: LCDdisplayFeedback("LVNG Rm Lt Off");
 11364  01067A  0EFB               	movlw	high STR_81
 11365  01067C  0101               	movlb	1	; () banked
 11366  01067E  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11367  010680  0EA4               	movlw	low STR_81
 11368  010682  0101               	movlb	1	; () banked
 11369  010684  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11370  010686  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 11371                           
 11372                           ;StringCommand.c: 198: }
 11373  01068A  EFBA  F094         	goto	l619
 11374  01068E                     l12968:
 11375                           
 11376                           ;StringCommand.c: 199: else
 11377                           ;StringCommand.c: 200: {
 11378                           ;StringCommand.c: 201: UARTstring("Livingroom Task???");
 11379  01068E  0EF7               	movlw	high STR_82
 11380  010690  0101               	movlb	1	; () banked
 11381  010692  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11382  010694  0EA1               	movlw	low STR_82
 11383  010696  0101               	movlb	1	; () banked
 11384  010698  6F87               	movwf	UARTstring@data& (0+255),b
 11385  01069A  ECD0  F0B4         	call	_UARTstring	;wreg free
 11386                           
 11387                           ;StringCommand.c: 202: LCDdisplayFeedback("LVNG Rm Task???");
 11388  01069E  0EFA               	movlw	high STR_83
 11389  0106A0  0101               	movlb	1	; () banked
 11390  0106A2  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11391  0106A4  0E09               	movlw	low STR_83
 11392  0106A6  0101               	movlb	1	; () banked
 11393  0106A8  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11394  0106AA  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 11395  0106AE  EFBA  F094         	goto	l619
 11396  0106B2                     l12970:
 11397                           
 11398                           ;StringCommand.c: 205: else
 11399                           ;StringCommand.c: 206: {
 11400                           ;StringCommand.c: 207: UARTstring("Livingroom Help Menu\r\n\n");
 11401  0106B2  0EF6               	movlw	high STR_84
 11402  0106B4  0101               	movlb	1	; () banked
 11403  0106B6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11404  0106B8  0E2E               	movlw	low STR_84
 11405  0106BA  0101               	movlb	1	; () banked
 11406  0106BC  6F87               	movwf	UARTstring@data& (0+255),b
 11407  0106BE  ECD0  F0B4         	call	_UARTstring	;wreg free
 11408                           
 11409                           ;StringCommand.c: 208: UARTstring("Devices:\r\n");
 11410  0106C2  0EFD               	movlw	high STR_61
 11411  0106C4  0101               	movlb	1	; () banked
 11412  0106C6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11413  0106C8  0EB7               	movlw	low STR_61
 11414  0106CA  0101               	movlb	1	; () banked
 11415  0106CC  6F87               	movwf	UARTstring@data& (0+255),b
 11416  0106CE  ECD0  F0B4         	call	_UARTstring	;wreg free
 11417                           
 11418                           ;StringCommand.c: 209: UARTstring("light\r\n");
 11419  0106D2  0EFF               	movlw	high STR_86
 11420  0106D4  0101               	movlb	1	; () banked
 11421  0106D6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11422  0106D8  0E02               	movlw	low STR_86
 11423  0106DA  0101               	movlb	1	; () banked
 11424  0106DC  6F87               	movwf	UARTstring@data& (0+255),b
 11425  0106DE  ECD0  F0B4         	call	_UARTstring	;wreg free
 11426                           
 11427                           ;StringCommand.c: 210: UARTstring("fan\r\n\n");
 11428  0106E2  0EFF               	movlw	high STR_87
 11429  0106E4  0101               	movlb	1	; () banked
 11430  0106E6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11431  0106E8  0E52               	movlw	low STR_87
 11432  0106EA  0101               	movlb	1	; () banked
 11433  0106EC  6F87               	movwf	UARTstring@data& (0+255),b
 11434  0106EE  ECD0  F0B4         	call	_UARTstring	;wreg free
 11435                           
 11436                           ;StringCommand.c: 211: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 11437  0106F2  0EEF               	movlw	high STR_64
 11438  0106F4  0101               	movlb	1	; () banked
 11439  0106F6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11440  0106F8  0E17               	movlw	low STR_64
 11441  0106FA  0101               	movlb	1	; () banked
 11442  0106FC  6F87               	movwf	UARTstring@data& (0+255),b
 11443  0106FE  ECD0  F0B4         	call	_UARTstring	;wreg free
 11444                           
 11445                           ;StringCommand.c: 212: UARTstring("i.e. Livingroom fan = On\r\n");
 11446  010702  0EF5               	movlw	high STR_89
 11447  010704  0101               	movlb	1	; () banked
 11448  010706  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11449  010708  0E7A               	movlw	low STR_89
 11450  01070A  0101               	movlb	1	; () banked
 11451  01070C  6F87               	movwf	UARTstring@data& (0+255),b
 11452  01070E  ECD0  F0B4         	call	_UARTstring	;wreg free
 11453                           
 11454                           ;StringCommand.c: 213: LCDdisplayFeedback("LVNG Rm Lt help");
 11455  010712  0EFB               	movlw	high STR_90
 11456  010714  0101               	movlb	1	; () banked
 11457  010716  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11458  010718  0E29               	movlw	low STR_90
 11459  01071A  0101               	movlb	1	; () banked
 11460  01071C  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11461  01071E  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 11462                           
 11463                           ;StringCommand.c: 214: LCD_Scroll("LVNGroom Menu");
 11464  010722  0EFC               	movlw	high STR_91
 11465  010724  0101               	movlb	1	; () banked
 11466  010726  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11467  010728  0EA9               	movlw	low STR_91
 11468  01072A  0101               	movlb	1	; () banked
 11469  01072C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11470  01072E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 11471                           
 11472                           ;StringCommand.c: 215: LCD_Scroll("Devices:");
 11473  010732  0EFE               	movlw	high STR_67
 11474  010734  0101               	movlb	1	; () banked
 11475  010736  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11476  010738  0E8F               	movlw	low STR_67
 11477  01073A  0101               	movlb	1	; () banked
 11478  01073C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11479  01073E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 11480                           
 11481                           ;StringCommand.c: 216: LCD_Scroll("Light");
 11482  010742  0EFF               	movlw	high STR_93
 11483  010744  0101               	movlb	1	; () banked
 11484  010746  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11485  010748  0EA7               	movlw	low STR_93
 11486  01074A  0101               	movlb	1	; () banked
 11487  01074C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11488  01074E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 11489                           
 11490                           ;StringCommand.c: 217: LCD_Scroll("Fan");
 11491  010752  0EFF               	movlw	high STR_94
 11492  010754  0101               	movlb	1	; () banked
 11493  010756  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 11494  010758  0EEC               	movlw	low STR_94
 11495  01075A  0101               	movlb	1	; () banked
 11496  01075C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 11497  01075E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 11498  010762  EFBA  F094         	goto	l619
 11499  010766                     l12980:
 11500                           
 11501                           ;StringCommand.c: 221: else if (StartsWith(Input, "bedroom"))
 11502  010766  0101               	movlb	1	; () banked
 11503  010768  C1C9  F17D         	movff	Command@Input+1,StartsWith@This+1
 11504  01076C  0101               	movlb	1	; () banked
 11505  01076E  C1C8  F17C         	movff	Command@Input,StartsWith@This
 11506  010772  0EFF               	movlw	high STR_95
 11507  010774  0101               	movlb	1	; () banked
 11508  010776  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 11509  010778  0E12               	movlw	low STR_95
 11510  01077A  0101               	movlb	1	; () banked
 11511  01077C  6F7E               	movwf	StartsWith@That& (0+255),b
 11512  01077E  EC64  F0B6         	call	_StartsWith	;wreg free
 11513  010782  0900               	iorlw	0
 11514  010784  B4D8               	btfsc	status,2,c
 11515  010786  D2E2               	goto	l13062
 11516                           
 11517                           ;StringCommand.c: 222: {
 11518                           ;StringCommand.c: 223: if (!StringContains(Input, "?"))
 11519  010788  0101               	movlb	1	; () banked
 11520  01078A  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 11521  01078E  0101               	movlb	1	; () banked
 11522  010790  C1C8  F17C         	movff	Command@Input,StringContains@This
 11523  010794  0EFA               	movlw	high (STR_83+14)
 11524  010796  0101               	movlb	1	; () banked
 11525  010798  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 11526  01079A  0E17               	movlw	low (STR_83+14)
 11527  01079C  0101               	movlb	1	; () banked
 11528  01079E  6F7E               	movwf	StringContains@That& (0+255),b
 11529  0107A0  ECE9  F0B9         	call	_StringContains	;wreg free
 11530  0107A4  0900               	iorlw	0
 11531  0107A6  A4D8               	btfss	status,2,c
 11532  0107A8  D267               	goto	l13050
 11533                           
 11534                           ;StringCommand.c: 224: {
 11535                           ;StringCommand.c: 225: if (StringContains(Input, "light") || StringContains(Input, "fan"
      +                          ))
 11536  0107AA  0101               	movlb	1	; () banked
 11537  0107AC  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 11538  0107B0  0101               	movlb	1	; () banked
 11539  0107B2  C1C8  F17C         	movff	Command@Input,StringContains@This
 11540  0107B6  0EFF               	movlw	high STR_97
 11541  0107B8  0101               	movlb	1	; () banked
 11542  0107BA  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 11543  0107BC  0EAD               	movlw	low STR_97
 11544  0107BE  0101               	movlb	1	; () banked
 11545  0107C0  6F7E               	movwf	StringContains@That& (0+255),b
 11546  0107C2  ECE9  F0B9         	call	_StringContains	;wreg free
 11547  0107C6  0900               	iorlw	0
 11548  0107C8  A4D8               	btfss	status,2,c
 11549  0107CA  D011               	goto	l12988
 11550  0107CC  0101               	movlb	1	; () banked
 11551  0107CE  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 11552  0107D2  0101               	movlb	1	; () banked
 11553  0107D4  C1C8  F17C         	movff	Command@Input,StringContains@This
 11554  0107D8  0EFF               	movlw	high STR_98
 11555  0107DA  0101               	movlb	1	; () banked
 11556  0107DC  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 11557  0107DE  0EF0               	movlw	low STR_98
 11558  0107E0  0101               	movlb	1	; () banked
 11559  0107E2  6F7E               	movwf	StringContains@That& (0+255),b
 11560  0107E4  ECE9  F0B9         	call	_StringContains	;wreg free
 11561  0107E8  0900               	iorlw	0
 11562  0107EA  B4D8               	btfsc	status,2,c
 11563  0107EC  D233               	goto	l13048
 11564  0107EE                     l12988:
 11565                           
 11566                           ;StringCommand.c: 226: {
 11567                           ;StringCommand.c: 227: if (StringMatch(Input, "bedroomlight=on") || StringMatch(Input, "
      +                          bedroomlight=off"))
 11568  0107EE  0101               	movlb	1	; () banked
 11569  0107F0  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 11570  0107F4  0101               	movlb	1	; () banked
 11571  0107F6  C1C8  F17C         	movff	Command@Input,StringMatch@This
 11572  0107FA  0EFB               	movlw	high STR_99
 11573  0107FC  0101               	movlb	1	; () banked
 11574  0107FE  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11575  010800  0E09               	movlw	low STR_99
 11576  010802  0101               	movlb	1	; () banked
 11577  010804  6F7E               	movwf	StringMatch@That& (0+255),b
 11578  010806  EC28  F0BA         	call	_StringMatch	;wreg free
 11579  01080A  0900               	iorlw	0
 11580  01080C  A4D8               	btfss	status,2,c
 11581  01080E  D011               	goto	l655
 11582  010810  0101               	movlb	1	; () banked
 11583  010812  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 11584  010816  0101               	movlb	1	; () banked
 11585  010818  C1C8  F17C         	movff	Command@Input,StringMatch@This
 11586  01081C  0EF9               	movlw	high STR_100
 11587  01081E  0101               	movlb	1	; () banked
 11588  010820  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11589  010822  0E50               	movlw	low STR_100
 11590  010824  0101               	movlb	1	; () banked
 11591  010826  6F7E               	movwf	StringMatch@That& (0+255),b
 11592  010828  EC28  F0BA         	call	_StringMatch	;wreg free
 11593  01082C  0900               	iorlw	0
 11594  01082E  B4D8               	btfsc	status,2,c
 11595  010830  D053               	goto	l13000
 11596  010832                     l655:
 11597                           
 11598                           ;StringCommand.c: 228: {
 11599                           ;StringCommand.c: 229: INTCONbits.GIE = 0;
 11600  010832  9EF2               	bcf	intcon,7,c	;volatile
 11601                           
 11602                           ;StringCommand.c: 230: Send_Config1(0b00000001, TXdataE);
 11603  010834  0EEE               	movlw	high _TXdataE
 11604  010836  0101               	movlb	1	; () banked
 11605  010838  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11606  01083A  0E71               	movlw	low _TXdataE
 11607  01083C  0101               	movlb	1	; () banked
 11608  01083E  6F87               	movwf	Send_Config1@data& (0+255),b
 11609  010840  0E01               	movlw	1
 11610  010842  EC6F  F0AF         	call	_Send_Config1
 11611                           
 11612                           ;StringCommand.c: 231: Send_Config1(0b00000001, TXdataE);
 11613  010846  0EEE               	movlw	high _TXdataE
 11614  010848  0101               	movlb	1	; () banked
 11615  01084A  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11616  01084C  0E71               	movlw	low _TXdataE
 11617  01084E  0101               	movlb	1	; () banked
 11618  010850  6F87               	movwf	Send_Config1@data& (0+255),b
 11619  010852  0E01               	movlw	1
 11620  010854  EC6F  F0AF         	call	_Send_Config1
 11621                           
 11622                           ;StringCommand.c: 232: Send_Config1(0b00000001, TXdataE);
 11623  010858  0EEE               	movlw	high _TXdataE
 11624  01085A  0101               	movlb	1	; () banked
 11625  01085C  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11626  01085E  0E71               	movlw	low _TXdataE
 11627  010860  0101               	movlb	1	; () banked
 11628  010862  6F87               	movwf	Send_Config1@data& (0+255),b
 11629  010864  0E01               	movlw	1
 11630  010866  EC6F  F0AF         	call	_Send_Config1
 11631                           
 11632                           ;StringCommand.c: 233: Send_Config1(0b00000001, TXdataE);
 11633  01086A  0EEE               	movlw	high _TXdataE
 11634  01086C  0101               	movlb	1	; () banked
 11635  01086E  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11636  010870  0E71               	movlw	low _TXdataE
 11637  010872  0101               	movlb	1	; () banked
 11638  010874  6F87               	movwf	Send_Config1@data& (0+255),b
 11639  010876  0E01               	movlw	1
 11640  010878  EC6F  F0AF         	call	_Send_Config1
 11641                           
 11642                           ;StringCommand.c: 234: Send_Config1(0b00000001, TXdataE);
 11643  01087C  0EEE               	movlw	high _TXdataE
 11644  01087E  0101               	movlb	1	; () banked
 11645  010880  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11646  010882  0E71               	movlw	low _TXdataE
 11647  010884  0101               	movlb	1	; () banked
 11648  010886  6F87               	movwf	Send_Config1@data& (0+255),b
 11649  010888  0E01               	movlw	1
 11650  01088A  EC6F  F0AF         	call	_Send_Config1
 11651                           
 11652                           ;StringCommand.c: 235: Send_Config1(0b00000001, TXdataE);
 11653  01088E  0EEE               	movlw	high _TXdataE
 11654  010890  0101               	movlb	1	; () banked
 11655  010892  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11656  010894  0E71               	movlw	low _TXdataE
 11657  010896  0101               	movlb	1	; () banked
 11658  010898  6F87               	movwf	Send_Config1@data& (0+255),b
 11659  01089A  0E01               	movlw	1
 11660  01089C  EC6F  F0AF         	call	_Send_Config1
 11661                           
 11662                           ;StringCommand.c: 236: Send_Config1(0b00000001, TXdataE);
 11663  0108A0  0EEE               	movlw	high _TXdataE
 11664  0108A2  0101               	movlb	1	; () banked
 11665  0108A4  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 11666  0108A6  0E71               	movlw	low _TXdataE
 11667  0108A8  0101               	movlb	1	; () banked
 11668  0108AA  6F87               	movwf	Send_Config1@data& (0+255),b
 11669  0108AC  0E01               	movlw	1
 11670  0108AE  EC6F  F0AF         	call	_Send_Config1
 11671                           
 11672                           ;StringCommand.c: 237: INTCONbits.GIE = 1;
 11673  0108B2  8EF2               	bsf	intcon,7,c	;volatile
 11674                           
 11675                           ;StringCommand.c: 238: UARTstring("Bedroom Light Toggled");
 11676  0108B4  0EF6               	movlw	high STR_101
 11677  0108B6  0101               	movlb	1	; () banked
 11678  0108B8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11679  0108BA  0EE7               	movlw	low STR_101
 11680  0108BC  0101               	movlb	1	; () banked
 11681  0108BE  6F87               	movwf	UARTstring@data& (0+255),b
 11682  0108C0  ECD0  F0B4         	call	_UARTstring	;wreg free
 11683                           
 11684                           ;StringCommand.c: 239: LCDdisplayFeedback("Bedroom Lt TGLD");
 11685  0108C4  0EFA               	movlw	high STR_102
 11686  0108C6  0101               	movlb	1	; () banked
 11687  0108C8  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11688  0108CA  0E89               	movlw	low STR_102
 11689  0108CC  0101               	movlb	1	; () banked
 11690  0108CE  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11691  0108D0  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 11692                           
 11693                           ;StringCommand.c: 240: }
 11694  0108D4  EFBA  F094         	goto	l619
 11695  0108D8                     l13000:
 11696                           
 11697                           ;StringCommand.c: 241: else if (StringMatch(Input, "bedroomfan=on"))
 11698  0108D8  0101               	movlb	1	; () banked
 11699  0108DA  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 11700  0108DE  0101               	movlb	1	; () banked
 11701  0108E0  C1C8  F17C         	movff	Command@Input,StringMatch@This
 11702  0108E4  0EFC               	movlw	high STR_103
 11703  0108E6  0101               	movlb	1	; () banked
 11704  0108E8  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11705  0108EA  0E8D               	movlw	low STR_103
 11706  0108EC  0101               	movlb	1	; () banked
 11707  0108EE  6F7E               	movwf	StringMatch@That& (0+255),b
 11708  0108F0  EC28  F0BA         	call	_StringMatch	;wreg free
 11709  0108F4  0900               	iorlw	0
 11710  0108F6  B4D8               	btfsc	status,2,c
 11711  0108F8  D05C               	goto	l13012
 11712                           
 11713                           ;StringCommand.c: 242: {
 11714                           ;StringCommand.c: 243: INTCONbits.GIE = 0;
 11715  0108FA  9EF2               	bcf	intcon,7,c	;volatile
 11716                           
 11717                           ;StringCommand.c: 244: Send_Config2(0b00000001, AuxON);
 11718  0108FC  0EED               	movlw	high _AuxON
 11719  0108FE  0101               	movlb	1	; () banked
 11720  010900  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11721  010902  0EF5               	movlw	low _AuxON
 11722  010904  0101               	movlb	1	; () banked
 11723  010906  6F87               	movwf	Send_Config2@data& (0+255),b
 11724  010908  0E01               	movlw	1
 11725  01090A  EC5F  F0B8         	call	_Send_Config2
 11726                           
 11727                           ;StringCommand.c: 245: Send_Config2(0b00000001, AuxON);
 11728  01090E  0EED               	movlw	high _AuxON
 11729  010910  0101               	movlb	1	; () banked
 11730  010912  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11731  010914  0EF5               	movlw	low _AuxON
 11732  010916  0101               	movlb	1	; () banked
 11733  010918  6F87               	movwf	Send_Config2@data& (0+255),b
 11734  01091A  0E01               	movlw	1
 11735  01091C  EC5F  F0B8         	call	_Send_Config2
 11736                           
 11737                           ;StringCommand.c: 246: Send_Config2(0b00000001, AuxON);
 11738  010920  0EED               	movlw	high _AuxON
 11739  010922  0101               	movlb	1	; () banked
 11740  010924  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11741  010926  0EF5               	movlw	low _AuxON
 11742  010928  0101               	movlb	1	; () banked
 11743  01092A  6F87               	movwf	Send_Config2@data& (0+255),b
 11744  01092C  0E01               	movlw	1
 11745  01092E  EC5F  F0B8         	call	_Send_Config2
 11746                           
 11747                           ;StringCommand.c: 247: Send_Config2(0b00000001, AuxON);
 11748  010932  0EED               	movlw	high _AuxON
 11749  010934  0101               	movlb	1	; () banked
 11750  010936  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11751  010938  0EF5               	movlw	low _AuxON
 11752  01093A  0101               	movlb	1	; () banked
 11753  01093C  6F87               	movwf	Send_Config2@data& (0+255),b
 11754  01093E  0E01               	movlw	1
 11755  010940  EC5F  F0B8         	call	_Send_Config2
 11756                           
 11757                           ;StringCommand.c: 248: Send_Config2(0b00000001, AuxON);
 11758  010944  0EED               	movlw	high _AuxON
 11759  010946  0101               	movlb	1	; () banked
 11760  010948  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11761  01094A  0EF5               	movlw	low _AuxON
 11762  01094C  0101               	movlb	1	; () banked
 11763  01094E  6F87               	movwf	Send_Config2@data& (0+255),b
 11764  010950  0E01               	movlw	1
 11765  010952  EC5F  F0B8         	call	_Send_Config2
 11766                           
 11767                           ;StringCommand.c: 249: Send_Config2(0b00000001, AuxON);
 11768  010956  0EED               	movlw	high _AuxON
 11769  010958  0101               	movlb	1	; () banked
 11770  01095A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11771  01095C  0EF5               	movlw	low _AuxON
 11772  01095E  0101               	movlb	1	; () banked
 11773  010960  6F87               	movwf	Send_Config2@data& (0+255),b
 11774  010962  0E01               	movlw	1
 11775  010964  EC5F  F0B8         	call	_Send_Config2
 11776                           
 11777                           ;StringCommand.c: 250: Send_Config2(0b00000001, AuxON);
 11778  010968  0EED               	movlw	high _AuxON
 11779  01096A  0101               	movlb	1	; () banked
 11780  01096C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11781  01096E  0EF5               	movlw	low _AuxON
 11782  010970  0101               	movlb	1	; () banked
 11783  010972  6F87               	movwf	Send_Config2@data& (0+255),b
 11784  010974  0E01               	movlw	1
 11785  010976  EC5F  F0B8         	call	_Send_Config2
 11786                           
 11787                           ;StringCommand.c: 251: Send_Config2(0b00000001, AuxON);
 11788  01097A  0EED               	movlw	high _AuxON
 11789  01097C  0101               	movlb	1	; () banked
 11790  01097E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11791  010980  0EF5               	movlw	low _AuxON
 11792  010982  0101               	movlb	1	; () banked
 11793  010984  6F87               	movwf	Send_Config2@data& (0+255),b
 11794  010986  0E01               	movlw	1
 11795  010988  EC5F  F0B8         	call	_Send_Config2
 11796                           
 11797                           ;StringCommand.c: 252: INTCONbits.GIE = 1;
 11798  01098C  8EF2               	bsf	intcon,7,c	;volatile
 11799                           
 11800                           ;StringCommand.c: 253: UARTstring("Bedroom Fan On");
 11801  01098E  0EFB               	movlw	high STR_104
 11802  010990  0101               	movlb	1	; () banked
 11803  010992  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11804  010994  0EE0               	movlw	low STR_104
 11805  010996  0101               	movlb	1	; () banked
 11806  010998  6F87               	movwf	UARTstring@data& (0+255),b
 11807  01099A  ECD0  F0B4         	call	_UARTstring	;wreg free
 11808                           
 11809                           ;StringCommand.c: 254: LCDdisplayFeedback("Bedroom Lt On");
 11810  01099E  0EFC               	movlw	high STR_105
 11811  0109A0  0101               	movlb	1	; () banked
 11812  0109A2  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11813  0109A4  0E7F               	movlw	low STR_105
 11814  0109A6  0101               	movlb	1	; () banked
 11815  0109A8  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11816  0109AA  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 11817                           
 11818                           ;StringCommand.c: 255: }
 11819  0109AE  EFBA  F094         	goto	l619
 11820  0109B2                     l13012:
 11821                           
 11822                           ;StringCommand.c: 256: else if (StringMatch(Input, "bedroomfan=off"))
 11823  0109B2  0101               	movlb	1	; () banked
 11824  0109B4  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 11825  0109B8  0101               	movlb	1	; () banked
 11826  0109BA  C1C8  F17C         	movff	Command@Input,StringMatch@This
 11827  0109BE  0EFB               	movlw	high STR_106
 11828  0109C0  0101               	movlb	1	; () banked
 11829  0109C2  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11830  0109C4  0EC2               	movlw	low STR_106
 11831  0109C6  0101               	movlb	1	; () banked
 11832  0109C8  6F7E               	movwf	StringMatch@That& (0+255),b
 11833  0109CA  EC28  F0BA         	call	_StringMatch	;wreg free
 11834  0109CE  0900               	iorlw	0
 11835  0109D0  B4D8               	btfsc	status,2,c
 11836  0109D2  D065               	goto	l13024
 11837                           
 11838                           ;StringCommand.c: 257: {
 11839                           ;StringCommand.c: 258: INTCONbits.GIE = 0;
 11840  0109D4  9EF2               	bcf	intcon,7,c	;volatile
 11841                           
 11842                           ;StringCommand.c: 259: Send_Config2(0b00000001, AuxOFF);
 11843  0109D6  0EED               	movlw	high _AuxOFF
 11844  0109D8  0101               	movlb	1	; () banked
 11845  0109DA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11846  0109DC  0EE5               	movlw	low _AuxOFF
 11847  0109DE  0101               	movlb	1	; () banked
 11848  0109E0  6F87               	movwf	Send_Config2@data& (0+255),b
 11849  0109E2  0E01               	movlw	1
 11850  0109E4  EC5F  F0B8         	call	_Send_Config2
 11851                           
 11852                           ;StringCommand.c: 260: Send_Config2(0b00000001, AuxOFF);
 11853  0109E8  0EED               	movlw	high _AuxOFF
 11854  0109EA  0101               	movlb	1	; () banked
 11855  0109EC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11856  0109EE  0EE5               	movlw	low _AuxOFF
 11857  0109F0  0101               	movlb	1	; () banked
 11858  0109F2  6F87               	movwf	Send_Config2@data& (0+255),b
 11859  0109F4  0E01               	movlw	1
 11860  0109F6  EC5F  F0B8         	call	_Send_Config2
 11861                           
 11862                           ;StringCommand.c: 261: Send_Config2(0b00000001, AuxOFF);
 11863  0109FA  0EED               	movlw	high _AuxOFF
 11864  0109FC  0101               	movlb	1	; () banked
 11865  0109FE  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11866  010A00  0EE5               	movlw	low _AuxOFF
 11867  010A02  0101               	movlb	1	; () banked
 11868  010A04  6F87               	movwf	Send_Config2@data& (0+255),b
 11869  010A06  0E01               	movlw	1
 11870  010A08  EC5F  F0B8         	call	_Send_Config2
 11871                           
 11872                           ;StringCommand.c: 262: Send_Config2(0b00000001, AuxOFF);
 11873  010A0C  0EED               	movlw	high _AuxOFF
 11874  010A0E  0101               	movlb	1	; () banked
 11875  010A10  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11876  010A12  0EE5               	movlw	low _AuxOFF
 11877  010A14  0101               	movlb	1	; () banked
 11878  010A16  6F87               	movwf	Send_Config2@data& (0+255),b
 11879  010A18  0E01               	movlw	1
 11880  010A1A  EC5F  F0B8         	call	_Send_Config2
 11881                           
 11882                           ;StringCommand.c: 263: Send_Config2(0b00000001, AuxOFF);
 11883  010A1E  0EED               	movlw	high _AuxOFF
 11884  010A20  0101               	movlb	1	; () banked
 11885  010A22  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11886  010A24  0EE5               	movlw	low _AuxOFF
 11887  010A26  0101               	movlb	1	; () banked
 11888  010A28  6F87               	movwf	Send_Config2@data& (0+255),b
 11889  010A2A  0E01               	movlw	1
 11890  010A2C  EC5F  F0B8         	call	_Send_Config2
 11891                           
 11892                           ;StringCommand.c: 264: Send_Config2(0b00000001, AuxOFF);
 11893  010A30  0EED               	movlw	high _AuxOFF
 11894  010A32  0101               	movlb	1	; () banked
 11895  010A34  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11896  010A36  0EE5               	movlw	low _AuxOFF
 11897  010A38  0101               	movlb	1	; () banked
 11898  010A3A  6F87               	movwf	Send_Config2@data& (0+255),b
 11899  010A3C  0E01               	movlw	1
 11900  010A3E  EC5F  F0B8         	call	_Send_Config2
 11901                           
 11902                           ;StringCommand.c: 265: Send_Config2(0b00000001, AuxOFF);
 11903  010A42  0EED               	movlw	high _AuxOFF
 11904  010A44  0101               	movlb	1	; () banked
 11905  010A46  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11906  010A48  0EE5               	movlw	low _AuxOFF
 11907  010A4A  0101               	movlb	1	; () banked
 11908  010A4C  6F87               	movwf	Send_Config2@data& (0+255),b
 11909  010A4E  0E01               	movlw	1
 11910  010A50  EC5F  F0B8         	call	_Send_Config2
 11911                           
 11912                           ;StringCommand.c: 266: Send_Config2(0b00000001, AuxOFF);
 11913  010A54  0EED               	movlw	high _AuxOFF
 11914  010A56  0101               	movlb	1	; () banked
 11915  010A58  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11916  010A5A  0EE5               	movlw	low _AuxOFF
 11917  010A5C  0101               	movlb	1	; () banked
 11918  010A5E  6F87               	movwf	Send_Config2@data& (0+255),b
 11919  010A60  0E01               	movlw	1
 11920  010A62  EC5F  F0B8         	call	_Send_Config2
 11921                           
 11922                           ;StringCommand.c: 267: Send_Config2(0b00000001, AuxOFF);
 11923  010A66  0EED               	movlw	high _AuxOFF
 11924  010A68  0101               	movlb	1	; () banked
 11925  010A6A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11926  010A6C  0EE5               	movlw	low _AuxOFF
 11927  010A6E  0101               	movlb	1	; () banked
 11928  010A70  6F87               	movwf	Send_Config2@data& (0+255),b
 11929  010A72  0E01               	movlw	1
 11930  010A74  EC5F  F0B8         	call	_Send_Config2
 11931                           
 11932                           ;StringCommand.c: 268: INTCONbits.GIE = 1;
 11933  010A78  8EF2               	bsf	intcon,7,c	;volatile
 11934                           
 11935                           ;StringCommand.c: 269: UARTstring("Bedroom Fan Off");
 11936  010A7A  0EFA               	movlw	high STR_107
 11937  010A7C  0101               	movlb	1	; () banked
 11938  010A7E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 11939  010A80  0ED9               	movlw	low STR_107
 11940  010A82  0101               	movlb	1	; () banked
 11941  010A84  6F87               	movwf	UARTstring@data& (0+255),b
 11942  010A86  ECD0  F0B4         	call	_UARTstring	;wreg free
 11943                           
 11944                           ;StringCommand.c: 270: LCDdisplayFeedback("Bedroom Lt Off");
 11945  010A8A  0EFB               	movlw	high STR_108
 11946  010A8C  0101               	movlb	1	; () banked
 11947  010A8E  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 11948  010A90  0EB3               	movlw	low STR_108
 11949  010A92  0101               	movlb	1	; () banked
 11950  010A94  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 11951  010A96  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 11952                           
 11953                           ;StringCommand.c: 271: }
 11954  010A9A  EFBA  F094         	goto	l619
 11955  010A9E                     l13024:
 11956                           
 11957                           ;StringCommand.c: 272: else if (StringMatch(Input, "bedroomshaker=on"))
 11958  010A9E  0101               	movlb	1	; () banked
 11959  010AA0  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 11960  010AA4  0101               	movlb	1	; () banked
 11961  010AA6  C1C8  F17C         	movff	Command@Input,StringMatch@This
 11962  010AAA  0EF9               	movlw	high STR_109
 11963  010AAC  0101               	movlb	1	; () banked
 11964  010AAE  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 11965  010AB0  0E83               	movlw	low STR_109
 11966  010AB2  0101               	movlb	1	; () banked
 11967  010AB4  6F7E               	movwf	StringMatch@That& (0+255),b
 11968  010AB6  EC28  F0BA         	call	_StringMatch	;wreg free
 11969  010ABA  0900               	iorlw	0
 11970  010ABC  B4D8               	btfsc	status,2,c
 11971  010ABE  D05C               	goto	l13036
 11972                           
 11973                           ;StringCommand.c: 273: {
 11974                           ;StringCommand.c: 274: INTCONbits.GIE = 0;
 11975  010AC0  9EF2               	bcf	intcon,7,c	;volatile
 11976                           
 11977                           ;StringCommand.c: 275: Send_Config2(0b00000001, BedON);
 11978  010AC2  0EEE               	movlw	high _BedON
 11979  010AC4  0101               	movlb	1	; () banked
 11980  010AC6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11981  010AC8  0E15               	movlw	low _BedON
 11982  010ACA  0101               	movlb	1	; () banked
 11983  010ACC  6F87               	movwf	Send_Config2@data& (0+255),b
 11984  010ACE  0E01               	movlw	1
 11985  010AD0  EC5F  F0B8         	call	_Send_Config2
 11986                           
 11987                           ;StringCommand.c: 276: Send_Config2(0b00000001, BedON);
 11988  010AD4  0EEE               	movlw	high _BedON
 11989  010AD6  0101               	movlb	1	; () banked
 11990  010AD8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 11991  010ADA  0E15               	movlw	low _BedON
 11992  010ADC  0101               	movlb	1	; () banked
 11993  010ADE  6F87               	movwf	Send_Config2@data& (0+255),b
 11994  010AE0  0E01               	movlw	1
 11995  010AE2  EC5F  F0B8         	call	_Send_Config2
 11996                           
 11997                           ;StringCommand.c: 277: Send_Config2(0b00000001, BedON);
 11998  010AE6  0EEE               	movlw	high _BedON
 11999  010AE8  0101               	movlb	1	; () banked
 12000  010AEA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12001  010AEC  0E15               	movlw	low _BedON
 12002  010AEE  0101               	movlb	1	; () banked
 12003  010AF0  6F87               	movwf	Send_Config2@data& (0+255),b
 12004  010AF2  0E01               	movlw	1
 12005  010AF4  EC5F  F0B8         	call	_Send_Config2
 12006                           
 12007                           ;StringCommand.c: 278: Send_Config2(0b00000001, BedON);
 12008  010AF8  0EEE               	movlw	high _BedON
 12009  010AFA  0101               	movlb	1	; () banked
 12010  010AFC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12011  010AFE  0E15               	movlw	low _BedON
 12012  010B00  0101               	movlb	1	; () banked
 12013  010B02  6F87               	movwf	Send_Config2@data& (0+255),b
 12014  010B04  0E01               	movlw	1
 12015  010B06  EC5F  F0B8         	call	_Send_Config2
 12016                           
 12017                           ;StringCommand.c: 279: Send_Config2(0b00000001, BedON);
 12018  010B0A  0EEE               	movlw	high _BedON
 12019  010B0C  0101               	movlb	1	; () banked
 12020  010B0E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12021  010B10  0E15               	movlw	low _BedON
 12022  010B12  0101               	movlb	1	; () banked
 12023  010B14  6F87               	movwf	Send_Config2@data& (0+255),b
 12024  010B16  0E01               	movlw	1
 12025  010B18  EC5F  F0B8         	call	_Send_Config2
 12026                           
 12027                           ;StringCommand.c: 280: Send_Config2(0b00000001, BedON);
 12028  010B1C  0EEE               	movlw	high _BedON
 12029  010B1E  0101               	movlb	1	; () banked
 12030  010B20  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12031  010B22  0E15               	movlw	low _BedON
 12032  010B24  0101               	movlb	1	; () banked
 12033  010B26  6F87               	movwf	Send_Config2@data& (0+255),b
 12034  010B28  0E01               	movlw	1
 12035  010B2A  EC5F  F0B8         	call	_Send_Config2
 12036                           
 12037                           ;StringCommand.c: 281: Send_Config2(0b00000001, BedON);
 12038  010B2E  0EEE               	movlw	high _BedON
 12039  010B30  0101               	movlb	1	; () banked
 12040  010B32  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12041  010B34  0E15               	movlw	low _BedON
 12042  010B36  0101               	movlb	1	; () banked
 12043  010B38  6F87               	movwf	Send_Config2@data& (0+255),b
 12044  010B3A  0E01               	movlw	1
 12045  010B3C  EC5F  F0B8         	call	_Send_Config2
 12046                           
 12047                           ;StringCommand.c: 282: Send_Config2(0b00000001, BedON);
 12048  010B40  0EEE               	movlw	high _BedON
 12049  010B42  0101               	movlb	1	; () banked
 12050  010B44  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12051  010B46  0E15               	movlw	low _BedON
 12052  010B48  0101               	movlb	1	; () banked
 12053  010B4A  6F87               	movwf	Send_Config2@data& (0+255),b
 12054  010B4C  0E01               	movlw	1
 12055  010B4E  EC5F  F0B8         	call	_Send_Config2
 12056                           
 12057                           ;StringCommand.c: 283: INTCONbits.GIE = 1;
 12058  010B52  8EF2               	bsf	intcon,7,c	;volatile
 12059                           
 12060                           ;StringCommand.c: 284: UARTstring("Bedroom Shaker On");
 12061  010B54  0EF8               	movlw	high STR_110
 12062  010B56  0101               	movlb	1	; () banked
 12063  010B58  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12064  010B5A  0EA4               	movlw	low STR_110
 12065  010B5C  0101               	movlb	1	; () banked
 12066  010B5E  6F87               	movwf	UARTstring@data& (0+255),b
 12067  010B60  ECD0  F0B4         	call	_UARTstring	;wreg free
 12068                           
 12069                           ;StringCommand.c: 285: LCDdisplayFeedback("Bedroom SKR On");
 12070  010B64  0EFB               	movlw	high STR_111
 12071  010B66  0101               	movlb	1	; () banked
 12072  010B68  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12073  010B6A  0ED1               	movlw	low STR_111
 12074  010B6C  0101               	movlb	1	; () banked
 12075  010B6E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12076  010B70  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 12077                           
 12078                           ;StringCommand.c: 286: }
 12079  010B74  EFBA  F094         	goto	l619
 12080  010B78                     l13036:
 12081                           
 12082                           ;StringCommand.c: 287: else if (StringMatch(Input, "bedroomshaker=off"))
 12083  010B78  0101               	movlb	1	; () banked
 12084  010B7A  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 12085  010B7E  0101               	movlb	1	; () banked
 12086  010B80  C1C8  F17C         	movff	Command@Input,StringMatch@This
 12087  010B84  0EF8               	movlw	high STR_112
 12088  010B86  0101               	movlb	1	; () banked
 12089  010B88  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 12090  010B8A  0E6E               	movlw	low STR_112
 12091  010B8C  0101               	movlb	1	; () banked
 12092  010B8E  6F7E               	movwf	StringMatch@That& (0+255),b
 12093  010B90  EC28  F0BA         	call	_StringMatch	;wreg free
 12094  010B94  0900               	iorlw	0
 12095  010B96  B4D8               	btfsc	status,2,c
 12096  010B98  EFBA  F094         	goto	l619
 12097                           
 12098                           ;StringCommand.c: 288: {
 12099                           ;StringCommand.c: 289: INTCONbits.GIE = 0;
 12100  010B9C  9EF2               	bcf	intcon,7,c	;volatile
 12101                           
 12102                           ;StringCommand.c: 290: Send_Config2(0b00000001, BedOFF);
 12103  010B9E  0EEE               	movlw	high _BedOFF
 12104  010BA0  0101               	movlb	1	; () banked
 12105  010BA2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12106  010BA4  0E05               	movlw	low _BedOFF
 12107  010BA6  0101               	movlb	1	; () banked
 12108  010BA8  6F87               	movwf	Send_Config2@data& (0+255),b
 12109  010BAA  0E01               	movlw	1
 12110  010BAC  EC5F  F0B8         	call	_Send_Config2
 12111                           
 12112                           ;StringCommand.c: 291: Send_Config2(0b00000001, BedOFF);
 12113  010BB0  0EEE               	movlw	high _BedOFF
 12114  010BB2  0101               	movlb	1	; () banked
 12115  010BB4  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12116  010BB6  0E05               	movlw	low _BedOFF
 12117  010BB8  0101               	movlb	1	; () banked
 12118  010BBA  6F87               	movwf	Send_Config2@data& (0+255),b
 12119  010BBC  0E01               	movlw	1
 12120  010BBE  EC5F  F0B8         	call	_Send_Config2
 12121                           
 12122                           ;StringCommand.c: 292: Send_Config2(0b00000001, BedOFF);
 12123  010BC2  0EEE               	movlw	high _BedOFF
 12124  010BC4  0101               	movlb	1	; () banked
 12125  010BC6  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12126  010BC8  0E05               	movlw	low _BedOFF
 12127  010BCA  0101               	movlb	1	; () banked
 12128  010BCC  6F87               	movwf	Send_Config2@data& (0+255),b
 12129  010BCE  0E01               	movlw	1
 12130  010BD0  EC5F  F0B8         	call	_Send_Config2
 12131                           
 12132                           ;StringCommand.c: 293: Send_Config2(0b00000001, BedOFF);
 12133  010BD4  0EEE               	movlw	high _BedOFF
 12134  010BD6  0101               	movlb	1	; () banked
 12135  010BD8  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12136  010BDA  0E05               	movlw	low _BedOFF
 12137  010BDC  0101               	movlb	1	; () banked
 12138  010BDE  6F87               	movwf	Send_Config2@data& (0+255),b
 12139  010BE0  0E01               	movlw	1
 12140  010BE2  EC5F  F0B8         	call	_Send_Config2
 12141                           
 12142                           ;StringCommand.c: 294: Send_Config2(0b00000001, BedOFF);
 12143  010BE6  0EEE               	movlw	high _BedOFF
 12144  010BE8  0101               	movlb	1	; () banked
 12145  010BEA  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12146  010BEC  0E05               	movlw	low _BedOFF
 12147  010BEE  0101               	movlb	1	; () banked
 12148  010BF0  6F87               	movwf	Send_Config2@data& (0+255),b
 12149  010BF2  0E01               	movlw	1
 12150  010BF4  EC5F  F0B8         	call	_Send_Config2
 12151                           
 12152                           ;StringCommand.c: 295: Send_Config2(0b00000001, BedOFF);
 12153  010BF8  0EEE               	movlw	high _BedOFF
 12154  010BFA  0101               	movlb	1	; () banked
 12155  010BFC  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12156  010BFE  0E05               	movlw	low _BedOFF
 12157  010C00  0101               	movlb	1	; () banked
 12158  010C02  6F87               	movwf	Send_Config2@data& (0+255),b
 12159  010C04  0E01               	movlw	1
 12160  010C06  EC5F  F0B8         	call	_Send_Config2
 12161                           
 12162                           ;StringCommand.c: 296: Send_Config2(0b00000001, BedOFF);
 12163  010C0A  0EEE               	movlw	high _BedOFF
 12164  010C0C  0101               	movlb	1	; () banked
 12165  010C0E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12166  010C10  0E05               	movlw	low _BedOFF
 12167  010C12  0101               	movlb	1	; () banked
 12168  010C14  6F87               	movwf	Send_Config2@data& (0+255),b
 12169  010C16  0E01               	movlw	1
 12170  010C18  EC5F  F0B8         	call	_Send_Config2
 12171                           
 12172                           ;StringCommand.c: 297: Send_Config2(0b00000001, BedOFF);
 12173  010C1C  0EEE               	movlw	high _BedOFF
 12174  010C1E  0101               	movlb	1	; () banked
 12175  010C20  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12176  010C22  0E05               	movlw	low _BedOFF
 12177  010C24  0101               	movlb	1	; () banked
 12178  010C26  6F87               	movwf	Send_Config2@data& (0+255),b
 12179  010C28  0E01               	movlw	1
 12180  010C2A  EC5F  F0B8         	call	_Send_Config2
 12181                           
 12182                           ;StringCommand.c: 298: INTCONbits.GIE = 1;
 12183  010C2E  8EF2               	bsf	intcon,7,c	;volatile
 12184                           
 12185                           ;StringCommand.c: 299: UARTstring("Bedroom Shaker Off");
 12186  010C30  0EF7               	movlw	high STR_113
 12187  010C32  0101               	movlb	1	; () banked
 12188  010C34  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12189  010C36  0EDA               	movlw	low STR_113
 12190  010C38  0101               	movlb	1	; () banked
 12191  010C3A  6F87               	movwf	UARTstring@data& (0+255),b
 12192  010C3C  ECD0  F0B4         	call	_UARTstring	;wreg free
 12193                           
 12194                           ;StringCommand.c: 300: LCDdisplayFeedback("Bedroom SKR Off");
 12195  010C40  0EFA               	movlw	high STR_114
 12196  010C42  0101               	movlb	1	; () banked
 12197  010C44  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12198  010C46  0EC9               	movlw	low STR_114
 12199  010C48  0101               	movlb	1	; () banked
 12200  010C4A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12201  010C4C  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 12202  010C50  EFBA  F094         	goto	l619
 12203  010C54                     l13048:
 12204                           
 12205                           ;StringCommand.c: 303: else
 12206                           ;StringCommand.c: 304: {
 12207                           ;StringCommand.c: 305: UARTstring("Bedroom Task???");
 12208  010C54  0EFA               	movlw	high STR_115
 12209  010C56  0101               	movlb	1	; () banked
 12210  010C58  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12211  010C5A  0E19               	movlw	low STR_115
 12212  010C5C  0101               	movlb	1	; () banked
 12213  010C5E  6F87               	movwf	UARTstring@data& (0+255),b
 12214  010C60  ECD0  F0B4         	call	_UARTstring	;wreg free
 12215                           
 12216                           ;StringCommand.c: 306: LCDdisplayFeedback("Bedroom Task???");
 12217  010C64  0EFA               	movlw	high STR_115
 12218  010C66  0101               	movlb	1	; () banked
 12219  010C68  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12220  010C6A  0E19               	movlw	low STR_115
 12221  010C6C  0101               	movlb	1	; () banked
 12222  010C6E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12223  010C70  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 12224  010C74  EFBA  F094         	goto	l619
 12225  010C78                     l13050:
 12226                           
 12227                           ;StringCommand.c: 309: else
 12228                           ;StringCommand.c: 310: {
 12229                           ;StringCommand.c: 311: UARTstring("Bedroom Help Menu\r\n\n");
 12230  010C78  0EF7               	movlw	high STR_117
 12231  010C7A  0101               	movlb	1	; () banked
 12232  010C7C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12233  010C7E  0E13               	movlw	low STR_117
 12234  010C80  0101               	movlb	1	; () banked
 12235  010C82  6F87               	movwf	UARTstring@data& (0+255),b
 12236  010C84  ECD0  F0B4         	call	_UARTstring	;wreg free
 12237                           
 12238                           ;StringCommand.c: 312: UARTstring("Devices:\r\n");
 12239  010C88  0EFD               	movlw	high STR_61
 12240  010C8A  0101               	movlb	1	; () banked
 12241  010C8C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12242  010C8E  0EB7               	movlw	low STR_61
 12243  010C90  0101               	movlb	1	; () banked
 12244  010C92  6F87               	movwf	UARTstring@data& (0+255),b
 12245  010C94  ECD0  F0B4         	call	_UARTstring	;wreg free
 12246                           
 12247                           ;StringCommand.c: 313: UARTstring("light\r\n");
 12248  010C98  0EFF               	movlw	high STR_86
 12249  010C9A  0101               	movlb	1	; () banked
 12250  010C9C  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12251  010C9E  0E02               	movlw	low STR_86
 12252  010CA0  0101               	movlb	1	; () banked
 12253  010CA2  6F87               	movwf	UARTstring@data& (0+255),b
 12254  010CA4  ECD0  F0B4         	call	_UARTstring	;wreg free
 12255                           
 12256                           ;StringCommand.c: 314: UARTstring("fan\r\n");
 12257  010CA8  0EFF               	movlw	high STR_120
 12258  010CAA  0101               	movlb	1	; () banked
 12259  010CAC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12260  010CAE  0E89               	movlw	low STR_120
 12261  010CB0  0101               	movlb	1	; () banked
 12262  010CB2  6F87               	movwf	UARTstring@data& (0+255),b
 12263  010CB4  ECD0  F0B4         	call	_UARTstring	;wreg free
 12264                           
 12265                           ;StringCommand.c: 315: UARTstring("shaker\r\n\n");
 12266  010CB8  0EFE               	movlw	high STR_121
 12267  010CBA  0101               	movlb	1	; () banked
 12268  010CBC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12269  010CBE  0E04               	movlw	low STR_121
 12270  010CC0  0101               	movlb	1	; () banked
 12271  010CC2  6F87               	movwf	UARTstring@data& (0+255),b
 12272  010CC4  ECD0  F0B4         	call	_UARTstring	;wreg free
 12273                           
 12274                           ;StringCommand.c: 316: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12275  010CC8  0EEF               	movlw	high STR_64
 12276  010CCA  0101               	movlb	1	; () banked
 12277  010CCC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12278  010CCE  0E17               	movlw	low STR_64
 12279  010CD0  0101               	movlb	1	; () banked
 12280  010CD2  6F87               	movwf	UARTstring@data& (0+255),b
 12281  010CD4  ECD0  F0B4         	call	_UARTstring	;wreg free
 12282                           
 12283                           ;StringCommand.c: 317: UARTstring("i.e. Bedroom fan = On\r\n");
 12284  010CD8  0EF6               	movlw	high STR_123
 12285  010CDA  0101               	movlb	1	; () banked
 12286  010CDC  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12287  010CDE  0E5E               	movlw	low STR_123
 12288  010CE0  0101               	movlb	1	; () banked
 12289  010CE2  6F87               	movwf	UARTstring@data& (0+255),b
 12290  010CE4  ECD0  F0B4         	call	_UARTstring	;wreg free
 12291                           
 12292                           ;StringCommand.c: 318: LCDdisplayFeedback("Bedroom Help???");
 12293  010CE8  0EFA               	movlw	high STR_124
 12294  010CEA  0101               	movlb	1	; () banked
 12295  010CEC  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12296  010CEE  0E29               	movlw	low STR_124
 12297  010CF0  0101               	movlb	1	; () banked
 12298  010CF2  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12299  010CF4  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 12300                           
 12301                           ;StringCommand.c: 319: LCD_Scroll("Bedroom Menu");
 12302  010CF8  0EFD               	movlw	high STR_125
 12303  010CFA  0101               	movlb	1	; () banked
 12304  010CFC  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12305  010CFE  0E55               	movlw	low STR_125
 12306  010D00  0101               	movlb	1	; () banked
 12307  010D02  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12308  010D04  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 12309                           
 12310                           ;StringCommand.c: 320: LCD_Scroll("Devices:");
 12311  010D08  0EFE               	movlw	high STR_67
 12312  010D0A  0101               	movlb	1	; () banked
 12313  010D0C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12314  010D0E  0E8F               	movlw	low STR_67
 12315  010D10  0101               	movlb	1	; () banked
 12316  010D12  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12317  010D14  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 12318                           
 12319                           ;StringCommand.c: 321: LCD_Scroll("Light");
 12320  010D18  0EFF               	movlw	high STR_93
 12321  010D1A  0101               	movlb	1	; () banked
 12322  010D1C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12323  010D1E  0EA7               	movlw	low STR_93
 12324  010D20  0101               	movlb	1	; () banked
 12325  010D22  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12326  010D24  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 12327                           
 12328                           ;StringCommand.c: 322: LCD_Scroll("Fan");
 12329  010D28  0EFF               	movlw	high STR_94
 12330  010D2A  0101               	movlb	1	; () banked
 12331  010D2C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12332  010D2E  0EEC               	movlw	low STR_94
 12333  010D30  0101               	movlb	1	; () banked
 12334  010D32  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12335  010D34  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 12336                           
 12337                           ;StringCommand.c: 323: LCD_Scroll("Shaker");
 12338  010D38  0EFF               	movlw	high STR_129
 12339  010D3A  0101               	movlb	1	; () banked
 12340  010D3C  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12341  010D3E  0E75               	movlw	low STR_129
 12342  010D40  0101               	movlb	1	; () banked
 12343  010D42  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12344  010D44  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 12345  010D48  EFBA  F094         	goto	l619
 12346  010D4C                     l13062:
 12347                           
 12348                           ;StringCommand.c: 327: else if (StringContains(Input, "color") || StringContains(Input, 
      +                          "white") || StringContains(Input, "christmas"))
 12349  010D4C  0101               	movlb	1	; () banked
 12350  010D4E  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12351  010D52  0101               	movlb	1	; () banked
 12352  010D54  C1C8  F17C         	movff	Command@Input,StringContains@This
 12353  010D58  0EFF               	movlw	high STR_130
 12354  010D5A  0101               	movlb	1	; () banked
 12355  010D5C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12356  010D5E  0EA1               	movlw	low STR_130
 12357  010D60  0101               	movlb	1	; () banked
 12358  010D62  6F7E               	movwf	StringContains@That& (0+255),b
 12359  010D64  ECE9  F0B9         	call	_StringContains	;wreg free
 12360  010D68  0900               	iorlw	0
 12361  010D6A  A4D8               	btfss	status,2,c
 12362  010D6C  D022               	goto	l13068
 12363  010D6E  0101               	movlb	1	; () banked
 12364  010D70  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12365  010D74  0101               	movlb	1	; () banked
 12366  010D76  C1C8  F17C         	movff	Command@Input,StringContains@This
 12367  010D7A  0EFF               	movlw	high STR_131
 12368  010D7C  0101               	movlb	1	; () banked
 12369  010D7E  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12370  010D80  0E9B               	movlw	low STR_131
 12371  010D82  0101               	movlb	1	; () banked
 12372  010D84  6F7E               	movwf	StringContains@That& (0+255),b
 12373  010D86  ECE9  F0B9         	call	_StringContains	;wreg free
 12374  010D8A  0900               	iorlw	0
 12375  010D8C  A4D8               	btfss	status,2,c
 12376  010D8E  D011               	goto	l13068
 12377  010D90  0101               	movlb	1	; () banked
 12378  010D92  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12379  010D96  0101               	movlb	1	; () banked
 12380  010D98  C1C8  F17C         	movff	Command@Input,StringContains@This
 12381  010D9C  0EFE               	movlw	high STR_132
 12382  010D9E  0101               	movlb	1	; () banked
 12383  010DA0  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12384  010DA2  0E54               	movlw	low STR_132
 12385  010DA4  0101               	movlb	1	; () banked
 12386  010DA6  6F7E               	movwf	StringContains@That& (0+255),b
 12387  010DA8  ECE9  F0B9         	call	_StringContains	;wreg free
 12388  010DAC  0900               	iorlw	0
 12389  010DAE  B4D8               	btfsc	status,2,c
 12390  010DB0  D1D4               	goto	l13124
 12391  010DB2                     l13068:
 12392                           
 12393                           ;StringCommand.c: 328: {
 12394                           ;StringCommand.c: 329: if (!StringContains(Input, "?"))
 12395  010DB2  0101               	movlb	1	; () banked
 12396  010DB4  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12397  010DB8  0101               	movlb	1	; () banked
 12398  010DBA  C1C8  F17C         	movff	Command@Input,StringContains@This
 12399  010DBE  0EFA               	movlw	high (STR_83+14)
 12400  010DC0  0101               	movlb	1	; () banked
 12401  010DC2  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12402  010DC4  0E17               	movlw	low (STR_83+14)
 12403  010DC6  0101               	movlb	1	; () banked
 12404  010DC8  6F7E               	movwf	StringContains@That& (0+255),b
 12405  010DCA  ECE9  F0B9         	call	_StringContains	;wreg free
 12406  010DCE  0900               	iorlw	0
 12407  010DD0  A4D8               	btfss	status,2,c
 12408  010DD2  D171               	goto	l13114
 12409                           
 12410                           ;StringCommand.c: 330: {
 12411                           ;StringCommand.c: 331: if (StringContains(Input, "color") && StringContains(Input, "="))
 12412  010DD4  0101               	movlb	1	; () banked
 12413  010DD6  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12414  010DDA  0101               	movlb	1	; () banked
 12415  010DDC  C1C8  F17C         	movff	Command@Input,StringContains@This
 12416  010DE0  0EFF               	movlw	high STR_130
 12417  010DE2  0101               	movlb	1	; () banked
 12418  010DE4  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12419  010DE6  0EA1               	movlw	low STR_130
 12420  010DE8  0101               	movlb	1	; () banked
 12421  010DEA  6F7E               	movwf	StringContains@That& (0+255),b
 12422  010DEC  ECE9  F0B9         	call	_StringContains	;wreg free
 12423  010DF0  0900               	iorlw	0
 12424  010DF2  B4D8               	btfsc	status,2,c
 12425  010DF4  D064               	goto	l13084
 12426  010DF6  0101               	movlb	1	; () banked
 12427  010DF8  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12428  010DFC  0101               	movlb	1	; () banked
 12429  010DFE  C1C8  F17C         	movff	Command@Input,StringContains@This
 12430  010E02  0EFD               	movlw	high (STR_201+11)
 12431  010E04  0101               	movlb	1	; () banked
 12432  010E06  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12433  010E08  0E05               	movlw	low (STR_201+11)
 12434  010E0A  0101               	movlb	1	; () banked
 12435  010E0C  6F7E               	movwf	StringContains@That& (0+255),b
 12436  010E0E  ECE9  F0B9         	call	_StringContains	;wreg free
 12437  010E12  0900               	iorlw	0
 12438  010E14  B4D8               	btfsc	status,2,c
 12439  010E16  D053               	goto	l13084
 12440                           
 12441                           ;StringCommand.c: 332: {
 12442                           ;StringCommand.c: 333: INTCONbits.GIE = 0;
 12443  010E18  9EF2               	bcf	intcon,7,c	;volatile
 12444                           
 12445                           ;StringCommand.c: 334: Send_Config1(0b00000001, TXdataF);
 12446  010E1A  0EEE               	movlw	high _TXdataF
 12447  010E1C  0101               	movlb	1	; () banked
 12448  010E1E  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12449  010E20  0E7D               	movlw	low _TXdataF
 12450  010E22  0101               	movlb	1	; () banked
 12451  010E24  6F87               	movwf	Send_Config1@data& (0+255),b
 12452  010E26  0E01               	movlw	1
 12453  010E28  EC6F  F0AF         	call	_Send_Config1
 12454                           
 12455                           ;StringCommand.c: 335: Send_Config1(0b00000001, TXdataF);
 12456  010E2C  0EEE               	movlw	high _TXdataF
 12457  010E2E  0101               	movlb	1	; () banked
 12458  010E30  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12459  010E32  0E7D               	movlw	low _TXdataF
 12460  010E34  0101               	movlb	1	; () banked
 12461  010E36  6F87               	movwf	Send_Config1@data& (0+255),b
 12462  010E38  0E01               	movlw	1
 12463  010E3A  EC6F  F0AF         	call	_Send_Config1
 12464                           
 12465                           ;StringCommand.c: 336: Send_Config1(0b00000001, TXdataF);
 12466  010E3E  0EEE               	movlw	high _TXdataF
 12467  010E40  0101               	movlb	1	; () banked
 12468  010E42  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12469  010E44  0E7D               	movlw	low _TXdataF
 12470  010E46  0101               	movlb	1	; () banked
 12471  010E48  6F87               	movwf	Send_Config1@data& (0+255),b
 12472  010E4A  0E01               	movlw	1
 12473  010E4C  EC6F  F0AF         	call	_Send_Config1
 12474                           
 12475                           ;StringCommand.c: 337: Send_Config1(0b00000001, TXdataF);
 12476  010E50  0EEE               	movlw	high _TXdataF
 12477  010E52  0101               	movlb	1	; () banked
 12478  010E54  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12479  010E56  0E7D               	movlw	low _TXdataF
 12480  010E58  0101               	movlb	1	; () banked
 12481  010E5A  6F87               	movwf	Send_Config1@data& (0+255),b
 12482  010E5C  0E01               	movlw	1
 12483  010E5E  EC6F  F0AF         	call	_Send_Config1
 12484                           
 12485                           ;StringCommand.c: 338: Send_Config1(0b00000001, TXdataF);
 12486  010E62  0EEE               	movlw	high _TXdataF
 12487  010E64  0101               	movlb	1	; () banked
 12488  010E66  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12489  010E68  0E7D               	movlw	low _TXdataF
 12490  010E6A  0101               	movlb	1	; () banked
 12491  010E6C  6F87               	movwf	Send_Config1@data& (0+255),b
 12492  010E6E  0E01               	movlw	1
 12493  010E70  EC6F  F0AF         	call	_Send_Config1
 12494                           
 12495                           ;StringCommand.c: 339: Send_Config1(0b00000001, TXdataF);
 12496  010E74  0EEE               	movlw	high _TXdataF
 12497  010E76  0101               	movlb	1	; () banked
 12498  010E78  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12499  010E7A  0E7D               	movlw	low _TXdataF
 12500  010E7C  0101               	movlb	1	; () banked
 12501  010E7E  6F87               	movwf	Send_Config1@data& (0+255),b
 12502  010E80  0E01               	movlw	1
 12503  010E82  EC6F  F0AF         	call	_Send_Config1
 12504                           
 12505                           ;StringCommand.c: 340: Send_Config1(0b00000001, TXdataF);
 12506  010E86  0EEE               	movlw	high _TXdataF
 12507  010E88  0101               	movlb	1	; () banked
 12508  010E8A  6F88               	movwf	(Send_Config1@data+1)& (0+255),b
 12509  010E8C  0E7D               	movlw	low _TXdataF
 12510  010E8E  0101               	movlb	1	; () banked
 12511  010E90  6F87               	movwf	Send_Config1@data& (0+255),b
 12512  010E92  0E01               	movlw	1
 12513  010E94  EC6F  F0AF         	call	_Send_Config1
 12514                           
 12515                           ;StringCommand.c: 341: INTCONbits.GIE = 1;
 12516  010E98  8EF2               	bsf	intcon,7,c	;volatile
 12517                           
 12518                           ;StringCommand.c: 342: UARTstring("Christmas Tree Colored Lights Toggled");
 12519  010E9A  0EF2               	movlw	high STR_136
 12520  010E9C  0101               	movlb	1	; () banked
 12521  010E9E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12522  010EA0  0E5A               	movlw	low STR_136
 12523  010EA2  0101               	movlb	1	; () banked
 12524  010EA4  6F87               	movwf	UARTstring@data& (0+255),b
 12525  010EA6  ECD0  F0B4         	call	_UARTstring	;wreg free
 12526                           
 12527                           ;StringCommand.c: 343: LCDdisplayFeedback("XMAS Color TGLD");
 12528  010EAA  0EFA               	movlw	high STR_137
 12529  010EAC  0101               	movlb	1	; () banked
 12530  010EAE  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12531  010EB0  0E69               	movlw	low STR_137
 12532  010EB2  0101               	movlb	1	; () banked
 12533  010EB4  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12534  010EB6  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 12535                           
 12536                           ;StringCommand.c: 344: }
 12537  010EBA  EFBA  F094         	goto	l619
 12538  010EBE                     l13084:
 12539                           
 12540                           ;StringCommand.c: 345: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=on"))
 12541  010EBE  0101               	movlb	1	; () banked
 12542  010EC0  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12543  010EC4  0101               	movlb	1	; () banked
 12544  010EC6  C1C8  F17C         	movff	Command@Input,StringContains@This
 12545  010ECA  0EFF               	movlw	high STR_131
 12546  010ECC  0101               	movlb	1	; () banked
 12547  010ECE  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12548  010ED0  0E9B               	movlw	low STR_131
 12549  010ED2  0101               	movlb	1	; () banked
 12550  010ED4  6F7E               	movwf	StringContains@That& (0+255),b
 12551  010ED6  ECE9  F0B9         	call	_StringContains	;wreg free
 12552  010EDA  0900               	iorlw	0
 12553  010EDC  B4D8               	btfsc	status,2,c
 12554  010EDE  D064               	goto	l13098
 12555  010EE0  0101               	movlb	1	; () banked
 12556  010EE2  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12557  010EE6  0101               	movlb	1	; () banked
 12558  010EE8  C1C8  F17C         	movff	Command@Input,StringContains@This
 12559  010EEC  0EFF               	movlw	high (STR_43+4)
 12560  010EEE  0101               	movlb	1	; () banked
 12561  010EF0  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12562  010EF2  0E2E               	movlw	low (STR_43+4)
 12563  010EF4  0101               	movlb	1	; () banked
 12564  010EF6  6F7E               	movwf	StringContains@That& (0+255),b
 12565  010EF8  ECE9  F0B9         	call	_StringContains	;wreg free
 12566  010EFC  0900               	iorlw	0
 12567  010EFE  B4D8               	btfsc	status,2,c
 12568  010F00  D053               	goto	l13098
 12569                           
 12570                           ;StringCommand.c: 346: {
 12571                           ;StringCommand.c: 347: INTCONbits.GIE = 0;
 12572  010F02  9EF2               	bcf	intcon,7,c	;volatile
 12573                           
 12574                           ;StringCommand.c: 348: Send_Config2(0b00000001, Aux2ON);
 12575  010F04  0EED               	movlw	high _Aux2ON
 12576  010F06  0101               	movlb	1	; () banked
 12577  010F08  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12578  010F0A  0ED5               	movlw	low _Aux2ON
 12579  010F0C  0101               	movlb	1	; () banked
 12580  010F0E  6F87               	movwf	Send_Config2@data& (0+255),b
 12581  010F10  0E01               	movlw	1
 12582  010F12  EC5F  F0B8         	call	_Send_Config2
 12583                           
 12584                           ;StringCommand.c: 349: Send_Config2(0b00000001, Aux2ON);
 12585  010F16  0EED               	movlw	high _Aux2ON
 12586  010F18  0101               	movlb	1	; () banked
 12587  010F1A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12588  010F1C  0ED5               	movlw	low _Aux2ON
 12589  010F1E  0101               	movlb	1	; () banked
 12590  010F20  6F87               	movwf	Send_Config2@data& (0+255),b
 12591  010F22  0E01               	movlw	1
 12592  010F24  EC5F  F0B8         	call	_Send_Config2
 12593                           
 12594                           ;StringCommand.c: 350: Send_Config2(0b00000001, Aux2ON);
 12595  010F28  0EED               	movlw	high _Aux2ON
 12596  010F2A  0101               	movlb	1	; () banked
 12597  010F2C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12598  010F2E  0ED5               	movlw	low _Aux2ON
 12599  010F30  0101               	movlb	1	; () banked
 12600  010F32  6F87               	movwf	Send_Config2@data& (0+255),b
 12601  010F34  0E01               	movlw	1
 12602  010F36  EC5F  F0B8         	call	_Send_Config2
 12603                           
 12604                           ;StringCommand.c: 351: Send_Config2(0b00000001, Aux2ON);
 12605  010F3A  0EED               	movlw	high _Aux2ON
 12606  010F3C  0101               	movlb	1	; () banked
 12607  010F3E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12608  010F40  0ED5               	movlw	low _Aux2ON
 12609  010F42  0101               	movlb	1	; () banked
 12610  010F44  6F87               	movwf	Send_Config2@data& (0+255),b
 12611  010F46  0E01               	movlw	1
 12612  010F48  EC5F  F0B8         	call	_Send_Config2
 12613                           
 12614                           ;StringCommand.c: 352: Send_Config2(0b00000001, Aux2ON);
 12615  010F4C  0EED               	movlw	high _Aux2ON
 12616  010F4E  0101               	movlb	1	; () banked
 12617  010F50  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12618  010F52  0ED5               	movlw	low _Aux2ON
 12619  010F54  0101               	movlb	1	; () banked
 12620  010F56  6F87               	movwf	Send_Config2@data& (0+255),b
 12621  010F58  0E01               	movlw	1
 12622  010F5A  EC5F  F0B8         	call	_Send_Config2
 12623                           
 12624                           ;StringCommand.c: 353: Send_Config2(0b00000001, Aux2ON);
 12625  010F5E  0EED               	movlw	high _Aux2ON
 12626  010F60  0101               	movlb	1	; () banked
 12627  010F62  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12628  010F64  0ED5               	movlw	low _Aux2ON
 12629  010F66  0101               	movlb	1	; () banked
 12630  010F68  6F87               	movwf	Send_Config2@data& (0+255),b
 12631  010F6A  0E01               	movlw	1
 12632  010F6C  EC5F  F0B8         	call	_Send_Config2
 12633                           
 12634                           ;StringCommand.c: 354: Send_Config2(0b00000001, Aux2ON);
 12635  010F70  0EED               	movlw	high _Aux2ON
 12636  010F72  0101               	movlb	1	; () banked
 12637  010F74  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12638  010F76  0ED5               	movlw	low _Aux2ON
 12639  010F78  0101               	movlb	1	; () banked
 12640  010F7A  6F87               	movwf	Send_Config2@data& (0+255),b
 12641  010F7C  0E01               	movlw	1
 12642  010F7E  EC5F  F0B8         	call	_Send_Config2
 12643                           
 12644                           ;StringCommand.c: 355: INTCONbits.GIE = 1;
 12645  010F82  8EF2               	bsf	intcon,7,c	;volatile
 12646                           
 12647                           ;StringCommand.c: 356: UARTstring("Christmas Tree White Lights On");
 12648  010F84  0EF4               	movlw	high STR_140
 12649  010F86  0101               	movlb	1	; () banked
 12650  010F88  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12651  010F8A  0E3F               	movlw	low STR_140
 12652  010F8C  0101               	movlb	1	; () banked
 12653  010F8E  6F87               	movwf	UARTstring@data& (0+255),b
 12654  010F90  ECD0  F0B4         	call	_UARTstring	;wreg free
 12655                           
 12656                           ;StringCommand.c: 357: LCDdisplayFeedback("XMAS White On");
 12657  010F94  0EFC               	movlw	high STR_141
 12658  010F96  0101               	movlb	1	; () banked
 12659  010F98  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12660  010F9A  0E63               	movlw	low STR_141
 12661  010F9C  0101               	movlb	1	; () banked
 12662  010F9E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12663  010FA0  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 12664                           
 12665                           ;StringCommand.c: 358: }
 12666  010FA4  EFBA  F094         	goto	l619
 12667  010FA8                     l13098:
 12668                           
 12669                           ;StringCommand.c: 359: else if (StringContains(Input, "white") && StringContains(Input, 
      +                          "=off"))
 12670  010FA8  0101               	movlb	1	; () banked
 12671  010FAA  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12672  010FAE  0101               	movlb	1	; () banked
 12673  010FB0  C1C8  F17C         	movff	Command@Input,StringContains@This
 12674  010FB4  0EFF               	movlw	high STR_131
 12675  010FB6  0101               	movlb	1	; () banked
 12676  010FB8  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12677  010FBA  0E9B               	movlw	low STR_131
 12678  010FBC  0101               	movlb	1	; () banked
 12679  010FBE  6F7E               	movwf	StringContains@That& (0+255),b
 12680  010FC0  ECE9  F0B9         	call	_StringContains	;wreg free
 12681  010FC4  0900               	iorlw	0
 12682  010FC6  B4D8               	btfsc	status,2,c
 12683  010FC8  D064               	goto	l13112
 12684  010FCA  0101               	movlb	1	; () banked
 12685  010FCC  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12686  010FD0  0101               	movlb	1	; () banked
 12687  010FD2  C1C8  F17C         	movff	Command@Input,StringContains@This
 12688  010FD6  0EFE               	movlw	high (STR_46+4)
 12689  010FD8  0101               	movlb	1	; () banked
 12690  010FDA  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12691  010FDC  0EB7               	movlw	low (STR_46+4)
 12692  010FDE  0101               	movlb	1	; () banked
 12693  010FE0  6F7E               	movwf	StringContains@That& (0+255),b
 12694  010FE2  ECE9  F0B9         	call	_StringContains	;wreg free
 12695  010FE6  0900               	iorlw	0
 12696  010FE8  B4D8               	btfsc	status,2,c
 12697  010FEA  D053               	goto	l13112
 12698                           
 12699                           ;StringCommand.c: 360: {
 12700                           ;StringCommand.c: 361: INTCONbits.GIE = 0;
 12701  010FEC  9EF2               	bcf	intcon,7,c	;volatile
 12702                           
 12703                           ;StringCommand.c: 362: Send_Config2(0b00000001, Aux2OFF);
 12704  010FEE  0EED               	movlw	high _Aux2OFF
 12705  010FF0  0101               	movlb	1	; () banked
 12706  010FF2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12707  010FF4  0EC5               	movlw	low _Aux2OFF
 12708  010FF6  0101               	movlb	1	; () banked
 12709  010FF8  6F87               	movwf	Send_Config2@data& (0+255),b
 12710  010FFA  0E01               	movlw	1
 12711  010FFC  EC5F  F0B8         	call	_Send_Config2
 12712                           
 12713                           ;StringCommand.c: 363: Send_Config2(0b00000001, Aux2OFF);
 12714  011000  0EED               	movlw	high _Aux2OFF
 12715  011002  0101               	movlb	1	; () banked
 12716  011004  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12717  011006  0EC5               	movlw	low _Aux2OFF
 12718  011008  0101               	movlb	1	; () banked
 12719  01100A  6F87               	movwf	Send_Config2@data& (0+255),b
 12720  01100C  0E01               	movlw	1
 12721  01100E  EC5F  F0B8         	call	_Send_Config2
 12722                           
 12723                           ;StringCommand.c: 364: Send_Config2(0b00000001, Aux2OFF);
 12724  011012  0EED               	movlw	high _Aux2OFF
 12725  011014  0101               	movlb	1	; () banked
 12726  011016  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12727  011018  0EC5               	movlw	low _Aux2OFF
 12728  01101A  0101               	movlb	1	; () banked
 12729  01101C  6F87               	movwf	Send_Config2@data& (0+255),b
 12730  01101E  0E01               	movlw	1
 12731  011020  EC5F  F0B8         	call	_Send_Config2
 12732                           
 12733                           ;StringCommand.c: 365: Send_Config2(0b00000001, Aux2OFF);
 12734  011024  0EED               	movlw	high _Aux2OFF
 12735  011026  0101               	movlb	1	; () banked
 12736  011028  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12737  01102A  0EC5               	movlw	low _Aux2OFF
 12738  01102C  0101               	movlb	1	; () banked
 12739  01102E  6F87               	movwf	Send_Config2@data& (0+255),b
 12740  011030  0E01               	movlw	1
 12741  011032  EC5F  F0B8         	call	_Send_Config2
 12742                           
 12743                           ;StringCommand.c: 366: Send_Config2(0b00000001, Aux2OFF);
 12744  011036  0EED               	movlw	high _Aux2OFF
 12745  011038  0101               	movlb	1	; () banked
 12746  01103A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12747  01103C  0EC5               	movlw	low _Aux2OFF
 12748  01103E  0101               	movlb	1	; () banked
 12749  011040  6F87               	movwf	Send_Config2@data& (0+255),b
 12750  011042  0E01               	movlw	1
 12751  011044  EC5F  F0B8         	call	_Send_Config2
 12752                           
 12753                           ;StringCommand.c: 367: Send_Config2(0b00000001, Aux2OFF);
 12754  011048  0EED               	movlw	high _Aux2OFF
 12755  01104A  0101               	movlb	1	; () banked
 12756  01104C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12757  01104E  0EC5               	movlw	low _Aux2OFF
 12758  011050  0101               	movlb	1	; () banked
 12759  011052  6F87               	movwf	Send_Config2@data& (0+255),b
 12760  011054  0E01               	movlw	1
 12761  011056  EC5F  F0B8         	call	_Send_Config2
 12762                           
 12763                           ;StringCommand.c: 368: Send_Config2(0b00000001, Aux2OFF);
 12764  01105A  0EED               	movlw	high _Aux2OFF
 12765  01105C  0101               	movlb	1	; () banked
 12766  01105E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 12767  011060  0EC5               	movlw	low _Aux2OFF
 12768  011062  0101               	movlb	1	; () banked
 12769  011064  6F87               	movwf	Send_Config2@data& (0+255),b
 12770  011066  0E01               	movlw	1
 12771  011068  EC5F  F0B8         	call	_Send_Config2
 12772                           
 12773                           ;StringCommand.c: 369: INTCONbits.GIE = 1;
 12774  01106C  8EF2               	bsf	intcon,7,c	;volatile
 12775                           
 12776                           ;StringCommand.c: 370: UARTstring("Christmas Tree White Lights Off");
 12777  01106E  0EF4               	movlw	high STR_144
 12778  011070  0101               	movlb	1	; () banked
 12779  011072  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12780  011074  0E1F               	movlw	low STR_144
 12781  011076  0101               	movlb	1	; () banked
 12782  011078  6F87               	movwf	UARTstring@data& (0+255),b
 12783  01107A  ECD0  F0B4         	call	_UARTstring	;wreg free
 12784                           
 12785                           ;StringCommand.c: 371: LCDdisplayFeedback("XMAS White Off");
 12786  01107E  0EFB               	movlw	high STR_145
 12787  011080  0101               	movlb	1	; () banked
 12788  011082  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12789  011084  0E95               	movlw	low STR_145
 12790  011086  0101               	movlb	1	; () banked
 12791  011088  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12792  01108A  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 12793                           
 12794                           ;StringCommand.c: 372: }
 12795  01108E  EFBA  F094         	goto	l619
 12796  011092                     l13112:
 12797                           
 12798                           ;StringCommand.c: 373: else
 12799                           ;StringCommand.c: 374: {
 12800                           ;StringCommand.c: 375: UARTstring("Christmas What???");
 12801  011092  0EF8               	movlw	high STR_146
 12802  011094  0101               	movlb	1	; () banked
 12803  011096  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12804  011098  0E4A               	movlw	low STR_146
 12805  01109A  0101               	movlb	1	; () banked
 12806  01109C  6F87               	movwf	UARTstring@data& (0+255),b
 12807  01109E  ECD0  F0B4         	call	_UARTstring	;wreg free
 12808                           
 12809                           ;StringCommand.c: 376: LCDdisplayFeedback("XMAS What???");
 12810  0110A2  0EFD               	movlw	high STR_147
 12811  0110A4  0101               	movlb	1	; () banked
 12812  0110A6  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 12813  0110A8  0E07               	movlw	low STR_147
 12814  0110AA  0101               	movlb	1	; () banked
 12815  0110AC  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 12816  0110AE  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 12817  0110B2  EFBA  F094         	goto	l619
 12818  0110B6                     l13114:
 12819                           
 12820                           ;StringCommand.c: 379: else
 12821                           ;StringCommand.c: 380: {
 12822                           ;StringCommand.c: 381: UARTstring("Christmas tree Help Menu\r\n\n");
 12823  0110B6  0EF4               	movlw	high STR_148
 12824  0110B8  0101               	movlb	1	; () banked
 12825  0110BA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12826  0110BC  0ED3               	movlw	low STR_148
 12827  0110BE  0101               	movlb	1	; () banked
 12828  0110C0  6F87               	movwf	UARTstring@data& (0+255),b
 12829  0110C2  ECD0  F0B4         	call	_UARTstring	;wreg free
 12830                           
 12831                           ;StringCommand.c: 382: UARTstring("Devices:\r\n");
 12832  0110C6  0EFD               	movlw	high STR_61
 12833  0110C8  0101               	movlb	1	; () banked
 12834  0110CA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12835  0110CC  0EB7               	movlw	low STR_61
 12836  0110CE  0101               	movlb	1	; () banked
 12837  0110D0  6F87               	movwf	UARTstring@data& (0+255),b
 12838  0110D2  ECD0  F0B4         	call	_UARTstring	;wreg free
 12839                           
 12840                           ;StringCommand.c: 383: UARTstring("white lights\r\n");
 12841  0110D6  0EFB               	movlw	high STR_150
 12842  0110D8  0101               	movlb	1	; () banked
 12843  0110DA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12844  0110DC  0E68               	movlw	low STR_150
 12845  0110DE  0101               	movlb	1	; () banked
 12846  0110E0  6F87               	movwf	UARTstring@data& (0+255),b
 12847  0110E2  ECD0  F0B4         	call	_UARTstring	;wreg free
 12848                           
 12849                           ;StringCommand.c: 384: UARTstring("colored lights\r\n\n");
 12850  0110E6  0EF8               	movlw	high STR_151
 12851  0110E8  0101               	movlb	1	; () banked
 12852  0110EA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12853  0110EC  0E26               	movlw	low STR_151
 12854  0110EE  0101               	movlb	1	; () banked
 12855  0110F0  6F87               	movwf	UARTstring@data& (0+255),b
 12856  0110F2  ECD0  F0B4         	call	_UARTstring	;wreg free
 12857                           
 12858                           ;StringCommand.c: 385: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 12859  0110F6  0EEF               	movlw	high STR_64
 12860  0110F8  0101               	movlb	1	; () banked
 12861  0110FA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12862  0110FC  0E17               	movlw	low STR_64
 12863  0110FE  0101               	movlb	1	; () banked
 12864  011100  6F87               	movwf	UARTstring@data& (0+255),b
 12865  011102  ECD0  F0B4         	call	_UARTstring	;wreg free
 12866                           
 12867                           ;StringCommand.c: 386: UARTstring("i.e. Christmas Colored lights = On\r\n");
 12868  011106  0EF2               	movlw	high STR_153
 12869  011108  0101               	movlb	1	; () banked
 12870  01110A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 12871  01110C  0EA6               	movlw	low STR_153
 12872  01110E  0101               	movlb	1	; () banked
 12873  011110  6F87               	movwf	UARTstring@data& (0+255),b
 12874  011112  ECD0  F0B4         	call	_UARTstring	;wreg free
 12875                           
 12876                           ;StringCommand.c: 387: LCD_Scroll("XMAS Menu");
 12877  011116  0EFE               	movlw	high STR_154
 12878  011118  0101               	movlb	1	; () banked
 12879  01111A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12880  01111C  0E5E               	movlw	low STR_154
 12881  01111E  0101               	movlb	1	; () banked
 12882  011120  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12883  011122  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 12884                           
 12885                           ;StringCommand.c: 388: LCD_Scroll("Devices:");
 12886  011126  0EFE               	movlw	high STR_67
 12887  011128  0101               	movlb	1	; () banked
 12888  01112A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12889  01112C  0E8F               	movlw	low STR_67
 12890  01112E  0101               	movlb	1	; () banked
 12891  011130  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12892  011132  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 12893                           
 12894                           ;StringCommand.c: 389: LCD_Scroll("white");
 12895  011136  0EFF               	movlw	high STR_131
 12896  011138  0101               	movlb	1	; () banked
 12897  01113A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12898  01113C  0E9B               	movlw	low STR_131
 12899  01113E  0101               	movlb	1	; () banked
 12900  011140  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12901  011142  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 12902                           
 12903                           ;StringCommand.c: 390: LCD_Scroll("color");
 12904  011146  0EFF               	movlw	high STR_130
 12905  011148  0101               	movlb	1	; () banked
 12906  01114A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 12907  01114C  0EA1               	movlw	low STR_130
 12908  01114E  0101               	movlb	1	; () banked
 12909  011150  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 12910  011152  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 12911  011156  EFBA  F094         	goto	l619
 12912  01115A                     l13124:
 12913                           
 12914                           ;StringCommand.c: 394: else if (StartsWith(Input, "red"))
 12915  01115A  0101               	movlb	1	; () banked
 12916  01115C  C1C9  F17D         	movff	Command@Input+1,StartsWith@This+1
 12917  011160  0101               	movlb	1	; () banked
 12918  011162  C1C8  F17C         	movff	Command@Input,StartsWith@This
 12919  011166  0EF4               	movlw	high (STR_206+25)
 12920  011168  0101               	movlb	1	; () banked
 12921  01116A  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 12922  01116C  0EB2               	movlw	low (STR_206+25)
 12923  01116E  0101               	movlb	1	; () banked
 12924  011170  6F7E               	movwf	StartsWith@That& (0+255),b
 12925  011172  EC64  F0B6         	call	_StartsWith	;wreg free
 12926  011176  0900               	iorlw	0
 12927  011178  B4D8               	btfsc	status,2,c
 12928  01117A  D151               	goto	l13176
 12929                           
 12930                           ;StringCommand.c: 395: {
 12931                           ;StringCommand.c: 396: if (!StringContains(Input, "?"))
 12932  01117C  0101               	movlb	1	; () banked
 12933  01117E  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12934  011182  0101               	movlb	1	; () banked
 12935  011184  C1C8  F17C         	movff	Command@Input,StringContains@This
 12936  011188  0EFA               	movlw	high (STR_83+14)
 12937  01118A  0101               	movlb	1	; () banked
 12938  01118C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12939  01118E  0E17               	movlw	low (STR_83+14)
 12940  011190  0101               	movlb	1	; () banked
 12941  011192  6F7E               	movwf	StringContains@That& (0+255),b
 12942  011194  ECE9  F0B9         	call	_StringContains	;wreg free
 12943  011198  0900               	iorlw	0
 12944  01119A  A4D8               	btfss	status,2,c
 12945  01119C  D10E               	goto	l13168
 12946                           
 12947                           ;StringCommand.c: 397: {
 12948                           ;StringCommand.c: 398: if (StartsWith(Input, "redled") || StartsWith(Input, "redledbrigh
      +                          tness"))
 12949  01119E  0101               	movlb	1	; () banked
 12950  0111A0  C1C9  F17D         	movff	Command@Input+1,StartsWith@This+1
 12951  0111A4  0101               	movlb	1	; () banked
 12952  0111A6  C1C8  F17C         	movff	Command@Input,StartsWith@This
 12953  0111AA  0EFF               	movlw	high STR_160
 12954  0111AC  0101               	movlb	1	; () banked
 12955  0111AE  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 12956  0111B0  0E6E               	movlw	low STR_160
 12957  0111B2  0101               	movlb	1	; () banked
 12958  0111B4  6F7E               	movwf	StartsWith@That& (0+255),b
 12959  0111B6  EC64  F0B6         	call	_StartsWith	;wreg free
 12960  0111BA  0900               	iorlw	0
 12961  0111BC  A4D8               	btfss	status,2,c
 12962  0111BE  D011               	goto	l13132
 12963  0111C0  0101               	movlb	1	; () banked
 12964  0111C2  C1C9  F17D         	movff	Command@Input+1,StartsWith@This+1
 12965  0111C6  0101               	movlb	1	; () banked
 12966  0111C8  C1C8  F17C         	movff	Command@Input,StartsWith@This
 12967  0111CC  0EF9               	movlw	high STR_161
 12968  0111CE  0101               	movlb	1	; () banked
 12969  0111D0  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 12970  0111D2  0EA5               	movlw	low STR_161
 12971  0111D4  0101               	movlb	1	; () banked
 12972  0111D6  6F7E               	movwf	StartsWith@That& (0+255),b
 12973  0111D8  EC64  F0B6         	call	_StartsWith	;wreg free
 12974  0111DC  0900               	iorlw	0
 12975  0111DE  B4D8               	btfsc	status,2,c
 12976  0111E0  D0DA               	goto	l13166
 12977  0111E2                     l13132:
 12978                           
 12979                           ;StringCommand.c: 399: {
 12980                           ;StringCommand.c: 400: if (!StringContains(Input, "="))
 12981  0111E2  0101               	movlb	1	; () banked
 12982  0111E4  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 12983  0111E8  0101               	movlb	1	; () banked
 12984  0111EA  C1C8  F17C         	movff	Command@Input,StringContains@This
 12985  0111EE  0EFD               	movlw	high (STR_201+11)
 12986  0111F0  0101               	movlb	1	; () banked
 12987  0111F2  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 12988  0111F4  0E05               	movlw	low (STR_201+11)
 12989  0111F6  0101               	movlb	1	; () banked
 12990  0111F8  6F7E               	movwf	StringContains@That& (0+255),b
 12991  0111FA  ECE9  F0B9         	call	_StringContains	;wreg free
 12992  0111FE  0900               	iorlw	0
 12993  011200  A4D8               	btfss	status,2,c
 12994  011202  D008               	goto	l13136
 12995                           
 12996                           ;StringCommand.c: 401: {
 12997                           ;StringCommand.c: 402: UARTstring("there is no question mark\r\n");
 12998  011204  0EF5               	movlw	high STR_163
 12999  011206  0101               	movlb	1	; () banked
 13000  011208  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13001  01120A  0E0B               	movlw	low STR_163
 13002  01120C  0101               	movlb	1	; () banked
 13003  01120E  6F87               	movwf	UARTstring@data& (0+255),b
 13004  011210  ECD0  F0B4         	call	_UARTstring	;wreg free
 13005  011214                     l13136:
 13006                           
 13007                           ;StringCommand.c: 403: }
 13008                           ;StringCommand.c: 404: tempLONG = GetEnteredNumber(Input);
 13009  011214  0101               	movlb	1	; () banked
 13010  011216  C1C9  F189         	movff	Command@Input+1,GetEnteredNumber@This+1
 13011  01121A  0101               	movlb	1	; () banked
 13012  01121C  C1C8  F188         	movff	Command@Input,GetEnteredNumber@This
 13013  011220  ECD8  F0A6         	call	_GetEnteredNumber	;wreg free
 13014  011224  C188  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 13015  011228  C189  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 13016  01122C  C18A  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 13017  011230  C18B  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 13018                           
 13019                           ;StringCommand.c: 405: if(tempLONG < 1000 && tempLONG >= 0 )
 13020  011234  0105               	movlb	5	; () banked
 13021  011236  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 13022  011238  0A80               	xorlw	128
 13023  01123A  0F80               	addlw	128
 13024  01123C  E10B               	bnz	u16865
 13025  01123E  0E00               	movlw	0
 13026  011240  0105               	movlb	5	; () banked
 13027  011242  5DE0               	subwf	(Command@tempLONG+2)& (0+255),w,b
 13028  011244  E107               	bnz	u16865
 13029  011246  0E03               	movlw	3
 13030  011248  0105               	movlb	5	; () banked
 13031  01124A  5DDF               	subwf	(Command@tempLONG+1)& (0+255),w,b
 13032  01124C  E103               	bnz	u16865
 13033  01124E  0EE8               	movlw	232
 13034  011250  0105               	movlb	5	; () banked
 13035  011252  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 13036  011254                     u16865:
 13037  011254  B0D8               	btfsc	status,0,c
 13038  011256  D007               	goto	l13144
 13039                           
 13040                           ; BSR set to: 5
 13041  011258  0105               	movlb	5	; () banked
 13042  01125A  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 13043  01125C  D004               	goto	l13144
 13044                           
 13045                           ; BSR set to: 5
 13046                           ;StringCommand.c: 406: {
 13047                           ;StringCommand.c: 407: duty = (int)tempLONG;
 13048  01125E  C5DE  F5DC         	movff	Command@tempLONG,Command@duty
 13049  011262  C5DF  F5DD         	movff	Command@tempLONG+1,Command@duty+1
 13050  011266                     l13144:
 13051                           
 13052                           ; BSR set to: 5
 13053                           ;StringCommand.c: 408: }
 13054                           ;StringCommand.c: 409: if (tempLONG == 2147483645L)
 13055  011266  0105               	movlb	5	; () banked
 13056  011268  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 13057  01126A  0EFD               	movlw	253
 13058  01126C  B4D8               	btfsc	status,2,c
 13059  01126E  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 13060  011270  B4D8               	btfsc	status,2,c
 13061  011272  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 13062  011274  0E7F               	movlw	127
 13063  011276  B4D8               	btfsc	status,2,c
 13064  011278  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 13065  01127A  A4D8               	btfss	status,2,c
 13066  01127C  D012               	goto	l13148
 13067                           
 13068                           ; BSR set to: 5
 13069                           ;StringCommand.c: 410: {
 13070                           ;StringCommand.c: 411: UARTstring("Error: No number entered\r\n");
 13071  01127E  0EF5               	movlw	high STR_164
 13072  011280  0101               	movlb	1	; () banked
 13073  011282  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13074  011284  0E5F               	movlw	low STR_164
 13075  011286  0101               	movlb	1	; () banked
 13076  011288  6F87               	movwf	UARTstring@data& (0+255),b
 13077  01128A  ECD0  F0B4         	call	_UARTstring	;wreg free
 13078                           
 13079                           ;StringCommand.c: 412: LCDdisplayFeedback("ERR: no number");
 13080  01128E  0EFC               	movlw	high STR_165
 13081  011290  0101               	movlb	1	; () banked
 13082  011292  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13083  011294  0E0D               	movlw	low STR_165
 13084  011296  0101               	movlb	1	; () banked
 13085  011298  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13086  01129A  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13087                           
 13088                           ;StringCommand.c: 413: }
 13089  01129E  EFBA  F094         	goto	l619
 13090  0112A2                     l13148:
 13091                           
 13092                           ;StringCommand.c: 414: else if (duty > 100)
 13093  0112A2  0105               	movlb	5	; () banked
 13094  0112A4  51DD               	movf	(Command@duty+1)& (0+255),w,b
 13095  0112A6  0A80               	xorlw	128
 13096  0112A8  0F80               	addlw	-128
 13097  0112AA  0E65               	movlw	101
 13098  0112AC  B4D8               	btfsc	status,2,c
 13099  0112AE  5DDC               	subwf	Command@duty& (0+255),w,b
 13100  0112B0  A0D8               	btfss	status,0,c
 13101  0112B2  D012               	goto	l13152
 13102                           
 13103                           ; BSR set to: 5
 13104                           ;StringCommand.c: 415: {
 13105                           ;StringCommand.c: 416: UARTstring("Invalid Dutycycle: Greater than 100\r\n");
 13106  0112B4  0EF2               	movlw	high STR_166
 13107  0112B6  0101               	movlb	1	; () banked
 13108  0112B8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13109  0112BA  0E34               	movlw	low STR_166
 13110  0112BC  0101               	movlb	1	; () banked
 13111  0112BE  6F87               	movwf	UARTstring@data& (0+255),b
 13112  0112C0  ECD0  F0B4         	call	_UARTstring	;wreg free
 13113                           
 13114                           ;StringCommand.c: 417: LCDdisplayFeedback("ERR: Duty > 100");
 13115  0112C4  0EF9               	movlw	high STR_167
 13116  0112C6  0101               	movlb	1	; () banked
 13117  0112C8  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13118  0112CA  0EF9               	movlw	low STR_167
 13119  0112CC  0101               	movlb	1	; () banked
 13120  0112CE  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13121  0112D0  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13122                           
 13123                           ;StringCommand.c: 418: }
 13124  0112D4  EFBA  F094         	goto	l619
 13125  0112D8                     l13152:
 13126                           
 13127                           ;StringCommand.c: 419: else if (duty < 0)
 13128  0112D8  0105               	movlb	5	; () banked
 13129  0112DA  51DD               	movf	(Command@duty+1)& (0+255),w,b
 13130  0112DC  0A80               	xorlw	128
 13131  0112DE  6EF3               	movwf	prodl,c
 13132  0112E0  0E80               	movlw	128
 13133  0112E2  5CF3               	subwf	prodl,w,c
 13134  0112E4  0E00               	movlw	0
 13135  0112E6  B4D8               	btfsc	status,2,c
 13136  0112E8  5DDC               	subwf	Command@duty& (0+255),w,b
 13137  0112EA  B0D8               	btfsc	status,0,c
 13138  0112EC  D012               	goto	l13156
 13139                           
 13140                           ; BSR set to: 5
 13141                           ;StringCommand.c: 420: {
 13142                           ;StringCommand.c: 421: UARTstring("Invalid Dutycycle: Less than 0\r\n");
 13143  0112EE  0EF3               	movlw	high STR_168
 13144  0112F0  0101               	movlb	1	; () banked
 13145  0112F2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13146  0112F4  0E7C               	movlw	low STR_168
 13147  0112F6  0101               	movlb	1	; () banked
 13148  0112F8  6F87               	movwf	UARTstring@data& (0+255),b
 13149  0112FA  ECD0  F0B4         	call	_UARTstring	;wreg free
 13150                           
 13151                           ;StringCommand.c: 422: LCDdisplayFeedback("ERR: Duty < 0");
 13152  0112FE  0EFC               	movlw	high STR_169
 13153  011300  0101               	movlb	1	; () banked
 13154  011302  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13155  011304  0E39               	movlw	low STR_169
 13156  011306  0101               	movlb	1	; () banked
 13157  011308  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13158  01130A  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13159                           
 13160                           ;StringCommand.c: 423: }
 13161  01130E  EFBA  F094         	goto	l619
 13162  011312                     l13156:
 13163                           
 13164                           ;StringCommand.c: 424: else
 13165                           ;StringCommand.c: 425: {
 13166                           ;StringCommand.c: 426: SetDuty(duty);
 13167  011312  0105               	movlb	5	; () banked
 13168  011314  51DC               	movf	Command@duty& (0+255),w,b
 13169  011316  ECF7  F0B2         	call	_SetDuty
 13170                           
 13171                           ;StringCommand.c: 427: sprintf(buf, "Dutycycle set to %d\r\n", duty);
 13172  01131A  0105               	movlb	5	; () banked
 13173  01131C  0E05               	movlw	high Command@buf
 13174  01131E  0101               	movlb	1	; () banked
 13175  011320  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 13176  011322  0105               	movlb	5	; () banked
 13177  011324  0E00               	movlw	low Command@buf
 13178  011326  0101               	movlb	1	; () banked
 13179  011328  6F92               	movwf	sprintf@sp& (0+255),b
 13180  01132A  0EF6               	movlw	high STR_170
 13181  01132C  0101               	movlb	1	; () banked
 13182  01132E  6F95               	movwf	(sprintf@f+1)& (0+255),b
 13183  011330  0ED1               	movlw	low STR_170
 13184  011332  0101               	movlb	1	; () banked
 13185  011334  6F94               	movwf	sprintf@f& (0+255),b
 13186  011336  C5DC  F196         	movff	Command@duty,?_sprintf+4
 13187  01133A  C5DD  F197         	movff	Command@duty+1,?_sprintf+5
 13188  01133E  ECC4  F094         	call	_sprintf	;wreg free
 13189                           
 13190                           ;StringCommand.c: 428: UARTstring(buf);
 13191  011342  0105               	movlb	5	; () banked
 13192  011344  0E05               	movlw	high Command@buf
 13193  011346  0101               	movlb	1	; () banked
 13194  011348  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13195  01134A  0105               	movlb	5	; () banked
 13196  01134C  0E00               	movlw	low Command@buf
 13197  01134E  0101               	movlb	1	; () banked
 13198  011350  6F87               	movwf	UARTstring@data& (0+255),b
 13199  011352  ECD0  F0B4         	call	_UARTstring	;wreg free
 13200                           
 13201                           ;StringCommand.c: 429: sprintf(buf, "Duty set to %d", duty);
 13202  011356  0105               	movlb	5	; () banked
 13203  011358  0E05               	movlw	high Command@buf
 13204  01135A  0101               	movlb	1	; () banked
 13205  01135C  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 13206  01135E  0105               	movlb	5	; () banked
 13207  011360  0E00               	movlw	low Command@buf
 13208  011362  0101               	movlb	1	; () banked
 13209  011364  6F92               	movwf	sprintf@sp& (0+255),b
 13210  011366  0EFB               	movlw	high STR_171
 13211  011368  0101               	movlb	1	; () banked
 13212  01136A  6F95               	movwf	(sprintf@f+1)& (0+255),b
 13213  01136C  0E86               	movlw	low STR_171
 13214  01136E  0101               	movlb	1	; () banked
 13215  011370  6F94               	movwf	sprintf@f& (0+255),b
 13216  011372  C5DC  F196         	movff	Command@duty,?_sprintf+4
 13217  011376  C5DD  F197         	movff	Command@duty+1,?_sprintf+5
 13218  01137A  ECC4  F094         	call	_sprintf	;wreg free
 13219                           
 13220                           ;StringCommand.c: 430: LCDdisplayFeedback(buf);
 13221  01137E  0105               	movlb	5	; () banked
 13222  011380  0E05               	movlw	high Command@buf
 13223  011382  0101               	movlb	1	; () banked
 13224  011384  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13225  011386  0105               	movlb	5	; () banked
 13226  011388  0E00               	movlw	low Command@buf
 13227  01138A  0101               	movlb	1	; () banked
 13228  01138C  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13229  01138E  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13230  011392  EFBA  F094         	goto	l619
 13231  011396                     l13166:
 13232                           
 13233                           ;StringCommand.c: 433: else
 13234                           ;StringCommand.c: 434: {
 13235                           ;StringCommand.c: 435: UARTstring("redled what??? Do you mean Red Led Brightness???");
 13236  011396  0EF1               	movlw	high STR_172
 13237  011398  0101               	movlb	1	; () banked
 13238  01139A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13239  01139C  0E1F               	movlw	low STR_172
 13240  01139E  0101               	movlb	1	; () banked
 13241  0113A0  6F87               	movwf	UARTstring@data& (0+255),b
 13242  0113A2  ECD0  F0B4         	call	_UARTstring	;wreg free
 13243                           
 13244                           ;StringCommand.c: 436: LCDdisplayFeedback("Red LED What???");
 13245  0113A6  0EFA               	movlw	high STR_173
 13246  0113A8  0101               	movlb	1	; () banked
 13247  0113AA  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13248  0113AC  0E39               	movlw	low STR_173
 13249  0113AE  0101               	movlb	1	; () banked
 13250  0113B0  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13251  0113B2  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13252  0113B6  EFBA  F094         	goto	l619
 13253  0113BA                     l13168:
 13254                           
 13255                           ;StringCommand.c: 439: else
 13256                           ;StringCommand.c: 440: {
 13257                           ;StringCommand.c: 441: UARTstring("Red LED PWM Help Menu\r\n\n");
 13258  0113BA  0EF5               	movlw	high STR_174
 13259  0113BC  0101               	movlb	1	; () banked
 13260  0113BE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13261  0113C0  0EE3               	movlw	low STR_174
 13262  0113C2  0101               	movlb	1	; () banked
 13263  0113C4  6F87               	movwf	UARTstring@data& (0+255),b
 13264  0113C6  ECD0  F0B4         	call	_UARTstring	;wreg free
 13265                           
 13266                           ;StringCommand.c: 442: UARTstring("To set te PWM brightness enter 'Red LED brightness = 
      +                          dutycycle'\r\n");
 13267  0113CA  0EEF               	movlw	high STR_175
 13268  0113CC  0101               	movlb	1	; () banked
 13269  0113CE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13270  0113D0  0E5B               	movlw	low STR_175
 13271  0113D2  0101               	movlb	1	; () banked
 13272  0113D4  6F87               	movwf	UARTstring@data& (0+255),b
 13273  0113D6  ECD0  F0B4         	call	_UARTstring	;wreg free
 13274                           
 13275                           ;StringCommand.c: 443: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 13276  0113DA  0EF2               	movlw	high STR_176
 13277  0113DC  0101               	movlb	1	; () banked
 13278  0113DE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13279  0113E0  0E0A               	movlw	low STR_176
 13280  0113E2  0101               	movlb	1	; () banked
 13281  0113E4  6F87               	movwf	UARTstring@data& (0+255),b
 13282  0113E6  ECD0  F0B4         	call	_UARTstring	;wreg free
 13283                           
 13284                           ;StringCommand.c: 444: LCD_Scroll("Red LED Contrast");
 13285  0113EA  0EF9               	movlw	high STR_177
 13286  0113EC  0101               	movlb	1	; () banked
 13287  0113EE  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13288  0113F0  0EC7               	movlw	low STR_177
 13289  0113F2  0101               	movlb	1	; () banked
 13290  0113F4  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13291  0113F6  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 13292                           
 13293                           ;StringCommand.c: 445: LCD_Scroll("Commands:");
 13294  0113FA  0EFE               	movlw	high STR_178
 13295  0113FC  0101               	movlb	1	; () banked
 13296  0113FE  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13297  011400  0E36               	movlw	low STR_178
 13298  011402  0101               	movlb	1	; () banked
 13299  011404  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13300  011406  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 13301                           
 13302                           ;StringCommand.c: 446: LCD_Scroll("Red LED=#");
 13303  01140A  0EFE               	movlw	high STR_179
 13304  01140C  0101               	movlb	1	; () banked
 13305  01140E  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13306  011410  0E22               	movlw	low STR_179
 13307  011412  0101               	movlb	1	; () banked
 13308  011414  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13309  011416  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 13310  01141A  EFBA  F094         	goto	l619
 13311  01141E                     l13176:
 13312                           
 13313                           ;StringCommand.c: 450: else if (StartsWith(Input, "contrast"))
 13314  01141E  0101               	movlb	1	; () banked
 13315  011420  C1C9  F17D         	movff	Command@Input+1,StartsWith@This+1
 13316  011424  0101               	movlb	1	; () banked
 13317  011426  C1C8  F17C         	movff	Command@Input,StartsWith@This
 13318  01142A  0EFE               	movlw	high STR_180
 13319  01142C  0101               	movlb	1	; () banked
 13320  01142E  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 13321  011430  0EC5               	movlw	low STR_180
 13322  011432  0101               	movlb	1	; () banked
 13323  011434  6F7E               	movwf	StartsWith@That& (0+255),b
 13324  011436  EC64  F0B6         	call	_StartsWith	;wreg free
 13325  01143A  0900               	iorlw	0
 13326  01143C  B4D8               	btfsc	status,2,c
 13327  01143E  D11D               	goto	l13222
 13328                           
 13329                           ;StringCommand.c: 451: {
 13330                           ;StringCommand.c: 452: if (!StringContains(Input, "?"))
 13331  011440  0101               	movlb	1	; () banked
 13332  011442  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 13333  011446  0101               	movlb	1	; () banked
 13334  011448  C1C8  F17C         	movff	Command@Input,StringContains@This
 13335  01144C  0EFA               	movlw	high (STR_83+14)
 13336  01144E  0101               	movlb	1	; () banked
 13337  011450  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13338  011452  0E17               	movlw	low (STR_83+14)
 13339  011454  0101               	movlb	1	; () banked
 13340  011456  6F7E               	movwf	StringContains@That& (0+255),b
 13341  011458  ECE9  F0B9         	call	_StringContains	;wreg free
 13342  01145C  0900               	iorlw	0
 13343  01145E  A4D8               	btfss	status,2,c
 13344  011460  D0DA               	goto	l13214
 13345                           
 13346                           ;StringCommand.c: 453: {
 13347                           ;StringCommand.c: 454: if (!StringContains(Input, "="))
 13348  011462  0101               	movlb	1	; () banked
 13349  011464  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 13350  011468  0101               	movlb	1	; () banked
 13351  01146A  C1C8  F17C         	movff	Command@Input,StringContains@This
 13352  01146E  0EFD               	movlw	high (STR_201+11)
 13353  011470  0101               	movlb	1	; () banked
 13354  011472  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13355  011474  0E05               	movlw	low (STR_201+11)
 13356  011476  0101               	movlb	1	; () banked
 13357  011478  6F7E               	movwf	StringContains@That& (0+255),b
 13358  01147A  ECE9  F0B9         	call	_StringContains	;wreg free
 13359  01147E  0900               	iorlw	0
 13360  011480  A4D8               	btfss	status,2,c
 13361  011482  D008               	goto	l13184
 13362                           
 13363                           ;StringCommand.c: 455: {
 13364                           ;StringCommand.c: 456: StringAddEqual(Input);
 13365  011484  0101               	movlb	1	; () banked
 13366  011486  C1C9  F18C         	movff	Command@Input+1,StringAddEqual@Input+1
 13367  01148A  0101               	movlb	1	; () banked
 13368  01148C  C1C8  F18B         	movff	Command@Input,StringAddEqual@Input
 13369  011490  ECD6  F0A7         	call	_StringAddEqual	;wreg free
 13370  011494                     l13184:
 13371                           
 13372                           ;StringCommand.c: 457: }
 13373                           ;StringCommand.c: 458: tempLONG = GetEnteredNumber(Input);
 13374  011494  0101               	movlb	1	; () banked
 13375  011496  C1C9  F189         	movff	Command@Input+1,GetEnteredNumber@This+1
 13376  01149A  0101               	movlb	1	; () banked
 13377  01149C  C1C8  F188         	movff	Command@Input,GetEnteredNumber@This
 13378  0114A0  ECD8  F0A6         	call	_GetEnteredNumber	;wreg free
 13379  0114A4  C188  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 13380  0114A8  C189  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 13381  0114AC  C18A  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 13382  0114B0  C18B  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 13383                           
 13384                           ;StringCommand.c: 459: if(tempLONG < 1000 && tempLONG >= 0 )
 13385  0114B4  0105               	movlb	5	; () banked
 13386  0114B6  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 13387  0114B8  0A80               	xorlw	128
 13388  0114BA  0F80               	addlw	128
 13389  0114BC  E10B               	bnz	u16945
 13390  0114BE  0E00               	movlw	0
 13391  0114C0  0105               	movlb	5	; () banked
 13392  0114C2  5DE0               	subwf	(Command@tempLONG+2)& (0+255),w,b
 13393  0114C4  E107               	bnz	u16945
 13394  0114C6  0E03               	movlw	3
 13395  0114C8  0105               	movlb	5	; () banked
 13396  0114CA  5DDF               	subwf	(Command@tempLONG+1)& (0+255),w,b
 13397  0114CC  E103               	bnz	u16945
 13398  0114CE  0EE8               	movlw	232
 13399  0114D0  0105               	movlb	5	; () banked
 13400  0114D2  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 13401  0114D4                     u16945:
 13402  0114D4  B0D8               	btfsc	status,0,c
 13403  0114D6  D007               	goto	l13192
 13404                           
 13405                           ; BSR set to: 5
 13406  0114D8  0105               	movlb	5	; () banked
 13407  0114DA  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 13408  0114DC  D004               	goto	l13192
 13409                           
 13410                           ; BSR set to: 5
 13411                           ;StringCommand.c: 460: {
 13412                           ;StringCommand.c: 461: contrast = (int)tempLONG;
 13413  0114DE  C5DE  F5D8         	movff	Command@tempLONG,Command@contrast
 13414  0114E2  C5DF  F5D9         	movff	Command@tempLONG+1,Command@contrast+1
 13415  0114E6                     l13192:
 13416                           
 13417                           ; BSR set to: 5
 13418                           ;StringCommand.c: 462: }
 13419                           ;StringCommand.c: 463: if (tempLONG == 2147483645L)
 13420  0114E6  0105               	movlb	5	; () banked
 13421  0114E8  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 13422  0114EA  0EFD               	movlw	253
 13423  0114EC  B4D8               	btfsc	status,2,c
 13424  0114EE  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 13425  0114F0  B4D8               	btfsc	status,2,c
 13426  0114F2  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 13427  0114F4  0E7F               	movlw	127
 13428  0114F6  B4D8               	btfsc	status,2,c
 13429  0114F8  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 13430  0114FA  A4D8               	btfss	status,2,c
 13431  0114FC  D012               	goto	l13196
 13432                           
 13433                           ; BSR set to: 5
 13434                           ;StringCommand.c: 464: {
 13435                           ;StringCommand.c: 465: UARTstring("Error: No number entered\r\n");
 13436  0114FE  0EF5               	movlw	high STR_164
 13437  011500  0101               	movlb	1	; () banked
 13438  011502  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13439  011504  0E5F               	movlw	low STR_164
 13440  011506  0101               	movlb	1	; () banked
 13441  011508  6F87               	movwf	UARTstring@data& (0+255),b
 13442  01150A  ECD0  F0B4         	call	_UARTstring	;wreg free
 13443                           
 13444                           ;StringCommand.c: 466: LCDdisplayFeedback("ERR: No number");
 13445  01150E  0EFB               	movlw	high STR_184
 13446  011510  0101               	movlb	1	; () banked
 13447  011512  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13448  011514  0EFE               	movlw	low STR_184
 13449  011516  0101               	movlb	1	; () banked
 13450  011518  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13451  01151A  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13452                           
 13453                           ;StringCommand.c: 467: }
 13454  01151E  EFBA  F094         	goto	l619
 13455  011522                     l13196:
 13456                           
 13457                           ;StringCommand.c: 468: else if (contrast > 100)
 13458  011522  0105               	movlb	5	; () banked
 13459  011524  51D9               	movf	(Command@contrast+1)& (0+255),w,b
 13460  011526  0A80               	xorlw	128
 13461  011528  0F80               	addlw	-128
 13462  01152A  0E65               	movlw	101
 13463  01152C  B4D8               	btfsc	status,2,c
 13464  01152E  5DD8               	subwf	Command@contrast& (0+255),w,b
 13465  011530  A0D8               	btfss	status,0,c
 13466  011532  D012               	goto	l13200
 13467                           
 13468                           ; BSR set to: 5
 13469                           ;StringCommand.c: 469: {
 13470                           ;StringCommand.c: 470: UARTstring("Invalid Contrast Duty cycle: Greater than 100\r\n");
 13471  011534  0EF1               	movlw	high STR_185
 13472  011536  0101               	movlb	1	; () banked
 13473  011538  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13474  01153A  0E50               	movlw	low STR_185
 13475  01153C  0101               	movlb	1	; () banked
 13476  01153E  6F87               	movwf	UARTstring@data& (0+255),b
 13477  011540  ECD0  F0B4         	call	_UARTstring	;wreg free
 13478                           
 13479                           ;StringCommand.c: 471: LCDdisplayFeedback("ERR: CNST > 100");
 13480  011544  0EF9               	movlw	high STR_186
 13481  011546  0101               	movlb	1	; () banked
 13482  011548  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13483  01154A  0EE9               	movlw	low STR_186
 13484  01154C  0101               	movlb	1	; () banked
 13485  01154E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13486  011550  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13487                           
 13488                           ;StringCommand.c: 472: }
 13489  011554  EFBA  F094         	goto	l619
 13490  011558                     l13200:
 13491                           
 13492                           ;StringCommand.c: 473: else if (contrast < 0)
 13493  011558  0105               	movlb	5	; () banked
 13494  01155A  51D9               	movf	(Command@contrast+1)& (0+255),w,b
 13495  01155C  0A80               	xorlw	128
 13496  01155E  6EF3               	movwf	prodl,c
 13497  011560  0E80               	movlw	128
 13498  011562  5CF3               	subwf	prodl,w,c
 13499  011564  0E00               	movlw	0
 13500  011566  B4D8               	btfsc	status,2,c
 13501  011568  5DD8               	subwf	Command@contrast& (0+255),w,b
 13502  01156A  B0D8               	btfsc	status,0,c
 13503  01156C  D012               	goto	l13204
 13504                           
 13505                           ; BSR set to: 5
 13506                           ;StringCommand.c: 474: {
 13507                           ;StringCommand.c: 475: UARTstring("Invalid Contrast Duty Cycle: Less than 0\r\n");
 13508  01156E  0EF1               	movlw	high STR_187
 13509  011570  0101               	movlb	1	; () banked
 13510  011572  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13511  011574  0EDF               	movlw	low STR_187
 13512  011576  0101               	movlb	1	; () banked
 13513  011578  6F87               	movwf	UARTstring@data& (0+255),b
 13514  01157A  ECD0  F0B4         	call	_UARTstring	;wreg free
 13515                           
 13516                           ;StringCommand.c: 476: LCDdisplayFeedback("ERR: CNST < 0");
 13517  01157E  0EFC               	movlw	high STR_188
 13518  011580  0101               	movlb	1	; () banked
 13519  011582  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13520  011584  0E2B               	movlw	low STR_188
 13521  011586  0101               	movlb	1	; () banked
 13522  011588  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13523  01158A  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13524                           
 13525                           ;StringCommand.c: 477: }
 13526  01158E  EFBA  F094         	goto	l619
 13527  011592                     l13204:
 13528                           
 13529                           ;StringCommand.c: 478: else
 13530                           ;StringCommand.c: 479: {
 13531                           ;StringCommand.c: 480: SetContrast(contrast);
 13532  011592  0105               	movlb	5	; () banked
 13533  011594  51D8               	movf	Command@contrast& (0+255),w,b
 13534  011596  ECE6  F0AF         	call	_SetContrast
 13535                           
 13536                           ;StringCommand.c: 481: sprintf(buf, "Contrast Duty Cycle set to %d\r\n", contrast);
 13537  01159A  0105               	movlb	5	; () banked
 13538  01159C  0E05               	movlw	high Command@buf
 13539  01159E  0101               	movlb	1	; () banked
 13540  0115A0  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 13541  0115A2  0105               	movlb	5	; () banked
 13542  0115A4  0E00               	movlw	low Command@buf
 13543  0115A6  0101               	movlb	1	; () banked
 13544  0115A8  6F92               	movwf	sprintf@sp& (0+255),b
 13545  0115AA  0EF3               	movlw	high STR_189
 13546  0115AC  0101               	movlb	1	; () banked
 13547  0115AE  6F95               	movwf	(sprintf@f+1)& (0+255),b
 13548  0115B0  0EFF               	movlw	low STR_189
 13549  0115B2  0101               	movlb	1	; () banked
 13550  0115B4  6F94               	movwf	sprintf@f& (0+255),b
 13551  0115B6  C5D8  F196         	movff	Command@contrast,?_sprintf+4
 13552  0115BA  C5D9  F197         	movff	Command@contrast+1,?_sprintf+5
 13553  0115BE  ECC4  F094         	call	_sprintf	;wreg free
 13554                           
 13555                           ;StringCommand.c: 482: UARTstring(buf);
 13556  0115C2  0105               	movlb	5	; () banked
 13557  0115C4  0E05               	movlw	high Command@buf
 13558  0115C6  0101               	movlb	1	; () banked
 13559  0115C8  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13560  0115CA  0105               	movlb	5	; () banked
 13561  0115CC  0E00               	movlw	low Command@buf
 13562  0115CE  0101               	movlb	1	; () banked
 13563  0115D0  6F87               	movwf	UARTstring@data& (0+255),b
 13564  0115D2  ECD0  F0B4         	call	_UARTstring	;wreg free
 13565                           
 13566                           ;StringCommand.c: 483: sprintf(buf, "CNST set to %d", duty);
 13567  0115D6  0105               	movlb	5	; () banked
 13568  0115D8  0E05               	movlw	high Command@buf
 13569  0115DA  0101               	movlb	1	; () banked
 13570  0115DC  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 13571  0115DE  0105               	movlb	5	; () banked
 13572  0115E0  0E00               	movlw	low Command@buf
 13573  0115E2  0101               	movlb	1	; () banked
 13574  0115E4  6F92               	movwf	sprintf@sp& (0+255),b
 13575  0115E6  0EFB               	movlw	high STR_190
 13576  0115E8  0101               	movlb	1	; () banked
 13577  0115EA  6F95               	movwf	(sprintf@f+1)& (0+255),b
 13578  0115EC  0E77               	movlw	low STR_190
 13579  0115EE  0101               	movlb	1	; () banked
 13580  0115F0  6F94               	movwf	sprintf@f& (0+255),b
 13581  0115F2  C5DC  F196         	movff	Command@duty,?_sprintf+4
 13582  0115F6  C5DD  F197         	movff	Command@duty+1,?_sprintf+5
 13583  0115FA  ECC4  F094         	call	_sprintf	;wreg free
 13584                           
 13585                           ;StringCommand.c: 484: LCDdisplayFeedback(buf);
 13586  0115FE  0105               	movlb	5	; () banked
 13587  011600  0E05               	movlw	high Command@buf
 13588  011602  0101               	movlb	1	; () banked
 13589  011604  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13590  011606  0105               	movlb	5	; () banked
 13591  011608  0E00               	movlw	low Command@buf
 13592  01160A  0101               	movlb	1	; () banked
 13593  01160C  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13594  01160E  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13595  011612  EFBA  F094         	goto	l619
 13596  011616                     l13214:
 13597                           
 13598                           ;StringCommand.c: 487: else
 13599                           ;StringCommand.c: 488: {
 13600                           ;StringCommand.c: 489: UARTstring("Contrast PWM Help Menu\r\n\n");
 13601  011616  0EF5               	movlw	high STR_191
 13602  011618  0101               	movlb	1	; () banked
 13603  01161A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13604  01161C  0EAF               	movlw	low STR_191
 13605  01161E  0101               	movlb	1	; () banked
 13606  011620  6F87               	movwf	UARTstring@data& (0+255),b
 13607  011622  ECD0  F0B4         	call	_UARTstring	;wreg free
 13608                           
 13609                           ;StringCommand.c: 490: UARTstring("To set Contrast PWM brightness enter 'Contrast = duty
      +                          cycle'\r\n");
 13610  011626  0EEF               	movlw	high STR_192
 13611  011628  0101               	movlb	1	; () banked
 13612  01162A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13613  01162C  0E9D               	movlw	low STR_192
 13614  01162E  0101               	movlb	1	; () banked
 13615  011630  6F87               	movwf	UARTstring@data& (0+255),b
 13616  011632  ECD0  F0B4         	call	_UARTstring	;wreg free
 13617                           
 13618                           ;StringCommand.c: 491: UARTstring("where the dutycycle is a number 0 - 100\r\n");
 13619  011636  0EF2               	movlw	high STR_176
 13620  011638  0101               	movlb	1	; () banked
 13621  01163A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13622  01163C  0E0A               	movlw	low STR_176
 13623  01163E  0101               	movlb	1	; () banked
 13624  011640  6F87               	movwf	UARTstring@data& (0+255),b
 13625  011642  ECD0  F0B4         	call	_UARTstring	;wreg free
 13626                           
 13627                           ;StringCommand.c: 492: LCD_Scroll("LCD Contrast");
 13628  011646  0EFD               	movlw	high STR_194
 13629  011648  0101               	movlb	1	; () banked
 13630  01164A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13631  01164C  0E48               	movlw	low STR_194
 13632  01164E  0101               	movlb	1	; () banked
 13633  011650  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13634  011652  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 13635                           
 13636                           ;StringCommand.c: 493: LCD_Scroll("Commands:");
 13637  011656  0EFE               	movlw	high STR_178
 13638  011658  0101               	movlb	1	; () banked
 13639  01165A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13640  01165C  0E36               	movlw	low STR_178
 13641  01165E  0101               	movlb	1	; () banked
 13642  011660  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13643  011662  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 13644                           
 13645                           ;StringCommand.c: 494: LCD_Scroll("Contrast#");
 13646  011666  0EFE               	movlw	high STR_196
 13647  011668  0101               	movlb	1	; () banked
 13648  01166A  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 13649  01166C  0E2C               	movlw	low STR_196
 13650  01166E  0101               	movlb	1	; () banked
 13651  011670  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 13652  011672  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 13653  011676  EFBA  F094         	goto	l619
 13654  01167A                     l13222:
 13655                           
 13656                           ;StringCommand.c: 498: else if (StartsWith(Input, "adc"))
 13657  01167A  0101               	movlb	1	; () banked
 13658  01167C  C1C9  F17D         	movff	Command@Input+1,StartsWith@This+1
 13659  011680  0101               	movlb	1	; () banked
 13660  011682  C1C8  F17C         	movff	Command@Input,StartsWith@This
 13661  011686  0EFF               	movlw	high STR_197
 13662  011688  0101               	movlb	1	; () banked
 13663  01168A  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 13664  01168C  0EE0               	movlw	low STR_197
 13665  01168E  0101               	movlb	1	; () banked
 13666  011690  6F7E               	movwf	StartsWith@That& (0+255),b
 13667  011692  EC64  F0B6         	call	_StartsWith	;wreg free
 13668  011696  0900               	iorlw	0
 13669  011698  B4D8               	btfsc	status,2,c
 13670  01169A  D18E               	goto	l13282
 13671                           
 13672                           ;StringCommand.c: 499: {
 13673                           ;StringCommand.c: 500: if (!StringContains(Input, "?"))
 13674  01169C  0101               	movlb	1	; () banked
 13675  01169E  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 13676  0116A2  0101               	movlb	1	; () banked
 13677  0116A4  C1C8  F17C         	movff	Command@Input,StringContains@This
 13678  0116A8  0EFA               	movlw	high (STR_83+14)
 13679  0116AA  0101               	movlb	1	; () banked
 13680  0116AC  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13681  0116AE  0E17               	movlw	low (STR_83+14)
 13682  0116B0  0101               	movlb	1	; () banked
 13683  0116B2  6F7E               	movwf	StringContains@That& (0+255),b
 13684  0116B4  ECE9  F0B9         	call	_StringContains	;wreg free
 13685  0116B8  0900               	iorlw	0
 13686  0116BA  A4D8               	btfss	status,2,c
 13687  0116BC  D13B               	goto	l13274
 13688                           
 13689                           ;StringCommand.c: 501: {
 13690                           ;StringCommand.c: 502: if (!StringContains(Input, "="))
 13691  0116BE  0101               	movlb	1	; () banked
 13692  0116C0  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 13693  0116C4  0101               	movlb	1	; () banked
 13694  0116C6  C1C8  F17C         	movff	Command@Input,StringContains@This
 13695  0116CA  0EFD               	movlw	high (STR_201+11)
 13696  0116CC  0101               	movlb	1	; () banked
 13697  0116CE  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 13698  0116D0  0E05               	movlw	low (STR_201+11)
 13699  0116D2  0101               	movlb	1	; () banked
 13700  0116D4  6F7E               	movwf	StringContains@That& (0+255),b
 13701  0116D6  ECE9  F0B9         	call	_StringContains	;wreg free
 13702  0116DA  0900               	iorlw	0
 13703  0116DC  A4D8               	btfss	status,2,c
 13704  0116DE  D008               	goto	l13230
 13705                           
 13706                           ;StringCommand.c: 503: {
 13707                           ;StringCommand.c: 504: StringAddEqual(Input);
 13708  0116E0  0101               	movlb	1	; () banked
 13709  0116E2  C1C9  F18C         	movff	Command@Input+1,StringAddEqual@Input+1
 13710  0116E6  0101               	movlb	1	; () banked
 13711  0116E8  C1C8  F18B         	movff	Command@Input,StringAddEqual@Input
 13712  0116EC  ECD6  F0A7         	call	_StringAddEqual	;wreg free
 13713  0116F0                     l13230:
 13714                           
 13715                           ;StringCommand.c: 505: }
 13716                           ;StringCommand.c: 506: tempLONG = GetEnteredNumber(Input);
 13717  0116F0  0101               	movlb	1	; () banked
 13718  0116F2  C1C9  F189         	movff	Command@Input+1,GetEnteredNumber@This+1
 13719  0116F6  0101               	movlb	1	; () banked
 13720  0116F8  C1C8  F188         	movff	Command@Input,GetEnteredNumber@This
 13721  0116FC  ECD8  F0A6         	call	_GetEnteredNumber	;wreg free
 13722  011700  C188  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 13723  011704  C189  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 13724  011708  C18A  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 13725  01170C  C18B  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 13726                           
 13727                           ;StringCommand.c: 507: if(tempLONG < 1000 && tempLONG >= 0 )
 13728  011710  0105               	movlb	5	; () banked
 13729  011712  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 13730  011714  0A80               	xorlw	128
 13731  011716  0F80               	addlw	128
 13732  011718  E10B               	bnz	u17025
 13733  01171A  0E00               	movlw	0
 13734  01171C  0105               	movlb	5	; () banked
 13735  01171E  5DE0               	subwf	(Command@tempLONG+2)& (0+255),w,b
 13736  011720  E107               	bnz	u17025
 13737  011722  0E03               	movlw	3
 13738  011724  0105               	movlb	5	; () banked
 13739  011726  5DDF               	subwf	(Command@tempLONG+1)& (0+255),w,b
 13740  011728  E103               	bnz	u17025
 13741  01172A  0EE8               	movlw	232
 13742  01172C  0105               	movlb	5	; () banked
 13743  01172E  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 13744  011730                     u17025:
 13745  011730  B0D8               	btfsc	status,0,c
 13746  011732  D007               	goto	l13238
 13747                           
 13748                           ; BSR set to: 5
 13749  011734  0105               	movlb	5	; () banked
 13750  011736  BFE1               	btfsc	(Command@tempLONG+3)& (0+255),7,b
 13751  011738  D004               	goto	l13238
 13752                           
 13753                           ; BSR set to: 5
 13754                           ;StringCommand.c: 508: {
 13755                           ;StringCommand.c: 509: channel = (int)tempLONG;
 13756  01173A  C5DE  F5DA         	movff	Command@tempLONG,Command@channel
 13757  01173E  C5DF  F5DB         	movff	Command@tempLONG+1,Command@channel+1
 13758  011742                     l13238:
 13759                           
 13760                           ; BSR set to: 5
 13761                           ;StringCommand.c: 510: }
 13762                           ;StringCommand.c: 511: if (tempLONG == 2147483645L) {
 13763  011742  0105               	movlb	5	; () banked
 13764  011744  29DF               	incf	(Command@tempLONG+1)& (0+255),w,b
 13765  011746  0EFD               	movlw	253
 13766  011748  B4D8               	btfsc	status,2,c
 13767  01174A  19DE               	xorwf	Command@tempLONG& (0+255),w,b
 13768  01174C  B4D8               	btfsc	status,2,c
 13769  01174E  29E0               	incf	(Command@tempLONG+2)& (0+255),w,b
 13770  011750  0E7F               	movlw	127
 13771  011752  B4D8               	btfsc	status,2,c
 13772  011754  19E1               	xorwf	(Command@tempLONG+3)& (0+255),w,b
 13773  011756  A4D8               	btfss	status,2,c
 13774  011758  D012               	goto	l13242
 13775                           
 13776                           ; BSR set to: 5
 13777                           ;StringCommand.c: 512: UARTstring("Error: only use one equal sign\r\n");
 13778  01175A  0EF3               	movlw	high STR_200
 13779  01175C  0101               	movlb	1	; () banked
 13780  01175E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13781  011760  0EBE               	movlw	low STR_200
 13782  011762  0101               	movlb	1	; () banked
 13783  011764  6F87               	movwf	UARTstring@data& (0+255),b
 13784  011766  ECD0  F0B4         	call	_UARTstring	;wreg free
 13785                           
 13786                           ;StringCommand.c: 513: LCDdisplayFeedback("ERR: Use 1 =");
 13787  01176A  0EFC               	movlw	high STR_201
 13788  01176C  0101               	movlb	1	; () banked
 13789  01176E  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13790  011770  0EFA               	movlw	low STR_201
 13791  011772  0101               	movlb	1	; () banked
 13792  011774  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13793  011776  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13794                           
 13795                           ;StringCommand.c: 514: }
 13796  01177A  EFBA  F094         	goto	l619
 13797  01177E                     l13242:
 13798                           
 13799                           ;StringCommand.c: 515: else if (channel < 0)
 13800  01177E  0105               	movlb	5	; () banked
 13801  011780  51DB               	movf	(Command@channel+1)& (0+255),w,b
 13802  011782  0A80               	xorlw	128
 13803  011784  6EF3               	movwf	prodl,c
 13804  011786  0E80               	movlw	128
 13805  011788  5CF3               	subwf	prodl,w,c
 13806  01178A  0E00               	movlw	0
 13807  01178C  B4D8               	btfsc	status,2,c
 13808  01178E  5DDA               	subwf	Command@channel& (0+255),w,b
 13809  011790  B0D8               	btfsc	status,0,c
 13810  011792  D012               	goto	l13246
 13811                           
 13812                           ; BSR set to: 5
 13813                           ;StringCommand.c: 516: {
 13814                           ;StringCommand.c: 517: UARTstring("Error: No negative channels\r\n");
 13815  011794  0EF4               	movlw	high STR_202
 13816  011796  0101               	movlb	1	; () banked
 13817  011798  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13818  01179A  0E5E               	movlw	low STR_202
 13819  01179C  0101               	movlb	1	; () banked
 13820  01179E  6F87               	movwf	UARTstring@data& (0+255),b
 13821  0117A0  ECD0  F0B4         	call	_UARTstring	;wreg free
 13822                           
 13823                           ;StringCommand.c: 518: LCDdisplayFeedback("ERR: Use + Chnl");
 13824  0117A4  0EFA               	movlw	high STR_203
 13825  0117A6  0101               	movlb	1	; () banked
 13826  0117A8  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13827  0117AA  0EF9               	movlw	low STR_203
 13828  0117AC  0101               	movlb	1	; () banked
 13829  0117AE  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13830  0117B0  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13831                           
 13832                           ;StringCommand.c: 519: }
 13833  0117B4  EFBA  F094         	goto	l619
 13834  0117B8                     l13246:
 13835                           
 13836                           ;StringCommand.c: 520: else if (channel >= 32000)
 13837  0117B8  0105               	movlb	5	; () banked
 13838  0117BA  51DB               	movf	(Command@channel+1)& (0+255),w,b
 13839  0117BC  0A80               	xorlw	128
 13840  0117BE  0F03               	addlw	-253
 13841  0117C0  0E00               	movlw	0
 13842  0117C2  B4D8               	btfsc	status,2,c
 13843  0117C4  5DDA               	subwf	Command@channel& (0+255),w,b
 13844  0117C6  A0D8               	btfss	status,0,c
 13845  0117C8  D012               	goto	l13250
 13846                           
 13847                           ; BSR set to: 5
 13848                           ;StringCommand.c: 521: {
 13849                           ;StringCommand.c: 522: UARTstring("Error: in parsing command\r\n");
 13850  0117CA  0EF4               	movlw	high STR_204
 13851  0117CC  0101               	movlb	1	; () banked
 13852  0117CE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13853  0117D0  0EEF               	movlw	low STR_204
 13854  0117D2  0101               	movlb	1	; () banked
 13855  0117D4  6F87               	movwf	UARTstring@data& (0+255),b
 13856  0117D6  ECD0  F0B4         	call	_UARTstring	;wreg free
 13857                           
 13858                           ;StringCommand.c: 523: LCDdisplayFeedback("ERR: Cant parse");
 13859  0117DA  0EFA               	movlw	high STR_205
 13860  0117DC  0101               	movlb	1	; () banked
 13861  0117DE  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13862  0117E0  0EB9               	movlw	low STR_205
 13863  0117E2  0101               	movlb	1	; () banked
 13864  0117E4  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13865  0117E6  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13866                           
 13867                           ;StringCommand.c: 524: }
 13868  0117EA  EFBA  F094         	goto	l619
 13869  0117EE                     l13250:
 13870                           
 13871                           ;StringCommand.c: 525: else if (channel != 0)
 13872  0117EE  0105               	movlb	5	; () banked
 13873  0117F0  51DB               	movf	(Command@channel+1)& (0+255),w,b
 13874  0117F2  11DA               	iorwf	Command@channel& (0+255),w,b
 13875  0117F4  B4D8               	btfsc	status,2,c
 13876  0117F6  D03E               	goto	l13258
 13877                           
 13878                           ; BSR set to: 5
 13879                           ;StringCommand.c: 526: {
 13880                           ;StringCommand.c: 527: sprintf(buf, "Channel %d is not configured", channel);
 13881  0117F8  0105               	movlb	5	; () banked
 13882  0117FA  0E05               	movlw	high Command@buf
 13883  0117FC  0101               	movlb	1	; () banked
 13884  0117FE  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 13885  011800  0105               	movlb	5	; () banked
 13886  011802  0E00               	movlw	low Command@buf
 13887  011804  0101               	movlb	1	; () banked
 13888  011806  6F92               	movwf	sprintf@sp& (0+255),b
 13889  011808  0EF4               	movlw	high STR_206
 13890  01180A  0101               	movlb	1	; () banked
 13891  01180C  6F95               	movwf	(sprintf@f+1)& (0+255),b
 13892  01180E  0E99               	movlw	low STR_206
 13893  011810  0101               	movlb	1	; () banked
 13894  011812  6F94               	movwf	sprintf@f& (0+255),b
 13895  011814  C5DA  F196         	movff	Command@channel,?_sprintf+4
 13896  011818  C5DB  F197         	movff	Command@channel+1,?_sprintf+5
 13897  01181C  ECC4  F094         	call	_sprintf	;wreg free
 13898                           
 13899                           ;StringCommand.c: 528: UARTstring(buf);
 13900  011820  0105               	movlb	5	; () banked
 13901  011822  0E05               	movlw	high Command@buf
 13902  011824  0101               	movlb	1	; () banked
 13903  011826  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 13904  011828  0105               	movlb	5	; () banked
 13905  01182A  0E00               	movlw	low Command@buf
 13906  01182C  0101               	movlb	1	; () banked
 13907  01182E  6F87               	movwf	UARTstring@data& (0+255),b
 13908  011830  ECD0  F0B4         	call	_UARTstring	;wreg free
 13909                           
 13910                           ;StringCommand.c: 529: sprintf(buf, "Chnl set to %d\r\n", duty);
 13911  011834  0105               	movlb	5	; () banked
 13912  011836  0E05               	movlw	high Command@buf
 13913  011838  0101               	movlb	1	; () banked
 13914  01183A  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 13915  01183C  0105               	movlb	5	; () banked
 13916  01183E  0E00               	movlw	low Command@buf
 13917  011840  0101               	movlb	1	; () banked
 13918  011842  6F92               	movwf	sprintf@sp& (0+255),b
 13919  011844  0EF9               	movlw	high STR_207
 13920  011846  0101               	movlb	1	; () banked
 13921  011848  6F95               	movwf	(sprintf@f+1)& (0+255),b
 13922  01184A  0E0C               	movlw	low STR_207
 13923  01184C  0101               	movlb	1	; () banked
 13924  01184E  6F94               	movwf	sprintf@f& (0+255),b
 13925  011850  C5DC  F196         	movff	Command@duty,?_sprintf+4
 13926  011854  C5DD  F197         	movff	Command@duty+1,?_sprintf+5
 13927  011858  ECC4  F094         	call	_sprintf	;wreg free
 13928                           
 13929                           ;StringCommand.c: 530: LCDdisplayFeedback(buf);
 13930  01185C  0105               	movlb	5	; () banked
 13931  01185E  0E05               	movlw	high Command@buf
 13932  011860  0101               	movlb	1	; () banked
 13933  011862  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 13934  011864  0105               	movlb	5	; () banked
 13935  011866  0E00               	movlw	low Command@buf
 13936  011868  0101               	movlb	1	; () banked
 13937  01186A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 13938  01186C  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 13939                           
 13940                           ;StringCommand.c: 531: }
 13941  011870  EFBA  F094         	goto	l619
 13942  011874                     l13258:
 13943                           
 13944                           ;StringCommand.c: 532: else
 13945                           ;StringCommand.c: 533: {
 13946                           ;StringCommand.c: 534: LATE |= 0b00000010;
 13947  011874  828D               	bsf	3981,1,c	;volatile
 13948                           
 13949                           ;StringCommand.c: 535: delayUS(1000);
 13950  011876  0EE8               	movlw	232
 13951  011878  0101               	movlb	1	; () banked
 13952  01187A  6F7C               	movwf	delayUS@US& (0+255),b
 13953  01187C  0E03               	movlw	3
 13954  01187E  0101               	movlb	1	; () banked
 13955  011880  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 13956  011882  0E00               	movlw	0
 13957  011884  0101               	movlb	1	; () banked
 13958  011886  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 13959  011888  0E00               	movlw	0
 13960  01188A  0101               	movlb	1	; () banked
 13961  01188C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 13962  01188E  ECA4  F0BA         	call	_delayUS	;wreg free
 13963                           
 13964                           ;StringCommand.c: 536: ADC_Value = InternalADC_Read(channel);
 13965  011892  0105               	movlb	5	; () banked
 13966  011894  51DA               	movf	Command@channel& (0+255),w,b
 13967  011896  ECEE  F0BB         	call	_InternalADC_Read
 13968  01189A  0101               	movlb	1	; () banked
 13969  01189C  C18B  F5C8         	movff	?_InternalADC_Read,Command@ADC_Value
 13970  0118A0  0101               	movlb	1	; () banked
 13971  0118A2  C18C  F5C9         	movff	?_InternalADC_Read+1,Command@ADC_Value+1
 13972                           
 13973                           ; BSR set to: 1
 13974                           ;StringCommand.c: 537: sprintf(buf, "ADC channel %d = %d", channel, ADC_Value);
 13975  0118A6  0105               	movlb	5	; () banked
 13976  0118A8  0E05               	movlw	high Command@buf
 13977  0118AA  0101               	movlb	1	; () banked
 13978  0118AC  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 13979  0118AE  0105               	movlb	5	; () banked
 13980  0118B0  0E00               	movlw	low Command@buf
 13981  0118B2  0101               	movlb	1	; () banked
 13982  0118B4  6F92               	movwf	sprintf@sp& (0+255),b
 13983  0118B6  0EF7               	movlw	high STR_208
 13984  0118B8  0101               	movlb	1	; () banked
 13985  0118BA  6F95               	movwf	(sprintf@f+1)& (0+255),b
 13986  0118BC  0E51               	movlw	low STR_208
 13987  0118BE  0101               	movlb	1	; () banked
 13988  0118C0  6F94               	movwf	sprintf@f& (0+255),b
 13989  0118C2  C5DA  F196         	movff	Command@channel,?_sprintf+4
 13990  0118C6  C5DB  F197         	movff	Command@channel+1,?_sprintf+5
 13991  0118CA  C5C8  F198         	movff	Command@ADC_Value,?_sprintf+6
 13992  0118CE  C5C9  F199         	movff	Command@ADC_Value+1,?_sprintf+7
 13993  0118D2  ECC4  F094         	call	_sprintf	;wreg free
 13994                           
 13995                           ;StringCommand.c: 538: LATE &= ~0b00000010;
 13996  0118D6  928D               	bcf	3981,1,c	;volatile
 13997                           
 13998                           ;StringCommand.c: 539: UARTstring(buf);
 13999  0118D8  0105               	movlb	5	; () banked
 14000  0118DA  0E05               	movlw	high Command@buf
 14001  0118DC  0101               	movlb	1	; () banked
 14002  0118DE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14003  0118E0  0105               	movlb	5	; () banked
 14004  0118E2  0E00               	movlw	low Command@buf
 14005  0118E4  0101               	movlb	1	; () banked
 14006  0118E6  6F87               	movwf	UARTstring@data& (0+255),b
 14007  0118E8  ECD0  F0B4         	call	_UARTstring	;wreg free
 14008                           
 14009                           ;StringCommand.c: 540: sprintf(buf, "Chnl %d = %d", channel, ADC_Value);
 14010  0118EC  0105               	movlb	5	; () banked
 14011  0118EE  0E05               	movlw	high Command@buf
 14012  0118F0  0101               	movlb	1	; () banked
 14013  0118F2  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14014  0118F4  0105               	movlb	5	; () banked
 14015  0118F6  0E00               	movlw	low Command@buf
 14016  0118F8  0101               	movlb	1	; () banked
 14017  0118FA  6F92               	movwf	sprintf@sp& (0+255),b
 14018  0118FC  0EFD               	movlw	high STR_209
 14019  0118FE  0101               	movlb	1	; () banked
 14020  011900  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14021  011902  0E14               	movlw	low STR_209
 14022  011904  0101               	movlb	1	; () banked
 14023  011906  6F94               	movwf	sprintf@f& (0+255),b
 14024  011908  C5DA  F196         	movff	Command@channel,?_sprintf+4
 14025  01190C  C5DB  F197         	movff	Command@channel+1,?_sprintf+5
 14026  011910  C5C8  F198         	movff	Command@ADC_Value,?_sprintf+6
 14027  011914  C5C9  F199         	movff	Command@ADC_Value+1,?_sprintf+7
 14028  011918  ECC4  F094         	call	_sprintf	;wreg free
 14029                           
 14030                           ;StringCommand.c: 541: LCDdisplayFeedback(buf);
 14031  01191C  0105               	movlb	5	; () banked
 14032  01191E  0E05               	movlw	high Command@buf
 14033  011920  0101               	movlb	1	; () banked
 14034  011922  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14035  011924  0105               	movlb	5	; () banked
 14036  011926  0E00               	movlw	low Command@buf
 14037  011928  0101               	movlb	1	; () banked
 14038  01192A  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14039  01192C  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 14040  011930  EFBA  F094         	goto	l619
 14041  011934                     l13274:
 14042                           
 14043                           ;StringCommand.c: 544: else
 14044                           ;StringCommand.c: 545: {
 14045                           ;StringCommand.c: 546: UARTstring("ADC Help Menu\r\n\n");
 14046  011934  0EF8               	movlw	high STR_210
 14047  011936  0101               	movlb	1	; () banked
 14048  011938  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14049  01193A  0EEA               	movlw	low STR_210
 14050  01193C  0101               	movlb	1	; () banked
 14051  01193E  6F87               	movwf	UARTstring@data& (0+255),b
 14052  011940  ECD0  F0B4         	call	_UARTstring	;wreg free
 14053                           
 14054                           ;StringCommand.c: 547: UARTstring("Channels:\r\n");
 14055  011944  0EFD               	movlw	high STR_211
 14056  011946  0101               	movlb	1	; () banked
 14057  011948  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14058  01194A  0E7B               	movlw	low STR_211
 14059  01194C  0101               	movlb	1	; () banked
 14060  01194E  6F87               	movwf	UARTstring@data& (0+255),b
 14061  011950  ECD0  F0B4         	call	_UARTstring	;wreg free
 14062                           
 14063                           ;StringCommand.c: 548: UARTstring("0\r\n\n");
 14064  011954  0EFF               	movlw	high STR_212
 14065  011956  0101               	movlb	1	; () banked
 14066  011958  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14067  01195A  0EB3               	movlw	low STR_212
 14068  01195C  0101               	movlb	1	; () banked
 14069  01195E  6F87               	movwf	UARTstring@data& (0+255),b
 14070  011960  ECD0  F0B4         	call	_UARTstring	;wreg free
 14071                           
 14072                           ;StringCommand.c: 549: UARTstring("To read and adc channel, type the command\r\n ADC"
 14073                           ;StringCommand.c: 550: " followed by 'Channel' \r\n");
 14074  011964  0EEE               	movlw	high STR_213
 14075  011966  0101               	movlb	1	; () banked
 14076  011968  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14077  01196A  0E89               	movlw	low STR_213
 14078  01196C  0101               	movlb	1	; () banked
 14079  01196E  6F87               	movwf	UARTstring@data& (0+255),b
 14080  011970  ECD0  F0B4         	call	_UARTstring	;wreg free
 14081                           
 14082                           ;StringCommand.c: 551: UARTstring("i.e. ADC 0\r\n");
 14083  011974  0EFC               	movlw	high STR_214
 14084  011976  0101               	movlb	1	; () banked
 14085  011978  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14086  01197A  0ED3               	movlw	low STR_214
 14087  01197C  0101               	movlb	1	; () banked
 14088  01197E  6F87               	movwf	UARTstring@data& (0+255),b
 14089  011980  ECD0  F0B4         	call	_UARTstring	;wreg free
 14090                           
 14091                           ;StringCommand.c: 552: LCD_Scroll("ADC Menu");
 14092  011984  0EFE               	movlw	high STR_215
 14093  011986  0101               	movlb	1	; () banked
 14094  011988  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14095  01198A  0ECE               	movlw	low STR_215
 14096  01198C  0101               	movlb	1	; () banked
 14097  01198E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14098  011990  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 14099                           
 14100                           ;StringCommand.c: 553: LCD_Scroll("Commands:");
 14101  011994  0EFE               	movlw	high STR_178
 14102  011996  0101               	movlb	1	; () banked
 14103  011998  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14104  01199A  0E36               	movlw	low STR_178
 14105  01199C  0101               	movlb	1	; () banked
 14106  01199E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14107  0119A0  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 14108                           
 14109                           ;StringCommand.c: 554: LCD_Scroll("0");
 14110  0119A4  0EFC               	movlw	high (STR_188+12)
 14111  0119A6  0101               	movlb	1	; () banked
 14112  0119A8  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14113  0119AA  0E37               	movlw	low (STR_188+12)
 14114  0119AC  0101               	movlb	1	; () banked
 14115  0119AE  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14116  0119B0  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 14117  0119B4  EFBA  F094         	goto	l619
 14118  0119B8                     l13282:
 14119                           
 14120                           ;StringCommand.c: 558: else if (StartsWith(Input, "rtc"))
 14121  0119B8  0101               	movlb	1	; () banked
 14122  0119BA  C1C9  F17D         	movff	Command@Input+1,StartsWith@This+1
 14123  0119BE  0101               	movlb	1	; () banked
 14124  0119C0  C1C8  F17C         	movff	Command@Input,StartsWith@This
 14125  0119C4  0EFF               	movlw	high STR_218
 14126  0119C6  0101               	movlb	1	; () banked
 14127  0119C8  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 14128  0119CA  0EE4               	movlw	low STR_218
 14129  0119CC  0101               	movlb	1	; () banked
 14130  0119CE  6F7E               	movwf	StartsWith@That& (0+255),b
 14131  0119D0  EC64  F0B6         	call	_StartsWith	;wreg free
 14132  0119D4  0900               	iorlw	0
 14133  0119D6  B4D8               	btfsc	status,2,c
 14134  0119D8  D2EE               	goto	l13378
 14135                           
 14136                           ;StringCommand.c: 559: {
 14137                           ;StringCommand.c: 560: if (!StringContains(Input, "?"))
 14138  0119DA  0101               	movlb	1	; () banked
 14139  0119DC  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 14140  0119E0  0101               	movlb	1	; () banked
 14141  0119E2  C1C8  F17C         	movff	Command@Input,StringContains@This
 14142  0119E6  0EFA               	movlw	high (STR_83+14)
 14143  0119E8  0101               	movlb	1	; () banked
 14144  0119EA  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14145  0119EC  0E17               	movlw	low (STR_83+14)
 14146  0119EE  0101               	movlb	1	; () banked
 14147  0119F0  6F7E               	movwf	StringContains@That& (0+255),b
 14148  0119F2  ECE9  F0B9         	call	_StringContains	;wreg free
 14149  0119F6  0900               	iorlw	0
 14150  0119F8  A4D8               	btfss	status,2,c
 14151  0119FA  D273               	goto	l13366
 14152                           
 14153                           ;StringCommand.c: 561: {
 14154                           ;StringCommand.c: 562: if (StringContains(Input, "battery"))
 14155  0119FC  0101               	movlb	1	; () banked
 14156  0119FE  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 14157  011A02  0101               	movlb	1	; () banked
 14158  011A04  C1C8  F17C         	movff	Command@Input,StringContains@This
 14159  011A08  0EFF               	movlw	high STR_220
 14160  011A0A  0101               	movlb	1	; () banked
 14161  011A0C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14162  011A0E  0E4A               	movlw	low STR_220
 14163  011A10  0101               	movlb	1	; () banked
 14164  011A12  6F7E               	movwf	StringContains@That& (0+255),b
 14165  011A14  ECE9  F0B9         	call	_StringContains	;wreg free
 14166  011A18  0900               	iorlw	0
 14167  011A1A  B4D8               	btfsc	status,2,c
 14168  011A1C  D0DD               	goto	l13304
 14169                           
 14170                           ;StringCommand.c: 563: {
 14171                           ;StringCommand.c: 564: RTC_Battery_Value = (InternalADC_Read(2) + 8);
 14172  011A1E  0E02               	movlw	2
 14173  011A20  ECEE  F0BB         	call	_InternalADC_Read
 14174  011A24  0E08               	movlw	8
 14175  011A26  0101               	movlb	1	; () banked
 14176  011A28  258B               	addwf	?_InternalADC_Read& (0+255),w,b
 14177  011A2A  0105               	movlb	5	; () banked
 14178  011A2C  6FCA               	movwf	Command@RTC_Battery_Value& (0+255),b
 14179  011A2E  0E00               	movlw	0
 14180  011A30  0101               	movlb	1	; () banked
 14181  011A32  218C               	addwfc	(?_InternalADC_Read+1)& (0+255),w,b
 14182  011A34  0105               	movlb	5	; () banked
 14183  011A36  6FCB               	movwf	(Command@RTC_Battery_Value+1)& (0+255),b
 14184                           
 14185                           ; BSR set to: 5
 14186                           ;StringCommand.c: 565: RTC_Battery_Value_HIGH_decimal = (unsigned int)(((float)RTC_Batte
      +                          ry_Value / 1024) * 5);
 14187  011A38  0E00               	movlw	0
 14188  011A3A  0101               	movlb	1	; () banked
 14189  011A3C  6F9A               	movwf	___ftmul@f2& (0+255),b
 14190  011A3E  0EA0               	movlw	160
 14191  011A40  0101               	movlb	1	; () banked
 14192  011A42  6F9B               	movwf	(___ftmul@f2+1)& (0+255),b
 14193  011A44  0E40               	movlw	64
 14194  011A46  0101               	movlb	1	; () banked
 14195  011A48  6F9C               	movwf	(___ftmul@f2+2)& (0+255),b
 14196  011A4A  0E00               	movlw	0
 14197  011A4C  0101               	movlb	1	; () banked
 14198  011A4E  6F8B               	movwf	___ftdiv@f2& (0+255),b
 14199  011A50  0E80               	movlw	128
 14200  011A52  0101               	movlb	1	; () banked
 14201  011A54  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 14202  011A56  0E44               	movlw	68
 14203  011A58  0101               	movlb	1	; () banked
 14204  011A5A  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 14205  011A5C  C5CA  F184         	movff	Command@RTC_Battery_Value,___lwtoft@c
 14206  011A60  C5CB  F185         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 14207  011A64  EC6A  F002         	call	___lwtoft	;wreg free
 14208  011A68  C184  F188         	movff	?___lwtoft,___ftdiv@f1
 14209  011A6C  C185  F189         	movff	?___lwtoft+1,___ftdiv@f1+1
 14210  011A70  C186  F18A         	movff	?___lwtoft+2,___ftdiv@f1+2
 14211  011A74  EC84  F0AC         	call	___ftdiv	;wreg free
 14212  011A78  C188  F197         	movff	?___ftdiv,___ftmul@f1
 14213  011A7C  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 14214  011A80  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 14215  011A84  EC14  F0AB         	call	___ftmul	;wreg free
 14216  011A88  C197  F1A6         	movff	?___ftmul,___fttol@f1
 14217  011A8C  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 14218  011A90  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 14219  011A94  EC56  F0AA         	call	___fttol	;wreg free
 14220  011A98  C1A6  F1CA         	movff	?___fttol,??_Command
 14221  011A9C  C1A7  F1CB         	movff	?___fttol+1,??_Command+1
 14222  011AA0  C1A8  F1CC         	movff	?___fttol+2,??_Command+2
 14223  011AA4  C1A9  F1CD         	movff	?___fttol+3,??_Command+3
 14224  011AA8  C1CA  F5CC         	movff	??_Command,Command@RTC_Battery_Value_HIGH_decimal
 14225  011AAC  C1CB  F5CD         	movff	??_Command+1,Command@RTC_Battery_Value_HIGH_decimal+1
 14226                           
 14227                           ;StringCommand.c: 566: RTC_Battery_Value_LOW_decimal = (unsigned int)((((float)RTC_Batte
      +                          ry_Value / 1024) * 500));
 14228  011AB0  0E00               	movlw	0
 14229  011AB2  0101               	movlb	1	; () banked
 14230  011AB4  6F9A               	movwf	___ftmul@f2& (0+255),b
 14231  011AB6  0EFA               	movlw	250
 14232  011AB8  0101               	movlb	1	; () banked
 14233  011ABA  6F9B               	movwf	(___ftmul@f2+1)& (0+255),b
 14234  011ABC  0E43               	movlw	67
 14235  011ABE  0101               	movlb	1	; () banked
 14236  011AC0  6F9C               	movwf	(___ftmul@f2+2)& (0+255),b
 14237  011AC2  0E00               	movlw	0
 14238  011AC4  0101               	movlb	1	; () banked
 14239  011AC6  6F8B               	movwf	___ftdiv@f2& (0+255),b
 14240  011AC8  0E80               	movlw	128
 14241  011ACA  0101               	movlb	1	; () banked
 14242  011ACC  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 14243  011ACE  0E44               	movlw	68
 14244  011AD0  0101               	movlb	1	; () banked
 14245  011AD2  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 14246  011AD4  C5CA  F184         	movff	Command@RTC_Battery_Value,___lwtoft@c
 14247  011AD8  C5CB  F185         	movff	Command@RTC_Battery_Value+1,___lwtoft@c+1
 14248  011ADC  EC6A  F002         	call	___lwtoft	;wreg free
 14249  011AE0  C184  F188         	movff	?___lwtoft,___ftdiv@f1
 14250  011AE4  C185  F189         	movff	?___lwtoft+1,___ftdiv@f1+1
 14251  011AE8  C186  F18A         	movff	?___lwtoft+2,___ftdiv@f1+2
 14252  011AEC  EC84  F0AC         	call	___ftdiv	;wreg free
 14253  011AF0  C188  F197         	movff	?___ftdiv,___ftmul@f1
 14254  011AF4  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 14255  011AF8  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 14256  011AFC  EC14  F0AB         	call	___ftmul	;wreg free
 14257  011B00  C197  F1A6         	movff	?___ftmul,___fttol@f1
 14258  011B04  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 14259  011B08  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 14260  011B0C  EC56  F0AA         	call	___fttol	;wreg free
 14261  011B10  C1A6  F1CA         	movff	?___fttol,??_Command
 14262  011B14  C1A7  F1CB         	movff	?___fttol+1,??_Command+1
 14263  011B18  C1A8  F1CC         	movff	?___fttol+2,??_Command+2
 14264  011B1C  C1A9  F1CD         	movff	?___fttol+3,??_Command+3
 14265  011B20  C1CA  F5D2         	movff	??_Command,Command@RTC_Battery_Value_LOW_decimal
 14266  011B24  C1CB  F5D3         	movff	??_Command+1,Command@RTC_Battery_Value_LOW_decimal+1
 14267                           
 14268                           ;StringCommand.c: 567: RTC_Battery_Value_LOW_decimal = RTC_Battery_Value_LOW_decimal % 1
      +                          00;
 14269  011B28  C5D2  F17C         	movff	Command@RTC_Battery_Value_LOW_decimal,___lwmod@dividend
 14270  011B2C  C5D3  F17D         	movff	Command@RTC_Battery_Value_LOW_decimal+1,___lwmod@dividend+1
 14271  011B30  0E00               	movlw	0
 14272  011B32  0101               	movlb	1	; () banked
 14273  011B34  6F7F               	movwf	(___lwmod@divisor+1)& (0+255),b
 14274  011B36  0E64               	movlw	100
 14275  011B38  0101               	movlb	1	; () banked
 14276  011B3A  6F7E               	movwf	___lwmod@divisor& (0+255),b
 14277  011B3C  EC55  F0BC         	call	___lwmod	;wreg free
 14278  011B40  0101               	movlb	1	; () banked
 14279  011B42  C17C  F5D2         	movff	?___lwmod,Command@RTC_Battery_Value_LOW_decimal
 14280  011B46  0101               	movlb	1	; () banked
 14281  011B48  C17D  F5D3         	movff	?___lwmod+1,Command@RTC_Battery_Value_LOW_decimal+1
 14282                           
 14283                           ; BSR set to: 1
 14284                           ;StringCommand.c: 568: sprintf(buf, " 3 Volt RTC Battery Voltage = %d.%d",
 14285                           ;StringCommand.c: 569: RTC_Battery_Value_HIGH_decimal, RTC_Battery_Value_LOW_decimal);
 14286  011B4C  0105               	movlb	5	; () banked
 14287  011B4E  0E05               	movlw	high Command@buf
 14288  011B50  0101               	movlb	1	; () banked
 14289  011B52  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14290  011B54  0105               	movlb	5	; () banked
 14291  011B56  0E00               	movlw	low Command@buf
 14292  011B58  0101               	movlb	1	; () banked
 14293  011B5A  6F92               	movwf	sprintf@sp& (0+255),b
 14294  011B5C  0EF2               	movlw	high STR_221
 14295  011B5E  0101               	movlb	1	; () banked
 14296  011B60  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14297  011B62  0EF0               	movlw	low STR_221
 14298  011B64  0101               	movlb	1	; () banked
 14299  011B66  6F94               	movwf	sprintf@f& (0+255),b
 14300  011B68  C5CC  F196         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 14301  011B6C  C5CD  F197         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 14302  011B70  C5D2  F198         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 14303  011B74  C5D3  F199         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 14304  011B78  ECC4  F094         	call	_sprintf	;wreg free
 14305                           
 14306                           ;StringCommand.c: 570: UARTstring(buf);
 14307  011B7C  0105               	movlb	5	; () banked
 14308  011B7E  0E05               	movlw	high Command@buf
 14309  011B80  0101               	movlb	1	; () banked
 14310  011B82  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14311  011B84  0105               	movlb	5	; () banked
 14312  011B86  0E00               	movlw	low Command@buf
 14313  011B88  0101               	movlb	1	; () banked
 14314  011B8A  6F87               	movwf	UARTstring@data& (0+255),b
 14315  011B8C  ECD0  F0B4         	call	_UARTstring	;wreg free
 14316                           
 14317                           ;StringCommand.c: 571: sprintf(buf, "RTC Bty = %d.%d", RTC_Battery_Value_HIGH_decimal,
 14318                           ;StringCommand.c: 572: RTC_Battery_Value_LOW_decimal);
 14319  011B90  0105               	movlb	5	; () banked
 14320  011B92  0E05               	movlw	high Command@buf
 14321  011B94  0101               	movlb	1	; () banked
 14322  011B96  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14323  011B98  0105               	movlb	5	; () banked
 14324  011B9A  0E00               	movlw	low Command@buf
 14325  011B9C  0101               	movlb	1	; () banked
 14326  011B9E  6F92               	movwf	sprintf@sp& (0+255),b
 14327  011BA0  0EFA               	movlw	high STR_222
 14328  011BA2  0101               	movlb	1	; () banked
 14329  011BA4  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14330  011BA6  0E99               	movlw	low STR_222
 14331  011BA8  0101               	movlb	1	; () banked
 14332  011BAA  6F94               	movwf	sprintf@f& (0+255),b
 14333  011BAC  C5CC  F196         	movff	Command@RTC_Battery_Value_HIGH_decimal,?_sprintf+4
 14334  011BB0  C5CD  F197         	movff	Command@RTC_Battery_Value_HIGH_decimal+1,?_sprintf+5
 14335  011BB4  C5D2  F198         	movff	Command@RTC_Battery_Value_LOW_decimal,?_sprintf+6
 14336  011BB8  C5D3  F199         	movff	Command@RTC_Battery_Value_LOW_decimal+1,?_sprintf+7
 14337  011BBC  ECC4  F094         	call	_sprintf	;wreg free
 14338                           
 14339                           ;StringCommand.c: 573: LCDdisplayFeedback(buf);
 14340  011BC0  0105               	movlb	5	; () banked
 14341  011BC2  0E05               	movlw	high Command@buf
 14342  011BC4  0101               	movlb	1	; () banked
 14343  011BC6  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 14344  011BC8  0105               	movlb	5	; () banked
 14345  011BCA  0E00               	movlw	low Command@buf
 14346  011BCC  0101               	movlb	1	; () banked
 14347  011BCE  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 14348  011BD0  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 14349                           
 14350                           ;StringCommand.c: 574: }
 14351  011BD4  EFBA  F094         	goto	l619
 14352  011BD8                     l13304:
 14353                           
 14354                           ;StringCommand.c: 575: else if(StringContains(Input, "read"))
 14355  011BD8  0101               	movlb	1	; () banked
 14356  011BDA  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 14357  011BDE  0101               	movlb	1	; () banked
 14358  011BE0  C1C8  F17C         	movff	Command@Input,StringContains@This
 14359  011BE4  0EFF               	movlw	high STR_223
 14360  011BE6  0101               	movlb	1	; () banked
 14361  011BE8  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14362  011BEA  0EDB               	movlw	low STR_223
 14363  011BEC  0101               	movlb	1	; () banked
 14364  011BEE  6F7E               	movwf	StringContains@That& (0+255),b
 14365  011BF0  ECE9  F0B9         	call	_StringContains	;wreg free
 14366  011BF4  0900               	iorlw	0
 14367  011BF6  B4D8               	btfsc	status,2,c
 14368  011BF8  D0BB               	goto	l13336
 14369                           
 14370                           ;StringCommand.c: 576: {
 14371                           ;StringCommand.c: 577: if(!READ_RTC_TIME())
 14372  011BFA  ECCD  F0B0         	call	_READ_RTC_TIME	;wreg free
 14373  011BFE  0900               	iorlw	0
 14374  011C00  A4D8               	btfss	status,2,c
 14375  011C02  D09F               	goto	l13328
 14376                           
 14377                           ;StringCommand.c: 578: {
 14378                           ;StringCommand.c: 579: SprintDate(buf, NowTime, 0);
 14379  011C04  0105               	movlb	5	; () banked
 14380  011C06  0E05               	movlw	high Command@buf
 14381  011C08  0101               	movlb	1	; () banked
 14382  011C0A  6FBD               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 14383  011C0C  0105               	movlb	5	; () banked
 14384  011C0E  0E00               	movlw	low Command@buf
 14385  011C10  0101               	movlb	1	; () banked
 14386  011C12  6FBC               	movwf	SprintDate@ReturnBuf& (0+255),b
 14387  011C14  EE21  F000         	lfsr	2,_NowTime
 14388  011C18  EE11  F0BE         	lfsr	1,SprintDate@DisplayTime
 14389  011C1C  0E09               	movlw	9
 14390  011C1E                     u17131:
 14391  011C1E  CFDE FFE6          	movff	postinc2,postinc1
 14392  011C22  2EE8               	decfsz	wreg,f,c
 14393  011C24  D7FC               	goto	u17131
 14394  011C26  0E00               	movlw	0
 14395  011C28  0101               	movlb	1	; () banked
 14396  011C2A  6FC7               	movwf	SprintDate@Military& (0+255),b
 14397  011C2C  EC5D  F0AE         	call	_SprintDate	;wreg free
 14398                           
 14399                           ;StringCommand.c: 580: UARTstring(buf);
 14400  011C30  0105               	movlb	5	; () banked
 14401  011C32  0E05               	movlw	high Command@buf
 14402  011C34  0101               	movlb	1	; () banked
 14403  011C36  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14404  011C38  0105               	movlb	5	; () banked
 14405  011C3A  0E00               	movlw	low Command@buf
 14406  011C3C  0101               	movlb	1	; () banked
 14407  011C3E  6F87               	movwf	UARTstring@data& (0+255),b
 14408  011C40  ECD0  F0B4         	call	_UARTstring	;wreg free
 14409                           
 14410                           ;StringCommand.c: 581: UARTstring("\r\n");
 14411  011C44  0EF6               	movlw	high (STR_282+19)
 14412  011C46  0101               	movlb	1	; () banked
 14413  011C48  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14414  011C4A  0ECE               	movlw	low (STR_282+19)
 14415  011C4C  0101               	movlb	1	; () banked
 14416  011C4E  6F87               	movwf	UARTstring@data& (0+255),b
 14417  011C50  ECD0  F0B4         	call	_UARTstring	;wreg free
 14418                           
 14419                           ;StringCommand.c: 582: SetLCDcursor(0, 0);
 14420  011C54  0E00               	movlw	0
 14421  011C56  0101               	movlb	1	; () banked
 14422  011C58  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 14423  011C5A  0E00               	movlw	0
 14424  011C5C  ECEE  F001         	call	_SetLCDcursor
 14425                           
 14426                           ;StringCommand.c: 583: LCDPrintString("RTC Time is:    ");
 14427  011C60  0EF9               	movlw	high STR_225
 14428  011C62  0101               	movlb	1	; () banked
 14429  011C64  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14430  011C66  0E3F               	movlw	low STR_225
 14431  011C68  0101               	movlb	1	; () banked
 14432  011C6A  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 14433  011C6C  EC66  F0BA         	call	_LCDPrintString	;wreg free
 14434                           
 14435                           ;StringCommand.c: 584: if(NowTime.HoursAM_PM)
 14436  011C70  0101               	movlb	1	; () banked
 14437  011C72  5104               	movf	(_NowTime+4)& (0+255),w,b
 14438  011C74  B4D8               	btfsc	status,2,c
 14439  011C76  D02A               	goto	l13322
 14440                           
 14441                           ; BSR set to: 1
 14442                           ;StringCommand.c: 585: {
 14443                           ;StringCommand.c: 586: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 14444  011C78  0105               	movlb	5	; () banked
 14445  011C7A  0E05               	movlw	high Command@buf
 14446  011C7C  0101               	movlb	1	; () banked
 14447  011C7E  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14448  011C80  0105               	movlb	5	; () banked
 14449  011C82  0E00               	movlw	low Command@buf
 14450  011C84  0101               	movlb	1	; () banked
 14451  011C86  6F92               	movwf	sprintf@sp& (0+255),b
 14452  011C88  0EF6               	movlw	high STR_226
 14453  011C8A  0101               	movlb	1	; () banked
 14454  011C8C  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14455  011C8E  0EA4               	movlw	low STR_226
 14456  011C90  0101               	movlb	1	; () banked
 14457  011C92  6F94               	movwf	sprintf@f& (0+255),b
 14458  011C94  0101               	movlb	1	; () banked
 14459  011C96  C107  F196         	movff	_NowTime+7,?_sprintf+4
 14460  011C9A  0101               	movlb	1	; () banked
 14461  011C9C  6B97               	clrf	(?_sprintf+5)& (0+255),b
 14462  011C9E  0101               	movlb	1	; () banked
 14463  011CA0  C106  F198         	movff	_NowTime+6,?_sprintf+6
 14464  011CA4  0101               	movlb	1	; () banked
 14465  011CA6  6B99               	clrf	(?_sprintf+7)& (0+255),b
 14466  011CA8  0101               	movlb	1	; () banked
 14467  011CAA  C102  F19A         	movff	_NowTime+2,?_sprintf+8
 14468  011CAE  0101               	movlb	1	; () banked
 14469  011CB0  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 14470  011CB2  0101               	movlb	1	; () banked
 14471  011CB4  C101  F19C         	movff	_NowTime+1,?_sprintf+10
 14472  011CB8  0101               	movlb	1	; () banked
 14473  011CBA  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 14474  011CBC  0101               	movlb	1	; () banked
 14475  011CBE  C100  F19E         	movff	_NowTime,?_sprintf+12
 14476  011CC2  0101               	movlb	1	; () banked
 14477  011CC4  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 14478  011CC6  ECC4  F094         	call	_sprintf	;wreg free
 14479                           
 14480                           ;StringCommand.c: 587: }
 14481  011CCA  D029               	goto	l13324
 14482  011CCC                     l13322:
 14483                           
 14484                           ;StringCommand.c: 588: else
 14485                           ;StringCommand.c: 589: {
 14486                           ;StringCommand.c: 590: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 14487  011CCC  0105               	movlb	5	; () banked
 14488  011CCE  0E05               	movlw	high Command@buf
 14489  011CD0  0101               	movlb	1	; () banked
 14490  011CD2  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 14491  011CD4  0105               	movlb	5	; () banked
 14492  011CD6  0E00               	movlw	low Command@buf
 14493  011CD8  0101               	movlb	1	; () banked
 14494  011CDA  6F92               	movwf	sprintf@sp& (0+255),b
 14495  011CDC  0EF6               	movlw	high STR_227
 14496  011CDE  0101               	movlb	1	; () banked
 14497  011CE0  6F95               	movwf	(sprintf@f+1)& (0+255),b
 14498  011CE2  0E8D               	movlw	low STR_227
 14499  011CE4  0101               	movlb	1	; () banked
 14500  011CE6  6F94               	movwf	sprintf@f& (0+255),b
 14501  011CE8  0101               	movlb	1	; () banked
 14502  011CEA  C107  F196         	movff	_NowTime+7,?_sprintf+4
 14503  011CEE  0101               	movlb	1	; () banked
 14504  011CF0  6B97               	clrf	(?_sprintf+5)& (0+255),b
 14505  011CF2  0101               	movlb	1	; () banked
 14506  011CF4  C106  F198         	movff	_NowTime+6,?_sprintf+6
 14507  011CF8  0101               	movlb	1	; () banked
 14508  011CFA  6B99               	clrf	(?_sprintf+7)& (0+255),b
 14509  011CFC  0101               	movlb	1	; () banked
 14510  011CFE  C102  F19A         	movff	_NowTime+2,?_sprintf+8
 14511  011D02  0101               	movlb	1	; () banked
 14512  011D04  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 14513  011D06  0101               	movlb	1	; () banked
 14514  011D08  C101  F19C         	movff	_NowTime+1,?_sprintf+10
 14515  011D0C  0101               	movlb	1	; () banked
 14516  011D0E  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 14517  011D10  0101               	movlb	1	; () banked
 14518  011D12  C100  F19E         	movff	_NowTime,?_sprintf+12
 14519  011D16  0101               	movlb	1	; () banked
 14520  011D18  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 14521  011D1A  ECC4  F094         	call	_sprintf	;wreg free
 14522  011D1E                     l13324:
 14523                           
 14524                           ;StringCommand.c: 591: }
 14525                           ;StringCommand.c: 592: SetLCDcursor(1, 0);
 14526  011D1E  0E00               	movlw	0
 14527  011D20  0101               	movlb	1	; () banked
 14528  011D22  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 14529  011D24  0E01               	movlw	1
 14530  011D26  ECEE  F001         	call	_SetLCDcursor
 14531                           
 14532                           ;StringCommand.c: 593: LCDPrintString(buf);
 14533  011D2A  0105               	movlb	5	; () banked
 14534  011D2C  0E05               	movlw	high Command@buf
 14535  011D2E  0101               	movlb	1	; () banked
 14536  011D30  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14537  011D32  0105               	movlb	5	; () banked
 14538  011D34  0E00               	movlw	low Command@buf
 14539  011D36  0101               	movlb	1	; () banked
 14540  011D38  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 14541  011D3A  EC66  F0BA         	call	_LCDPrintString	;wreg free
 14542                           
 14543                           ;StringCommand.c: 594: }
 14544  011D3E  EFB2  F092         	goto	L11
 14545  011D42                     l13328:
 14546                           
 14547                           ;StringCommand.c: 595: else
 14548                           ;StringCommand.c: 596: {
 14549                           ;StringCommand.c: 597: UARTstring("ERROR: Can't Read RTC\r\n");
 14550  011D42  0EF6               	movlw	high STR_228
 14551  011D44  0101               	movlb	1	; () banked
 14552  011D46  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14553  011D48  0E46               	movlw	low STR_228
 14554  011D4A  0101               	movlb	1	; () banked
 14555  011D4C  6F87               	movwf	UARTstring@data& (0+255),b
 14556  011D4E  ECD0  F0B4         	call	_UARTstring	;wreg free
 14557                           
 14558                           ;StringCommand.c: 598: SetLCDcursor(1, 0);
 14559  011D52  0E00               	movlw	0
 14560  011D54  0101               	movlb	1	; () banked
 14561  011D56  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 14562  011D58  0E01               	movlw	1
 14563  011D5A  ECEE  F001         	call	_SetLCDcursor
 14564                           
 14565                           ;StringCommand.c: 599: LCDPrintString("RTC isnt working");
 14566  011D5E  0EF9               	movlw	high STR_229
 14567  011D60  0101               	movlb	1	; () banked
 14568  011D62  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 14569  011D64  0E61               	movlw	low STR_229
 14570  011D66  0101               	movlb	1	; () banked
 14571  011D68  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 14572  011D6A  EC66  F0BA         	call	_LCDPrintString	;wreg free
 14573  011D6E  D3FA               	goto	L11
 14574  011D70                     l13336:
 14575                           
 14576                           ;StringCommand.c: 603: else if(StringContains(Input, "set"))
 14577  011D70  0101               	movlb	1	; () banked
 14578  011D72  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 14579  011D76  0101               	movlb	1	; () banked
 14580  011D78  C1C8  F17C         	movff	Command@Input,StringContains@This
 14581  011D7C  0EFF               	movlw	high STR_230
 14582  011D7E  0101               	movlb	1	; () banked
 14583  011D80  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14584  011D82  0EF8               	movlw	low STR_230
 14585  011D84  0101               	movlb	1	; () banked
 14586  011D86  6F7E               	movwf	StringContains@That& (0+255),b
 14587  011D88  ECE9  F0B9         	call	_StringContains	;wreg free
 14588  011D8C  0900               	iorlw	0
 14589  011D8E  B4D8               	btfsc	status,2,c
 14590  011D90  D09E               	goto	l13364
 14591                           
 14592                           ;StringCommand.c: 604: {
 14593                           ;StringCommand.c: 605: UARTstring("Enter Time MM/DD/YY HH:MM:SS AM or\r\n");
 14594  011D92  0EF2               	movlw	high STR_231
 14595  011D94  0101               	movlb	1	; () banked
 14596  011D96  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14597  011D98  0ECB               	movlw	low STR_231
 14598  011D9A  0101               	movlb	1	; () banked
 14599  011D9C  6F87               	movwf	UARTstring@data& (0+255),b
 14600  011D9E  ECD0  F0B4         	call	_UARTstring	;wreg free
 14601                           
 14602                           ;StringCommand.c: 606: UARTstring("Enter Time MM/DD/YY HH:MM:SS PM\r\n");
 14603  011DA2  0EF3               	movlw	high STR_232
 14604  011DA4  0101               	movlb	1	; () banked
 14605  011DA6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14606  011DA8  0E5A               	movlw	low STR_232
 14607  011DAA  0101               	movlb	1	; () banked
 14608  011DAC  6F87               	movwf	UARTstring@data& (0+255),b
 14609  011DAE  ECD0  F0B4         	call	_UARTstring	;wreg free
 14610                           
 14611                           ;StringCommand.c: 607: cleanBuffer(Input, 100);
 14612  011DB2  0101               	movlb	1	; () banked
 14613  011DB4  C1C9  F17D         	movff	Command@Input+1,cleanBuffer@data+1
 14614  011DB8  0101               	movlb	1	; () banked
 14615  011DBA  C1C8  F17C         	movff	Command@Input,cleanBuffer@data
 14616  011DBE  0E00               	movlw	0
 14617  011DC0  0101               	movlb	1	; () banked
 14618  011DC2  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 14619  011DC4  0E64               	movlw	100
 14620  011DC6  0101               	movlb	1	; () banked
 14621  011DC8  6F7E               	movwf	cleanBuffer@count& (0+255),b
 14622  011DCA  ECE4  F0BC         	call	_cleanBuffer	;wreg free
 14623                           
 14624                           ;StringCommand.c: 608: UARTstring(">");
 14625  011DCE  0EF4               	movlw	high (STR_21+27)
 14626  011DD0  0101               	movlb	1	; () banked
 14627  011DD2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14628  011DD4  0ED1               	movlw	low (STR_21+27)
 14629  011DD6  0101               	movlb	1	; () banked
 14630  011DD8  6F87               	movwf	UARTstring@data& (0+255),b
 14631  011DDA  ECD0  F0B4         	call	_UARTstring	;wreg free
 14632  011DDE                     l13344:
 14633                           
 14634                           ;StringCommand.c: 610: {
 14635                           ;StringCommand.c: 611: if(Input[0] != 0)
 14636  011DDE  C1C8  FFD9         	movff	Command@Input,fsr2l
 14637  011DE2  C1C9  FFDA         	movff	Command@Input+1,fsr2h
 14638  011DE6  50DF               	movf	indf2,w,c
 14639  011DE8  B4D8               	btfsc	status,2,c
 14640  011DEA  D7F9               	goto	l13344
 14641                           
 14642                           ;StringCommand.c: 612: {
 14643                           ;StringCommand.c: 613: lowercase(Input);
 14644  011DEC  0101               	movlb	1	; () banked
 14645  011DEE  C1C9  F17D         	movff	Command@Input+1,lowercase@Input+1
 14646  011DF2  0101               	movlb	1	; () banked
 14647  011DF4  C1C8  F17C         	movff	Command@Input,lowercase@Input
 14648  011DF8  ECD2  F0B7         	call	_lowercase	;wreg free
 14649                           
 14650                           ;StringCommand.c: 614: if(Parse_Time(Input))
 14651  011DFC  0101               	movlb	1	; () banked
 14652  011DFE  C1C9  F17D         	movff	Command@Input+1,Parse_Time@This+1
 14653  011E02  0101               	movlb	1	; () banked
 14654  011E04  C1C8  F17C         	movff	Command@Input,Parse_Time@This
 14655  011E08  ECE7  F09D         	call	_Parse_Time	;wreg free
 14656  011E0C  0900               	iorlw	0
 14657  011E0E  B4D8               	btfsc	status,2,c
 14658  011E10  D04C               	goto	l13362
 14659                           
 14660                           ;StringCommand.c: 615: {
 14661                           ;StringCommand.c: 616: if(!SET_RTC_TIME(NowTime))
 14662  011E12  EE21  F000         	lfsr	2,_NowTime
 14663  011E16  EE11  F084         	lfsr	1,SET_RTC_TIME@SetTime
 14664  011E1A  0E09               	movlw	9
 14665  011E1C                     u17181:
 14666  011E1C  CFDE FFE6          	movff	postinc2,postinc1
 14667  011E20  2EE8               	decfsz	wreg,f,c
 14668  011E22  D7FC               	goto	u17181
 14669  011E24  EC03  F0A3         	call	_SET_RTC_TIME	;wreg free
 14670  011E28  0900               	iorlw	0
 14671  011E2A  A4D8               	btfss	status,2,c
 14672  011E2C  D034               	goto	l13360
 14673                           
 14674                           ;StringCommand.c: 617: {
 14675                           ;StringCommand.c: 618: UARTstring("\r\nTime Set Successfully\r\n");
 14676  011E2E  0EF5               	movlw	high STR_234
 14677  011E30  0101               	movlb	1	; () banked
 14678  011E32  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14679  011E34  0EC9               	movlw	low STR_234
 14680  011E36  0101               	movlb	1	; () banked
 14681  011E38  6F87               	movwf	UARTstring@data& (0+255),b
 14682  011E3A  ECD0  F0B4         	call	_UARTstring	;wreg free
 14683                           
 14684                           ;StringCommand.c: 619: READ_RTC_TIME();
 14685  011E3E  ECCD  F0B0         	call	_READ_RTC_TIME	;wreg free
 14686                           
 14687                           ;StringCommand.c: 620: SprintDate(buf, NowTime, 0);
 14688  011E42  0105               	movlb	5	; () banked
 14689  011E44  0E05               	movlw	high Command@buf
 14690  011E46  0101               	movlb	1	; () banked
 14691  011E48  6FBD               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 14692  011E4A  0105               	movlb	5	; () banked
 14693  011E4C  0E00               	movlw	low Command@buf
 14694  011E4E  0101               	movlb	1	; () banked
 14695  011E50  6FBC               	movwf	SprintDate@ReturnBuf& (0+255),b
 14696  011E52  EE21  F000         	lfsr	2,_NowTime
 14697  011E56  EE11  F0BE         	lfsr	1,SprintDate@DisplayTime
 14698  011E5A  0E09               	movlw	9
 14699  011E5C                     u17201:
 14700  011E5C  CFDE FFE6          	movff	postinc2,postinc1
 14701  011E60  2EE8               	decfsz	wreg,f,c
 14702  011E62  D7FC               	goto	u17201
 14703  011E64  0E00               	movlw	0
 14704  011E66  0101               	movlb	1	; () banked
 14705  011E68  6FC7               	movwf	SprintDate@Military& (0+255),b
 14706  011E6A  EC5D  F0AE         	call	_SprintDate	;wreg free
 14707                           
 14708                           ;StringCommand.c: 621: UARTstring(buf);
 14709  011E6E  0105               	movlb	5	; () banked
 14710  011E70  0E05               	movlw	high Command@buf
 14711  011E72  0101               	movlb	1	; () banked
 14712  011E74  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14713  011E76  0105               	movlb	5	; () banked
 14714  011E78  0E00               	movlw	low Command@buf
 14715  011E7A  0101               	movlb	1	; () banked
 14716  011E7C  6F87               	movwf	UARTstring@data& (0+255),b
 14717  011E7E  ECD0  F0B4         	call	_UARTstring	;wreg free
 14718                           
 14719                           ;StringCommand.c: 622: UARTstring("\r\n");
 14720  011E82  0EF6               	movlw	high (STR_282+19)
 14721  011E84  0101               	movlb	1	; () banked
 14722  011E86  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14723  011E88  0ECE               	movlw	low (STR_282+19)
 14724  011E8A  0101               	movlb	1	; () banked
 14725  011E8C  6F87               	movwf	UARTstring@data& (0+255),b
 14726  011E8E  ECD0  F0B4         	call	_UARTstring	;wreg free
 14727                           
 14728                           ;StringCommand.c: 623: }
 14729  011E92  EFBA  F094         	goto	l619
 14730  011E96                     l13360:
 14731                           
 14732                           ;StringCommand.c: 624: else
 14733                           ;StringCommand.c: 625: {
 14734                           ;StringCommand.c: 626: UARTstring("\r\nTime Not Set Successfully");
 14735  011E96  0EF5               	movlw	high STR_236
 14736  011E98  0101               	movlb	1	; () banked
 14737  011E9A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14738  011E9C  0E43               	movlw	low STR_236
 14739  011E9E  0101               	movlb	1	; () banked
 14740  011EA0  6F87               	movwf	UARTstring@data& (0+255),b
 14741  011EA2  ECD0  F0B4         	call	_UARTstring	;wreg free
 14742  011EA6  EFBA  F094         	goto	l619
 14743  011EAA                     l13362:
 14744                           
 14745                           ;StringCommand.c: 629: else
 14746                           ;StringCommand.c: 630: {
 14747                           ;StringCommand.c: 631: UARTstring("\r\nInvalid Time Entered\r\n");
 14748  011EAA  0EF5               	movlw	high STR_237
 14749  011EAC  0101               	movlb	1	; () banked
 14750  011EAE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14751  011EB0  0EFC               	movlw	low STR_237
 14752  011EB2  0101               	movlb	1	; () banked
 14753  011EB4  6F87               	movwf	UARTstring@data& (0+255),b
 14754  011EB6  ECD0  F0B4         	call	_UARTstring	;wreg free
 14755                           
 14756                           ;StringCommand.c: 632: UARTstring("Format is MM/DD/YY HH:MM:SS AM\r\n");
 14757  011EBA  0EF3               	movlw	high STR_238
 14758  011EBC  0101               	movlb	1	; () banked
 14759  011EBE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14760  011EC0  0E9D               	movlw	low STR_238
 14761  011EC2  0101               	movlb	1	; () banked
 14762  011EC4  6F87               	movwf	UARTstring@data& (0+255),b
 14763  011EC6  ECD0  F0B4         	call	_UARTstring	;wreg free
 14764  011ECA  EFBA  F094         	goto	l619
 14765  011ECE                     l13364:
 14766                           
 14767                           ;StringCommand.c: 638: else
 14768                           ;StringCommand.c: 639: {
 14769                           ;StringCommand.c: 640: UARTstring("RTC What???\n");
 14770  011ECE  0EFC               	movlw	high STR_239
 14771  011ED0  0101               	movlb	1	; () banked
 14772  011ED2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14773  011ED4  0EED               	movlw	low STR_239
 14774  011ED6  0101               	movlb	1	; () banked
 14775  011ED8  6F87               	movwf	UARTstring@data& (0+255),b
 14776  011EDA  ECD0  F0B4         	call	_UARTstring	;wreg free
 14777  011EDE  EFBA  F094         	goto	l619
 14778  011EE2                     l13366:
 14779                           
 14780                           ;StringCommand.c: 643: else
 14781                           ;StringCommand.c: 644: {
 14782                           ;StringCommand.c: 645: UARTstring("Real Time Clock Help Menu\r\n\n");
 14783  011EE2  0EF4               	movlw	high STR_240
 14784  011EE4  0101               	movlb	1	; () banked
 14785  011EE6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14786  011EE8  0E7C               	movlw	low STR_240
 14787  011EEA  0101               	movlb	1	; () banked
 14788  011EEC  6F87               	movwf	UARTstring@data& (0+255),b
 14789  011EEE  ECD0  F0B4         	call	_UARTstring	;wreg free
 14790                           
 14791                           ;StringCommand.c: 646: UARTstring("Actions:\r\n");
 14792  011EF2  0EFD               	movlw	high STR_241
 14793  011EF4  0101               	movlb	1	; () banked
 14794  011EF6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14795  011EF8  0EC2               	movlw	low STR_241
 14796  011EFA  0101               	movlb	1	; () banked
 14797  011EFC  6F87               	movwf	UARTstring@data& (0+255),b
 14798  011EFE  ECD0  F0B4         	call	_UARTstring	;wreg free
 14799                           
 14800                           ;StringCommand.c: 647: UARTstring("Battery\r\n");
 14801  011F02  0EFE               	movlw	high STR_242
 14802  011F04  0101               	movlb	1	; () banked
 14803  011F06  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14804  011F08  0E18               	movlw	low STR_242
 14805  011F0A  0101               	movlb	1	; () banked
 14806  011F0C  6F87               	movwf	UARTstring@data& (0+255),b
 14807  011F0E  ECD0  F0B4         	call	_UARTstring	;wreg free
 14808                           
 14809                           ;StringCommand.c: 648: UARTstring("Read\r\n");
 14810  011F12  0EFF               	movlw	high STR_243
 14811  011F14  0101               	movlb	1	; () banked
 14812  011F16  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14813  011F18  0E67               	movlw	low STR_243
 14814  011F1A  0101               	movlb	1	; () banked
 14815  011F1C  6F87               	movwf	UARTstring@data& (0+255),b
 14816  011F1E  ECD0  F0B4         	call	_UARTstring	;wreg free
 14817                           
 14818                           ;StringCommand.c: 649: UARTstring("Set\r\n\n");
 14819  011F22  0EFF               	movlw	high STR_244
 14820  011F24  0101               	movlb	1	; () banked
 14821  011F26  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14822  011F28  0E59               	movlw	low STR_244
 14823  011F2A  0101               	movlb	1	; () banked
 14824  011F2C  6F87               	movwf	UARTstring@data& (0+255),b
 14825  011F2E  ECD0  F0B4         	call	_UARTstring	;wreg free
 14826                           
 14827                           ;StringCommand.c: 650: UARTstring("To command the RTC, type the action\r\n followed by"
 14828                           ;StringCommand.c: 651: " the parameters \r\n\n");
 14829  011F32  0EEE               	movlw	high STR_245
 14830  011F34  0101               	movlb	1	; () banked
 14831  011F36  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14832  011F38  0ED2               	movlw	low STR_245
 14833  011F3A  0101               	movlb	1	; () banked
 14834  011F3C  6F87               	movwf	UARTstring@data& (0+255),b
 14835  011F3E  ECD0  F0B4         	call	_UARTstring	;wreg free
 14836                           
 14837                           ;StringCommand.c: 652: UARTstring("further sub menus available by entering the action an
      +                          d a '?'");
 14838  011F42  0EEF               	movlw	high STR_246
 14839  011F44  0101               	movlb	1	; () banked
 14840  011F46  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14841  011F48  0EDB               	movlw	low STR_246
 14842  011F4A  0101               	movlb	1	; () banked
 14843  011F4C  6F87               	movwf	UARTstring@data& (0+255),b
 14844  011F4E  ECD0  F0B4         	call	_UARTstring	;wreg free
 14845                           
 14846                           ;StringCommand.c: 653: UARTstring("i.e. RTC Set Time?\r\n");
 14847  011F52  0EF7               	movlw	high STR_247
 14848  011F54  0101               	movlb	1	; () banked
 14849  011F56  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 14850  011F58  0E28               	movlw	low STR_247
 14851  011F5A  0101               	movlb	1	; () banked
 14852  011F5C  6F87               	movwf	UARTstring@data& (0+255),b
 14853  011F5E  ECD0  F0B4         	call	_UARTstring	;wreg free
 14854                           
 14855                           ;StringCommand.c: 654: LCD_Scroll("RTC Menu");
 14856  011F62  0EFE               	movlw	high STR_248
 14857  011F64  0101               	movlb	1	; () banked
 14858  011F66  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14859  011F68  0ED7               	movlw	low STR_248
 14860  011F6A  0101               	movlb	1	; () banked
 14861  011F6C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14862  011F6E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 14863                           
 14864                           ;StringCommand.c: 655: LCD_Scroll("Commands:");
 14865  011F72  0EFE               	movlw	high STR_178
 14866  011F74  0101               	movlb	1	; () banked
 14867  011F76  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14868  011F78  0E36               	movlw	low STR_178
 14869  011F7A  0101               	movlb	1	; () banked
 14870  011F7C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14871  011F7E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 14872                           
 14873                           ;StringCommand.c: 656: LCD_Scroll("Battery");
 14874  011F82  0EFF               	movlw	high STR_250
 14875  011F84  0101               	movlb	1	; () banked
 14876  011F86  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14877  011F88  0E42               	movlw	low STR_250
 14878  011F8A  0101               	movlb	1	; () banked
 14879  011F8C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14880  011F8E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 14881                           
 14882                           ;StringCommand.c: 657: LCD_Scroll("Read");
 14883  011F92  0EFF               	movlw	high STR_251
 14884  011F94  0101               	movlb	1	; () banked
 14885  011F96  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14886  011F98  0ED6               	movlw	low STR_251
 14887  011F9A  0101               	movlb	1	; () banked
 14888  011F9C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14889  011F9E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 14890                           
 14891                           ;StringCommand.c: 658: LCD_Scroll("Set");
 14892  011FA2  0EFF               	movlw	high STR_252
 14893  011FA4  0101               	movlb	1	; () banked
 14894  011FA6  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 14895  011FA8  0EF4               	movlw	low STR_252
 14896  011FAA  0101               	movlb	1	; () banked
 14897  011FAC  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 14898  011FAE  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 14899  011FB2  EFBA  F094         	goto	l619
 14900  011FB6                     l13378:
 14901                           
 14902                           ;StringCommand.c: 663: else if (StartsWith(Input, "joe"))
 14903  011FB6  0101               	movlb	1	; () banked
 14904  011FB8  C1C9  F17D         	movff	Command@Input+1,StartsWith@This+1
 14905  011FBC  0101               	movlb	1	; () banked
 14906  011FBE  C1C8  F17C         	movff	Command@Input,StartsWith@This
 14907  011FC2  0EFF               	movlw	high STR_253
 14908  011FC4  0101               	movlb	1	; () banked
 14909  011FC6  6F7F               	movwf	(StartsWith@That+1)& (0+255),b
 14910  011FC8  0EE8               	movlw	low STR_253
 14911  011FCA  0101               	movlb	1	; () banked
 14912  011FCC  6F7E               	movwf	StartsWith@That& (0+255),b
 14913  011FCE  EC64  F0B6         	call	_StartsWith	;wreg free
 14914  011FD2  0900               	iorlw	0
 14915  011FD4  B4D8               	btfsc	status,2,c
 14916  011FD6  D14E               	goto	l13416
 14917                           
 14918                           ;StringCommand.c: 664: {
 14919                           ;StringCommand.c: 665: if (!StringContains(Input, "?"))
 14920  011FD8  0101               	movlb	1	; () banked
 14921  011FDA  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 14922  011FDE  0101               	movlb	1	; () banked
 14923  011FE0  C1C8  F17C         	movff	Command@Input,StringContains@This
 14924  011FE4  0EFA               	movlw	high (STR_83+14)
 14925  011FE6  0101               	movlb	1	; () banked
 14926  011FE8  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 14927  011FEA  0E17               	movlw	low (STR_83+14)
 14928  011FEC  0101               	movlb	1	; () banked
 14929  011FEE  6F7E               	movwf	StringContains@That& (0+255),b
 14930  011FF0  ECE9  F0B9         	call	_StringContains	;wreg free
 14931  011FF4  0900               	iorlw	0
 14932  011FF6  A4D8               	btfss	status,2,c
 14933  011FF8  D0FC               	goto	l13408
 14934                           
 14935                           ;StringCommand.c: 666: {
 14936                           ;StringCommand.c: 667: if (StringMatch(Input, "joesroomlight=on"))
 14937  011FFA  0101               	movlb	1	; () banked
 14938  011FFC  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 14939  012000  0101               	movlb	1	; () banked
 14940  012002  C1C8  F17C         	movff	Command@Input,StringMatch@This
 14941  012006  0EF9               	movlw	high STR_255
 14942  012008  0101               	movlb	1	; () banked
 14943  01200A  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 14944  01200C  0E94               	movlw	low STR_255
 14945  01200E  0101               	movlb	1	; () banked
 14946  012010  6F7E               	movwf	StringMatch@That& (0+255),b
 14947  012012  EC28  F0BA         	call	_StringMatch	;wreg free
 14948  012016  0900               	iorlw	0
 14949  012018  B4D8               	btfsc	status,2,c
 14950  01201A  D065               	goto	l13394
 14951                           
 14952                           ;StringCommand.c: 668: {
 14953                           ;StringCommand.c: 669: INTCONbits.GIE = 0;
 14954  01201C  9EF2               	bcf	intcon,7,c	;volatile
 14955                           
 14956                           ;StringCommand.c: 670: Send_Config2(0b00000001, SubLightON);
 14957  01201E  0EEE               	movlw	high _SubLightON
 14958  012020  0101               	movlb	1	; () banked
 14959  012022  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14960  012024  0E35               	movlw	low _SubLightON
 14961  012026  0101               	movlb	1	; () banked
 14962  012028  6F87               	movwf	Send_Config2@data& (0+255),b
 14963  01202A  0E01               	movlw	1
 14964  01202C  EC5F  F0B8         	call	_Send_Config2
 14965                           
 14966                           ;StringCommand.c: 671: Send_Config2(0b00000001, SubLightON);
 14967  012030  0EEE               	movlw	high _SubLightON
 14968  012032  0101               	movlb	1	; () banked
 14969  012034  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14970  012036  0E35               	movlw	low _SubLightON
 14971  012038  0101               	movlb	1	; () banked
 14972  01203A  6F87               	movwf	Send_Config2@data& (0+255),b
 14973  01203C  0E01               	movlw	1
 14974  01203E  EC5F  F0B8         	call	_Send_Config2
 14975                           
 14976                           ;StringCommand.c: 672: Send_Config2(0b00000001, SubLightON);
 14977  012042  0EEE               	movlw	high _SubLightON
 14978  012044  0101               	movlb	1	; () banked
 14979  012046  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14980  012048  0E35               	movlw	low _SubLightON
 14981  01204A  0101               	movlb	1	; () banked
 14982  01204C  6F87               	movwf	Send_Config2@data& (0+255),b
 14983  01204E  0E01               	movlw	1
 14984  012050  EC5F  F0B8         	call	_Send_Config2
 14985                           
 14986                           ;StringCommand.c: 673: Send_Config2(0b00000001, SubLightON);
 14987  012054  0EEE               	movlw	high _SubLightON
 14988  012056  0101               	movlb	1	; () banked
 14989  012058  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 14990  01205A  0E35               	movlw	low _SubLightON
 14991  01205C  0101               	movlb	1	; () banked
 14992  01205E  6F87               	movwf	Send_Config2@data& (0+255),b
 14993  012060  0E01               	movlw	1
 14994  012062  EC5F  F0B8         	call	_Send_Config2
 14995                           
 14996                           ;StringCommand.c: 674: Send_Config2(0b00000001, SubLightON);
 14997  012066  0EEE               	movlw	high _SubLightON
 14998  012068  0101               	movlb	1	; () banked
 14999  01206A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15000  01206C  0E35               	movlw	low _SubLightON
 15001  01206E  0101               	movlb	1	; () banked
 15002  012070  6F87               	movwf	Send_Config2@data& (0+255),b
 15003  012072  0E01               	movlw	1
 15004  012074  EC5F  F0B8         	call	_Send_Config2
 15005                           
 15006                           ;StringCommand.c: 675: Send_Config2(0b00000001, SubLightON);
 15007  012078  0EEE               	movlw	high _SubLightON
 15008  01207A  0101               	movlb	1	; () banked
 15009  01207C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15010  01207E  0E35               	movlw	low _SubLightON
 15011  012080  0101               	movlb	1	; () banked
 15012  012082  6F87               	movwf	Send_Config2@data& (0+255),b
 15013  012084  0E01               	movlw	1
 15014  012086  EC5F  F0B8         	call	_Send_Config2
 15015                           
 15016                           ;StringCommand.c: 676: Send_Config2(0b00000001, SubLightON);
 15017  01208A  0EEE               	movlw	high _SubLightON
 15018  01208C  0101               	movlb	1	; () banked
 15019  01208E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15020  012090  0E35               	movlw	low _SubLightON
 15021  012092  0101               	movlb	1	; () banked
 15022  012094  6F87               	movwf	Send_Config2@data& (0+255),b
 15023  012096  0E01               	movlw	1
 15024  012098  EC5F  F0B8         	call	_Send_Config2
 15025                           
 15026                           ;StringCommand.c: 677: Send_Config2(0b00000001, SubLightON);
 15027  01209C  0EEE               	movlw	high _SubLightON
 15028  01209E  0101               	movlb	1	; () banked
 15029  0120A0  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15030  0120A2  0E35               	movlw	low _SubLightON
 15031  0120A4  0101               	movlb	1	; () banked
 15032  0120A6  6F87               	movwf	Send_Config2@data& (0+255),b
 15033  0120A8  0E01               	movlw	1
 15034  0120AA  EC5F  F0B8         	call	_Send_Config2
 15035                           
 15036                           ;StringCommand.c: 678: Send_Config2(0b00000001, SubLightON);
 15037  0120AE  0EEE               	movlw	high _SubLightON
 15038  0120B0  0101               	movlb	1	; () banked
 15039  0120B2  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15040  0120B4  0E35               	movlw	low _SubLightON
 15041  0120B6  0101               	movlb	1	; () banked
 15042  0120B8  6F87               	movwf	Send_Config2@data& (0+255),b
 15043  0120BA  0E01               	movlw	1
 15044  0120BC  EC5F  F0B8         	call	_Send_Config2
 15045                           
 15046                           ;StringCommand.c: 679: INTCONbits.GIE = 1;
 15047  0120C0  8EF2               	bsf	intcon,7,c	;volatile
 15048                           
 15049                           ;StringCommand.c: 680: UARTstring("Joe's room light On");
 15050  0120C2  0EF7               	movlw	high STR_256
 15051  0120C4  0101               	movlb	1	; () banked
 15052  0120C6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15053  0120C8  0E8D               	movlw	low STR_256
 15054  0120CA  0101               	movlb	1	; () banked
 15055  0120CC  6F87               	movwf	UARTstring@data& (0+255),b
 15056  0120CE  ECD0  F0B4         	call	_UARTstring	;wreg free
 15057                           
 15058                           ;StringCommand.c: 681: LCDdisplayFeedback("Joe room lt On");
 15059  0120D2  0EFB               	movlw	high STR_257
 15060  0120D4  0101               	movlb	1	; () banked
 15061  0120D6  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15062  0120D8  0EEF               	movlw	low STR_257
 15063  0120DA  0101               	movlb	1	; () banked
 15064  0120DC  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15065  0120DE  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 15066                           
 15067                           ;StringCommand.c: 682: }
 15068  0120E2  EFBA  F094         	goto	l619
 15069  0120E6                     l13394:
 15070                           
 15071                           ;StringCommand.c: 683: else if (StringMatch(Input, "joesroomlight=off"))
 15072  0120E6  0101               	movlb	1	; () banked
 15073  0120E8  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 15074  0120EC  0101               	movlb	1	; () banked
 15075  0120EE  C1C8  F17C         	movff	Command@Input,StringMatch@This
 15076  0120F2  0EF8               	movlw	high STR_258
 15077  0120F4  0101               	movlb	1	; () banked
 15078  0120F6  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 15079  0120F8  0E80               	movlw	low STR_258
 15080  0120FA  0101               	movlb	1	; () banked
 15081  0120FC  6F7E               	movwf	StringMatch@That& (0+255),b
 15082  0120FE  EC28  F0BA         	call	_StringMatch	;wreg free
 15083  012102  0900               	iorlw	0
 15084  012104  B4D8               	btfsc	status,2,c
 15085  012106  D064               	goto	l13406
 15086                           
 15087                           ;StringCommand.c: 684: {
 15088                           ;StringCommand.c: 685: INTCONbits.GIE = 0;
 15089  012108  9EF2               	bcf	intcon,7,c	;volatile
 15090                           
 15091                           ;StringCommand.c: 686: Send_Config2(0b00000001, SubLightOFF);
 15092  01210A  0EEE               	movlw	high _SubLightOFF
 15093  01210C  0101               	movlb	1	; () banked
 15094  01210E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15095  012110  0E25               	movlw	low _SubLightOFF
 15096  012112  0101               	movlb	1	; () banked
 15097  012114  6F87               	movwf	Send_Config2@data& (0+255),b
 15098  012116  0E01               	movlw	1
 15099  012118  EC5F  F0B8         	call	_Send_Config2
 15100                           
 15101                           ;StringCommand.c: 687: Send_Config2(0b00000001, SubLightOFF);
 15102  01211C  0EEE               	movlw	high _SubLightOFF
 15103  01211E  0101               	movlb	1	; () banked
 15104  012120  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15105  012122  0E25               	movlw	low _SubLightOFF
 15106  012124  0101               	movlb	1	; () banked
 15107  012126  6F87               	movwf	Send_Config2@data& (0+255),b
 15108  012128  0E01               	movlw	1
 15109  01212A  EC5F  F0B8         	call	_Send_Config2
 15110                           
 15111                           ;StringCommand.c: 688: Send_Config2(0b00000001, SubLightOFF);
 15112  01212E  0EEE               	movlw	high _SubLightOFF
 15113  012130  0101               	movlb	1	; () banked
 15114  012132  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15115  012134  0E25               	movlw	low _SubLightOFF
 15116  012136  0101               	movlb	1	; () banked
 15117  012138  6F87               	movwf	Send_Config2@data& (0+255),b
 15118  01213A  0E01               	movlw	1
 15119  01213C  EC5F  F0B8         	call	_Send_Config2
 15120                           
 15121                           ;StringCommand.c: 689: Send_Config2(0b00000001, SubLightOFF);
 15122  012140  0EEE               	movlw	high _SubLightOFF
 15123  012142  0101               	movlb	1	; () banked
 15124  012144  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15125  012146  0E25               	movlw	low _SubLightOFF
 15126  012148  0101               	movlb	1	; () banked
 15127  01214A  6F87               	movwf	Send_Config2@data& (0+255),b
 15128  01214C  0E01               	movlw	1
 15129  01214E  EC5F  F0B8         	call	_Send_Config2
 15130                           
 15131                           ;StringCommand.c: 690: Send_Config2(0b00000001, SubLightOFF);
 15132  012152  0EEE               	movlw	high _SubLightOFF
 15133  012154  0101               	movlb	1	; () banked
 15134  012156  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15135  012158  0E25               	movlw	low _SubLightOFF
 15136  01215A  0101               	movlb	1	; () banked
 15137  01215C  6F87               	movwf	Send_Config2@data& (0+255),b
 15138  01215E  0E01               	movlw	1
 15139  012160  EC5F  F0B8         	call	_Send_Config2
 15140                           
 15141                           ;StringCommand.c: 691: Send_Config2(0b00000001, SubLightOFF);
 15142  012164  0EEE               	movlw	high _SubLightOFF
 15143  012166  0101               	movlb	1	; () banked
 15144  012168  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15145  01216A  0E25               	movlw	low _SubLightOFF
 15146  01216C  0101               	movlb	1	; () banked
 15147  01216E  6F87               	movwf	Send_Config2@data& (0+255),b
 15148  012170  0E01               	movlw	1
 15149  012172  EC5F  F0B8         	call	_Send_Config2
 15150                           
 15151                           ;StringCommand.c: 692: Send_Config2(0b00000001, SubLightOFF);
 15152  012176  0EEE               	movlw	high _SubLightOFF
 15153  012178  0101               	movlb	1	; () banked
 15154  01217A  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15155  01217C  0E25               	movlw	low _SubLightOFF
 15156  01217E  0101               	movlb	1	; () banked
 15157  012180  6F87               	movwf	Send_Config2@data& (0+255),b
 15158  012182  0E01               	movlw	1
 15159  012184  EC5F  F0B8         	call	_Send_Config2
 15160                           
 15161                           ;StringCommand.c: 693: Send_Config2(0b00000001, SubLightOFF);
 15162  012188  0EEE               	movlw	high _SubLightOFF
 15163  01218A  0101               	movlb	1	; () banked
 15164  01218C  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15165  01218E  0E25               	movlw	low _SubLightOFF
 15166  012190  0101               	movlb	1	; () banked
 15167  012192  6F87               	movwf	Send_Config2@data& (0+255),b
 15168  012194  0E01               	movlw	1
 15169  012196  EC5F  F0B8         	call	_Send_Config2
 15170                           
 15171                           ;StringCommand.c: 694: Send_Config2(0b00000001, SubLightOFF);
 15172  01219A  0EEE               	movlw	high _SubLightOFF
 15173  01219C  0101               	movlb	1	; () banked
 15174  01219E  6F88               	movwf	(Send_Config2@data+1)& (0+255),b
 15175  0121A0  0E25               	movlw	low _SubLightOFF
 15176  0121A2  0101               	movlb	1	; () banked
 15177  0121A4  6F87               	movwf	Send_Config2@data& (0+255),b
 15178  0121A6  0E01               	movlw	1
 15179  0121A8  EC5F  F0B8         	call	_Send_Config2
 15180                           
 15181                           ;StringCommand.c: 695: INTCONbits.GIE = 1;
 15182  0121AC  8EF2               	bsf	intcon,7,c	;volatile
 15183                           
 15184                           ;StringCommand.c: 696: UARTstring("Joes room light Off");
 15185  0121AE  0EF7               	movlw	high STR_259
 15186  0121B0  0101               	movlb	1	; () banked
 15187  0121B2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15188  0121B4  0E65               	movlw	low STR_259
 15189  0121B6  0101               	movlb	1	; () banked
 15190  0121B8  6F87               	movwf	UARTstring@data& (0+255),b
 15191  0121BA  ECD0  F0B4         	call	_UARTstring	;wreg free
 15192                           
 15193                           ;StringCommand.c: 697: LCDdisplayFeedback("Joe room lt Off");
 15194  0121BE  0EFA               	movlw	high STR_260
 15195  0121C0  0101               	movlb	1	; () banked
 15196  0121C2  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15197  0121C4  0EE9               	movlw	low STR_260
 15198  0121C6  0101               	movlb	1	; () banked
 15199  0121C8  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15200  0121CA  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 15201                           
 15202                           ;StringCommand.c: 698: }
 15203  0121CE  D3D2               	goto	l619
 15204  0121D0                     l13406:
 15205                           
 15206                           ;StringCommand.c: 699: else
 15207                           ;StringCommand.c: 700: {
 15208                           ;StringCommand.c: 701: UARTstring("Joe's room what???");
 15209  0121D0  0EF7               	movlw	high STR_261
 15210  0121D2  0101               	movlb	1	; () banked
 15211  0121D4  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15212  0121D6  0EB4               	movlw	low STR_261
 15213  0121D8  0101               	movlb	1	; () banked
 15214  0121DA  6F87               	movwf	UARTstring@data& (0+255),b
 15215  0121DC  ECD0  F0B4         	call	_UARTstring	;wreg free
 15216                           
 15217                           ;StringCommand.c: 702: LCDdisplayFeedback("Joe room what??");
 15218  0121E0  0EFA               	movlw	high STR_262
 15219  0121E2  0101               	movlb	1	; () banked
 15220  0121E4  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15221  0121E6  0E49               	movlw	low STR_262
 15222  0121E8  0101               	movlb	1	; () banked
 15223  0121EA  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15224  0121EC  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 15225  0121F0  D3C1               	goto	l619
 15226  0121F2                     l13408:
 15227                           
 15228                           ;StringCommand.c: 705: else
 15229                           ;StringCommand.c: 706: {
 15230                           ;StringCommand.c: 707: UARTstring("Joes Room Help Menu\r\n\n");
 15231  0121F2  0EF6               	movlw	high STR_263
 15232  0121F4  0101               	movlb	1	; () banked
 15233  0121F6  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15234  0121F8  0E76               	movlw	low STR_263
 15235  0121FA  0101               	movlb	1	; () banked
 15236  0121FC  6F87               	movwf	UARTstring@data& (0+255),b
 15237  0121FE  ECD0  F0B4         	call	_UARTstring	;wreg free
 15238                           
 15239                           ;StringCommand.c: 708: UARTstring("Devices:\r\n");
 15240  012202  0EFD               	movlw	high STR_61
 15241  012204  0101               	movlb	1	; () banked
 15242  012206  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15243  012208  0EB7               	movlw	low STR_61
 15244  01220A  0101               	movlb	1	; () banked
 15245  01220C  6F87               	movwf	UARTstring@data& (0+255),b
 15246  01220E  ECD0  F0B4         	call	_UARTstring	;wreg free
 15247                           
 15248                           ;StringCommand.c: 709: UARTstring("Light\r\n\n");
 15249  012212  0EFE               	movlw	high STR_265
 15250  012214  0101               	movlb	1	; () banked
 15251  012216  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15252  012218  0E86               	movlw	low STR_265
 15253  01221A  0101               	movlb	1	; () banked
 15254  01221C  6F87               	movwf	UARTstring@data& (0+255),b
 15255  01221E  ECD0  F0B4         	call	_UARTstring	;wreg free
 15256                           
 15257                           ;StringCommand.c: 710: UARTstring("To control a device enter the device followed by '=' 
      +                          and 'On/Off'\r\n");
 15258  012222  0EEF               	movlw	high STR_64
 15259  012224  0101               	movlb	1	; () banked
 15260  012226  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15261  012228  0E17               	movlw	low STR_64
 15262  01222A  0101               	movlb	1	; () banked
 15263  01222C  6F87               	movwf	UARTstring@data& (0+255),b
 15264  01222E  ECD0  F0B4         	call	_UARTstring	;wreg free
 15265                           
 15266                           ;StringCommand.c: 711: UARTstring("i.e. Joes room light = On\r\n");
 15267  012232  0EF5               	movlw	high STR_267
 15268  012234  0101               	movlb	1	; () banked
 15269  012236  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15270  012238  0E27               	movlw	low STR_267
 15271  01223A  0101               	movlb	1	; () banked
 15272  01223C  6F87               	movwf	UARTstring@data& (0+255),b
 15273  01223E  ECD0  F0B4         	call	_UARTstring	;wreg free
 15274                           
 15275                           ;StringCommand.c: 712: LCD_Scroll("Joe room Menu");
 15276  012242  0EFC               	movlw	high STR_268
 15277  012244  0101               	movlb	1	; () banked
 15278  012246  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15279  012248  0E9B               	movlw	low STR_268
 15280  01224A  0101               	movlb	1	; () banked
 15281  01224C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15282  01224E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15283                           
 15284                           ;StringCommand.c: 713: LCD_Scroll("Devices:");
 15285  012252  0EFE               	movlw	high STR_67
 15286  012254  0101               	movlb	1	; () banked
 15287  012256  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15288  012258  0E8F               	movlw	low STR_67
 15289  01225A  0101               	movlb	1	; () banked
 15290  01225C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15291  01225E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15292                           
 15293                           ;StringCommand.c: 714: LCD_Scroll("Light");
 15294  012262  0EFF               	movlw	high STR_93
 15295  012264  0101               	movlb	1	; () banked
 15296  012266  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15297  012268  0EA7               	movlw	low STR_93
 15298  01226A  0101               	movlb	1	; () banked
 15299  01226C  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15300  01226E  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15301  012272  D380               	goto	l619
 15302  012274                     l13416:
 15303                           
 15304                           ;StringCommand.c: 718: else if (StringMatch(Input, "?"))
 15305  012274  0101               	movlb	1	; () banked
 15306  012276  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 15307  01227A  0101               	movlb	1	; () banked
 15308  01227C  C1C8  F17C         	movff	Command@Input,StringMatch@This
 15309  012280  0EFA               	movlw	high (STR_83+14)
 15310  012282  0101               	movlb	1	; () banked
 15311  012284  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 15312  012286  0E17               	movlw	low (STR_83+14)
 15313  012288  0101               	movlb	1	; () banked
 15314  01228A  6F7E               	movwf	StringMatch@That& (0+255),b
 15315  01228C  EC28  F0BA         	call	_StringMatch	;wreg free
 15316  012290  0900               	iorlw	0
 15317  012292  B4D8               	btfsc	status,2,c
 15318  012294  D174               	goto	l13468
 15319                           
 15320                           ;StringCommand.c: 719: {
 15321                           ;StringCommand.c: 720: UARTstring("Devices:\r\n\n");
 15322  012296  0EFD               	movlw	high STR_272
 15323  012298  0101               	movlb	1	; () banked
 15324  01229A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15325  01229C  0E6F               	movlw	low STR_272
 15326  01229E  0101               	movlb	1	; () banked
 15327  0122A0  6F87               	movwf	UARTstring@data& (0+255),b
 15328  0122A2  ECD0  F0B4         	call	_UARTstring	;wreg free
 15329                           
 15330                           ;StringCommand.c: 721: UARTstring("Bedroom\r\n");
 15331  0122A6  0EFE               	movlw	high STR_273
 15332  0122A8  0101               	movlb	1	; () banked
 15333  0122AA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15334  0122AC  0E0E               	movlw	low STR_273
 15335  0122AE  0101               	movlb	1	; () banked
 15336  0122B0  6F87               	movwf	UARTstring@data& (0+255),b
 15337  0122B2  ECD0  F0B4         	call	_UARTstring	;wreg free
 15338                           
 15339                           ;StringCommand.c: 722: UARTstring("Livingroom\r\n");
 15340  0122B6  0EFC               	movlw	high STR_274
 15341  0122B8  0101               	movlb	1	; () banked
 15342  0122BA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15343  0122BC  0EE0               	movlw	low STR_274
 15344  0122BE  0101               	movlb	1	; () banked
 15345  0122C0  6F87               	movwf	UARTstring@data& (0+255),b
 15346  0122C2  ECD0  F0B4         	call	_UARTstring	;wreg free
 15347                           
 15348                           ;StringCommand.c: 723: UARTstring("Joes room\r\n");
 15349  0122C6  0EFD               	movlw	high STR_275
 15350  0122C8  0101               	movlb	1	; () banked
 15351  0122CA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15352  0122CC  0E87               	movlw	low STR_275
 15353  0122CE  0101               	movlb	1	; () banked
 15354  0122D0  6F87               	movwf	UARTstring@data& (0+255),b
 15355  0122D2  ECD0  F0B4         	call	_UARTstring	;wreg free
 15356                           
 15357                           ;StringCommand.c: 724: UARTstring("Christmas Tree\r\n");
 15358  0122D6  0EF9               	movlw	high STR_276
 15359  0122D8  0101               	movlb	1	; () banked
 15360  0122DA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15361  0122DC  0E1D               	movlw	low STR_276
 15362  0122DE  0101               	movlb	1	; () banked
 15363  0122E0  6F87               	movwf	UARTstring@data& (0+255),b
 15364  0122E2  ECD0  F0B4         	call	_UARTstring	;wreg free
 15365                           
 15366                           ;StringCommand.c: 725: UARTstring("Contrast\r\n");
 15367  0122E6  0EFD               	movlw	high STR_277
 15368  0122E8  0101               	movlb	1	; () banked
 15369  0122EA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15370  0122EC  0ECD               	movlw	low STR_277
 15371  0122EE  0101               	movlb	1	; () banked
 15372  0122F0  6F87               	movwf	UARTstring@data& (0+255),b
 15373  0122F2  ECD0  F0B4         	call	_UARTstring	;wreg free
 15374                           
 15375                           ;StringCommand.c: 726: UARTstring("ADC\r\n");
 15376  0122F6  0EFF               	movlw	high STR_278
 15377  0122F8  0101               	movlb	1	; () banked
 15378  0122FA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15379  0122FC  0E83               	movlw	low STR_278
 15380  0122FE  0101               	movlb	1	; () banked
 15381  012300  6F87               	movwf	UARTstring@data& (0+255),b
 15382  012302  ECD0  F0B4         	call	_UARTstring	;wreg free
 15383                           
 15384                           ;StringCommand.c: 727: UARTstring("RTC\r\n");
 15385  012306  0EF6               	movlw	high (STR_228+18)
 15386  012308  0101               	movlb	1	; () banked
 15387  01230A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15388  01230C  0E58               	movlw	low (STR_228+18)
 15389  01230E  0101               	movlb	1	; () banked
 15390  012310  6F87               	movwf	UARTstring@data& (0+255),b
 15391  012312  ECD0  F0B4         	call	_UARTstring	;wreg free
 15392                           
 15393                           ;StringCommand.c: 728: UARTstring("Baud\r\n\n");
 15394  012316  0EFE               	movlw	high STR_280
 15395  012318  0101               	movlb	1	; () banked
 15396  01231A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15397  01231C  0EFA               	movlw	low STR_280
 15398  01231E  0101               	movlb	1	; () banked
 15399  012320  6F87               	movwf	UARTstring@data& (0+255),b
 15400  012322  ECD0  F0B4         	call	_UARTstring	;wreg free
 15401                           
 15402                           ;StringCommand.c: 729: UARTstring("For Device help enter device followed by a '?' \r\n")
      +                          ;
 15403  012326  0EF0               	movlw	high STR_281
 15404  012328  0101               	movlb	1	; () banked
 15405  01232A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15406  01232C  0EED               	movlw	low STR_281
 15407  01232E  0101               	movlb	1	; () banked
 15408  012330  6F87               	movwf	UARTstring@data& (0+255),b
 15409  012332  ECD0  F0B4         	call	_UARTstring	;wreg free
 15410                           
 15411                           ;StringCommand.c: 730: UARTstring("i.e.  Livingroom?\r\n\r\n");
 15412  012336  0EF6               	movlw	high STR_282
 15413  012338  0101               	movlb	1	; () banked
 15414  01233A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15415  01233C  0EBB               	movlw	low STR_282
 15416  01233E  0101               	movlb	1	; () banked
 15417  012340  6F87               	movwf	UARTstring@data& (0+255),b
 15418  012342  ECD0  F0B4         	call	_UARTstring	;wreg free
 15419                           
 15420                           ;StringCommand.c: 731: UARTstring("Current Time\r\n");
 15421  012346  0EFB               	movlw	high STR_283
 15422  012348  0101               	movlb	1	; () banked
 15423  01234A  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15424  01234C  0E59               	movlw	low STR_283
 15425  01234E  0101               	movlb	1	; () banked
 15426  012350  6F87               	movwf	UARTstring@data& (0+255),b
 15427  012352  ECD0  F0B4         	call	_UARTstring	;wreg free
 15428                           
 15429                           ;StringCommand.c: 732: SetLCDcursor(0, 0);
 15430  012356  0E00               	movlw	0
 15431  012358  0101               	movlb	1	; () banked
 15432  01235A  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 15433  01235C  0E00               	movlw	0
 15434  01235E  ECEE  F001         	call	_SetLCDcursor
 15435                           
 15436                           ;StringCommand.c: 733: LCDPrintString("Help Menu");
 15437  012362  0EFE               	movlw	high STR_284
 15438  012364  0101               	movlb	1	; () banked
 15439  012366  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15440  012368  0E68               	movlw	low STR_284
 15441  01236A  0101               	movlb	1	; () banked
 15442  01236C  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 15443  01236E  EC66  F0BA         	call	_LCDPrintString	;wreg free
 15444                           
 15445                           ;StringCommand.c: 734: if(!READ_RTC_TIME())
 15446  012372  ECCD  F0B0         	call	_READ_RTC_TIME	;wreg free
 15447  012376  0900               	iorlw	0
 15448  012378  A4D8               	btfss	status,2,c
 15449  01237A  D090               	goto	l13442
 15450                           
 15451                           ;StringCommand.c: 735: {
 15452                           ;StringCommand.c: 736: SprintDate(buf, NowTime, 0);
 15453  01237C  0105               	movlb	5	; () banked
 15454  01237E  0E05               	movlw	high Command@buf
 15455  012380  0101               	movlb	1	; () banked
 15456  012382  6FBD               	movwf	(SprintDate@ReturnBuf+1)& (0+255),b
 15457  012384  0105               	movlb	5	; () banked
 15458  012386  0E00               	movlw	low Command@buf
 15459  012388  0101               	movlb	1	; () banked
 15460  01238A  6FBC               	movwf	SprintDate@ReturnBuf& (0+255),b
 15461  01238C  EE21  F000         	lfsr	2,_NowTime
 15462  012390  EE11  F0BE         	lfsr	1,SprintDate@DisplayTime
 15463  012394  0E09               	movlw	9
 15464  012396                     u17271:
 15465  012396  CFDE FFE6          	movff	postinc2,postinc1
 15466  01239A  2EE8               	decfsz	wreg,f,c
 15467  01239C  D7FC               	goto	u17271
 15468  01239E  0E00               	movlw	0
 15469  0123A0  0101               	movlb	1	; () banked
 15470  0123A2  6FC7               	movwf	SprintDate@Military& (0+255),b
 15471  0123A4  EC5D  F0AE         	call	_SprintDate	;wreg free
 15472                           
 15473                           ;StringCommand.c: 737: UARTstring(buf);
 15474  0123A8  0105               	movlb	5	; () banked
 15475  0123AA  0E05               	movlw	high Command@buf
 15476  0123AC  0101               	movlb	1	; () banked
 15477  0123AE  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15478  0123B0  0105               	movlb	5	; () banked
 15479  0123B2  0E00               	movlw	low Command@buf
 15480  0123B4  0101               	movlb	1	; () banked
 15481  0123B6  6F87               	movwf	UARTstring@data& (0+255),b
 15482  0123B8  ECD0  F0B4         	call	_UARTstring	;wreg free
 15483                           
 15484                           ;StringCommand.c: 738: UARTstring("\r\n");
 15485  0123BC  0EF6               	movlw	high (STR_282+19)
 15486  0123BE  0101               	movlb	1	; () banked
 15487  0123C0  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15488  0123C2  0ECE               	movlw	low (STR_282+19)
 15489  0123C4  0101               	movlb	1	; () banked
 15490  0123C6  6F87               	movwf	UARTstring@data& (0+255),b
 15491  0123C8  ECD0  F0B4         	call	_UARTstring	;wreg free
 15492                           
 15493                           ;StringCommand.c: 740: if(NowTime.HoursAM_PM)
 15494  0123CC  0101               	movlb	1	; () banked
 15495  0123CE  5104               	movf	(_NowTime+4)& (0+255),w,b
 15496  0123D0  B4D8               	btfsc	status,2,c
 15497  0123D2  D02A               	goto	l13436
 15498                           
 15499                           ; BSR set to: 1
 15500                           ;StringCommand.c: 741: {
 15501                           ;StringCommand.c: 742: sprintf(buf,"%02d/%02d %02d:%02d PM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 15502  0123D4  0105               	movlb	5	; () banked
 15503  0123D6  0E05               	movlw	high Command@buf
 15504  0123D8  0101               	movlb	1	; () banked
 15505  0123DA  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 15506  0123DC  0105               	movlb	5	; () banked
 15507  0123DE  0E00               	movlw	low Command@buf
 15508  0123E0  0101               	movlb	1	; () banked
 15509  0123E2  6F92               	movwf	sprintf@sp& (0+255),b
 15510  0123E4  0EF6               	movlw	high STR_226
 15511  0123E6  0101               	movlb	1	; () banked
 15512  0123E8  6F95               	movwf	(sprintf@f+1)& (0+255),b
 15513  0123EA  0EA4               	movlw	low STR_226
 15514  0123EC  0101               	movlb	1	; () banked
 15515  0123EE  6F94               	movwf	sprintf@f& (0+255),b
 15516  0123F0  0101               	movlb	1	; () banked
 15517  0123F2  C107  F196         	movff	_NowTime+7,?_sprintf+4
 15518  0123F6  0101               	movlb	1	; () banked
 15519  0123F8  6B97               	clrf	(?_sprintf+5)& (0+255),b
 15520  0123FA  0101               	movlb	1	; () banked
 15521  0123FC  C106  F198         	movff	_NowTime+6,?_sprintf+6
 15522  012400  0101               	movlb	1	; () banked
 15523  012402  6B99               	clrf	(?_sprintf+7)& (0+255),b
 15524  012404  0101               	movlb	1	; () banked
 15525  012406  C102  F19A         	movff	_NowTime+2,?_sprintf+8
 15526  01240A  0101               	movlb	1	; () banked
 15527  01240C  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 15528  01240E  0101               	movlb	1	; () banked
 15529  012410  C101  F19C         	movff	_NowTime+1,?_sprintf+10
 15530  012414  0101               	movlb	1	; () banked
 15531  012416  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 15532  012418  0101               	movlb	1	; () banked
 15533  01241A  C100  F19E         	movff	_NowTime,?_sprintf+12
 15534  01241E  0101               	movlb	1	; () banked
 15535  012420  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 15536  012422  ECC4  F094         	call	_sprintf	;wreg free
 15537                           
 15538                           ;StringCommand.c: 743: }
 15539  012426  D029               	goto	l13438
 15540  012428                     l13436:
 15541                           
 15542                           ;StringCommand.c: 744: else
 15543                           ;StringCommand.c: 745: {
 15544                           ;StringCommand.c: 746: sprintf(buf,"%02d/%02d %02d:%02d AM", NowTime.Month, NowTime.Date
      +                          , NowTime.Hours, NowTime.Minutes, NowTime.Seconds);
 15545  012428  0105               	movlb	5	; () banked
 15546  01242A  0E05               	movlw	high Command@buf
 15547  01242C  0101               	movlb	1	; () banked
 15548  01242E  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 15549  012430  0105               	movlb	5	; () banked
 15550  012432  0E00               	movlw	low Command@buf
 15551  012434  0101               	movlb	1	; () banked
 15552  012436  6F92               	movwf	sprintf@sp& (0+255),b
 15553  012438  0EF6               	movlw	high STR_227
 15554  01243A  0101               	movlb	1	; () banked
 15555  01243C  6F95               	movwf	(sprintf@f+1)& (0+255),b
 15556  01243E  0E8D               	movlw	low STR_227
 15557  012440  0101               	movlb	1	; () banked
 15558  012442  6F94               	movwf	sprintf@f& (0+255),b
 15559  012444  0101               	movlb	1	; () banked
 15560  012446  C107  F196         	movff	_NowTime+7,?_sprintf+4
 15561  01244A  0101               	movlb	1	; () banked
 15562  01244C  6B97               	clrf	(?_sprintf+5)& (0+255),b
 15563  01244E  0101               	movlb	1	; () banked
 15564  012450  C106  F198         	movff	_NowTime+6,?_sprintf+6
 15565  012454  0101               	movlb	1	; () banked
 15566  012456  6B99               	clrf	(?_sprintf+7)& (0+255),b
 15567  012458  0101               	movlb	1	; () banked
 15568  01245A  C102  F19A         	movff	_NowTime+2,?_sprintf+8
 15569  01245E  0101               	movlb	1	; () banked
 15570  012460  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 15571  012462  0101               	movlb	1	; () banked
 15572  012464  C101  F19C         	movff	_NowTime+1,?_sprintf+10
 15573  012468  0101               	movlb	1	; () banked
 15574  01246A  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 15575  01246C  0101               	movlb	1	; () banked
 15576  01246E  C100  F19E         	movff	_NowTime,?_sprintf+12
 15577  012472  0101               	movlb	1	; () banked
 15578  012474  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 15579  012476  ECC4  F094         	call	_sprintf	;wreg free
 15580  01247A                     l13438:
 15581                           
 15582                           ;StringCommand.c: 747: }
 15583                           ;StringCommand.c: 748: SetLCDcursor(1, 0);
 15584  01247A  0E00               	movlw	0
 15585  01247C  0101               	movlb	1	; () banked
 15586  01247E  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 15587  012480  0E01               	movlw	1
 15588  012482  ECEE  F001         	call	_SetLCDcursor
 15589                           
 15590                           ;StringCommand.c: 749: LCDPrintString(buf);
 15591  012486  0105               	movlb	5	; () banked
 15592  012488  0E05               	movlw	high Command@buf
 15593  01248A  0101               	movlb	1	; () banked
 15594  01248C  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15595  01248E  0105               	movlb	5	; () banked
 15596  012490  0E00               	movlw	low Command@buf
 15597  012492  0101               	movlb	1	; () banked
 15598  012494  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 15599  012496  EC66  F0BA         	call	_LCDPrintString	;wreg free
 15600                           
 15601                           ;StringCommand.c: 750: }
 15602  01249A  D016               	goto	l755
 15603  01249C                     l13442:
 15604                           
 15605                           ;StringCommand.c: 751: else
 15606                           ;StringCommand.c: 752: {
 15607                           ;StringCommand.c: 753: UARTstring("ERROR: Can't Read RTC\r\n");
 15608  01249C  0EF6               	movlw	high STR_228
 15609  01249E  0101               	movlb	1	; () banked
 15610  0124A0  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15611  0124A2  0E46               	movlw	low STR_228
 15612  0124A4  0101               	movlb	1	; () banked
 15613  0124A6  6F87               	movwf	UARTstring@data& (0+255),b
 15614  0124A8  ECD0  F0B4         	call	_UARTstring	;wreg free
 15615                           
 15616                           ;StringCommand.c: 754: SetLCDcursor(1, 0);
 15617  0124AC  0E00               	movlw	0
 15618  0124AE  0101               	movlb	1	; () banked
 15619  0124B0  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 15620  0124B2  0E01               	movlw	1
 15621  0124B4  ECEE  F001         	call	_SetLCDcursor
 15622                           
 15623                           ;StringCommand.c: 755: LCDPrintString("RTC isnt working");
 15624  0124B8  0EF9               	movlw	high STR_229
 15625  0124BA  0101               	movlb	1	; () banked
 15626  0124BC  6F8B               	movwf	(LCDPrintString@Text+1)& (0+255),b
 15627  0124BE  0E61               	movlw	low STR_229
 15628  0124C0  0101               	movlb	1	; () banked
 15629  0124C2  6F8A               	movwf	LCDPrintString@Text& (0+255),b
 15630  0124C4  EC66  F0BA         	call	_LCDPrintString	;wreg free
 15631  0124C8                     l755:
 15632                           
 15633                           ;StringCommand.c: 756: }
 15634                           ;StringCommand.c: 757: SetLCDcursor(1, 0);
 15635  0124C8  0E00               	movlw	0
 15636  0124CA  0101               	movlb	1	; () banked
 15637  0124CC  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 15638  0124CE  0E01               	movlw	1
 15639  0124D0  ECEE  F001         	call	_SetLCDcursor
 15640                           
 15641                           ;StringCommand.c: 758: LCD_Scroll("Device Menus:");
 15642  0124D4  0EFC               	movlw	high STR_290
 15643  0124D6  0101               	movlb	1	; () banked
 15644  0124D8  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15645  0124DA  0E47               	movlw	low STR_290
 15646  0124DC  0101               	movlb	1	; () banked
 15647  0124DE  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15648  0124E0  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15649                           
 15650                           ;StringCommand.c: 759: LCD_Scroll("Bedroom?");
 15651  0124E4  0EFE               	movlw	high STR_291
 15652  0124E6  0101               	movlb	1	; () banked
 15653  0124E8  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15654  0124EA  0E98               	movlw	low STR_291
 15655  0124EC  0101               	movlb	1	; () banked
 15656  0124EE  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15657  0124F0  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15658                           
 15659                           ;StringCommand.c: 760: LCD_Scroll("Livingroom?");
 15660  0124F4  0EFD               	movlw	high STR_292
 15661  0124F6  0101               	movlb	1	; () banked
 15662  0124F8  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15663  0124FA  0E93               	movlw	low STR_292
 15664  0124FC  0101               	movlb	1	; () banked
 15665  0124FE  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15666  012500  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15667                           
 15668                           ;StringCommand.c: 761: LCD_Scroll("Joes Room?");
 15669  012504  0EFD               	movlw	high STR_293
 15670  012506  0101               	movlb	1	; () banked
 15671  012508  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15672  01250A  0ED8               	movlw	low STR_293
 15673  01250C  0101               	movlb	1	; () banked
 15674  01250E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15675  012510  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15676                           
 15677                           ;StringCommand.c: 762: LCD_Scroll("Christmas Tree?");
 15678  012514  0EFA               	movlw	high STR_294
 15679  012516  0101               	movlb	1	; () banked
 15680  012518  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15681  01251A  0E59               	movlw	low STR_294
 15682  01251C  0101               	movlb	1	; () banked
 15683  01251E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15684  012520  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15685                           
 15686                           ;StringCommand.c: 763: LCD_Scroll("Contrast?");
 15687  012524  0EFE               	movlw	high STR_295
 15688  012526  0101               	movlb	1	; () banked
 15689  012528  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15690  01252A  0E40               	movlw	low STR_295
 15691  01252C  0101               	movlb	1	; () banked
 15692  01252E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15693  012530  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15694                           
 15695                           ;StringCommand.c: 764: LCD_Scroll("ADC?");
 15696  012534  0EFF               	movlw	high STR_296
 15697  012536  0101               	movlb	1	; () banked
 15698  012538  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15699  01253A  0ECC               	movlw	low STR_296
 15700  01253C  0101               	movlb	1	; () banked
 15701  01253E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15702  012540  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15703                           
 15704                           ;StringCommand.c: 765: LCD_Scroll("RTC?");
 15705  012544  0EFF               	movlw	high STR_297
 15706  012546  0101               	movlb	1	; () banked
 15707  012548  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15708  01254A  0ED1               	movlw	low STR_297
 15709  01254C  0101               	movlb	1	; () banked
 15710  01254E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15711  012550  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15712                           
 15713                           ;StringCommand.c: 766: LCD_Scroll("Baud?");
 15714  012554  0EFF               	movlw	high STR_298
 15715  012556  0101               	movlb	1	; () banked
 15716  012558  6F8C               	movwf	(LCD_Scroll@This+1)& (0+255),b
 15717  01255A  0E8F               	movlw	low STR_298
 15718  01255C  0101               	movlb	1	; () banked
 15719  01255E  6F8B               	movwf	LCD_Scroll@This& (0+255),b
 15720  012560  ECB4  F0A5         	call	_LCD_Scroll	;wreg free
 15721  012564                     L11:
 15722                           
 15723                           ;StringCommand.c: 767: LCDclearCount =0;
 15724  012564  0E00               	movlw	0
 15725  012566  0101               	movlb	1	; () banked
 15726  012568  6FD9               	movwf	_LCDclearCount& (0+255),b
 15727  01256A  0E00               	movlw	0
 15728  01256C  0101               	movlb	1	; () banked
 15729  01256E  6FDA               	movwf	(_LCDclearCount+1)& (0+255),b
 15730  012570  0E00               	movlw	0
 15731  012572  0101               	movlb	1	; () banked
 15732  012574  6FDB               	movwf	(_LCDclearCount+2)& (0+255),b
 15733  012576  0E00               	movlw	0
 15734  012578  0101               	movlb	1	; () banked
 15735  01257A  6FDC               	movwf	(_LCDclearCount+3)& (0+255),b
 15736                           
 15737                           ;StringCommand.c: 768: }
 15738  01257C  D1FB               	goto	l619
 15739  01257E                     l13468:
 15740                           
 15741                           ;StringCommand.c: 769: else if(StringMatch(Input, "baud?"))
 15742  01257E  0101               	movlb	1	; () banked
 15743  012580  C1C9  F17D         	movff	Command@Input+1,StringMatch@This+1
 15744  012584  0101               	movlb	1	; () banked
 15745  012586  C1C8  F17C         	movff	Command@Input,StringMatch@This
 15746  01258A  0EFF               	movlw	high STR_299
 15747  01258C  0101               	movlb	1	; () banked
 15748  01258E  6F7F               	movwf	(StringMatch@That+1)& (0+255),b
 15749  012590  0E95               	movlw	low STR_299
 15750  012592  0101               	movlb	1	; () banked
 15751  012594  6F7E               	movwf	StringMatch@That& (0+255),b
 15752  012596  EC28  F0BA         	call	_StringMatch	;wreg free
 15753  01259A  0900               	iorlw	0
 15754  01259C  B4D8               	btfsc	status,2,c
 15755  01259E  D02F               	goto	l13476
 15756                           
 15757                           ;StringCommand.c: 770: {
 15758                           ;StringCommand.c: 772: sprintf(buf,"BAUD = %d", GetBaud());
 15759  0125A0  0105               	movlb	5	; () banked
 15760  0125A2  0E05               	movlw	high Command@buf
 15761  0125A4  0101               	movlb	1	; () banked
 15762  0125A6  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 15763  0125A8  0105               	movlb	5	; () banked
 15764  0125AA  0E00               	movlw	low Command@buf
 15765  0125AC  0101               	movlb	1	; () banked
 15766  0125AE  6F92               	movwf	sprintf@sp& (0+255),b
 15767  0125B0  0EFE               	movlw	high STR_300
 15768  0125B2  0101               	movlb	1	; () banked
 15769  0125B4  6F95               	movwf	(sprintf@f+1)& (0+255),b
 15770  0125B6  0E4A               	movlw	low STR_300
 15771  0125B8  0101               	movlb	1	; () banked
 15772  0125BA  6F94               	movwf	sprintf@f& (0+255),b
 15773  0125BC  EC7C  F003         	call	_GetBaud	;wreg free
 15774  0125C0  C17C  F196         	movff	?_GetBaud,?_sprintf+4
 15775  0125C4  C17D  F197         	movff	?_GetBaud+1,?_sprintf+5
 15776  0125C8  C17E  F198         	movff	?_GetBaud+2,?_sprintf+6
 15777  0125CC  C17F  F199         	movff	?_GetBaud+3,?_sprintf+7
 15778  0125D0  ECC4  F094         	call	_sprintf	;wreg free
 15779                           
 15780                           ;StringCommand.c: 773: UARTstring(buf);
 15781  0125D4  0105               	movlb	5	; () banked
 15782  0125D6  0E05               	movlw	high Command@buf
 15783  0125D8  0101               	movlb	1	; () banked
 15784  0125DA  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 15785  0125DC  0105               	movlb	5	; () banked
 15786  0125DE  0E00               	movlw	low Command@buf
 15787  0125E0  0101               	movlb	1	; () banked
 15788  0125E2  6F87               	movwf	UARTstring@data& (0+255),b
 15789  0125E4  ECD0  F0B4         	call	_UARTstring	;wreg free
 15790                           
 15791                           ;StringCommand.c: 774: LCDdisplayFeedback(buf);
 15792  0125E8  0105               	movlb	5	; () banked
 15793  0125EA  0E05               	movlw	high Command@buf
 15794  0125EC  0101               	movlb	1	; () banked
 15795  0125EE  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 15796  0125F0  0105               	movlb	5	; () banked
 15797  0125F2  0E00               	movlw	low Command@buf
 15798  0125F4  0101               	movlb	1	; () banked
 15799  0125F6  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 15800  0125F8  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 15801                           
 15802                           ;StringCommand.c: 775: }
 15803  0125FC  D1BB               	goto	l619
 15804  0125FE                     l13476:
 15805                           
 15806                           ;StringCommand.c: 776: else if(StringContains(Input, "baudwillbesetto") || StringContain
      +                          s(Input, "resetto") ||
 15807                           ;StringCommand.c: 777: StringContains(Input, "setbaud") || StringContains(Input, "change
      +                          baud"))
 15808  0125FE  0101               	movlb	1	; () banked
 15809  012600  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 15810  012604  0101               	movlb	1	; () banked
 15811  012606  C1C8  F17C         	movff	Command@Input,StringContains@This
 15812  01260A  0EFB               	movlw	high STR_301
 15813  01260C  0101               	movlb	1	; () banked
 15814  01260E  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 15815  012610  0E19               	movlw	low STR_301
 15816  012612  0101               	movlb	1	; () banked
 15817  012614  6F7E               	movwf	StringContains@That& (0+255),b
 15818  012616  ECE9  F0B9         	call	_StringContains	;wreg free
 15819  01261A  0900               	iorlw	0
 15820  01261C  A4D8               	btfss	status,2,c
 15821  01261E  D033               	goto	l13484
 15822  012620  0101               	movlb	1	; () banked
 15823  012622  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 15824  012626  0101               	movlb	1	; () banked
 15825  012628  C1C8  F17C         	movff	Command@Input,StringContains@This
 15826  01262C  0EFF               	movlw	high STR_302
 15827  01262E  0101               	movlb	1	; () banked
 15828  012630  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 15829  012632  0E3A               	movlw	low STR_302
 15830  012634  0101               	movlb	1	; () banked
 15831  012636  6F7E               	movwf	StringContains@That& (0+255),b
 15832  012638  ECE9  F0B9         	call	_StringContains	;wreg free
 15833  01263C  0900               	iorlw	0
 15834  01263E  A4D8               	btfss	status,2,c
 15835  012640  D022               	goto	l13484
 15836  012642  0101               	movlb	1	; () banked
 15837  012644  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 15838  012648  0101               	movlb	1	; () banked
 15839  01264A  C1C8  F17C         	movff	Command@Input,StringContains@This
 15840  01264E  0EFF               	movlw	high STR_303
 15841  012650  0101               	movlb	1	; () banked
 15842  012652  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 15843  012654  0E0A               	movlw	low STR_303
 15844  012656  0101               	movlb	1	; () banked
 15845  012658  6F7E               	movwf	StringContains@That& (0+255),b
 15846  01265A  ECE9  F0B9         	call	_StringContains	;wreg free
 15847  01265E  0900               	iorlw	0
 15848  012660  A4D8               	btfss	status,2,c
 15849  012662  D011               	goto	l13484
 15850  012664  0101               	movlb	1	; () banked
 15851  012666  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 15852  01266A  0101               	movlb	1	; () banked
 15853  01266C  C1C8  F17C         	movff	Command@Input,StringContains@This
 15854  012670  0EFD               	movlw	high STR_304
 15855  012672  0101               	movlb	1	; () banked
 15856  012674  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 15857  012676  0EE3               	movlw	low STR_304
 15858  012678  0101               	movlb	1	; () banked
 15859  01267A  6F7E               	movwf	StringContains@That& (0+255),b
 15860  01267C  ECE9  F0B9         	call	_StringContains	;wreg free
 15861  012680  0900               	iorlw	0
 15862  012682  B4D8               	btfsc	status,2,c
 15863  012684  D0DB               	goto	l13522
 15864  012686                     l13484:
 15865                           
 15866                           ;StringCommand.c: 778: {
 15867                           ;StringCommand.c: 780: if (!StringContains(Input, "="))
 15868  012686  0101               	movlb	1	; () banked
 15869  012688  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 15870  01268C  0101               	movlb	1	; () banked
 15871  01268E  C1C8  F17C         	movff	Command@Input,StringContains@This
 15872  012692  0EFD               	movlw	high (STR_201+11)
 15873  012694  0101               	movlb	1	; () banked
 15874  012696  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 15875  012698  0E05               	movlw	low (STR_201+11)
 15876  01269A  0101               	movlb	1	; () banked
 15877  01269C  6F7E               	movwf	StringContains@That& (0+255),b
 15878  01269E  ECE9  F0B9         	call	_StringContains	;wreg free
 15879  0126A2  0900               	iorlw	0
 15880  0126A4  A4D8               	btfss	status,2,c
 15881  0126A6  D008               	goto	l13488
 15882                           
 15883                           ;StringCommand.c: 781: {
 15884                           ;StringCommand.c: 782: StringAddEqual(Input);
 15885  0126A8  0101               	movlb	1	; () banked
 15886  0126AA  C1C9  F18C         	movff	Command@Input+1,StringAddEqual@Input+1
 15887  0126AE  0101               	movlb	1	; () banked
 15888  0126B0  C1C8  F18B         	movff	Command@Input,StringAddEqual@Input
 15889  0126B4  ECD6  F0A7         	call	_StringAddEqual	;wreg free
 15890  0126B8                     l13488:
 15891                           
 15892                           ;StringCommand.c: 783: }
 15893                           ;StringCommand.c: 784: BAUDtemp = (unsigned long)GetEnteredNumber(Input);
 15894  0126B8  0101               	movlb	1	; () banked
 15895  0126BA  C1C9  F189         	movff	Command@Input+1,GetEnteredNumber@This+1
 15896  0126BE  0101               	movlb	1	; () banked
 15897  0126C0  C1C8  F188         	movff	Command@Input,GetEnteredNumber@This
 15898  0126C4  ECD8  F0A6         	call	_GetEnteredNumber	;wreg free
 15899  0126C8  C188  F5CE         	movff	?_GetEnteredNumber,Command@BAUDtemp
 15900  0126CC  C189  F5CF         	movff	?_GetEnteredNumber+1,Command@BAUDtemp+1
 15901  0126D0  C18A  F5D0         	movff	?_GetEnteredNumber+2,Command@BAUDtemp+2
 15902  0126D4  C18B  F5D1         	movff	?_GetEnteredNumber+3,Command@BAUDtemp+3
 15903                           
 15904                           ;StringCommand.c: 785: if(BAUDtemp >=2400 && BAUDtemp <= 115200)
 15905  0126D8  0E60               	movlw	96
 15906  0126DA  0105               	movlb	5	; () banked
 15907  0126DC  5DCE               	subwf	Command@BAUDtemp& (0+255),w,b
 15908  0126DE  0E09               	movlw	9
 15909  0126E0  0105               	movlb	5	; () banked
 15910  0126E2  59CF               	subwfb	(Command@BAUDtemp+1)& (0+255),w,b
 15911  0126E4  0E00               	movlw	0
 15912  0126E6  0105               	movlb	5	; () banked
 15913  0126E8  59D0               	subwfb	(Command@BAUDtemp+2)& (0+255),w,b
 15914  0126EA  0E00               	movlw	0
 15915  0126EC  0105               	movlb	5	; () banked
 15916  0126EE  59D1               	subwfb	(Command@BAUDtemp+3)& (0+255),w,b
 15917  0126F0  A0D8               	btfss	status,0,c
 15918  0126F2  D09B               	goto	l13520
 15919                           
 15920                           ; BSR set to: 5
 15921  0126F4  0E01               	movlw	1
 15922  0126F6  0101               	movlb	1	; () banked
 15923  0126F8  6FCA               	movwf	??_Command& (0+255),b
 15924  0126FA  0EC2               	movlw	194
 15925  0126FC  6FCB               	movwf	(??_Command+1)& (0+255),b
 15926  0126FE  0E01               	movlw	1
 15927  012700  6FCC               	movwf	(??_Command+2)& (0+255),b
 15928  012702  0E00               	movlw	0
 15929  012704  6FCD               	movwf	(??_Command+3)& (0+255),b
 15930  012706  0101               	movlb	1	; () banked
 15931  012708  51CA               	movf	??_Command& (0+255),w,b
 15932  01270A  0105               	movlb	5	; () banked
 15933  01270C  5DCE               	subwf	Command@BAUDtemp& (0+255),w,b
 15934  01270E  0101               	movlb	1	; () banked
 15935  012710  51CB               	movf	(??_Command+1)& (0+255),w,b
 15936  012712  0105               	movlb	5	; () banked
 15937  012714  59CF               	subwfb	(Command@BAUDtemp+1)& (0+255),w,b
 15938  012716  0101               	movlb	1	; () banked
 15939  012718  51CC               	movf	(??_Command+2)& (0+255),w,b
 15940  01271A  0105               	movlb	5	; () banked
 15941  01271C  59D0               	subwfb	(Command@BAUDtemp+2)& (0+255),w,b
 15942  01271E  0101               	movlb	1	; () banked
 15943  012720  51CD               	movf	(??_Command+3)& (0+255),w,b
 15944  012722  0105               	movlb	5	; () banked
 15945  012724  59D1               	subwfb	(Command@BAUDtemp+3)& (0+255),w,b
 15946  012726  B0D8               	btfsc	status,0,c
 15947  012728  D080               	goto	l13520
 15948                           
 15949                           ; BSR set to: 5
 15950                           ;StringCommand.c: 786: {
 15951                           ;StringCommand.c: 787: if(StringContains(Input, "withnoparitybit"))
 15952  01272A  0101               	movlb	1	; () banked
 15953  01272C  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 15954  012730  0101               	movlb	1	; () banked
 15955  012732  C1C8  F17C         	movff	Command@Input,StringContains@This
 15956  012736  0EFB               	movlw	high STR_306
 15957  012738  0101               	movlb	1	; () banked
 15958  01273A  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 15959  01273C  0E39               	movlw	low STR_306
 15960  01273E  0101               	movlb	1	; () banked
 15961  012740  6F7E               	movwf	StringContains@That& (0+255),b
 15962  012742  ECE9  F0B9         	call	_StringContains	;wreg free
 15963  012746  0900               	iorlw	0
 15964  012748  B4D8               	btfsc	status,2,c
 15965  01274A  D002               	goto	l13498
 15966                           
 15967                           ;StringCommand.c: 788: {
 15968                           ;StringCommand.c: 789: PARITYtemp =0;
 15969  01274C  0E00               	movlw	0
 15970  01274E  D04D               	goto	L16
 15971  012750                     l13498:
 15972                           
 15973                           ;StringCommand.c: 791: else if(StringContains(Input, "withoddparitybit"))
 15974  012750  0101               	movlb	1	; () banked
 15975  012752  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 15976  012756  0101               	movlb	1	; () banked
 15977  012758  C1C8  F17C         	movff	Command@Input,StringContains@This
 15978  01275C  0EF9               	movlw	high STR_307
 15979  01275E  0101               	movlb	1	; () banked
 15980  012760  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 15981  012762  0EB6               	movlw	low STR_307
 15982  012764  0101               	movlb	1	; () banked
 15983  012766  6F7E               	movwf	StringContains@That& (0+255),b
 15984  012768  ECE9  F0B9         	call	_StringContains	;wreg free
 15985  01276C  0900               	iorlw	0
 15986  01276E  B4D8               	btfsc	status,2,c
 15987  012770  D002               	goto	l13502
 15988                           
 15989                           ;StringCommand.c: 792: {
 15990                           ;StringCommand.c: 793: PARITYtemp =1;
 15991  012772  0E01               	movlw	1
 15992  012774  D03A               	goto	L16
 15993  012776                     l13502:
 15994                           
 15995                           ;StringCommand.c: 795: else if(StringContains(Input, "withevenparitybit"))
 15996  012776  0101               	movlb	1	; () banked
 15997  012778  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 15998  01277C  0101               	movlb	1	; () banked
 15999  01277E  C1C8  F17C         	movff	Command@Input,StringContains@This
 16000  012782  0EF8               	movlw	high STR_308
 16001  012784  0101               	movlb	1	; () banked
 16002  012786  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16003  012788  0EB6               	movlw	low STR_308
 16004  01278A  0101               	movlb	1	; () banked
 16005  01278C  6F7E               	movwf	StringContains@That& (0+255),b
 16006  01278E  ECE9  F0B9         	call	_StringContains	;wreg free
 16007  012792  0900               	iorlw	0
 16008  012794  B4D8               	btfsc	status,2,c
 16009  012796  D002               	goto	l13506
 16010                           
 16011                           ;StringCommand.c: 796: {
 16012                           ;StringCommand.c: 797: PARITYtemp =2;
 16013  012798  0E02               	movlw	2
 16014  01279A  D027               	goto	L16
 16015  01279C                     l13506:
 16016                           
 16017                           ;StringCommand.c: 799: else if(StringContains(Input, "withmarkbit"))
 16018  01279C  0101               	movlb	1	; () banked
 16019  01279E  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 16020  0127A2  0101               	movlb	1	; () banked
 16021  0127A4  C1C8  F17C         	movff	Command@Input,StringContains@This
 16022  0127A8  0EFD               	movlw	high STR_309
 16023  0127AA  0101               	movlb	1	; () banked
 16024  0127AC  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16025  0127AE  0E9F               	movlw	low STR_309
 16026  0127B0  0101               	movlb	1	; () banked
 16027  0127B2  6F7E               	movwf	StringContains@That& (0+255),b
 16028  0127B4  ECE9  F0B9         	call	_StringContains	;wreg free
 16029  0127B8  0900               	iorlw	0
 16030  0127BA  B4D8               	btfsc	status,2,c
 16031  0127BC  D002               	goto	l13510
 16032                           
 16033                           ;StringCommand.c: 800: {
 16034                           ;StringCommand.c: 801: PARITYtemp =3;
 16035  0127BE  0E03               	movlw	3
 16036  0127C0  D014               	goto	L16
 16037  0127C2                     l13510:
 16038                           
 16039                           ;StringCommand.c: 803: else if(StringContains(Input, "withspacebit"))
 16040  0127C2  0101               	movlb	1	; () banked
 16041  0127C4  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 16042  0127C8  0101               	movlb	1	; () banked
 16043  0127CA  C1C8  F17C         	movff	Command@Input,StringContains@This
 16044  0127CE  0EFD               	movlw	high STR_310
 16045  0127D0  0101               	movlb	1	; () banked
 16046  0127D2  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16047  0127D4  0E3B               	movlw	low STR_310
 16048  0127D6  0101               	movlb	1	; () banked
 16049  0127D8  6F7E               	movwf	StringContains@That& (0+255),b
 16050  0127DA  ECE9  F0B9         	call	_StringContains	;wreg free
 16051  0127DE  0900               	iorlw	0
 16052  0127E0  B4D8               	btfsc	status,2,c
 16053  0127E2  D002               	goto	l13514
 16054                           
 16055                           ;StringCommand.c: 804: {
 16056                           ;StringCommand.c: 805: PARITYtemp =4;
 16057  0127E4  0E04               	movlw	4
 16058  0127E6  D001               	goto	L16
 16059  0127E8                     l13514:
 16060                           
 16061                           ;StringCommand.c: 807: else
 16062                           ;StringCommand.c: 808: {
 16063                           ;StringCommand.c: 809: PARITYtemp = 5;
 16064  0127E8  0E05               	movlw	5
 16065  0127EA                     L16:
 16066  0127EA  0105               	movlb	5	; () banked
 16067  0127EC  6FD4               	movwf	Command@PARITYtemp& (0+255),b
 16068  0127EE  0E00               	movlw	0
 16069  0127F0  0105               	movlb	5	; () banked
 16070  0127F2  6FD5               	movwf	(Command@PARITYtemp+1)& (0+255),b
 16071  0127F4  0E00               	movlw	0
 16072  0127F6  0105               	movlb	5	; () banked
 16073  0127F8  6FD6               	movwf	(Command@PARITYtemp+2)& (0+255),b
 16074  0127FA  0E00               	movlw	0
 16075  0127FC  0105               	movlb	5	; () banked
 16076  0127FE  6FD7               	movwf	(Command@PARITYtemp+3)& (0+255),b
 16077                           
 16078                           ; BSR set to: 5
 16079                           ;StringCommand.c: 810: }
 16080                           ;StringCommand.c: 811: if(PARITYtemp != 5)
 16081                           
 16082                           ; BSR set to: 5
 16083                           
 16084                           ; BSR set to: 5
 16085                           
 16086                           ; BSR set to: 5
 16087                           
 16088                           ; BSR set to: 5
 16089                           
 16090                           ; BSR set to: 5
 16091  012800  0105               	movlb	5	; () banked
 16092  012802  51D4               	movf	Command@PARITYtemp& (0+255),w,b
 16093  012804  0A05               	xorlw	5
 16094  012806  11D5               	iorwf	(Command@PARITYtemp+1)& (0+255),w,b
 16095  012808  11D6               	iorwf	(Command@PARITYtemp+2)& (0+255),w,b
 16096  01280A  11D7               	iorwf	(Command@PARITYtemp+3)& (0+255),w,b
 16097  01280C  B4D8               	btfsc	status,2,c
 16098  01280E  D0B2               	goto	l619
 16099                           
 16100                           ; BSR set to: 5
 16101                           ;StringCommand.c: 812: {
 16102                           ;StringCommand.c: 813: SetBaud(BAUDtemp, PARITYtemp);
 16103  012810  C5CE  F1BC         	movff	Command@BAUDtemp,SetBaud@Baud
 16104  012814  C5CF  F1BD         	movff	Command@BAUDtemp+1,SetBaud@Baud+1
 16105  012818  C5D0  F1BE         	movff	Command@BAUDtemp+2,SetBaud@Baud+2
 16106  01281C  C5D1  F1BF         	movff	Command@BAUDtemp+3,SetBaud@Baud+3
 16107  012820  C5D4  F1C0         	movff	Command@PARITYtemp,SetBaud@Parity
 16108  012824  EC65  F0A4         	call	_SetBaud	;wreg free
 16109  012828  D0A5               	goto	l619
 16110  01282A                     l13520:
 16111                           
 16112                           ;StringCommand.c: 816: else
 16113                           ;StringCommand.c: 817: {
 16114                           ;StringCommand.c: 818: UARTstring("Baud Out of range\r\n");
 16115  01282A  0EF7               	movlw	high STR_311
 16116  01282C  0101               	movlb	1	; () banked
 16117  01282E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 16118  012830  0E3D               	movlw	low STR_311
 16119  012832  0101               	movlb	1	; () banked
 16120  012834  6F87               	movwf	UARTstring@data& (0+255),b
 16121  012836  ECD0  F0B4         	call	_UARTstring	;wreg free
 16122  01283A  D09C               	goto	l619
 16123  01283C                     l13522:
 16124                           
 16125                           ;StringCommand.c: 821: else if(StringContains(Input, "baudis"))
 16126  01283C  0101               	movlb	1	; () banked
 16127  01283E  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 16128  012842  0101               	movlb	1	; () banked
 16129  012844  C1C8  F17C         	movff	Command@Input,StringContains@This
 16130  012848  0EFF               	movlw	high STR_312
 16131  01284A  0101               	movlb	1	; () banked
 16132  01284C  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16133  01284E  0E7C               	movlw	low STR_312
 16134  012850  0101               	movlb	1	; () banked
 16135  012852  6F7E               	movwf	StringContains@That& (0+255),b
 16136  012854  ECE9  F0B9         	call	_StringContains	;wreg free
 16137  012858  0900               	iorlw	0
 16138  01285A  A4D8               	btfss	status,2,c
 16139  01285C  D068               	goto	u17480
 16140                           
 16141                           ;StringCommand.c: 829: else if(StringContains(Input, "enterbaudrate"))
 16142                           
 16143                           ;StringCommand.c: 828: }
 16144                           
 16145                           ;StringCommand.c: 822: {
 16146                           ;StringCommand.c: 827: __nop();
 16147  01285E  0101               	movlb	1	; () banked
 16148  012860  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 16149  012864  0101               	movlb	1	; () banked
 16150  012866  C1C8  F17C         	movff	Command@Input,StringContains@This
 16151  01286A  0EFC               	movlw	high STR_313
 16152  01286C  0101               	movlb	1	; () banked
 16153  01286E  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16154  012870  0E55               	movlw	low STR_313
 16155  012872  0101               	movlb	1	; () banked
 16156  012874  6F7E               	movwf	StringContains@That& (0+255),b
 16157  012876  ECE9  F0B9         	call	_StringContains	;wreg free
 16158  01287A  0900               	iorlw	0
 16159  01287C  A4D8               	btfss	status,2,c
 16160  01287E  D057               	goto	u17480
 16161                           
 16162                           ;StringCommand.c: 834: else if(ISNUMBER(Input[0]))
 16163                           
 16164                           ;StringCommand.c: 833: }
 16165                           
 16166                           ;StringCommand.c: 830: {
 16167                           ;StringCommand.c: 832: __nop();
 16168  012880  C1C8  FFD9         	movff	Command@Input,fsr2l
 16169  012884  C1C9  FFDA         	movff	Command@Input+1,fsr2h
 16170  012888  50DF               	movf	indf2,w,c
 16171  01288A  EC22  F003         	call	_ISNUMBER
 16172  01288E  0900               	iorlw	0
 16173  012890  B4D8               	btfsc	status,2,c
 16174  012892  D060               	goto	l13546
 16175                           
 16176                           ;StringCommand.c: 835: {
 16177                           ;StringCommand.c: 837: if (!StringContains(Input, "="))
 16178  012894  0101               	movlb	1	; () banked
 16179  012896  C1C9  F17D         	movff	Command@Input+1,StringContains@This+1
 16180  01289A  0101               	movlb	1	; () banked
 16181  01289C  C1C8  F17C         	movff	Command@Input,StringContains@This
 16182  0128A0  0EFD               	movlw	high (STR_201+11)
 16183  0128A2  0101               	movlb	1	; () banked
 16184  0128A4  6F7F               	movwf	(StringContains@That+1)& (0+255),b
 16185  0128A6  0E05               	movlw	low (STR_201+11)
 16186  0128A8  0101               	movlb	1	; () banked
 16187  0128AA  6F7E               	movwf	StringContains@That& (0+255),b
 16188  0128AC  ECE9  F0B9         	call	_StringContains	;wreg free
 16189  0128B0  0900               	iorlw	0
 16190  0128B2  A4D8               	btfss	status,2,c
 16191  0128B4  D008               	goto	l13536
 16192                           
 16193                           ;StringCommand.c: 838: {
 16194                           ;StringCommand.c: 839: StringAddEqual(Input);
 16195  0128B6  0101               	movlb	1	; () banked
 16196  0128B8  C1C9  F18C         	movff	Command@Input+1,StringAddEqual@Input+1
 16197  0128BC  0101               	movlb	1	; () banked
 16198  0128BE  C1C8  F18B         	movff	Command@Input,StringAddEqual@Input
 16199  0128C2  ECD6  F0A7         	call	_StringAddEqual	;wreg free
 16200  0128C6                     l13536:
 16201                           
 16202                           ;StringCommand.c: 840: }
 16203                           ;StringCommand.c: 841: tempLONG = (unsigned long)GetEnteredNumber(Input);
 16204  0128C6  0101               	movlb	1	; () banked
 16205  0128C8  C1C9  F189         	movff	Command@Input+1,GetEnteredNumber@This+1
 16206  0128CC  0101               	movlb	1	; () banked
 16207  0128CE  C1C8  F188         	movff	Command@Input,GetEnteredNumber@This
 16208  0128D2  ECD8  F0A6         	call	_GetEnteredNumber	;wreg free
 16209  0128D6  C188  F5DE         	movff	?_GetEnteredNumber,Command@tempLONG
 16210  0128DA  C189  F5DF         	movff	?_GetEnteredNumber+1,Command@tempLONG+1
 16211  0128DE  C18A  F5E0         	movff	?_GetEnteredNumber+2,Command@tempLONG+2
 16212  0128E2  C18B  F5E1         	movff	?_GetEnteredNumber+3,Command@tempLONG+3
 16213                           
 16214                           ;StringCommand.c: 842: {
 16215                           ;StringCommand.c: 843: if(tempLONG >=2400 && tempLONG <=115200)
 16216  0128E6  0105               	movlb	5	; () banked
 16217  0128E8  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 16218  0128EA  0A80               	xorlw	128
 16219  0128EC  0F80               	addlw	128
 16220  0128EE  E10B               	bnz	u17475
 16221  0128F0  0E00               	movlw	0
 16222  0128F2  0105               	movlb	5	; () banked
 16223  0128F4  5DE0               	subwf	(Command@tempLONG+2)& (0+255),w,b
 16224  0128F6  E107               	bnz	u17475
 16225  0128F8  0E09               	movlw	9
 16226  0128FA  0105               	movlb	5	; () banked
 16227  0128FC  5DDF               	subwf	(Command@tempLONG+1)& (0+255),w,b
 16228  0128FE  E103               	bnz	u17475
 16229  012900  0E60               	movlw	96
 16230  012902  0105               	movlb	5	; () banked
 16231  012904  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 16232  012906                     u17475:
 16233  012906  A0D8               	btfss	status,0,c
 16234  012908  D014               	goto	l13544
 16235                           
 16236                           ; BSR set to: 5
 16237  01290A  0105               	movlb	5	; () banked
 16238  01290C  51E1               	movf	(Command@tempLONG+3)& (0+255),w,b
 16239  01290E  0A80               	xorlw	128
 16240  012910  0F80               	addlw	128
 16241  012912  E10B               	bnz	u17485
 16242  012914  0E01               	movlw	1
 16243  012916  0105               	movlb	5	; () banked
 16244  012918  5DE0               	subwf	(Command@tempLONG+2)& (0+255),w,b
 16245  01291A  E107               	bnz	u17485
 16246  01291C  0EC2               	movlw	194
 16247  01291E  0105               	movlb	5	; () banked
 16248  012920  5DDF               	subwf	(Command@tempLONG+1)& (0+255),w,b
 16249  012922  E103               	bnz	u17485
 16250  012924  0E01               	movlw	1
 16251  012926  0105               	movlb	5	; () banked
 16252  012928  5DDE               	subwf	Command@tempLONG& (0+255),w,b
 16253  01292A                     u17485:
 16254  01292A  B0D8               	btfsc	status,0,c
 16255  01292C  D002               	goto	l13544
 16256  01292E                     u17480:
 16257                           
 16258                           ; BSR set to: 5
 16259                           ;StringCommand.c: 844: {
 16260                           ;StringCommand.c: 845: __nop();
 16261  01292E  F000               	nop	
 16262                           
 16263                           ;StringCommand.c: 846: }
 16264  012930  D021               	goto	l619
 16265  012932                     l13544:
 16266                           
 16267                           ;StringCommand.c: 847: else
 16268                           ;StringCommand.c: 848: {
 16269                           ;StringCommand.c: 849: UARTstring("Invalid Command\r\n");
 16270  012932  0EF8               	movlw	high STR_315
 16271  012934  0101               	movlb	1	; () banked
 16272  012936  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 16273  012938  0E38               	movlw	low STR_315
 16274  01293A  0101               	movlb	1	; () banked
 16275  01293C  6F87               	movwf	UARTstring@data& (0+255),b
 16276  01293E  ECD0  F0B4         	call	_UARTstring	;wreg free
 16277                           
 16278                           ;StringCommand.c: 850: LCDdisplayFeedback("Invalid Command");
 16279  012942  0EFA               	movlw	high STR_316
 16280  012944  0101               	movlb	1	; () banked
 16281  012946  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16282  012948  0EA9               	movlw	low STR_316
 16283  01294A  0101               	movlb	1	; () banked
 16284  01294C  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16285  01294E  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 16286  012952  D010               	goto	l619
 16287  012954                     l13546:
 16288                           
 16289                           ;StringCommand.c: 854: else
 16290                           ;StringCommand.c: 855: {
 16291                           ;StringCommand.c: 856: UARTstring("Invalid Command\r\n");
 16292  012954  0EF8               	movlw	high STR_315
 16293  012956  0101               	movlb	1	; () banked
 16294  012958  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 16295  01295A  0E38               	movlw	low STR_315
 16296  01295C  0101               	movlb	1	; () banked
 16297  01295E  6F87               	movwf	UARTstring@data& (0+255),b
 16298  012960  ECD0  F0B4         	call	_UARTstring	;wreg free
 16299                           
 16300                           ;StringCommand.c: 857: LCDdisplayFeedback("Invalid Command");
 16301  012964  0EFA               	movlw	high STR_316
 16302  012966  0101               	movlb	1	; () banked
 16303  012968  6F8F               	movwf	(LCDdisplayFeedback@Text+1)& (0+255),b
 16304  01296A  0EA9               	movlw	low STR_316
 16305  01296C  0101               	movlb	1	; () banked
 16306  01296E  6F8E               	movwf	LCDdisplayFeedback@Text& (0+255),b
 16307  012970  EC3E  F0BE         	call	_LCDdisplayFeedback	;wreg free
 16308  012974                     l619:
 16309                           
 16310                           ;StringCommand.c: 858: }
 16311                           ;StringCommand.c: 859: UARTstring("\r\n");
 16312  012974  0EF6               	movlw	high (STR_282+19)
 16313  012976  0101               	movlb	1	; () banked
 16314  012978  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 16315  01297A  0ECE               	movlw	low (STR_282+19)
 16316  01297C  0101               	movlb	1	; () banked
 16317  01297E  6F87               	movwf	UARTstring@data& (0+255),b
 16318  012980  ECD0  F0B4         	call	_UARTstring	;wreg free
 16319                           
 16320                           ;StringCommand.c: 860: return 1;
 16321  012984  0E01               	movlw	1
 16322  012986  0012               	return	
 16323  012988                     __end_of_Command:
 16324                           	opt stack 0
 16325                           tblptru	equ	0xFF8
 16326                           tblptrh	equ	0xFF7
 16327                           tblptrl	equ	0xFF6
 16328                           tablat	equ	0xFF5
 16329                           prodl	equ	0xFF3
 16330                           intcon	equ	0xFF2
 16331                           postinc0	equ	0xFEE
 16332                           wreg	equ	0xFE8
 16333                           postinc1	equ	0xFE6
 16334                           postdec1	equ	0xFE5
 16335                           fsr1l	equ	0xFE1
 16336                           indf2	equ	0xFDF
 16337                           postinc2	equ	0xFDE
 16338                           fsr2h	equ	0xFDA
 16339                           fsr2l	equ	0xFD9
 16340                           status	equ	0xFD8
 16341                           
 16342 ;; *************** function _lowercase *****************
 16343 ;; Defined at:
 16344 ;;		line 281 in file "MISC.c"
 16345 ;; Parameters:    Size  Location     Type
 16346 ;;  Input           2   14[BANK1 ] PTR unsigned char 
 16347 ;;		 -> Rxdata(100), 
 16348 ;; Auto vars:     Size  Location     Type
 16349 ;;  i               1   17[BANK1 ] unsigned char 
 16350 ;; Return value:  Size  Location     Type
 16351 ;;		None               void
 16352 ;; Registers used:
 16353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16354 ;; Tracked objects:
 16355 ;;		On entry : 0/0
 16356 ;;		On exit  : 0/0
 16357 ;;		Unchanged: 0/0
 16358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16359 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 16360 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16361 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16362 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16363 ;;Total ram usage:        4 bytes
 16364 ;; Hardware stack levels used:    1
 16365 ;; Hardware stack levels required when called:    6
 16366 ;; This function calls:
 16367 ;;		Nothing
 16368 ;; This function is called by:
 16369 ;;		_Command
 16370 ;; This function uses a non-reentrant model
 16371 ;;
 16372                           
 16373                           	psect	text16
 16374  016FA4                     __ptext16:
 16375                           	opt stack 0
 16376  016FA4                     _lowercase:
 16377                           	opt stack 22
 16378                           
 16379                           ;MISC.c: 283: unsigned char i =0;
 16380                           
 16381                           ;incstack = 0
 16382  016FA4  0E00               	movlw	0
 16383  016FA6  0101               	movlb	1	; () banked
 16384  016FA8  6F7F               	movwf	lowercase@i& (0+255),b
 16385                           
 16386                           ;MISC.c: 284: while((Input[i]!= 0) && (i < 100))
 16387  016FAA  D030               	goto	l11834
 16388  016FAC                     l11826:
 16389                           
 16390                           ; BSR set to: 1
 16391                           ;MISC.c: 285: {
 16392                           ;MISC.c: 286: if((Input[i] >= 65) && (Input[i] <= 90 ))
 16393  016FAC  0101               	movlb	1	; () banked
 16394  016FAE  517F               	movf	lowercase@i& (0+255),w,b
 16395  016FB0  0D01               	mullw	1
 16396  016FB2  50F3               	movf	prodl,w,c
 16397  016FB4  0101               	movlb	1	; () banked
 16398  016FB6  257C               	addwf	lowercase@Input& (0+255),w,b
 16399  016FB8  6ED9               	movwf	fsr2l,c
 16400  016FBA  50F4               	movf	prodh,w,c
 16401  016FBC  0101               	movlb	1	; () banked
 16402  016FBE  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16403  016FC0  6EDA               	movwf	fsr2h,c
 16404  016FC2  0E40               	movlw	64
 16405  016FC4  64DF               	cpfsgt	indf2,c
 16406  016FC6  D020               	goto	l11832
 16407                           
 16408                           ; BSR set to: 1
 16409  016FC8  0101               	movlb	1	; () banked
 16410  016FCA  517F               	movf	lowercase@i& (0+255),w,b
 16411  016FCC  0D01               	mullw	1
 16412  016FCE  50F3               	movf	prodl,w,c
 16413  016FD0  0101               	movlb	1	; () banked
 16414  016FD2  257C               	addwf	lowercase@Input& (0+255),w,b
 16415  016FD4  6ED9               	movwf	fsr2l,c
 16416  016FD6  50F4               	movf	prodh,w,c
 16417  016FD8  0101               	movlb	1	; () banked
 16418  016FDA  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16419  016FDC  6EDA               	movwf	fsr2h,c
 16420  016FDE  50DF               	movf	indf2,w,c
 16421  016FE0  0101               	movlb	1	; () banked
 16422  016FE2  6F7E               	movwf	??_lowercase& (0+255),b
 16423  016FE4  0E5B               	movlw	91
 16424  016FE6  0101               	movlb	1	; () banked
 16425  016FE8  5D7E               	subwf	??_lowercase& (0+255),w,b
 16426  016FEA  B0D8               	btfsc	status,0,c
 16427  016FEC  D00D               	goto	l11832
 16428                           
 16429                           ; BSR set to: 1
 16430                           ;MISC.c: 287: {
 16431                           ;MISC.c: 288: Input[i] += 32;
 16432  016FEE  0101               	movlb	1	; () banked
 16433  016FF0  517F               	movf	lowercase@i& (0+255),w,b
 16434  016FF2  0D01               	mullw	1
 16435  016FF4  50F3               	movf	prodl,w,c
 16436  016FF6  0101               	movlb	1	; () banked
 16437  016FF8  257C               	addwf	lowercase@Input& (0+255),w,b
 16438  016FFA  6ED9               	movwf	fsr2l,c
 16439  016FFC  50F4               	movf	prodh,w,c
 16440  016FFE  0101               	movlb	1	; () banked
 16441  017000  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16442  017002  6EDA               	movwf	fsr2h,c
 16443  017004  0E20               	movlw	32
 16444  017006  26DF               	addwf	indf2,f,c
 16445  017008                     l11832:
 16446                           
 16447                           ; BSR set to: 1
 16448                           ;MISC.c: 289: }
 16449                           ;MISC.c: 290: i++;
 16450  017008  0101               	movlb	1	; () banked
 16451  01700A  2B7F               	incf	lowercase@i& (0+255),f,b
 16452  01700C                     l11834:
 16453                           
 16454                           ; BSR set to: 1
 16455  01700C  0101               	movlb	1	; () banked
 16456  01700E  517F               	movf	lowercase@i& (0+255),w,b
 16457  017010  0D01               	mullw	1
 16458  017012  50F3               	movf	prodl,w,c
 16459  017014  0101               	movlb	1	; () banked
 16460  017016  257C               	addwf	lowercase@Input& (0+255),w,b
 16461  017018  6ED9               	movwf	fsr2l,c
 16462  01701A  50F4               	movf	prodh,w,c
 16463  01701C  0101               	movlb	1	; () banked
 16464  01701E  217D               	addwfc	(lowercase@Input+1)& (0+255),w,b
 16465  017020  6EDA               	movwf	fsr2h,c
 16466  017022  50DF               	movf	indf2,w,c
 16467  017024  B4D8               	btfsc	status,2,c
 16468  017026  0012               	return	
 16469                           
 16470                           ; BSR set to: 1
 16471  017028  0E63               	movlw	99
 16472  01702A  0101               	movlb	1	; () banked
 16473  01702C  657F               	cpfsgt	lowercase@i& (0+255),b
 16474  01702E  D7BE               	goto	l11826
 16475  017030  0012               	return	
 16476  017032                     __end_of_lowercase:
 16477                           	opt stack 0
 16478                           tblptru	equ	0xFF8
 16479                           tblptrh	equ	0xFF7
 16480                           tblptrl	equ	0xFF6
 16481                           tablat	equ	0xFF5
 16482                           prodh	equ	0xFF4
 16483                           prodl	equ	0xFF3
 16484                           intcon	equ	0xFF2
 16485                           postinc0	equ	0xFEE
 16486                           wreg	equ	0xFE8
 16487                           postinc1	equ	0xFE6
 16488                           postdec1	equ	0xFE5
 16489                           fsr1l	equ	0xFE1
 16490                           indf2	equ	0xFDF
 16491                           postinc2	equ	0xFDE
 16492                           fsr2h	equ	0xFDA
 16493                           fsr2l	equ	0xFD9
 16494                           status	equ	0xFD8
 16495                           
 16496 ;; *************** function ___lwtoft *****************
 16497 ;; Defined at:
 16498 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
 16499 ;; Parameters:    Size  Location     Type
 16500 ;;  c               2   22[BANK1 ] unsigned int 
 16501 ;; Auto vars:     Size  Location     Type
 16502 ;;		None
 16503 ;; Return value:  Size  Location     Type
 16504 ;;                  3   22[BANK1 ] float 
 16505 ;; Registers used:
 16506 ;;		wreg, status,2, status,0, cstack
 16507 ;; Tracked objects:
 16508 ;;		On entry : 0/0
 16509 ;;		On exit  : 0/0
 16510 ;;		Unchanged: 0/0
 16511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16512 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 16513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16515 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 16516 ;;Total ram usage:        3 bytes
 16517 ;; Hardware stack levels used:    1
 16518 ;; Hardware stack levels required when called:    7
 16519 ;; This function calls:
 16520 ;;		___ftpack
 16521 ;; This function is called by:
 16522 ;;		_Command
 16523 ;; This function uses a non-reentrant model
 16524 ;;
 16525                           
 16526                           	psect	text17
 16527  0004D4                     __ptext17:
 16528                           	opt stack 0
 16529  0004D4                     ___lwtoft:
 16530                           	opt stack 21
 16531                           
 16532                           ; BSR set to: 1
 16533                           ;incstack = 0
 16534  0004D4  0101               	movlb	1	; () banked
 16535  0004D6  C184  F17C         	movff	___lwtoft@c,___ftpack@arg
 16536  0004DA  0101               	movlb	1	; () banked
 16537  0004DC  C185  F17D         	movff	___lwtoft@c+1,___ftpack@arg+1
 16538  0004E0  0101               	movlb	1	; () banked
 16539  0004E2  6B7E               	clrf	(___ftpack@arg+2)& (0+255),b
 16540  0004E4  0E8E               	movlw	142
 16541  0004E6  0101               	movlb	1	; () banked
 16542  0004E8  6F7F               	movwf	___ftpack@exp& (0+255),b
 16543  0004EA  0E00               	movlw	0
 16544  0004EC  0101               	movlb	1	; () banked
 16545  0004EE  6F80               	movwf	___ftpack@sign& (0+255),b
 16546  0004F0  ECEA  F0AE         	call	___ftpack	;wreg free
 16547  0004F4  C17C  F184         	movff	?___ftpack,?___lwtoft
 16548  0004F8  C17D  F185         	movff	?___ftpack+1,?___lwtoft+1
 16549  0004FC  C17E  F186         	movff	?___ftpack+2,?___lwtoft+2
 16550  000500  0012               	return	
 16551  000502                     __end_of___lwtoft:
 16552                           	opt stack 0
 16553                           tblptru	equ	0xFF8
 16554                           tblptrh	equ	0xFF7
 16555                           tblptrl	equ	0xFF6
 16556                           tablat	equ	0xFF5
 16557                           prodh	equ	0xFF4
 16558                           prodl	equ	0xFF3
 16559                           intcon	equ	0xFF2
 16560                           postinc0	equ	0xFEE
 16561                           wreg	equ	0xFE8
 16562                           postinc1	equ	0xFE6
 16563                           postdec1	equ	0xFE5
 16564                           fsr1l	equ	0xFE1
 16565                           indf2	equ	0xFDF
 16566                           postinc2	equ	0xFDE
 16567                           fsr2h	equ	0xFDA
 16568                           fsr2l	equ	0xFD9
 16569                           status	equ	0xFD8
 16570                           
 16571 ;; *************** function ___lwmod *****************
 16572 ;; Defined at:
 16573 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
 16574 ;; Parameters:    Size  Location     Type
 16575 ;;  dividend        2   14[BANK1 ] unsigned int 
 16576 ;;  divisor         2   16[BANK1 ] unsigned int 
 16577 ;; Auto vars:     Size  Location     Type
 16578 ;;  counter         1   18[BANK1 ] unsigned char 
 16579 ;; Return value:  Size  Location     Type
 16580 ;;                  2   14[BANK1 ] unsigned int 
 16581 ;; Registers used:
 16582 ;;		wreg, status,2, status,0
 16583 ;; Tracked objects:
 16584 ;;		On entry : 0/0
 16585 ;;		On exit  : 0/0
 16586 ;;		Unchanged: 0/0
 16587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16588 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16589 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16591 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16592 ;;Total ram usage:        5 bytes
 16593 ;; Hardware stack levels used:    1
 16594 ;; Hardware stack levels required when called:    6
 16595 ;; This function calls:
 16596 ;;		Nothing
 16597 ;; This function is called by:
 16598 ;;		_Command
 16599 ;; This function uses a non-reentrant model
 16600 ;;
 16601                           
 16602                           	psect	text18
 16603  0178AA                     __ptext18:
 16604                           	opt stack 0
 16605  0178AA                     ___lwmod:
 16606                           	opt stack 22
 16607                           
 16608                           ;incstack = 0
 16609  0178AA  0101               	movlb	1	; () banked
 16610  0178AC  517F               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16611  0178AE  117E               	iorwf	___lwmod@divisor& (0+255),w,b
 16612  0178B0  B4D8               	btfsc	status,2,c
 16613  0178B2  D026               	goto	l2207
 16614                           
 16615                           ; BSR set to: 1
 16616  0178B4  0E01               	movlw	1
 16617  0178B6  0101               	movlb	1	; () banked
 16618  0178B8  6F80               	movwf	___lwmod@counter& (0+255),b
 16619  0178BA  D006               	goto	l12500
 16620  0178BC                     l12498:
 16621                           
 16622                           ; BSR set to: 1
 16623  0178BC  0101               	movlb	1	; () banked
 16624  0178BE  90D8               	bcf	status,0,c
 16625  0178C0  377E               	rlcf	___lwmod@divisor& (0+255),f,b
 16626  0178C2  377F               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 16627  0178C4  0101               	movlb	1	; () banked
 16628  0178C6  2B80               	incf	___lwmod@counter& (0+255),f,b
 16629  0178C8                     l12500:
 16630                           
 16631                           ; BSR set to: 1
 16632  0178C8  0101               	movlb	1	; () banked
 16633  0178CA  AF7F               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 16634  0178CC  D7F7               	goto	l12498
 16635  0178CE                     l12502:
 16636                           
 16637                           ; BSR set to: 1
 16638  0178CE  0101               	movlb	1	; () banked
 16639  0178D0  517E               	movf	___lwmod@divisor& (0+255),w,b
 16640  0178D2  0101               	movlb	1	; () banked
 16641  0178D4  5D7C               	subwf	___lwmod@dividend& (0+255),w,b
 16642  0178D6  0101               	movlb	1	; () banked
 16643  0178D8  517F               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16644  0178DA  0101               	movlb	1	; () banked
 16645  0178DC  597D               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 16646  0178DE  A0D8               	btfss	status,0,c
 16647  0178E0  D008               	goto	l12506
 16648                           
 16649                           ; BSR set to: 1
 16650  0178E2  0101               	movlb	1	; () banked
 16651  0178E4  517E               	movf	___lwmod@divisor& (0+255),w,b
 16652  0178E6  0101               	movlb	1	; () banked
 16653  0178E8  5F7C               	subwf	___lwmod@dividend& (0+255),f,b
 16654  0178EA  0101               	movlb	1	; () banked
 16655  0178EC  517F               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16656  0178EE  0101               	movlb	1	; () banked
 16657  0178F0  5B7D               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 16658  0178F2                     l12506:
 16659                           
 16660                           ; BSR set to: 1
 16661  0178F2  0101               	movlb	1	; () banked
 16662  0178F4  90D8               	bcf	status,0,c
 16663  0178F6  337F               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 16664  0178F8  337E               	rrcf	___lwmod@divisor& (0+255),f,b
 16665                           
 16666                           ; BSR set to: 1
 16667  0178FA  0101               	movlb	1	; () banked
 16668  0178FC  2F80               	decfsz	___lwmod@counter& (0+255),f,b
 16669  0178FE  D7E7               	goto	l12502
 16670  017900                     l2207:
 16671                           
 16672                           ; BSR set to: 1
 16673  017900  C17C  F17C         	movff	___lwmod@dividend,?___lwmod
 16674  017904  C17D  F17D         	movff	___lwmod@dividend+1,?___lwmod+1
 16675                           
 16676                           ; BSR set to: 1
 16677  017908  0012               	return	
 16678  01790A                     __end_of___lwmod:
 16679                           	opt stack 0
 16680                           tblptru	equ	0xFF8
 16681                           tblptrh	equ	0xFF7
 16682                           tblptrl	equ	0xFF6
 16683                           tablat	equ	0xFF5
 16684                           prodh	equ	0xFF4
 16685                           prodl	equ	0xFF3
 16686                           intcon	equ	0xFF2
 16687                           postinc0	equ	0xFEE
 16688                           wreg	equ	0xFE8
 16689                           postinc1	equ	0xFE6
 16690                           postdec1	equ	0xFE5
 16691                           fsr1l	equ	0xFE1
 16692                           indf2	equ	0xFDF
 16693                           postinc2	equ	0xFDE
 16694                           fsr2h	equ	0xFDA
 16695                           fsr2l	equ	0xFD9
 16696                           status	equ	0xFD8
 16697                           
 16698 ;; *************** function _StringMatch *****************
 16699 ;; Defined at:
 16700 ;;		line 110 in file "MISC.c"
 16701 ;; Parameters:    Size  Location     Type
 16702 ;;  This            2   14[BANK1 ] PTR unsigned char 
 16703 ;;		 -> Rxdata(100), 
 16704 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 16705 ;;		 -> STR_299(6), STR_271(2), STR_258(18), STR_255(17), 
 16706 ;;		 -> STR_112(18), STR_109(17), STR_106(15), STR_103(14), 
 16707 ;;		 -> STR_100(17), STR_99(16), STR_79(18), STR_76(17), 
 16708 ;;		 -> STR_73(20), STR_72(19), STR_55(9), STR_52(8), 
 16709 ;;		 -> STR_49(5), STR_46(9), STR_43(8), STR_40(5), 
 16710 ;;		 -> STR_37(2), 
 16711 ;; Auto vars:     Size  Location     Type
 16712 ;;		None
 16713 ;; Return value:  Size  Location     Type
 16714 ;;                  1    wreg      unsigned char 
 16715 ;; Registers used:
 16716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16717 ;; Tracked objects:
 16718 ;;		On entry : 0/0
 16719 ;;		On exit  : 0/0
 16720 ;;		Unchanged: 0/0
 16721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16722 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16725 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16726 ;;Total ram usage:        4 bytes
 16727 ;; Hardware stack levels used:    1
 16728 ;; Hardware stack levels required when called:    6
 16729 ;; This function calls:
 16730 ;;		Nothing
 16731 ;; This function is called by:
 16732 ;;		_Command
 16733 ;; This function uses a non-reentrant model
 16734 ;;
 16735                           
 16736                           	psect	text19
 16737  017450                     __ptext19:
 16738                           	opt stack 0
 16739  017450                     _StringMatch:
 16740                           	opt stack 22
 16741                           
 16742                           ;MISC.c: 112: while(*This != 0)
 16743                           
 16744                           ; BSR set to: 1
 16745                           ;incstack = 0
 16746  017450  D025               	goto	l11666
 16747  017452                     l11656:
 16748                           
 16749                           ;MISC.c: 113: {
 16750                           ;MISC.c: 114: if(*This != *That || *That == 0)
 16751  017452  0101               	movlb	1	; () banked
 16752  017454  C17E  FFF6         	movff	StringMatch@That,tblptrl
 16753  017458  0101               	movlb	1	; () banked
 16754  01745A  C17F  FFF7         	movff	StringMatch@That+1,tblptrh
 16755  01745E                     	if	0	;tblptru may be non-zero
 16756  01745E                     	endif
 16757  01745E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16758  01745E  0E00               	movlw	low (__mediumconst shr (0+16))
 16759  017460  6EF8               	movwf	tblptru,c
 16760  017462                     	endif
 16761  017462  0008               	tblrd		*
 16762  017464  50F5               	movf	tablat,w,c
 16763  017466  C17C  FFD9         	movff	StringMatch@This,fsr2l
 16764  01746A  C17D  FFDA         	movff	StringMatch@This+1,fsr2h
 16765  01746E  62DF               	cpfseq	indf2,c
 16766  017470  D00D               	goto	l11660
 16767                           
 16768                           ; BSR set to: 1
 16769  017472  0101               	movlb	1	; () banked
 16770  017474  C17E  FFF6         	movff	StringMatch@That,tblptrl
 16771  017478  0101               	movlb	1	; () banked
 16772  01747A  C17F  FFF7         	movff	StringMatch@That+1,tblptrh
 16773  01747E                     	if	0	;tblptru may be non-zero
 16774  01747E                     	endif
 16775  01747E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16776  01747E  0E00               	movlw	low (__mediumconst shr (0+16))
 16777  017480  6EF8               	movwf	tblptru,c
 16778  017482                     	endif
 16779  017482  0008               	tblrd		*
 16780  017484  50F5               	movf	tablat,w,c
 16781  017486  0900               	iorlw	0
 16782  017488  A4D8               	btfss	status,2,c
 16783  01748A  D002               	goto	l11664
 16784  01748C                     l11660:
 16785                           
 16786                           ; BSR set to: 1
 16787                           ;MISC.c: 115: {
 16788                           ;MISC.c: 116: return 0;
 16789  01748C  0E00               	movlw	0
 16790  01748E  0012               	return	
 16791  017490                     l11664:
 16792                           
 16793                           ; BSR set to: 1
 16794                           ;MISC.c: 117: }
 16795                           ;MISC.c: 118: This++;
 16796  017490  0101               	movlb	1	; () banked
 16797  017492  4B7C               	infsnz	StringMatch@This& (0+255),f,b
 16798  017494  2B7D               	incf	(StringMatch@This+1)& (0+255),f,b
 16799                           
 16800                           ;MISC.c: 119: That++;
 16801  017496  0101               	movlb	1	; () banked
 16802  017498  4B7E               	infsnz	StringMatch@That& (0+255),f,b
 16803  01749A  2B7F               	incf	(StringMatch@That+1)& (0+255),f,b
 16804  01749C                     l11666:
 16805  01749C  C17C  FFD9         	movff	StringMatch@This,fsr2l
 16806  0174A0  C17D  FFDA         	movff	StringMatch@This+1,fsr2h
 16807  0174A4  50DF               	movf	indf2,w,c
 16808  0174A6  A4D8               	btfss	status,2,c
 16809  0174A8  D7D4               	goto	l11656
 16810                           
 16811                           ;MISC.c: 120: }
 16812                           ;MISC.c: 121: if(*That == 0)
 16813  0174AA  0101               	movlb	1	; () banked
 16814  0174AC  C17E  FFF6         	movff	StringMatch@That,tblptrl
 16815  0174B0  0101               	movlb	1	; () banked
 16816  0174B2  C17F  FFF7         	movff	StringMatch@That+1,tblptrh
 16817  0174B6                     	if	0	;tblptru may be non-zero
 16818  0174B6                     	endif
 16819  0174B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16820  0174B6  0E00               	movlw	low (__mediumconst shr (0+16))
 16821  0174B8  6EF8               	movwf	tblptru,c
 16822  0174BA                     	endif
 16823  0174BA  0008               	tblrd		*
 16824  0174BC  50F5               	movf	tablat,w,c
 16825  0174BE  0900               	iorlw	0
 16826  0174C0  A4D8               	btfss	status,2,c
 16827  0174C2  D002               	goto	l11676
 16828                           
 16829                           ; BSR set to: 1
 16830                           ;MISC.c: 122: {
 16831                           ;MISC.c: 123: return 1;
 16832  0174C4  0E01               	movlw	1
 16833  0174C6  0012               	return	
 16834  0174C8                     l11676:
 16835                           
 16836                           ; BSR set to: 1
 16837                           ;MISC.c: 125: else
 16838                           ;MISC.c: 126: {
 16839                           ;MISC.c: 127: return 0;
 16840  0174C8  0E00               	movlw	0
 16841  0174CA  0012               	return	
 16842  0174CC                     __end_of_StringMatch:
 16843                           	opt stack 0
 16844                           tblptru	equ	0xFF8
 16845                           tblptrh	equ	0xFF7
 16846                           tblptrl	equ	0xFF6
 16847                           tablat	equ	0xFF5
 16848                           prodh	equ	0xFF4
 16849                           prodl	equ	0xFF3
 16850                           intcon	equ	0xFF2
 16851                           postinc0	equ	0xFEE
 16852                           wreg	equ	0xFE8
 16853                           postinc1	equ	0xFE6
 16854                           postdec1	equ	0xFE5
 16855                           fsr1l	equ	0xFE1
 16856                           indf2	equ	0xFDF
 16857                           postinc2	equ	0xFDE
 16858                           fsr2h	equ	0xFDA
 16859                           fsr2l	equ	0xFD9
 16860                           status	equ	0xFD8
 16861                           
 16862 ;; *************** function _StringContains *****************
 16863 ;; Defined at:
 16864 ;;		line 137 in file "MISC.c"
 16865 ;; Parameters:    Size  Location     Type
 16866 ;;  This            2   14[BANK1 ] PTR unsigned char 
 16867 ;;		 -> Rxdata(100), 
 16868 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 16869 ;;		 -> STR_314(2), STR_313(14), STR_312(7), STR_310(13), 
 16870 ;;		 -> STR_309(12), STR_308(18), STR_307(17), STR_306(16), 
 16871 ;;		 -> STR_305(2), STR_304(11), STR_303(8), STR_302(8), 
 16872 ;;		 -> STR_301(16), STR_254(2), STR_230(4), STR_223(5), 
 16873 ;;		 -> STR_220(8), STR_219(2), STR_199(2), STR_198(2), 
 16874 ;;		 -> STR_182(2), STR_181(2), STR_162(2), STR_159(2), 
 16875 ;;		 -> STR_143(5), STR_142(6), STR_139(4), STR_138(6), 
 16876 ;;		 -> STR_135(2), STR_134(6), STR_133(2), STR_132(10), 
 16877 ;;		 -> STR_131(6), STR_130(6), STR_98(4), STR_97(6), 
 16878 ;;		 -> STR_96(2), STR_71(2), STR_39(2), 
 16879 ;; Auto vars:     Size  Location     Type
 16880 ;;		None
 16881 ;; Return value:  Size  Location     Type
 16882 ;;                  1    wreg      unsigned char 
 16883 ;; Registers used:
 16884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16885 ;; Tracked objects:
 16886 ;;		On entry : 0/0
 16887 ;;		On exit  : 0/0
 16888 ;;		Unchanged: 0/0
 16889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16890 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 16891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16892 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 16893 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 16894 ;;Total ram usage:        5 bytes
 16895 ;; Hardware stack levels used:    1
 16896 ;; Hardware stack levels required when called:    6
 16897 ;; This function calls:
 16898 ;;		Nothing
 16899 ;; This function is called by:
 16900 ;;		_Command
 16901 ;; This function uses a non-reentrant model
 16902 ;;
 16903                           
 16904                           	psect	text20
 16905  0173D2                     __ptext20:
 16906                           	opt stack 0
 16907  0173D2                     _StringContains:
 16908                           	opt stack 22
 16909                           
 16910                           ;MISC.c: 139: while(*This != 0)
 16911                           
 16912                           ; BSR set to: 1
 16913                           ;incstack = 0
 16914  0173D2  D035               	goto	l11700
 16915  0173D4                     l11682:
 16916                           
 16917                           ;MISC.c: 142: {
 16918                           ;MISC.c: 143: That++;
 16919  0173D4  0101               	movlb	1	; () banked
 16920  0173D6  4B7E               	infsnz	StringContains@That& (0+255),f,b
 16921  0173D8  2B7F               	incf	(StringContains@That+1)& (0+255),f,b
 16922                           
 16923                           ;MISC.c: 144: This++;
 16924  0173DA  0101               	movlb	1	; () banked
 16925  0173DC  4B7C               	infsnz	StringContains@This& (0+255),f,b
 16926  0173DE  2B7D               	incf	(StringContains@This+1)& (0+255),f,b
 16927                           
 16928                           ; BSR set to: 1
 16929                           ;MISC.c: 145: if(*That == 0)
 16930  0173E0  0101               	movlb	1	; () banked
 16931  0173E2  C17E  FFF6         	movff	StringContains@That,tblptrl
 16932  0173E6  0101               	movlb	1	; () banked
 16933  0173E8  C17F  FFF7         	movff	StringContains@That+1,tblptrh
 16934  0173EC                     	if	0	;tblptru may be non-zero
 16935  0173EC                     	endif
 16936  0173EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16937  0173EC  0E00               	movlw	low (__mediumconst shr (0+16))
 16938  0173EE  6EF8               	movwf	tblptru,c
 16939  0173F0                     	endif
 16940  0173F0  0008               	tblrd		*
 16941  0173F2  50F5               	movf	tablat,w,c
 16942  0173F4  0900               	iorlw	0
 16943  0173F6  A4D8               	btfss	status,2,c
 16944  0173F8  D002               	goto	l11690
 16945                           
 16946                           ; BSR set to: 1
 16947                           ;MISC.c: 146: {
 16948                           ;MISC.c: 147: return 1;
 16949  0173FA  0E01               	movlw	1
 16950  0173FC  0012               	return	
 16951  0173FE                     l11690:
 16952                           
 16953                           ; BSR set to: 1
 16954                           ;MISC.c: 148: }
 16955                           ;MISC.c: 149: if(*This == 0)
 16956  0173FE  C17C  FFD9         	movff	StringContains@This,fsr2l
 16957  017402  C17D  FFDA         	movff	StringContains@This+1,fsr2h
 16958  017406  50DF               	movf	indf2,w,c
 16959  017408  A4D8               	btfss	status,2,c
 16960  01740A  D002               	goto	l11696
 16961                           
 16962                           ; BSR set to: 1
 16963                           ;MISC.c: 150: {
 16964                           ;MISC.c: 151: return 0;
 16965  01740C  0E00               	movlw	0
 16966  01740E  0012               	return	
 16967  017410                     l11696:
 16968  017410  0101               	movlb	1	; () banked
 16969  017412  C17E  FFF6         	movff	StringContains@That,tblptrl
 16970  017416  0101               	movlb	1	; () banked
 16971  017418  C17F  FFF7         	movff	StringContains@That+1,tblptrh
 16972  01741C                     	if	0	;tblptru may be non-zero
 16973  01741C                     	endif
 16974  01741C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 16975  01741C  0E00               	movlw	low (__mediumconst shr (0+16))
 16976  01741E  6EF8               	movwf	tblptru,c
 16977  017420                     	endif
 16978  017420  0008               	tblrd		*
 16979  017422  CFF5 F180          	movff	tablat,??_StringContains
 16980  017426  C17C  FFD9         	movff	StringContains@This,fsr2l
 16981  01742A  C17D  FFDA         	movff	StringContains@This+1,fsr2h
 16982  01742E  50DF               	movf	indf2,w,c
 16983  017430  0101               	movlb	1	; () banked
 16984  017432  1980               	xorwf	??_StringContains& (0+255),w,b
 16985  017434  B4D8               	btfsc	status,2,c
 16986  017436  D7CE               	goto	l11682
 16987                           
 16988                           ; BSR set to: 1
 16989                           ;MISC.c: 152: }
 16990                           ;MISC.c: 153: }
 16991                           ;MISC.c: 154: This++;
 16992                           
 16993                           ; BSR set to: 1
 16994  017438  0101               	movlb	1	; () banked
 16995  01743A  4B7C               	infsnz	StringContains@This& (0+255),f,b
 16996  01743C  2B7D               	incf	(StringContains@This+1)& (0+255),f,b
 16997  01743E                     l11700:
 16998  01743E  C17C  FFD9         	movff	StringContains@This,fsr2l
 16999  017442  C17D  FFDA         	movff	StringContains@This+1,fsr2h
 17000  017446  50DF               	movf	indf2,w,c
 17001  017448  A4D8               	btfss	status,2,c
 17002  01744A  D7E2               	goto	l11696
 17003                           
 17004                           ;MISC.c: 155: }
 17005                           ;MISC.c: 156: return 0;
 17006  01744C  0E00               	movlw	0
 17007  01744E  0012               	return	
 17008  017450                     __end_of_StringContains:
 17009                           	opt stack 0
 17010                           tblptru	equ	0xFF8
 17011                           tblptrh	equ	0xFF7
 17012                           tblptrl	equ	0xFF6
 17013                           tablat	equ	0xFF5
 17014                           prodh	equ	0xFF4
 17015                           prodl	equ	0xFF3
 17016                           intcon	equ	0xFF2
 17017                           postinc0	equ	0xFEE
 17018                           wreg	equ	0xFE8
 17019                           postinc1	equ	0xFE6
 17020                           postdec1	equ	0xFE5
 17021                           fsr1l	equ	0xFE1
 17022                           indf2	equ	0xFDF
 17023                           postinc2	equ	0xFDE
 17024                           fsr2h	equ	0xFDA
 17025                           fsr2l	equ	0xFD9
 17026                           status	equ	0xFD8
 17027                           
 17028 ;; *************** function _StringAddEqual *****************
 17029 ;; Defined at:
 17030 ;;		line 299 in file "MISC.c"
 17031 ;; Parameters:    Size  Location     Type
 17032 ;;  Input           2   29[BANK1 ] PTR unsigned char 
 17033 ;;		 -> Rxdata(100), 
 17034 ;; Auto vars:     Size  Location     Type
 17035 ;;  temp          100    0[BANK2 ] unsigned char [100]
 17036 ;;  j               1  102[BANK2 ] unsigned char 
 17037 ;;  i               1  101[BANK2 ] unsigned char 
 17038 ;;  firstnumber     1  100[BANK2 ] unsigned char 
 17039 ;; Return value:  Size  Location     Type
 17040 ;;                  1    wreg      unsigned char 
 17041 ;; Registers used:
 17042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17043 ;; Tracked objects:
 17044 ;;		On entry : 0/0
 17045 ;;		On exit  : 0/0
 17046 ;;		Unchanged: 0/0
 17047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17048 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17049 ;;      Locals:         0       0       0     103       0       0       0       0       0       0       0       0       
      +0       0
 17050 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 17051 ;;      Totals:         0       0       4     103       0       0       0       0       0       0       0       0       
      +0       0
 17052 ;;Total ram usage:      107 bytes
 17053 ;; Hardware stack levels used:    1
 17054 ;; Hardware stack levels required when called:    8
 17055 ;; This function calls:
 17056 ;;		_BufferCopy
 17057 ;;		_cleanBuffer
 17058 ;; This function is called by:
 17059 ;;		_Command
 17060 ;; This function uses a non-reentrant model
 17061 ;;
 17062                           
 17063                           	psect	text21
 17064  014FAC                     __ptext21:
 17065                           	opt stack 0
 17066  014FAC                     _StringAddEqual:
 17067                           	opt stack 20
 17068                           
 17069                           ;MISC.c: 301: unsigned char i =0;
 17070                           
 17071                           ;incstack = 0
 17072  014FAC  0E00               	movlw	0
 17073  014FAE  0102               	movlb	2	; () banked
 17074  014FB0  6F65               	movwf	StringAddEqual@i& (0+255),b
 17075                           
 17076                           ;MISC.c: 302: unsigned char j =0;
 17077  014FB2  0E00               	movlw	0
 17078  014FB4  0102               	movlb	2	; () banked
 17079  014FB6  6F66               	movwf	StringAddEqual@j& (0+255),b
 17080                           
 17081                           ;MISC.c: 303: unsigned char firstnumber =200;
 17082  014FB8  0EC8               	movlw	200
 17083  014FBA  0102               	movlb	2	; () banked
 17084  014FBC  6F64               	movwf	StringAddEqual@firstnumber& (0+255),b
 17085                           
 17086                           ; BSR set to: 2
 17087                           ;MISC.c: 304: unsigned char temp[100];
 17088                           ;MISC.c: 305: cleanBuffer(temp,100);
 17089  014FBE  0102               	movlb	2	; () banked
 17090  014FC0  0E02               	movlw	high StringAddEqual@temp
 17091  014FC2  0101               	movlb	1	; () banked
 17092  014FC4  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 17093  014FC6  0102               	movlb	2	; () banked
 17094  014FC8  0E00               	movlw	low StringAddEqual@temp
 17095  014FCA  0101               	movlb	1	; () banked
 17096  014FCC  6F7C               	movwf	cleanBuffer@data& (0+255),b
 17097  014FCE  0E00               	movlw	0
 17098  014FD0  0101               	movlb	1	; () banked
 17099  014FD2  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 17100  014FD4  0E64               	movlw	100
 17101  014FD6  0101               	movlb	1	; () banked
 17102  014FD8  6F7E               	movwf	cleanBuffer@count& (0+255),b
 17103  014FDA  ECE4  F0BC         	call	_cleanBuffer	;wreg free
 17104                           
 17105                           ;MISC.c: 306: while(Input[i] != 0)
 17106  014FDE  D02F               	goto	l11850
 17107  014FE0                     l11842:
 17108                           
 17109                           ;MISC.c: 307: {
 17110                           ;MISC.c: 308: if((Input[i] >= 48) && (Input[i] <= 57) || (Input[i] == '-'))
 17111  014FE0  0102               	movlb	2	; () banked
 17112  014FE2  5165               	movf	StringAddEqual@i& (0+255),w,b
 17113  014FE4  0D01               	mullw	1
 17114  014FE6  50F3               	movf	prodl,w,c
 17115  014FE8  0101               	movlb	1	; () banked
 17116  014FEA  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17117  014FEC  6ED9               	movwf	fsr2l,c
 17118  014FEE  50F4               	movf	prodh,w,c
 17119  014FF0  0101               	movlb	1	; () banked
 17120  014FF2  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17121  014FF4  6EDA               	movwf	fsr2h,c
 17122  014FF6  0E2F               	movlw	47
 17123  014FF8  64DF               	cpfsgt	indf2,c
 17124  014FFA  D00E               	goto	l11846
 17125                           
 17126                           ; BSR set to: 1
 17127  014FFC  0102               	movlb	2	; () banked
 17128  014FFE  5165               	movf	StringAddEqual@i& (0+255),w,b
 17129  015000  0D01               	mullw	1
 17130  015002  50F3               	movf	prodl,w,c
 17131  015004  0101               	movlb	1	; () banked
 17132  015006  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17133  015008  6ED9               	movwf	fsr2l,c
 17134  01500A  50F4               	movf	prodh,w,c
 17135  01500C  0101               	movlb	1	; () banked
 17136  01500E  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17137  015010  6EDA               	movwf	fsr2h,c
 17138  015012  0E39               	movlw	57
 17139  015014  64DF               	cpfsgt	indf2,c
 17140  015016  D00E               	goto	l334
 17141  015018                     l11846:
 17142                           
 17143                           ; BSR set to: 1
 17144  015018  0102               	movlb	2	; () banked
 17145  01501A  5165               	movf	StringAddEqual@i& (0+255),w,b
 17146  01501C  0D01               	mullw	1
 17147  01501E  50F3               	movf	prodl,w,c
 17148  015020  0101               	movlb	1	; () banked
 17149  015022  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17150  015024  6ED9               	movwf	fsr2l,c
 17151  015026  50F4               	movf	prodh,w,c
 17152  015028  0101               	movlb	1	; () banked
 17153  01502A  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17154  01502C  6EDA               	movwf	fsr2h,c
 17155  01502E  0E2D               	movlw	45
 17156  015030  62DF               	cpfseq	indf2,c
 17157  015032  D003               	goto	l11848
 17158  015034                     l334:
 17159                           
 17160                           ; BSR set to: 1
 17161                           ;MISC.c: 309: {
 17162                           ;MISC.c: 310: firstnumber=i;
 17163  015034  C265  F264         	movff	StringAddEqual@i,StringAddEqual@firstnumber
 17164                           
 17165                           ;MISC.c: 311: break;
 17166  015038  D010               	goto	l11852
 17167  01503A                     l11848:
 17168                           
 17169                           ; BSR set to: 1
 17170                           ;MISC.c: 312: }
 17171                           ;MISC.c: 313: i++;
 17172  01503A  0102               	movlb	2	; () banked
 17173  01503C  2B65               	incf	StringAddEqual@i& (0+255),f,b
 17174  01503E                     l11850:
 17175  01503E  0102               	movlb	2	; () banked
 17176  015040  5165               	movf	StringAddEqual@i& (0+255),w,b
 17177  015042  0D01               	mullw	1
 17178  015044  50F3               	movf	prodl,w,c
 17179  015046  0101               	movlb	1	; () banked
 17180  015048  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17181  01504A  6ED9               	movwf	fsr2l,c
 17182  01504C  50F4               	movf	prodh,w,c
 17183  01504E  0101               	movlb	1	; () banked
 17184  015050  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17185  015052  6EDA               	movwf	fsr2h,c
 17186  015054  50DF               	movf	indf2,w,c
 17187  015056  A4D8               	btfss	status,2,c
 17188  015058  D7C3               	goto	l11842
 17189  01505A                     l11852:
 17190                           
 17191                           ; BSR set to: 1
 17192                           ;MISC.c: 314: }
 17193                           ;MISC.c: 315: if(firstnumber ==200)
 17194  01505A  0102               	movlb	2	; () banked
 17195  01505C  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 17196  01505E  0AC8               	xorlw	200
 17197  015060  B4D8               	btfsc	status,2,c
 17198  015062  0012               	return	
 17199                           
 17200                           ; BSR set to: 2
 17201                           ;MISC.c: 318: }
 17202                           ;MISC.c: 319: for(j=0;j<firstnumber;j++)
 17203                           
 17204                           ; BSR set to: 2
 17205                           
 17206                           ; BSR set to: 2
 17207                           ;MISC.c: 316: {
 17208                           ;MISC.c: 317: return 0;
 17209                           ;	Return value of _StringAddEqual is never used
 17210  015064  0E00               	movlw	0
 17211  015066  0102               	movlb	2	; () banked
 17212  015068  6F66               	movwf	StringAddEqual@j& (0+255),b
 17213  01506A  D01A               	goto	l11862
 17214  01506C                     l11858:
 17215                           
 17216                           ; BSR set to: 2
 17217                           ;MISC.c: 320: {
 17218                           ;MISC.c: 321: temp[j] = Input[j];
 17219  01506C  0102               	movlb	2	; () banked
 17220  01506E  5166               	movf	StringAddEqual@j& (0+255),w,b
 17221  015070  0D01               	mullw	1
 17222  015072  50F3               	movf	prodl,w,c
 17223  015074  0101               	movlb	1	; () banked
 17224  015076  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17225  015078  6ED9               	movwf	fsr2l,c
 17226  01507A  50F4               	movf	prodh,w,c
 17227  01507C  0101               	movlb	1	; () banked
 17228  01507E  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17229  015080  6EDA               	movwf	fsr2h,c
 17230  015082  0102               	movlb	2	; () banked
 17231  015084  5166               	movf	StringAddEqual@j& (0+255),w,b
 17232  015086  0D01               	mullw	1
 17233  015088  0102               	movlb	2	; () banked
 17234  01508A  0E00               	movlw	low StringAddEqual@temp
 17235  01508C  24F3               	addwf	prodl,w,c
 17236  01508E  6EE1               	movwf	fsr1l,c
 17237  015090  0102               	movlb	2	; () banked
 17238  015092  0E02               	movlw	high StringAddEqual@temp
 17239  015094  20F4               	addwfc	prodh,w,c
 17240  015096  6EE2               	movwf	fsr1h,c
 17241  015098  CFDF FFE7          	movff	indf2,indf1
 17242                           
 17243                           ; BSR set to: 2
 17244  01509C  0102               	movlb	2	; () banked
 17245  01509E  2B66               	incf	StringAddEqual@j& (0+255),f,b
 17246  0150A0                     l11862:
 17247                           
 17248                           ; BSR set to: 2
 17249  0150A0  0102               	movlb	2	; () banked
 17250  0150A2  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 17251  0150A4  0102               	movlb	2	; () banked
 17252  0150A6  5D66               	subwf	StringAddEqual@j& (0+255),w,b
 17253  0150A8  A0D8               	btfss	status,0,c
 17254  0150AA  D7E0               	goto	l11858
 17255                           
 17256                           ; BSR set to: 2
 17257                           ;MISC.c: 322: }
 17258                           ;MISC.c: 323: temp[firstnumber] = '=';
 17259                           
 17260                           ; BSR set to: 2
 17261  0150AC  0102               	movlb	2	; () banked
 17262  0150AE  5164               	movf	StringAddEqual@firstnumber& (0+255),w,b
 17263  0150B0  0D01               	mullw	1
 17264  0150B2  0102               	movlb	2	; () banked
 17265  0150B4  0E00               	movlw	low StringAddEqual@temp
 17266  0150B6  24F3               	addwf	prodl,w,c
 17267  0150B8  6ED9               	movwf	fsr2l,c
 17268  0150BA  0102               	movlb	2	; () banked
 17269  0150BC  0E02               	movlw	high StringAddEqual@temp
 17270  0150BE  20F4               	addwfc	prodh,w,c
 17271  0150C0  6EDA               	movwf	fsr2h,c
 17272  0150C2  0E3D               	movlw	61
 17273  0150C4  6EDF               	movwf	indf2,c
 17274                           
 17275                           ; BSR set to: 2
 17276                           ;MISC.c: 324: for(j = (firstnumber);j<99;j++)
 17277  0150C6  C264  F266         	movff	StringAddEqual@firstnumber,StringAddEqual@j
 17278  0150CA  D031               	goto	L17
 17279  0150CC                     l11872:
 17280                           
 17281                           ; BSR set to: 2
 17282                           ;MISC.c: 325: {
 17283                           ;MISC.c: 326: temp[j+1] = Input[j];
 17284  0150CC  0102               	movlb	2	; () banked
 17285  0150CE  5166               	movf	StringAddEqual@j& (0+255),w,b
 17286  0150D0  0D01               	mullw	1
 17287  0150D2  50F3               	movf	prodl,w,c
 17288  0150D4  0101               	movlb	1	; () banked
 17289  0150D6  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17290  0150D8  6ED9               	movwf	fsr2l,c
 17291  0150DA  50F4               	movf	prodh,w,c
 17292  0150DC  0101               	movlb	1	; () banked
 17293  0150DE  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17294  0150E0  6EDA               	movwf	fsr2h,c
 17295  0150E2  0102               	movlb	2	; () banked
 17296  0150E4  5166               	movf	StringAddEqual@j& (0+255),w,b
 17297  0150E6  0101               	movlb	1	; () banked
 17298  0150E8  6F8D               	movwf	??_StringAddEqual& (0+255),b
 17299  0150EA  6B8E               	clrf	(??_StringAddEqual+1)& (0+255),b
 17300  0150EC  0E01               	movlw	1
 17301  0150EE  0101               	movlb	1	; () banked
 17302  0150F0  278D               	addwf	??_StringAddEqual& (0+255),f,b
 17303  0150F2  0E00               	movlw	0
 17304  0150F4  238E               	addwfc	(??_StringAddEqual+1)& (0+255),f,b
 17305  0150F6  0102               	movlb	2	; () banked
 17306  0150F8  0E00               	movlw	low StringAddEqual@temp
 17307  0150FA  0101               	movlb	1	; () banked
 17308  0150FC  258D               	addwf	??_StringAddEqual& (0+255),w,b
 17309  0150FE  6EE1               	movwf	fsr1l,c
 17310  015100  0102               	movlb	2	; () banked
 17311  015102  0E02               	movlw	high StringAddEqual@temp
 17312  015104  0101               	movlb	1	; () banked
 17313  015106  218E               	addwfc	(??_StringAddEqual+1)& (0+255),w,b
 17314  015108  6EE2               	movwf	fsr1h,c
 17315  01510A  CFDF FFE7          	movff	indf2,indf1
 17316                           
 17317                           ; BSR set to: 1
 17318                           ;MISC.c: 327: if(Input[j] ==0)
 17319  01510E  0102               	movlb	2	; () banked
 17320  015110  5166               	movf	StringAddEqual@j& (0+255),w,b
 17321  015112  0D01               	mullw	1
 17322  015114  50F3               	movf	prodl,w,c
 17323  015116  0101               	movlb	1	; () banked
 17324  015118  258B               	addwf	StringAddEqual@Input& (0+255),w,b
 17325  01511A  6ED9               	movwf	fsr2l,c
 17326  01511C  50F4               	movf	prodh,w,c
 17327  01511E  0101               	movlb	1	; () banked
 17328  015120  218C               	addwfc	(StringAddEqual@Input+1)& (0+255),w,b
 17329  015122  6EDA               	movwf	fsr2h,c
 17330  015124  50DF               	movf	indf2,w,c
 17331  015126  B4D8               	btfsc	status,2,c
 17332  015128  D006               	goto	l11882
 17333                           
 17334                           ; BSR set to: 1
 17335                           
 17336                           ; BSR set to: 1
 17337                           
 17338                           ; BSR set to: 1
 17339                           ;MISC.c: 328: {
 17340                           ;MISC.c: 329: break;
 17341  01512A  0102               	movlb	2	; () banked
 17342  01512C  2B66               	incf	StringAddEqual@j& (0+255),f,b
 17343  01512E                     L17:
 17344                           
 17345                           ; BSR set to: 2
 17346  01512E  0E62               	movlw	98
 17347  015130  0102               	movlb	2	; () banked
 17348  015132  6566               	cpfsgt	StringAddEqual@j& (0+255),b
 17349  015134  D7CB               	goto	l11872
 17350  015136                     l11882:
 17351                           
 17352                           ;MISC.c: 330: }
 17353                           ;MISC.c: 331: }
 17354                           ;MISC.c: 332: BufferCopy(temp,Input,100, 0);
 17355  015136  0102               	movlb	2	; () banked
 17356  015138  0E02               	movlw	high StringAddEqual@temp
 17357  01513A  0101               	movlb	1	; () banked
 17358  01513C  6F85               	movwf	(BufferCopy@from+1)& (0+255),b
 17359  01513E  0102               	movlb	2	; () banked
 17360  015140  0E00               	movlw	low StringAddEqual@temp
 17361  015142  0101               	movlb	1	; () banked
 17362  015144  6F84               	movwf	BufferCopy@from& (0+255),b
 17363  015146  0101               	movlb	1	; () banked
 17364  015148  C18C  F187         	movff	StringAddEqual@Input+1,BufferCopy@to+1
 17365  01514C  0101               	movlb	1	; () banked
 17366  01514E  C18B  F186         	movff	StringAddEqual@Input,BufferCopy@to
 17367  015152  0E64               	movlw	100
 17368  015154  0101               	movlb	1	; () banked
 17369  015156  6F88               	movwf	BufferCopy@count& (0+255),b
 17370  015158  0E00               	movlw	0
 17371  01515A  0101               	movlb	1	; () banked
 17372  01515C  6F89               	movwf	BufferCopy@shift& (0+255),b
 17373  01515E  ECC2  F0B3         	call	_BufferCopy	;wreg free
 17374  015162  0012               	return	
 17375  015164                     __end_of_StringAddEqual:
 17376                           	opt stack 0
 17377                           tblptru	equ	0xFF8
 17378                           tblptrh	equ	0xFF7
 17379                           tblptrl	equ	0xFF6
 17380                           tablat	equ	0xFF5
 17381                           prodh	equ	0xFF4
 17382                           prodl	equ	0xFF3
 17383                           intcon	equ	0xFF2
 17384                           postinc0	equ	0xFEE
 17385                           wreg	equ	0xFE8
 17386                           indf1	equ	0xFE7
 17387                           postinc1	equ	0xFE6
 17388                           postdec1	equ	0xFE5
 17389                           fsr1h	equ	0xFE2
 17390                           fsr1l	equ	0xFE1
 17391                           indf2	equ	0xFDF
 17392                           postinc2	equ	0xFDE
 17393                           fsr2h	equ	0xFDA
 17394                           fsr2l	equ	0xFD9
 17395                           status	equ	0xFD8
 17396                           
 17397 ;; *************** function _StartsWith *****************
 17398 ;; Defined at:
 17399 ;;		line 165 in file "MISC.c"
 17400 ;; Parameters:    Size  Location     Type
 17401 ;;  This            2   14[BANK1 ] PTR unsigned char 
 17402 ;;		 -> Rxdata(100), 
 17403 ;;  That            2   16[BANK1 ] PTR const unsigned char 
 17404 ;;		 -> STR_253(4), STR_218(4), STR_197(4), STR_180(9), 
 17405 ;;		 -> STR_161(17), STR_160(7), STR_158(4), STR_95(8), 
 17406 ;;		 -> STR_70(11), STR_38(4), 
 17407 ;; Auto vars:     Size  Location     Type
 17408 ;;		None
 17409 ;; Return value:  Size  Location     Type
 17410 ;;                  1    wreg      unsigned char 
 17411 ;; Registers used:
 17412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17413 ;; Tracked objects:
 17414 ;;		On entry : 0/0
 17415 ;;		On exit  : 0/0
 17416 ;;		Unchanged: 0/0
 17417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17418 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17420 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 17421 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 17422 ;;Total ram usage:        5 bytes
 17423 ;; Hardware stack levels used:    1
 17424 ;; Hardware stack levels required when called:    6
 17425 ;; This function calls:
 17426 ;;		Nothing
 17427 ;; This function is called by:
 17428 ;;		_Command
 17429 ;; This function uses a non-reentrant model
 17430 ;;
 17431                           
 17432                           	psect	text22
 17433  016CC8                     __ptext22:
 17434                           	opt stack 0
 17435  016CC8                     _StartsWith:
 17436                           	opt stack 22
 17437                           
 17438                           ;MISC.c: 167: while(*This != 0)
 17439                           
 17440                           ;incstack = 0
 17441  016CC8  D02B               	goto	l11724
 17442  016CCA                     l11708:
 17443                           
 17444                           ;MISC.c: 168: {
 17445                           ;MISC.c: 169: if(*This != *That)
 17446  016CCA  0101               	movlb	1	; () banked
 17447  016CCC  C17E  FFF6         	movff	StartsWith@That,tblptrl
 17448  016CD0  0101               	movlb	1	; () banked
 17449  016CD2  C17F  FFF7         	movff	StartsWith@That+1,tblptrh
 17450  016CD6                     	if	0	;tblptru may be non-zero
 17451  016CD6                     	endif
 17452  016CD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17453  016CD6  0E00               	movlw	low (__mediumconst shr (0+16))
 17454  016CD8  6EF8               	movwf	tblptru,c
 17455  016CDA                     	endif
 17456  016CDA  0008               	tblrd		*
 17457  016CDC  CFF5 F180          	movff	tablat,??_StartsWith
 17458  016CE0  C17C  FFD9         	movff	StartsWith@This,fsr2l
 17459  016CE4  C17D  FFDA         	movff	StartsWith@This+1,fsr2h
 17460  016CE8  50DF               	movf	indf2,w,c
 17461  016CEA  0101               	movlb	1	; () banked
 17462  016CEC  1980               	xorwf	??_StartsWith& (0+255),w,b
 17463  016CEE  B4D8               	btfsc	status,2,c
 17464  016CF0  D011               	goto	l11722
 17465                           
 17466                           ; BSR set to: 1
 17467                           ;MISC.c: 170: {
 17468                           ;MISC.c: 171: if(*That != 0)
 17469  016CF2  0101               	movlb	1	; () banked
 17470  016CF4  C17E  FFF6         	movff	StartsWith@That,tblptrl
 17471  016CF8  0101               	movlb	1	; () banked
 17472  016CFA  C17F  FFF7         	movff	StartsWith@That+1,tblptrh
 17473  016CFE                     	if	0	;tblptru may be non-zero
 17474  016CFE                     	endif
 17475  016CFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17476  016CFE  0E00               	movlw	low (__mediumconst shr (0+16))
 17477  016D00  6EF8               	movwf	tblptru,c
 17478  016D02                     	endif
 17479  016D02  0008               	tblrd		*
 17480  016D04  50F5               	movf	tablat,w,c
 17481  016D06  0900               	iorlw	0
 17482  016D08  B4D8               	btfsc	status,2,c
 17483  016D0A  D002               	goto	l11718
 17484                           
 17485                           ; BSR set to: 1
 17486                           ;MISC.c: 172: {
 17487                           ;MISC.c: 173: return 0;
 17488  016D0C  0E00               	movlw	0
 17489  016D0E  0012               	return	
 17490  016D10                     l11718:
 17491                           
 17492                           ; BSR set to: 1
 17493                           ;MISC.c: 175: else
 17494                           ;MISC.c: 176: {
 17495                           ;MISC.c: 177: return 1;
 17496  016D10  0E01               	movlw	1
 17497  016D12  0012               	return	
 17498  016D14                     l11722:
 17499                           
 17500                           ; BSR set to: 1
 17501                           ;MISC.c: 178: }
 17502                           ;MISC.c: 179: }
 17503                           ;MISC.c: 180: This++;
 17504  016D14  0101               	movlb	1	; () banked
 17505  016D16  4B7C               	infsnz	StartsWith@This& (0+255),f,b
 17506  016D18  2B7D               	incf	(StartsWith@This+1)& (0+255),f,b
 17507                           
 17508                           ;MISC.c: 181: That++;
 17509  016D1A  0101               	movlb	1	; () banked
 17510  016D1C  4B7E               	infsnz	StartsWith@That& (0+255),f,b
 17511  016D1E  2B7F               	incf	(StartsWith@That+1)& (0+255),f,b
 17512  016D20                     l11724:
 17513  016D20  C17C  FFD9         	movff	StartsWith@This,fsr2l
 17514  016D24  C17D  FFDA         	movff	StartsWith@This+1,fsr2h
 17515  016D28  50DF               	movf	indf2,w,c
 17516  016D2A  A4D8               	btfss	status,2,c
 17517  016D2C  D7CE               	goto	l11708
 17518                           
 17519                           ;MISC.c: 182: }
 17520                           ;MISC.c: 183: if(*This == 0 && *That == 0)
 17521  016D2E  C17C  FFD9         	movff	StartsWith@This,fsr2l
 17522  016D32  C17D  FFDA         	movff	StartsWith@This+1,fsr2h
 17523  016D36  50DF               	movf	indf2,w,c
 17524  016D38  A4D8               	btfss	status,2,c
 17525  016D3A  D00F               	goto	l11736
 17526  016D3C  0101               	movlb	1	; () banked
 17527  016D3E  C17E  FFF6         	movff	StartsWith@That,tblptrl
 17528  016D42  0101               	movlb	1	; () banked
 17529  016D44  C17F  FFF7         	movff	StartsWith@That+1,tblptrh
 17530  016D48                     	if	0	;tblptru may be non-zero
 17531  016D48                     	endif
 17532  016D48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 17533  016D48  0E00               	movlw	low (__mediumconst shr (0+16))
 17534  016D4A  6EF8               	movwf	tblptru,c
 17535  016D4C                     	endif
 17536  016D4C  0008               	tblrd		*
 17537  016D4E  50F5               	movf	tablat,w,c
 17538  016D50  0900               	iorlw	0
 17539  016D52  A4D8               	btfss	status,2,c
 17540  016D54  D002               	goto	l11736
 17541                           
 17542                           ; BSR set to: 1
 17543                           ;MISC.c: 184: {
 17544                           ;MISC.c: 186: return 1;
 17545  016D56  0E01               	movlw	1
 17546  016D58  0012               	return	
 17547  016D5A                     l11736:
 17548                           
 17549                           ;MISC.c: 188: else
 17550                           ;MISC.c: 189: {
 17551                           ;MISC.c: 191: return 0;
 17552  016D5A  0E00               	movlw	0
 17553  016D5C  0012               	return	
 17554  016D5E                     __end_of_StartsWith:
 17555                           	opt stack 0
 17556                           tblptru	equ	0xFF8
 17557                           tblptrh	equ	0xFF7
 17558                           tblptrl	equ	0xFF6
 17559                           tablat	equ	0xFF5
 17560                           prodh	equ	0xFF4
 17561                           prodl	equ	0xFF3
 17562                           intcon	equ	0xFF2
 17563                           postinc0	equ	0xFEE
 17564                           wreg	equ	0xFE8
 17565                           indf1	equ	0xFE7
 17566                           postinc1	equ	0xFE6
 17567                           postdec1	equ	0xFE5
 17568                           fsr1h	equ	0xFE2
 17569                           fsr1l	equ	0xFE1
 17570                           indf2	equ	0xFDF
 17571                           postinc2	equ	0xFDE
 17572                           fsr2h	equ	0xFDA
 17573                           fsr2l	equ	0xFD9
 17574                           status	equ	0xFD8
 17575                           
 17576 ;; *************** function _SprintDate *****************
 17577 ;; Defined at:
 17578 ;;		line 254 in file "RTC.c"
 17579 ;; Parameters:    Size  Location     Type
 17580 ;;  ReturnBuf       2   78[BANK1 ] PTR unsigned char 
 17581 ;;		 -> Command@buf(200), 
 17582 ;;  DisplayTime     9   80[BANK1 ] struct TIME
 17583 ;;  Military        1   89[BANK1 ] unsigned char 
 17584 ;; Auto vars:     Size  Location     Type
 17585 ;;		None
 17586 ;; Return value:  Size  Location     Type
 17587 ;;		None               void
 17588 ;; Registers used:
 17589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17590 ;; Tracked objects:
 17591 ;;		On entry : 0/0
 17592 ;;		On exit  : 0/0
 17593 ;;		Unchanged: 0/0
 17594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17595 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 17596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17598 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 17599 ;;Total ram usage:       12 bytes
 17600 ;; Hardware stack levels used:    1
 17601 ;; Hardware stack levels required when called:    8
 17602 ;; This function calls:
 17603 ;;		_sprintf
 17604 ;; This function is called by:
 17605 ;;		_Command
 17606 ;; This function uses a non-reentrant model
 17607 ;;
 17608                           
 17609                           	psect	text23
 17610  015CBA                     __ptext23:
 17611                           	opt stack 0
 17612  015CBA                     _SprintDate:
 17613                           	opt stack 20
 17614                           
 17615                           ;RTC.c: 256: if(!Military)
 17616                           
 17617                           ;incstack = 0
 17618  015CBA  0101               	movlb	1	; () banked
 17619  015CBC  67C7               	tstfsz	SprintDate@Military& (0+255),b
 17620  015CBE  D05D               	goto	l12114
 17621                           
 17622                           ; BSR set to: 1
 17623                           ;RTC.c: 257: {
 17624                           ;RTC.c: 258: if(!DisplayTime.HoursAM_PM)
 17625  015CC0  0101               	movlb	1	; () banked
 17626  015CC2  67C2               	tstfsz	(SprintDate@DisplayTime+4)& (0+255),b
 17627  015CC4  D02D               	goto	l12112
 17628                           
 17629                           ; BSR set to: 1
 17630                           ;RTC.c: 259: {
 17631                           ;RTC.c: 260: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d AM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 17632  015CC6  0101               	movlb	1	; () banked
 17633  015CC8  C1BD  F193         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 17634  015CCC  0101               	movlb	1	; () banked
 17635  015CCE  C1BC  F192         	movff	SprintDate@ReturnBuf,sprintf@sp
 17636  015CD2  0EF3               	movlw	high STR_321
 17637  015CD4  0101               	movlb	1	; () banked
 17638  015CD6  6F95               	movwf	(sprintf@f+1)& (0+255),b
 17639  015CD8  0E14               	movlw	low STR_321
 17640  015CDA  0101               	movlb	1	; () banked
 17641  015CDC  6F94               	movwf	sprintf@f& (0+255),b
 17642  015CDE  0101               	movlb	1	; () banked
 17643  015CE0  C1C5  F196         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 17644  015CE4  0101               	movlb	1	; () banked
 17645  015CE6  6B97               	clrf	(?_sprintf+5)& (0+255),b
 17646  015CE8  0101               	movlb	1	; () banked
 17647  015CEA  C1C4  F198         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 17648  015CEE  0101               	movlb	1	; () banked
 17649  015CF0  6B99               	clrf	(?_sprintf+7)& (0+255),b
 17650  015CF2  0101               	movlb	1	; () banked
 17651  015CF4  C1C6  F19A         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 17652  015CF8  0101               	movlb	1	; () banked
 17653  015CFA  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 17654  015CFC  0101               	movlb	1	; () banked
 17655  015CFE  C1C0  F19C         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 17656  015D02  0101               	movlb	1	; () banked
 17657  015D04  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 17658  015D06  0101               	movlb	1	; () banked
 17659  015D08  C1BF  F19E         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 17660  015D0C  0101               	movlb	1	; () banked
 17661  015D0E  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 17662  015D10  0101               	movlb	1	; () banked
 17663  015D12  C1BE  F1A0         	movff	SprintDate@DisplayTime,?_sprintf+14
 17664  015D16  0101               	movlb	1	; () banked
 17665  015D18  6BA1               	clrf	(?_sprintf+15)& (0+255),b
 17666  015D1A  ECC4  F094         	call	_sprintf	;wreg free
 17667                           
 17668                           ;RTC.c: 261: }
 17669  015D1E  0012               	return	
 17670  015D20                     l12112:
 17671                           
 17672                           ;RTC.c: 262: else
 17673                           ;RTC.c: 263: {
 17674                           ;RTC.c: 264: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d PM", DisplayTime.Month, 
      +                          DisplayTime.Date, DisplayTime.Year, DisplayTime.Hours, DisplayTime.Minutes, DisplayTime.
      +                          Seconds);
 17675  015D20  0101               	movlb	1	; () banked
 17676  015D22  C1BD  F193         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 17677  015D26  0101               	movlb	1	; () banked
 17678  015D28  C1BC  F192         	movff	SprintDate@ReturnBuf,sprintf@sp
 17679  015D2C  0EF3               	movlw	high STR_322
 17680  015D2E  0101               	movlb	1	; () banked
 17681  015D30  6F95               	movwf	(sprintf@f+1)& (0+255),b
 17682  015D32  0E37               	movlw	low STR_322
 17683  015D34  0101               	movlb	1	; () banked
 17684  015D36  6F94               	movwf	sprintf@f& (0+255),b
 17685  015D38  0101               	movlb	1	; () banked
 17686  015D3A  C1C5  F196         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 17687  015D3E  0101               	movlb	1	; () banked
 17688  015D40  6B97               	clrf	(?_sprintf+5)& (0+255),b
 17689  015D42  0101               	movlb	1	; () banked
 17690  015D44  C1C4  F198         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 17691  015D48  0101               	movlb	1	; () banked
 17692  015D4A  6B99               	clrf	(?_sprintf+7)& (0+255),b
 17693  015D4C  0101               	movlb	1	; () banked
 17694  015D4E  C1C6  F19A         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 17695  015D52  0101               	movlb	1	; () banked
 17696  015D54  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 17697  015D56  0101               	movlb	1	; () banked
 17698  015D58  C1C0  F19C         	movff	SprintDate@DisplayTime+2,?_sprintf+10
 17699  015D5C  0101               	movlb	1	; () banked
 17700  015D5E  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 17701  015D60  0101               	movlb	1	; () banked
 17702  015D62  C1BF  F19E         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 17703  015D66  0101               	movlb	1	; () banked
 17704  015D68  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 17705  015D6A  0101               	movlb	1	; () banked
 17706  015D6C  C1BE  F1A0         	movff	SprintDate@DisplayTime,?_sprintf+14
 17707  015D70  0101               	movlb	1	; () banked
 17708  015D72  6BA1               	clrf	(?_sprintf+15)& (0+255),b
 17709  015D74  ECC4  F094         	call	_sprintf	;wreg free
 17710  015D78  0012               	return	
 17711  015D7A                     l12114:
 17712                           
 17713                           ;RTC.c: 267: else
 17714                           ;RTC.c: 268: {
 17715                           ;RTC.c: 269: sprintf(ReturnBuf,"%02d/%02d/20%02d %02d:%02d:%02d", DisplayTime.Month, Dis
      +                          playTime.Date, DisplayTime.Year, DisplayTime.HoursMilitary, DisplayTime.Minutes, Display
      +                          Time.Seconds);
 17716  015D7A  0101               	movlb	1	; () banked
 17717  015D7C  C1BD  F193         	movff	SprintDate@ReturnBuf+1,sprintf@sp+1
 17718  015D80  0101               	movlb	1	; () banked
 17719  015D82  C1BC  F192         	movff	SprintDate@ReturnBuf,sprintf@sp
 17720  015D86  0EF3               	movlw	high STR_323
 17721  015D88  0101               	movlb	1	; () banked
 17722  015D8A  6F95               	movwf	(sprintf@f+1)& (0+255),b
 17723  015D8C  0EDF               	movlw	low STR_323
 17724  015D8E  0101               	movlb	1	; () banked
 17725  015D90  6F94               	movwf	sprintf@f& (0+255),b
 17726  015D92  0101               	movlb	1	; () banked
 17727  015D94  C1C5  F196         	movff	SprintDate@DisplayTime+7,?_sprintf+4
 17728  015D98  0101               	movlb	1	; () banked
 17729  015D9A  6B97               	clrf	(?_sprintf+5)& (0+255),b
 17730  015D9C  0101               	movlb	1	; () banked
 17731  015D9E  C1C4  F198         	movff	SprintDate@DisplayTime+6,?_sprintf+6
 17732  015DA2  0101               	movlb	1	; () banked
 17733  015DA4  6B99               	clrf	(?_sprintf+7)& (0+255),b
 17734  015DA6  0101               	movlb	1	; () banked
 17735  015DA8  C1C6  F19A         	movff	SprintDate@DisplayTime+8,?_sprintf+8
 17736  015DAC  0101               	movlb	1	; () banked
 17737  015DAE  6B9B               	clrf	(?_sprintf+9)& (0+255),b
 17738  015DB0  0101               	movlb	1	; () banked
 17739  015DB2  C1C1  F19C         	movff	SprintDate@DisplayTime+3,?_sprintf+10
 17740  015DB6  0101               	movlb	1	; () banked
 17741  015DB8  6B9D               	clrf	(?_sprintf+11)& (0+255),b
 17742  015DBA  0101               	movlb	1	; () banked
 17743  015DBC  C1BF  F19E         	movff	SprintDate@DisplayTime+1,?_sprintf+12
 17744  015DC0  0101               	movlb	1	; () banked
 17745  015DC2  6B9F               	clrf	(?_sprintf+13)& (0+255),b
 17746  015DC4  0101               	movlb	1	; () banked
 17747  015DC6  C1BE  F1A0         	movff	SprintDate@DisplayTime,?_sprintf+14
 17748  015DCA  0101               	movlb	1	; () banked
 17749  015DCC  6BA1               	clrf	(?_sprintf+15)& (0+255),b
 17750  015DCE  ECC4  F094         	call	_sprintf	;wreg free
 17751  015DD2  0012               	return	
 17752  015DD4                     __end_of_SprintDate:
 17753                           	opt stack 0
 17754                           tblptru	equ	0xFF8
 17755                           tblptrh	equ	0xFF7
 17756                           tblptrl	equ	0xFF6
 17757                           tablat	equ	0xFF5
 17758                           prodh	equ	0xFF4
 17759                           prodl	equ	0xFF3
 17760                           intcon	equ	0xFF2
 17761                           postinc0	equ	0xFEE
 17762                           wreg	equ	0xFE8
 17763                           indf1	equ	0xFE7
 17764                           postinc1	equ	0xFE6
 17765                           postdec1	equ	0xFE5
 17766                           fsr1h	equ	0xFE2
 17767                           fsr1l	equ	0xFE1
 17768                           indf2	equ	0xFDF
 17769                           postinc2	equ	0xFDE
 17770                           fsr2h	equ	0xFDA
 17771                           fsr2l	equ	0xFD9
 17772                           status	equ	0xFD8
 17773                           
 17774 ;; *************** function _SetDuty *****************
 17775 ;; Defined at:
 17776 ;;		line 120 in file "PWM.c"
 17777 ;; Parameters:    Size  Location     Type
 17778 ;;  Duty            1    wreg     unsigned char 
 17779 ;; Auto vars:     Size  Location     Type
 17780 ;;  Duty            1   75[BANK1 ] unsigned char 
 17781 ;;  tempPR2         3   76[BANK1 ] float 
 17782 ;;  temp            2   81[BANK1 ] unsigned int 
 17783 ;;  LSB             1   80[BANK1 ] unsigned char 
 17784 ;;  MSB             1   79[BANK1 ] unsigned char 
 17785 ;; Return value:  Size  Location     Type
 17786 ;;		None               void
 17787 ;; Registers used:
 17788 ;;		wreg, status,2, status,0, cstack
 17789 ;; Tracked objects:
 17790 ;;		On entry : 0/0
 17791 ;;		On exit  : 0/0
 17792 ;;		Unchanged: 0/0
 17793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17795 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 17796 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17797 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 17798 ;;Total ram usage:       12 bytes
 17799 ;; Hardware stack levels used:    1
 17800 ;; Hardware stack levels required when called:    8
 17801 ;; This function calls:
 17802 ;;		___ftdiv
 17803 ;;		___ftmul
 17804 ;;		___fttol
 17805 ;;		___lbtoft
 17806 ;; This function is called by:
 17807 ;;		_main
 17808 ;;		_Command
 17809 ;;		_PWM_init
 17810 ;;		_ContrastPWM_init
 17811 ;; This function uses a non-reentrant model
 17812 ;;
 17813                           
 17814                           	psect	text24
 17815  0165EE                     __ptext24:
 17816                           	opt stack 0
 17817  0165EE                     _SetDuty:
 17818                           	opt stack 21
 17819                           
 17820                           ;incstack = 0
 17821                           ;SetDuty@Duty stored from wreg
 17822  0165EE  0101               	movlb	1	; () banked
 17823  0165F0  6FB9               	movwf	SetDuty@Duty& (0+255),b
 17824                           
 17825                           ; BSR set to: 1
 17826                           ;PWM.c: 122: unsigned int temp=0;
 17827  0165F2  0E00               	movlw	0
 17828  0165F4  0101               	movlb	1	; () banked
 17829  0165F6  6FC0               	movwf	(SetDuty@temp+1)& (0+255),b
 17830  0165F8  0E00               	movlw	0
 17831  0165FA  0101               	movlb	1	; () banked
 17832  0165FC  6FBF               	movwf	SetDuty@temp& (0+255),b
 17833                           
 17834                           ; BSR set to: 1
 17835                           ;PWM.c: 123: float tempPR2=0;
 17836  0165FE  0E00               	movlw	0
 17837  016600  0101               	movlb	1	; () banked
 17838  016602  6FBA               	movwf	SetDuty@tempPR2& (0+255),b
 17839  016604  0E00               	movlw	0
 17840  016606  0101               	movlb	1	; () banked
 17841  016608  6FBB               	movwf	(SetDuty@tempPR2+1)& (0+255),b
 17842  01660A  0E00               	movlw	0
 17843  01660C  0101               	movlb	1	; () banked
 17844  01660E  6FBC               	movwf	(SetDuty@tempPR2+2)& (0+255),b
 17845                           
 17846                           ; BSR set to: 1
 17847                           ;PWM.c: 124: unsigned char MSB,LSB;
 17848                           ;PWM.c: 126: tempPR2 = (float) PR2;
 17849  016610  50CB               	movf	4043,w,c	;volatile
 17850  016612  EC08  F002         	call	___lbtoft
 17851  016616  C184  F1BA         	movff	?___lbtoft,SetDuty@tempPR2
 17852  01661A  C185  F1BB         	movff	?___lbtoft+1,SetDuty@tempPR2+1
 17853  01661E  C186  F1BC         	movff	?___lbtoft+2,SetDuty@tempPR2+2
 17854                           
 17855                           ;PWM.c: 128: temp = (int)(tempPR2 * ((float)Duty/100));
 17856  016622  C1BA  F19A         	movff	SetDuty@tempPR2,___ftmul@f2
 17857  016626  C1BB  F19B         	movff	SetDuty@tempPR2+1,___ftmul@f2+1
 17858  01662A  C1BC  F19C         	movff	SetDuty@tempPR2+2,___ftmul@f2+2
 17859  01662E  0E00               	movlw	0
 17860  016630  0101               	movlb	1	; () banked
 17861  016632  6F8B               	movwf	___ftdiv@f2& (0+255),b
 17862  016634  0EC8               	movlw	200
 17863  016636  0101               	movlb	1	; () banked
 17864  016638  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 17865  01663A  0E42               	movlw	66
 17866  01663C  0101               	movlb	1	; () banked
 17867  01663E  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 17868  016640  0101               	movlb	1	; () banked
 17869  016642  51B9               	movf	SetDuty@Duty& (0+255),w,b
 17870  016644  EC08  F002         	call	___lbtoft
 17871  016648  C184  F188         	movff	?___lbtoft,___ftdiv@f1
 17872  01664C  C185  F189         	movff	?___lbtoft+1,___ftdiv@f1+1
 17873  016650  C186  F18A         	movff	?___lbtoft+2,___ftdiv@f1+2
 17874  016654  EC84  F0AC         	call	___ftdiv	;wreg free
 17875  016658  C188  F197         	movff	?___ftdiv,___ftmul@f1
 17876  01665C  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 17877  016660  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 17878  016664  EC14  F0AB         	call	___ftmul	;wreg free
 17879  016668  C197  F1A6         	movff	?___ftmul,___fttol@f1
 17880  01666C  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 17881  016670  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 17882  016674  EC56  F0AA         	call	___fttol	;wreg free
 17883  016678  C1A6  F1B5         	movff	?___fttol,??_SetDuty
 17884  01667C  C1A7  F1B6         	movff	?___fttol+1,??_SetDuty+1
 17885  016680  C1A8  F1B7         	movff	?___fttol+2,??_SetDuty+2
 17886  016684  C1A9  F1B8         	movff	?___fttol+3,??_SetDuty+3
 17887  016688  C1B5  F1BF         	movff	??_SetDuty,SetDuty@temp
 17888  01668C  C1B6  F1C0         	movff	??_SetDuty+1,SetDuty@temp+1
 17889                           
 17890                           ;PWM.c: 129: MSB = (temp & 0x300)>>8;
 17891  016690  0101               	movlb	1	; () banked
 17892  016692  C1C0  F1B5         	movff	SetDuty@temp+1,??_SetDuty
 17893  016696  C1B5  F1B6         	movff	??_SetDuty,??_SetDuty+1
 17894  01669A  0101               	movlb	1	; () banked
 17895  01669C  6BB7               	clrf	(??_SetDuty+2)& (0+255),b
 17896  01669E  0101               	movlb	1	; () banked
 17897  0166A0  51B6               	movf	(??_SetDuty+1)& (0+255),w,b
 17898  0166A2  0B03               	andlw	3
 17899  0166A4  0101               	movlb	1	; () banked
 17900  0166A6  6FBD               	movwf	SetDuty@MSB& (0+255),b
 17901                           
 17902                           ; BSR set to: 1
 17903                           ;PWM.c: 130: LSB = temp & 0xff;
 17904  0166A8  C1BF  F1BE         	movff	SetDuty@temp,SetDuty@LSB
 17905                           
 17906                           ; BSR set to: 1
 17907                           ;PWM.c: 132: CCP1CON &= ~(0b00110000);
 17908  0166AC  0ECF               	movlw	207
 17909  0166AE  16BD               	andwf	4029,f,c	;volatile
 17910                           
 17911                           ; BSR set to: 1
 17912                           ;PWM.c: 133: CCP1CON |= MSB << 4;
 17913  0166B0  0101               	movlb	1	; () banked
 17914  0166B2  39BD               	swapf	SetDuty@MSB& (0+255),w,b
 17915  0166B4  0BF0               	andlw	240
 17916  0166B6  12BD               	iorwf	4029,f,c	;volatile
 17917                           
 17918                           ; BSR set to: 1
 17919                           ;PWM.c: 134: CCPR1L = LSB;
 17920  0166B8  C1BE  FFBE         	movff	SetDuty@LSB,4030	;volatile
 17921                           
 17922                           ; BSR set to: 1
 17923                           ;PWM.c: 135: __nop();
 17924  0166BC  F000               	nop	
 17925  0166BE  0012               	return	
 17926  0166C0                     __end_of_SetDuty:
 17927                           	opt stack 0
 17928                           tblptru	equ	0xFF8
 17929                           tblptrh	equ	0xFF7
 17930                           tblptrl	equ	0xFF6
 17931                           tablat	equ	0xFF5
 17932                           prodh	equ	0xFF4
 17933                           prodl	equ	0xFF3
 17934                           intcon	equ	0xFF2
 17935                           postinc0	equ	0xFEE
 17936                           wreg	equ	0xFE8
 17937                           indf1	equ	0xFE7
 17938                           postinc1	equ	0xFE6
 17939                           postdec1	equ	0xFE5
 17940                           fsr1h	equ	0xFE2
 17941                           fsr1l	equ	0xFE1
 17942                           indf2	equ	0xFDF
 17943                           postinc2	equ	0xFDE
 17944                           fsr2h	equ	0xFDA
 17945                           fsr2l	equ	0xFD9
 17946                           status	equ	0xFD8
 17947                           
 17948 ;; *************** function _SetContrast *****************
 17949 ;; Defined at:
 17950 ;;		line 94 in file "PWM.c"
 17951 ;; Parameters:    Size  Location     Type
 17952 ;;  Duty            1    wreg     unsigned char 
 17953 ;; Auto vars:     Size  Location     Type
 17954 ;;  Duty            1   82[BANK1 ] unsigned char 
 17955 ;;  tempPR2         3   75[BANK1 ] float 
 17956 ;;  temp            2   80[BANK1 ] unsigned int 
 17957 ;;  LSB             1   79[BANK1 ] unsigned char 
 17958 ;;  MSB             1   78[BANK1 ] unsigned char 
 17959 ;; Return value:  Size  Location     Type
 17960 ;;		None               void
 17961 ;; Registers used:
 17962 ;;		wreg, status,2, status,0, cstack
 17963 ;; Tracked objects:
 17964 ;;		On entry : 0/0
 17965 ;;		On exit  : 0/0
 17966 ;;		Unchanged: 0/0
 17967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17969 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 17970 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 17971 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 17972 ;;Total ram usage:       12 bytes
 17973 ;; Hardware stack levels used:    1
 17974 ;; Hardware stack levels required when called:    8
 17975 ;; This function calls:
 17976 ;;		___ftdiv
 17977 ;;		___ftmul
 17978 ;;		___fttol
 17979 ;;		___lbtoft
 17980 ;; This function is called by:
 17981 ;;		_main
 17982 ;;		_Command
 17983 ;; This function uses a non-reentrant model
 17984 ;;
 17985                           
 17986                           	psect	text25
 17987  015FCC                     __ptext25:
 17988                           	opt stack 0
 17989  015FCC                     _SetContrast:
 17990                           	opt stack 21
 17991                           
 17992                           ;incstack = 0
 17993                           ;SetContrast@Duty stored from wreg
 17994  015FCC  0101               	movlb	1	; () banked
 17995  015FCE  6FC0               	movwf	SetContrast@Duty& (0+255),b
 17996                           
 17997                           ; BSR set to: 1
 17998                           ;PWM.c: 96: unsigned int temp=0;
 17999  015FD0  0E00               	movlw	0
 18000  015FD2  0101               	movlb	1	; () banked
 18001  015FD4  6FBF               	movwf	(SetContrast@temp+1)& (0+255),b
 18002  015FD6  0E00               	movlw	0
 18003  015FD8  0101               	movlb	1	; () banked
 18004  015FDA  6FBE               	movwf	SetContrast@temp& (0+255),b
 18005                           
 18006                           ; BSR set to: 1
 18007                           ;PWM.c: 97: float tempPR2=0;
 18008  015FDC  0E00               	movlw	0
 18009  015FDE  0101               	movlb	1	; () banked
 18010  015FE0  6FB9               	movwf	SetContrast@tempPR2& (0+255),b
 18011  015FE2  0E00               	movlw	0
 18012  015FE4  0101               	movlb	1	; () banked
 18013  015FE6  6FBA               	movwf	(SetContrast@tempPR2+1)& (0+255),b
 18014  015FE8  0E00               	movlw	0
 18015  015FEA  0101               	movlb	1	; () banked
 18016  015FEC  6FBB               	movwf	(SetContrast@tempPR2+2)& (0+255),b
 18017                           
 18018                           ; BSR set to: 1
 18019                           ;PWM.c: 98: unsigned char MSB,LSB;
 18020                           ;PWM.c: 100: Duty = 100 - Duty;
 18021  015FEE  0101               	movlb	1	; () banked
 18022  015FF0  51C0               	movf	SetContrast@Duty& (0+255),w,b
 18023  015FF2  0800               	sublw	0
 18024  015FF4  0F64               	addlw	100
 18025  015FF6  0101               	movlb	1	; () banked
 18026  015FF8  6FC0               	movwf	SetContrast@Duty& (0+255),b
 18027                           
 18028                           ; BSR set to: 1
 18029                           ;PWM.c: 101: Duty = (Duty>>1);
 18030  015FFA  0101               	movlb	1	; () banked
 18031  015FFC  90D8               	bcf	status,0,c
 18032  015FFE  31C0               	rrcf	SetContrast@Duty& (0+255),w,b
 18033  016000  0101               	movlb	1	; () banked
 18034  016002  6FC0               	movwf	SetContrast@Duty& (0+255),b
 18035                           
 18036                           ; BSR set to: 1
 18037                           ;PWM.c: 103: tempPR2 = (float) PR2;
 18038  016004  50CB               	movf	4043,w,c	;volatile
 18039  016006  EC08  F002         	call	___lbtoft
 18040  01600A  C184  F1B9         	movff	?___lbtoft,SetContrast@tempPR2
 18041  01600E  C185  F1BA         	movff	?___lbtoft+1,SetContrast@tempPR2+1
 18042  016012  C186  F1BB         	movff	?___lbtoft+2,SetContrast@tempPR2+2
 18043                           
 18044                           ;PWM.c: 105: temp = (int)(tempPR2 * ((float)Duty/100));
 18045  016016  C1B9  F19A         	movff	SetContrast@tempPR2,___ftmul@f2
 18046  01601A  C1BA  F19B         	movff	SetContrast@tempPR2+1,___ftmul@f2+1
 18047  01601E  C1BB  F19C         	movff	SetContrast@tempPR2+2,___ftmul@f2+2
 18048  016022  0E00               	movlw	0
 18049  016024  0101               	movlb	1	; () banked
 18050  016026  6F8B               	movwf	___ftdiv@f2& (0+255),b
 18051  016028  0EC8               	movlw	200
 18052  01602A  0101               	movlb	1	; () banked
 18053  01602C  6F8C               	movwf	(___ftdiv@f2+1)& (0+255),b
 18054  01602E  0E42               	movlw	66
 18055  016030  0101               	movlb	1	; () banked
 18056  016032  6F8D               	movwf	(___ftdiv@f2+2)& (0+255),b
 18057  016034  0101               	movlb	1	; () banked
 18058  016036  51C0               	movf	SetContrast@Duty& (0+255),w,b
 18059  016038  EC08  F002         	call	___lbtoft
 18060  01603C  C184  F188         	movff	?___lbtoft,___ftdiv@f1
 18061  016040  C185  F189         	movff	?___lbtoft+1,___ftdiv@f1+1
 18062  016044  C186  F18A         	movff	?___lbtoft+2,___ftdiv@f1+2
 18063  016048  EC84  F0AC         	call	___ftdiv	;wreg free
 18064  01604C  C188  F197         	movff	?___ftdiv,___ftmul@f1
 18065  016050  C189  F198         	movff	?___ftdiv+1,___ftmul@f1+1
 18066  016054  C18A  F199         	movff	?___ftdiv+2,___ftmul@f1+2
 18067  016058  EC14  F0AB         	call	___ftmul	;wreg free
 18068  01605C  C197  F1A6         	movff	?___ftmul,___fttol@f1
 18069  016060  C198  F1A7         	movff	?___ftmul+1,___fttol@f1+1
 18070  016064  C199  F1A8         	movff	?___ftmul+2,___fttol@f1+2
 18071  016068  EC56  F0AA         	call	___fttol	;wreg free
 18072  01606C  C1A6  F1B5         	movff	?___fttol,??_SetContrast
 18073  016070  C1A7  F1B6         	movff	?___fttol+1,??_SetContrast+1
 18074  016074  C1A8  F1B7         	movff	?___fttol+2,??_SetContrast+2
 18075  016078  C1A9  F1B8         	movff	?___fttol+3,??_SetContrast+3
 18076  01607C  C1B5  F1BE         	movff	??_SetContrast,SetContrast@temp
 18077  016080  C1B6  F1BF         	movff	??_SetContrast+1,SetContrast@temp+1
 18078                           
 18079                           ;PWM.c: 106: MSB = (temp & 0x300)>>8;
 18080  016084  0101               	movlb	1	; () banked
 18081  016086  C1BF  F1B5         	movff	SetContrast@temp+1,??_SetContrast
 18082  01608A  C1B5  F1B6         	movff	??_SetContrast,??_SetContrast+1
 18083  01608E  0101               	movlb	1	; () banked
 18084  016090  6BB7               	clrf	(??_SetContrast+2)& (0+255),b
 18085  016092  0101               	movlb	1	; () banked
 18086  016094  51B6               	movf	(??_SetContrast+1)& (0+255),w,b
 18087  016096  0B03               	andlw	3
 18088  016098  0101               	movlb	1	; () banked
 18089  01609A  6FBC               	movwf	SetContrast@MSB& (0+255),b
 18090                           
 18091                           ; BSR set to: 1
 18092                           ;PWM.c: 107: LSB = temp & 0xff;
 18093  01609C  C1BE  F1BD         	movff	SetContrast@temp,SetContrast@LSB
 18094                           
 18095                           ; BSR set to: 1
 18096                           ;PWM.c: 109: ECCP1CON &= ~0b00110000;
 18097  0160A0  0ECF               	movlw	207
 18098  0160A2  16BA               	andwf	4026,f,c	;volatile
 18099                           
 18100                           ; BSR set to: 1
 18101                           ;PWM.c: 110: ECCP1CON |= MSB << 4;
 18102  0160A4  0101               	movlb	1	; () banked
 18103  0160A6  39BC               	swapf	SetContrast@MSB& (0+255),w,b
 18104  0160A8  0BF0               	andlw	240
 18105  0160AA  12BA               	iorwf	4026,f,c	;volatile
 18106                           
 18107                           ; BSR set to: 1
 18108                           ;PWM.c: 111: ECCPR1L = LSB;
 18109  0160AC  C1BD  FFBB         	movff	SetContrast@LSB,4027	;volatile
 18110                           
 18111                           ; BSR set to: 1
 18112                           ;PWM.c: 112: __nop();
 18113  0160B0  F000               	nop	
 18114  0160B2  0012               	return	
 18115  0160B4                     __end_of_SetContrast:
 18116                           	opt stack 0
 18117                           tblptru	equ	0xFF8
 18118                           tblptrh	equ	0xFF7
 18119                           tblptrl	equ	0xFF6
 18120                           tablat	equ	0xFF5
 18121                           prodh	equ	0xFF4
 18122                           prodl	equ	0xFF3
 18123                           intcon	equ	0xFF2
 18124                           postinc0	equ	0xFEE
 18125                           wreg	equ	0xFE8
 18126                           indf1	equ	0xFE7
 18127                           postinc1	equ	0xFE6
 18128                           postdec1	equ	0xFE5
 18129                           fsr1h	equ	0xFE2
 18130                           fsr1l	equ	0xFE1
 18131                           indf2	equ	0xFDF
 18132                           postinc2	equ	0xFDE
 18133                           fsr2h	equ	0xFDA
 18134                           fsr2l	equ	0xFD9
 18135                           status	equ	0xFD8
 18136                           
 18137 ;; *************** function ___lbtoft *****************
 18138 ;; Defined at:
 18139 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbtoft.c"
 18140 ;; Parameters:    Size  Location     Type
 18141 ;;  c               1    wreg     unsigned char 
 18142 ;; Auto vars:     Size  Location     Type
 18143 ;;  c               1   25[BANK1 ] unsigned char 
 18144 ;; Return value:  Size  Location     Type
 18145 ;;                  3   22[BANK1 ] float 
 18146 ;; Registers used:
 18147 ;;		wreg, status,2, status,0, cstack
 18148 ;; Tracked objects:
 18149 ;;		On entry : 0/0
 18150 ;;		On exit  : 0/0
 18151 ;;		Unchanged: 0/0
 18152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18153 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18154 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 18155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18156 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18157 ;;Total ram usage:        4 bytes
 18158 ;; Hardware stack levels used:    1
 18159 ;; Hardware stack levels required when called:    7
 18160 ;; This function calls:
 18161 ;;		___ftpack
 18162 ;; This function is called by:
 18163 ;;		_SetContrast
 18164 ;;		_SetDuty
 18165 ;; This function uses a non-reentrant model
 18166 ;;
 18167                           
 18168                           	psect	text26
 18169  000410                     __ptext26:
 18170                           	opt stack 0
 18171  000410                     ___lbtoft:
 18172                           	opt stack 21
 18173                           
 18174                           ;incstack = 0
 18175                           ;___lbtoft@c stored from wreg
 18176  000410  0101               	movlb	1	; () banked
 18177  000412  6F87               	movwf	___lbtoft@c& (0+255),b
 18178                           
 18179                           ; BSR set to: 1
 18180  000414  0101               	movlb	1	; () banked
 18181  000416  5187               	movf	___lbtoft@c& (0+255),w,b
 18182  000418  0101               	movlb	1	; () banked
 18183  00041A  6F7C               	movwf	___ftpack@arg& (0+255),b
 18184  00041C  0101               	movlb	1	; () banked
 18185  00041E  6B7D               	clrf	(___ftpack@arg+1)& (0+255),b
 18186  000420  0101               	movlb	1	; () banked
 18187  000422  6B7E               	clrf	(___ftpack@arg+2)& (0+255),b
 18188  000424  0E8E               	movlw	142
 18189  000426  0101               	movlb	1	; () banked
 18190  000428  6F7F               	movwf	___ftpack@exp& (0+255),b
 18191  00042A  0E00               	movlw	0
 18192  00042C  0101               	movlb	1	; () banked
 18193  00042E  6F80               	movwf	___ftpack@sign& (0+255),b
 18194  000430  ECEA  F0AE         	call	___ftpack	;wreg free
 18195  000434  C17C  F184         	movff	?___ftpack,?___lbtoft
 18196  000438  C17D  F185         	movff	?___ftpack+1,?___lbtoft+1
 18197  00043C  C17E  F186         	movff	?___ftpack+2,?___lbtoft+2
 18198  000440  0012               	return	
 18199  000442                     __end_of___lbtoft:
 18200                           	opt stack 0
 18201                           tblptru	equ	0xFF8
 18202                           tblptrh	equ	0xFF7
 18203                           tblptrl	equ	0xFF6
 18204                           tablat	equ	0xFF5
 18205                           prodh	equ	0xFF4
 18206                           prodl	equ	0xFF3
 18207                           intcon	equ	0xFF2
 18208                           postinc0	equ	0xFEE
 18209                           wreg	equ	0xFE8
 18210                           indf1	equ	0xFE7
 18211                           postinc1	equ	0xFE6
 18212                           postdec1	equ	0xFE5
 18213                           fsr1h	equ	0xFE2
 18214                           fsr1l	equ	0xFE1
 18215                           indf2	equ	0xFDF
 18216                           postinc2	equ	0xFDE
 18217                           fsr2h	equ	0xFDA
 18218                           fsr2l	equ	0xFD9
 18219                           status	equ	0xFD8
 18220                           
 18221 ;; *************** function ___fttol *****************
 18222 ;; Defined at:
 18223 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
 18224 ;; Parameters:    Size  Location     Type
 18225 ;;  f1              3   56[BANK1 ] float 
 18226 ;; Auto vars:     Size  Location     Type
 18227 ;;  lval            4   66[BANK1 ] unsigned long 
 18228 ;;  exp1            1   70[BANK1 ] unsigned char 
 18229 ;;  sign1           1   65[BANK1 ] unsigned char 
 18230 ;; Return value:  Size  Location     Type
 18231 ;;                  4   56[BANK1 ] long 
 18232 ;; Registers used:
 18233 ;;		wreg, status,2, status,0
 18234 ;; Tracked objects:
 18235 ;;		On entry : 0/0
 18236 ;;		On exit  : 0/0
 18237 ;;		Unchanged: 0/0
 18238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18239 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 18240 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18241 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 18242 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 18243 ;;Total ram usage:       15 bytes
 18244 ;; Hardware stack levels used:    1
 18245 ;; Hardware stack levels required when called:    6
 18246 ;; This function calls:
 18247 ;;		Nothing
 18248 ;; This function is called by:
 18249 ;;		_Command
 18250 ;;		_SetContrast
 18251 ;;		_SetDuty
 18252 ;; This function uses a non-reentrant model
 18253 ;;
 18254                           
 18255                           	psect	text27
 18256  0154AC                     __ptext27:
 18257                           	opt stack 0
 18258  0154AC                     ___fttol:
 18259                           	opt stack 22
 18260                           
 18261                           ;incstack = 0
 18262  0154AC  0101               	movlb	1	; () banked
 18263  0154AE  C1A8  F1AA         	movff	___fttol@f1+2,??___fttol
 18264  0154B2  0101               	movlb	1	; () banked
 18265  0154B4  6BAB               	clrf	(??___fttol+1)& (0+255),b
 18266  0154B6  6BAC               	clrf	(??___fttol+2)& (0+255),b
 18267  0154B8  0101               	movlb	1	; () banked
 18268  0154BA  35A7               	rlcf	(___fttol@f1+1)& (0+255),w,b
 18269  0154BC  0101               	movlb	1	; () banked
 18270  0154BE  37AA               	rlcf	??___fttol& (0+255),f,b
 18271  0154C0  E301               	bnc	u14751
 18272  0154C2  81AB               	bsf	(??___fttol+1)& (0+255),0,b
 18273  0154C4                     u14751:
 18274  0154C4  0101               	movlb	1	; () banked
 18275  0154C6  51AA               	movf	??___fttol& (0+255),w,b
 18276  0154C8  0101               	movlb	1	; () banked
 18277  0154CA  6FB4               	movwf	___fttol@exp1& (0+255),b
 18278  0154CC  0101               	movlb	1	; () banked
 18279  0154CE  67B4               	tstfsz	___fttol@exp1& (0+255),b
 18280  0154D0  D00D               	goto	l11524
 18281                           
 18282                           ; BSR set to: 1
 18283  0154D2  0E00               	movlw	0
 18284  0154D4  0101               	movlb	1	; () banked
 18285  0154D6  6FA6               	movwf	?___fttol& (0+255),b
 18286  0154D8  0E00               	movlw	0
 18287  0154DA  0101               	movlb	1	; () banked
 18288  0154DC  6FA7               	movwf	(?___fttol+1)& (0+255),b
 18289  0154DE  0E00               	movlw	0
 18290  0154E0  0101               	movlb	1	; () banked
 18291  0154E2  6FA8               	movwf	(?___fttol+2)& (0+255),b
 18292  0154E4  0E00               	movlw	0
 18293  0154E6  0101               	movlb	1	; () banked
 18294  0154E8  6FA9               	movwf	(?___fttol+3)& (0+255),b
 18295  0154EA  0012               	return	
 18296  0154EC                     l11524:
 18297                           
 18298                           ; BSR set to: 1
 18299  0154EC  0E17               	movlw	23
 18300  0154EE  0101               	movlb	1	; () banked
 18301  0154F0  6FAA               	movwf	??___fttol& (0+255),b
 18302  0154F2  0101               	movlb	1	; () banked
 18303  0154F4  C1A6  F1AB         	movff	___fttol@f1,??___fttol+1
 18304  0154F8  0101               	movlb	1	; () banked
 18305  0154FA  C1A7  F1AC         	movff	___fttol@f1+1,??___fttol+2
 18306  0154FE  0101               	movlb	1	; () banked
 18307  015500  C1A8  F1AD         	movff	___fttol@f1+2,??___fttol+3
 18308  015504  0101               	movlb	1	; () banked
 18309  015506  29AA               	incf	??___fttol& (0+255),w,b
 18310  015508  0101               	movlb	1	; () banked
 18311  01550A  6FAE               	movwf	(??___fttol+4)& (0+255),b
 18312  01550C  D005               	goto	u14770
 18313  01550E                     u14775:
 18314  01550E  0101               	movlb	1	; () banked
 18315  015510  90D8               	bcf	status,0,c
 18316  015512  33AD               	rrcf	(??___fttol+3)& (0+255),f,b
 18317  015514  33AC               	rrcf	(??___fttol+2)& (0+255),f,b
 18318  015516  33AB               	rrcf	(??___fttol+1)& (0+255),f,b
 18319  015518                     u14770:
 18320  015518  0101               	movlb	1	; () banked
 18321  01551A  2FAE               	decfsz	(??___fttol+4)& (0+255),f,b
 18322  01551C  D7F8               	goto	u14775
 18323  01551E  0101               	movlb	1	; () banked
 18324  015520  51AB               	movf	(??___fttol+1)& (0+255),w,b
 18325  015522  0101               	movlb	1	; () banked
 18326  015524  6FAF               	movwf	___fttol@sign1& (0+255),b
 18327                           
 18328                           ; BSR set to: 1
 18329  015526  0101               	movlb	1	; () banked
 18330  015528  8FA7               	bsf	(___fttol@f1+1)& (0+255),7,b
 18331                           
 18332                           ; BSR set to: 1
 18333  01552A  0EFF               	movlw	255
 18334  01552C  0101               	movlb	1	; () banked
 18335  01552E  17A6               	andwf	___fttol@f1& (0+255),f,b
 18336  015530  0EFF               	movlw	255
 18337  015532  0101               	movlb	1	; () banked
 18338  015534  17A7               	andwf	(___fttol@f1+1)& (0+255),f,b
 18339  015536  0E00               	movlw	0
 18340  015538  0101               	movlb	1	; () banked
 18341  01553A  17A8               	andwf	(___fttol@f1+2)& (0+255),f,b
 18342                           
 18343                           ; BSR set to: 1
 18344  01553C  0101               	movlb	1	; () banked
 18345  01553E  51A6               	movf	___fttol@f1& (0+255),w,b
 18346  015540  0101               	movlb	1	; () banked
 18347  015542  6FB0               	movwf	___fttol@lval& (0+255),b
 18348  015544  0101               	movlb	1	; () banked
 18349  015546  51A7               	movf	(___fttol@f1+1)& (0+255),w,b
 18350  015548  0101               	movlb	1	; () banked
 18351  01554A  6FB1               	movwf	(___fttol@lval+1)& (0+255),b
 18352  01554C  0101               	movlb	1	; () banked
 18353  01554E  51A8               	movf	(___fttol@f1+2)& (0+255),w,b
 18354  015550  0101               	movlb	1	; () banked
 18355  015552  6FB2               	movwf	(___fttol@lval+2)& (0+255),b
 18356  015554  0101               	movlb	1	; () banked
 18357  015556  6BB3               	clrf	(___fttol@lval+3)& (0+255),b
 18358                           
 18359                           ; BSR set to: 1
 18360  015558  0E8E               	movlw	142
 18361  01555A  0101               	movlb	1	; () banked
 18362  01555C  5FB4               	subwf	___fttol@exp1& (0+255),f,b
 18363                           
 18364                           ; BSR set to: 1
 18365  01555E  0101               	movlb	1	; () banked
 18366  015560  AFB4               	btfss	___fttol@exp1& (0+255),7,b
 18367  015562  D026               	goto	l11546
 18368                           
 18369                           ; BSR set to: 1
 18370  015564  0101               	movlb	1	; () banked
 18371  015566  51B4               	movf	___fttol@exp1& (0+255),w,b
 18372  015568  0A80               	xorlw	128
 18373  01556A  0101               	movlb	1	; () banked
 18374  01556C  6FAA               	movwf	??___fttol& (0+255),b
 18375  01556E  0EF1               	movlw	241
 18376  015570  0A80               	xorlw	128
 18377  015572  0101               	movlb	1	; () banked
 18378  015574  5DAA               	subwf	??___fttol& (0+255),w,b
 18379  015576  B0D8               	btfsc	status,0,c
 18380  015578  D00D               	goto	l11542
 18381                           
 18382                           ; BSR set to: 1
 18383  01557A  0E00               	movlw	0
 18384  01557C  0101               	movlb	1	; () banked
 18385  01557E  6FA6               	movwf	?___fttol& (0+255),b
 18386  015580  0E00               	movlw	0
 18387  015582  0101               	movlb	1	; () banked
 18388  015584  6FA7               	movwf	(?___fttol+1)& (0+255),b
 18389  015586  0E00               	movlw	0
 18390  015588  0101               	movlb	1	; () banked
 18391  01558A  6FA8               	movwf	(?___fttol+2)& (0+255),b
 18392  01558C  0E00               	movlw	0
 18393  01558E  0101               	movlb	1	; () banked
 18394  015590  6FA9               	movwf	(?___fttol+3)& (0+255),b
 18395  015592  0012               	return	
 18396  015594                     l11542:
 18397                           
 18398                           ; BSR set to: 1
 18399  015594  0101               	movlb	1	; () banked
 18400  015596  90D8               	bcf	status,0,c
 18401  015598  0101               	movlb	1	; () banked
 18402  01559A  33B3               	rrcf	(___fttol@lval+3)& (0+255),f,b
 18403  01559C  0101               	movlb	1	; () banked
 18404  01559E  33B2               	rrcf	(___fttol@lval+2)& (0+255),f,b
 18405  0155A0  0101               	movlb	1	; () banked
 18406  0155A2  33B1               	rrcf	(___fttol@lval+1)& (0+255),f,b
 18407  0155A4  0101               	movlb	1	; () banked
 18408  0155A6  33B0               	rrcf	___fttol@lval& (0+255),f,b
 18409                           
 18410                           ; BSR set to: 1
 18411  0155A8  0101               	movlb	1	; () banked
 18412  0155AA  3FB4               	incfsz	___fttol@exp1& (0+255),f,b
 18413  0155AC  D7F3               	goto	l11542
 18414  0155AE  D020               	goto	l11556
 18415  0155B0                     l11546:
 18416                           
 18417                           ; BSR set to: 1
 18418  0155B0  0E17               	movlw	23
 18419  0155B2  0101               	movlb	1	; () banked
 18420  0155B4  65B4               	cpfsgt	___fttol@exp1& (0+255),b
 18421  0155B6  D019               	goto	l11554
 18422                           
 18423                           ; BSR set to: 1
 18424  0155B8  0E00               	movlw	0
 18425  0155BA  0101               	movlb	1	; () banked
 18426  0155BC  6FA6               	movwf	?___fttol& (0+255),b
 18427  0155BE  0E00               	movlw	0
 18428  0155C0  0101               	movlb	1	; () banked
 18429  0155C2  6FA7               	movwf	(?___fttol+1)& (0+255),b
 18430  0155C4  0E00               	movlw	0
 18431  0155C6  0101               	movlb	1	; () banked
 18432  0155C8  6FA8               	movwf	(?___fttol+2)& (0+255),b
 18433  0155CA  0E00               	movlw	0
 18434  0155CC  0101               	movlb	1	; () banked
 18435  0155CE  6FA9               	movwf	(?___fttol+3)& (0+255),b
 18436  0155D0  0012               	return	
 18437  0155D2                     l11552:
 18438                           
 18439                           ; BSR set to: 1
 18440  0155D2  0101               	movlb	1	; () banked
 18441  0155D4  90D8               	bcf	status,0,c
 18442  0155D6  0101               	movlb	1	; () banked
 18443  0155D8  37B0               	rlcf	___fttol@lval& (0+255),f,b
 18444  0155DA  0101               	movlb	1	; () banked
 18445  0155DC  37B1               	rlcf	(___fttol@lval+1)& (0+255),f,b
 18446  0155DE  0101               	movlb	1	; () banked
 18447  0155E0  37B2               	rlcf	(___fttol@lval+2)& (0+255),f,b
 18448  0155E2  0101               	movlb	1	; () banked
 18449  0155E4  37B3               	rlcf	(___fttol@lval+3)& (0+255),f,b
 18450  0155E6  0101               	movlb	1	; () banked
 18451  0155E8  07B4               	decf	___fttol@exp1& (0+255),f,b
 18452  0155EA                     l11554:
 18453                           
 18454                           ; BSR set to: 1
 18455  0155EA  0101               	movlb	1	; () banked
 18456  0155EC  67B4               	tstfsz	___fttol@exp1& (0+255),b
 18457  0155EE  D7F1               	goto	l11552
 18458  0155F0                     l11556:
 18459                           
 18460                           ; BSR set to: 1
 18461  0155F0  0101               	movlb	1	; () banked
 18462  0155F2  51AF               	movf	___fttol@sign1& (0+255),w,b
 18463  0155F4  B4D8               	btfsc	status,2,c
 18464  0155F6  D00F               	goto	l11560
 18465                           
 18466                           ; BSR set to: 1
 18467  0155F8  0101               	movlb	1	; () banked
 18468  0155FA  1FB3               	comf	(___fttol@lval+3)& (0+255),f,b
 18469  0155FC  0101               	movlb	1	; () banked
 18470  0155FE  1FB2               	comf	(___fttol@lval+2)& (0+255),f,b
 18471  015600  0101               	movlb	1	; () banked
 18472  015602  1FB1               	comf	(___fttol@lval+1)& (0+255),f,b
 18473  015604  0101               	movlb	1	; () banked
 18474  015606  6DB0               	negf	___fttol@lval& (0+255),b
 18475  015608  0E00               	movlw	0
 18476  01560A  0101               	movlb	1	; () banked
 18477  01560C  23B1               	addwfc	(___fttol@lval+1)& (0+255),f,b
 18478  01560E  0101               	movlb	1	; () banked
 18479  015610  23B2               	addwfc	(___fttol@lval+2)& (0+255),f,b
 18480  015612  0101               	movlb	1	; () banked
 18481  015614  23B3               	addwfc	(___fttol@lval+3)& (0+255),f,b
 18482  015616                     l11560:
 18483                           
 18484                           ; BSR set to: 1
 18485  015616  C1B0  F1A6         	movff	___fttol@lval,?___fttol
 18486  01561A  C1B1  F1A7         	movff	___fttol@lval+1,?___fttol+1
 18487  01561E  C1B2  F1A8         	movff	___fttol@lval+2,?___fttol+2
 18488  015622  C1B3  F1A9         	movff	___fttol@lval+3,?___fttol+3
 18489  015626  0012               	return	
 18490  015628                     __end_of___fttol:
 18491                           	opt stack 0
 18492                           tblptru	equ	0xFF8
 18493                           tblptrh	equ	0xFF7
 18494                           tblptrl	equ	0xFF6
 18495                           tablat	equ	0xFF5
 18496                           prodh	equ	0xFF4
 18497                           prodl	equ	0xFF3
 18498                           intcon	equ	0xFF2
 18499                           postinc0	equ	0xFEE
 18500                           wreg	equ	0xFE8
 18501                           indf1	equ	0xFE7
 18502                           postinc1	equ	0xFE6
 18503                           postdec1	equ	0xFE5
 18504                           fsr1h	equ	0xFE2
 18505                           fsr1l	equ	0xFE1
 18506                           indf2	equ	0xFDF
 18507                           postinc2	equ	0xFDE
 18508                           fsr2h	equ	0xFDA
 18509                           fsr2l	equ	0xFD9
 18510                           status	equ	0xFD8
 18511                           
 18512 ;; *************** function ___ftmul *****************
 18513 ;; Defined at:
 18514 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
 18515 ;; Parameters:    Size  Location     Type
 18516 ;;  f1              3   41[BANK1 ] float 
 18517 ;;  f2              3   44[BANK1 ] float 
 18518 ;; Auto vars:     Size  Location     Type
 18519 ;;  f3_as_produc    3   51[BANK1 ] unsigned um
 18520 ;;  sign            1   55[BANK1 ] unsigned char 
 18521 ;;  cntr            1   54[BANK1 ] unsigned char 
 18522 ;;  exp             1   50[BANK1 ] unsigned char 
 18523 ;; Return value:  Size  Location     Type
 18524 ;;                  3   41[BANK1 ] float 
 18525 ;; Registers used:
 18526 ;;		wreg, status,2, status,0, cstack
 18527 ;; Tracked objects:
 18528 ;;		On entry : 0/0
 18529 ;;		On exit  : 0/0
 18530 ;;		Unchanged: 0/0
 18531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18532 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18533 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18534 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18535 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 18536 ;;Total ram usage:       15 bytes
 18537 ;; Hardware stack levels used:    1
 18538 ;; Hardware stack levels required when called:    7
 18539 ;; This function calls:
 18540 ;;		___ftpack
 18541 ;; This function is called by:
 18542 ;;		_Command
 18543 ;;		_SetContrast
 18544 ;;		_SetDuty
 18545 ;; This function uses a non-reentrant model
 18546 ;;
 18547                           
 18548                           	psect	text28
 18549  015628                     __ptext28:
 18550                           	opt stack 0
 18551  015628                     ___ftmul:
 18552                           	opt stack 21
 18553                           
 18554                           ; BSR set to: 1
 18555                           ;incstack = 0
 18556  015628  0101               	movlb	1	; () banked
 18557  01562A  C199  F19D         	movff	___ftmul@f1+2,??___ftmul
 18558  01562E  0101               	movlb	1	; () banked
 18559  015630  6B9E               	clrf	(??___ftmul+1)& (0+255),b
 18560  015632  6B9F               	clrf	(??___ftmul+2)& (0+255),b
 18561  015634  0101               	movlb	1	; () banked
 18562  015636  3598               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 18563  015638  0101               	movlb	1	; () banked
 18564  01563A  379D               	rlcf	??___ftmul& (0+255),f,b
 18565  01563C  E301               	bnc	u14571
 18566  01563E  819E               	bsf	(??___ftmul+1)& (0+255),0,b
 18567  015640                     u14571:
 18568  015640  0101               	movlb	1	; () banked
 18569  015642  519D               	movf	??___ftmul& (0+255),w,b
 18570  015644  0101               	movlb	1	; () banked
 18571  015646  6FA0               	movwf	___ftmul@exp& (0+255),b
 18572  015648  0101               	movlb	1	; () banked
 18573  01564A  67A0               	tstfsz	___ftmul@exp& (0+255),b
 18574  01564C  D00A               	goto	l11396
 18575                           
 18576                           ; BSR set to: 1
 18577  01564E  0E00               	movlw	0
 18578  015650  0101               	movlb	1	; () banked
 18579  015652  6F97               	movwf	?___ftmul& (0+255),b
 18580  015654  0E00               	movlw	0
 18581  015656  0101               	movlb	1	; () banked
 18582  015658  6F98               	movwf	(?___ftmul+1)& (0+255),b
 18583  01565A  0E00               	movlw	0
 18584  01565C  0101               	movlb	1	; () banked
 18585  01565E  6F99               	movwf	(?___ftmul+2)& (0+255),b
 18586  015660  0012               	return	
 18587  015662                     l11396:
 18588                           
 18589                           ; BSR set to: 1
 18590  015662  0101               	movlb	1	; () banked
 18591  015664  C19C  F19D         	movff	___ftmul@f2+2,??___ftmul
 18592  015668  0101               	movlb	1	; () banked
 18593  01566A  6B9E               	clrf	(??___ftmul+1)& (0+255),b
 18594  01566C  6B9F               	clrf	(??___ftmul+2)& (0+255),b
 18595  01566E  0101               	movlb	1	; () banked
 18596  015670  359B               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 18597  015672  0101               	movlb	1	; () banked
 18598  015674  379D               	rlcf	??___ftmul& (0+255),f,b
 18599  015676  E301               	bnc	u14591
 18600  015678  819E               	bsf	(??___ftmul+1)& (0+255),0,b
 18601  01567A                     u14591:
 18602  01567A  0101               	movlb	1	; () banked
 18603  01567C  519D               	movf	??___ftmul& (0+255),w,b
 18604  01567E  0101               	movlb	1	; () banked
 18605  015680  6FA5               	movwf	___ftmul@sign& (0+255),b
 18606  015682  0101               	movlb	1	; () banked
 18607  015684  67A5               	tstfsz	___ftmul@sign& (0+255),b
 18608  015686  D00A               	goto	l11402
 18609                           
 18610                           ; BSR set to: 1
 18611  015688  0E00               	movlw	0
 18612  01568A  0101               	movlb	1	; () banked
 18613  01568C  6F97               	movwf	?___ftmul& (0+255),b
 18614  01568E  0E00               	movlw	0
 18615  015690  0101               	movlb	1	; () banked
 18616  015692  6F98               	movwf	(?___ftmul+1)& (0+255),b
 18617  015694  0E00               	movlw	0
 18618  015696  0101               	movlb	1	; () banked
 18619  015698  6F99               	movwf	(?___ftmul+2)& (0+255),b
 18620  01569A  0012               	return	
 18621  01569C                     l11402:
 18622                           
 18623                           ; BSR set to: 1
 18624  01569C  0101               	movlb	1	; () banked
 18625  01569E  51A5               	movf	___ftmul@sign& (0+255),w,b
 18626  0156A0  0F7B               	addlw	123
 18627  0156A2  0101               	movlb	1	; () banked
 18628  0156A4  27A0               	addwf	___ftmul@exp& (0+255),f,b
 18629                           
 18630                           ; BSR set to: 1
 18631  0156A6  C199  F1A5         	movff	___ftmul@f1+2,___ftmul@sign
 18632  0156AA  0101               	movlb	1	; () banked
 18633  0156AC  519C               	movf	(___ftmul@f2+2)& (0+255),w,b
 18634  0156AE  0101               	movlb	1	; () banked
 18635  0156B0  1BA5               	xorwf	___ftmul@sign& (0+255),f,b
 18636  0156B2  0E80               	movlw	128
 18637  0156B4  0101               	movlb	1	; () banked
 18638  0156B6  17A5               	andwf	___ftmul@sign& (0+255),f,b
 18639                           
 18640                           ; BSR set to: 1
 18641  0156B8  0101               	movlb	1	; () banked
 18642  0156BA  8F98               	bsf	(___ftmul@f1+1)& (0+255),7,b
 18643                           
 18644                           ; BSR set to: 1
 18645  0156BC  0101               	movlb	1	; () banked
 18646  0156BE  8F9B               	bsf	(___ftmul@f2+1)& (0+255),7,b
 18647                           
 18648                           ; BSR set to: 1
 18649  0156C0  0EFF               	movlw	255
 18650  0156C2  0101               	movlb	1	; () banked
 18651  0156C4  179A               	andwf	___ftmul@f2& (0+255),f,b
 18652  0156C6  0EFF               	movlw	255
 18653  0156C8  0101               	movlb	1	; () banked
 18654  0156CA  179B               	andwf	(___ftmul@f2+1)& (0+255),f,b
 18655  0156CC  0E00               	movlw	0
 18656  0156CE  0101               	movlb	1	; () banked
 18657  0156D0  179C               	andwf	(___ftmul@f2+2)& (0+255),f,b
 18658                           
 18659                           ; BSR set to: 1
 18660  0156D2  0E00               	movlw	0
 18661  0156D4  0101               	movlb	1	; () banked
 18662  0156D6  6FA1               	movwf	___ftmul@f3_as_product& (0+255),b
 18663  0156D8  0E00               	movlw	0
 18664  0156DA  0101               	movlb	1	; () banked
 18665  0156DC  6FA2               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 18666  0156DE  0E00               	movlw	0
 18667  0156E0  0101               	movlb	1	; () banked
 18668  0156E2  6FA3               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 18669                           
 18670                           ; BSR set to: 1
 18671  0156E4  0E07               	movlw	7
 18672  0156E6  0101               	movlb	1	; () banked
 18673  0156E8  6FA4               	movwf	___ftmul@cntr& (0+255),b
 18674  0156EA                     l11416:
 18675                           
 18676                           ; BSR set to: 1
 18677  0156EA  0101               	movlb	1	; () banked
 18678  0156EC  A197               	btfss	___ftmul@f1& (0+255),0,b
 18679  0156EE  D00C               	goto	l11420
 18680                           
 18681                           ; BSR set to: 1
 18682  0156F0  0101               	movlb	1	; () banked
 18683  0156F2  519A               	movf	___ftmul@f2& (0+255),w,b
 18684  0156F4  0101               	movlb	1	; () banked
 18685  0156F6  27A1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 18686  0156F8  0101               	movlb	1	; () banked
 18687  0156FA  519B               	movf	(___ftmul@f2+1)& (0+255),w,b
 18688  0156FC  0101               	movlb	1	; () banked
 18689  0156FE  23A2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 18690  015700  0101               	movlb	1	; () banked
 18691  015702  519C               	movf	(___ftmul@f2+2)& (0+255),w,b
 18692  015704  0101               	movlb	1	; () banked
 18693  015706  23A3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 18694  015708                     l11420:
 18695                           
 18696                           ; BSR set to: 1
 18697  015708  0101               	movlb	1	; () banked
 18698  01570A  90D8               	bcf	status,0,c
 18699  01570C  0101               	movlb	1	; () banked
 18700  01570E  3399               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 18701  015710  0101               	movlb	1	; () banked
 18702  015712  3398               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 18703  015714  0101               	movlb	1	; () banked
 18704  015716  3397               	rrcf	___ftmul@f1& (0+255),f,b
 18705  015718  0101               	movlb	1	; () banked
 18706  01571A  90D8               	bcf	status,0,c
 18707  01571C  0101               	movlb	1	; () banked
 18708  01571E  379A               	rlcf	___ftmul@f2& (0+255),f,b
 18709  015720  0101               	movlb	1	; () banked
 18710  015722  379B               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 18711  015724  0101               	movlb	1	; () banked
 18712  015726  379C               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 18713                           
 18714                           ; BSR set to: 1
 18715  015728  0101               	movlb	1	; () banked
 18716  01572A  2FA4               	decfsz	___ftmul@cntr& (0+255),f,b
 18717  01572C  D7DE               	goto	l11416
 18718                           
 18719                           ; BSR set to: 1
 18720                           
 18721                           ; BSR set to: 1
 18722  01572E  0E09               	movlw	9
 18723  015730  0101               	movlb	1	; () banked
 18724  015732  6FA4               	movwf	___ftmul@cntr& (0+255),b
 18725  015734                     l11426:
 18726                           
 18727                           ; BSR set to: 1
 18728  015734  0101               	movlb	1	; () banked
 18729  015736  A197               	btfss	___ftmul@f1& (0+255),0,b
 18730  015738  D00C               	goto	l11430
 18731                           
 18732                           ; BSR set to: 1
 18733  01573A  0101               	movlb	1	; () banked
 18734  01573C  519A               	movf	___ftmul@f2& (0+255),w,b
 18735  01573E  0101               	movlb	1	; () banked
 18736  015740  27A1               	addwf	___ftmul@f3_as_product& (0+255),f,b
 18737  015742  0101               	movlb	1	; () banked
 18738  015744  519B               	movf	(___ftmul@f2+1)& (0+255),w,b
 18739  015746  0101               	movlb	1	; () banked
 18740  015748  23A2               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 18741  01574A  0101               	movlb	1	; () banked
 18742  01574C  519C               	movf	(___ftmul@f2+2)& (0+255),w,b
 18743  01574E  0101               	movlb	1	; () banked
 18744  015750  23A3               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 18745  015752                     l11430:
 18746                           
 18747                           ; BSR set to: 1
 18748  015752  0101               	movlb	1	; () banked
 18749  015754  90D8               	bcf	status,0,c
 18750  015756  0101               	movlb	1	; () banked
 18751  015758  3399               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 18752  01575A  0101               	movlb	1	; () banked
 18753  01575C  3398               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 18754  01575E  0101               	movlb	1	; () banked
 18755  015760  3397               	rrcf	___ftmul@f1& (0+255),f,b
 18756  015762  0101               	movlb	1	; () banked
 18757  015764  90D8               	bcf	status,0,c
 18758  015766  0101               	movlb	1	; () banked
 18759  015768  33A3               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 18760  01576A  0101               	movlb	1	; () banked
 18761  01576C  33A2               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 18762  01576E  0101               	movlb	1	; () banked
 18763  015770  33A1               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 18764                           
 18765                           ; BSR set to: 1
 18766  015772  0101               	movlb	1	; () banked
 18767  015774  2FA4               	decfsz	___ftmul@cntr& (0+255),f,b
 18768  015776  D7DE               	goto	l11426
 18769                           
 18770                           ; BSR set to: 1
 18771                           
 18772                           ; BSR set to: 1
 18773  015778  C1A1  F17C         	movff	___ftmul@f3_as_product,___ftpack@arg
 18774  01577C  C1A2  F17D         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 18775  015780  C1A3  F17E         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 18776  015784  C1A0  F17F         	movff	___ftmul@exp,___ftpack@exp
 18777  015788  C1A5  F180         	movff	___ftmul@sign,___ftpack@sign
 18778  01578C  ECEA  F0AE         	call	___ftpack	;wreg free
 18779  015790  C17C  F197         	movff	?___ftpack,?___ftmul
 18780  015794  C17D  F198         	movff	?___ftpack+1,?___ftmul+1
 18781  015798  C17E  F199         	movff	?___ftpack+2,?___ftmul+2
 18782  01579C  0012               	return	
 18783  01579E                     __end_of___ftmul:
 18784                           	opt stack 0
 18785                           tblptru	equ	0xFF8
 18786                           tblptrh	equ	0xFF7
 18787                           tblptrl	equ	0xFF6
 18788                           tablat	equ	0xFF5
 18789                           prodh	equ	0xFF4
 18790                           prodl	equ	0xFF3
 18791                           intcon	equ	0xFF2
 18792                           postinc0	equ	0xFEE
 18793                           wreg	equ	0xFE8
 18794                           indf1	equ	0xFE7
 18795                           postinc1	equ	0xFE6
 18796                           postdec1	equ	0xFE5
 18797                           fsr1h	equ	0xFE2
 18798                           fsr1l	equ	0xFE1
 18799                           indf2	equ	0xFDF
 18800                           postinc2	equ	0xFDE
 18801                           fsr2h	equ	0xFDA
 18802                           fsr2l	equ	0xFD9
 18803                           status	equ	0xFD8
 18804                           
 18805 ;; *************** function ___ftdiv *****************
 18806 ;; Defined at:
 18807 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdiv.c"
 18808 ;; Parameters:    Size  Location     Type
 18809 ;;  f1              3   26[BANK1 ] float 
 18810 ;;  f2              3   29[BANK1 ] float 
 18811 ;; Auto vars:     Size  Location     Type
 18812 ;;  f3              3   36[BANK1 ] float 
 18813 ;;  sign            1   40[BANK1 ] unsigned char 
 18814 ;;  exp             1   39[BANK1 ] unsigned char 
 18815 ;;  cntr            1   35[BANK1 ] unsigned char 
 18816 ;; Return value:  Size  Location     Type
 18817 ;;                  3   26[BANK1 ] float 
 18818 ;; Registers used:
 18819 ;;		wreg, status,2, status,0, cstack
 18820 ;; Tracked objects:
 18821 ;;		On entry : 0/0
 18822 ;;		On exit  : 0/0
 18823 ;;		Unchanged: 0/0
 18824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18825 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18826 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 18827 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 18828 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 18829 ;;Total ram usage:       15 bytes
 18830 ;; Hardware stack levels used:    1
 18831 ;; Hardware stack levels required when called:    7
 18832 ;; This function calls:
 18833 ;;		___ftpack
 18834 ;; This function is called by:
 18835 ;;		_Command
 18836 ;;		_SetContrast
 18837 ;;		_SetDuty
 18838 ;; This function uses a non-reentrant model
 18839 ;;
 18840                           
 18841                           	psect	text29
 18842  015908                     __ptext29:
 18843                           	opt stack 0
 18844  015908                     ___ftdiv:
 18845                           	opt stack 21
 18846                           
 18847                           ;incstack = 0
 18848  015908  0101               	movlb	1	; () banked
 18849  01590A  C18A  F18E         	movff	___ftdiv@f1+2,??___ftdiv
 18850  01590E  0101               	movlb	1	; () banked
 18851  015910  6B8F               	clrf	(??___ftdiv+1)& (0+255),b
 18852  015912  6B90               	clrf	(??___ftdiv+2)& (0+255),b
 18853  015914  0101               	movlb	1	; () banked
 18854  015916  3589               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 18855  015918  0101               	movlb	1	; () banked
 18856  01591A  378E               	rlcf	??___ftdiv& (0+255),f,b
 18857  01591C  E301               	bnc	u14521
 18858  01591E  818F               	bsf	(??___ftdiv+1)& (0+255),0,b
 18859  015920                     u14521:
 18860  015920  0101               	movlb	1	; () banked
 18861  015922  518E               	movf	??___ftdiv& (0+255),w,b
 18862  015924  0101               	movlb	1	; () banked
 18863  015926  6F95               	movwf	___ftdiv@exp& (0+255),b
 18864  015928  0101               	movlb	1	; () banked
 18865  01592A  6795               	tstfsz	___ftdiv@exp& (0+255),b
 18866  01592C  D00A               	goto	l11350
 18867                           
 18868                           ; BSR set to: 1
 18869  01592E  0E00               	movlw	0
 18870  015930  0101               	movlb	1	; () banked
 18871  015932  6F88               	movwf	?___ftdiv& (0+255),b
 18872  015934  0E00               	movlw	0
 18873  015936  0101               	movlb	1	; () banked
 18874  015938  6F89               	movwf	(?___ftdiv+1)& (0+255),b
 18875  01593A  0E00               	movlw	0
 18876  01593C  0101               	movlb	1	; () banked
 18877  01593E  6F8A               	movwf	(?___ftdiv+2)& (0+255),b
 18878  015940  0012               	return	
 18879  015942                     l11350:
 18880                           
 18881                           ; BSR set to: 1
 18882  015942  0101               	movlb	1	; () banked
 18883  015944  C18D  F18E         	movff	___ftdiv@f2+2,??___ftdiv
 18884  015948  0101               	movlb	1	; () banked
 18885  01594A  6B8F               	clrf	(??___ftdiv+1)& (0+255),b
 18886  01594C  6B90               	clrf	(??___ftdiv+2)& (0+255),b
 18887  01594E  0101               	movlb	1	; () banked
 18888  015950  358C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 18889  015952  0101               	movlb	1	; () banked
 18890  015954  378E               	rlcf	??___ftdiv& (0+255),f,b
 18891  015956  E301               	bnc	u14541
 18892  015958  818F               	bsf	(??___ftdiv+1)& (0+255),0,b
 18893  01595A                     u14541:
 18894  01595A  0101               	movlb	1	; () banked
 18895  01595C  518E               	movf	??___ftdiv& (0+255),w,b
 18896  01595E  0101               	movlb	1	; () banked
 18897  015960  6F96               	movwf	___ftdiv@sign& (0+255),b
 18898  015962  0101               	movlb	1	; () banked
 18899  015964  6796               	tstfsz	___ftdiv@sign& (0+255),b
 18900  015966  D00A               	goto	l11356
 18901                           
 18902                           ; BSR set to: 1
 18903  015968  0E00               	movlw	0
 18904  01596A  0101               	movlb	1	; () banked
 18905  01596C  6F88               	movwf	?___ftdiv& (0+255),b
 18906  01596E  0E00               	movlw	0
 18907  015970  0101               	movlb	1	; () banked
 18908  015972  6F89               	movwf	(?___ftdiv+1)& (0+255),b
 18909  015974  0E00               	movlw	0
 18910  015976  0101               	movlb	1	; () banked
 18911  015978  6F8A               	movwf	(?___ftdiv+2)& (0+255),b
 18912  01597A  0012               	return	
 18913  01597C                     l11356:
 18914                           
 18915                           ; BSR set to: 1
 18916  01597C  0E00               	movlw	0
 18917  01597E  0101               	movlb	1	; () banked
 18918  015980  6F92               	movwf	___ftdiv@f3& (0+255),b
 18919  015982  0E00               	movlw	0
 18920  015984  0101               	movlb	1	; () banked
 18921  015986  6F93               	movwf	(___ftdiv@f3+1)& (0+255),b
 18922  015988  0E00               	movlw	0
 18923  01598A  0101               	movlb	1	; () banked
 18924  01598C  6F94               	movwf	(___ftdiv@f3+2)& (0+255),b
 18925                           
 18926                           ; BSR set to: 1
 18927  01598E  0101               	movlb	1	; () banked
 18928  015990  5196               	movf	___ftdiv@sign& (0+255),w,b
 18929  015992  0F89               	addlw	137
 18930  015994  0101               	movlb	1	; () banked
 18931  015996  5F95               	subwf	___ftdiv@exp& (0+255),f,b
 18932                           
 18933                           ; BSR set to: 1
 18934  015998  C18A  F196         	movff	___ftdiv@f1+2,___ftdiv@sign
 18935                           
 18936                           ; BSR set to: 1
 18937  01599C  0101               	movlb	1	; () banked
 18938  01599E  518D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 18939  0159A0  0101               	movlb	1	; () banked
 18940  0159A2  1B96               	xorwf	___ftdiv@sign& (0+255),f,b
 18941                           
 18942                           ; BSR set to: 1
 18943  0159A4  0E80               	movlw	128
 18944  0159A6  0101               	movlb	1	; () banked
 18945  0159A8  1796               	andwf	___ftdiv@sign& (0+255),f,b
 18946                           
 18947                           ; BSR set to: 1
 18948  0159AA  0101               	movlb	1	; () banked
 18949  0159AC  8F89               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 18950                           
 18951                           ; BSR set to: 1
 18952  0159AE  0EFF               	movlw	255
 18953  0159B0  0101               	movlb	1	; () banked
 18954  0159B2  1788               	andwf	___ftdiv@f1& (0+255),f,b
 18955  0159B4  0EFF               	movlw	255
 18956  0159B6  0101               	movlb	1	; () banked
 18957  0159B8  1789               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 18958  0159BA  0E00               	movlw	0
 18959  0159BC  0101               	movlb	1	; () banked
 18960  0159BE  178A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 18961                           
 18962                           ; BSR set to: 1
 18963  0159C0  0101               	movlb	1	; () banked
 18964  0159C2  8F8C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 18965                           
 18966                           ; BSR set to: 1
 18967  0159C4  0EFF               	movlw	255
 18968  0159C6  0101               	movlb	1	; () banked
 18969  0159C8  178B               	andwf	___ftdiv@f2& (0+255),f,b
 18970  0159CA  0EFF               	movlw	255
 18971  0159CC  0101               	movlb	1	; () banked
 18972  0159CE  178C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 18973  0159D0  0E00               	movlw	0
 18974  0159D2  0101               	movlb	1	; () banked
 18975  0159D4  178D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 18976                           
 18977                           ; BSR set to: 1
 18978  0159D6  0E18               	movlw	24
 18979  0159D8  0101               	movlb	1	; () banked
 18980  0159DA  6F91               	movwf	___ftdiv@cntr& (0+255),b
 18981  0159DC                     l11376:
 18982                           
 18983                           ; BSR set to: 1
 18984  0159DC  0101               	movlb	1	; () banked
 18985  0159DE  90D8               	bcf	status,0,c
 18986  0159E0  0101               	movlb	1	; () banked
 18987  0159E2  3792               	rlcf	___ftdiv@f3& (0+255),f,b
 18988  0159E4  0101               	movlb	1	; () banked
 18989  0159E6  3793               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 18990  0159E8  0101               	movlb	1	; () banked
 18991  0159EA  3794               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 18992                           
 18993                           ; BSR set to: 1
 18994  0159EC  0101               	movlb	1	; () banked
 18995  0159EE  518B               	movf	___ftdiv@f2& (0+255),w,b
 18996  0159F0  0101               	movlb	1	; () banked
 18997  0159F2  5D88               	subwf	___ftdiv@f1& (0+255),w,b
 18998  0159F4  0101               	movlb	1	; () banked
 18999  0159F6  518C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 19000  0159F8  0101               	movlb	1	; () banked
 19001  0159FA  5989               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 19002  0159FC  0101               	movlb	1	; () banked
 19003  0159FE  518D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 19004  015A00  0101               	movlb	1	; () banked
 19005  015A02  598A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 19006  015A04  A0D8               	btfss	status,0,c
 19007  015A06  D00E               	goto	l2058
 19008                           
 19009                           ; BSR set to: 1
 19010  015A08  0101               	movlb	1	; () banked
 19011  015A0A  518B               	movf	___ftdiv@f2& (0+255),w,b
 19012  015A0C  0101               	movlb	1	; () banked
 19013  015A0E  5F88               	subwf	___ftdiv@f1& (0+255),f,b
 19014  015A10  0101               	movlb	1	; () banked
 19015  015A12  518C               	movf	(___ftdiv@f2+1)& (0+255),w,b
 19016  015A14  0101               	movlb	1	; () banked
 19017  015A16  5B89               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 19018  015A18  0101               	movlb	1	; () banked
 19019  015A1A  518D               	movf	(___ftdiv@f2+2)& (0+255),w,b
 19020  015A1C  0101               	movlb	1	; () banked
 19021  015A1E  5B8A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 19022                           
 19023                           ; BSR set to: 1
 19024  015A20  0101               	movlb	1	; () banked
 19025  015A22  8192               	bsf	___ftdiv@f3& (0+255),0,b
 19026  015A24                     l2058:
 19027                           
 19028                           ; BSR set to: 1
 19029  015A24  0101               	movlb	1	; () banked
 19030  015A26  90D8               	bcf	status,0,c
 19031  015A28  0101               	movlb	1	; () banked
 19032  015A2A  3788               	rlcf	___ftdiv@f1& (0+255),f,b
 19033  015A2C  0101               	movlb	1	; () banked
 19034  015A2E  3789               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 19035  015A30  0101               	movlb	1	; () banked
 19036  015A32  378A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 19037                           
 19038                           ; BSR set to: 1
 19039  015A34  0101               	movlb	1	; () banked
 19040  015A36  2F91               	decfsz	___ftdiv@cntr& (0+255),f,b
 19041  015A38  D7D1               	goto	l11376
 19042                           
 19043                           ; BSR set to: 1
 19044                           
 19045                           ; BSR set to: 1
 19046  015A3A  C192  F17C         	movff	___ftdiv@f3,___ftpack@arg
 19047  015A3E  C193  F17D         	movff	___ftdiv@f3+1,___ftpack@arg+1
 19048  015A42  C194  F17E         	movff	___ftdiv@f3+2,___ftpack@arg+2
 19049  015A46  C195  F17F         	movff	___ftdiv@exp,___ftpack@exp
 19050  015A4A  C196  F180         	movff	___ftdiv@sign,___ftpack@sign
 19051  015A4E  ECEA  F0AE         	call	___ftpack	;wreg free
 19052  015A52  C17C  F188         	movff	?___ftpack,?___ftdiv
 19053  015A56  C17D  F189         	movff	?___ftpack+1,?___ftdiv+1
 19054  015A5A  C17E  F18A         	movff	?___ftpack+2,?___ftdiv+2
 19055  015A5E  0012               	return	
 19056  015A60                     __end_of___ftdiv:
 19057                           	opt stack 0
 19058                           tblptru	equ	0xFF8
 19059                           tblptrh	equ	0xFF7
 19060                           tblptrl	equ	0xFF6
 19061                           tablat	equ	0xFF5
 19062                           prodh	equ	0xFF4
 19063                           prodl	equ	0xFF3
 19064                           intcon	equ	0xFF2
 19065                           postinc0	equ	0xFEE
 19066                           wreg	equ	0xFE8
 19067                           indf1	equ	0xFE7
 19068                           postinc1	equ	0xFE6
 19069                           postdec1	equ	0xFE5
 19070                           fsr1h	equ	0xFE2
 19071                           fsr1l	equ	0xFE1
 19072                           indf2	equ	0xFDF
 19073                           postinc2	equ	0xFDE
 19074                           fsr2h	equ	0xFDA
 19075                           fsr2l	equ	0xFD9
 19076                           status	equ	0xFD8
 19077                           
 19078 ;; *************** function ___ftpack *****************
 19079 ;; Defined at:
 19080 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
 19081 ;; Parameters:    Size  Location     Type
 19082 ;;  arg             3   14[BANK1 ] unsigned um
 19083 ;;  exp             1   17[BANK1 ] unsigned char 
 19084 ;;  sign            1   18[BANK1 ] unsigned char 
 19085 ;; Auto vars:     Size  Location     Type
 19086 ;;		None
 19087 ;; Return value:  Size  Location     Type
 19088 ;;                  3   14[BANK1 ] float 
 19089 ;; Registers used:
 19090 ;;		wreg, status,2, status,0
 19091 ;; Tracked objects:
 19092 ;;		On entry : 0/0
 19093 ;;		On exit  : 0/0
 19094 ;;		Unchanged: 0/0
 19095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19096 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 19097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19098 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 19099 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 19100 ;;Total ram usage:        8 bytes
 19101 ;; Hardware stack levels used:    1
 19102 ;; Hardware stack levels required when called:    6
 19103 ;; This function calls:
 19104 ;;		Nothing
 19105 ;; This function is called by:
 19106 ;;		___ftdiv
 19107 ;;		___ftmul
 19108 ;;		___lbtoft
 19109 ;;		___lwtoft
 19110 ;; This function uses a non-reentrant model
 19111 ;;
 19112                           
 19113                           	psect	text30
 19114  015DD4                     __ptext30:
 19115                           	opt stack 0
 19116  015DD4                     ___ftpack:
 19117                           	opt stack 21
 19118                           
 19119                           ;incstack = 0
 19120  015DD4  0101               	movlb	1	; () banked
 19121  015DD6  517F               	movf	___ftpack@exp& (0+255),w,b
 19122  015DD8  B4D8               	btfsc	status,2,c
 19123  015DDA  D008               	goto	l10514
 19124                           
 19125                           ; BSR set to: 1
 19126  015DDC  0101               	movlb	1	; () banked
 19127  015DDE  517C               	movf	___ftpack@arg& (0+255),w,b
 19128  015DE0  0101               	movlb	1	; () banked
 19129  015DE2  117D               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 19130  015DE4  0101               	movlb	1	; () banked
 19131  015DE6  117E               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 19132  015DE8  A4D8               	btfss	status,2,c
 19133  015DEA  D014               	goto	l10520
 19134  015DEC                     l10514:
 19135                           
 19136                           ; BSR set to: 1
 19137  015DEC  0E00               	movlw	0
 19138  015DEE  0101               	movlb	1	; () banked
 19139  015DF0  6F7C               	movwf	?___ftpack& (0+255),b
 19140  015DF2  0E00               	movlw	0
 19141  015DF4  0101               	movlb	1	; () banked
 19142  015DF6  6F7D               	movwf	(?___ftpack+1)& (0+255),b
 19143  015DF8  0E00               	movlw	0
 19144  015DFA  0101               	movlb	1	; () banked
 19145  015DFC  6F7E               	movwf	(?___ftpack+2)& (0+255),b
 19146  015DFE  0012               	return	
 19147  015E00                     l10518:
 19148                           
 19149                           ; BSR set to: 1
 19150  015E00  0101               	movlb	1	; () banked
 19151  015E02  2B7F               	incf	___ftpack@exp& (0+255),f,b
 19152  015E04  0101               	movlb	1	; () banked
 19153  015E06  90D8               	bcf	status,0,c
 19154  015E08  0101               	movlb	1	; () banked
 19155  015E0A  337E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 19156  015E0C  0101               	movlb	1	; () banked
 19157  015E0E  337D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 19158  015E10  0101               	movlb	1	; () banked
 19159  015E12  337C               	rrcf	___ftpack@arg& (0+255),f,b
 19160  015E14                     l10520:
 19161                           
 19162                           ; BSR set to: 1
 19163  015E14  0E00               	movlw	0
 19164  015E16  0101               	movlb	1	; () banked
 19165  015E18  157C               	andwf	___ftpack@arg& (0+255),w,b
 19166  015E1A  0101               	movlb	1	; () banked
 19167  015E1C  6F81               	movwf	??___ftpack& (0+255),b
 19168  015E1E  0E00               	movlw	0
 19169  015E20  0101               	movlb	1	; () banked
 19170  015E22  157D               	andwf	(___ftpack@arg+1)& (0+255),w,b
 19171  015E24  0101               	movlb	1	; () banked
 19172  015E26  6F82               	movwf	(??___ftpack+1)& (0+255),b
 19173  015E28  0EFE               	movlw	254
 19174  015E2A  0101               	movlb	1	; () banked
 19175  015E2C  157E               	andwf	(___ftpack@arg+2)& (0+255),w,b
 19176  015E2E  0101               	movlb	1	; () banked
 19177  015E30  6F83               	movwf	(??___ftpack+2)& (0+255),b
 19178  015E32  0101               	movlb	1	; () banked
 19179  015E34  5181               	movf	??___ftpack& (0+255),w,b
 19180  015E36  1182               	iorwf	(??___ftpack+1)& (0+255),w,b
 19181  015E38  1183               	iorwf	(??___ftpack+2)& (0+255),w,b
 19182  015E3A  B4D8               	btfsc	status,2,c
 19183  015E3C  D014               	goto	l10526
 19184  015E3E  D7E0               	goto	l10518
 19185  015E40                     l10522:
 19186                           
 19187                           ; BSR set to: 1
 19188  015E40  0101               	movlb	1	; () banked
 19189  015E42  2B7F               	incf	___ftpack@exp& (0+255),f,b
 19190                           
 19191                           ; BSR set to: 1
 19192  015E44  0E01               	movlw	1
 19193  015E46  0101               	movlb	1	; () banked
 19194  015E48  277C               	addwf	___ftpack@arg& (0+255),f,b
 19195  015E4A  0E00               	movlw	0
 19196  015E4C  0101               	movlb	1	; () banked
 19197  015E4E  237D               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 19198  015E50  0E00               	movlw	0
 19199  015E52  0101               	movlb	1	; () banked
 19200  015E54  237E               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 19201  015E56  0101               	movlb	1	; () banked
 19202  015E58  90D8               	bcf	status,0,c
 19203  015E5A  0101               	movlb	1	; () banked
 19204  015E5C  337E               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 19205  015E5E  0101               	movlb	1	; () banked
 19206  015E60  337D               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 19207  015E62  0101               	movlb	1	; () banked
 19208  015E64  337C               	rrcf	___ftpack@arg& (0+255),f,b
 19209  015E66                     l10526:
 19210                           
 19211                           ; BSR set to: 1
 19212  015E66  0E00               	movlw	0
 19213  015E68  0101               	movlb	1	; () banked
 19214  015E6A  157C               	andwf	___ftpack@arg& (0+255),w,b
 19215  015E6C  0101               	movlb	1	; () banked
 19216  015E6E  6F81               	movwf	??___ftpack& (0+255),b
 19217  015E70  0E00               	movlw	0
 19218  015E72  0101               	movlb	1	; () banked
 19219  015E74  157D               	andwf	(___ftpack@arg+1)& (0+255),w,b
 19220  015E76  0101               	movlb	1	; () banked
 19221  015E78  6F82               	movwf	(??___ftpack+1)& (0+255),b
 19222  015E7A  0EFF               	movlw	255
 19223  015E7C  0101               	movlb	1	; () banked
 19224  015E7E  157E               	andwf	(___ftpack@arg+2)& (0+255),w,b
 19225  015E80  0101               	movlb	1	; () banked
 19226  015E82  6F83               	movwf	(??___ftpack+2)& (0+255),b
 19227  015E84  0101               	movlb	1	; () banked
 19228  015E86  5181               	movf	??___ftpack& (0+255),w,b
 19229  015E88  1182               	iorwf	(??___ftpack+1)& (0+255),w,b
 19230  015E8A  1183               	iorwf	(??___ftpack+2)& (0+255),w,b
 19231  015E8C  B4D8               	btfsc	status,2,c
 19232  015E8E  D00B               	goto	l10530
 19233  015E90  D7D7               	goto	l10522
 19234  015E92                     l10528:
 19235                           
 19236                           ; BSR set to: 1
 19237  015E92  0101               	movlb	1	; () banked
 19238  015E94  077F               	decf	___ftpack@exp& (0+255),f,b
 19239  015E96  0101               	movlb	1	; () banked
 19240  015E98  90D8               	bcf	status,0,c
 19241  015E9A  0101               	movlb	1	; () banked
 19242  015E9C  377C               	rlcf	___ftpack@arg& (0+255),f,b
 19243  015E9E  0101               	movlb	1	; () banked
 19244  015EA0  377D               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 19245  015EA2  0101               	movlb	1	; () banked
 19246  015EA4  377E               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 19247  015EA6                     l10530:
 19248                           
 19249                           ; BSR set to: 1
 19250  015EA6  0101               	movlb	1	; () banked
 19251  015EA8  AF7D               	btfss	(___ftpack@arg+1)& (0+255),7,b
 19252  015EAA  D7F3               	goto	l10528
 19253                           
 19254                           ; BSR set to: 1
 19255  015EAC  0101               	movlb	1	; () banked
 19256  015EAE  B17F               	btfsc	___ftpack@exp& (0+255),0,b
 19257  015EB0  D002               	goto	l10534
 19258                           
 19259                           ; BSR set to: 1
 19260  015EB2  0101               	movlb	1	; () banked
 19261  015EB4  9F7D               	bcf	(___ftpack@arg+1)& (0+255),7,b
 19262  015EB6                     l10534:
 19263                           
 19264                           ; BSR set to: 1
 19265  015EB6  0101               	movlb	1	; () banked
 19266  015EB8  90D8               	bcf	status,0,c
 19267  015EBA  337F               	rrcf	___ftpack@exp& (0+255),f,b
 19268  015EBC  0101               	movlb	1	; () banked
 19269  015EBE  517F               	movf	___ftpack@exp& (0+255),w,b
 19270  015EC0  0101               	movlb	1	; () banked
 19271  015EC2  137E               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 19272                           
 19273                           ; BSR set to: 1
 19274  015EC4  0101               	movlb	1	; () banked
 19275  015EC6  5180               	movf	___ftpack@sign& (0+255),w,b
 19276  015EC8  B4D8               	btfsc	status,2,c
 19277  015ECA  D002               	goto	l10540
 19278                           
 19279                           ; BSR set to: 1
 19280  015ECC  0101               	movlb	1	; () banked
 19281  015ECE  8F7E               	bsf	(___ftpack@arg+2)& (0+255),7,b
 19282  015ED0                     l10540:
 19283                           
 19284                           ; BSR set to: 1
 19285  015ED0  C17C  F17C         	movff	___ftpack@arg,?___ftpack
 19286  015ED4  C17D  F17D         	movff	___ftpack@arg+1,?___ftpack+1
 19287  015ED8  C17E  F17E         	movff	___ftpack@arg+2,?___ftpack+2
 19288  015EDC  0012               	return	
 19289  015EDE                     __end_of___ftpack:
 19290                           	opt stack 0
 19291                           tblptru	equ	0xFF8
 19292                           tblptrh	equ	0xFF7
 19293                           tblptrl	equ	0xFF6
 19294                           tablat	equ	0xFF5
 19295                           prodh	equ	0xFF4
 19296                           prodl	equ	0xFF3
 19297                           intcon	equ	0xFF2
 19298                           postinc0	equ	0xFEE
 19299                           wreg	equ	0xFE8
 19300                           indf1	equ	0xFE7
 19301                           postinc1	equ	0xFE6
 19302                           postdec1	equ	0xFE5
 19303                           fsr1h	equ	0xFE2
 19304                           fsr1l	equ	0xFE1
 19305                           indf2	equ	0xFDF
 19306                           postinc2	equ	0xFDE
 19307                           fsr2h	equ	0xFDA
 19308                           fsr2l	equ	0xFD9
 19309                           status	equ	0xFD8
 19310                           
 19311 ;; *************** function _SetBaud *****************
 19312 ;; Defined at:
 19313 ;;		line 315 in file "UART.c"
 19314 ;; Parameters:    Size  Location     Type
 19315 ;;  Baud            4   78[BANK1 ] unsigned long 
 19316 ;;  Parity          1   82[BANK1 ] unsigned char 
 19317 ;; Auto vars:     Size  Location     Type
 19318 ;;  buf            50    0[BANK2 ] unsigned char [50]
 19319 ;;  status          1   50[BANK2 ] unsigned char 
 19320 ;; Return value:  Size  Location     Type
 19321 ;;		None               void
 19322 ;; Registers used:
 19323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19324 ;; Tracked objects:
 19325 ;;		On entry : 0/0
 19326 ;;		On exit  : 0/0
 19327 ;;		Unchanged: 0/0
 19328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19329 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 19330 ;;      Locals:         0       0       0      51       0       0       0       0       0       0       0       0       
      +0       0
 19331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19332 ;;      Totals:         0       0       5      51       0       0       0       0       0       0       0       0       
      +0       0
 19333 ;;Total ram usage:       56 bytes
 19334 ;; Hardware stack levels used:    1
 19335 ;; Hardware stack levels required when called:    9
 19336 ;; This function calls:
 19337 ;;		_InitUART
 19338 ;;		_SetMemoryBaud
 19339 ;;		_SetMemoryParity
 19340 ;;		_UARTstring
 19341 ;;		_UARTstringWAIT
 19342 ;;		_delayUS
 19343 ;;		_sprintf
 19344 ;; This function is called by:
 19345 ;;		_Command
 19346 ;; This function uses a non-reentrant model
 19347 ;;
 19348                           
 19349                           	psect	text31
 19350  0148CA                     __ptext31:
 19351                           	opt stack 0
 19352  0148CA                     _SetBaud:
 19353                           	opt stack 19
 19354                           
 19355                           ;UART.c: 317: unsigned char buf[50];
 19356                           ;UART.c: 318: unsigned char status=0;
 19357                           
 19358                           ; BSR set to: 1
 19359                           ;incstack = 0
 19360  0148CA  0E00               	movlw	0
 19361  0148CC  0102               	movlb	2	; () banked
 19362  0148CE  6F32               	movwf	SetBaud@status& (0+255),b
 19363                           
 19364                           ;UART.c: 320: if(Parity)
 19365  0148D0  0101               	movlb	1	; () banked
 19366  0148D2  51C0               	movf	SetBaud@Parity& (0+255),w,b
 19367  0148D4  A4D8               	btfss	status,2,c
 19368  0148D6  D065               	goto	l11914
 19369  0148D8  D070               	goto	l11916
 19370  0148DA                     l11904:
 19371                           
 19372                           ; BSR set to: 1
 19373                           ;UART.c: 325: sprintf(buf,"System Baud will be set to %lu with Odd parity bit\r\n",Baud)
      +                          ;
 19374  0148DA  0102               	movlb	2	; () banked
 19375  0148DC  0E02               	movlw	high SetBaud@buf
 19376  0148DE  0101               	movlb	1	; () banked
 19377  0148E0  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19378  0148E2  0102               	movlb	2	; () banked
 19379  0148E4  0E00               	movlw	low SetBaud@buf
 19380  0148E6  0101               	movlb	1	; () banked
 19381  0148E8  6F92               	movwf	sprintf@sp& (0+255),b
 19382  0148EA  0EF0               	movlw	high STR_23
 19383  0148EC  0101               	movlb	1	; () banked
 19384  0148EE  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19385  0148F0  0E84               	movlw	low STR_23
 19386  0148F2  0101               	movlb	1	; () banked
 19387  0148F4  6F94               	movwf	sprintf@f& (0+255),b
 19388  0148F6  C1BC  F196         	movff	SetBaud@Baud,?_sprintf+4
 19389  0148FA  C1BD  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19390  0148FE  C1BE  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19391  014902  C1BF  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 19392  014906  ECC4  F094         	call	_sprintf	;wreg free
 19393                           
 19394                           ;UART.c: 326: break;
 19395  01490A  D06F               	goto	l11918
 19396  01490C                     l11906:
 19397                           
 19398                           ;UART.c: 328: sprintf(buf,"System Baud will be set to %lu with Even parity bit\r\n",Baud
      +                          );
 19399  01490C  0102               	movlb	2	; () banked
 19400  01490E  0E02               	movlw	high SetBaud@buf
 19401  014910  0101               	movlb	1	; () banked
 19402  014912  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19403  014914  0102               	movlb	2	; () banked
 19404  014916  0E00               	movlw	low SetBaud@buf
 19405  014918  0101               	movlb	1	; () banked
 19406  01491A  6F92               	movwf	sprintf@sp& (0+255),b
 19407  01491C  0EF0               	movlw	high STR_24
 19408  01491E  0101               	movlb	1	; () banked
 19409  014920  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19410  014922  0E18               	movlw	low STR_24
 19411  014924  0101               	movlb	1	; () banked
 19412  014926  6F94               	movwf	sprintf@f& (0+255),b
 19413  014928  C1BC  F196         	movff	SetBaud@Baud,?_sprintf+4
 19414  01492C  C1BD  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19415  014930  C1BE  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19416  014934  C1BF  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 19417  014938  ECC4  F094         	call	_sprintf	;wreg free
 19418                           
 19419                           ;UART.c: 329: break;
 19420  01493C  D056               	goto	l11918
 19421  01493E                     l11908:
 19422                           
 19423                           ;UART.c: 331: sprintf(buf,"System Baud will be set to %lu with Mark bit\r\n",Baud);
 19424  01493E  0102               	movlb	2	; () banked
 19425  014940  0E02               	movlw	high SetBaud@buf
 19426  014942  0101               	movlb	1	; () banked
 19427  014944  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19428  014946  0102               	movlb	2	; () banked
 19429  014948  0E00               	movlw	low SetBaud@buf
 19430  01494A  0101               	movlb	1	; () banked
 19431  01494C  6F92               	movwf	sprintf@sp& (0+255),b
 19432  01494E  0EF1               	movlw	high STR_25
 19433  014950  0101               	movlb	1	; () banked
 19434  014952  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19435  014954  0EB0               	movlw	low STR_25
 19436  014956  0101               	movlb	1	; () banked
 19437  014958  6F94               	movwf	sprintf@f& (0+255),b
 19438  01495A  C1BC  F196         	movff	SetBaud@Baud,?_sprintf+4
 19439  01495E  C1BD  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19440  014962  C1BE  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19441  014966  C1BF  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 19442  01496A  ECC4  F094         	call	_sprintf	;wreg free
 19443                           
 19444                           ;UART.c: 332: break;
 19445  01496E  D03D               	goto	l11918
 19446  014970                     l11910:
 19447                           
 19448                           ;UART.c: 334: sprintf(buf,"System Baud will be set to %lu with Space bit\r\n",Baud);
 19449  014970  0102               	movlb	2	; () banked
 19450  014972  0E02               	movlw	high SetBaud@buf
 19451  014974  0101               	movlb	1	; () banked
 19452  014976  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19453  014978  0102               	movlb	2	; () banked
 19454  01497A  0E00               	movlw	low SetBaud@buf
 19455  01497C  0101               	movlb	1	; () banked
 19456  01497E  6F92               	movwf	sprintf@sp& (0+255),b
 19457  014980  0EF1               	movlw	high STR_26
 19458  014982  0101               	movlb	1	; () banked
 19459  014984  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19460  014986  0E80               	movlw	low STR_26
 19461  014988  0101               	movlb	1	; () banked
 19462  01498A  6F94               	movwf	sprintf@f& (0+255),b
 19463  01498C  C1BC  F196         	movff	SetBaud@Baud,?_sprintf+4
 19464  014990  C1BD  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19465  014994  C1BE  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19466  014998  C1BF  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 19467  01499C  ECC4  F094         	call	_sprintf	;wreg free
 19468                           
 19469                           ;UART.c: 335: break;
 19470  0149A0  D024               	goto	l11918
 19471  0149A2                     l11914:
 19472  0149A2  0101               	movlb	1	; () banked
 19473  0149A4  51C0               	movf	SetBaud@Parity& (0+255),w,b
 19474                           
 19475                           ; Switch size 1, requested type "space"
 19476                           ; Number of cases is 3, Range of values is 1 to 3
 19477                           ; switch strategies available:
 19478                           ; Name         Instructions Cycles
 19479                           ; simple_byte           10     6 (average)
 19480                           ;	Chosen strategy is simple_byte
 19481  0149A6  0A01               	xorlw	1	; case 1
 19482  0149A8  B4D8               	btfsc	status,2,c
 19483  0149AA  D797               	goto	l11904
 19484  0149AC  0A03               	xorlw	3	; case 2
 19485  0149AE  B4D8               	btfsc	status,2,c
 19486  0149B0  D7AD               	goto	l11906
 19487  0149B2  0A01               	xorlw	1	; case 3
 19488  0149B4  B4D8               	btfsc	status,2,c
 19489  0149B6  D7C3               	goto	l11908
 19490  0149B8  D7DB               	goto	l11910
 19491  0149BA                     l11916:
 19492                           
 19493                           ; BSR set to: 1
 19494                           ;UART.c: 338: else
 19495                           ;UART.c: 339: {
 19496                           ;UART.c: 340: sprintf(buf,"System Baud will be set to %lu with no parity bit\r\n",Baud);
 19497  0149BA  0102               	movlb	2	; () banked
 19498  0149BC  0E02               	movlw	high SetBaud@buf
 19499  0149BE  0101               	movlb	1	; () banked
 19500  0149C0  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19501  0149C2  0102               	movlb	2	; () banked
 19502  0149C4  0E00               	movlw	low SetBaud@buf
 19503  0149C6  0101               	movlb	1	; () banked
 19504  0149C8  6F92               	movwf	sprintf@sp& (0+255),b
 19505  0149CA  0EF0               	movlw	high STR_27
 19506  0149CC  0101               	movlb	1	; () banked
 19507  0149CE  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19508  0149D0  0EB9               	movlw	low STR_27
 19509  0149D2  0101               	movlb	1	; () banked
 19510  0149D4  6F94               	movwf	sprintf@f& (0+255),b
 19511  0149D6  C1BC  F196         	movff	SetBaud@Baud,?_sprintf+4
 19512  0149DA  C1BD  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19513  0149DE  C1BE  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19514  0149E2  C1BF  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 19515  0149E6  ECC4  F094         	call	_sprintf	;wreg free
 19516  0149EA                     l11918:
 19517                           
 19518                           ;UART.c: 341: }
 19519                           ;UART.c: 343: status = SetMemoryBaud(Baud);
 19520  0149EA  C1BC  F1A2         	movff	SetBaud@Baud,SetMemoryBaud@Baud
 19521  0149EE  C1BD  F1A3         	movff	SetBaud@Baud+1,SetMemoryBaud@Baud+1
 19522  0149F2  C1BE  F1A4         	movff	SetBaud@Baud+2,SetMemoryBaud@Baud+2
 19523  0149F6  C1BF  F1A5         	movff	SetBaud@Baud+3,SetMemoryBaud@Baud+3
 19524  0149FA  EC5A  F0B0         	call	_SetMemoryBaud	;wreg free
 19525  0149FE  0102               	movlb	2	; () banked
 19526  014A00  6F32               	movwf	SetBaud@status& (0+255),b
 19527                           
 19528                           ; BSR set to: 2
 19529                           ;UART.c: 344: if(status)
 19530  014A02  0102               	movlb	2	; () banked
 19531  014A04  5132               	movf	SetBaud@status& (0+255),w,b
 19532  014A06  B4D8               	btfsc	status,2,c
 19533  014A08  D006               	goto	l491
 19534                           
 19535                           ; BSR set to: 2
 19536                           ;UART.c: 345: {
 19537                           ;UART.c: 347: status = SetMemoryParity(Parity);
 19538  014A0A  0101               	movlb	1	; () banked
 19539  014A0C  51C0               	movf	SetBaud@Parity& (0+255),w,b
 19540  014A0E  EC21  F002         	call	_SetMemoryParity
 19541  014A12  0102               	movlb	2	; () banked
 19542  014A14  6F32               	movwf	SetBaud@status& (0+255),b
 19543  014A16                     l491:
 19544                           
 19545                           ; BSR set to: 2
 19546                           ;UART.c: 348: }
 19547                           ;UART.c: 349: InitUART(Baud, Parity);
 19548  014A16  C1BC  F189         	movff	SetBaud@Baud,InitUART@Baud
 19549  014A1A  C1BD  F18A         	movff	SetBaud@Baud+1,InitUART@Baud+1
 19550  014A1E  C1BE  F18B         	movff	SetBaud@Baud+2,InitUART@Baud+2
 19551  014A22  C1BF  F18C         	movff	SetBaud@Baud+3,InitUART@Baud+3
 19552  014A26  C1C0  F18D         	movff	SetBaud@Parity,InitUART@parity
 19553  014A2A  ECB2  F0A8         	call	_InitUART	;wreg free
 19554                           
 19555                           ;UART.c: 350: UARTstring("\r\n");
 19556  014A2E  0EF6               	movlw	high (STR_282+19)
 19557  014A30  0101               	movlb	1	; () banked
 19558  014A32  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 19559  014A34  0ECE               	movlw	low (STR_282+19)
 19560  014A36  0101               	movlb	1	; () banked
 19561  014A38  6F87               	movwf	UARTstring@data& (0+255),b
 19562  014A3A  ECD0  F0B4         	call	_UARTstring	;wreg free
 19563                           
 19564                           ;UART.c: 351: delayUS(10000);
 19565  014A3E  0E10               	movlw	16
 19566  014A40  0101               	movlb	1	; () banked
 19567  014A42  6F7C               	movwf	delayUS@US& (0+255),b
 19568  014A44  0E27               	movlw	39
 19569  014A46  0101               	movlb	1	; () banked
 19570  014A48  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 19571  014A4A  0E00               	movlw	0
 19572  014A4C  0101               	movlb	1	; () banked
 19573  014A4E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 19574  014A50  0E00               	movlw	0
 19575  014A52  0101               	movlb	1	; () banked
 19576  014A54  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 19577  014A56  ECA4  F0BA         	call	_delayUS	;wreg free
 19578                           
 19579                           ;UART.c: 352: if(!status)
 19580  014A5A  0102               	movlb	2	; () banked
 19581  014A5C  6732               	tstfsz	SetBaud@status& (0+255),b
 19582  014A5E  D016               	goto	l11934
 19583                           
 19584                           ; BSR set to: 2
 19585                           ;UART.c: 353: {
 19586                           ;UART.c: 354: UARTstring("System Program Fail\r\n");
 19587  014A60  0EF6               	movlw	high STR_29
 19588  014A62  0101               	movlb	1	; () banked
 19589  014A64  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 19590  014A66  0EFD               	movlw	low STR_29
 19591  014A68  0101               	movlb	1	; () banked
 19592  014A6A  6F87               	movwf	UARTstring@data& (0+255),b
 19593  014A6C  ECD0  F0B4         	call	_UARTstring	;wreg free
 19594                           
 19595                           ;UART.c: 355: delayUS(10000);
 19596  014A70  0E10               	movlw	16
 19597  014A72  0101               	movlb	1	; () banked
 19598  014A74  6F7C               	movwf	delayUS@US& (0+255),b
 19599  014A76  0E27               	movlw	39
 19600  014A78  0101               	movlb	1	; () banked
 19601  014A7A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 19602  014A7C  0E00               	movlw	0
 19603  014A7E  0101               	movlb	1	; () banked
 19604  014A80  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 19605  014A82  0E00               	movlw	0
 19606  014A84  0101               	movlb	1	; () banked
 19607  014A86  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 19608  014A88  ECA4  F0BA         	call	_delayUS	;wreg free
 19609  014A8C                     l11934:
 19610                           
 19611                           ;UART.c: 356: }
 19612                           ;UART.c: 357: sprintf(buf,"System Baud is %lu",Baud);
 19613  014A8C  0102               	movlb	2	; () banked
 19614  014A8E  0E02               	movlw	high SetBaud@buf
 19615  014A90  0101               	movlb	1	; () banked
 19616  014A92  6F93               	movwf	(sprintf@sp+1)& (0+255),b
 19617  014A94  0102               	movlb	2	; () banked
 19618  014A96  0E00               	movlw	low SetBaud@buf
 19619  014A98  0101               	movlb	1	; () banked
 19620  014A9A  6F92               	movwf	sprintf@sp& (0+255),b
 19621  014A9C  0EF8               	movlw	high STR_30
 19622  014A9E  0101               	movlb	1	; () banked
 19623  014AA0  6F95               	movwf	(sprintf@f+1)& (0+255),b
 19624  014AA2  0E00               	movlw	low STR_30
 19625  014AA4  0101               	movlb	1	; () banked
 19626  014AA6  6F94               	movwf	sprintf@f& (0+255),b
 19627  014AA8  C1BC  F196         	movff	SetBaud@Baud,?_sprintf+4
 19628  014AAC  C1BD  F197         	movff	SetBaud@Baud+1,?_sprintf+5
 19629  014AB0  C1BE  F198         	movff	SetBaud@Baud+2,?_sprintf+6
 19630  014AB4  C1BF  F199         	movff	SetBaud@Baud+3,?_sprintf+7
 19631  014AB8  ECC4  F094         	call	_sprintf	;wreg free
 19632                           
 19633                           ;UART.c: 358: UARTstring(buf);
 19634  014ABC  0102               	movlb	2	; () banked
 19635  014ABE  0E02               	movlw	high SetBaud@buf
 19636  014AC0  0101               	movlb	1	; () banked
 19637  014AC2  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 19638  014AC4  0102               	movlb	2	; () banked
 19639  014AC6  0E00               	movlw	low SetBaud@buf
 19640  014AC8  0101               	movlb	1	; () banked
 19641  014ACA  6F87               	movwf	UARTstring@data& (0+255),b
 19642  014ACC  ECD0  F0B4         	call	_UARTstring	;wreg free
 19643                           
 19644                           ;UART.c: 359: if(Parity)
 19645  014AD0  0101               	movlb	1	; () banked
 19646  014AD2  51C0               	movf	SetBaud@Parity& (0+255),w,b
 19647  014AD4  A4D8               	btfss	status,2,c
 19648  014AD6  D025               	goto	l11952
 19649  014AD8  D030               	goto	l11954
 19650  014ADA                     l11942:
 19651                           
 19652                           ; BSR set to: 1
 19653                           ;UART.c: 364: UARTstringWAIT(" with Odd parity bit\r\n");
 19654  014ADA  0EF0               	movlw	high (STR_23+30)
 19655  014ADC  0101               	movlb	1	; () banked
 19656  014ADE  6F88               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 19657  014AE0  0EA2               	movlw	low (STR_23+30)
 19658  014AE2  0101               	movlb	1	; () banked
 19659  014AE4  6F87               	movwf	UARTstringWAIT@data& (0+255),b
 19660  014AE6  EC69  F0B9         	call	_UARTstringWAIT	;wreg free
 19661                           
 19662                           ;UART.c: 365: break;
 19663  014AEA  D02F               	goto	l11956
 19664  014AEC                     l11944:
 19665                           
 19666                           ;UART.c: 367: UARTstringWAIT(" with Even parity bit\r\n");
 19667  014AEC  0EF0               	movlw	high (STR_24+30)
 19668  014AEE  0101               	movlb	1	; () banked
 19669  014AF0  6F88               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 19670  014AF2  0E36               	movlw	low (STR_24+30)
 19671  014AF4  0101               	movlb	1	; () banked
 19672  014AF6  6F87               	movwf	UARTstringWAIT@data& (0+255),b
 19673  014AF8  EC69  F0B9         	call	_UARTstringWAIT	;wreg free
 19674                           
 19675                           ;UART.c: 368: break;
 19676  014AFC  D026               	goto	l11956
 19677  014AFE                     l11946:
 19678                           
 19679                           ;UART.c: 370: UARTstringWAIT(" with Mark bit\r\n");
 19680  014AFE  0EF1               	movlw	high (STR_25+30)
 19681  014B00  0101               	movlb	1	; () banked
 19682  014B02  6F88               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 19683  014B04  0ECE               	movlw	low (STR_25+30)
 19684  014B06  0101               	movlb	1	; () banked
 19685  014B08  6F87               	movwf	UARTstringWAIT@data& (0+255),b
 19686  014B0A  EC69  F0B9         	call	_UARTstringWAIT	;wreg free
 19687                           
 19688                           ;UART.c: 371: break;
 19689  014B0E  D01D               	goto	l11956
 19690  014B10                     l11948:
 19691                           
 19692                           ;UART.c: 373: UARTstringWAIT(" with Space bit\r\n");
 19693  014B10  0EF1               	movlw	high (STR_26+30)
 19694  014B12  0101               	movlb	1	; () banked
 19695  014B14  6F88               	movwf	(UARTstringWAIT@data+1)& (0+255),b
 19696  014B16  0E9E               	movlw	low (STR_26+30)
 19697  014B18  0101               	movlb	1	; () banked
 19698  014B1A  6F87               	movwf	UARTstringWAIT@data& (0+255),b
 19699  014B1C  EC69  F0B9         	call	_UARTstringWAIT	;wreg free
 19700                           
 19701                           ;UART.c: 374: break;
 19702  014B20  D014               	goto	l11956
 19703  014B22                     l11952:
 19704  014B22  0101               	movlb	1	; () banked
 19705  014B24  51C0               	movf	SetBaud@Parity& (0+255),w,b
 19706                           
 19707                           ; Switch size 1, requested type "space"
 19708                           ; Number of cases is 3, Range of values is 1 to 3
 19709                           ; switch strategies available:
 19710                           ; Name         Instructions Cycles
 19711                           ; simple_byte           10     6 (average)
 19712                           ;	Chosen strategy is simple_byte
 19713  014B26  0A01               	xorlw	1	; case 1
 19714  014B28  B4D8               	btfsc	status,2,c
 19715  014B2A  D7D7               	goto	l11942
 19716  014B2C  0A03               	xorlw	3	; case 2
 19717  014B2E  B4D8               	btfsc	status,2,c
 19718  014B30  D7DD               	goto	l11944
 19719  014B32  0A01               	xorlw	1	; case 3
 19720  014B34  B4D8               	btfsc	status,2,c
 19721  014B36  D7E3               	goto	l11946
 19722  014B38  D7EB               	goto	l11948
 19723  014B3A                     l11954:
 19724                           
 19725                           ; BSR set to: 1
 19726                           ;UART.c: 377: else
 19727                           ;UART.c: 378: {
 19728                           ;UART.c: 379: UARTstring(" with no parity bit\r\n");
 19729  014B3A  0EF0               	movlw	high (STR_27+30)
 19730  014B3C  0101               	movlb	1	; () banked
 19731  014B3E  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 19732  014B40  0ED7               	movlw	low (STR_27+30)
 19733  014B42  0101               	movlb	1	; () banked
 19734  014B44  6F87               	movwf	UARTstring@data& (0+255),b
 19735  014B46  ECD0  F0B4         	call	_UARTstring	;wreg free
 19736  014B4A                     l11956:
 19737                           
 19738                           ;UART.c: 380: }
 19739                           ;UART.c: 382: delayUS(10000);
 19740  014B4A  0E10               	movlw	16
 19741  014B4C  0101               	movlb	1	; () banked
 19742  014B4E  6F7C               	movwf	delayUS@US& (0+255),b
 19743  014B50  0E27               	movlw	39
 19744  014B52  0101               	movlb	1	; () banked
 19745  014B54  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 19746  014B56  0E00               	movlw	0
 19747  014B58  0101               	movlb	1	; () banked
 19748  014B5A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 19749  014B5C  0E00               	movlw	0
 19750  014B5E  0101               	movlb	1	; () banked
 19751  014B60  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 19752  014B62  ECA4  F0BA         	call	_delayUS	;wreg free
 19753  014B66  0012               	return	
 19754  014B68                     __end_of_SetBaud:
 19755                           	opt stack 0
 19756                           tblptru	equ	0xFF8
 19757                           tblptrh	equ	0xFF7
 19758                           tblptrl	equ	0xFF6
 19759                           tablat	equ	0xFF5
 19760                           prodh	equ	0xFF4
 19761                           prodl	equ	0xFF3
 19762                           intcon	equ	0xFF2
 19763                           postinc0	equ	0xFEE
 19764                           wreg	equ	0xFE8
 19765                           indf1	equ	0xFE7
 19766                           postinc1	equ	0xFE6
 19767                           postdec1	equ	0xFE5
 19768                           fsr1h	equ	0xFE2
 19769                           fsr1l	equ	0xFE1
 19770                           indf2	equ	0xFDF
 19771                           postinc2	equ	0xFDE
 19772                           fsr2h	equ	0xFDA
 19773                           fsr2l	equ	0xFD9
 19774                           status	equ	0xFD8
 19775                           
 19776 ;; *************** function _sprintf *****************
 19777 ;; Defined at:
 19778 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 19779 ;; Parameters:    Size  Location     Type
 19780 ;;  sp              2   36[BANK1 ] PTR unsigned char 
 19781 ;;		 -> Command@buf(200), SetBaud@buf(50), 
 19782 ;;  f               2   38[BANK1 ] PTR const unsigned char 
 19783 ;;		 -> STR_323(32), STR_322(35), STR_321(35), STR_300(10), 
 19784 ;;		 -> STR_287(23), STR_286(23), STR_227(23), STR_226(23), 
 19785 ;;		 -> STR_222(16), STR_221(36), STR_209(13), STR_208(20), 
 19786 ;;		 -> STR_207(17), STR_206(29), STR_190(15), STR_189(32), 
 19787 ;;		 -> STR_171(15), STR_170(22), STR_30(19), STR_27(52), 
 19788 ;;		 -> STR_26(48), STR_25(47), STR_24(54), STR_23(53), 
 19789 ;; Auto vars:     Size  Location     Type
 19790 ;;  idx             1   58[BANK1 ] unsigned char 
 19791 ;;  _val            4   71[BANK1 ] struct .
 19792 ;;  flag            2   76[BANK1 ] unsigned short 
 19793 ;;  width           2   69[BANK1 ] int 
 19794 ;;  prec            2   67[BANK1 ] int 
 19795 ;;  ap              2   65[BANK1 ] PTR void [1]
 19796 ;;		 -> ?_sprintf(2), 
 19797 ;;  c               1   75[BANK1 ] char 
 19798 ;; Return value:  Size  Location     Type
 19799 ;;                  2   36[BANK1 ] int 
 19800 ;; Registers used:
 19801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19802 ;; Tracked objects:
 19803 ;;		On entry : 0/0
 19804 ;;		On exit  : 0/0
 19805 ;;		Unchanged: 0/0
 19806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19807 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 19808 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 19809 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 19810 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0
 19811 ;;Total ram usage:       42 bytes
 19812 ;; Hardware stack levels used:    1
 19813 ;; Hardware stack levels required when called:    7
 19814 ;; This function calls:
 19815 ;;		___lldiv
 19816 ;;		___llmod
 19817 ;;		___wmul
 19818 ;;		_isdigit
 19819 ;; This function is called by:
 19820 ;;		_SetBaud
 19821 ;;		_Command
 19822 ;;		_SprintDate
 19823 ;; This function uses a non-reentrant model
 19824 ;;
 19825                           
 19826                           	psect	text32
 19827  012988                     __ptext32:
 19828                           	opt stack 0
 19829  012988                     _sprintf:
 19830                           	opt stack 21
 19831                           
 19832                           ;doprnt.c: 494: va_list ap;
 19833                           ;doprnt.c: 499: signed char c;
 19834                           ;doprnt.c: 501: int width;
 19835                           ;doprnt.c: 504: int prec;
 19836                           ;doprnt.c: 508: unsigned short flag;
 19837                           ;doprnt.c: 527: union {
 19838                           ;doprnt.c: 528: unsigned long _val;
 19839                           ;doprnt.c: 529: struct {
 19840                           ;doprnt.c: 530: const char * _cp;
 19841                           ;doprnt.c: 531: unsigned _len;
 19842                           ;doprnt.c: 532: } _str;
 19843                           ;doprnt.c: 533: } _val;
 19844                           ;doprnt.c: 542: *ap = __va_start();
 19845                           
 19846                           ;incstack = 0
 19847  012988  0101               	movlb	1	; () banked
 19848  01298A  0E01               	movlw	high (?_sprintf+4)
 19849  01298C  0101               	movlb	1	; () banked
 19850  01298E  6FB0               	movwf	(sprintf@ap+1)& (0+255),b
 19851  012990  0101               	movlb	1	; () banked
 19852  012992  0E96               	movlw	low (?_sprintf+4)
 19853  012994  0101               	movlb	1	; () banked
 19854  012996  6FAF               	movwf	sprintf@ap& (0+255),b
 19855                           
 19856                           ;doprnt.c: 545: while(c = *f++) {
 19857  012998  EF28  F09B         	goto	l11106
 19858  01299C                     l10754:
 19859                           
 19860                           ; BSR set to: 1
 19861                           ;doprnt.c: 547: if(c != '%')
 19862  01299C  0101               	movlb	1	; () banked
 19863  01299E  51B9               	movf	sprintf@c& (0+255),w,b
 19864  0129A0  0A25               	xorlw	37
 19865  0129A2  B4D8               	btfsc	status,2,c
 19866  0129A4  D00C               	goto	l10760
 19867                           
 19868                           ; BSR set to: 1
 19869                           ;doprnt.c: 549: {
 19870                           ;doprnt.c: 550: ((*sp++ = (c)));
 19871  0129A6  C192  FFD9         	movff	sprintf@sp,fsr2l
 19872  0129AA  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 19873  0129AE  0101               	movlb	1	; () banked
 19874  0129B0  C1B9  FFDF         	movff	sprintf@c,indf2
 19875                           
 19876                           ; BSR set to: 1
 19877  0129B4  0101               	movlb	1	; () banked
 19878  0129B6  4B92               	infsnz	sprintf@sp& (0+255),f,b
 19879  0129B8  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 19880                           
 19881                           ;doprnt.c: 551: continue;
 19882  0129BA  EF28  F09B         	goto	l11106
 19883  0129BE                     l10760:
 19884                           
 19885                           ; BSR set to: 1
 19886                           ;doprnt.c: 552: }
 19887                           ;doprnt.c: 555: width = 0;
 19888  0129BE  0E00               	movlw	0
 19889  0129C0  0101               	movlb	1	; () banked
 19890  0129C2  6FB4               	movwf	(sprintf@width+1)& (0+255),b
 19891  0129C4  0E00               	movlw	0
 19892  0129C6  0101               	movlb	1	; () banked
 19893  0129C8  6FB3               	movwf	sprintf@width& (0+255),b
 19894                           
 19895                           ;doprnt.c: 557: flag = 0;
 19896  0129CA  0E00               	movlw	0
 19897  0129CC  0101               	movlb	1	; () banked
 19898  0129CE  6FBB               	movwf	(sprintf@flag+1)& (0+255),b
 19899  0129D0  0E00               	movlw	0
 19900  0129D2  0101               	movlb	1	; () banked
 19901  0129D4  6FBA               	movwf	sprintf@flag& (0+255),b
 19902  0129D6  D00E               	goto	l10772
 19903  0129D8                     l10762:
 19904                           
 19905                           ; BSR set to: 1
 19906                           ;doprnt.c: 563: flag |= 0x08;
 19907  0129D8  0101               	movlb	1	; () banked
 19908  0129DA  87BA               	bsf	sprintf@flag& (0+255),3,b
 19909  0129DC  D008               	goto	L20
 19910  0129DE                     l10764:
 19911                           
 19912                           ; BSR set to: 1
 19913                           ;doprnt.c: 570: flag |= 0x01;
 19914  0129DE  0101               	movlb	1	; () banked
 19915  0129E0  81BA               	bsf	sprintf@flag& (0+255),0,b
 19916  0129E2  D005               	goto	L20
 19917  0129E4                     l10766:
 19918                           
 19919                           ; BSR set to: 1
 19920                           ;doprnt.c: 583: flag |= 0x800;
 19921  0129E4  0101               	movlb	1	; () banked
 19922  0129E6  87BB               	bsf	(sprintf@flag+1)& (0+255),3,b
 19923  0129E8  D002               	goto	L20
 19924  0129EA                     l10768:
 19925                           
 19926                           ; BSR set to: 1
 19927                           ;doprnt.c: 589: flag |= 0x04;
 19928  0129EA  0101               	movlb	1	; () banked
 19929  0129EC  85BA               	bsf	sprintf@flag& (0+255),2,b
 19930  0129EE                     L20:
 19931                           
 19932                           ;doprnt.c: 590: f++;
 19933  0129EE  0101               	movlb	1	; () banked
 19934  0129F0  4B94               	infsnz	sprintf@f& (0+255),f,b
 19935  0129F2  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 19936  0129F4                     l10772:
 19937                           
 19938                           ; BSR set to: 1
 19939  0129F4  0101               	movlb	1	; () banked
 19940  0129F6  C194  FFF6         	movff	sprintf@f,tblptrl
 19941  0129FA  0101               	movlb	1	; () banked
 19942  0129FC  C195  FFF7         	movff	sprintf@f+1,tblptrh
 19943  012A00                     	if	0	;tblptru may be non-zero
 19944  012A00                     	endif
 19945  012A00                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19946  012A00  0E00               	movlw	low (__mediumconst shr (0+16))
 19947  012A02  6EF8               	movwf	tblptru,c
 19948  012A04                     	endif
 19949  012A04  0008               	tblrd		*
 19950  012A06  50F5               	movf	tablat,w,c
 19951                           
 19952                           ; Switch size 1, requested type "space"
 19953                           ; Number of cases is 4, Range of values is 32 to 48
 19954                           ; switch strategies available:
 19955                           ; Name         Instructions Cycles
 19956                           ; simple_byte           13     7 (average)
 19957                           ;	Chosen strategy is simple_byte
 19958  012A08  0A20               	xorlw	32	; case 32
 19959  012A0A  B4D8               	btfsc	status,2,c
 19960  012A0C  D7E8               	goto	l10764
 19961  012A0E  0A03               	xorlw	3	; case 35
 19962  012A10  B4D8               	btfsc	status,2,c
 19963  012A12  D7E8               	goto	l10766
 19964  012A14  0A0E               	xorlw	14	; case 45
 19965  012A16  B4D8               	btfsc	status,2,c
 19966  012A18  D7DF               	goto	l10762
 19967  012A1A  0A1D               	xorlw	29	; case 48
 19968  012A1C  B4D8               	btfsc	status,2,c
 19969  012A1E  D7E5               	goto	l10768
 19970                           
 19971                           ; BSR set to: 1
 19972                           ;doprnt.c: 602: if(flag & 0x08)
 19973                           
 19974                           ; BSR set to: 1
 19975                           ;doprnt.c: 595: }
 19976                           
 19977                           ; BSR set to: 1
 19978                           ;doprnt.c: 594: break;
 19979  012A20  0101               	movlb	1	; () banked
 19980  012A22  A7BA               	btfss	sprintf@flag& (0+255),3,b
 19981  012A24  D002               	goto	l10776
 19982                           
 19983                           ; BSR set to: 1
 19984                           ;doprnt.c: 603: flag &= ~0x04;
 19985  012A26  0101               	movlb	1	; () banked
 19986  012A28  95BA               	bcf	sprintf@flag& (0+255),2,b
 19987  012A2A                     l10776:
 19988                           
 19989                           ; BSR set to: 1
 19990                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 19991  012A2A  0101               	movlb	1	; () banked
 19992  012A2C  C194  FFF6         	movff	sprintf@f,tblptrl
 19993  012A30  0101               	movlb	1	; () banked
 19994  012A32  C195  FFF7         	movff	sprintf@f+1,tblptrh
 19995  012A36                     	if	0	;tblptru may be non-zero
 19996  012A36                     	endif
 19997  012A36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19998  012A36  0E00               	movlw	low (__mediumconst shr (0+16))
 19999  012A38  6EF8               	movwf	tblptru,c
 20000  012A3A                     	endif
 20001  012A3A  0008               	tblrd		*
 20002  012A3C  50F5               	movf	tablat,w,c
 20003  012A3E  ECAF  F002         	call	_isdigit
 20004  012A42  A0D8               	btfss	status,0,c
 20005  012A44  D04C               	goto	l10788
 20006                           
 20007                           ;doprnt.c: 607: width = 0;
 20008  012A46  0E00               	movlw	0
 20009  012A48  0101               	movlb	1	; () banked
 20010  012A4A  6FB4               	movwf	(sprintf@width+1)& (0+255),b
 20011  012A4C  0E00               	movlw	0
 20012  012A4E  0101               	movlb	1	; () banked
 20013  012A50  6FB3               	movwf	sprintf@width& (0+255),b
 20014  012A52                     l10780:
 20015                           
 20016                           ;doprnt.c: 609: width *= 10;
 20017  012A52  C1B3  F17C         	movff	sprintf@width,___wmul@multiplier
 20018  012A56  C1B4  F17D         	movff	sprintf@width+1,___wmul@multiplier+1
 20019  012A5A  0E00               	movlw	0
 20020  012A5C  0101               	movlb	1	; () banked
 20021  012A5E  6F7F               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20022  012A60  0E0A               	movlw	10
 20023  012A62  0101               	movlb	1	; () banked
 20024  012A64  6F7E               	movwf	___wmul@multiplicand& (0+255),b
 20025  012A66  ECD3  F001         	call	___wmul	;wreg free
 20026  012A6A  0101               	movlb	1	; () banked
 20027  012A6C  C17C  F1B3         	movff	?___wmul,sprintf@width
 20028  012A70  0101               	movlb	1	; () banked
 20029  012A72  C17D  F1B4         	movff	?___wmul+1,sprintf@width+1
 20030                           
 20031                           ; BSR set to: 1
 20032                           ;doprnt.c: 610: width += *f++ - '0';
 20033  012A76  0ED0               	movlw	208
 20034  012A78  0101               	movlb	1	; () banked
 20035  012A7A  6FA2               	movwf	??_sprintf& (0+255),b
 20036  012A7C  0EFF               	movlw	255
 20037  012A7E  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 20038  012A80  0101               	movlb	1	; () banked
 20039  012A82  C194  FFF6         	movff	sprintf@f,tblptrl
 20040  012A86  0101               	movlb	1	; () banked
 20041  012A88  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20042  012A8C                     	if	0	;tblptru may be non-zero
 20043  012A8C                     	endif
 20044  012A8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20045  012A8C  0E00               	movlw	low (__mediumconst shr (0+16))
 20046  012A8E  6EF8               	movwf	tblptru,c
 20047  012A90                     	endif
 20048  012A90  0008               	tblrd		*
 20049  012A92  50F5               	movf	tablat,w,c
 20050  012A94  0101               	movlb	1	; () banked
 20051  012A96  6FA4               	movwf	(??_sprintf+2)& (0+255),b
 20052  012A98  6BA5               	clrf	(??_sprintf+3)& (0+255),b
 20053  012A9A  0101               	movlb	1	; () banked
 20054  012A9C  51A2               	movf	??_sprintf& (0+255),w,b
 20055  012A9E  0101               	movlb	1	; () banked
 20056  012AA0  27A4               	addwf	(??_sprintf+2)& (0+255),f,b
 20057  012AA2  0101               	movlb	1	; () banked
 20058  012AA4  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 20059  012AA6  0101               	movlb	1	; () banked
 20060  012AA8  23A5               	addwfc	(??_sprintf+3)& (0+255),f,b
 20061  012AAA  0101               	movlb	1	; () banked
 20062  012AAC  51A4               	movf	(??_sprintf+2)& (0+255),w,b
 20063  012AAE  0101               	movlb	1	; () banked
 20064  012AB0  27B3               	addwf	sprintf@width& (0+255),f,b
 20065  012AB2  0101               	movlb	1	; () banked
 20066  012AB4  51A5               	movf	(??_sprintf+3)& (0+255),w,b
 20067  012AB6  0101               	movlb	1	; () banked
 20068  012AB8  23B4               	addwfc	(sprintf@width+1)& (0+255),f,b
 20069                           
 20070                           ; BSR set to: 1
 20071  012ABA  0101               	movlb	1	; () banked
 20072  012ABC  4B94               	infsnz	sprintf@f& (0+255),f,b
 20073  012ABE  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20074                           
 20075                           ; BSR set to: 1
 20076                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 20077  012AC0  0101               	movlb	1	; () banked
 20078  012AC2  C194  FFF6         	movff	sprintf@f,tblptrl
 20079  012AC6  0101               	movlb	1	; () banked
 20080  012AC8  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20081  012ACC                     	if	0	;tblptru may be non-zero
 20082  012ACC                     	endif
 20083  012ACC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20084  012ACC  0E00               	movlw	low (__mediumconst shr (0+16))
 20085  012ACE  6EF8               	movwf	tblptru,c
 20086  012AD0                     	endif
 20087  012AD0  0008               	tblrd		*
 20088  012AD2  50F5               	movf	tablat,w,c
 20089  012AD4  ECAF  F002         	call	_isdigit
 20090  012AD8  A0D8               	btfss	status,0,c
 20091  012ADA  D021               	goto	l10796
 20092  012ADC  D7BA               	goto	l10780
 20093  012ADE                     l10788:
 20094  012ADE  0101               	movlb	1	; () banked
 20095  012AE0  C194  FFF6         	movff	sprintf@f,tblptrl
 20096  012AE4  0101               	movlb	1	; () banked
 20097  012AE6  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20098  012AEA                     	if	0	;tblptru may be non-zero
 20099  012AEA                     	endif
 20100  012AEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20101  012AEA  0E00               	movlw	low (__mediumconst shr (0+16))
 20102  012AEC  6EF8               	movwf	tblptru,c
 20103  012AEE                     	endif
 20104  012AEE  0008               	tblrd		*
 20105  012AF0  50F5               	movf	tablat,w,c
 20106  012AF2  0A2A               	xorlw	42
 20107  012AF4  A4D8               	btfss	status,2,c
 20108  012AF6  D013               	goto	l10796
 20109                           
 20110                           ; BSR set to: 1
 20111                           ;doprnt.c: 614: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 20112  012AF8  C1AF  FFD9         	movff	sprintf@ap,fsr2l
 20113  012AFC  C1B0  FFDA         	movff	sprintf@ap+1,fsr2h
 20114  012B00  0101               	movlb	1	; () banked
 20115  012B02  CFDE F1B3          	movff	postinc2,sprintf@width
 20116  012B06  0101               	movlb	1	; () banked
 20117  012B08  CFDD F1B4          	movff	postdec2,sprintf@width+1
 20118                           
 20119                           ; BSR set to: 1
 20120  012B0C  0E02               	movlw	2
 20121  012B0E  0101               	movlb	1	; () banked
 20122  012B10  27AF               	addwf	sprintf@ap& (0+255),f,b
 20123  012B12  0E00               	movlw	0
 20124  012B14  0101               	movlb	1	; () banked
 20125  012B16  23B0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20126                           
 20127                           ; BSR set to: 1
 20128                           ;doprnt.c: 615: f++;
 20129  012B18  0101               	movlb	1	; () banked
 20130  012B1A  4B94               	infsnz	sprintf@f& (0+255),f,b
 20131  012B1C  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20132  012B1E                     l10796:
 20133                           
 20134                           ;doprnt.c: 617: }
 20135                           ;doprnt.c: 620: if(*f == '.') {
 20136  012B1E  0101               	movlb	1	; () banked
 20137  012B20  C194  FFF6         	movff	sprintf@f,tblptrl
 20138  012B24  0101               	movlb	1	; () banked
 20139  012B26  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20140  012B2A                     	if	0	;tblptru may be non-zero
 20141  012B2A                     	endif
 20142  012B2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20143  012B2A  0E00               	movlw	low (__mediumconst shr (0+16))
 20144  012B2C  6EF8               	movwf	tblptru,c
 20145  012B2E                     	endif
 20146  012B2E  0008               	tblrd		*
 20147  012B30  50F5               	movf	tablat,w,c
 20148  012B32  0A2E               	xorlw	46
 20149  012B34  A4D8               	btfss	status,2,c
 20150  012B36  D064               	goto	l10816
 20151                           
 20152                           ; BSR set to: 1
 20153                           ;doprnt.c: 621: flag |= 0x4000;
 20154  012B38  0101               	movlb	1	; () banked
 20155  012B3A  8DBB               	bsf	(sprintf@flag+1)& (0+255),6,b
 20156                           
 20157                           ;doprnt.c: 622: f++;
 20158  012B3C  0101               	movlb	1	; () banked
 20159  012B3E  4B94               	infsnz	sprintf@f& (0+255),f,b
 20160  012B40  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20161                           
 20162                           ; BSR set to: 1
 20163                           ;doprnt.c: 624: if(*f == '*') {
 20164  012B42  0101               	movlb	1	; () banked
 20165  012B44  C194  FFF6         	movff	sprintf@f,tblptrl
 20166  012B48  0101               	movlb	1	; () banked
 20167  012B4A  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20168  012B4E                     	if	0	;tblptru may be non-zero
 20169  012B4E                     	endif
 20170  012B4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20171  012B4E  0E00               	movlw	low (__mediumconst shr (0+16))
 20172  012B50  6EF8               	movwf	tblptru,c
 20173  012B52                     	endif
 20174  012B52  0008               	tblrd		*
 20175  012B54  50F5               	movf	tablat,w,c
 20176  012B56  0A2A               	xorlw	42
 20177  012B58  A4D8               	btfss	status,2,c
 20178  012B5A  D014               	goto	l10808
 20179                           
 20180                           ; BSR set to: 1
 20181                           ;doprnt.c: 625: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 20182  012B5C  C1AF  FFD9         	movff	sprintf@ap,fsr2l
 20183  012B60  C1B0  FFDA         	movff	sprintf@ap+1,fsr2h
 20184  012B64  0101               	movlb	1	; () banked
 20185  012B66  CFDE F1B1          	movff	postinc2,sprintf@prec
 20186  012B6A  0101               	movlb	1	; () banked
 20187  012B6C  CFDD F1B2          	movff	postdec2,sprintf@prec+1
 20188                           
 20189                           ; BSR set to: 1
 20190  012B70  0E02               	movlw	2
 20191  012B72  0101               	movlb	1	; () banked
 20192  012B74  27AF               	addwf	sprintf@ap& (0+255),f,b
 20193  012B76  0E00               	movlw	0
 20194  012B78  0101               	movlb	1	; () banked
 20195  012B7A  23B0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20196                           
 20197                           ; BSR set to: 1
 20198                           ;doprnt.c: 626: f++;
 20199  012B7C  0101               	movlb	1	; () banked
 20200  012B7E  4B94               	infsnz	sprintf@f& (0+255),f,b
 20201  012B80  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20202                           
 20203                           ;doprnt.c: 627: } else
 20204  012B82  D0E9               	goto	l10874
 20205  012B84                     l10808:
 20206                           
 20207                           ; BSR set to: 1
 20208                           ;doprnt.c: 629: {
 20209                           ;doprnt.c: 630: prec = 0;
 20210  012B84  0E00               	movlw	0
 20211  012B86  0101               	movlb	1	; () banked
 20212  012B88  6FB2               	movwf	(sprintf@prec+1)& (0+255),b
 20213  012B8A  0E00               	movlw	0
 20214  012B8C  0101               	movlb	1	; () banked
 20215  012B8E  6FB1               	movwf	sprintf@prec& (0+255),b
 20216                           
 20217                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 20218  012B90  D028               	goto	l10814
 20219  012B92                     l10810:
 20220                           
 20221                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 20222  012B92  C1B1  F17C         	movff	sprintf@prec,___wmul@multiplier
 20223  012B96  C1B2  F17D         	movff	sprintf@prec+1,___wmul@multiplier+1
 20224  012B9A  0E00               	movlw	0
 20225  012B9C  0101               	movlb	1	; () banked
 20226  012B9E  6F7F               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20227  012BA0  0E0A               	movlw	10
 20228  012BA2  0101               	movlb	1	; () banked
 20229  012BA4  6F7E               	movwf	___wmul@multiplicand& (0+255),b
 20230  012BA6  ECD3  F001         	call	___wmul	;wreg free
 20231  012BAA  0101               	movlb	1	; () banked
 20232  012BAC  C194  FFF6         	movff	sprintf@f,tblptrl
 20233  012BB0  0101               	movlb	1	; () banked
 20234  012BB2  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20235  012BB6                     	if	0	;tblptru may be non-zero
 20236  012BB6                     	endif
 20237  012BB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20238  012BB6  0E00               	movlw	low (__mediumconst shr (0+16))
 20239  012BB8  6EF8               	movwf	tblptru,c
 20240  012BBA                     	endif
 20241  012BBA  0008               	tblrd		*
 20242  012BBC  50F5               	movf	tablat,w,c
 20243  012BBE  0101               	movlb	1	; () banked
 20244  012BC0  277C               	addwf	?___wmul& (0+255),f,b
 20245  012BC2  0E00               	movlw	0
 20246  012BC4  0101               	movlb	1	; () banked
 20247  012BC6  237D               	addwfc	(?___wmul+1)& (0+255),f,b
 20248  012BC8  0ED0               	movlw	208
 20249  012BCA  0101               	movlb	1	; () banked
 20250  012BCC  257C               	addwf	?___wmul& (0+255),w,b
 20251  012BCE  0101               	movlb	1	; () banked
 20252  012BD0  6FB1               	movwf	sprintf@prec& (0+255),b
 20253  012BD2  0EFF               	movlw	255
 20254  012BD4  0101               	movlb	1	; () banked
 20255  012BD6  217D               	addwfc	(?___wmul+1)& (0+255),w,b
 20256  012BD8  0101               	movlb	1	; () banked
 20257  012BDA  6FB2               	movwf	(sprintf@prec+1)& (0+255),b
 20258                           
 20259                           ; BSR set to: 1
 20260  012BDC  0101               	movlb	1	; () banked
 20261  012BDE  4B94               	infsnz	sprintf@f& (0+255),f,b
 20262  012BE0  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20263  012BE2                     l10814:
 20264                           
 20265                           ; BSR set to: 1
 20266  012BE2  0101               	movlb	1	; () banked
 20267  012BE4  C194  FFF6         	movff	sprintf@f,tblptrl
 20268  012BE8  0101               	movlb	1	; () banked
 20269  012BEA  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20270  012BEE                     	if	0	;tblptru may be non-zero
 20271  012BEE                     	endif
 20272  012BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20273  012BEE  0E00               	movlw	low (__mediumconst shr (0+16))
 20274  012BF0  6EF8               	movwf	tblptru,c
 20275  012BF2                     	endif
 20276  012BF2  0008               	tblrd		*
 20277  012BF4  50F5               	movf	tablat,w,c
 20278  012BF6  ECAF  F002         	call	_isdigit
 20279  012BFA  A0D8               	btfss	status,0,c
 20280  012BFC  D0AC               	goto	l10874
 20281  012BFE  D7C9               	goto	l10810
 20282  012C00                     l10816:
 20283                           
 20284                           ;doprnt.c: 635: prec = 0;
 20285  012C00  0E00               	movlw	0
 20286  012C02  0101               	movlb	1	; () banked
 20287  012C04  6FB2               	movwf	(sprintf@prec+1)& (0+255),b
 20288  012C06  0E00               	movlw	0
 20289  012C08  0101               	movlb	1	; () banked
 20290  012C0A  6FB1               	movwf	sprintf@prec& (0+255),b
 20291  012C0C  D0A4               	goto	l10874
 20292  012C0E                     l10818:
 20293                           
 20294                           ; BSR set to: 1
 20295                           ;doprnt.c: 652: flag |= 0x10;
 20296  012C0E  0101               	movlb	1	; () banked
 20297  012C10  89BA               	bsf	sprintf@flag& (0+255),4,b
 20298                           
 20299                           ;doprnt.c: 653: goto loop;
 20300  012C12  D0A1               	goto	l10874
 20301  012C14                     l10820:
 20302                           
 20303                           ; BSR set to: 1
 20304                           ;doprnt.c: 700: flag |= 0x40;
 20305  012C14  0101               	movlb	1	; () banked
 20306  012C16  8DBA               	bsf	sprintf@flag& (0+255),6,b
 20307                           
 20308                           ;doprnt.c: 702: break;
 20309  012C18  D0CC               	goto	l10876
 20310  012C1A                     l10822:
 20311                           
 20312                           ; BSR set to: 1
 20313                           ;doprnt.c: 723: flag |= 0x20;
 20314  012C1A  0101               	movlb	1	; () banked
 20315  012C1C  8BBA               	bsf	sprintf@flag& (0+255),5,b
 20316  012C1E                     l1574:
 20317                           
 20318                           ; BSR set to: 1
 20319                           ;doprnt.c: 730: flag |= 0x80;
 20320  012C1E  0101               	movlb	1	; () banked
 20321  012C20  8FBA               	bsf	sprintf@flag& (0+255),7,b
 20322                           
 20323                           ;doprnt.c: 732: break;
 20324  012C22  D0C7               	goto	l10876
 20325  012C24                     l10824:
 20326                           
 20327                           ; BSR set to: 1
 20328                           ;doprnt.c: 762: if(prec && prec < _val._str._len)
 20329  012C24  0101               	movlb	1	; () banked
 20330  012C26  51B2               	movf	(sprintf@prec+1)& (0+255),w,b
 20331  012C28  11B1               	iorwf	sprintf@prec& (0+255),w,b
 20332  012C2A  B4D8               	btfsc	status,2,c
 20333  012C2C  D00E               	goto	l10830
 20334                           
 20335                           ; BSR set to: 1
 20336  012C2E  0101               	movlb	1	; () banked
 20337  012C30  51B7               	movf	(sprintf@_val+2)& (0+255),w,b
 20338  012C32  0101               	movlb	1	; () banked
 20339  012C34  5DB1               	subwf	sprintf@prec& (0+255),w,b
 20340  012C36  0101               	movlb	1	; () banked
 20341  012C38  51B8               	movf	(sprintf@_val+3)& (0+255),w,b
 20342  012C3A  0101               	movlb	1	; () banked
 20343  012C3C  59B2               	subwfb	(sprintf@prec+1)& (0+255),w,b
 20344  012C3E  B0D8               	btfsc	status,0,c
 20345  012C40  D004               	goto	l10830
 20346                           
 20347                           ; BSR set to: 1
 20348                           ;doprnt.c: 763: _val._str._len = prec;
 20349  012C42  C1B1  F1B7         	movff	sprintf@prec,sprintf@_val+2
 20350  012C46  C1B2  F1B8         	movff	sprintf@prec+1,sprintf@_val+3
 20351  012C4A                     l10830:
 20352                           
 20353                           ; BSR set to: 1
 20354                           ;doprnt.c: 766: if(width > _val._str._len)
 20355  012C4A  0101               	movlb	1	; () banked
 20356  012C4C  51B3               	movf	sprintf@width& (0+255),w,b
 20357  012C4E  0101               	movlb	1	; () banked
 20358  012C50  5DB7               	subwf	(sprintf@_val+2)& (0+255),w,b
 20359  012C52  0101               	movlb	1	; () banked
 20360  012C54  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 20361  012C56  0101               	movlb	1	; () banked
 20362  012C58  59B8               	subwfb	(sprintf@_val+3)& (0+255),w,b
 20363  012C5A  B0D8               	btfsc	status,0,c
 20364  012C5C  D00A               	goto	l10834
 20365                           
 20366                           ; BSR set to: 1
 20367                           ;doprnt.c: 767: width -= _val._str._len;
 20368  012C5E  0101               	movlb	1	; () banked
 20369  012C60  EE21  F0B7         	lfsr	2,sprintf@_val+2
 20370  012C64  50DE               	movf	postinc2,w,c
 20371  012C66  0101               	movlb	1	; () banked
 20372  012C68  5FB3               	subwf	sprintf@width& (0+255),f,b
 20373  012C6A  50DD               	movf	postdec2,w,c
 20374  012C6C  0101               	movlb	1	; () banked
 20375  012C6E  5BB4               	subwfb	(sprintf@width+1)& (0+255),f,b
 20376  012C70  D006               	goto	l10836
 20377  012C72                     l10834:
 20378                           
 20379                           ; BSR set to: 1
 20380                           ;doprnt.c: 768: else
 20381                           ;doprnt.c: 769: width = 0;
 20382  012C72  0E00               	movlw	0
 20383  012C74  0101               	movlb	1	; () banked
 20384  012C76  6FB4               	movwf	(sprintf@width+1)& (0+255),b
 20385  012C78  0E00               	movlw	0
 20386  012C7A  0101               	movlb	1	; () banked
 20387  012C7C  6FB3               	movwf	sprintf@width& (0+255),b
 20388  012C7E                     l10836:
 20389                           
 20390                           ; BSR set to: 1
 20391                           ;doprnt.c: 771: if(!(flag & 0x08))
 20392  012C7E  0101               	movlb	1	; () banked
 20393  012C80  A7BA               	btfss	sprintf@flag& (0+255),3,b
 20394  012C82  D00A               	goto	l10844
 20395  012C84  D024               	goto	l10852
 20396  012C86                     l10840:
 20397                           
 20398                           ; BSR set to: 1
 20399                           ;doprnt.c: 774: ((*sp++ = (' ')));
 20400  012C86  C192  FFD9         	movff	sprintf@sp,fsr2l
 20401  012C8A  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 20402  012C8E  0E20               	movlw	32
 20403  012C90  6EDF               	movwf	indf2,c
 20404                           
 20405                           ; BSR set to: 1
 20406  012C92  0101               	movlb	1	; () banked
 20407  012C94  4B92               	infsnz	sprintf@sp& (0+255),f,b
 20408  012C96  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 20409  012C98                     l10844:
 20410                           
 20411                           ; BSR set to: 1
 20412  012C98  0101               	movlb	1	; () banked
 20413  012C9A  07B3               	decf	sprintf@width& (0+255),f,b
 20414  012C9C  A0D8               	btfss	status,0,c
 20415  012C9E  07B4               	decf	(sprintf@width+1)& (0+255),f,b
 20416  012CA0  0101               	movlb	1	; () banked
 20417  012CA2  29B3               	incf	sprintf@width& (0+255),w,b
 20418  012CA4  B4D8               	btfsc	status,2,c
 20419  012CA6  29B4               	incf	(sprintf@width+1)& (0+255),w,b
 20420  012CA8  B4D8               	btfsc	status,2,c
 20421  012CAA  D011               	goto	l10852
 20422  012CAC  D7EC               	goto	l10840
 20423  012CAE                     l10846:
 20424                           
 20425                           ; BSR set to: 1
 20426                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)));
 20427  012CAE  C1B5  FFD9         	movff	sprintf@_val,fsr2l
 20428  012CB2  C1B6  FFDA         	movff	sprintf@_val+1,fsr2h
 20429  012CB6  C192  FFE1         	movff	sprintf@sp,fsr1l
 20430  012CBA  C193  FFE2         	movff	sprintf@sp+1,fsr1h
 20431  012CBE  CFDF FFE7          	movff	indf2,indf1
 20432                           
 20433                           ; BSR set to: 1
 20434  012CC2  0101               	movlb	1	; () banked
 20435  012CC4  4BB5               	infsnz	sprintf@_val& (0+255),f,b
 20436  012CC6  2BB6               	incf	(sprintf@_val+1)& (0+255),f,b
 20437                           
 20438                           ; BSR set to: 1
 20439  012CC8  0101               	movlb	1	; () banked
 20440  012CCA  4B92               	infsnz	sprintf@sp& (0+255),f,b
 20441  012CCC  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 20442  012CCE                     l10852:
 20443                           
 20444                           ; BSR set to: 1
 20445  012CCE  0101               	movlb	1	; () banked
 20446  012CD0  07B7               	decf	(sprintf@_val+2)& (0+255),f,b
 20447  012CD2  A0D8               	btfss	status,0,c
 20448  012CD4  07B8               	decf	(sprintf@_val+3)& (0+255),f,b
 20449  012CD6  0101               	movlb	1	; () banked
 20450  012CD8  29B7               	incf	(sprintf@_val+2)& (0+255),w,b
 20451  012CDA  B4D8               	btfsc	status,2,c
 20452  012CDC  29B8               	incf	(sprintf@_val+3)& (0+255),w,b
 20453  012CDE  A4D8               	btfss	status,2,c
 20454  012CE0  D7E6               	goto	l10846
 20455                           
 20456                           ; BSR set to: 1
 20457                           ;doprnt.c: 779: if(flag & 0x08)
 20458  012CE2  0101               	movlb	1	; () banked
 20459  012CE4  B7BA               	btfsc	sprintf@flag& (0+255),3,b
 20460  012CE6  D00B               	goto	l10860
 20461  012CE8  EF28  F09B         	goto	l11106
 20462  012CEC                     l10856:
 20463                           
 20464                           ; BSR set to: 1
 20465                           ;doprnt.c: 781: ((*sp++ = (' ')));
 20466  012CEC  C192  FFD9         	movff	sprintf@sp,fsr2l
 20467  012CF0  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 20468  012CF4  0E20               	movlw	32
 20469  012CF6  6EDF               	movwf	indf2,c
 20470                           
 20471                           ; BSR set to: 1
 20472  012CF8  0101               	movlb	1	; () banked
 20473  012CFA  4B92               	infsnz	sprintf@sp& (0+255),f,b
 20474  012CFC  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 20475  012CFE                     l10860:
 20476                           
 20477                           ; BSR set to: 1
 20478  012CFE  0101               	movlb	1	; () banked
 20479  012D00  07B3               	decf	sprintf@width& (0+255),f,b
 20480  012D02  A0D8               	btfss	status,0,c
 20481  012D04  07B4               	decf	(sprintf@width+1)& (0+255),f,b
 20482  012D06  0101               	movlb	1	; () banked
 20483  012D08  29B3               	incf	sprintf@width& (0+255),w,b
 20484  012D0A  B4D8               	btfsc	status,2,c
 20485  012D0C  29B4               	incf	(sprintf@width+1)& (0+255),w,b
 20486  012D0E  B4D8               	btfsc	status,2,c
 20487  012D10  EF28  F09B         	goto	l11106
 20488  012D14  D7EB               	goto	l10856
 20489  012D16                     l10862:
 20490                           
 20491                           ; BSR set to: 1
 20492                           ;doprnt.c: 808: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 20493  012D16  C1AF  FFD9         	movff	sprintf@ap,fsr2l
 20494  012D1A  C1B0  FFDA         	movff	sprintf@ap+1,fsr2h
 20495  012D1E  50DF               	movf	indf2,w,c
 20496  012D20  0101               	movlb	1	; () banked
 20497  012D22  6FB9               	movwf	sprintf@c& (0+255),b
 20498                           
 20499                           ; BSR set to: 1
 20500  012D24  0E02               	movlw	2
 20501  012D26  0101               	movlb	1	; () banked
 20502  012D28  27AF               	addwf	sprintf@ap& (0+255),f,b
 20503  012D2A  0E00               	movlw	0
 20504  012D2C  0101               	movlb	1	; () banked
 20505  012D2E  23B0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20506  012D30                     l10866:
 20507                           
 20508                           ; BSR set to: 1
 20509                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
 20510  012D30  0101               	movlb	1	; () banked
 20511  012D32  0E01               	movlw	high sprintf@c
 20512  012D34  0101               	movlb	1	; () banked
 20513  012D36  6FB6               	movwf	(sprintf@_val+1)& (0+255),b
 20514  012D38  0101               	movlb	1	; () banked
 20515  012D3A  0EB9               	movlw	low sprintf@c
 20516  012D3C  0101               	movlb	1	; () banked
 20517  012D3E  6FB5               	movwf	sprintf@_val& (0+255),b
 20518                           
 20519                           ; BSR set to: 1
 20520                           ;doprnt.c: 815: _val._str._len = 1;
 20521  012D40  0E00               	movlw	0
 20522  012D42  0101               	movlb	1	; () banked
 20523  012D44  6FB8               	movwf	(sprintf@_val+3)& (0+255),b
 20524  012D46  0E01               	movlw	1
 20525  012D48  0101               	movlb	1	; () banked
 20526  012D4A  6FB7               	movwf	(sprintf@_val+2)& (0+255),b
 20527                           
 20528                           ;doprnt.c: 816: goto dostring;
 20529  012D4C  D76B               	goto	l10824
 20530  012D4E                     l10870:
 20531                           
 20532                           ; BSR set to: 1
 20533                           ;doprnt.c: 827: flag |= 0xC0;
 20534  012D4E  0EC0               	movlw	192
 20535  012D50  0101               	movlb	1	; () banked
 20536  012D52  13BA               	iorwf	sprintf@flag& (0+255),f,b
 20537                           
 20538                           ;doprnt.c: 828: break;
 20539  012D54  D02E               	goto	l10876
 20540  012D56                     l10874:
 20541  012D56  0101               	movlb	1	; () banked
 20542  012D58  C194  FFF6         	movff	sprintf@f,tblptrl
 20543  012D5C  0101               	movlb	1	; () banked
 20544  012D5E  C195  FFF7         	movff	sprintf@f+1,tblptrh
 20545  012D62  0101               	movlb	1	; () banked
 20546  012D64  4B94               	infsnz	sprintf@f& (0+255),f,b
 20547  012D66  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 20548  012D68                     	if	0	;tblptru may be non-zero
 20549  012D68                     	endif
 20550  012D68                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20551  012D68  0E00               	movlw	low (__mediumconst shr (0+16))
 20552  012D6A  6EF8               	movwf	tblptru,c
 20553  012D6C                     	endif
 20554  012D6C  0008               	tblrd		*
 20555  012D6E  0101               	movlb	1	; () banked
 20556  012D70  CFF5 F1B9          	movff	tablat,sprintf@c
 20557  012D74  0101               	movlb	1	; () banked
 20558  012D76  51B9               	movf	sprintf@c& (0+255),w,b
 20559                           
 20560                           ; Switch size 1, requested type "space"
 20561                           ; Number of cases is 9, Range of values is 0 to 120
 20562                           ; switch strategies available:
 20563                           ; Name         Instructions Cycles
 20564                           ; simple_byte           28    15 (average)
 20565                           ;	Chosen strategy is simple_byte
 20566  012D78  0A00               	xorlw	0	; case 0
 20567  012D7A  B4D8               	btfsc	status,2,c
 20568  012D7C  EF3B  F09B         	goto	l11108
 20569  012D80  0A58               	xorlw	88	; case 88
 20570  012D82  B4D8               	btfsc	status,2,c
 20571  012D84  D74A               	goto	l10822
 20572  012D86  0A3B               	xorlw	59	; case 99
 20573  012D88  B4D8               	btfsc	status,2,c
 20574  012D8A  D7C5               	goto	l10862
 20575  012D8C  0A07               	xorlw	7	; case 100
 20576  012D8E  B4D8               	btfsc	status,2,c
 20577  012D90  D010               	goto	l10876
 20578  012D92  0A0D               	xorlw	13	; case 105
 20579  012D94  B4D8               	btfsc	status,2,c
 20580  012D96  D00D               	goto	l10876
 20581  012D98  0A05               	xorlw	5	; case 108
 20582  012D9A  B4D8               	btfsc	status,2,c
 20583  012D9C  D738               	goto	l10818
 20584  012D9E  0A03               	xorlw	3	; case 111
 20585  012DA0  B4D8               	btfsc	status,2,c
 20586  012DA2  D738               	goto	l10820
 20587  012DA4  0A1A               	xorlw	26	; case 117
 20588  012DA6  B4D8               	btfsc	status,2,c
 20589  012DA8  D7D2               	goto	l10870
 20590  012DAA  0A0D               	xorlw	13	; case 120
 20591  012DAC  B4D8               	btfsc	status,2,c
 20592  012DAE  D737               	goto	l1574
 20593  012DB0  D7BF               	goto	l10866
 20594  012DB2                     l10876:
 20595                           
 20596                           ; BSR set to: 1
 20597                           ;doprnt.c: 1260: if((flag & (0xC0)) == 0x00)
 20598  012DB2  0EC0               	movlw	192
 20599  012DB4  0101               	movlb	1	; () banked
 20600  012DB6  15BA               	andwf	sprintf@flag& (0+255),w,b
 20601  012DB8  0101               	movlb	1	; () banked
 20602  012DBA  6FA2               	movwf	??_sprintf& (0+255),b
 20603  012DBC  0E00               	movlw	0
 20604  012DBE  0101               	movlb	1	; () banked
 20605  012DC0  15BB               	andwf	(sprintf@flag+1)& (0+255),w,b
 20606  012DC2  0101               	movlb	1	; () banked
 20607  012DC4  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 20608  012DC6  0101               	movlb	1	; () banked
 20609  012DC8  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 20610  012DCA  11A2               	iorwf	??_sprintf& (0+255),w,b
 20611  012DCC  A4D8               	btfss	status,2,c
 20612  012DCE  D053               	goto	l1593
 20613                           
 20614                           ; BSR set to: 1
 20615                           ;doprnt.c: 1262: {
 20616                           ;doprnt.c: 1264: if(flag & 0x10)
 20617  012DD0  0101               	movlb	1	; () banked
 20618  012DD2  A9BA               	btfss	sprintf@flag& (0+255),4,b
 20619  012DD4  D012               	goto	l10884
 20620                           
 20621                           ; BSR set to: 1
 20622                           ;doprnt.c: 1265: _val._val = (*(long *)__va_arg((*(long **)ap), (long)0));
 20623  012DD6  C1AF  FFD9         	movff	sprintf@ap,fsr2l
 20624  012DDA  C1B0  FFDA         	movff	sprintf@ap+1,fsr2h
 20625  012DDE  0101               	movlb	1	; () banked
 20626  012DE0  CFDE F1B5          	movff	postinc2,sprintf@_val
 20627  012DE4  0101               	movlb	1	; () banked
 20628  012DE6  CFDE F1B6          	movff	postinc2,sprintf@_val+1
 20629  012DEA  0101               	movlb	1	; () banked
 20630  012DEC  CFDE F1B7          	movff	postinc2,sprintf@_val+2
 20631  012DF0  0101               	movlb	1	; () banked
 20632  012DF2  CFDE F1B8          	movff	postinc2,sprintf@_val+3
 20633                           
 20634                           ; BSR set to: 1
 20635  012DF6  0E04               	movlw	4
 20636  012DF8  D014               	goto	L21
 20637  012DFA                     l10884:
 20638                           
 20639                           ; BSR set to: 1
 20640                           ;doprnt.c: 1266: else
 20641                           ;doprnt.c: 1268: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 20642  012DFA  C1AF  FFD9         	movff	sprintf@ap,fsr2l
 20643  012DFE  C1B0  FFDA         	movff	sprintf@ap+1,fsr2h
 20644  012E02  0101               	movlb	1	; () banked
 20645  012E04  CFDE F1B5          	movff	postinc2,sprintf@_val
 20646  012E08  0101               	movlb	1	; () banked
 20647  012E0A  CFDD F1B6          	movff	postdec2,sprintf@_val+1
 20648  012E0E  0101               	movlb	1	; () banked
 20649  012E10  0E00               	movlw	0
 20650  012E12  0101               	movlb	1	; () banked
 20651  012E14  BFB6               	btfsc	(sprintf@_val+1)& (0+255),7,b
 20652  012E16  0EFF               	movlw	-1
 20653  012E18  0101               	movlb	1	; () banked
 20654  012E1A  6FB7               	movwf	(sprintf@_val+2)& (0+255),b
 20655  012E1C  0101               	movlb	1	; () banked
 20656  012E1E  6FB8               	movwf	(sprintf@_val+3)& (0+255),b
 20657                           
 20658                           ; BSR set to: 1
 20659  012E20  0E02               	movlw	2
 20660  012E22                     L21:
 20661  012E22  0101               	movlb	1	; () banked
 20662  012E24  27AF               	addwf	sprintf@ap& (0+255),f,b
 20663  012E26  0E00               	movlw	0
 20664  012E28  0101               	movlb	1	; () banked
 20665  012E2A  23B0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20666                           
 20667                           ; BSR set to: 1
 20668                           ;doprnt.c: 1270: if((long)_val._val < 0) {
 20669                           
 20670                           ; BSR set to: 1
 20671  012E2C  0101               	movlb	1	; () banked
 20672  012E2E  51B8               	movf	(sprintf@_val+3)& (0+255),w,b
 20673  012E30  0A80               	xorlw	128
 20674  012E32  0F80               	addlw	128
 20675  012E34  E10B               	bnz	u13425
 20676  012E36  0E00               	movlw	0
 20677  012E38  0101               	movlb	1	; () banked
 20678  012E3A  5DB7               	subwf	(sprintf@_val+2)& (0+255),w,b
 20679  012E3C  E107               	bnz	u13425
 20680  012E3E  0E00               	movlw	0
 20681  012E40  0101               	movlb	1	; () banked
 20682  012E42  5DB6               	subwf	(sprintf@_val+1)& (0+255),w,b
 20683  012E44  E103               	bnz	u13425
 20684  012E46  0E00               	movlw	0
 20685  012E48  0101               	movlb	1	; () banked
 20686  012E4A  5DB5               	subwf	sprintf@_val& (0+255),w,b
 20687  012E4C                     u13425:
 20688  012E4C  B0D8               	btfsc	status,0,c
 20689  012E4E  D040               	goto	l10902
 20690                           
 20691                           ; BSR set to: 1
 20692                           ;doprnt.c: 1271: flag |= 0x03;
 20693  012E50  0E03               	movlw	3
 20694  012E52  0101               	movlb	1	; () banked
 20695  012E54  13BA               	iorwf	sprintf@flag& (0+255),f,b
 20696                           
 20697                           ; BSR set to: 1
 20698                           ;doprnt.c: 1272: _val._val = -_val._val;
 20699  012E56  0101               	movlb	1	; () banked
 20700  012E58  1FB8               	comf	(sprintf@_val+3)& (0+255),f,b
 20701  012E5A  0101               	movlb	1	; () banked
 20702  012E5C  1FB7               	comf	(sprintf@_val+2)& (0+255),f,b
 20703  012E5E  0101               	movlb	1	; () banked
 20704  012E60  1FB6               	comf	(sprintf@_val+1)& (0+255),f,b
 20705  012E62  0101               	movlb	1	; () banked
 20706  012E64  6DB5               	negf	sprintf@_val& (0+255),b
 20707  012E66  0E00               	movlw	0
 20708  012E68  0101               	movlb	1	; () banked
 20709  012E6A  23B6               	addwfc	(sprintf@_val+1)& (0+255),f,b
 20710  012E6C  0101               	movlb	1	; () banked
 20711  012E6E  23B7               	addwfc	(sprintf@_val+2)& (0+255),f,b
 20712  012E70  0101               	movlb	1	; () banked
 20713  012E72  23B8               	addwfc	(sprintf@_val+3)& (0+255),f,b
 20714  012E74  D02D               	goto	l10902
 20715  012E76                     l1593:
 20716                           
 20717                           ; BSR set to: 1
 20718                           ;doprnt.c: 1277: else
 20719                           ;doprnt.c: 1282: {
 20720                           ;doprnt.c: 1290: if(flag & 0x10)
 20721  012E76  0101               	movlb	1	; () banked
 20722  012E78  A9BA               	btfss	sprintf@flag& (0+255),4,b
 20723  012E7A  D012               	goto	l10898
 20724                           
 20725                           ; BSR set to: 1
 20726                           ;doprnt.c: 1291: _val._val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsig
      +                          ned long)0));
 20727  012E7C  C1AF  FFD9         	movff	sprintf@ap,fsr2l
 20728  012E80  C1B0  FFDA         	movff	sprintf@ap+1,fsr2h
 20729  012E84  0101               	movlb	1	; () banked
 20730  012E86  CFDE F1B5          	movff	postinc2,sprintf@_val
 20731  012E8A  0101               	movlb	1	; () banked
 20732  012E8C  CFDE F1B6          	movff	postinc2,sprintf@_val+1
 20733  012E90  0101               	movlb	1	; () banked
 20734  012E92  CFDE F1B7          	movff	postinc2,sprintf@_val+2
 20735  012E96  0101               	movlb	1	; () banked
 20736  012E98  CFDE F1B8          	movff	postinc2,sprintf@_val+3
 20737                           
 20738                           ; BSR set to: 1
 20739  012E9C  0E04               	movlw	4
 20740  012E9E  D013               	goto	L22
 20741  012EA0                     l10898:
 20742                           
 20743                           ; BSR set to: 1
 20744                           ;doprnt.c: 1292: else
 20745                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 20746  012EA0  C1AF  FFD9         	movff	sprintf@ap,fsr2l
 20747  012EA4  C1B0  FFDA         	movff	sprintf@ap+1,fsr2h
 20748  012EA8  CFDE F1A2          	movff	postinc2,??_sprintf
 20749  012EAC  CFDD F1A3          	movff	postdec2,??_sprintf+1
 20750  012EB0  0101               	movlb	1	; () banked
 20751  012EB2  C1A2  F1B5         	movff	??_sprintf,sprintf@_val
 20752  012EB6  0101               	movlb	1	; () banked
 20753  012EB8  C1A3  F1B6         	movff	??_sprintf+1,sprintf@_val+1
 20754  012EBC  0101               	movlb	1	; () banked
 20755  012EBE  6BB7               	clrf	(sprintf@_val+2)& (0+255),b
 20756  012EC0  0101               	movlb	1	; () banked
 20757  012EC2  6BB8               	clrf	(sprintf@_val+3)& (0+255),b
 20758                           
 20759                           ; BSR set to: 1
 20760  012EC4  0E02               	movlw	2
 20761  012EC6                     L22:
 20762  012EC6  0101               	movlb	1	; () banked
 20763  012EC8  27AF               	addwf	sprintf@ap& (0+255),f,b
 20764  012ECA  0E00               	movlw	0
 20765  012ECC  0101               	movlb	1	; () banked
 20766  012ECE  23B0               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20767  012ED0                     l10902:
 20768                           
 20769                           ; BSR set to: 1
 20770                           ;doprnt.c: 1296: }
 20771                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 20772  012ED0  0101               	movlb	1	; () banked
 20773  012ED2  51B2               	movf	(sprintf@prec+1)& (0+255),w,b
 20774  012ED4  11B1               	iorwf	sprintf@prec& (0+255),w,b
 20775  012ED6  A4D8               	btfss	status,2,c
 20776  012ED8  D086               	goto	l10952
 20777                           
 20778                           ; BSR set to: 1
 20779  012EDA  0101               	movlb	1	; () banked
 20780  012EDC  51B8               	movf	(sprintf@_val+3)& (0+255),w,b
 20781  012EDE  11B5               	iorwf	sprintf@_val& (0+255),w,b
 20782  012EE0  11B6               	iorwf	(sprintf@_val+1)& (0+255),w,b
 20783  012EE2  11B7               	iorwf	(sprintf@_val+2)& (0+255),w,b
 20784  012EE4  A4D8               	btfss	status,2,c
 20785  012EE6  D07F               	goto	l10952
 20786                           
 20787                           ; BSR set to: 1
 20788                           ;doprnt.c: 1300: prec++;
 20789  012EE8  0101               	movlb	1	; () banked
 20790  012EEA  4BB1               	infsnz	sprintf@prec& (0+255),f,b
 20791  012EEC  2BB2               	incf	(sprintf@prec+1)& (0+255),f,b
 20792  012EEE  D07B               	goto	l10952
 20793  012EF0                     l10908:
 20794                           
 20795                           ; BSR set to: 1
 20796                           ;doprnt.c: 1311: case 0xC0:
 20797                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20798  012EF0  0E01               	movlw	1
 20799  012EF2  0101               	movlb	1	; () banked
 20800  012EF4  6FB9               	movwf	sprintf@c& (0+255),b
 20801  012EF6                     
 20802                           ; BSR set to: 1
 20803  012EF6  0101               	movlb	1	; () banked
 20804  012EF8  51B9               	movf	sprintf@c& (0+255),w,b
 20805  012EFA  0A0A               	xorlw	10
 20806  012EFC  B4D8               	btfsc	status,2,c
 20807  012EFE  D082               	goto	l10954
 20808                           
 20809                           ; BSR set to: 1
 20810                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
 20811                           
 20812                           ; BSR set to: 1
 20813                           
 20814                           ; BSR set to: 1
 20815  012F00  0101               	movlb	1	; () banked
 20816  012F02  51B9               	movf	sprintf@c& (0+255),w,b
 20817  012F04  0D04               	mullw	4
 20818  012F06  0E1D               	movlw	low _dpowers
 20819  012F08  24F3               	addwf	prodl,w,c
 20820  012F0A  6EF6               	movwf	tblptrl,c
 20821  012F0C  0EED               	movlw	high _dpowers
 20822  012F0E  20F4               	addwfc	prodh,w,c
 20823  012F10  6EF7               	movwf	tblptrh,c
 20824  012F12                     	if	1	;There are 3 active tblptr bytes
 20825  012F12  6AF8               	clrf	tblptru,c
 20826  012F14  0E00               	movlw	low (__mediumconst shr (0+16))
 20827  012F16  22F8               	addwfc	tblptru,f,c
 20828  012F18                     	endif
 20829  012F18  0009               	tblrd		*+
 20830  012F1A  50F5               	movf	tablat,w,c
 20831  012F1C  0101               	movlb	1	; () banked
 20832  012F1E  5DB5               	subwf	sprintf@_val& (0+255),w,b
 20833  012F20  0009               	tblrd		*+
 20834  012F22  50F5               	movf	tablat,w,c
 20835  012F24  0101               	movlb	1	; () banked
 20836  012F26  59B6               	subwfb	(sprintf@_val+1)& (0+255),w,b
 20837  012F28  0009               	tblrd		*+
 20838  012F2A  50F5               	movf	tablat,w,c
 20839  012F2C  0101               	movlb	1	; () banked
 20840  012F2E  59B7               	subwfb	(sprintf@_val+2)& (0+255),w,b
 20841  012F30  0009               	tblrd		*+
 20842  012F32  50F5               	movf	tablat,w,c
 20843  012F34  0101               	movlb	1	; () banked
 20844  012F36  59B8               	subwfb	(sprintf@_val+3)& (0+255),w,b
 20845  012F38  A0D8               	btfss	status,0,c
 20846  012F3A  D064               	goto	l10954
 20847                           
 20848                           ; BSR set to: 1
 20849                           
 20850                           ; BSR set to: 1
 20851                           
 20852                           ; BSR set to: 1
 20853                           ;doprnt.c: 1316: break;
 20854  012F3C  0101               	movlb	1	; () banked
 20855  012F3E  2BB9               	incf	sprintf@c& (0+255),f,b
 20856  012F40  D7DA               	goto	L23
 20857  012F42                     l10922:
 20858                           
 20859                           ; BSR set to: 1
 20860                           ;doprnt.c: 1325: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 20861  012F42  0E01               	movlw	1
 20862  012F44  0101               	movlb	1	; () banked
 20863  012F46  6FB9               	movwf	sprintf@c& (0+255),b
 20864  012F48                     
 20865                           ; BSR set to: 1
 20866  012F48  0101               	movlb	1	; () banked
 20867  012F4A  51B9               	movf	sprintf@c& (0+255),w,b
 20868  012F4C  0A08               	xorlw	8
 20869  012F4E  B4D8               	btfsc	status,2,c
 20870  012F50  D059               	goto	l10954
 20871                           
 20872                           ; BSR set to: 1
 20873                           ;doprnt.c: 1326: if(_val._val < hexpowers[c])
 20874                           
 20875                           ; BSR set to: 1
 20876                           
 20877                           ; BSR set to: 1
 20878  012F52  0101               	movlb	1	; () banked
 20879  012F54  51B9               	movf	sprintf@c& (0+255),w,b
 20880  012F56  0D04               	mullw	4
 20881  012F58  0E45               	movlw	low _hexpowers
 20882  012F5A  24F3               	addwf	prodl,w,c
 20883  012F5C  6EF6               	movwf	tblptrl,c
 20884  012F5E  0EED               	movlw	high _hexpowers
 20885  012F60  20F4               	addwfc	prodh,w,c
 20886  012F62  6EF7               	movwf	tblptrh,c
 20887  012F64                     	if	1	;There are 3 active tblptr bytes
 20888  012F64  6AF8               	clrf	tblptru,c
 20889  012F66  0E00               	movlw	low (__mediumconst shr (0+16))
 20890  012F68  22F8               	addwfc	tblptru,f,c
 20891  012F6A                     	endif
 20892  012F6A  0009               	tblrd		*+
 20893  012F6C  50F5               	movf	tablat,w,c
 20894  012F6E  0101               	movlb	1	; () banked
 20895  012F70  5DB5               	subwf	sprintf@_val& (0+255),w,b
 20896  012F72  0009               	tblrd		*+
 20897  012F74  50F5               	movf	tablat,w,c
 20898  012F76  0101               	movlb	1	; () banked
 20899  012F78  59B6               	subwfb	(sprintf@_val+1)& (0+255),w,b
 20900  012F7A  0009               	tblrd		*+
 20901  012F7C  50F5               	movf	tablat,w,c
 20902  012F7E  0101               	movlb	1	; () banked
 20903  012F80  59B7               	subwfb	(sprintf@_val+2)& (0+255),w,b
 20904  012F82  0009               	tblrd		*+
 20905  012F84  50F5               	movf	tablat,w,c
 20906  012F86  0101               	movlb	1	; () banked
 20907  012F88  59B8               	subwfb	(sprintf@_val+3)& (0+255),w,b
 20908  012F8A  A0D8               	btfss	status,0,c
 20909  012F8C  D03B               	goto	l10954
 20910                           
 20911                           ; BSR set to: 1
 20912                           
 20913                           ; BSR set to: 1
 20914                           
 20915                           ; BSR set to: 1
 20916                           ;doprnt.c: 1327: break;
 20917  012F8E  0101               	movlb	1	; () banked
 20918  012F90  2BB9               	incf	sprintf@c& (0+255),f,b
 20919  012F92  D7DA               	goto	L24
 20920  012F94                     l10936:
 20921                           
 20922                           ; BSR set to: 1
 20923                           ;doprnt.c: 1337: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 20924  012F94  0E01               	movlw	1
 20925  012F96  0101               	movlb	1	; () banked
 20926  012F98  6FB9               	movwf	sprintf@c& (0+255),b
 20927  012F9A                     
 20928                           ; BSR set to: 1
 20929  012F9A  0101               	movlb	1	; () banked
 20930  012F9C  51B9               	movf	sprintf@c& (0+255),w,b
 20931  012F9E  0A0C               	xorlw	12
 20932  012FA0  B4D8               	btfsc	status,2,c
 20933  012FA2  D030               	goto	l10954
 20934                           
 20935                           ; BSR set to: 1
 20936                           ;doprnt.c: 1338: if(_val._val < octpowers[c])
 20937                           
 20938                           ; BSR set to: 1
 20939                           
 20940                           ; BSR set to: 1
 20941  012FA4  0101               	movlb	1	; () banked
 20942  012FA6  51B9               	movf	sprintf@c& (0+255),w,b
 20943  012FA8  0D04               	mullw	4
 20944  012FAA  0EED               	movlw	low _octpowers
 20945  012FAC  24F3               	addwf	prodl,w,c
 20946  012FAE  6EF6               	movwf	tblptrl,c
 20947  012FB0  0EEC               	movlw	high _octpowers
 20948  012FB2  20F4               	addwfc	prodh,w,c
 20949  012FB4  6EF7               	movwf	tblptrh,c
 20950  012FB6                     	if	1	;There are 3 active tblptr bytes
 20951  012FB6  6AF8               	clrf	tblptru,c
 20952  012FB8  0E00               	movlw	low (__mediumconst shr (0+16))
 20953  012FBA  22F8               	addwfc	tblptru,f,c
 20954  012FBC                     	endif
 20955  012FBC  0009               	tblrd		*+
 20956  012FBE  50F5               	movf	tablat,w,c
 20957  012FC0  0101               	movlb	1	; () banked
 20958  012FC2  5DB5               	subwf	sprintf@_val& (0+255),w,b
 20959  012FC4  0009               	tblrd		*+
 20960  012FC6  50F5               	movf	tablat,w,c
 20961  012FC8  0101               	movlb	1	; () banked
 20962  012FCA  59B6               	subwfb	(sprintf@_val+1)& (0+255),w,b
 20963  012FCC  0009               	tblrd		*+
 20964  012FCE  50F5               	movf	tablat,w,c
 20965  012FD0  0101               	movlb	1	; () banked
 20966  012FD2  59B7               	subwfb	(sprintf@_val+2)& (0+255),w,b
 20967  012FD4  0009               	tblrd		*+
 20968  012FD6  50F5               	movf	tablat,w,c
 20969  012FD8  0101               	movlb	1	; () banked
 20970  012FDA  59B8               	subwfb	(sprintf@_val+3)& (0+255),w,b
 20971  012FDC  A0D8               	btfss	status,0,c
 20972  012FDE  D012               	goto	l10954
 20973                           
 20974                           ; BSR set to: 1
 20975                           
 20976                           ; BSR set to: 1
 20977                           
 20978                           ; BSR set to: 1
 20979                           ;doprnt.c: 1339: break;
 20980  012FE0  0101               	movlb	1	; () banked
 20981  012FE2  2BB9               	incf	sprintf@c& (0+255),f,b
 20982  012FE4  D7DA               	goto	L25
 20983  012FE6                     l10952:
 20984                           
 20985                           ; BSR set to: 1
 20986  012FE6  0101               	movlb	1	; () banked
 20987  012FE8  51BA               	movf	sprintf@flag& (0+255),w,b
 20988  012FEA  0BC0               	andlw	192
 20989                           
 20990                           ; Switch size 1, requested type "space"
 20991                           ; Number of cases is 4, Range of values is 0 to 192
 20992                           ; switch strategies available:
 20993                           ; Name         Instructions Cycles
 20994                           ; simple_byte           13     7 (average)
 20995                           ;	Chosen strategy is simple_byte
 20996  012FEC  0A00               	xorlw	0	; case 0
 20997  012FEE  B4D8               	btfsc	status,2,c
 20998  012FF0  D77F               	goto	l10908
 20999  012FF2  0A40               	xorlw	64	; case 64
 21000  012FF4  B4D8               	btfsc	status,2,c
 21001  012FF6  D7CE               	goto	l10936
 21002  012FF8  0AC0               	xorlw	192	; case 128
 21003  012FFA  B4D8               	btfsc	status,2,c
 21004  012FFC  D7A2               	goto	l10922
 21005  012FFE  0A40               	xorlw	64	; case 192
 21006  013000  B4D8               	btfsc	status,2,c
 21007  013002  D776               	goto	l10908
 21008  013004                     l10954:
 21009                           
 21010                           ; BSR set to: 1
 21011                           ;doprnt.c: 1348: if(c < prec)
 21012  013004  0E80               	movlw	128
 21013  013006  0101               	movlb	1	; () banked
 21014  013008  BFB9               	btfsc	sprintf@c& (0+255),7,b
 21015  01300A  0E7F               	movlw	127
 21016  01300C  0101               	movlb	1	; () banked
 21017  01300E  6FA2               	movwf	??_sprintf& (0+255),b
 21018  013010  0101               	movlb	1	; () banked
 21019  013012  51B1               	movf	sprintf@prec& (0+255),w,b
 21020  013014  0101               	movlb	1	; () banked
 21021  013016  5DB9               	subwf	sprintf@c& (0+255),w,b
 21022  013018  0101               	movlb	1	; () banked
 21023  01301A  51B2               	movf	(sprintf@prec+1)& (0+255),w,b
 21024  01301C  0A80               	xorlw	128
 21025  01301E  0101               	movlb	1	; () banked
 21026  013020  59A2               	subwfb	??_sprintf& (0+255),w,b
 21027  013022  B0D8               	btfsc	status,0,c
 21028  013024  D003               	goto	l10958
 21029                           
 21030                           ; BSR set to: 1
 21031                           ;doprnt.c: 1349: c = prec;
 21032  013026  C1B1  F1B9         	movff	sprintf@prec,sprintf@c
 21033  01302A  D01A               	goto	l10962
 21034  01302C                     l10958:
 21035                           
 21036                           ; BSR set to: 1
 21037                           ;doprnt.c: 1350: else if(prec < c)
 21038  01302C  0101               	movlb	1	; () banked
 21039  01302E  51B2               	movf	(sprintf@prec+1)& (0+255),w,b
 21040  013030  0A80               	xorlw	128
 21041  013032  0101               	movlb	1	; () banked
 21042  013034  6FA2               	movwf	??_sprintf& (0+255),b
 21043  013036  0101               	movlb	1	; () banked
 21044  013038  51B9               	movf	sprintf@c& (0+255),w,b
 21045  01303A  0101               	movlb	1	; () banked
 21046  01303C  5DB1               	subwf	sprintf@prec& (0+255),w,b
 21047  01303E  0E80               	movlw	128
 21048  013040  0101               	movlb	1	; () banked
 21049  013042  BFB9               	btfsc	sprintf@c& (0+255),7,b
 21050  013044  0E7F               	movlw	127
 21051  013046  0101               	movlb	1	; () banked
 21052  013048  59A2               	subwfb	??_sprintf& (0+255),w,b
 21053  01304A  B0D8               	btfsc	status,0,c
 21054  01304C  D009               	goto	l10962
 21055                           
 21056                           ; BSR set to: 1
 21057                           ;doprnt.c: 1351: prec = c;
 21058  01304E  0101               	movlb	1	; () banked
 21059  013050  51B9               	movf	sprintf@c& (0+255),w,b
 21060  013052  0101               	movlb	1	; () banked
 21061  013054  6FB1               	movwf	sprintf@prec& (0+255),b
 21062  013056  0101               	movlb	1	; () banked
 21063  013058  6BB2               	clrf	(sprintf@prec+1)& (0+255),b
 21064  01305A  0101               	movlb	1	; () banked
 21065  01305C  BFB1               	btfsc	sprintf@prec& (0+255),7,b
 21066  01305E  07B2               	decf	(sprintf@prec+1)& (0+255),f,b
 21067  013060                     l10962:
 21068                           
 21069                           ; BSR set to: 1
 21070                           ;doprnt.c: 1354: if(width && flag & 0x03)
 21071  013060  0101               	movlb	1	; () banked
 21072  013062  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 21073  013064  11B3               	iorwf	sprintf@width& (0+255),w,b
 21074  013066  B4D8               	btfsc	status,2,c
 21075  013068  D013               	goto	l10968
 21076                           
 21077                           ; BSR set to: 1
 21078  01306A  0E03               	movlw	3
 21079  01306C  0101               	movlb	1	; () banked
 21080  01306E  15BA               	andwf	sprintf@flag& (0+255),w,b
 21081  013070  0101               	movlb	1	; () banked
 21082  013072  6FA2               	movwf	??_sprintf& (0+255),b
 21083  013074  0E00               	movlw	0
 21084  013076  0101               	movlb	1	; () banked
 21085  013078  15BB               	andwf	(sprintf@flag+1)& (0+255),w,b
 21086  01307A  0101               	movlb	1	; () banked
 21087  01307C  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21088  01307E  0101               	movlb	1	; () banked
 21089  013080  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21090  013082  11A2               	iorwf	??_sprintf& (0+255),w,b
 21091  013084  B4D8               	btfsc	status,2,c
 21092  013086  D004               	goto	l10968
 21093                           
 21094                           ; BSR set to: 1
 21095                           ;doprnt.c: 1355: width--;
 21096  013088  0101               	movlb	1	; () banked
 21097  01308A  07B3               	decf	sprintf@width& (0+255),f,b
 21098  01308C  A0D8               	btfss	status,0,c
 21099  01308E  07B4               	decf	(sprintf@width+1)& (0+255),f,b
 21100  013090                     l10968:
 21101                           
 21102                           ; BSR set to: 1
 21103                           ;doprnt.c: 1357: if(flag & 0x4000) {
 21104  013090  0101               	movlb	1	; () banked
 21105  013092  ADBB               	btfss	(sprintf@flag+1)& (0+255),6,b
 21106  013094  D01F               	goto	l10976
 21107                           
 21108                           ; BSR set to: 1
 21109                           ;doprnt.c: 1358: if(width > prec)
 21110  013096  0101               	movlb	1	; () banked
 21111  013098  51B2               	movf	(sprintf@prec+1)& (0+255),w,b
 21112  01309A  0A80               	xorlw	128
 21113  01309C  0101               	movlb	1	; () banked
 21114  01309E  6FA2               	movwf	??_sprintf& (0+255),b
 21115  0130A0  0101               	movlb	1	; () banked
 21116  0130A2  51B3               	movf	sprintf@width& (0+255),w,b
 21117  0130A4  0101               	movlb	1	; () banked
 21118  0130A6  5DB1               	subwf	sprintf@prec& (0+255),w,b
 21119  0130A8  0101               	movlb	1	; () banked
 21120  0130AA  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 21121  0130AC  0A80               	xorlw	128
 21122  0130AE  0101               	movlb	1	; () banked
 21123  0130B0  59A2               	subwfb	??_sprintf& (0+255),w,b
 21124  0130B2  B0D8               	btfsc	status,0,c
 21125  0130B4  D009               	goto	l10974
 21126                           
 21127                           ; BSR set to: 1
 21128                           ;doprnt.c: 1359: width -= prec;
 21129  0130B6  0101               	movlb	1	; () banked
 21130  0130B8  51B1               	movf	sprintf@prec& (0+255),w,b
 21131  0130BA  0101               	movlb	1	; () banked
 21132  0130BC  5FB3               	subwf	sprintf@width& (0+255),f,b
 21133  0130BE  0101               	movlb	1	; () banked
 21134  0130C0  51B2               	movf	(sprintf@prec+1)& (0+255),w,b
 21135  0130C2  0101               	movlb	1	; () banked
 21136  0130C4  5BB4               	subwfb	(sprintf@width+1)& (0+255),f,b
 21137  0130C6  D006               	goto	l10976
 21138  0130C8                     l10974:
 21139                           
 21140                           ; BSR set to: 1
 21141                           ;doprnt.c: 1360: else
 21142                           ;doprnt.c: 1361: width = 0;
 21143  0130C8  0E00               	movlw	0
 21144  0130CA  0101               	movlb	1	; () banked
 21145  0130CC  6FB4               	movwf	(sprintf@width+1)& (0+255),b
 21146  0130CE  0E00               	movlw	0
 21147  0130D0  0101               	movlb	1	; () banked
 21148  0130D2  6FB3               	movwf	sprintf@width& (0+255),b
 21149  0130D4                     l10976:
 21150                           
 21151                           ; BSR set to: 1
 21152                           ;doprnt.c: 1362: }
 21153                           ;doprnt.c: 1366: if((flag & (
 21154                           ;doprnt.c: 1368: 0x04|
 21155                           ;doprnt.c: 1370: (0xC0)|0x800)) == (0x40|0x800)) {
 21156  0130D4  0EC4               	movlw	196
 21157  0130D6  0101               	movlb	1	; () banked
 21158  0130D8  6FA2               	movwf	??_sprintf& (0+255),b
 21159  0130DA  0E08               	movlw	8
 21160  0130DC  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21161  0130DE  0101               	movlb	1	; () banked
 21162  0130E0  C1BA  F1A4         	movff	sprintf@flag,??_sprintf+2
 21163  0130E4  0101               	movlb	1	; () banked
 21164  0130E6  C1BB  F1A5         	movff	sprintf@flag+1,??_sprintf+3
 21165  0130EA  0101               	movlb	1	; () banked
 21166  0130EC  51A2               	movf	??_sprintf& (0+255),w,b
 21167  0130EE  0101               	movlb	1	; () banked
 21168  0130F0  17A4               	andwf	(??_sprintf+2)& (0+255),f,b
 21169  0130F2  0101               	movlb	1	; () banked
 21170  0130F4  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21171  0130F6  0101               	movlb	1	; () banked
 21172  0130F8  17A5               	andwf	(??_sprintf+3)& (0+255),f,b
 21173  0130FA  0101               	movlb	1	; () banked
 21174  0130FC  51A5               	movf	(??_sprintf+3)& (0+255),w,b
 21175  0130FE  0A08               	xorlw	8
 21176  013100  0E40               	movlw	64
 21177  013102  B4D8               	btfsc	status,2,c
 21178  013104  19A4               	xorwf	(??_sprintf+2)& (0+255),w,b
 21179  013106  A4D8               	btfss	status,2,c
 21180  013108  D00A               	goto	l10982
 21181                           
 21182                           ; BSR set to: 1
 21183                           ;doprnt.c: 1371: if(width)
 21184  01310A  0101               	movlb	1	; () banked
 21185  01310C  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 21186  01310E  11B3               	iorwf	sprintf@width& (0+255),w,b
 21187  013110  B4D8               	btfsc	status,2,c
 21188  013112  D037               	goto	l10990
 21189                           
 21190                           ; BSR set to: 1
 21191                           ;doprnt.c: 1372: width--;
 21192  013114  0101               	movlb	1	; () banked
 21193  013116  07B3               	decf	sprintf@width& (0+255),f,b
 21194  013118  A0D8               	btfss	status,0,c
 21195  01311A  07B4               	decf	(sprintf@width+1)& (0+255),f,b
 21196  01311C  D032               	goto	l10990
 21197  01311E                     l10982:
 21198                           
 21199                           ; BSR set to: 1
 21200                           ;doprnt.c: 1377: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21201  01311E  0EC0               	movlw	192
 21202  013120  0101               	movlb	1	; () banked
 21203  013122  6FA2               	movwf	??_sprintf& (0+255),b
 21204  013124  0E08               	movlw	8
 21205  013126  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21206  013128  0101               	movlb	1	; () banked
 21207  01312A  C1BA  F1A4         	movff	sprintf@flag,??_sprintf+2
 21208  01312E  0101               	movlb	1	; () banked
 21209  013130  C1BB  F1A5         	movff	sprintf@flag+1,??_sprintf+3
 21210  013134  0101               	movlb	1	; () banked
 21211  013136  51A2               	movf	??_sprintf& (0+255),w,b
 21212  013138  0101               	movlb	1	; () banked
 21213  01313A  17A4               	andwf	(??_sprintf+2)& (0+255),f,b
 21214  01313C  0101               	movlb	1	; () banked
 21215  01313E  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21216  013140  0101               	movlb	1	; () banked
 21217  013142  17A5               	andwf	(??_sprintf+3)& (0+255),f,b
 21218  013144  0101               	movlb	1	; () banked
 21219  013146  51A5               	movf	(??_sprintf+3)& (0+255),w,b
 21220  013148  0A08               	xorlw	8
 21221  01314A  0E80               	movlw	128
 21222  01314C  B4D8               	btfsc	status,2,c
 21223  01314E  19A4               	xorwf	(??_sprintf+2)& (0+255),w,b
 21224  013150  A4D8               	btfss	status,2,c
 21225  013152  D017               	goto	l10990
 21226                           
 21227                           ; BSR set to: 1
 21228                           ;doprnt.c: 1381: if(width > 2)
 21229  013154  0101               	movlb	1	; () banked
 21230  013156  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 21231  013158  0A80               	xorlw	128
 21232  01315A  0F80               	addlw	-128
 21233  01315C  0E03               	movlw	3
 21234  01315E  B4D8               	btfsc	status,2,c
 21235  013160  5DB3               	subwf	sprintf@width& (0+255),w,b
 21236  013162  A0D8               	btfss	status,0,c
 21237  013164  D008               	goto	l10988
 21238                           
 21239                           ; BSR set to: 1
 21240                           ;doprnt.c: 1382: width -= 2;
 21241  013166  0101               	movlb	1	; () banked
 21242  013168  0EFE               	movlw	254
 21243  01316A  0101               	movlb	1	; () banked
 21244  01316C  27B3               	addwf	sprintf@width& (0+255),f,b
 21245  01316E  0EFF               	movlw	255
 21246  013170  0101               	movlb	1	; () banked
 21247  013172  23B4               	addwfc	(sprintf@width+1)& (0+255),f,b
 21248  013174  D006               	goto	l10990
 21249  013176                     l10988:
 21250                           
 21251                           ; BSR set to: 1
 21252                           ;doprnt.c: 1383: else
 21253                           ;doprnt.c: 1384: width = 0;
 21254  013176  0E00               	movlw	0
 21255  013178  0101               	movlb	1	; () banked
 21256  01317A  6FB4               	movwf	(sprintf@width+1)& (0+255),b
 21257  01317C  0E00               	movlw	0
 21258  01317E  0101               	movlb	1	; () banked
 21259  013180  6FB3               	movwf	sprintf@width& (0+255),b
 21260  013182                     l10990:
 21261                           
 21262                           ; BSR set to: 1
 21263                           ;doprnt.c: 1385: }
 21264                           ;doprnt.c: 1390: if(width > c)
 21265  013182  0E80               	movlw	128
 21266  013184  0101               	movlb	1	; () banked
 21267  013186  BFB9               	btfsc	sprintf@c& (0+255),7,b
 21268  013188  0E7F               	movlw	127
 21269  01318A  0101               	movlb	1	; () banked
 21270  01318C  6FA2               	movwf	??_sprintf& (0+255),b
 21271  01318E  0101               	movlb	1	; () banked
 21272  013190  51B3               	movf	sprintf@width& (0+255),w,b
 21273  013192  0101               	movlb	1	; () banked
 21274  013194  5DB9               	subwf	sprintf@c& (0+255),w,b
 21275  013196  0101               	movlb	1	; () banked
 21276  013198  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 21277  01319A  0A80               	xorlw	128
 21278  01319C  0101               	movlb	1	; () banked
 21279  01319E  59A2               	subwfb	??_sprintf& (0+255),w,b
 21280  0131A0  B0D8               	btfsc	status,0,c
 21281  0131A2  D00B               	goto	l10994
 21282                           
 21283                           ; BSR set to: 1
 21284                           ;doprnt.c: 1391: width -= c;
 21285  0131A4  0101               	movlb	1	; () banked
 21286  0131A6  51B9               	movf	sprintf@c& (0+255),w,b
 21287  0131A8  0101               	movlb	1	; () banked
 21288  0131AA  5FB3               	subwf	sprintf@width& (0+255),f,b
 21289  0131AC  0E00               	movlw	0
 21290  0131AE  0101               	movlb	1	; () banked
 21291  0131B0  BFB9               	btfsc	sprintf@c& (0+255),7,b
 21292  0131B2  0EFF               	movlw	255
 21293  0131B4  0101               	movlb	1	; () banked
 21294  0131B6  5BB4               	subwfb	(sprintf@width+1)& (0+255),f,b
 21295  0131B8  D006               	goto	l10996
 21296  0131BA                     l10994:
 21297                           
 21298                           ; BSR set to: 1
 21299                           ;doprnt.c: 1392: else
 21300                           ;doprnt.c: 1393: width = 0;
 21301  0131BA  0E00               	movlw	0
 21302  0131BC  0101               	movlb	1	; () banked
 21303  0131BE  6FB4               	movwf	(sprintf@width+1)& (0+255),b
 21304  0131C0  0E00               	movlw	0
 21305  0131C2  0101               	movlb	1	; () banked
 21306  0131C4  6FB3               	movwf	sprintf@width& (0+255),b
 21307  0131C6                     l10996:
 21308                           
 21309                           ; BSR set to: 1
 21310                           ;doprnt.c: 1396: if(flag & 0x04) {
 21311  0131C6  0101               	movlb	1	; () banked
 21312  0131C8  A5BA               	btfss	sprintf@flag& (0+255),2,b
 21313  0131CA  D06F               	goto	l11032
 21314                           
 21315                           ; BSR set to: 1
 21316                           ;doprnt.c: 1401: if(flag & 0x03)
 21317  0131CC  0E03               	movlw	3
 21318  0131CE  0101               	movlb	1	; () banked
 21319  0131D0  15BA               	andwf	sprintf@flag& (0+255),w,b
 21320  0131D2  0101               	movlb	1	; () banked
 21321  0131D4  6FA2               	movwf	??_sprintf& (0+255),b
 21322  0131D6  0E00               	movlw	0
 21323  0131D8  0101               	movlb	1	; () banked
 21324  0131DA  15BB               	andwf	(sprintf@flag+1)& (0+255),w,b
 21325  0131DC  0101               	movlb	1	; () banked
 21326  0131DE  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21327  0131E0  0101               	movlb	1	; () banked
 21328  0131E2  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21329  0131E4  11A2               	iorwf	??_sprintf& (0+255),w,b
 21330  0131E6  B4D8               	btfsc	status,2,c
 21331  0131E8  D006               	goto	l1632
 21332                           
 21333                           ; BSR set to: 1
 21334                           ;doprnt.c: 1402: ((*sp++ = ('-')));
 21335  0131EA  C192  FFD9         	movff	sprintf@sp,fsr2l
 21336  0131EE  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21337  0131F2  0E2D               	movlw	45
 21338  0131F4  D008               	goto	L26
 21339  0131F6                     l1632:
 21340                           
 21341                           ; BSR set to: 1
 21342                           ;doprnt.c: 1405: else
 21343                           ;doprnt.c: 1408: if(flag & 0x01)
 21344  0131F6  0101               	movlb	1	; () banked
 21345  0131F8  A1BA               	btfss	sprintf@flag& (0+255),0,b
 21346  0131FA  D007               	goto	l11008
 21347                           
 21348                           ; BSR set to: 1
 21349                           ;doprnt.c: 1409: ((*sp++ = (' ')));
 21350  0131FC  C192  FFD9         	movff	sprintf@sp,fsr2l
 21351  013200  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21352  013204  0E20               	movlw	32
 21353  013206                     L26:
 21354  013206  6EDF               	movwf	indf2,c
 21355  013208  D039               	goto	L27
 21356  01320A                     l11008:
 21357                           
 21358                           ; BSR set to: 1
 21359                           ;doprnt.c: 1412: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21360  01320A  0EC0               	movlw	192
 21361  01320C  0101               	movlb	1	; () banked
 21362  01320E  6FA2               	movwf	??_sprintf& (0+255),b
 21363  013210  0E08               	movlw	8
 21364  013212  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21365  013214  0101               	movlb	1	; () banked
 21366  013216  C1BA  F1A4         	movff	sprintf@flag,??_sprintf+2
 21367  01321A  0101               	movlb	1	; () banked
 21368  01321C  C1BB  F1A5         	movff	sprintf@flag+1,??_sprintf+3
 21369  013220  0101               	movlb	1	; () banked
 21370  013222  51A2               	movf	??_sprintf& (0+255),w,b
 21371  013224  0101               	movlb	1	; () banked
 21372  013226  17A4               	andwf	(??_sprintf+2)& (0+255),f,b
 21373  013228  0101               	movlb	1	; () banked
 21374  01322A  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21375  01322C  0101               	movlb	1	; () banked
 21376  01322E  17A5               	andwf	(??_sprintf+3)& (0+255),f,b
 21377  013230  0101               	movlb	1	; () banked
 21378  013232  51A5               	movf	(??_sprintf+3)& (0+255),w,b
 21379  013234  0A08               	xorlw	8
 21380  013236  0E80               	movlw	128
 21381  013238  B4D8               	btfsc	status,2,c
 21382  01323A  19A4               	xorwf	(??_sprintf+2)& (0+255),w,b
 21383  01323C  A4D8               	btfss	status,2,c
 21384  01323E  D021               	goto	l11024
 21385                           
 21386                           ; BSR set to: 1
 21387                           ;doprnt.c: 1413: ((*sp++ = ('0')));
 21388  013240  C192  FFD9         	movff	sprintf@sp,fsr2l
 21389  013244  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21390  013248  0E30               	movlw	48
 21391  01324A  6EDF               	movwf	indf2,c
 21392                           
 21393                           ; BSR set to: 1
 21394  01324C  0101               	movlb	1	; () banked
 21395  01324E  4B92               	infsnz	sprintf@sp& (0+255),f,b
 21396  013250  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 21397                           
 21398                           ; BSR set to: 1
 21399                           ;doprnt.c: 1415: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 21400  013252  0101               	movlb	1	; () banked
 21401  013254  BBBA               	btfsc	sprintf@flag& (0+255),5,b
 21402  013256  D005               	goto	l11018
 21403                           
 21404                           ; BSR set to: 1
 21405  013258  0E00               	movlw	0
 21406  01325A  0101               	movlb	1	; () banked
 21407  01325C  6FAA               	movwf	(_sprintf$2444+1)& (0+255),b
 21408  01325E  0E78               	movlw	120
 21409  013260  D004               	goto	L28
 21410  013262                     l11018:
 21411                           
 21412                           ; BSR set to: 1
 21413  013262  0E00               	movlw	0
 21414  013264  0101               	movlb	1	; () banked
 21415  013266  6FAA               	movwf	(_sprintf$2444+1)& (0+255),b
 21416  013268  0E58               	movlw	88
 21417  01326A                     L28:
 21418  01326A  0101               	movlb	1	; () banked
 21419  01326C  6FA9               	movwf	_sprintf$2444& (0+255),b
 21420                           
 21421                           ; BSR set to: 1
 21422                           
 21423                           ; BSR set to: 1
 21424  01326E  C192  FFD9         	movff	sprintf@sp,fsr2l
 21425  013272  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21426  013276  0101               	movlb	1	; () banked
 21427  013278  C1A9  FFDF         	movff	_sprintf$2444,indf2
 21428  01327C                     L27:
 21429                           
 21430                           ; BSR set to: 1
 21431  01327C  0101               	movlb	1	; () banked
 21432  01327E  4B92               	infsnz	sprintf@sp& (0+255),f,b
 21433  013280  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 21434  013282                     l11024:
 21435                           
 21436                           ; BSR set to: 1
 21437                           ;doprnt.c: 1421: }
 21438                           ;doprnt.c: 1424: if(width)
 21439  013282  0101               	movlb	1	; () banked
 21440  013284  0101               	movlb	1	; () banked
 21441  013286  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 21442  013288  11B3               	iorwf	sprintf@width& (0+255),w,b
 21443  01328A  B4D8               	btfsc	status,2,c
 21444  01328C  D1B9               	goto	l11096
 21445                           
 21446                           ; BSR set to: 1
 21447                           ;doprnt.c: 1426: ((*sp++ = ('0')));
 21448                           
 21449                           ; BSR set to: 1
 21450                           
 21451                           ;doprnt.c: 1425: do
 21452  01328E  C192  FFD9         	movff	sprintf@sp,fsr2l
 21453  013292  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21454  013296  0E30               	movlw	48
 21455  013298  6EDF               	movwf	indf2,c
 21456                           
 21457                           ; BSR set to: 1
 21458  01329A  0101               	movlb	1	; () banked
 21459  01329C  4B92               	infsnz	sprintf@sp& (0+255),f,b
 21460  01329E  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 21461                           
 21462                           ; BSR set to: 1
 21463                           ;doprnt.c: 1427: while(--width);
 21464  0132A0  0101               	movlb	1	; () banked
 21465  0132A2  07B3               	decf	sprintf@width& (0+255),f,b
 21466  0132A4  A0D8               	btfss	status,0,c
 21467  0132A6  07B4               	decf	(sprintf@width+1)& (0+255),f,b
 21468  0132A8  D7ED               	goto	L35
 21469  0132AA                     l11032:
 21470                           
 21471                           ; BSR set to: 1
 21472                           ;doprnt.c: 1431: {
 21473                           ;doprnt.c: 1433: if(width
 21474                           ;doprnt.c: 1435: && !(flag & 0x08)
 21475                           ;doprnt.c: 1437: )
 21476  0132AA  0101               	movlb	1	; () banked
 21477  0132AC  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 21478  0132AE  11B3               	iorwf	sprintf@width& (0+255),w,b
 21479  0132B0  B4D8               	btfsc	status,2,c
 21480  0132B2  D015               	goto	l11042
 21481                           
 21482                           ; BSR set to: 1
 21483  0132B4  0101               	movlb	1	; () banked
 21484  0132B6  B7BA               	btfsc	sprintf@flag& (0+255),3,b
 21485  0132B8  D012               	goto	l11042
 21486  0132BA                     l11036:
 21487                           
 21488                           ; BSR set to: 1
 21489                           ;doprnt.c: 1439: ((*sp++ = (' ')));
 21490  0132BA  C192  FFD9         	movff	sprintf@sp,fsr2l
 21491  0132BE  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21492  0132C2  0E20               	movlw	32
 21493  0132C4  6EDF               	movwf	indf2,c
 21494                           
 21495                           ; BSR set to: 1
 21496  0132C6  0101               	movlb	1	; () banked
 21497  0132C8  4B92               	infsnz	sprintf@sp& (0+255),f,b
 21498  0132CA  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 21499                           
 21500                           ; BSR set to: 1
 21501                           ;doprnt.c: 1440: while(--width);
 21502  0132CC  0101               	movlb	1	; () banked
 21503  0132CE  07B3               	decf	sprintf@width& (0+255),f,b
 21504  0132D0  A0D8               	btfss	status,0,c
 21505  0132D2  07B4               	decf	(sprintf@width+1)& (0+255),f,b
 21506  0132D4  0101               	movlb	1	; () banked
 21507  0132D6  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 21508  0132D8  11B3               	iorwf	sprintf@width& (0+255),w,b
 21509  0132DA  A4D8               	btfss	status,2,c
 21510  0132DC  D7EE               	goto	l11036
 21511  0132DE                     l11042:
 21512                           
 21513                           ; BSR set to: 1
 21514                           ;doprnt.c: 1447: if(flag & 0x03)
 21515  0132DE  0E03               	movlw	3
 21516  0132E0  0101               	movlb	1	; () banked
 21517  0132E2  15BA               	andwf	sprintf@flag& (0+255),w,b
 21518  0132E4  0101               	movlb	1	; () banked
 21519  0132E6  6FA2               	movwf	??_sprintf& (0+255),b
 21520  0132E8  0E00               	movlw	0
 21521  0132EA  0101               	movlb	1	; () banked
 21522  0132EC  15BB               	andwf	(sprintf@flag+1)& (0+255),w,b
 21523  0132EE  0101               	movlb	1	; () banked
 21524  0132F0  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21525  0132F2  0101               	movlb	1	; () banked
 21526  0132F4  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21527  0132F6  11A2               	iorwf	??_sprintf& (0+255),w,b
 21528  0132F8  B4D8               	btfsc	status,2,c
 21529  0132FA  D006               	goto	l1648
 21530                           
 21531                           ; BSR set to: 1
 21532                           ;doprnt.c: 1448: ((*sp++ = ('-')));
 21533  0132FC  C192  FFD9         	movff	sprintf@sp,fsr2l
 21534  013300  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21535  013304  0E2D               	movlw	45
 21536  013306  D008               	goto	L29
 21537  013308                     l1648:
 21538                           
 21539                           ; BSR set to: 1
 21540                           ;doprnt.c: 1452: else if(flag & 0x01)
 21541  013308  0101               	movlb	1	; () banked
 21542  01330A  A1BA               	btfss	sprintf@flag& (0+255),0,b
 21543  01330C  D009               	goto	l11052
 21544                           
 21545                           ; BSR set to: 1
 21546                           ;doprnt.c: 1453: ((*sp++ = (' ')));
 21547  01330E  C192  FFD9         	movff	sprintf@sp,fsr2l
 21548  013312  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21549  013316  0E20               	movlw	32
 21550  013318                     L29:
 21551  013318  6EDF               	movwf	indf2,c
 21552                           
 21553                           ; BSR set to: 1
 21554  01331A  0101               	movlb	1	; () banked
 21555  01331C  4B92               	infsnz	sprintf@sp& (0+255),f,b
 21556  01331E  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 21557  013320                     l11052:
 21558                           
 21559                           ; BSR set to: 1
 21560                           ;doprnt.c: 1457: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 21561  013320  0EC0               	movlw	192
 21562  013322  0101               	movlb	1	; () banked
 21563  013324  6FA2               	movwf	??_sprintf& (0+255),b
 21564  013326  0E08               	movlw	8
 21565  013328  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21566  01332A  0101               	movlb	1	; () banked
 21567  01332C  C1BA  F1A4         	movff	sprintf@flag,??_sprintf+2
 21568  013330  0101               	movlb	1	; () banked
 21569  013332  C1BB  F1A5         	movff	sprintf@flag+1,??_sprintf+3
 21570  013336  0101               	movlb	1	; () banked
 21571  013338  51A2               	movf	??_sprintf& (0+255),w,b
 21572  01333A  0101               	movlb	1	; () banked
 21573  01333C  17A4               	andwf	(??_sprintf+2)& (0+255),f,b
 21574  01333E  0101               	movlb	1	; () banked
 21575  013340  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21576  013342  0101               	movlb	1	; () banked
 21577  013344  17A5               	andwf	(??_sprintf+3)& (0+255),f,b
 21578  013346  0101               	movlb	1	; () banked
 21579  013348  51A5               	movf	(??_sprintf+3)& (0+255),w,b
 21580  01334A  0A08               	xorlw	8
 21581  01334C  0E40               	movlw	64
 21582  01334E  B4D8               	btfsc	status,2,c
 21583  013350  19A4               	xorwf	(??_sprintf+2)& (0+255),w,b
 21584  013352  A4D8               	btfss	status,2,c
 21585  013354  D007               	goto	l11058
 21586                           
 21587                           ; BSR set to: 1
 21588                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 21589  013356  C192  FFD9         	movff	sprintf@sp,fsr2l
 21590  01335A  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21591  01335E  0E30               	movlw	48
 21592  013360  6EDF               	movwf	indf2,c
 21593  013362  D14B               	goto	L32
 21594  013364                     l11058:
 21595                           
 21596                           ; BSR set to: 1
 21597                           ;doprnt.c: 1459: else
 21598                           ;doprnt.c: 1463: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 21599  013364  0EC0               	movlw	192
 21600  013366  0101               	movlb	1	; () banked
 21601  013368  6FA2               	movwf	??_sprintf& (0+255),b
 21602  01336A  0E08               	movlw	8
 21603  01336C  6FA3               	movwf	(??_sprintf+1)& (0+255),b
 21604  01336E  0101               	movlb	1	; () banked
 21605  013370  C1BA  F1A4         	movff	sprintf@flag,??_sprintf+2
 21606  013374  0101               	movlb	1	; () banked
 21607  013376  C1BB  F1A5         	movff	sprintf@flag+1,??_sprintf+3
 21608  01337A  0101               	movlb	1	; () banked
 21609  01337C  51A2               	movf	??_sprintf& (0+255),w,b
 21610  01337E  0101               	movlb	1	; () banked
 21611  013380  17A4               	andwf	(??_sprintf+2)& (0+255),f,b
 21612  013382  0101               	movlb	1	; () banked
 21613  013384  51A3               	movf	(??_sprintf+1)& (0+255),w,b
 21614  013386  0101               	movlb	1	; () banked
 21615  013388  17A5               	andwf	(??_sprintf+3)& (0+255),f,b
 21616  01338A  0101               	movlb	1	; () banked
 21617  01338C  51A5               	movf	(??_sprintf+3)& (0+255),w,b
 21618  01338E  0A08               	xorlw	8
 21619  013390  0E80               	movlw	128
 21620  013392  B4D8               	btfsc	status,2,c
 21621  013394  19A4               	xorwf	(??_sprintf+2)& (0+255),w,b
 21622  013396  A4D8               	btfss	status,2,c
 21623  013398  D133               	goto	l11096
 21624                           
 21625                           ; BSR set to: 1
 21626                           ;doprnt.c: 1467: ((*sp++ = ('0')));
 21627  01339A  C192  FFD9         	movff	sprintf@sp,fsr2l
 21628  01339E  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21629  0133A2  0E30               	movlw	48
 21630  0133A4  6EDF               	movwf	indf2,c
 21631                           
 21632                           ; BSR set to: 1
 21633  0133A6  0101               	movlb	1	; () banked
 21634  0133A8  4B92               	infsnz	sprintf@sp& (0+255),f,b
 21635  0133AA  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 21636                           
 21637                           ; BSR set to: 1
 21638                           ;doprnt.c: 1469: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 21639  0133AC  0101               	movlb	1	; () banked
 21640  0133AE  BBBA               	btfsc	sprintf@flag& (0+255),5,b
 21641  0133B0  D005               	goto	l11068
 21642                           
 21643                           ; BSR set to: 1
 21644  0133B2  0E00               	movlw	0
 21645  0133B4  0101               	movlb	1	; () banked
 21646  0133B6  6FAC               	movwf	(_sprintf$2445+1)& (0+255),b
 21647  0133B8  0E78               	movlw	120
 21648  0133BA  D004               	goto	L31
 21649  0133BC                     l11068:
 21650                           
 21651                           ; BSR set to: 1
 21652  0133BC  0E00               	movlw	0
 21653  0133BE  0101               	movlb	1	; () banked
 21654  0133C0  6FAC               	movwf	(_sprintf$2445+1)& (0+255),b
 21655  0133C2  0E58               	movlw	88
 21656  0133C4                     L31:
 21657  0133C4  0101               	movlb	1	; () banked
 21658  0133C6  6FAB               	movwf	_sprintf$2445& (0+255),b
 21659                           
 21660                           ; BSR set to: 1
 21661                           
 21662                           ; BSR set to: 1
 21663  0133C8  C192  FFD9         	movff	sprintf@sp,fsr2l
 21664  0133CC  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21665  0133D0  0101               	movlb	1	; () banked
 21666  0133D2  C1AB  FFDF         	movff	_sprintf$2445,indf2
 21667  0133D6  D111               	goto	L32
 21668  0133D8                     l11074:
 21669                           
 21670                           ; BSR set to: 1
 21671                           ;doprnt.c: 1495: case 0xC0:
 21672                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
 21673  0133D8  0101               	movlb	1	; () banked
 21674  0133DA  C1B1  F1A2         	movff	sprintf@prec,??_sprintf
 21675  0133DE  0101               	movlb	1	; () banked
 21676  0133E0  C1B2  F1A3         	movff	sprintf@prec+1,??_sprintf+1
 21677  0133E4  0101               	movlb	1	; () banked
 21678  0133E6  90D8               	bcf	status,0,c
 21679  0133E8  37A2               	rlcf	??_sprintf& (0+255),f,b
 21680  0133EA  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 21681  0133EC  0101               	movlb	1	; () banked
 21682  0133EE  90D8               	bcf	status,0,c
 21683  0133F0  37A2               	rlcf	??_sprintf& (0+255),f,b
 21684  0133F2  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 21685  0133F4  0E1D               	movlw	low _dpowers
 21686  0133F6  0101               	movlb	1	; () banked
 21687  0133F8  25A2               	addwf	??_sprintf& (0+255),w,b
 21688  0133FA  6EF6               	movwf	tblptrl,c
 21689  0133FC  0EED               	movlw	high _dpowers
 21690  0133FE  21A3               	addwfc	(??_sprintf+1)& (0+255),w,b
 21691  013400  6EF7               	movwf	tblptrh,c
 21692  013402                     	if	1	;There are 3 active tblptr bytes
 21693  013402  6AF8               	clrf	tblptru,c
 21694  013404  0E00               	movlw	low (__mediumconst shr (0+16))
 21695  013406  22F8               	addwfc	tblptru,f,c
 21696  013408                     	endif
 21697  013408  0009               	tblrd		*+
 21698  01340A  0101               	movlb	1	; () banked
 21699  01340C  CFF5 F180          	movff	tablat,___lldiv@divisor
 21700  013410  0009               	tblrd		*+
 21701  013412  0101               	movlb	1	; () banked
 21702  013414  CFF5 F181          	movff	tablat,___lldiv@divisor+1
 21703  013418  0009               	tblrd		*+
 21704  01341A  0101               	movlb	1	; () banked
 21705  01341C  CFF5 F182          	movff	tablat,___lldiv@divisor+2
 21706  013420  000A               	tblrd		*-
 21707  013422  0101               	movlb	1	; () banked
 21708  013424  CFF5 F183          	movff	tablat,___lldiv@divisor+3
 21709  013428  C1B5  F17C         	movff	sprintf@_val,___lldiv@dividend
 21710  01342C  C1B6  F17D         	movff	sprintf@_val+1,___lldiv@dividend+1
 21711  013430  C1B7  F17E         	movff	sprintf@_val+2,___lldiv@dividend+2
 21712  013434  C1B8  F17F         	movff	sprintf@_val+3,___lldiv@dividend+3
 21713  013438  EC8D  F0B2         	call	___lldiv	;wreg free
 21714  01343C  C17C  F189         	movff	?___lldiv,___llmod@dividend
 21715  013440  C17D  F18A         	movff	?___lldiv+1,___llmod@dividend+1
 21716  013444  C17E  F18B         	movff	?___lldiv+2,___llmod@dividend+2
 21717  013448  C17F  F18C         	movff	?___lldiv+3,___llmod@dividend+3
 21718  01344C  0E0A               	movlw	10
 21719  01344E  0101               	movlb	1	; () banked
 21720  013450  6F8D               	movwf	___llmod@divisor& (0+255),b
 21721  013452  0E00               	movlw	0
 21722  013454  0101               	movlb	1	; () banked
 21723  013456  6F8E               	movwf	(___llmod@divisor+1)& (0+255),b
 21724  013458  0E00               	movlw	0
 21725  01345A  0101               	movlb	1	; () banked
 21726  01345C  6F8F               	movwf	(___llmod@divisor+2)& (0+255),b
 21727  01345E  0E00               	movlw	0
 21728  013460  0101               	movlb	1	; () banked
 21729  013462  6F90               	movwf	(___llmod@divisor+3)& (0+255),b
 21730  013464  EC75  F0B5         	call	___llmod	;wreg free
 21731  013468  C189  F1A4         	movff	?___llmod,??_sprintf+2
 21732  01346C  C18A  F1A5         	movff	?___llmod+1,??_sprintf+3
 21733  013470  C18B  F1A6         	movff	?___llmod+2,??_sprintf+4
 21734  013474  C18C  F1A7         	movff	?___llmod+3,??_sprintf+5
 21735  013478  0101               	movlb	1	; () banked
 21736  01347A  51A4               	movf	(??_sprintf+2)& (0+255),w,b
 21737  01347C  D0A4               	goto	L33
 21738  01347E                     l11076:
 21739                           
 21740                           ; BSR set to: 1
 21741                           ;doprnt.c: 1508: {
 21742                           ;doprnt.c: 1509: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
 21743  01347E  C1B5  F17C         	movff	sprintf@_val,___lldiv@dividend
 21744  013482  C1B6  F17D         	movff	sprintf@_val+1,___lldiv@dividend+1
 21745  013486  C1B7  F17E         	movff	sprintf@_val+2,___lldiv@dividend+2
 21746  01348A  C1B8  F17F         	movff	sprintf@_val+3,___lldiv@dividend+3
 21747  01348E  0101               	movlb	1	; () banked
 21748  013490  C1B1  F1A2         	movff	sprintf@prec,??_sprintf
 21749  013494  0101               	movlb	1	; () banked
 21750  013496  C1B2  F1A3         	movff	sprintf@prec+1,??_sprintf+1
 21751  01349A  0101               	movlb	1	; () banked
 21752  01349C  90D8               	bcf	status,0,c
 21753  01349E  37A2               	rlcf	??_sprintf& (0+255),f,b
 21754  0134A0  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 21755  0134A2  0101               	movlb	1	; () banked
 21756  0134A4  90D8               	bcf	status,0,c
 21757  0134A6  37A2               	rlcf	??_sprintf& (0+255),f,b
 21758  0134A8  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 21759  0134AA  0E45               	movlw	low _hexpowers
 21760  0134AC  0101               	movlb	1	; () banked
 21761  0134AE  25A2               	addwf	??_sprintf& (0+255),w,b
 21762  0134B0  6EF6               	movwf	tblptrl,c
 21763  0134B2  0EED               	movlw	high _hexpowers
 21764  0134B4  21A3               	addwfc	(??_sprintf+1)& (0+255),w,b
 21765  0134B6  6EF7               	movwf	tblptrh,c
 21766  0134B8                     	if	1	;There are 3 active tblptr bytes
 21767  0134B8  6AF8               	clrf	tblptru,c
 21768  0134BA  0E00               	movlw	low (__mediumconst shr (0+16))
 21769  0134BC  22F8               	addwfc	tblptru,f,c
 21770  0134BE                     	endif
 21771  0134BE  0009               	tblrd		*+
 21772  0134C0  0101               	movlb	1	; () banked
 21773  0134C2  CFF5 F180          	movff	tablat,___lldiv@divisor
 21774  0134C6  0009               	tblrd		*+
 21775  0134C8  0101               	movlb	1	; () banked
 21776  0134CA  CFF5 F181          	movff	tablat,___lldiv@divisor+1
 21777  0134CE  0009               	tblrd		*+
 21778  0134D0  0101               	movlb	1	; () banked
 21779  0134D2  CFF5 F182          	movff	tablat,___lldiv@divisor+2
 21780  0134D6  000A               	tblrd		*-
 21781  0134D8  0101               	movlb	1	; () banked
 21782  0134DA  CFF5 F183          	movff	tablat,___lldiv@divisor+3
 21783  0134DE  EC8D  F0B2         	call	___lldiv	;wreg free
 21784  0134E2  C17C  F1A4         	movff	?___lldiv,??_sprintf+2
 21785  0134E6  C17D  F1A5         	movff	?___lldiv+1,??_sprintf+3
 21786  0134EA  C17E  F1A6         	movff	?___lldiv+2,??_sprintf+4
 21787  0134EE  C17F  F1A7         	movff	?___lldiv+3,??_sprintf+5
 21788  0134F2  0101               	movlb	1	; () banked
 21789  0134F4  51A4               	movf	(??_sprintf+2)& (0+255),w,b
 21790  0134F6  0B0F               	andlw	15
 21791  0134F8  0101               	movlb	1	; () banked
 21792  0134FA  6FA8               	movwf	sprintf@idx& (0+255),b
 21793                           
 21794                           ; BSR set to: 1
 21795                           ;doprnt.c: 1511: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 21796  0134FC  0101               	movlb	1	; () banked
 21797  0134FE  BBBA               	btfsc	sprintf@flag& (0+255),5,b
 21798  013500  D005               	goto	l11082
 21799                           
 21800                           ; BSR set to: 1
 21801  013502  0EF8               	movlw	high STR_325
 21802  013504  0101               	movlb	1	; () banked
 21803  013506  6FAE               	movwf	(_sprintf$2451+1)& (0+255),b
 21804  013508  0ED9               	movlw	low STR_325
 21805  01350A  D004               	goto	L34
 21806  01350C                     l11082:
 21807                           
 21808                           ; BSR set to: 1
 21809  01350C  0EF8               	movlw	high STR_324
 21810  01350E  0101               	movlb	1	; () banked
 21811  013510  6FAE               	movwf	(_sprintf$2451+1)& (0+255),b
 21812  013512  0EC8               	movlw	low STR_324
 21813  013514                     L34:
 21814  013514  0101               	movlb	1	; () banked
 21815  013516  6FAD               	movwf	_sprintf$2451& (0+255),b
 21816                           
 21817                           ; BSR set to: 1
 21818                           
 21819                           ; BSR set to: 1
 21820  013518  0101               	movlb	1	; () banked
 21821  01351A  51A8               	movf	sprintf@idx& (0+255),w,b
 21822  01351C  0D01               	mullw	1
 21823  01351E  0101               	movlb	1	; () banked
 21824  013520  C1AD  F1A2         	movff	_sprintf$2451,??_sprintf
 21825  013524  0101               	movlb	1	; () banked
 21826  013526  C1AE  F1A3         	movff	_sprintf$2451+1,??_sprintf+1
 21827  01352A  50F3               	movf	prodl,w,c
 21828  01352C  0101               	movlb	1	; () banked
 21829  01352E  27A2               	addwf	??_sprintf& (0+255),f,b
 21830  013530  50F4               	movf	prodh,w,c
 21831  013532  0101               	movlb	1	; () banked
 21832  013534  23A3               	addwfc	(??_sprintf+1)& (0+255),f,b
 21833  013536  C1A2  FFF6         	movff	??_sprintf,tblptrl
 21834  01353A  C1A3  FFF7         	movff	??_sprintf+1,tblptrh
 21835  01353E                     	if	0	;tblptru may be non-zero
 21836  01353E                     	endif
 21837  01353E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21838  01353E  0E00               	movlw	low (__mediumconst shr (0+16))
 21839  013540  6EF8               	movwf	tblptru,c
 21840  013542                     	endif
 21841  013542  0008               	tblrd		*
 21842  013544  0101               	movlb	1	; () banked
 21843  013546  CFF5 F1B9          	movff	tablat,sprintf@c
 21844                           
 21845                           ;doprnt.c: 1517: }
 21846                           ;doprnt.c: 1519: break;
 21847  01354A  D050               	goto	l11092
 21848  01354C                     l11086:
 21849                           
 21850                           ; BSR set to: 1
 21851                           ;doprnt.c: 1527: c = ((_val._val / octpowers[prec]) & 07) + '0';
 21852  01354C  C1B5  F17C         	movff	sprintf@_val,___lldiv@dividend
 21853  013550  C1B6  F17D         	movff	sprintf@_val+1,___lldiv@dividend+1
 21854  013554  C1B7  F17E         	movff	sprintf@_val+2,___lldiv@dividend+2
 21855  013558  C1B8  F17F         	movff	sprintf@_val+3,___lldiv@dividend+3
 21856  01355C  0101               	movlb	1	; () banked
 21857  01355E  C1B1  F1A2         	movff	sprintf@prec,??_sprintf
 21858  013562  0101               	movlb	1	; () banked
 21859  013564  C1B2  F1A3         	movff	sprintf@prec+1,??_sprintf+1
 21860  013568  0101               	movlb	1	; () banked
 21861  01356A  90D8               	bcf	status,0,c
 21862  01356C  37A2               	rlcf	??_sprintf& (0+255),f,b
 21863  01356E  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 21864  013570  0101               	movlb	1	; () banked
 21865  013572  90D8               	bcf	status,0,c
 21866  013574  37A2               	rlcf	??_sprintf& (0+255),f,b
 21867  013576  37A3               	rlcf	(??_sprintf+1)& (0+255),f,b
 21868  013578  0EED               	movlw	low _octpowers
 21869  01357A  0101               	movlb	1	; () banked
 21870  01357C  25A2               	addwf	??_sprintf& (0+255),w,b
 21871  01357E  6EF6               	movwf	tblptrl,c
 21872  013580  0EEC               	movlw	high _octpowers
 21873  013582  21A3               	addwfc	(??_sprintf+1)& (0+255),w,b
 21874  013584  6EF7               	movwf	tblptrh,c
 21875  013586                     	if	1	;There are 3 active tblptr bytes
 21876  013586  6AF8               	clrf	tblptru,c
 21877  013588  0E00               	movlw	low (__mediumconst shr (0+16))
 21878  01358A  22F8               	addwfc	tblptru,f,c
 21879  01358C                     	endif
 21880  01358C  0009               	tblrd		*+
 21881  01358E  0101               	movlb	1	; () banked
 21882  013590  CFF5 F180          	movff	tablat,___lldiv@divisor
 21883  013594  0009               	tblrd		*+
 21884  013596  0101               	movlb	1	; () banked
 21885  013598  CFF5 F181          	movff	tablat,___lldiv@divisor+1
 21886  01359C  0009               	tblrd		*+
 21887  01359E  0101               	movlb	1	; () banked
 21888  0135A0  CFF5 F182          	movff	tablat,___lldiv@divisor+2
 21889  0135A4  000A               	tblrd		*-
 21890  0135A6  0101               	movlb	1	; () banked
 21891  0135A8  CFF5 F183          	movff	tablat,___lldiv@divisor+3
 21892  0135AC  EC8D  F0B2         	call	___lldiv	;wreg free
 21893  0135B0  C17C  F1A4         	movff	?___lldiv,??_sprintf+2
 21894  0135B4  C17D  F1A5         	movff	?___lldiv+1,??_sprintf+3
 21895  0135B8  C17E  F1A6         	movff	?___lldiv+2,??_sprintf+4
 21896  0135BC  C17F  F1A7         	movff	?___lldiv+3,??_sprintf+5
 21897  0135C0  0101               	movlb	1	; () banked
 21898  0135C2  51A4               	movf	(??_sprintf+2)& (0+255),w,b
 21899  0135C4  0B07               	andlw	7
 21900  0135C6                     L33:
 21901  0135C6  0F30               	addlw	48
 21902  0135C8  0101               	movlb	1	; () banked
 21903  0135CA  6FB9               	movwf	sprintf@c& (0+255),b
 21904                           
 21905                           ;doprnt.c: 1529: break;
 21906  0135CC  D00F               	goto	l11092
 21907  0135CE                     l11090:
 21908                           
 21909                           ; BSR set to: 1
 21910  0135CE  0101               	movlb	1	; () banked
 21911  0135D0  51BA               	movf	sprintf@flag& (0+255),w,b
 21912  0135D2  0BC0               	andlw	192
 21913                           
 21914                           ; Switch size 1, requested type "space"
 21915                           ; Number of cases is 4, Range of values is 0 to 192
 21916                           ; switch strategies available:
 21917                           ; Name         Instructions Cycles
 21918                           ; simple_byte           13     7 (average)
 21919                           ;	Chosen strategy is simple_byte
 21920  0135D4  0A00               	xorlw	0	; case 0
 21921  0135D6  B4D8               	btfsc	status,2,c
 21922  0135D8  D6FF               	goto	l11074
 21923  0135DA  0A40               	xorlw	64	; case 64
 21924  0135DC  B4D8               	btfsc	status,2,c
 21925  0135DE  D7B6               	goto	l11086
 21926  0135E0  0AC0               	xorlw	192	; case 128
 21927  0135E2  B4D8               	btfsc	status,2,c
 21928  0135E4  D74C               	goto	l11076
 21929  0135E6  0A40               	xorlw	64	; case 192
 21930  0135E8  B4D8               	btfsc	status,2,c
 21931  0135EA  D6F6               	goto	l11074
 21932  0135EC                     l11092:
 21933                           
 21934                           ; BSR set to: 1
 21935                           ;doprnt.c: 1533: ((*sp++ = (c)));
 21936  0135EC  C192  FFD9         	movff	sprintf@sp,fsr2l
 21937  0135F0  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21938  0135F4  0101               	movlb	1	; () banked
 21939  0135F6  C1B9  FFDF         	movff	sprintf@c,indf2
 21940  0135FA                     L32:
 21941                           
 21942                           ; BSR set to: 1
 21943  0135FA  0101               	movlb	1	; () banked
 21944  0135FC  4B92               	infsnz	sprintf@sp& (0+255),f,b
 21945  0135FE  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 21946  013600                     l11096:
 21947                           
 21948                           ; BSR set to: 1
 21949  013600  0101               	movlb	1	; () banked
 21950  013602  07B1               	decf	sprintf@prec& (0+255),f,b
 21951  013604  A0D8               	btfss	status,0,c
 21952  013606  07B2               	decf	(sprintf@prec+1)& (0+255),f,b
 21953  013608  0101               	movlb	1	; () banked
 21954  01360A  29B1               	incf	sprintf@prec& (0+255),w,b
 21955  01360C  B4D8               	btfsc	status,2,c
 21956  01360E  29B2               	incf	(sprintf@prec+1)& (0+255),w,b
 21957  013610  A4D8               	btfss	status,2,c
 21958  013612  D7DD               	goto	l11090
 21959                           
 21960                           ; BSR set to: 1
 21961                           ;doprnt.c: 1534: }
 21962                           ;doprnt.c: 1537: if((flag & 0x08) && width > 0)
 21963  013614  0101               	movlb	1	; () banked
 21964  013616  A7BA               	btfss	sprintf@flag& (0+255),3,b
 21965  013618  D01B               	goto	l11106
 21966                           
 21967                           ; BSR set to: 1
 21968  01361A  0101               	movlb	1	; () banked
 21969  01361C  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 21970  01361E  0A80               	xorlw	128
 21971  013620  0F80               	addlw	-128
 21972  013622  0E01               	movlw	1
 21973  013624  B4D8               	btfsc	status,2,c
 21974  013626  5DB3               	subwf	sprintf@width& (0+255),w,b
 21975  013628  A0D8               	btfss	status,0,c
 21976  01362A  D012               	goto	l11106
 21977  01362C                     l11100:
 21978                           
 21979                           ; BSR set to: 1
 21980                           ;doprnt.c: 1539: ((*sp++ = (' ')));
 21981  01362C  C192  FFD9         	movff	sprintf@sp,fsr2l
 21982  013630  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 21983  013634  0E20               	movlw	32
 21984  013636  6EDF               	movwf	indf2,c
 21985                           
 21986                           ; BSR set to: 1
 21987  013638  0101               	movlb	1	; () banked
 21988  01363A  4B92               	infsnz	sprintf@sp& (0+255),f,b
 21989  01363C  2B93               	incf	(sprintf@sp+1)& (0+255),f,b
 21990                           
 21991                           ; BSR set to: 1
 21992                           ;doprnt.c: 1540: while(--width);
 21993  01363E  0101               	movlb	1	; () banked
 21994  013640  07B3               	decf	sprintf@width& (0+255),f,b
 21995  013642  A0D8               	btfss	status,0,c
 21996  013644  07B4               	decf	(sprintf@width+1)& (0+255),f,b
 21997  013646  0101               	movlb	1	; () banked
 21998  013648  51B4               	movf	(sprintf@width+1)& (0+255),w,b
 21999  01364A  11B3               	iorwf	sprintf@width& (0+255),w,b
 22000  01364C  A4D8               	btfss	status,2,c
 22001  01364E  D7EE               	goto	l11100
 22002  013650                     l11106:
 22003                           
 22004                           ; BSR set to: 1
 22005  013650  0101               	movlb	1	; () banked
 22006  013652  C194  FFF6         	movff	sprintf@f,tblptrl
 22007  013656  0101               	movlb	1	; () banked
 22008  013658  C195  FFF7         	movff	sprintf@f+1,tblptrh
 22009  01365C  0101               	movlb	1	; () banked
 22010  01365E  4B94               	infsnz	sprintf@f& (0+255),f,b
 22011  013660  2B95               	incf	(sprintf@f+1)& (0+255),f,b
 22012  013662                     	if	0	;tblptru may be non-zero
 22013  013662                     	endif
 22014  013662                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22015  013662  0E00               	movlw	low (__mediumconst shr (0+16))
 22016  013664  6EF8               	movwf	tblptru,c
 22017  013666                     	endif
 22018  013666  0008               	tblrd		*
 22019  013668  0101               	movlb	1	; () banked
 22020  01366A  CFF5 F1B9          	movff	tablat,sprintf@c
 22021  01366E  0101               	movlb	1	; () banked
 22022  013670  67B9               	tstfsz	sprintf@c& (0+255),b
 22023  013672  EFCE  F094         	goto	l10754
 22024  013676                     l11108:
 22025                           
 22026                           ; BSR set to: 1
 22027                           ;doprnt.c: 1547: *sp = 0;
 22028  013676  C192  FFD9         	movff	sprintf@sp,fsr2l
 22029  01367A  C193  FFDA         	movff	sprintf@sp+1,fsr2h
 22030  01367E  0E00               	movlw	0
 22031  013680  6EDF               	movwf	indf2,c
 22032  013682  0012               	return	
 22033  013684                     __end_of_sprintf:
 22034                           	opt stack 0
 22035                           tblptru	equ	0xFF8
 22036                           tblptrh	equ	0xFF7
 22037                           tblptrl	equ	0xFF6
 22038                           tablat	equ	0xFF5
 22039                           prodh	equ	0xFF4
 22040                           prodl	equ	0xFF3
 22041                           intcon	equ	0xFF2
 22042                           postinc0	equ	0xFEE
 22043                           wreg	equ	0xFE8
 22044                           indf1	equ	0xFE7
 22045                           postinc1	equ	0xFE6
 22046                           postdec1	equ	0xFE5
 22047                           fsr1h	equ	0xFE2
 22048                           fsr1l	equ	0xFE1
 22049                           indf2	equ	0xFDF
 22050                           postinc2	equ	0xFDE
 22051                           postdec2	equ	0xFDD
 22052                           fsr2h	equ	0xFDA
 22053                           fsr2l	equ	0xFD9
 22054                           status	equ	0xFD8
 22055                           
 22056 ;; *************** function _isdigit *****************
 22057 ;; Defined at:
 22058 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
 22059 ;; Parameters:    Size  Location     Type
 22060 ;;  c               1    wreg     unsigned char 
 22061 ;; Auto vars:     Size  Location     Type
 22062 ;;  c               1   16[BANK1 ] unsigned char 
 22063 ;; Return value:  Size  Location     Type
 22064 ;;		None               void
 22065 ;; Registers used:
 22066 ;;		wreg, status,2, status,0
 22067 ;; Tracked objects:
 22068 ;;		On entry : 0/0
 22069 ;;		On exit  : 0/0
 22070 ;;		Unchanged: 0/0
 22071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22073 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22074 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22075 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 22076 ;;Total ram usage:        3 bytes
 22077 ;; Hardware stack levels used:    1
 22078 ;; Hardware stack levels required when called:    6
 22079 ;; This function calls:
 22080 ;;		Nothing
 22081 ;; This function is called by:
 22082 ;;		_sprintf
 22083 ;; This function uses a non-reentrant model
 22084 ;;
 22085                           
 22086                           	psect	text33
 22087  00055E                     __ptext33:
 22088                           	opt stack 0
 22089  00055E                     _isdigit:
 22090                           	opt stack 21
 22091                           
 22092                           ; BSR set to: 1
 22093                           ;incstack = 0
 22094                           ;isdigit@c stored from wreg
 22095  00055E  0101               	movlb	1	; () banked
 22096  000560  6F7E               	movwf	isdigit@c& (0+255),b
 22097                           
 22098                           ; BSR set to: 1
 22099  000562  0E00               	movlw	0
 22100  000564  0101               	movlb	1	; () banked
 22101  000566  6F7D               	movwf	_isdigit$2730& (0+255),b
 22102                           
 22103                           ; BSR set to: 1
 22104  000568  0E3A               	movlw	58
 22105  00056A  0101               	movlb	1	; () banked
 22106  00056C  5D7E               	subwf	isdigit@c& (0+255),w,b
 22107  00056E  B0D8               	btfsc	status,0,c
 22108  000570  D007               	goto	l10500
 22109                           
 22110                           ; BSR set to: 1
 22111  000572  0E2F               	movlw	47
 22112  000574  0101               	movlb	1	; () banked
 22113  000576  657E               	cpfsgt	isdigit@c& (0+255),b
 22114  000578  D003               	goto	l10500
 22115                           
 22116                           ; BSR set to: 1
 22117  00057A  0E01               	movlw	1
 22118  00057C  0101               	movlb	1	; () banked
 22119  00057E  6F7D               	movwf	_isdigit$2730& (0+255),b
 22120  000580                     l10500:
 22121                           
 22122                           ; BSR set to: 1
 22123  000580  C17D  F17C         	movff	_isdigit$2730,??_isdigit
 22124  000584  0101               	movlb	1	; () banked
 22125  000586  317C               	rrcf	??_isdigit& (0+255),w,b
 22126  000588  0012               	return	
 22127  00058A                     __end_of_isdigit:
 22128                           	opt stack 0
 22129                           tblptru	equ	0xFF8
 22130                           tblptrh	equ	0xFF7
 22131                           tblptrl	equ	0xFF6
 22132                           tablat	equ	0xFF5
 22133                           prodh	equ	0xFF4
 22134                           prodl	equ	0xFF3
 22135                           intcon	equ	0xFF2
 22136                           postinc0	equ	0xFEE
 22137                           wreg	equ	0xFE8
 22138                           indf1	equ	0xFE7
 22139                           postinc1	equ	0xFE6
 22140                           postdec1	equ	0xFE5
 22141                           fsr1h	equ	0xFE2
 22142                           fsr1l	equ	0xFE1
 22143                           indf2	equ	0xFDF
 22144                           postinc2	equ	0xFDE
 22145                           postdec2	equ	0xFDD
 22146                           fsr2h	equ	0xFDA
 22147                           fsr2l	equ	0xFD9
 22148                           status	equ	0xFD8
 22149                           
 22150 ;; *************** function ___wmul *****************
 22151 ;; Defined at:
 22152 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 22153 ;; Parameters:    Size  Location     Type
 22154 ;;  multiplier      2   14[BANK1 ] unsigned int 
 22155 ;;  multiplicand    2   16[BANK1 ] unsigned int 
 22156 ;; Auto vars:     Size  Location     Type
 22157 ;;  product         2   18[BANK1 ] unsigned int 
 22158 ;; Return value:  Size  Location     Type
 22159 ;;                  2   14[BANK1 ] unsigned int 
 22160 ;; Registers used:
 22161 ;;		wreg, status,2, status,0, prodl, prodh
 22162 ;; Tracked objects:
 22163 ;;		On entry : 0/0
 22164 ;;		On exit  : 0/0
 22165 ;;		Unchanged: 0/0
 22166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22167 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22168 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22170 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 22171 ;;Total ram usage:        6 bytes
 22172 ;; Hardware stack levels used:    1
 22173 ;; Hardware stack levels required when called:    6
 22174 ;; This function calls:
 22175 ;;		Nothing
 22176 ;; This function is called by:
 22177 ;;		_SetFreq
 22178 ;;		_sprintf
 22179 ;; This function uses a non-reentrant model
 22180 ;;
 22181                           
 22182                           	psect	text34
 22183  0003A6                     __ptext34:
 22184                           	opt stack 0
 22185  0003A6                     ___wmul:
 22186                           	opt stack 21
 22187                           
 22188                           ; BSR set to: 1
 22189                           ;incstack = 0
 22190  0003A6  0101               	movlb	1	; () banked
 22191  0003A8  517C               	movf	___wmul@multiplier& (0+255),w,b
 22192  0003AA  0101               	movlb	1	; () banked
 22193  0003AC  037E               	mulwf	___wmul@multiplicand& (0+255),b
 22194  0003AE  CFF3 F180          	movff	prodl,___wmul@product
 22195  0003B2  CFF4 F181          	movff	prodh,___wmul@product+1
 22196  0003B6  0101               	movlb	1	; () banked
 22197  0003B8  517C               	movf	___wmul@multiplier& (0+255),w,b
 22198  0003BA  0101               	movlb	1	; () banked
 22199  0003BC  037F               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 22200  0003BE  50F3               	movf	prodl,w,c
 22201  0003C0  0101               	movlb	1	; () banked
 22202  0003C2  2781               	addwf	(___wmul@product+1)& (0+255),f,b
 22203  0003C4  0101               	movlb	1	; () banked
 22204  0003C6  517D               	movf	(___wmul@multiplier+1)& (0+255),w,b
 22205  0003C8  0101               	movlb	1	; () banked
 22206  0003CA  037E               	mulwf	___wmul@multiplicand& (0+255),b
 22207  0003CC  50F3               	movf	prodl,w,c
 22208  0003CE  0101               	movlb	1	; () banked
 22209  0003D0  2781               	addwf	(___wmul@product+1)& (0+255),f,b
 22210                           
 22211                           ; BSR set to: 1
 22212  0003D2  C180  F17C         	movff	___wmul@product,?___wmul
 22213  0003D6  C181  F17D         	movff	___wmul@product+1,?___wmul+1
 22214  0003DA  0012               	return	
 22215  0003DC                     __end_of___wmul:
 22216                           	opt stack 0
 22217                           tblptru	equ	0xFF8
 22218                           tblptrh	equ	0xFF7
 22219                           tblptrl	equ	0xFF6
 22220                           tablat	equ	0xFF5
 22221                           prodh	equ	0xFF4
 22222                           prodl	equ	0xFF3
 22223                           intcon	equ	0xFF2
 22224                           postinc0	equ	0xFEE
 22225                           wreg	equ	0xFE8
 22226                           indf1	equ	0xFE7
 22227                           postinc1	equ	0xFE6
 22228                           postdec1	equ	0xFE5
 22229                           fsr1h	equ	0xFE2
 22230                           fsr1l	equ	0xFE1
 22231                           indf2	equ	0xFDF
 22232                           postinc2	equ	0xFDE
 22233                           postdec2	equ	0xFDD
 22234                           fsr2h	equ	0xFDA
 22235                           fsr2l	equ	0xFD9
 22236                           status	equ	0xFD8
 22237                           
 22238 ;; *************** function ___llmod *****************
 22239 ;; Defined at:
 22240 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
 22241 ;; Parameters:    Size  Location     Type
 22242 ;;  dividend        4   27[BANK1 ] unsigned long 
 22243 ;;  divisor         4   31[BANK1 ] unsigned long 
 22244 ;; Auto vars:     Size  Location     Type
 22245 ;;  counter         1   35[BANK1 ] unsigned char 
 22246 ;; Return value:  Size  Location     Type
 22247 ;;                  4   27[BANK1 ] unsigned long 
 22248 ;; Registers used:
 22249 ;;		wreg, status,2, status,0
 22250 ;; Tracked objects:
 22251 ;;		On entry : 0/0
 22252 ;;		On exit  : 0/0
 22253 ;;		Unchanged: 0/0
 22254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22255 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 22256 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22258 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 22259 ;;Total ram usage:        9 bytes
 22260 ;; Hardware stack levels used:    1
 22261 ;; Hardware stack levels required when called:    6
 22262 ;; This function calls:
 22263 ;;		Nothing
 22264 ;; This function is called by:
 22265 ;;		_sprintf
 22266 ;; This function uses a non-reentrant model
 22267 ;;
 22268                           
 22269                           	psect	text35
 22270  016AEA                     __ptext35:
 22271                           	opt stack 0
 22272  016AEA                     ___llmod:
 22273                           	opt stack 21
 22274                           
 22275                           ; BSR set to: 1
 22276                           ;incstack = 0
 22277  016AEA  0101               	movlb	1	; () banked
 22278  016AEC  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
 22279  016AEE  118D               	iorwf	___llmod@divisor& (0+255),w,b
 22280  016AF0  118E               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 22281  016AF2  118F               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 22282  016AF4  B4D8               	btfsc	status,2,c
 22283  016AF6  D042               	goto	l2144
 22284                           
 22285                           ; BSR set to: 1
 22286  016AF8  0E01               	movlw	1
 22287  016AFA  0101               	movlb	1	; () banked
 22288  016AFC  6F91               	movwf	___llmod@counter& (0+255),b
 22289  016AFE  D00C               	goto	l10572
 22290  016B00                     l10570:
 22291                           
 22292                           ; BSR set to: 1
 22293  016B00  0101               	movlb	1	; () banked
 22294  016B02  90D8               	bcf	status,0,c
 22295  016B04  0101               	movlb	1	; () banked
 22296  016B06  378D               	rlcf	___llmod@divisor& (0+255),f,b
 22297  016B08  0101               	movlb	1	; () banked
 22298  016B0A  378E               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 22299  016B0C  0101               	movlb	1	; () banked
 22300  016B0E  378F               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 22301  016B10  0101               	movlb	1	; () banked
 22302  016B12  3790               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 22303  016B14  0101               	movlb	1	; () banked
 22304  016B16  2B91               	incf	___llmod@counter& (0+255),f,b
 22305  016B18                     l10572:
 22306                           
 22307                           ; BSR set to: 1
 22308  016B18  0101               	movlb	1	; () banked
 22309  016B1A  AF90               	btfss	(___llmod@divisor+3)& (0+255),7,b
 22310  016B1C  D7F1               	goto	l10570
 22311  016B1E                     l10574:
 22312                           
 22313                           ; BSR set to: 1
 22314  016B1E  0101               	movlb	1	; () banked
 22315  016B20  518D               	movf	___llmod@divisor& (0+255),w,b
 22316  016B22  0101               	movlb	1	; () banked
 22317  016B24  5D89               	subwf	___llmod@dividend& (0+255),w,b
 22318  016B26  0101               	movlb	1	; () banked
 22319  016B28  518E               	movf	(___llmod@divisor+1)& (0+255),w,b
 22320  016B2A  0101               	movlb	1	; () banked
 22321  016B2C  598A               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 22322  016B2E  0101               	movlb	1	; () banked
 22323  016B30  518F               	movf	(___llmod@divisor+2)& (0+255),w,b
 22324  016B32  0101               	movlb	1	; () banked
 22325  016B34  598B               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 22326  016B36  0101               	movlb	1	; () banked
 22327  016B38  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
 22328  016B3A  0101               	movlb	1	; () banked
 22329  016B3C  598C               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 22330  016B3E  A0D8               	btfss	status,0,c
 22331  016B40  D010               	goto	l10578
 22332                           
 22333                           ; BSR set to: 1
 22334  016B42  0101               	movlb	1	; () banked
 22335  016B44  518D               	movf	___llmod@divisor& (0+255),w,b
 22336  016B46  0101               	movlb	1	; () banked
 22337  016B48  5F89               	subwf	___llmod@dividend& (0+255),f,b
 22338  016B4A  0101               	movlb	1	; () banked
 22339  016B4C  518E               	movf	(___llmod@divisor+1)& (0+255),w,b
 22340  016B4E  0101               	movlb	1	; () banked
 22341  016B50  5B8A               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 22342  016B52  0101               	movlb	1	; () banked
 22343  016B54  518F               	movf	(___llmod@divisor+2)& (0+255),w,b
 22344  016B56  0101               	movlb	1	; () banked
 22345  016B58  5B8B               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 22346  016B5A  0101               	movlb	1	; () banked
 22347  016B5C  5190               	movf	(___llmod@divisor+3)& (0+255),w,b
 22348  016B5E  0101               	movlb	1	; () banked
 22349  016B60  5B8C               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 22350  016B62                     l10578:
 22351                           
 22352                           ; BSR set to: 1
 22353  016B62  0101               	movlb	1	; () banked
 22354  016B64  90D8               	bcf	status,0,c
 22355  016B66  0101               	movlb	1	; () banked
 22356  016B68  3390               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 22357  016B6A  0101               	movlb	1	; () banked
 22358  016B6C  338F               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 22359  016B6E  0101               	movlb	1	; () banked
 22360  016B70  338E               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 22361  016B72  0101               	movlb	1	; () banked
 22362  016B74  338D               	rrcf	___llmod@divisor& (0+255),f,b
 22363                           
 22364                           ; BSR set to: 1
 22365  016B76  0101               	movlb	1	; () banked
 22366  016B78  2F91               	decfsz	___llmod@counter& (0+255),f,b
 22367  016B7A  D7D1               	goto	l10574
 22368  016B7C                     l2144:
 22369                           
 22370                           ; BSR set to: 1
 22371  016B7C  C189  F189         	movff	___llmod@dividend,?___llmod
 22372  016B80  C18A  F18A         	movff	___llmod@dividend+1,?___llmod+1
 22373  016B84  C18B  F18B         	movff	___llmod@dividend+2,?___llmod+2
 22374  016B88  C18C  F18C         	movff	___llmod@dividend+3,?___llmod+3
 22375                           
 22376                           ; BSR set to: 1
 22377  016B8C  0012               	return	
 22378  016B8E                     __end_of___llmod:
 22379                           	opt stack 0
 22380                           tblptru	equ	0xFF8
 22381                           tblptrh	equ	0xFF7
 22382                           tblptrl	equ	0xFF6
 22383                           tablat	equ	0xFF5
 22384                           prodh	equ	0xFF4
 22385                           prodl	equ	0xFF3
 22386                           intcon	equ	0xFF2
 22387                           postinc0	equ	0xFEE
 22388                           wreg	equ	0xFE8
 22389                           indf1	equ	0xFE7
 22390                           postinc1	equ	0xFE6
 22391                           postdec1	equ	0xFE5
 22392                           fsr1h	equ	0xFE2
 22393                           fsr1l	equ	0xFE1
 22394                           indf2	equ	0xFDF
 22395                           postinc2	equ	0xFDE
 22396                           postdec2	equ	0xFDD
 22397                           fsr2h	equ	0xFDA
 22398                           fsr2l	equ	0xFD9
 22399                           status	equ	0xFD8
 22400                           
 22401 ;; *************** function _UARTstringWAIT *****************
 22402 ;; Defined at:
 22403 ;;		line 295 in file "UART.c"
 22404 ;; Parameters:    Size  Location     Type
 22405 ;;  data            2   25[BANK1 ] PTR unsigned char 
 22406 ;;		 -> STR_34(18), STR_33(17), STR_32(24), STR_31(23), 
 22407 ;; Auto vars:     Size  Location     Type
 22408 ;;		None
 22409 ;; Return value:  Size  Location     Type
 22410 ;;		None               void
 22411 ;; Registers used:
 22412 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22413 ;; Tracked objects:
 22414 ;;		On entry : 0/0
 22415 ;;		On exit  : 0/0
 22416 ;;		Unchanged: 0/0
 22417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22418 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22421 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22422 ;;Total ram usage:        2 bytes
 22423 ;; Hardware stack levels used:    1
 22424 ;; Hardware stack levels required when called:    8
 22425 ;; This function calls:
 22426 ;;		_UARTchar
 22427 ;;		_delayUS
 22428 ;; This function is called by:
 22429 ;;		_SetBaud
 22430 ;; This function uses a non-reentrant model
 22431 ;;
 22432                           
 22433                           	psect	text36
 22434  0172D2                     __ptext36:
 22435                           	opt stack 0
 22436  0172D2                     _UARTstringWAIT:
 22437                           	opt stack 19
 22438  0172D2                     l474:
 22439                           
 22440                           ;UART.c: 298: {
 22441                           ;UART.c: 299: delayUS(5000);
 22442  0172D2  0E88               	movlw	136
 22443  0172D4  0101               	movlb	1	; () banked
 22444  0172D6  6F7C               	movwf	delayUS@US& (0+255),b
 22445  0172D8  0E13               	movlw	19
 22446  0172DA  0101               	movlb	1	; () banked
 22447  0172DC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 22448  0172DE  0E00               	movlw	0
 22449  0172E0  0101               	movlb	1	; () banked
 22450  0172E2  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 22451  0172E4  0E00               	movlw	0
 22452  0172E6  0101               	movlb	1	; () banked
 22453  0172E8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 22454  0172EA  ECA4  F0BA         	call	_delayUS	;wreg free
 22455                           
 22456                           ;UART.c: 300: if(*data != 0)
 22457  0172EE  0101               	movlb	1	; () banked
 22458  0172F0  C187  FFF6         	movff	UARTstringWAIT@data,tblptrl
 22459  0172F4  0101               	movlb	1	; () banked
 22460  0172F6  C188  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 22461  0172FA                     	if	0	;tblptru may be non-zero
 22462  0172FA                     	endif
 22463  0172FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22464  0172FA  0E00               	movlw	low (__mediumconst shr (0+16))
 22465  0172FC  6EF8               	movwf	tblptru,c
 22466  0172FE                     	endif
 22467  0172FE  0008               	tblrd		*
 22468  017300  50F5               	movf	tablat,w,c
 22469  017302  0900               	iorlw	0
 22470  017304  B4D8               	btfsc	status,2,c
 22471  017306  D014               	goto	l10750
 22472                           
 22473                           ; BSR set to: 1
 22474                           ;UART.c: 301: {
 22475                           ;UART.c: 302: UARTchar(*data, 0, 0);
 22476  017308  0E00               	movlw	0
 22477  01730A  0101               	movlb	1	; () banked
 22478  01730C  6F83               	movwf	UARTchar@NinethBit_override& (0+255),b
 22479  01730E  0E00               	movlw	0
 22480  017310  0101               	movlb	1	; () banked
 22481  017312  6F84               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 22482  017314  0101               	movlb	1	; () banked
 22483  017316  C187  FFF6         	movff	UARTstringWAIT@data,tblptrl
 22484  01731A  0101               	movlb	1	; () banked
 22485  01731C  C188  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 22486  017320                     	if	0	;tblptru may be non-zero
 22487  017320                     	endif
 22488  017320                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22489  017320  0E00               	movlw	low (__mediumconst shr (0+16))
 22490  017322  6EF8               	movwf	tblptru,c
 22491  017324                     	endif
 22492  017324  0008               	tblrd		*
 22493  017326  50F5               	movf	tablat,w,c
 22494  017328  ECA9  F0B9         	call	_UARTchar
 22495  01732C                     l476:
 22496  01732C  A2AC               	btfss	4012,1,c	;volatile
 22497  01732E  D7FE               	goto	l476
 22498  017330                     l10750:
 22499                           
 22500                           ;UART.c: 304: }
 22501                           ;UART.c: 305: } while( *data++);
 22502  017330  0101               	movlb	1	; () banked
 22503  017332  C187  FFF6         	movff	UARTstringWAIT@data,tblptrl
 22504  017336  0101               	movlb	1	; () banked
 22505  017338  C188  FFF7         	movff	UARTstringWAIT@data+1,tblptrh
 22506  01733C  0101               	movlb	1	; () banked
 22507  01733E  4B87               	infsnz	UARTstringWAIT@data& (0+255),f,b
 22508  017340  2B88               	incf	(UARTstringWAIT@data+1)& (0+255),f,b
 22509  017342                     	if	0	;tblptru may be non-zero
 22510  017342                     	endif
 22511  017342                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22512  017342  0E00               	movlw	low (__mediumconst shr (0+16))
 22513  017344  6EF8               	movwf	tblptru,c
 22514  017346                     	endif
 22515  017346  0008               	tblrd		*
 22516  017348  50F5               	movf	tablat,w,c
 22517  01734A  0900               	iorlw	0
 22518  01734C  B4D8               	btfsc	status,2,c
 22519                           
 22520                           ; BSR set to: 1
 22521                           
 22522                           ; BSR set to: 1
 22523  01734E  0012               	return	
 22524  017350  D7C0               	goto	l474
 22525  017352                     __end_of_UARTstringWAIT:
 22526                           	opt stack 0
 22527                           tblptru	equ	0xFF8
 22528                           tblptrh	equ	0xFF7
 22529                           tblptrl	equ	0xFF6
 22530                           tablat	equ	0xFF5
 22531                           prodh	equ	0xFF4
 22532                           prodl	equ	0xFF3
 22533                           intcon	equ	0xFF2
 22534                           postinc0	equ	0xFEE
 22535                           wreg	equ	0xFE8
 22536                           indf1	equ	0xFE7
 22537                           postinc1	equ	0xFE6
 22538                           postdec1	equ	0xFE5
 22539                           fsr1h	equ	0xFE2
 22540                           fsr1l	equ	0xFE1
 22541                           indf2	equ	0xFDF
 22542                           postinc2	equ	0xFDE
 22543                           postdec2	equ	0xFDD
 22544                           fsr2h	equ	0xFDA
 22545                           fsr2l	equ	0xFD9
 22546                           status	equ	0xFD8
 22547                           
 22548 ;; *************** function _SetMemoryParity *****************
 22549 ;; Defined at:
 22550 ;;		line 189 in file "EEPROM.c"
 22551 ;; Parameters:    Size  Location     Type
 22552 ;;  Parity          1    wreg     unsigned char 
 22553 ;; Auto vars:     Size  Location     Type
 22554 ;;  Parity          1   22[BANK1 ] unsigned char 
 22555 ;;  Test            1   21[BANK1 ] unsigned char 
 22556 ;; Return value:  Size  Location     Type
 22557 ;;                  1    wreg      unsigned char 
 22558 ;; Registers used:
 22559 ;;		wreg, status,2, status,0, cstack
 22560 ;; Tracked objects:
 22561 ;;		On entry : 0/0
 22562 ;;		On exit  : 0/0
 22563 ;;		Unchanged: 0/0
 22564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22566 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22568 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 22569 ;;Total ram usage:        2 bytes
 22570 ;; Hardware stack levels used:    1
 22571 ;; Hardware stack levels required when called:    8
 22572 ;; This function calls:
 22573 ;;		_GetMemoryParity
 22574 ;;		_WriteEEPROM_1Byte
 22575 ;; This function is called by:
 22576 ;;		_main
 22577 ;;		_SetBaud
 22578 ;; This function uses a non-reentrant model
 22579 ;;
 22580                           
 22581                           	psect	text37
 22582  000442                     __ptext37:
 22583                           	opt stack 0
 22584  000442                     _SetMemoryParity:
 22585                           	opt stack 21
 22586                           
 22587                           ; BSR set to: 1
 22588                           ;incstack = 0
 22589                           ;SetMemoryParity@Parity stored from wreg
 22590  000442  0101               	movlb	1	; () banked
 22591  000444  6F84               	movwf	SetMemoryParity@Parity& (0+255),b
 22592                           
 22593                           ; BSR set to: 1
 22594                           ;EEPROM.c: 191: unsigned char Test;
 22595                           ;EEPROM.c: 193: WriteEEPROM_1Byte(4, Parity);
 22596  000446  0E00               	movlw	0
 22597  000448  0101               	movlb	1	; () banked
 22598  00044A  6F7D               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 22599  00044C  0E04               	movlw	4
 22600  00044E  0101               	movlb	1	; () banked
 22601  000450  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 22602  000452  C184  F17E         	movff	SetMemoryParity@Parity,WriteEEPROM_1Byte@data
 22603  000456  ECD2  F0BD         	call	_WriteEEPROM_1Byte	;wreg free
 22604                           
 22605                           ;EEPROM.c: 196: Test = GetMemoryParity();
 22606  00045A  EC13  F003         	call	_GetMemoryParity	;wreg free
 22607  00045E  0101               	movlb	1	; () banked
 22608  000460  6F83               	movwf	SetMemoryParity@Test& (0+255),b
 22609                           
 22610                           ; BSR set to: 1
 22611                           ;EEPROM.c: 198: if(Test == Parity)
 22612  000462  0101               	movlb	1	; () banked
 22613  000464  5184               	movf	SetMemoryParity@Parity& (0+255),w,b
 22614  000466  0101               	movlb	1	; () banked
 22615  000468  6383               	cpfseq	SetMemoryParity@Test& (0+255),b
 22616  00046A  D002               	goto	l10692
 22617                           
 22618                           ; BSR set to: 1
 22619                           ;EEPROM.c: 199: {
 22620                           ;EEPROM.c: 200: return 1;
 22621  00046C  0E01               	movlw	1
 22622  00046E  0012               	return	
 22623  000470                     l10692:
 22624                           
 22625                           ; BSR set to: 1
 22626                           ;EEPROM.c: 201: }
 22627                           ;EEPROM.c: 202: return 0;
 22628  000470  0E00               	movlw	0
 22629  000472  0012               	return	
 22630  000474                     __end_of_SetMemoryParity:
 22631                           	opt stack 0
 22632                           tblptru	equ	0xFF8
 22633                           tblptrh	equ	0xFF7
 22634                           tblptrl	equ	0xFF6
 22635                           tablat	equ	0xFF5
 22636                           prodh	equ	0xFF4
 22637                           prodl	equ	0xFF3
 22638                           intcon	equ	0xFF2
 22639                           postinc0	equ	0xFEE
 22640                           wreg	equ	0xFE8
 22641                           indf1	equ	0xFE7
 22642                           postinc1	equ	0xFE6
 22643                           postdec1	equ	0xFE5
 22644                           fsr1h	equ	0xFE2
 22645                           fsr1l	equ	0xFE1
 22646                           indf2	equ	0xFDF
 22647                           postinc2	equ	0xFDE
 22648                           postdec2	equ	0xFDD
 22649                           fsr2h	equ	0xFDA
 22650                           fsr2l	equ	0xFD9
 22651                           status	equ	0xFD8
 22652                           
 22653 ;; *************** function _GetMemoryParity *****************
 22654 ;; Defined at:
 22655 ;;		line 175 in file "EEPROM.c"
 22656 ;; Parameters:    Size  Location     Type
 22657 ;;		None
 22658 ;; Auto vars:     Size  Location     Type
 22659 ;;  Parity          1   20[BANK1 ] unsigned char 
 22660 ;; Return value:  Size  Location     Type
 22661 ;;                  1    wreg      unsigned char 
 22662 ;; Registers used:
 22663 ;;		wreg, status,2, status,0, cstack
 22664 ;; Tracked objects:
 22665 ;;		On entry : 0/0
 22666 ;;		On exit  : 0/0
 22667 ;;		Unchanged: 0/0
 22668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22670 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22672 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22673 ;;Total ram usage:        1 bytes
 22674 ;; Hardware stack levels used:    1
 22675 ;; Hardware stack levels required when called:    7
 22676 ;; This function calls:
 22677 ;;		_ReadEEPROM_1Byte
 22678 ;; This function is called by:
 22679 ;;		_main
 22680 ;;		_SetMemoryParity
 22681 ;; This function uses a non-reentrant model
 22682 ;;
 22683                           
 22684                           	psect	text38
 22685  000626                     __ptext38:
 22686                           	opt stack 0
 22687  000626                     _GetMemoryParity:
 22688                           	opt stack 21
 22689                           
 22690                           ;EEPROM.c: 177: unsigned char Parity;
 22691                           ;EEPROM.c: 179: Parity = ReadEEPROM_1Byte(4);
 22692                           
 22693                           ; BSR set to: 1
 22694                           ;incstack = 0
 22695  000626  0E00               	movlw	0
 22696  000628  0101               	movlb	1	; () banked
 22697  00062A  6F7D               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 22698  00062C  0E04               	movlw	4
 22699  00062E  0101               	movlb	1	; () banked
 22700  000630  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 22701  000632  ECF6  F0BD         	call	_ReadEEPROM_1Byte	;wreg free
 22702  000636  0101               	movlb	1	; () banked
 22703  000638  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 22704  00063A  0101               	movlb	1	; () banked
 22705  00063C  6F82               	movwf	GetMemoryParity@Parity& (0+255),b
 22706                           
 22707                           ; BSR set to: 1
 22708                           ;EEPROM.c: 181: return (Parity);
 22709  00063E  0101               	movlb	1	; () banked
 22710  000640  5182               	movf	GetMemoryParity@Parity& (0+255),w,b
 22711  000642  0012               	return	
 22712  000644                     __end_of_GetMemoryParity:
 22713                           	opt stack 0
 22714                           tblptru	equ	0xFF8
 22715                           tblptrh	equ	0xFF7
 22716                           tblptrl	equ	0xFF6
 22717                           tablat	equ	0xFF5
 22718                           prodh	equ	0xFF4
 22719                           prodl	equ	0xFF3
 22720                           intcon	equ	0xFF2
 22721                           postinc0	equ	0xFEE
 22722                           wreg	equ	0xFE8
 22723                           indf1	equ	0xFE7
 22724                           postinc1	equ	0xFE6
 22725                           postdec1	equ	0xFE5
 22726                           fsr1h	equ	0xFE2
 22727                           fsr1l	equ	0xFE1
 22728                           indf2	equ	0xFDF
 22729                           postinc2	equ	0xFDE
 22730                           postdec2	equ	0xFDD
 22731                           fsr2h	equ	0xFDA
 22732                           fsr2l	equ	0xFD9
 22733                           status	equ	0xFD8
 22734                           
 22735 ;; *************** function _SetMemoryBaud *****************
 22736 ;; Defined at:
 22737 ;;		line 140 in file "EEPROM.c"
 22738 ;; Parameters:    Size  Location     Type
 22739 ;;  Baud            4   52[BANK1 ] unsigned long 
 22740 ;; Auto vars:     Size  Location     Type
 22741 ;;  Test            4   60[BANK1 ] unsigned long 
 22742 ;;  BaudTempL       1   67[BANK1 ] unsigned char 
 22743 ;;  BaudTempML      1   66[BANK1 ] unsigned char 
 22744 ;;  BaudTempMH      1   65[BANK1 ] unsigned char 
 22745 ;;  BaudTempH       1   64[BANK1 ] unsigned char 
 22746 ;; Return value:  Size  Location     Type
 22747 ;;                  1    wreg      unsigned char 
 22748 ;; Registers used:
 22749 ;;		wreg, status,2, status,0, cstack
 22750 ;; Tracked objects:
 22751 ;;		On entry : 0/0
 22752 ;;		On exit  : 0/0
 22753 ;;		Unchanged: 0/0
 22754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22755 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22756 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 22757 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 22758 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 22759 ;;Total ram usage:       16 bytes
 22760 ;; Hardware stack levels used:    1
 22761 ;; Hardware stack levels required when called:    8
 22762 ;; This function calls:
 22763 ;;		_GetMemoryBaud
 22764 ;;		_WriteEEPROM_1Byte
 22765 ;; This function is called by:
 22766 ;;		_main
 22767 ;;		_SetBaud
 22768 ;; This function uses a non-reentrant model
 22769 ;;
 22770                           
 22771                           	psect	text39
 22772  0160B4                     __ptext39:
 22773                           	opt stack 0
 22774  0160B4                     _SetMemoryBaud:
 22775                           	opt stack 21
 22776                           
 22777                           ;EEPROM.c: 142: unsigned char BaudTempH;
 22778                           ;EEPROM.c: 143: unsigned char BaudTempMH;
 22779                           ;EEPROM.c: 144: unsigned char BaudTempML;
 22780                           ;EEPROM.c: 145: unsigned char BaudTempL;
 22781                           ;EEPROM.c: 146: unsigned long Test;
 22782                           ;EEPROM.c: 148: BaudTempH = (unsigned char) ((Baud & 0XFF000000) >> 24);
 22783                           
 22784                           ; BSR set to: 1
 22785                           ;incstack = 0
 22786  0160B4  0E00               	movlw	0
 22787  0160B6  0101               	movlb	1	; () banked
 22788  0160B8  15A2               	andwf	SetMemoryBaud@Baud& (0+255),w,b
 22789  0160BA  0101               	movlb	1	; () banked
 22790  0160BC  6FA6               	movwf	??_SetMemoryBaud& (0+255),b
 22791  0160BE  0E00               	movlw	0
 22792  0160C0  0101               	movlb	1	; () banked
 22793  0160C2  15A3               	andwf	(SetMemoryBaud@Baud+1)& (0+255),w,b
 22794  0160C4  0101               	movlb	1	; () banked
 22795  0160C6  6FA7               	movwf	(??_SetMemoryBaud+1)& (0+255),b
 22796  0160C8  0E00               	movlw	0
 22797  0160CA  0101               	movlb	1	; () banked
 22798  0160CC  15A4               	andwf	(SetMemoryBaud@Baud+2)& (0+255),w,b
 22799  0160CE  0101               	movlb	1	; () banked
 22800  0160D0  6FA8               	movwf	(??_SetMemoryBaud+2)& (0+255),b
 22801  0160D2  0EFF               	movlw	255
 22802  0160D4  0101               	movlb	1	; () banked
 22803  0160D6  15A5               	andwf	(SetMemoryBaud@Baud+3)& (0+255),w,b
 22804  0160D8  0101               	movlb	1	; () banked
 22805  0160DA  6FA9               	movwf	(??_SetMemoryBaud+3)& (0+255),b
 22806  0160DC  0E19               	movlw	25
 22807  0160DE  D006               	goto	u13160
 22808  0160E0                     u13165:
 22809  0160E0  0101               	movlb	1	; () banked
 22810  0160E2  90D8               	bcf	status,0,c
 22811  0160E4  33A9               	rrcf	(??_SetMemoryBaud+3)& (0+255),f,b
 22812  0160E6  33A8               	rrcf	(??_SetMemoryBaud+2)& (0+255),f,b
 22813  0160E8  33A7               	rrcf	(??_SetMemoryBaud+1)& (0+255),f,b
 22814  0160EA  33A6               	rrcf	??_SetMemoryBaud& (0+255),f,b
 22815  0160EC                     u13160:
 22816  0160EC  2EE8               	decfsz	wreg,f,c
 22817  0160EE  D7F8               	goto	u13165
 22818  0160F0  0101               	movlb	1	; () banked
 22819  0160F2  51A6               	movf	??_SetMemoryBaud& (0+255),w,b
 22820  0160F4  0101               	movlb	1	; () banked
 22821  0160F6  6FAE               	movwf	SetMemoryBaud@BaudTempH& (0+255),b
 22822                           
 22823                           ; BSR set to: 1
 22824                           ;EEPROM.c: 149: BaudTempMH = (unsigned char) ((Baud & 0X00FF0000) >> 16);
 22825  0160F8  C1A4  F1AF         	movff	SetMemoryBaud@Baud+2,SetMemoryBaud@BaudTempMH
 22826                           
 22827                           ; BSR set to: 1
 22828                           ;EEPROM.c: 150: BaudTempML = (unsigned char) ((Baud & 0X0000FF00) >> 8);
 22829  0160FC  C1A3  F1B0         	movff	SetMemoryBaud@Baud+1,SetMemoryBaud@BaudTempML
 22830                           
 22831                           ; BSR set to: 1
 22832                           ;EEPROM.c: 151: BaudTempL = (unsigned char) (Baud & 0X000000FF);
 22833  016100  C1A2  F1B1         	movff	SetMemoryBaud@Baud,SetMemoryBaud@BaudTempL
 22834                           
 22835                           ; BSR set to: 1
 22836                           ;EEPROM.c: 154: WriteEEPROM_1Byte(0, BaudTempH);
 22837  016104  0E00               	movlw	0
 22838  016106  0101               	movlb	1	; () banked
 22839  016108  6F7D               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 22840  01610A  0E00               	movlw	0
 22841  01610C  0101               	movlb	1	; () banked
 22842  01610E  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 22843  016110  C1AE  F17E         	movff	SetMemoryBaud@BaudTempH,WriteEEPROM_1Byte@data
 22844  016114  ECD2  F0BD         	call	_WriteEEPROM_1Byte	;wreg free
 22845                           
 22846                           ;EEPROM.c: 155: WriteEEPROM_1Byte(1, BaudTempMH);
 22847  016118  0E00               	movlw	0
 22848  01611A  0101               	movlb	1	; () banked
 22849  01611C  6F7D               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 22850  01611E  0E01               	movlw	1
 22851  016120  0101               	movlb	1	; () banked
 22852  016122  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 22853  016124  C1AF  F17E         	movff	SetMemoryBaud@BaudTempMH,WriteEEPROM_1Byte@data
 22854  016128  ECD2  F0BD         	call	_WriteEEPROM_1Byte	;wreg free
 22855                           
 22856                           ;EEPROM.c: 156: WriteEEPROM_1Byte(2, BaudTempML);
 22857  01612C  0E00               	movlw	0
 22858  01612E  0101               	movlb	1	; () banked
 22859  016130  6F7D               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 22860  016132  0E02               	movlw	2
 22861  016134  0101               	movlb	1	; () banked
 22862  016136  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 22863  016138  C1B0  F17E         	movff	SetMemoryBaud@BaudTempML,WriteEEPROM_1Byte@data
 22864  01613C  ECD2  F0BD         	call	_WriteEEPROM_1Byte	;wreg free
 22865                           
 22866                           ;EEPROM.c: 157: WriteEEPROM_1Byte(3, BaudTempL);
 22867  016140  0E00               	movlw	0
 22868  016142  0101               	movlb	1	; () banked
 22869  016144  6F7D               	movwf	(WriteEEPROM_1Byte@address+1)& (0+255),b
 22870  016146  0E03               	movlw	3
 22871  016148  0101               	movlb	1	; () banked
 22872  01614A  6F7C               	movwf	WriteEEPROM_1Byte@address& (0+255),b
 22873  01614C  C1B1  F17E         	movff	SetMemoryBaud@BaudTempL,WriteEEPROM_1Byte@data
 22874  016150  ECD2  F0BD         	call	_WriteEEPROM_1Byte	;wreg free
 22875                           
 22876                           ;EEPROM.c: 160: Test = GetMemoryBaud();
 22877  016154  ECCF  F0AB         	call	_GetMemoryBaud	;wreg free
 22878  016158  C182  F1AA         	movff	?_GetMemoryBaud,SetMemoryBaud@Test
 22879  01615C  C183  F1AB         	movff	?_GetMemoryBaud+1,SetMemoryBaud@Test+1
 22880  016160  C184  F1AC         	movff	?_GetMemoryBaud+2,SetMemoryBaud@Test+2
 22881  016164  C185  F1AD         	movff	?_GetMemoryBaud+3,SetMemoryBaud@Test+3
 22882                           
 22883                           ;EEPROM.c: 162: if(Test == Baud)
 22884  016168  0101               	movlb	1	; () banked
 22885  01616A  51A5               	movf	(SetMemoryBaud@Baud+3)& (0+255),w,b
 22886  01616C  0101               	movlb	1	; () banked
 22887  01616E  19AD               	xorwf	(SetMemoryBaud@Test+3)& (0+255),w,b
 22888  016170  E10E               	bnz	u13175
 22889  016172  0101               	movlb	1	; () banked
 22890  016174  51A4               	movf	(SetMemoryBaud@Baud+2)& (0+255),w,b
 22891  016176  0101               	movlb	1	; () banked
 22892  016178  19AC               	xorwf	(SetMemoryBaud@Test+2)& (0+255),w,b
 22893  01617A  E109               	bnz	u13175
 22894  01617C  0101               	movlb	1	; () banked
 22895  01617E  51A3               	movf	(SetMemoryBaud@Baud+1)& (0+255),w,b
 22896  016180  0101               	movlb	1	; () banked
 22897  016182  19AB               	xorwf	(SetMemoryBaud@Test+1)& (0+255),w,b
 22898  016184  E104               	bnz	u13175
 22899  016186  0101               	movlb	1	; () banked
 22900  016188  51A2               	movf	SetMemoryBaud@Baud& (0+255),w,b
 22901  01618A  0101               	movlb	1	; () banked
 22902  01618C  19AA               	xorwf	SetMemoryBaud@Test& (0+255),w,b
 22903  01618E                     u13175:
 22904  01618E  A4D8               	btfss	status,2,c
 22905  016190  D002               	goto	l10680
 22906                           
 22907                           ; BSR set to: 1
 22908                           ;EEPROM.c: 163: {
 22909                           ;EEPROM.c: 164: return 1;
 22910  016192  0E01               	movlw	1
 22911  016194  0012               	return	
 22912  016196                     l10680:
 22913                           
 22914                           ; BSR set to: 1
 22915                           ;EEPROM.c: 165: }
 22916                           ;EEPROM.c: 166: return 0;
 22917  016196  0E00               	movlw	0
 22918  016198  0012               	return	
 22919  01619A                     __end_of_SetMemoryBaud:
 22920                           	opt stack 0
 22921                           tblptru	equ	0xFF8
 22922                           tblptrh	equ	0xFF7
 22923                           tblptrl	equ	0xFF6
 22924                           tablat	equ	0xFF5
 22925                           prodh	equ	0xFF4
 22926                           prodl	equ	0xFF3
 22927                           intcon	equ	0xFF2
 22928                           postinc0	equ	0xFEE
 22929                           wreg	equ	0xFE8
 22930                           indf1	equ	0xFE7
 22931                           postinc1	equ	0xFE6
 22932                           postdec1	equ	0xFE5
 22933                           fsr1h	equ	0xFE2
 22934                           fsr1l	equ	0xFE1
 22935                           indf2	equ	0xFDF
 22936                           postinc2	equ	0xFDE
 22937                           postdec2	equ	0xFDD
 22938                           fsr2h	equ	0xFDA
 22939                           fsr2l	equ	0xFD9
 22940                           status	equ	0xFD8
 22941                           
 22942 ;; *************** function _WriteEEPROM_1Byte *****************
 22943 ;; Defined at:
 22944 ;;		line 92 in file "EEPROM.c"
 22945 ;; Parameters:    Size  Location     Type
 22946 ;;  address         2   14[BANK1 ] unsigned int 
 22947 ;;  data            1   16[BANK1 ] unsigned char 
 22948 ;; Auto vars:     Size  Location     Type
 22949 ;;  GIEstatus       1   20[BANK1 ] unsigned char 
 22950 ;; Return value:  Size  Location     Type
 22951 ;;		None               void
 22952 ;; Registers used:
 22953 ;;		wreg, status,2, status,0, cstack
 22954 ;; Tracked objects:
 22955 ;;		On entry : 0/0
 22956 ;;		On exit  : 0/0
 22957 ;;		Unchanged: 0/0
 22958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22959 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 22960 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 22961 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 22962 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 22963 ;;Total ram usage:        7 bytes
 22964 ;; Hardware stack levels used:    1
 22965 ;; Hardware stack levels required when called:    7
 22966 ;; This function calls:
 22967 ;;		_EEPROM_UNLOCK
 22968 ;; This function is called by:
 22969 ;;		_SetMemoryBaud
 22970 ;;		_SetMemoryParity
 22971 ;; This function uses a non-reentrant model
 22972 ;;
 22973                           
 22974                           	psect	text40
 22975  017BA4                     __ptext40:
 22976                           	opt stack 0
 22977  017BA4                     _WriteEEPROM_1Byte:
 22978                           	opt stack 21
 22979                           
 22980                           ;EEPROM.c: 94: unsigned char GIEstatus = INTCONbits.GIE;
 22981                           
 22982                           ; BSR set to: 1
 22983                           ;incstack = 0
 22984  017BA4  0E00               	movlw	0
 22985  017BA6  BEF2               	btfsc	intcon,7,c	;volatile
 22986  017BA8  0E01               	movlw	1
 22987  017BAA  0101               	movlb	1	; () banked
 22988  017BAC  6F82               	movwf	WriteEEPROM_1Byte@GIEstatus& (0+255),b
 22989                           
 22990                           ; BSR set to: 1
 22991                           ;EEPROM.c: 95: EEADRH = (unsigned char)((address & 0x300) >> 8);
 22992  017BAE  0101               	movlb	1	; () banked
 22993  017BB0  C17D  F17F         	movff	WriteEEPROM_1Byte@address+1,??_WriteEEPROM_1Byte
 22994  017BB4  C17F  F180         	movff	??_WriteEEPROM_1Byte,??_WriteEEPROM_1Byte+1
 22995  017BB8  0101               	movlb	1	; () banked
 22996  017BBA  6B81               	clrf	(??_WriteEEPROM_1Byte+2)& (0+255),b
 22997  017BBC  0101               	movlb	1	; () banked
 22998  017BBE  5180               	movf	(??_WriteEEPROM_1Byte+1)& (0+255),w,b
 22999  017BC0  0B03               	andlw	3
 23000  017BC2  6EAA               	movwf	4010,c	;volatile
 23001                           
 23002                           ; BSR set to: 1
 23003                           ;EEPROM.c: 96: EEADR = (unsigned char)(address & 0xFF);
 23004  017BC4  C17C  FFA9         	movff	WriteEEPROM_1Byte@address,4009	;volatile
 23005                           
 23006                           ; BSR set to: 1
 23007                           ;EEPROM.c: 97: EEDATA = data;
 23008  017BC8  C17E  FFA8         	movff	WriteEEPROM_1Byte@data,4008	;volatile
 23009                           
 23010                           ; BSR set to: 1
 23011                           ;EEPROM.c: 98: EECON1bits.EEPGD = 0;
 23012  017BCC  9EA6               	bcf	4006,7,c	;volatile
 23013                           
 23014                           ; BSR set to: 1
 23015                           ;EEPROM.c: 99: EECON1bits.CFGS = 0;
 23016  017BCE  9CA6               	bcf	4006,6,c	;volatile
 23017                           
 23018                           ; BSR set to: 1
 23019                           ;EEPROM.c: 100: EECON1bits.WREN =1;
 23020  017BD0  84A6               	bsf	4006,2,c	;volatile
 23021                           
 23022                           ; BSR set to: 1
 23023                           ;EEPROM.c: 101: INTCONbits.GIE =0;
 23024  017BD2  9EF2               	bcf	intcon,7,c	;volatile
 23025                           
 23026                           ; BSR set to: 1
 23027                           ;EEPROM.c: 102: EEPROM_UNLOCK();
 23028  017BD4  EC69  F003         	call	_EEPROM_UNLOCK	;wreg free
 23029                           
 23030                           ;EEPROM.c: 103: EECON1bits.WR =1;
 23031  017BD8  82A6               	bsf	4006,1,c	;volatile
 23032  017BDA                     l1506:
 23033  017BDA  B2A6               	btfsc	4006,1,c	;volatile
 23034  017BDC  D7FE               	goto	l1506
 23035                           
 23036                           ;EEPROM.c: 105: EECON1bits.WREN =0;
 23037  017BDE  94A6               	bcf	4006,2,c	;volatile
 23038                           
 23039                           ;EEPROM.c: 106: if(GIEstatus)
 23040  017BE0  0101               	movlb	1	; () banked
 23041  017BE2  5182               	movf	WriteEEPROM_1Byte@GIEstatus& (0+255),w,b
 23042  017BE4  B4D8               	btfsc	status,2,c
 23043  017BE6  0012               	return	
 23044                           
 23045                           ; BSR set to: 1
 23046                           ;EEPROM.c: 107: {
 23047                           ;EEPROM.c: 108: INTCONbits.GIE =1;
 23048  017BE8  8EF2               	bsf	intcon,7,c	;volatile
 23049  017BEA  0012               	return	
 23050  017BEC                     __end_of_WriteEEPROM_1Byte:
 23051                           	opt stack 0
 23052                           tblptru	equ	0xFF8
 23053                           tblptrh	equ	0xFF7
 23054                           tblptrl	equ	0xFF6
 23055                           tablat	equ	0xFF5
 23056                           prodh	equ	0xFF4
 23057                           prodl	equ	0xFF3
 23058                           intcon	equ	0xFF2
 23059                           postinc0	equ	0xFEE
 23060                           wreg	equ	0xFE8
 23061                           indf1	equ	0xFE7
 23062                           postinc1	equ	0xFE6
 23063                           postdec1	equ	0xFE5
 23064                           fsr1h	equ	0xFE2
 23065                           fsr1l	equ	0xFE1
 23066                           indf2	equ	0xFDF
 23067                           postinc2	equ	0xFDE
 23068                           postdec2	equ	0xFDD
 23069                           fsr2h	equ	0xFDA
 23070                           fsr2l	equ	0xFD9
 23071                           status	equ	0xFD8
 23072                           
 23073 ;; *************** function _EEPROM_UNLOCK *****************
 23074 ;; Defined at:
 23075 ;;		line 77 in file "EEPROM.c"
 23076 ;; Parameters:    Size  Location     Type
 23077 ;;		None
 23078 ;; Auto vars:     Size  Location     Type
 23079 ;;		None
 23080 ;; Return value:  Size  Location     Type
 23081 ;;		None               void
 23082 ;; Registers used:
 23083 ;;		wreg, status,2
 23084 ;; Tracked objects:
 23085 ;;		On entry : 0/0
 23086 ;;		On exit  : 0/0
 23087 ;;		Unchanged: 0/0
 23088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23093 ;;Total ram usage:        0 bytes
 23094 ;; Hardware stack levels used:    1
 23095 ;; Hardware stack levels required when called:    6
 23096 ;; This function calls:
 23097 ;;		Nothing
 23098 ;; This function is called by:
 23099 ;;		_WriteEEPROM_1Byte
 23100 ;; This function uses a non-reentrant model
 23101 ;;
 23102                           
 23103                           	psect	text41
 23104  0006D2                     __ptext41:
 23105                           	opt stack 0
 23106  0006D2                     _EEPROM_UNLOCK:
 23107                           	opt stack 21
 23108                           
 23109                           ;EEPROM.c: 79: EECON2 = 0x55;
 23110                           
 23111                           ; BSR set to: 1
 23112                           ;incstack = 0
 23113  0006D2  0E55               	movlw	85
 23114  0006D4  6EA7               	movwf	4007,c	;volatile
 23115                           
 23116                           ;EEPROM.c: 80: EECON2 = 0xAA;
 23117  0006D6  0EAA               	movlw	170
 23118  0006D8  6EA7               	movwf	4007,c	;volatile
 23119                           
 23120                           ;EEPROM.c: 81: EECON1bits.WR =1;
 23121  0006DA  82A6               	bsf	4006,1,c	;volatile
 23122  0006DC                     l1500:
 23123  0006DC  B2A6               	btfsc	4006,1,c	;volatile
 23124  0006DE  D7FE               	goto	l1500
 23125                           
 23126                           ;EEPROM.c: 83: __nop();
 23127  0006E0  F000               	nop	
 23128                           
 23129                           ;EEPROM.c: 84: __nop();
 23130  0006E2  F000               	nop	
 23131  0006E4  0012               	return	
 23132  0006E6                     __end_of_EEPROM_UNLOCK:
 23133                           	opt stack 0
 23134                           tblptru	equ	0xFF8
 23135                           tblptrh	equ	0xFF7
 23136                           tblptrl	equ	0xFF6
 23137                           tablat	equ	0xFF5
 23138                           prodh	equ	0xFF4
 23139                           prodl	equ	0xFF3
 23140                           intcon	equ	0xFF2
 23141                           postinc0	equ	0xFEE
 23142                           wreg	equ	0xFE8
 23143                           indf1	equ	0xFE7
 23144                           postinc1	equ	0xFE6
 23145                           postdec1	equ	0xFE5
 23146                           fsr1h	equ	0xFE2
 23147                           fsr1l	equ	0xFE1
 23148                           indf2	equ	0xFDF
 23149                           postinc2	equ	0xFDE
 23150                           postdec2	equ	0xFDD
 23151                           fsr2h	equ	0xFDA
 23152                           fsr2l	equ	0xFD9
 23153                           status	equ	0xFD8
 23154                           
 23155 ;; *************** function _GetMemoryBaud *****************
 23156 ;; Defined at:
 23157 ;;		line 117 in file "EEPROM.c"
 23158 ;; Parameters:    Size  Location     Type
 23159 ;;		None
 23160 ;; Auto vars:     Size  Location     Type
 23161 ;;  baud            4   44[BANK1 ] unsigned long 
 23162 ;;  BaudTempL       1   51[BANK1 ] unsigned char 
 23163 ;;  BaudTempML      1   50[BANK1 ] unsigned char 
 23164 ;;  BaudTempMH      1   49[BANK1 ] unsigned char 
 23165 ;;  BaudTempH       1   48[BANK1 ] unsigned char 
 23166 ;; Return value:  Size  Location     Type
 23167 ;;                  4   20[BANK1 ] unsigned long 
 23168 ;; Registers used:
 23169 ;;		wreg, status,2, status,0, cstack
 23170 ;; Tracked objects:
 23171 ;;		On entry : 0/0
 23172 ;;		On exit  : 0/0
 23173 ;;		Unchanged: 0/0
 23174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23175 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23176 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 23177 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
 23178 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
 23179 ;;Total ram usage:       32 bytes
 23180 ;; Hardware stack levels used:    1
 23181 ;; Hardware stack levels required when called:    7
 23182 ;; This function calls:
 23183 ;;		_ReadEEPROM_1Byte
 23184 ;; This function is called by:
 23185 ;;		_main
 23186 ;;		_SetMemoryBaud
 23187 ;; This function uses a non-reentrant model
 23188 ;;
 23189                           
 23190                           	psect	text42
 23191  01579E                     __ptext42:
 23192                           	opt stack 0
 23193  01579E                     _GetMemoryBaud:
 23194                           	opt stack 21
 23195                           
 23196                           ;EEPROM.c: 119: unsigned char BaudTempH;
 23197                           ;EEPROM.c: 120: unsigned char BaudTempMH;
 23198                           ;EEPROM.c: 121: unsigned char BaudTempML;
 23199                           ;EEPROM.c: 122: unsigned char BaudTempL;
 23200                           ;EEPROM.c: 123: unsigned long baud =0;
 23201                           
 23202                           ;incstack = 0
 23203  01579E  0E00               	movlw	0
 23204  0157A0  0101               	movlb	1	; () banked
 23205  0157A2  6F9A               	movwf	GetMemoryBaud@baud& (0+255),b
 23206  0157A4  0E00               	movlw	0
 23207  0157A6  0101               	movlb	1	; () banked
 23208  0157A8  6F9B               	movwf	(GetMemoryBaud@baud+1)& (0+255),b
 23209  0157AA  0E00               	movlw	0
 23210  0157AC  0101               	movlb	1	; () banked
 23211  0157AE  6F9C               	movwf	(GetMemoryBaud@baud+2)& (0+255),b
 23212  0157B0  0E00               	movlw	0
 23213  0157B2  0101               	movlb	1	; () banked
 23214  0157B4  6F9D               	movwf	(GetMemoryBaud@baud+3)& (0+255),b
 23215                           
 23216                           ; BSR set to: 1
 23217                           ;EEPROM.c: 125: BaudTempH = ReadEEPROM_1Byte(0);
 23218  0157B6  0E00               	movlw	0
 23219  0157B8  0101               	movlb	1	; () banked
 23220  0157BA  6F7D               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 23221  0157BC  0E00               	movlw	0
 23222  0157BE  0101               	movlb	1	; () banked
 23223  0157C0  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 23224  0157C2  ECF6  F0BD         	call	_ReadEEPROM_1Byte	;wreg free
 23225  0157C6  0101               	movlb	1	; () banked
 23226  0157C8  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 23227  0157CA  0101               	movlb	1	; () banked
 23228  0157CC  6F9E               	movwf	GetMemoryBaud@BaudTempH& (0+255),b
 23229                           
 23230                           ; BSR set to: 1
 23231                           ;EEPROM.c: 126: BaudTempMH = ReadEEPROM_1Byte(1);
 23232  0157CE  0E00               	movlw	0
 23233  0157D0  0101               	movlb	1	; () banked
 23234  0157D2  6F7D               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 23235  0157D4  0E01               	movlw	1
 23236  0157D6  0101               	movlb	1	; () banked
 23237  0157D8  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 23238  0157DA  ECF6  F0BD         	call	_ReadEEPROM_1Byte	;wreg free
 23239  0157DE  0101               	movlb	1	; () banked
 23240  0157E0  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 23241  0157E2  0101               	movlb	1	; () banked
 23242  0157E4  6F9F               	movwf	GetMemoryBaud@BaudTempMH& (0+255),b
 23243                           
 23244                           ; BSR set to: 1
 23245                           ;EEPROM.c: 127: BaudTempML = ReadEEPROM_1Byte(2);
 23246  0157E6  0E00               	movlw	0
 23247  0157E8  0101               	movlb	1	; () banked
 23248  0157EA  6F7D               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 23249  0157EC  0E02               	movlw	2
 23250  0157EE  0101               	movlb	1	; () banked
 23251  0157F0  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 23252  0157F2  ECF6  F0BD         	call	_ReadEEPROM_1Byte	;wreg free
 23253  0157F6  0101               	movlb	1	; () banked
 23254  0157F8  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 23255  0157FA  0101               	movlb	1	; () banked
 23256  0157FC  6FA0               	movwf	GetMemoryBaud@BaudTempML& (0+255),b
 23257                           
 23258                           ; BSR set to: 1
 23259                           ;EEPROM.c: 128: BaudTempL = ReadEEPROM_1Byte(3);
 23260  0157FE  0E00               	movlw	0
 23261  015800  0101               	movlb	1	; () banked
 23262  015802  6F7D               	movwf	(ReadEEPROM_1Byte@address+1)& (0+255),b
 23263  015804  0E03               	movlw	3
 23264  015806  0101               	movlb	1	; () banked
 23265  015808  6F7C               	movwf	ReadEEPROM_1Byte@address& (0+255),b
 23266  01580A  ECF6  F0BD         	call	_ReadEEPROM_1Byte	;wreg free
 23267  01580E  0101               	movlb	1	; () banked
 23268  015810  517C               	movf	?_ReadEEPROM_1Byte& (0+255),w,b
 23269  015812  0101               	movlb	1	; () banked
 23270  015814  6FA1               	movwf	GetMemoryBaud@BaudTempL& (0+255),b
 23271                           
 23272                           ; BSR set to: 1
 23273                           ;EEPROM.c: 130: baud = (((unsigned long) BaudTempH << 24) + ((unsigned long)BaudTempMH <
      +                          < 16) + ((unsigned long)BaudTempML << 8) + (unsigned long)BaudTempL);
 23274  015816  0101               	movlb	1	; () banked
 23275  015818  C1A0  F186         	movff	GetMemoryBaud@BaudTempML,??_GetMemoryBaud
 23276  01581C  0101               	movlb	1	; () banked
 23277  01581E  6B87               	clrf	(??_GetMemoryBaud+1)& (0+255),b
 23278  015820  6B88               	clrf	(??_GetMemoryBaud+2)& (0+255),b
 23279  015822  6B89               	clrf	(??_GetMemoryBaud+3)& (0+255),b
 23280  015824  C188  F189         	movff	??_GetMemoryBaud+2,??_GetMemoryBaud+3
 23281  015828  C187  F188         	movff	??_GetMemoryBaud+1,??_GetMemoryBaud+2
 23282  01582C  C186  F187         	movff	??_GetMemoryBaud,??_GetMemoryBaud+1
 23283  015830  0101               	movlb	1	; () banked
 23284  015832  6B86               	clrf	??_GetMemoryBaud& (0+255),b
 23285  015834  0101               	movlb	1	; () banked
 23286  015836  C19F  F18A         	movff	GetMemoryBaud@BaudTempMH,??_GetMemoryBaud+4
 23287  01583A  0101               	movlb	1	; () banked
 23288  01583C  6B8B               	clrf	(??_GetMemoryBaud+5)& (0+255),b
 23289  01583E  6B8C               	clrf	(??_GetMemoryBaud+6)& (0+255),b
 23290  015840  6B8D               	clrf	(??_GetMemoryBaud+7)& (0+255),b
 23291  015842  C18B  F18D         	movff	??_GetMemoryBaud+5,??_GetMemoryBaud+7
 23292  015846  C18A  F18C         	movff	??_GetMemoryBaud+4,??_GetMemoryBaud+6
 23293  01584A  0101               	movlb	1	; () banked
 23294  01584C  6B8B               	clrf	(??_GetMemoryBaud+5)& (0+255),b
 23295  01584E  6B8A               	clrf	(??_GetMemoryBaud+4)& (0+255),b
 23296  015850  0101               	movlb	1	; () banked
 23297  015852  C19E  F18E         	movff	GetMemoryBaud@BaudTempH,??_GetMemoryBaud+8
 23298  015856  0101               	movlb	1	; () banked
 23299  015858  6B8F               	clrf	(??_GetMemoryBaud+9)& (0+255),b
 23300  01585A  6B90               	clrf	(??_GetMemoryBaud+10)& (0+255),b
 23301  01585C  6B91               	clrf	(??_GetMemoryBaud+11)& (0+255),b
 23302  01585E  C18E  F191         	movff	??_GetMemoryBaud+8,??_GetMemoryBaud+11
 23303  015862  0101               	movlb	1	; () banked
 23304  015864  6B90               	clrf	(??_GetMemoryBaud+10)& (0+255),b
 23305  015866  6B8F               	clrf	(??_GetMemoryBaud+9)& (0+255),b
 23306  015868  6B8E               	clrf	(??_GetMemoryBaud+8)& (0+255),b
 23307  01586A  0101               	movlb	1	; () banked
 23308  01586C  518A               	movf	(??_GetMemoryBaud+4)& (0+255),w,b
 23309  01586E  0101               	movlb	1	; () banked
 23310  015870  258E               	addwf	(??_GetMemoryBaud+8)& (0+255),w,b
 23311  015872  0101               	movlb	1	; () banked
 23312  015874  6F92               	movwf	(??_GetMemoryBaud+12)& (0+255),b
 23313  015876  0101               	movlb	1	; () banked
 23314  015878  518B               	movf	(??_GetMemoryBaud+5)& (0+255),w,b
 23315  01587A  0101               	movlb	1	; () banked
 23316  01587C  218F               	addwfc	(??_GetMemoryBaud+9)& (0+255),w,b
 23317  01587E  0101               	movlb	1	; () banked
 23318  015880  6F93               	movwf	(??_GetMemoryBaud+13)& (0+255),b
 23319  015882  0101               	movlb	1	; () banked
 23320  015884  518C               	movf	(??_GetMemoryBaud+6)& (0+255),w,b
 23321  015886  0101               	movlb	1	; () banked
 23322  015888  2190               	addwfc	(??_GetMemoryBaud+10)& (0+255),w,b
 23323  01588A  0101               	movlb	1	; () banked
 23324  01588C  6F94               	movwf	(??_GetMemoryBaud+14)& (0+255),b
 23325  01588E  0101               	movlb	1	; () banked
 23326  015890  518D               	movf	(??_GetMemoryBaud+7)& (0+255),w,b
 23327  015892  0101               	movlb	1	; () banked
 23328  015894  2191               	addwfc	(??_GetMemoryBaud+11)& (0+255),w,b
 23329  015896  0101               	movlb	1	; () banked
 23330  015898  6F95               	movwf	(??_GetMemoryBaud+15)& (0+255),b
 23331  01589A  0101               	movlb	1	; () banked
 23332  01589C  5186               	movf	??_GetMemoryBaud& (0+255),w,b
 23333  01589E  0101               	movlb	1	; () banked
 23334  0158A0  2592               	addwf	(??_GetMemoryBaud+12)& (0+255),w,b
 23335  0158A2  0101               	movlb	1	; () banked
 23336  0158A4  6F96               	movwf	(??_GetMemoryBaud+16)& (0+255),b
 23337  0158A6  0101               	movlb	1	; () banked
 23338  0158A8  5187               	movf	(??_GetMemoryBaud+1)& (0+255),w,b
 23339  0158AA  0101               	movlb	1	; () banked
 23340  0158AC  2193               	addwfc	(??_GetMemoryBaud+13)& (0+255),w,b
 23341  0158AE  0101               	movlb	1	; () banked
 23342  0158B0  6F97               	movwf	(??_GetMemoryBaud+17)& (0+255),b
 23343  0158B2  0101               	movlb	1	; () banked
 23344  0158B4  5188               	movf	(??_GetMemoryBaud+2)& (0+255),w,b
 23345  0158B6  0101               	movlb	1	; () banked
 23346  0158B8  2194               	addwfc	(??_GetMemoryBaud+14)& (0+255),w,b
 23347  0158BA  0101               	movlb	1	; () banked
 23348  0158BC  6F98               	movwf	(??_GetMemoryBaud+18)& (0+255),b
 23349  0158BE  0101               	movlb	1	; () banked
 23350  0158C0  5189               	movf	(??_GetMemoryBaud+3)& (0+255),w,b
 23351  0158C2  0101               	movlb	1	; () banked
 23352  0158C4  2195               	addwfc	(??_GetMemoryBaud+15)& (0+255),w,b
 23353  0158C6  0101               	movlb	1	; () banked
 23354  0158C8  6F99               	movwf	(??_GetMemoryBaud+19)& (0+255),b
 23355  0158CA  0101               	movlb	1	; () banked
 23356  0158CC  51A1               	movf	GetMemoryBaud@BaudTempL& (0+255),w,b
 23357  0158CE  0101               	movlb	1	; () banked
 23358  0158D0  2596               	addwf	(??_GetMemoryBaud+16)& (0+255),w,b
 23359  0158D2  0101               	movlb	1	; () banked
 23360  0158D4  6F9A               	movwf	GetMemoryBaud@baud& (0+255),b
 23361  0158D6  0E00               	movlw	0
 23362  0158D8  0101               	movlb	1	; () banked
 23363  0158DA  2197               	addwfc	(??_GetMemoryBaud+17)& (0+255),w,b
 23364  0158DC  0101               	movlb	1	; () banked
 23365  0158DE  6F9B               	movwf	(GetMemoryBaud@baud+1)& (0+255),b
 23366  0158E0  0E00               	movlw	0
 23367  0158E2  0101               	movlb	1	; () banked
 23368  0158E4  2198               	addwfc	(??_GetMemoryBaud+18)& (0+255),w,b
 23369  0158E6  0101               	movlb	1	; () banked
 23370  0158E8  6F9C               	movwf	(GetMemoryBaud@baud+2)& (0+255),b
 23371  0158EA  0E00               	movlw	0
 23372  0158EC  0101               	movlb	1	; () banked
 23373  0158EE  2199               	addwfc	(??_GetMemoryBaud+19)& (0+255),w,b
 23374  0158F0  0101               	movlb	1	; () banked
 23375  0158F2  6F9D               	movwf	(GetMemoryBaud@baud+3)& (0+255),b
 23376                           
 23377                           ; BSR set to: 1
 23378                           ;EEPROM.c: 131: __nop();
 23379  0158F4  F000               	nop	
 23380                           
 23381                           ;EEPROM.c: 132: return baud;
 23382  0158F6  C19A  F182         	movff	GetMemoryBaud@baud,?_GetMemoryBaud
 23383  0158FA  C19B  F183         	movff	GetMemoryBaud@baud+1,?_GetMemoryBaud+1
 23384  0158FE  C19C  F184         	movff	GetMemoryBaud@baud+2,?_GetMemoryBaud+2
 23385  015902  C19D  F185         	movff	GetMemoryBaud@baud+3,?_GetMemoryBaud+3
 23386  015906  0012               	return	
 23387  015908                     __end_of_GetMemoryBaud:
 23388                           	opt stack 0
 23389                           tblptru	equ	0xFF8
 23390                           tblptrh	equ	0xFF7
 23391                           tblptrl	equ	0xFF6
 23392                           tablat	equ	0xFF5
 23393                           prodh	equ	0xFF4
 23394                           prodl	equ	0xFF3
 23395                           intcon	equ	0xFF2
 23396                           postinc0	equ	0xFEE
 23397                           wreg	equ	0xFE8
 23398                           indf1	equ	0xFE7
 23399                           postinc1	equ	0xFE6
 23400                           postdec1	equ	0xFE5
 23401                           fsr1h	equ	0xFE2
 23402                           fsr1l	equ	0xFE1
 23403                           indf2	equ	0xFDF
 23404                           postinc2	equ	0xFDE
 23405                           postdec2	equ	0xFDD
 23406                           fsr2h	equ	0xFDA
 23407                           fsr2l	equ	0xFD9
 23408                           status	equ	0xFD8
 23409                           
 23410 ;; *************** function _ReadEEPROM_1Byte *****************
 23411 ;; Defined at:
 23412 ;;		line 52 in file "EEPROM.c"
 23413 ;; Parameters:    Size  Location     Type
 23414 ;;  address         2   14[BANK1 ] unsigned int 
 23415 ;; Auto vars:     Size  Location     Type
 23416 ;;  GIEstatus       1   19[BANK1 ] unsigned char 
 23417 ;; Return value:  Size  Location     Type
 23418 ;;                  2   14[BANK1 ] unsigned int 
 23419 ;; Registers used:
 23420 ;;		wreg, status,2, status,0
 23421 ;; Tracked objects:
 23422 ;;		On entry : 0/0
 23423 ;;		On exit  : 0/0
 23424 ;;		Unchanged: 0/0
 23425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23426 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 23427 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23428 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 23429 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 23430 ;;Total ram usage:        6 bytes
 23431 ;; Hardware stack levels used:    1
 23432 ;; Hardware stack levels required when called:    6
 23433 ;; This function calls:
 23434 ;;		Nothing
 23435 ;; This function is called by:
 23436 ;;		_GetMemoryBaud
 23437 ;;		_GetMemoryParity
 23438 ;; This function uses a non-reentrant model
 23439 ;;
 23440                           
 23441                           	psect	text43
 23442  017BEC                     __ptext43:
 23443                           	opt stack 0
 23444  017BEC                     _ReadEEPROM_1Byte:
 23445                           	opt stack 21
 23446                           
 23447                           ;EEPROM.c: 54: unsigned char GIEstatus = INTCONbits.GIE;
 23448                           
 23449                           ;incstack = 0
 23450  017BEC  0E00               	movlw	0
 23451  017BEE  BEF2               	btfsc	intcon,7,c	;volatile
 23452  017BF0  0E01               	movlw	1
 23453  017BF2  0101               	movlb	1	; () banked
 23454  017BF4  6F81               	movwf	ReadEEPROM_1Byte@GIEstatus& (0+255),b
 23455                           
 23456                           ; BSR set to: 1
 23457                           ;EEPROM.c: 55: EECON1bits.EEPGD = 0;
 23458  017BF6  9EA6               	bcf	4006,7,c	;volatile
 23459                           
 23460                           ; BSR set to: 1
 23461                           ;EEPROM.c: 56: EECON1bits.CFGS = 0;
 23462  017BF8  9CA6               	bcf	4006,6,c	;volatile
 23463                           
 23464                           ; BSR set to: 1
 23465                           ;EEPROM.c: 57: EEADRH = (unsigned char)((address & 0x300) >> 8);
 23466  017BFA  0101               	movlb	1	; () banked
 23467  017BFC  C17D  F17E         	movff	ReadEEPROM_1Byte@address+1,??_ReadEEPROM_1Byte
 23468  017C00  C17E  F17F         	movff	??_ReadEEPROM_1Byte,??_ReadEEPROM_1Byte+1
 23469  017C04  0101               	movlb	1	; () banked
 23470  017C06  6B80               	clrf	(??_ReadEEPROM_1Byte+2)& (0+255),b
 23471  017C08  0101               	movlb	1	; () banked
 23472  017C0A  517F               	movf	(??_ReadEEPROM_1Byte+1)& (0+255),w,b
 23473  017C0C  0B03               	andlw	3
 23474  017C0E  6EAA               	movwf	4010,c	;volatile
 23475                           
 23476                           ; BSR set to: 1
 23477                           ;EEPROM.c: 58: EEADR = (unsigned char)(address & 0xFF);
 23478  017C10  C17C  FFA9         	movff	ReadEEPROM_1Byte@address,4009	;volatile
 23479                           
 23480                           ; BSR set to: 1
 23481                           ;EEPROM.c: 59: INTCONbits.GIE =0;
 23482  017C14  9EF2               	bcf	intcon,7,c	;volatile
 23483                           
 23484                           ; BSR set to: 1
 23485                           ;EEPROM.c: 60: EECON1bits.RD = 1;
 23486  017C16  80A6               	bsf	4006,0,c	;volatile
 23487  017C18                     l1493:
 23488  017C18  B0A6               	btfsc	4006,0,c	;volatile
 23489  017C1A  D7FE               	goto	l1493
 23490                           
 23491                           ;EEPROM.c: 62: __nop();
 23492  017C1C  F000               	nop	
 23493                           
 23494                           ;EEPROM.c: 63: __nop();
 23495  017C1E  F000               	nop	
 23496                           
 23497                           ;EEPROM.c: 64: if(GIEstatus)
 23498  017C20  0101               	movlb	1	; () banked
 23499  017C22  5181               	movf	ReadEEPROM_1Byte@GIEstatus& (0+255),w,b
 23500  017C24  A4D8               	btfss	status,2,c
 23501                           
 23502                           ; BSR set to: 1
 23503                           ;EEPROM.c: 65: {
 23504                           ;EEPROM.c: 66: INTCONbits.GIE =1;
 23505  017C26  8EF2               	bsf	intcon,7,c	;volatile
 23506                           
 23507                           ; BSR set to: 1
 23508                           ;EEPROM.c: 67: }
 23509                           ;EEPROM.c: 68: return (EEDATA);
 23510  017C28  0101               	movlb	1	; () banked
 23511  017C2A  CFA8 F17C          	movff	4008,?_ReadEEPROM_1Byte	;volatile
 23512  017C2E  0101               	movlb	1	; () banked
 23513  017C30  6B7D               	clrf	(?_ReadEEPROM_1Byte+1)& (0+255),b
 23514                           
 23515                           ; BSR set to: 1
 23516  017C32  0012               	return	
 23517  017C34                     __end_of_ReadEEPROM_1Byte:
 23518                           	opt stack 0
 23519                           tblptru	equ	0xFF8
 23520                           tblptrh	equ	0xFF7
 23521                           tblptrl	equ	0xFF6
 23522                           tablat	equ	0xFF5
 23523                           prodh	equ	0xFF4
 23524                           prodl	equ	0xFF3
 23525                           intcon	equ	0xFF2
 23526                           postinc0	equ	0xFEE
 23527                           wreg	equ	0xFE8
 23528                           indf1	equ	0xFE7
 23529                           postinc1	equ	0xFE6
 23530                           postdec1	equ	0xFE5
 23531                           fsr1h	equ	0xFE2
 23532                           fsr1l	equ	0xFE1
 23533                           indf2	equ	0xFDF
 23534                           postinc2	equ	0xFDE
 23535                           postdec2	equ	0xFDD
 23536                           fsr2h	equ	0xFDA
 23537                           fsr2l	equ	0xFD9
 23538                           status	equ	0xFD8
 23539                           
 23540 ;; *************** function _InitUART *****************
 23541 ;; Defined at:
 23542 ;;		line 69 in file "UART.c"
 23543 ;; Parameters:    Size  Location     Type
 23544 ;;  Baud            4   27[BANK1 ] unsigned long 
 23545 ;;  parity          1   31[BANK1 ] unsigned char 
 23546 ;; Auto vars:     Size  Location     Type
 23547 ;;  temp            4   40[BANK1 ] unsigned long 
 23548 ;;  spbrg           2   36[BANK1 ] unsigned int 
 23549 ;;  config          1   39[BANK1 ] unsigned char 
 23550 ;;  baudconfig      1   38[BANK1 ] unsigned char 
 23551 ;; Return value:  Size  Location     Type
 23552 ;;		None               void
 23553 ;; Registers used:
 23554 ;;		wreg, status,2, status,0, cstack
 23555 ;; Tracked objects:
 23556 ;;		On entry : 0/0
 23557 ;;		On exit  : 0/0
 23558 ;;		Unchanged: 0/0
 23559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23560 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 23561 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 23562 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 23563 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
 23564 ;;Total ram usage:       17 bytes
 23565 ;; Hardware stack levels used:    1
 23566 ;; Hardware stack levels required when called:    7
 23567 ;; This function calls:
 23568 ;;		_OpenUSART
 23569 ;;		_ReadUSART
 23570 ;;		___lldiv
 23571 ;;		_baudUSART
 23572 ;; This function is called by:
 23573 ;;		_main
 23574 ;;		_SetBaud
 23575 ;; This function uses a non-reentrant model
 23576 ;;
 23577                           
 23578                           	psect	text44
 23579  015164                     __ptext44:
 23580                           	opt stack 0
 23581  015164                     _InitUART:
 23582                           	opt stack 22
 23583                           
 23584                           ;UART.c: 71: unsigned long temp;
 23585                           ;UART.c: 72: unsigned char config;
 23586                           ;UART.c: 73: unsigned int spbrg;
 23587                           ;UART.c: 74: unsigned char baudconfig;
 23588                           ;UART.c: 84: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
 23589                           
 23590                           ; BSR set to: 1
 23591                           ;incstack = 0
 23592  015164  0E4F               	movlw	79
 23593  015166  16AB               	andwf	4011,f,c	;volatile
 23594  015168  9AAC               	bcf	4012,5,c	;volatile
 23595  01516A  0ECF               	movlw	207
 23596  01516C  169D               	andwf	3997,f,c	;volatile
 23597                           
 23598                           ;UART.c: 85: config =0;
 23599  01516E  0E00               	movlw	0
 23600  015170  0101               	movlb	1	; () banked
 23601  015172  6F95               	movwf	InitUART@config& (0+255),b
 23602                           
 23603                           ; BSR set to: 1
 23604                           ;UART.c: 86: baudconfig =0;
 23605  015174  0E00               	movlw	0
 23606  015176  0101               	movlb	1	; () banked
 23607  015178  6F94               	movwf	InitUART@baudconfig& (0+255),b
 23608                           
 23609                           ; BSR set to: 1
 23610                           ;UART.c: 87: BAUDCON =0;
 23611  01517A  0E00               	movlw	0
 23612  01517C  6EB8               	movwf	4024,c	;volatile
 23613                           
 23614                           ; BSR set to: 1
 23615                           ;UART.c: 91: config |= 0b01000000;
 23616  01517E  0101               	movlb	1	; () banked
 23617  015180  8D95               	bsf	InitUART@config& (0+255),6,b
 23618                           
 23619                           ; BSR set to: 1
 23620                           ;UART.c: 92: config |= 0b00001000;
 23621  015182  0101               	movlb	1	; () banked
 23622  015184  8795               	bsf	InitUART@config& (0+255),3,b
 23623                           
 23624                           ; BSR set to: 1
 23625                           ;UART.c: 94: config |= 0b00010000;
 23626  015186  0101               	movlb	1	; () banked
 23627  015188  8995               	bsf	InitUART@config& (0+255),4,b
 23628                           
 23629                           ; BSR set to: 1
 23630                           ;UART.c: 96: PARITY = parity;
 23631  01518A  C18D  F10A         	movff	InitUART@parity,_PARITY
 23632                           
 23633                           ; BSR set to: 1
 23634                           ;UART.c: 97: BAUD = Baud;
 23635  01518E  C189  F1D5         	movff	InitUART@Baud,_BAUD
 23636  015192  C18A  F1D6         	movff	InitUART@Baud+1,_BAUD+1
 23637  015196  C18B  F1D7         	movff	InitUART@Baud+2,_BAUD+2
 23638  01519A  C18C  F1D8         	movff	InitUART@Baud+3,_BAUD+3
 23639                           
 23640                           ; BSR set to: 1
 23641                           ;UART.c: 98: if(parity)
 23642  01519E  0101               	movlb	1	; () banked
 23643  0151A0  518D               	movf	InitUART@parity& (0+255),w,b
 23644  0151A2  B4D8               	btfsc	status,2,c
 23645  0151A4  D003               	goto	l10720
 23646                           
 23647                           ; BSR set to: 1
 23648                           ;UART.c: 99: {
 23649                           ;UART.c: 100: config |= 0b00000010;
 23650  0151A6  0101               	movlb	1	; () banked
 23651  0151A8  8395               	bsf	InitUART@config& (0+255),1,b
 23652                           
 23653                           ;UART.c: 101: }
 23654  0151AA  D002               	goto	l422
 23655  0151AC                     l10720:
 23656                           
 23657                           ; BSR set to: 1
 23658                           ;UART.c: 102: else
 23659                           ;UART.c: 103: {
 23660                           ;UART.c: 104: config &= ~0b00000010;
 23661  0151AC  0101               	movlb	1	; () banked
 23662  0151AE  9395               	bcf	InitUART@config& (0+255),1,b
 23663  0151B0                     l422:
 23664                           
 23665                           ; BSR set to: 1
 23666                           ;UART.c: 105: }
 23667                           ;UART.c: 106: baudconfig |= 0b00001000;
 23668  0151B0  0101               	movlb	1	; () banked
 23669  0151B2  8794               	bsf	InitUART@baudconfig& (0+255),3,b
 23670                           
 23671                           ; BSR set to: 1
 23672                           ;UART.c: 109: temp = (40960000L / Baud) - 1;
 23673  0151B4  0E00               	movlw	0
 23674  0151B6  0101               	movlb	1	; () banked
 23675  0151B8  6F7C               	movwf	___lldiv@dividend& (0+255),b
 23676  0151BA  0E00               	movlw	0
 23677  0151BC  0101               	movlb	1	; () banked
 23678  0151BE  6F7D               	movwf	(___lldiv@dividend+1)& (0+255),b
 23679  0151C0  0E71               	movlw	113
 23680  0151C2  0101               	movlb	1	; () banked
 23681  0151C4  6F7E               	movwf	(___lldiv@dividend+2)& (0+255),b
 23682  0151C6  0E02               	movlw	2
 23683  0151C8  0101               	movlb	1	; () banked
 23684  0151CA  6F7F               	movwf	(___lldiv@dividend+3)& (0+255),b
 23685  0151CC  C189  F180         	movff	InitUART@Baud,___lldiv@divisor
 23686  0151D0  C18A  F181         	movff	InitUART@Baud+1,___lldiv@divisor+1
 23687  0151D4  C18B  F182         	movff	InitUART@Baud+2,___lldiv@divisor+2
 23688  0151D8  C18C  F183         	movff	InitUART@Baud+3,___lldiv@divisor+3
 23689  0151DC  EC8D  F0B2         	call	___lldiv	;wreg free
 23690  0151E0  C17C  F18E         	movff	?___lldiv,??_InitUART
 23691  0151E4  C17D  F18F         	movff	?___lldiv+1,??_InitUART+1
 23692  0151E8  C17E  F190         	movff	?___lldiv+2,??_InitUART+2
 23693  0151EC  C17F  F191         	movff	?___lldiv+3,??_InitUART+3
 23694  0151F0  0EFF               	movlw	255
 23695  0151F2  0101               	movlb	1	; () banked
 23696  0151F4  258E               	addwf	??_InitUART& (0+255),w,b
 23697  0151F6  0101               	movlb	1	; () banked
 23698  0151F8  6F96               	movwf	InitUART@temp& (0+255),b
 23699  0151FA  0EFF               	movlw	255
 23700  0151FC  0101               	movlb	1	; () banked
 23701  0151FE  218F               	addwfc	(??_InitUART+1)& (0+255),w,b
 23702  015200  0101               	movlb	1	; () banked
 23703  015202  6F97               	movwf	(InitUART@temp+1)& (0+255),b
 23704  015204  0EFF               	movlw	255
 23705  015206  0101               	movlb	1	; () banked
 23706  015208  2190               	addwfc	(??_InitUART+2)& (0+255),w,b
 23707  01520A  0101               	movlb	1	; () banked
 23708  01520C  6F98               	movwf	(InitUART@temp+2)& (0+255),b
 23709  01520E  0EFF               	movlw	255
 23710  015210  0101               	movlb	1	; () banked
 23711  015212  2191               	addwfc	(??_InitUART+3)& (0+255),w,b
 23712  015214  0101               	movlb	1	; () banked
 23713  015216  6F99               	movwf	(InitUART@temp+3)& (0+255),b
 23714                           
 23715                           ; BSR set to: 1
 23716                           ;UART.c: 110: temp = (temp >> 2) - 1;
 23717  015218  0101               	movlb	1	; () banked
 23718  01521A  C196  F18E         	movff	InitUART@temp,??_InitUART
 23719  01521E  0101               	movlb	1	; () banked
 23720  015220  C197  F18F         	movff	InitUART@temp+1,??_InitUART+1
 23721  015224  0101               	movlb	1	; () banked
 23722  015226  C198  F190         	movff	InitUART@temp+2,??_InitUART+2
 23723  01522A  0101               	movlb	1	; () banked
 23724  01522C  C199  F191         	movff	InitUART@temp+3,??_InitUART+3
 23725  015230  0E03               	movlw	3
 23726  015232  D006               	goto	u13200
 23727  015234                     u13205:
 23728  015234  0101               	movlb	1	; () banked
 23729  015236  90D8               	bcf	status,0,c
 23730  015238  3391               	rrcf	(??_InitUART+3)& (0+255),f,b
 23731  01523A  3390               	rrcf	(??_InitUART+2)& (0+255),f,b
 23732  01523C  338F               	rrcf	(??_InitUART+1)& (0+255),f,b
 23733  01523E  338E               	rrcf	??_InitUART& (0+255),f,b
 23734  015240                     u13200:
 23735  015240  2EE8               	decfsz	wreg,f,c
 23736  015242  D7F8               	goto	u13205
 23737  015244  0EFF               	movlw	255
 23738  015246  0101               	movlb	1	; () banked
 23739  015248  258E               	addwf	??_InitUART& (0+255),w,b
 23740  01524A  0101               	movlb	1	; () banked
 23741  01524C  6F96               	movwf	InitUART@temp& (0+255),b
 23742  01524E  0EFF               	movlw	255
 23743  015250  0101               	movlb	1	; () banked
 23744  015252  218F               	addwfc	(??_InitUART+1)& (0+255),w,b
 23745  015254  0101               	movlb	1	; () banked
 23746  015256  6F97               	movwf	(InitUART@temp+1)& (0+255),b
 23747  015258  0EFF               	movlw	255
 23748  01525A  0101               	movlb	1	; () banked
 23749  01525C  2190               	addwfc	(??_InitUART+2)& (0+255),w,b
 23750  01525E  0101               	movlb	1	; () banked
 23751  015260  6F98               	movwf	(InitUART@temp+2)& (0+255),b
 23752  015262  0EFF               	movlw	255
 23753  015264  0101               	movlb	1	; () banked
 23754  015266  2191               	addwfc	(??_InitUART+3)& (0+255),w,b
 23755  015268  0101               	movlb	1	; () banked
 23756  01526A  6F99               	movwf	(InitUART@temp+3)& (0+255),b
 23757                           
 23758                           ; BSR set to: 1
 23759                           ;UART.c: 111: spbrg = (unsigned int)temp;
 23760  01526C  C196  F192         	movff	InitUART@temp,InitUART@spbrg
 23761  015270  C197  F193         	movff	InitUART@temp+1,InitUART@spbrg+1
 23762                           
 23763                           ; BSR set to: 1
 23764                           ;UART.c: 113: OpenUSART(config, spbrg);
 23765  015274  C192  F17C         	movff	InitUART@spbrg,OpenUSART@spbrg
 23766  015278  C193  F17D         	movff	InitUART@spbrg+1,OpenUSART@spbrg+1
 23767  01527C  0101               	movlb	1	; () banked
 23768  01527E  5195               	movf	InitUART@config& (0+255),w,b
 23769  015280  ECDF  F0BA         	call	_OpenUSART
 23770                           
 23771                           ;UART.c: 114: baudUSART(baudconfig);
 23772  015284  0101               	movlb	1	; () banked
 23773  015286  5194               	movf	InitUART@baudconfig& (0+255),w,b
 23774  015288  EC8D  F003         	call	_baudUSART
 23775                           
 23776                           ;UART.c: 115: temp = ReadUSART();
 23777  01528C  EC3A  F002         	call	_ReadUSART	;wreg free
 23778  015290  0101               	movlb	1	; () banked
 23779  015292  6F8E               	movwf	??_InitUART& (0+255),b
 23780  015294  0101               	movlb	1	; () banked
 23781  015296  518E               	movf	??_InitUART& (0+255),w,b
 23782  015298  0101               	movlb	1	; () banked
 23783  01529A  6F96               	movwf	InitUART@temp& (0+255),b
 23784  01529C  0101               	movlb	1	; () banked
 23785  01529E  6B97               	clrf	(InitUART@temp+1)& (0+255),b
 23786  0152A0  0101               	movlb	1	; () banked
 23787  0152A2  6B98               	clrf	(InitUART@temp+2)& (0+255),b
 23788  0152A4  0101               	movlb	1	; () banked
 23789  0152A6  6B99               	clrf	(InitUART@temp+3)& (0+255),b
 23790                           
 23791                           ; BSR set to: 1
 23792                           ;UART.c: 116: temp = ReadUSART();
 23793  0152A8  EC3A  F002         	call	_ReadUSART	;wreg free
 23794  0152AC  0101               	movlb	1	; () banked
 23795  0152AE  6F8E               	movwf	??_InitUART& (0+255),b
 23796  0152B0  0101               	movlb	1	; () banked
 23797  0152B2  518E               	movf	??_InitUART& (0+255),w,b
 23798  0152B4  0101               	movlb	1	; () banked
 23799  0152B6  6F96               	movwf	InitUART@temp& (0+255),b
 23800  0152B8  0101               	movlb	1	; () banked
 23801  0152BA  6B97               	clrf	(InitUART@temp+1)& (0+255),b
 23802  0152BC  0101               	movlb	1	; () banked
 23803  0152BE  6B98               	clrf	(InitUART@temp+2)& (0+255),b
 23804  0152C0  0101               	movlb	1	; () banked
 23805  0152C2  6B99               	clrf	(InitUART@temp+3)& (0+255),b
 23806                           
 23807                           ; BSR set to: 1
 23808                           ;UART.c: 117: temp = ReadUSART();
 23809  0152C4  EC3A  F002         	call	_ReadUSART	;wreg free
 23810  0152C8  0101               	movlb	1	; () banked
 23811  0152CA  6F8E               	movwf	??_InitUART& (0+255),b
 23812  0152CC  0101               	movlb	1	; () banked
 23813  0152CE  518E               	movf	??_InitUART& (0+255),w,b
 23814  0152D0  0101               	movlb	1	; () banked
 23815  0152D2  6F96               	movwf	InitUART@temp& (0+255),b
 23816  0152D4  0101               	movlb	1	; () banked
 23817  0152D6  6B97               	clrf	(InitUART@temp+1)& (0+255),b
 23818  0152D8  0101               	movlb	1	; () banked
 23819  0152DA  6B98               	clrf	(InitUART@temp+2)& (0+255),b
 23820  0152DC  0101               	movlb	1	; () banked
 23821  0152DE  6B99               	clrf	(InitUART@temp+3)& (0+255),b
 23822                           
 23823                           ; BSR set to: 1
 23824                           ;UART.c: 118: temp = ReadUSART();
 23825  0152E0  EC3A  F002         	call	_ReadUSART	;wreg free
 23826  0152E4  0101               	movlb	1	; () banked
 23827  0152E6  6F8E               	movwf	??_InitUART& (0+255),b
 23828  0152E8  0101               	movlb	1	; () banked
 23829  0152EA  518E               	movf	??_InitUART& (0+255),w,b
 23830  0152EC  0101               	movlb	1	; () banked
 23831  0152EE  6F96               	movwf	InitUART@temp& (0+255),b
 23832  0152F0  0101               	movlb	1	; () banked
 23833  0152F2  6B97               	clrf	(InitUART@temp+1)& (0+255),b
 23834  0152F4  0101               	movlb	1	; () banked
 23835  0152F6  6B98               	clrf	(InitUART@temp+2)& (0+255),b
 23836  0152F8  0101               	movlb	1	; () banked
 23837  0152FA  6B99               	clrf	(InitUART@temp+3)& (0+255),b
 23838                           
 23839                           ; BSR set to: 1
 23840                           ;UART.c: 119: temp = ReadUSART();
 23841  0152FC  EC3A  F002         	call	_ReadUSART	;wreg free
 23842  015300  0101               	movlb	1	; () banked
 23843  015302  6F8E               	movwf	??_InitUART& (0+255),b
 23844  015304  0101               	movlb	1	; () banked
 23845  015306  518E               	movf	??_InitUART& (0+255),w,b
 23846  015308  0101               	movlb	1	; () banked
 23847  01530A  6F96               	movwf	InitUART@temp& (0+255),b
 23848  01530C  0101               	movlb	1	; () banked
 23849  01530E  6B97               	clrf	(InitUART@temp+1)& (0+255),b
 23850  015310  0101               	movlb	1	; () banked
 23851  015312  6B98               	clrf	(InitUART@temp+2)& (0+255),b
 23852  015314  0101               	movlb	1	; () banked
 23853  015316  6B99               	clrf	(InitUART@temp+3)& (0+255),b
 23854                           
 23855                           ; BSR set to: 1
 23856                           ;UART.c: 121: IPR1bits.RCIP = 0;
 23857  015318  9A9F               	bcf	3999,5,c	;volatile
 23858                           
 23859                           ; BSR set to: 1
 23860  01531A  0012               	return	
 23861  01531C                     __end_of_InitUART:
 23862                           	opt stack 0
 23863                           tblptru	equ	0xFF8
 23864                           tblptrh	equ	0xFF7
 23865                           tblptrl	equ	0xFF6
 23866                           tablat	equ	0xFF5
 23867                           prodh	equ	0xFF4
 23868                           prodl	equ	0xFF3
 23869                           intcon	equ	0xFF2
 23870                           postinc0	equ	0xFEE
 23871                           wreg	equ	0xFE8
 23872                           indf1	equ	0xFE7
 23873                           postinc1	equ	0xFE6
 23874                           postdec1	equ	0xFE5
 23875                           fsr1h	equ	0xFE2
 23876                           fsr1l	equ	0xFE1
 23877                           indf2	equ	0xFDF
 23878                           postinc2	equ	0xFDE
 23879                           postdec2	equ	0xFDD
 23880                           fsr2h	equ	0xFDA
 23881                           fsr2l	equ	0xFD9
 23882                           status	equ	0xFD8
 23883                           
 23884 ;; *************** function _baudUSART *****************
 23885 ;; Defined at:
 23886 ;;		line 129 in file "UART.c"
 23887 ;; Parameters:    Size  Location     Type
 23888 ;;  baudconfig      1    wreg     unsigned char 
 23889 ;; Auto vars:     Size  Location     Type
 23890 ;;  baudconfig      1   14[BANK1 ] unsigned char 
 23891 ;; Return value:  Size  Location     Type
 23892 ;;		None               void
 23893 ;; Registers used:
 23894 ;;		wreg, status,2
 23895 ;; Tracked objects:
 23896 ;;		On entry : 0/0
 23897 ;;		On exit  : 0/0
 23898 ;;		Unchanged: 0/0
 23899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23901 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23903 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 23904 ;;Total ram usage:        1 bytes
 23905 ;; Hardware stack levels used:    1
 23906 ;; Hardware stack levels required when called:    6
 23907 ;; This function calls:
 23908 ;;		Nothing
 23909 ;; This function is called by:
 23910 ;;		_InitUART
 23911 ;; This function uses a non-reentrant model
 23912 ;;
 23913                           
 23914                           	psect	text45
 23915  00071A                     __ptext45:
 23916                           	opt stack 0
 23917  00071A                     _baudUSART:
 23918                           	opt stack 22
 23919                           
 23920                           ; BSR set to: 1
 23921                           ;incstack = 0
 23922                           ;baudUSART@baudconfig stored from wreg
 23923  00071A  0101               	movlb	1	; () banked
 23924  00071C  6F7C               	movwf	baudUSART@baudconfig& (0+255),b
 23925                           
 23926                           ; BSR set to: 1
 23927                           ;UART.c: 131: BAUDCON =0;
 23928  00071E  0E00               	movlw	0
 23929  000720  6EB8               	movwf	4024,c	;volatile
 23930                           
 23931                           ; BSR set to: 1
 23932                           ;UART.c: 132: BAUDCON = baudconfig;
 23933  000722  C17C  FFB8         	movff	baudUSART@baudconfig,4024	;volatile
 23934                           
 23935                           ; BSR set to: 1
 23936  000726  0012               	return	
 23937  000728                     __end_of_baudUSART:
 23938                           	opt stack 0
 23939                           tblptru	equ	0xFF8
 23940                           tblptrh	equ	0xFF7
 23941                           tblptrl	equ	0xFF6
 23942                           tablat	equ	0xFF5
 23943                           prodh	equ	0xFF4
 23944                           prodl	equ	0xFF3
 23945                           intcon	equ	0xFF2
 23946                           postinc0	equ	0xFEE
 23947                           wreg	equ	0xFE8
 23948                           indf1	equ	0xFE7
 23949                           postinc1	equ	0xFE6
 23950                           postdec1	equ	0xFE5
 23951                           fsr1h	equ	0xFE2
 23952                           fsr1l	equ	0xFE1
 23953                           indf2	equ	0xFDF
 23954                           postinc2	equ	0xFDE
 23955                           postdec2	equ	0xFDD
 23956                           fsr2h	equ	0xFDA
 23957                           fsr2l	equ	0xFD9
 23958                           status	equ	0xFD8
 23959                           
 23960 ;; *************** function ___lldiv *****************
 23961 ;; Defined at:
 23962 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 23963 ;; Parameters:    Size  Location     Type
 23964 ;;  dividend        4   14[BANK1 ] unsigned long 
 23965 ;;  divisor         4   18[BANK1 ] unsigned long 
 23966 ;; Auto vars:     Size  Location     Type
 23967 ;;  quotient        4   22[BANK1 ] unsigned long 
 23968 ;;  counter         1   26[BANK1 ] unsigned char 
 23969 ;; Return value:  Size  Location     Type
 23970 ;;                  4   14[BANK1 ] unsigned long 
 23971 ;; Registers used:
 23972 ;;		wreg, status,2, status,0
 23973 ;; Tracked objects:
 23974 ;;		On entry : 0/0
 23975 ;;		On exit  : 0/0
 23976 ;;		Unchanged: 0/0
 23977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23978 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 23979 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 23980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23981 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 23982 ;;Total ram usage:       13 bytes
 23983 ;; Hardware stack levels used:    1
 23984 ;; Hardware stack levels required when called:    6
 23985 ;; This function calls:
 23986 ;;		Nothing
 23987 ;; This function is called by:
 23988 ;;		_InitUART
 23989 ;;		_sprintf
 23990 ;; This function uses a non-reentrant model
 23991 ;;
 23992                           
 23993                           	psect	text46
 23994  01651A                     __ptext46:
 23995                           	opt stack 0
 23996  01651A                     ___lldiv:
 23997                           	opt stack 22
 23998                           
 23999                           ; BSR set to: 1
 24000                           ;incstack = 0
 24001  01651A  0E00               	movlw	0
 24002  01651C  0101               	movlb	1	; () banked
 24003  01651E  6F84               	movwf	___lldiv@quotient& (0+255),b
 24004  016520  0E00               	movlw	0
 24005  016522  0101               	movlb	1	; () banked
 24006  016524  6F85               	movwf	(___lldiv@quotient+1)& (0+255),b
 24007  016526  0E00               	movlw	0
 24008  016528  0101               	movlb	1	; () banked
 24009  01652A  6F86               	movwf	(___lldiv@quotient+2)& (0+255),b
 24010  01652C  0E00               	movlw	0
 24011  01652E  0101               	movlb	1	; () banked
 24012  016530  6F87               	movwf	(___lldiv@quotient+3)& (0+255),b
 24013                           
 24014                           ; BSR set to: 1
 24015  016532  0101               	movlb	1	; () banked
 24016  016534  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24017  016536  1180               	iorwf	___lldiv@divisor& (0+255),w,b
 24018  016538  1181               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24019  01653A  1182               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24020  01653C  B4D8               	btfsc	status,2,c
 24021  01653E  D04E               	goto	l2134
 24022                           
 24023                           ; BSR set to: 1
 24024  016540  0E01               	movlw	1
 24025  016542  0101               	movlb	1	; () banked
 24026  016544  6F88               	movwf	___lldiv@counter& (0+255),b
 24027  016546  D00C               	goto	l10552
 24028  016548                     l10550:
 24029                           
 24030                           ; BSR set to: 1
 24031  016548  0101               	movlb	1	; () banked
 24032  01654A  90D8               	bcf	status,0,c
 24033  01654C  0101               	movlb	1	; () banked
 24034  01654E  3780               	rlcf	___lldiv@divisor& (0+255),f,b
 24035  016550  0101               	movlb	1	; () banked
 24036  016552  3781               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24037  016554  0101               	movlb	1	; () banked
 24038  016556  3782               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24039  016558  0101               	movlb	1	; () banked
 24040  01655A  3783               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24041  01655C  0101               	movlb	1	; () banked
 24042  01655E  2B88               	incf	___lldiv@counter& (0+255),f,b
 24043  016560                     l10552:
 24044                           
 24045                           ; BSR set to: 1
 24046  016560  0101               	movlb	1	; () banked
 24047  016562  AF83               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24048  016564  D7F1               	goto	l10550
 24049  016566                     l10554:
 24050                           
 24051                           ; BSR set to: 1
 24052  016566  0101               	movlb	1	; () banked
 24053  016568  90D8               	bcf	status,0,c
 24054  01656A  0101               	movlb	1	; () banked
 24055  01656C  3784               	rlcf	___lldiv@quotient& (0+255),f,b
 24056  01656E  0101               	movlb	1	; () banked
 24057  016570  3785               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24058  016572  0101               	movlb	1	; () banked
 24059  016574  3786               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24060  016576  0101               	movlb	1	; () banked
 24061  016578  3787               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24062                           
 24063                           ; BSR set to: 1
 24064  01657A  0101               	movlb	1	; () banked
 24065  01657C  5180               	movf	___lldiv@divisor& (0+255),w,b
 24066  01657E  0101               	movlb	1	; () banked
 24067  016580  5D7C               	subwf	___lldiv@dividend& (0+255),w,b
 24068  016582  0101               	movlb	1	; () banked
 24069  016584  5181               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24070  016586  0101               	movlb	1	; () banked
 24071  016588  597D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24072  01658A  0101               	movlb	1	; () banked
 24073  01658C  5182               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24074  01658E  0101               	movlb	1	; () banked
 24075  016590  597E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24076  016592  0101               	movlb	1	; () banked
 24077  016594  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24078  016596  0101               	movlb	1	; () banked
 24079  016598  597F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24080  01659A  A0D8               	btfss	status,0,c
 24081  01659C  D012               	goto	l10562
 24082                           
 24083                           ; BSR set to: 1
 24084  01659E  0101               	movlb	1	; () banked
 24085  0165A0  5180               	movf	___lldiv@divisor& (0+255),w,b
 24086  0165A2  0101               	movlb	1	; () banked
 24087  0165A4  5F7C               	subwf	___lldiv@dividend& (0+255),f,b
 24088  0165A6  0101               	movlb	1	; () banked
 24089  0165A8  5181               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24090  0165AA  0101               	movlb	1	; () banked
 24091  0165AC  5B7D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24092  0165AE  0101               	movlb	1	; () banked
 24093  0165B0  5182               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24094  0165B2  0101               	movlb	1	; () banked
 24095  0165B4  5B7E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24096  0165B6  0101               	movlb	1	; () banked
 24097  0165B8  5183               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24098  0165BA  0101               	movlb	1	; () banked
 24099  0165BC  5B7F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24100                           
 24101                           ; BSR set to: 1
 24102  0165BE  0101               	movlb	1	; () banked
 24103  0165C0  8184               	bsf	___lldiv@quotient& (0+255),0,b
 24104  0165C2                     l10562:
 24105                           
 24106                           ; BSR set to: 1
 24107  0165C2  0101               	movlb	1	; () banked
 24108  0165C4  90D8               	bcf	status,0,c
 24109  0165C6  0101               	movlb	1	; () banked
 24110  0165C8  3383               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24111  0165CA  0101               	movlb	1	; () banked
 24112  0165CC  3382               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24113  0165CE  0101               	movlb	1	; () banked
 24114  0165D0  3381               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24115  0165D2  0101               	movlb	1	; () banked
 24116  0165D4  3380               	rrcf	___lldiv@divisor& (0+255),f,b
 24117                           
 24118                           ; BSR set to: 1
 24119  0165D6  0101               	movlb	1	; () banked
 24120  0165D8  2F88               	decfsz	___lldiv@counter& (0+255),f,b
 24121  0165DA  D7C5               	goto	l10554
 24122  0165DC                     l2134:
 24123                           
 24124                           ; BSR set to: 1
 24125  0165DC  C184  F17C         	movff	___lldiv@quotient,?___lldiv
 24126  0165E0  C185  F17D         	movff	___lldiv@quotient+1,?___lldiv+1
 24127  0165E4  C186  F17E         	movff	___lldiv@quotient+2,?___lldiv+2
 24128  0165E8  C187  F17F         	movff	___lldiv@quotient+3,?___lldiv+3
 24129                           
 24130                           ; BSR set to: 1
 24131  0165EC  0012               	return	
 24132  0165EE                     __end_of___lldiv:
 24133                           	opt stack 0
 24134                           tblptru	equ	0xFF8
 24135                           tblptrh	equ	0xFF7
 24136                           tblptrl	equ	0xFF6
 24137                           tablat	equ	0xFF5
 24138                           prodh	equ	0xFF4
 24139                           prodl	equ	0xFF3
 24140                           intcon	equ	0xFF2
 24141                           postinc0	equ	0xFEE
 24142                           wreg	equ	0xFE8
 24143                           indf1	equ	0xFE7
 24144                           postinc1	equ	0xFE6
 24145                           postdec1	equ	0xFE5
 24146                           fsr1h	equ	0xFE2
 24147                           fsr1l	equ	0xFE1
 24148                           indf2	equ	0xFDF
 24149                           postinc2	equ	0xFDE
 24150                           postdec2	equ	0xFDD
 24151                           fsr2h	equ	0xFDA
 24152                           fsr2l	equ	0xFD9
 24153                           status	equ	0xFD8
 24154                           
 24155 ;; *************** function _ReadUSART *****************
 24156 ;; Defined at:
 24157 ;;		line 253 in file "UART.c"
 24158 ;; Parameters:    Size  Location     Type
 24159 ;;		None
 24160 ;; Auto vars:     Size  Location     Type
 24161 ;;  data            1   14[BANK1 ] unsigned char 
 24162 ;; Return value:  Size  Location     Type
 24163 ;;                  1    wreg      unsigned char 
 24164 ;; Registers used:
 24165 ;;		wreg, status,2, status,0
 24166 ;; Tracked objects:
 24167 ;;		On entry : 0/0
 24168 ;;		On exit  : 0/0
 24169 ;;		Unchanged: 0/0
 24170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24172 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24174 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24175 ;;Total ram usage:        1 bytes
 24176 ;; Hardware stack levels used:    1
 24177 ;; Hardware stack levels required when called:    6
 24178 ;; This function calls:
 24179 ;;		Nothing
 24180 ;; This function is called by:
 24181 ;;		_main
 24182 ;;		_InitUART
 24183 ;; This function uses a non-reentrant model
 24184 ;;
 24185                           
 24186                           	psect	text47
 24187  000474                     __ptext47:
 24188                           	opt stack 0
 24189  000474                     _ReadUSART:
 24190                           	opt stack 23
 24191                           
 24192                           ;UART.c: 255: char data;
 24193                           ;UART.c: 257: USART_Status.val &= 0xf2;
 24194                           
 24195                           ; BSR set to: 1
 24196                           ;incstack = 0
 24197  000474  0EF2               	movlw	242
 24198  000476  0101               	movlb	1	; () banked
 24199  000478  170D               	andwf	_USART_Status& (0+255),f,b
 24200                           
 24201                           ; BSR set to: 1
 24202                           ;UART.c: 259: if(RCSTAbits.RX9)
 24203  00047A  ACAB               	btfss	4011,6,c	;volatile
 24204  00047C  D006               	goto	l464
 24205                           
 24206                           ; BSR set to: 1
 24207                           ;UART.c: 260: {
 24208                           ;UART.c: 261: USART_Status.RX_NINE = 0;
 24209  00047E  0101               	movlb	1	; () banked
 24210  000480  910D               	bcf	_USART_Status& (0+255),0,b
 24211                           
 24212                           ;UART.c: 262: if(RCSTAbits.RX9D)
 24213  000482  A0AB               	btfss	4011,0,c	;volatile
 24214  000484  D002               	goto	l464
 24215                           
 24216                           ; BSR set to: 1
 24217                           ;UART.c: 263: USART_Status.RX_NINE = 1;
 24218  000486  0101               	movlb	1	; () banked
 24219  000488  810D               	bsf	_USART_Status& (0+255),0,b
 24220  00048A                     l464:
 24221                           
 24222                           ; BSR set to: 1
 24223                           ;UART.c: 264: }
 24224                           ;UART.c: 266: if(RCSTAbits.FERR)
 24225  00048A  A4AB               	btfss	4011,2,c	;volatile
 24226  00048C  D002               	goto	l466
 24227                           
 24228                           ; BSR set to: 1
 24229                           ;UART.c: 267: USART_Status.FRAME_ERROR = 1;
 24230  00048E  0101               	movlb	1	; () banked
 24231  000490  850D               	bsf	_USART_Status& (0+255),2,b
 24232  000492                     l466:
 24233                           
 24234                           ; BSR set to: 1
 24235                           ;UART.c: 269: if(RCSTAbits.OERR)
 24236  000492  A2AB               	btfss	4011,1,c	;volatile
 24237  000494  D002               	goto	l467
 24238                           
 24239                           ; BSR set to: 1
 24240                           ;UART.c: 270: USART_Status.OVERRUN_ERROR = 1;
 24241  000496  0101               	movlb	1	; () banked
 24242  000498  870D               	bsf	_USART_Status& (0+255),3,b
 24243  00049A                     l467:
 24244                           
 24245                           ; BSR set to: 1
 24246                           ;UART.c: 272: data = RCREG;
 24247  00049A  CFAE F17C          	movff	4014,ReadUSART@data	;volatile
 24248                           
 24249                           ; BSR set to: 1
 24250                           ;UART.c: 274: return (data);
 24251  00049E  0101               	movlb	1	; () banked
 24252  0004A0  517C               	movf	ReadUSART@data& (0+255),w,b
 24253  0004A2  0012               	return	
 24254  0004A4                     __end_of_ReadUSART:
 24255                           	opt stack 0
 24256                           tblptru	equ	0xFF8
 24257                           tblptrh	equ	0xFF7
 24258                           tblptrl	equ	0xFF6
 24259                           tablat	equ	0xFF5
 24260                           prodh	equ	0xFF4
 24261                           prodl	equ	0xFF3
 24262                           intcon	equ	0xFF2
 24263                           postinc0	equ	0xFEE
 24264                           wreg	equ	0xFE8
 24265                           indf1	equ	0xFE7
 24266                           postinc1	equ	0xFE6
 24267                           postdec1	equ	0xFE5
 24268                           fsr1h	equ	0xFE2
 24269                           fsr1l	equ	0xFE1
 24270                           indf2	equ	0xFDF
 24271                           postinc2	equ	0xFDE
 24272                           postdec2	equ	0xFDD
 24273                           fsr2h	equ	0xFDA
 24274                           fsr2l	equ	0xFD9
 24275                           status	equ	0xFD8
 24276                           
 24277 ;; *************** function _OpenUSART *****************
 24278 ;; Defined at:
 24279 ;;		line 140 in file "UART.c"
 24280 ;; Parameters:    Size  Location     Type
 24281 ;;  config          1    wreg     unsigned char 
 24282 ;;  spbrg           2   14[BANK1 ] unsigned int 
 24283 ;; Auto vars:     Size  Location     Type
 24284 ;;  config          1   19[BANK1 ] unsigned char 
 24285 ;; Return value:  Size  Location     Type
 24286 ;;		None               void
 24287 ;; Registers used:
 24288 ;;		wreg, status,2
 24289 ;; Tracked objects:
 24290 ;;		On entry : 0/0
 24291 ;;		On exit  : 0/0
 24292 ;;		Unchanged: 0/0
 24293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24294 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24295 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24296 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 24297 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 24298 ;;Total ram usage:        6 bytes
 24299 ;; Hardware stack levels used:    1
 24300 ;; Hardware stack levels required when called:    6
 24301 ;; This function calls:
 24302 ;;		Nothing
 24303 ;; This function is called by:
 24304 ;;		_InitUART
 24305 ;; This function uses a non-reentrant model
 24306 ;;
 24307                           
 24308                           	psect	text48
 24309  0175BE                     __ptext48:
 24310                           	opt stack 0
 24311  0175BE                     _OpenUSART:
 24312                           	opt stack 22
 24313                           
 24314                           ; BSR set to: 1
 24315                           ;incstack = 0
 24316                           ;OpenUSART@config stored from wreg
 24317  0175BE  0101               	movlb	1	; () banked
 24318  0175C0  6F81               	movwf	OpenUSART@config& (0+255),b
 24319                           
 24320                           ; BSR set to: 1
 24321                           ;UART.c: 142: TXSTA = 0;
 24322  0175C2  0E00               	movlw	0
 24323  0175C4  6EAC               	movwf	4012,c	;volatile
 24324                           
 24325                           ;UART.c: 143: RCSTA = 0;
 24326  0175C6  0E00               	movlw	0
 24327  0175C8  6EAB               	movwf	4011,c	;volatile
 24328                           
 24329                           ; BSR set to: 1
 24330                           ;UART.c: 145: if(config&0x01)
 24331  0175CA  0101               	movlb	1	; () banked
 24332  0175CC  B181               	btfsc	OpenUSART@config& (0+255),0,b
 24333                           
 24334                           ; BSR set to: 1
 24335                           ;UART.c: 146: TXSTAbits.SYNC = 1;
 24336  0175CE  88AC               	bsf	4012,4,c	;volatile
 24337                           
 24338                           ; BSR set to: 1
 24339                           ;UART.c: 148: if(config&0x02)
 24340                           
 24341                           ; BSR set to: 1
 24342  0175D0  0101               	movlb	1	; () banked
 24343  0175D2  A381               	btfss	OpenUSART@config& (0+255),1,b
 24344  0175D4  D002               	goto	l10294
 24345                           
 24346                           ; BSR set to: 1
 24347                           ;UART.c: 149: {
 24348                           ;UART.c: 150: TXSTAbits.TX9 = 1;
 24349  0175D6  8CAC               	bsf	4012,6,c	;volatile
 24350                           
 24351                           ;UART.c: 151: RCSTAbits.RX9 = 1;
 24352  0175D8  8CAB               	bsf	4011,6,c	;volatile
 24353  0175DA                     l10294:
 24354                           
 24355                           ; BSR set to: 1
 24356                           ;UART.c: 152: }
 24357                           ;UART.c: 154: if(config&0x04)
 24358  0175DA  0101               	movlb	1	; () banked
 24359  0175DC  B581               	btfsc	OpenUSART@config& (0+255),2,b
 24360                           
 24361                           ; BSR set to: 1
 24362                           ;UART.c: 155: TXSTAbits.CSRC = 1;
 24363  0175DE  8EAC               	bsf	4012,7,c	;volatile
 24364                           
 24365                           ; BSR set to: 1
 24366                           ;UART.c: 157: if(config&0x08)
 24367                           
 24368                           ; BSR set to: 1
 24369  0175E0  0101               	movlb	1	; () banked
 24370  0175E2  A781               	btfss	OpenUSART@config& (0+255),3,b
 24371  0175E4  D002               	goto	l432
 24372                           
 24373                           ; BSR set to: 1
 24374                           ;UART.c: 158: RCSTAbits.CREN = 1;
 24375  0175E6  88AB               	bsf	4011,4,c	;volatile
 24376  0175E8  D001               	goto	l10302
 24377  0175EA                     l432:
 24378                           
 24379                           ; BSR set to: 1
 24380                           ;UART.c: 159: else
 24381                           ;UART.c: 160: RCSTAbits.SREN = 1;
 24382  0175EA  8AAB               	bsf	4011,5,c	;volatile
 24383  0175EC                     l10302:
 24384                           
 24385                           ; BSR set to: 1
 24386                           ;UART.c: 162: if(config&0x10)
 24387  0175EC  0101               	movlb	1	; () banked
 24388  0175EE  B981               	btfsc	OpenUSART@config& (0+255),4,b
 24389                           
 24390                           ; BSR set to: 1
 24391                           ;UART.c: 163: TXSTAbits.BRGH = 1;
 24392  0175F0  84AC               	bsf	4012,2,c	;volatile
 24393                           
 24394                           ; BSR set to: 1
 24395                           ;UART.c: 165: PIR1bits.TXIF = 0;
 24396  0175F2  989E               	bcf	3998,4,c	;volatile
 24397                           
 24398                           ; BSR set to: 1
 24399                           ;UART.c: 167: if(config&0x20)
 24400  0175F4  0101               	movlb	1	; () banked
 24401  0175F6  BB81               	btfsc	OpenUSART@config& (0+255),5,b
 24402                           
 24403                           ; BSR set to: 1
 24404                           ;UART.c: 168: RCSTAbits.ADEN = 1;
 24405  0175F8  86AB               	bsf	4011,3,c	;volatile
 24406                           
 24407                           ; BSR set to: 1
 24408                           ;UART.c: 170: if(config&0x40)
 24409                           
 24410                           ; BSR set to: 1
 24411  0175FA  0101               	movlb	1	; () banked
 24412  0175FC  AD81               	btfss	OpenUSART@config& (0+255),6,b
 24413  0175FE  D002               	goto	l436
 24414                           
 24415                           ; BSR set to: 1
 24416                           ;UART.c: 171: {
 24417                           ;UART.c: 172: PIE1bits.RCIE = 1;
 24418  017600  8A9D               	bsf	3997,5,c	;volatile
 24419                           
 24420                           ;UART.c: 173: }
 24421  017602  D001               	goto	l437
 24422  017604                     l436:
 24423                           
 24424                           ; BSR set to: 1
 24425                           ;UART.c: 174: else
 24426                           ;UART.c: 175: {
 24427                           ;UART.c: 176: PIE1bits.RCIE = 0;
 24428  017604  9A9D               	bcf	3997,5,c	;volatile
 24429  017606                     l437:
 24430                           
 24431                           ; BSR set to: 1
 24432                           ;UART.c: 177: }
 24433                           ;UART.c: 179: PIR1bits.RCIF = 0;
 24434  017606  9A9E               	bcf	3998,5,c	;volatile
 24435                           
 24436                           ; BSR set to: 1
 24437                           ;UART.c: 181: if(config&0x80)
 24438  017608  0101               	movlb	1	; () banked
 24439  01760A  AF81               	btfss	OpenUSART@config& (0+255),7,b
 24440  01760C  D002               	goto	l438
 24441                           
 24442                           ; BSR set to: 1
 24443                           ;UART.c: 182: PIE1bits.TXIE = 1;
 24444  01760E  889D               	bsf	3997,4,c	;volatile
 24445  017610  D001               	goto	l439
 24446  017612                     l438:
 24447                           
 24448                           ; BSR set to: 1
 24449                           ;UART.c: 183: else
 24450                           ;UART.c: 184: PIE1bits.TXIE = 0;
 24451  017612  989D               	bcf	3997,4,c	;volatile
 24452  017614                     l439:
 24453                           
 24454                           ; BSR set to: 1
 24455                           ;UART.c: 186: SPBRG = spbrg;
 24456  017614  C17C  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
 24457                           
 24458                           ; BSR set to: 1
 24459                           ;UART.c: 187: SPBRGH = spbrg >> 8;
 24460  017618  0101               	movlb	1	; () banked
 24461  01761A  C17D  F17E         	movff	OpenUSART@spbrg+1,??_OpenUSART
 24462  01761E  C17E  F17F         	movff	??_OpenUSART,??_OpenUSART+1
 24463  017622  0101               	movlb	1	; () banked
 24464  017624  6B80               	clrf	(??_OpenUSART+2)& (0+255),b
 24465  017626  0101               	movlb	1	; () banked
 24466  017628  517F               	movf	(??_OpenUSART+1)& (0+255),w,b
 24467  01762A  6EB0               	movwf	4016,c	;volatile
 24468                           
 24469                           ; BSR set to: 1
 24470                           ;UART.c: 189: TXSTAbits.TXEN = 1;
 24471  01762C  8AAC               	bsf	4012,5,c	;volatile
 24472                           
 24473                           ; BSR set to: 1
 24474                           ;UART.c: 190: RCSTAbits.SPEN = 1;
 24475  01762E  8EAB               	bsf	4011,7,c	;volatile
 24476                           
 24477                           ; BSR set to: 1
 24478  017630  0012               	return	
 24479  017632                     __end_of_OpenUSART:
 24480                           	opt stack 0
 24481                           tblptru	equ	0xFF8
 24482                           tblptrh	equ	0xFF7
 24483                           tblptrl	equ	0xFF6
 24484                           tablat	equ	0xFF5
 24485                           prodh	equ	0xFF4
 24486                           prodl	equ	0xFF3
 24487                           intcon	equ	0xFF2
 24488                           postinc0	equ	0xFEE
 24489                           wreg	equ	0xFE8
 24490                           indf1	equ	0xFE7
 24491                           postinc1	equ	0xFE6
 24492                           postdec1	equ	0xFE5
 24493                           fsr1h	equ	0xFE2
 24494                           fsr1l	equ	0xFE1
 24495                           indf2	equ	0xFDF
 24496                           postinc2	equ	0xFDE
 24497                           postdec2	equ	0xFDD
 24498                           fsr2h	equ	0xFDA
 24499                           fsr2l	equ	0xFD9
 24500                           status	equ	0xFD8
 24501                           
 24502 ;; *************** function _Send_Config2 *****************
 24503 ;; Defined at:
 24504 ;;		line 137 in file "RF.c"
 24505 ;; Parameters:    Size  Location     Type
 24506 ;;  pin             1    wreg     unsigned char 
 24507 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 24508 ;;		 -> SubLightOFF(16), SubLightON(16), Aux2OFF(16), Aux2ON(16), 
 24509 ;;		 -> BedOFF(16), BedON(16), AuxOFF(16), AuxON(16), 
 24510 ;;		 -> fanOFF(16), fanON(16), 
 24511 ;; Auto vars:     Size  Location     Type
 24512 ;;  pin             1   29[BANK1 ] unsigned char 
 24513 ;;  i               1   30[BANK1 ] unsigned char 
 24514 ;; Return value:  Size  Location     Type
 24515 ;;		None               void
 24516 ;; Registers used:
 24517 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24518 ;; Tracked objects:
 24519 ;;		On entry : 0/0
 24520 ;;		On exit  : 0/0
 24521 ;;		Unchanged: 0/0
 24522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24523 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24524 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24525 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24526 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 24527 ;;Total ram usage:        6 bytes
 24528 ;; Hardware stack levels used:    1
 24529 ;; Hardware stack levels required when called:    8
 24530 ;; This function calls:
 24531 ;;		_One_Config2
 24532 ;;		_Zero_Config2
 24533 ;;		_delayUS
 24534 ;; This function is called by:
 24535 ;;		_Command
 24536 ;; This function uses a non-reentrant model
 24537 ;;
 24538                           
 24539                           	psect	text49
 24540  0170BE                     __ptext49:
 24541                           	opt stack 0
 24542  0170BE                     _Send_Config2:
 24543                           	opt stack 20
 24544                           
 24545                           ; BSR set to: 1
 24546                           ;incstack = 0
 24547                           ;Send_Config2@pin stored from wreg
 24548  0170BE  0101               	movlb	1	; () banked
 24549  0170C0  6F8B               	movwf	Send_Config2@pin& (0+255),b
 24550                           
 24551                           ; BSR set to: 1
 24552                           ;RF.c: 139: unsigned char i=0;
 24553  0170C2  0E00               	movlw	0
 24554  0170C4  0101               	movlb	1	; () banked
 24555  0170C6  6F8C               	movwf	Send_Config2@i& (0+255),b
 24556                           
 24557                           ;RF.c: 141: for(i=0;i<16;i++)
 24558  0170C8  0E00               	movlw	0
 24559  0170CA  0101               	movlb	1	; () banked
 24560  0170CC  6F8C               	movwf	Send_Config2@i& (0+255),b
 24561  0170CE  D025               	goto	L36
 24562  0170D0                     l12046:
 24563                           
 24564                           ; BSR set to: 1
 24565                           ;RF.c: 142: {
 24566                           ;RF.c: 143: if(data[i] == 0)
 24567  0170D0  0101               	movlb	1	; () banked
 24568  0170D2  518C               	movf	Send_Config2@i& (0+255),w,b
 24569  0170D4  0D01               	mullw	1
 24570  0170D6  0101               	movlb	1	; () banked
 24571  0170D8  C187  F189         	movff	Send_Config2@data,??_Send_Config2
 24572  0170DC  0101               	movlb	1	; () banked
 24573  0170DE  C188  F18A         	movff	Send_Config2@data+1,??_Send_Config2+1
 24574  0170E2  50F3               	movf	prodl,w,c
 24575  0170E4  0101               	movlb	1	; () banked
 24576  0170E6  2789               	addwf	??_Send_Config2& (0+255),f,b
 24577  0170E8  50F4               	movf	prodh,w,c
 24578  0170EA  0101               	movlb	1	; () banked
 24579  0170EC  238A               	addwfc	(??_Send_Config2+1)& (0+255),f,b
 24580  0170EE  C189  FFF6         	movff	??_Send_Config2,tblptrl
 24581  0170F2  C18A  FFF7         	movff	??_Send_Config2+1,tblptrh
 24582  0170F6                     	if	0	;tblptru may be non-zero
 24583  0170F6                     	endif
 24584  0170F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24585  0170F6  0E00               	movlw	low (__mediumconst shr (0+16))
 24586  0170F8  6EF8               	movwf	tblptru,c
 24587  0170FA                     	endif
 24588  0170FA  0008               	tblrd		*
 24589  0170FC  50F5               	movf	tablat,w,c
 24590  0170FE  0900               	iorlw	0
 24591  017100  A4D8               	btfss	status,2,c
 24592  017102  D005               	goto	l12050
 24593                           
 24594                           ; BSR set to: 1
 24595                           ;RF.c: 144: {
 24596                           ;RF.c: 145: Zero_Config2(pin);
 24597  017104  0101               	movlb	1	; () banked
 24598  017106  518B               	movf	Send_Config2@pin& (0+255),w,b
 24599  017108  EC60  F0BD         	call	_Zero_Config2
 24600                           
 24601                           ;RF.c: 146: }
 24602  01710C  D004               	goto	l12052
 24603  01710E                     l12050:
 24604                           
 24605                           ;RF.c: 147: else
 24606                           ;RF.c: 148: {
 24607                           ;RF.c: 149: One_Config2(pin);
 24608  01710E  0101               	movlb	1	; () banked
 24609  017110  518B               	movf	Send_Config2@pin& (0+255),w,b
 24610  017112  EC86  F0BD         	call	_One_Config2
 24611  017116                     l12052:
 24612  017116  0101               	movlb	1	; () banked
 24613  017118  2B8C               	incf	Send_Config2@i& (0+255),f,b
 24614  01711A                     L36:
 24615                           
 24616                           ; BSR set to: 1
 24617  01711A  0E0F               	movlw	15
 24618  01711C  0101               	movlb	1	; () banked
 24619  01711E  658C               	cpfsgt	Send_Config2@i& (0+255),b
 24620  017120  D7D7               	goto	l12046
 24621                           
 24622                           ; BSR set to: 1
 24623                           ;RF.c: 150: }
 24624                           ;RF.c: 151: }
 24625                           ;RF.c: 153: LATD &= ~pin;
 24626                           
 24627                           ; BSR set to: 1
 24628  017122  0101               	movlb	1	; () banked
 24629  017124  518B               	movf	Send_Config2@pin& (0+255),w,b
 24630  017126  0AFF               	xorlw	255
 24631  017128  168C               	andwf	3980,f,c	;volatile
 24632                           
 24633                           ; BSR set to: 1
 24634                           ;RF.c: 154: delayUS(11700);
 24635  01712A  0EB4               	movlw	180
 24636  01712C  0101               	movlb	1	; () banked
 24637  01712E  6F7C               	movwf	delayUS@US& (0+255),b
 24638  017130  0E2D               	movlw	45
 24639  017132  0101               	movlb	1	; () banked
 24640  017134  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24641  017136  0E00               	movlw	0
 24642  017138  0101               	movlb	1	; () banked
 24643  01713A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24644  01713C  0E00               	movlw	0
 24645  01713E  0101               	movlb	1	; () banked
 24646  017140  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24647  017142  ECA4  F0BA         	call	_delayUS	;wreg free
 24648  017146  0012               	return	
 24649  017148                     __end_of_Send_Config2:
 24650                           	opt stack 0
 24651                           tblptru	equ	0xFF8
 24652                           tblptrh	equ	0xFF7
 24653                           tblptrl	equ	0xFF6
 24654                           tablat	equ	0xFF5
 24655                           prodh	equ	0xFF4
 24656                           prodl	equ	0xFF3
 24657                           intcon	equ	0xFF2
 24658                           postinc0	equ	0xFEE
 24659                           wreg	equ	0xFE8
 24660                           indf1	equ	0xFE7
 24661                           postinc1	equ	0xFE6
 24662                           postdec1	equ	0xFE5
 24663                           fsr1h	equ	0xFE2
 24664                           fsr1l	equ	0xFE1
 24665                           indf2	equ	0xFDF
 24666                           postinc2	equ	0xFDE
 24667                           postdec2	equ	0xFDD
 24668                           fsr2h	equ	0xFDA
 24669                           fsr2l	equ	0xFD9
 24670                           status	equ	0xFD8
 24671                           
 24672 ;; *************** function _Zero_Config2 *****************
 24673 ;; Defined at:
 24674 ;;		line 163 in file "RF.c"
 24675 ;; Parameters:    Size  Location     Type
 24676 ;;  pin             1    wreg     unsigned char 
 24677 ;; Auto vars:     Size  Location     Type
 24678 ;;  pin             1   24[BANK1 ] unsigned char 
 24679 ;; Return value:  Size  Location     Type
 24680 ;;		None               void
 24681 ;; Registers used:
 24682 ;;		wreg, status,2, status,0, cstack
 24683 ;; Tracked objects:
 24684 ;;		On entry : 0/0
 24685 ;;		On exit  : 0/0
 24686 ;;		Unchanged: 0/0
 24687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24689 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24691 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24692 ;;Total ram usage:        1 bytes
 24693 ;; Hardware stack levels used:    1
 24694 ;; Hardware stack levels required when called:    7
 24695 ;; This function calls:
 24696 ;;		_delayUS
 24697 ;; This function is called by:
 24698 ;;		_Send_Config2
 24699 ;; This function uses a non-reentrant model
 24700 ;;
 24701                           
 24702                           	psect	text50
 24703  017AC0                     __ptext50:
 24704                           	opt stack 0
 24705  017AC0                     _Zero_Config2:
 24706                           	opt stack 20
 24707                           
 24708                           ;incstack = 0
 24709                           ;Zero_Config2@pin stored from wreg
 24710  017AC0  0101               	movlb	1	; () banked
 24711  017AC2  6F86               	movwf	Zero_Config2@pin& (0+255),b
 24712                           
 24713                           ; BSR set to: 1
 24714                           ;RF.c: 165: LATD |= pin;
 24715  017AC4  0101               	movlb	1	; () banked
 24716  017AC6  5186               	movf	Zero_Config2@pin& (0+255),w,b
 24717  017AC8  128C               	iorwf	3980,f,c	;volatile
 24718                           
 24719                           ; BSR set to: 1
 24720                           ;RF.c: 166: delayUS(705);
 24721  017ACA  0EC1               	movlw	193
 24722  017ACC  0101               	movlb	1	; () banked
 24723  017ACE  6F7C               	movwf	delayUS@US& (0+255),b
 24724  017AD0  0E02               	movlw	2
 24725  017AD2  0101               	movlb	1	; () banked
 24726  017AD4  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24727  017AD6  0E00               	movlw	0
 24728  017AD8  0101               	movlb	1	; () banked
 24729  017ADA  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24730  017ADC  0E00               	movlw	0
 24731  017ADE  0101               	movlb	1	; () banked
 24732  017AE0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24733  017AE2  ECA4  F0BA         	call	_delayUS	;wreg free
 24734                           
 24735                           ;RF.c: 167: LATD &= ~pin;
 24736  017AE6  0101               	movlb	1	; () banked
 24737  017AE8  5186               	movf	Zero_Config2@pin& (0+255),w,b
 24738  017AEA  0AFF               	xorlw	255
 24739  017AEC  168C               	andwf	3980,f,c	;volatile
 24740                           
 24741                           ;RF.c: 168: delayUS(1910);
 24742  017AEE  0E76               	movlw	118
 24743  017AF0  0101               	movlb	1	; () banked
 24744  017AF2  6F7C               	movwf	delayUS@US& (0+255),b
 24745  017AF4  0E07               	movlw	7
 24746  017AF6  0101               	movlb	1	; () banked
 24747  017AF8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24748  017AFA  0E00               	movlw	0
 24749  017AFC  0101               	movlb	1	; () banked
 24750  017AFE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24751  017B00  0E00               	movlw	0
 24752  017B02  0101               	movlb	1	; () banked
 24753  017B04  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24754  017B06  ECA4  F0BA         	call	_delayUS	;wreg free
 24755  017B0A  0012               	return	
 24756  017B0C                     __end_of_Zero_Config2:
 24757                           	opt stack 0
 24758                           tblptru	equ	0xFF8
 24759                           tblptrh	equ	0xFF7
 24760                           tblptrl	equ	0xFF6
 24761                           tablat	equ	0xFF5
 24762                           prodh	equ	0xFF4
 24763                           prodl	equ	0xFF3
 24764                           intcon	equ	0xFF2
 24765                           postinc0	equ	0xFEE
 24766                           wreg	equ	0xFE8
 24767                           indf1	equ	0xFE7
 24768                           postinc1	equ	0xFE6
 24769                           postdec1	equ	0xFE5
 24770                           fsr1h	equ	0xFE2
 24771                           fsr1l	equ	0xFE1
 24772                           indf2	equ	0xFDF
 24773                           postinc2	equ	0xFDE
 24774                           postdec2	equ	0xFDD
 24775                           fsr2h	equ	0xFDA
 24776                           fsr2l	equ	0xFD9
 24777                           status	equ	0xFD8
 24778                           
 24779 ;; *************** function _One_Config2 *****************
 24780 ;; Defined at:
 24781 ;;		line 176 in file "RF.c"
 24782 ;; Parameters:    Size  Location     Type
 24783 ;;  pin             1    wreg     unsigned char 
 24784 ;; Auto vars:     Size  Location     Type
 24785 ;;  pin             1   24[BANK1 ] unsigned char 
 24786 ;; Return value:  Size  Location     Type
 24787 ;;		None               void
 24788 ;; Registers used:
 24789 ;;		wreg, status,2, status,0, cstack
 24790 ;; Tracked objects:
 24791 ;;		On entry : 0/0
 24792 ;;		On exit  : 0/0
 24793 ;;		Unchanged: 0/0
 24794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24796 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 24798 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 24799 ;;Total ram usage:        1 bytes
 24800 ;; Hardware stack levels used:    1
 24801 ;; Hardware stack levels required when called:    7
 24802 ;; This function calls:
 24803 ;;		_delayUS
 24804 ;; This function is called by:
 24805 ;;		_Send_Config2
 24806 ;; This function uses a non-reentrant model
 24807 ;;
 24808                           
 24809                           	psect	text51
 24810  017B0C                     __ptext51:
 24811                           	opt stack 0
 24812  017B0C                     _One_Config2:
 24813                           	opt stack 20
 24814                           
 24815                           ;incstack = 0
 24816                           ;One_Config2@pin stored from wreg
 24817  017B0C  0101               	movlb	1	; () banked
 24818  017B0E  6F86               	movwf	One_Config2@pin& (0+255),b
 24819                           
 24820                           ; BSR set to: 1
 24821                           ;RF.c: 178: LATD |= pin;
 24822  017B10  0101               	movlb	1	; () banked
 24823  017B12  5186               	movf	One_Config2@pin& (0+255),w,b
 24824  017B14  128C               	iorwf	3980,f,c	;volatile
 24825                           
 24826                           ; BSR set to: 1
 24827                           ;RF.c: 179: delayUS(1955);
 24828  017B16  0EA3               	movlw	163
 24829  017B18  0101               	movlb	1	; () banked
 24830  017B1A  6F7C               	movwf	delayUS@US& (0+255),b
 24831  017B1C  0E07               	movlw	7
 24832  017B1E  0101               	movlb	1	; () banked
 24833  017B20  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24834  017B22  0E00               	movlw	0
 24835  017B24  0101               	movlb	1	; () banked
 24836  017B26  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24837  017B28  0E00               	movlw	0
 24838  017B2A  0101               	movlb	1	; () banked
 24839  017B2C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24840  017B2E  ECA4  F0BA         	call	_delayUS	;wreg free
 24841                           
 24842                           ;RF.c: 180: LATD &= ~pin;
 24843  017B32  0101               	movlb	1	; () banked
 24844  017B34  5186               	movf	One_Config2@pin& (0+255),w,b
 24845  017B36  0AFF               	xorlw	255
 24846  017B38  168C               	andwf	3980,f,c	;volatile
 24847                           
 24848                           ;RF.c: 181: delayUS(705);
 24849  017B3A  0EC1               	movlw	193
 24850  017B3C  0101               	movlb	1	; () banked
 24851  017B3E  6F7C               	movwf	delayUS@US& (0+255),b
 24852  017B40  0E02               	movlw	2
 24853  017B42  0101               	movlb	1	; () banked
 24854  017B44  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 24855  017B46  0E00               	movlw	0
 24856  017B48  0101               	movlb	1	; () banked
 24857  017B4A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 24858  017B4C  0E00               	movlw	0
 24859  017B4E  0101               	movlb	1	; () banked
 24860  017B50  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 24861  017B52  ECA4  F0BA         	call	_delayUS	;wreg free
 24862  017B56  0012               	return	
 24863  017B58                     __end_of_One_Config2:
 24864                           	opt stack 0
 24865                           tblptru	equ	0xFF8
 24866                           tblptrh	equ	0xFF7
 24867                           tblptrl	equ	0xFF6
 24868                           tablat	equ	0xFF5
 24869                           prodh	equ	0xFF4
 24870                           prodl	equ	0xFF3
 24871                           intcon	equ	0xFF2
 24872                           postinc0	equ	0xFEE
 24873                           wreg	equ	0xFE8
 24874                           indf1	equ	0xFE7
 24875                           postinc1	equ	0xFE6
 24876                           postdec1	equ	0xFE5
 24877                           fsr1h	equ	0xFE2
 24878                           fsr1l	equ	0xFE1
 24879                           indf2	equ	0xFDF
 24880                           postinc2	equ	0xFDE
 24881                           postdec2	equ	0xFDD
 24882                           fsr2h	equ	0xFDA
 24883                           fsr2l	equ	0xFD9
 24884                           status	equ	0xFD8
 24885                           
 24886 ;; *************** function _Send_Config1 *****************
 24887 ;; Defined at:
 24888 ;;		line 54 in file "RF.c"
 24889 ;; Parameters:    Size  Location     Type
 24890 ;;  pin             1    wreg     unsigned char 
 24891 ;;  data            2   25[BANK1 ] PTR const unsigned char 
 24892 ;;		 -> TXdataF(12), TXdataE(12), TXdataD(12), 
 24893 ;; Auto vars:     Size  Location     Type
 24894 ;;  pin             1   31[BANK1 ] unsigned char 
 24895 ;;  i               1   30[BANK1 ] unsigned char 
 24896 ;; Return value:  Size  Location     Type
 24897 ;;		None               void
 24898 ;; Registers used:
 24899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24900 ;; Tracked objects:
 24901 ;;		On entry : 0/0
 24902 ;;		On exit  : 0/0
 24903 ;;		Unchanged: 0/0
 24904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 24905 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24906 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 24907 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 24908 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 24909 ;;Total ram usage:        7 bytes
 24910 ;; Hardware stack levels used:    1
 24911 ;; Hardware stack levels required when called:    8
 24912 ;; This function calls:
 24913 ;;		_One_Config1
 24914 ;;		_Zero_Config1
 24915 ;;		_delayUS
 24916 ;;		_f_Config1
 24917 ;; This function is called by:
 24918 ;;		_Command
 24919 ;; This function uses a non-reentrant model
 24920 ;;
 24921                           
 24922                           	psect	text52
 24923  015EDE                     __ptext52:
 24924                           	opt stack 0
 24925  015EDE                     _Send_Config1:
 24926                           	opt stack 20
 24927                           
 24928                           ;incstack = 0
 24929                           ;Send_Config1@pin stored from wreg
 24930  015EDE  0101               	movlb	1	; () banked
 24931  015EE0  6F8D               	movwf	Send_Config1@pin& (0+255),b
 24932                           
 24933                           ; BSR set to: 1
 24934                           ;RF.c: 56: unsigned char i=0;
 24935  015EE2  0E00               	movlw	0
 24936  015EE4  0101               	movlb	1	; () banked
 24937  015EE6  6F8C               	movwf	Send_Config1@i& (0+255),b
 24938                           
 24939                           ;RF.c: 58: for(i=0;i<12;i++)
 24940  015EE8  0E00               	movlw	0
 24941  015EEA  0101               	movlb	1	; () banked
 24942  015EEC  6F8C               	movwf	Send_Config1@i& (0+255),b
 24943  015EEE  D046               	goto	L37
 24944  015EF0                     l12020:
 24945                           
 24946                           ; BSR set to: 1
 24947                           ;RF.c: 59: {
 24948                           ;RF.c: 60: if(data[i] == 0)
 24949  015EF0  0101               	movlb	1	; () banked
 24950  015EF2  518C               	movf	Send_Config1@i& (0+255),w,b
 24951  015EF4  0D01               	mullw	1
 24952  015EF6  0101               	movlb	1	; () banked
 24953  015EF8  C187  F189         	movff	Send_Config1@data,??_Send_Config1
 24954  015EFC  0101               	movlb	1	; () banked
 24955  015EFE  C188  F18A         	movff	Send_Config1@data+1,??_Send_Config1+1
 24956  015F02  50F3               	movf	prodl,w,c
 24957  015F04  0101               	movlb	1	; () banked
 24958  015F06  2789               	addwf	??_Send_Config1& (0+255),f,b
 24959  015F08  50F4               	movf	prodh,w,c
 24960  015F0A  0101               	movlb	1	; () banked
 24961  015F0C  238A               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 24962  015F0E  C189  FFF6         	movff	??_Send_Config1,tblptrl
 24963  015F12  C18A  FFF7         	movff	??_Send_Config1+1,tblptrh
 24964  015F16                     	if	0	;tblptru may be non-zero
 24965  015F16                     	endif
 24966  015F16                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 24967  015F16  0E00               	movlw	low (__mediumconst shr (0+16))
 24968  015F18  6EF8               	movwf	tblptru,c
 24969  015F1A                     	endif
 24970  015F1A  0008               	tblrd		*
 24971  015F1C  50F5               	movf	tablat,w,c
 24972  015F1E  0900               	iorlw	0
 24973  015F20  A4D8               	btfss	status,2,c
 24974  015F22  D005               	goto	l12024
 24975                           
 24976                           ; BSR set to: 1
 24977                           ;RF.c: 61: {
 24978                           ;RF.c: 62: Zero_Config1(pin);
 24979  015F24  0101               	movlb	1	; () banked
 24980  015F26  518D               	movf	Send_Config1@pin& (0+255),w,b
 24981  015F28  ECF8  F0B6         	call	_Zero_Config1
 24982                           
 24983                           ;RF.c: 63: }
 24984  015F2C  D025               	goto	l12030
 24985  015F2E                     l12024:
 24986                           
 24987                           ;RF.c: 64: else if(data[i] ==1)
 24988  015F2E  0101               	movlb	1	; () banked
 24989  015F30  518C               	movf	Send_Config1@i& (0+255),w,b
 24990  015F32  0D01               	mullw	1
 24991  015F34  0101               	movlb	1	; () banked
 24992  015F36  C187  F189         	movff	Send_Config1@data,??_Send_Config1
 24993  015F3A  0101               	movlb	1	; () banked
 24994  015F3C  C188  F18A         	movff	Send_Config1@data+1,??_Send_Config1+1
 24995  015F40  50F3               	movf	prodl,w,c
 24996  015F42  0101               	movlb	1	; () banked
 24997  015F44  2789               	addwf	??_Send_Config1& (0+255),f,b
 24998  015F46  50F4               	movf	prodh,w,c
 24999  015F48  0101               	movlb	1	; () banked
 25000  015F4A  238A               	addwfc	(??_Send_Config1+1)& (0+255),f,b
 25001  015F4C  C189  FFF6         	movff	??_Send_Config1,tblptrl
 25002  015F50  C18A  FFF7         	movff	??_Send_Config1+1,tblptrh
 25003  015F54                     	if	0	;tblptru may be non-zero
 25004  015F54                     	endif
 25005  015F54                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25006  015F54  0E00               	movlw	low (__mediumconst shr (0+16))
 25007  015F56  6EF8               	movwf	tblptru,c
 25008  015F58                     	endif
 25009  015F58  0008               	tblrd		*
 25010  015F5A  CFF5 F18B          	movff	tablat,??_Send_Config1+2
 25011  015F5E  0101               	movlb	1	; () banked
 25012  015F60  058B               	decf	(??_Send_Config1+2)& (0+255),w,b
 25013  015F62  A4D8               	btfss	status,2,c
 25014  015F64  D005               	goto	l12028
 25015                           
 25016                           ; BSR set to: 1
 25017                           ;RF.c: 65: {
 25018                           ;RF.c: 66: One_Config1(pin);
 25019  015F66  0101               	movlb	1	; () banked
 25020  015F68  518D               	movf	Send_Config1@pin& (0+255),w,b
 25021  015F6A  EC41  F0B7         	call	_One_Config1
 25022                           
 25023                           ;RF.c: 67: }
 25024  015F6E  D004               	goto	l12030
 25025  015F70                     l12028:
 25026                           
 25027                           ;RF.c: 68: else
 25028                           ;RF.c: 69: {
 25029                           ;RF.c: 70: f_Config1(pin);
 25030  015F70  0101               	movlb	1	; () banked
 25031  015F72  518D               	movf	Send_Config1@pin& (0+255),w,b
 25032  015F74  ECAF  F0B6         	call	_f_Config1
 25033  015F78                     l12030:
 25034  015F78  0101               	movlb	1	; () banked
 25035  015F7A  2B8C               	incf	Send_Config1@i& (0+255),f,b
 25036  015F7C                     L37:
 25037                           
 25038                           ; BSR set to: 1
 25039  015F7C  0E0B               	movlw	11
 25040  015F7E  0101               	movlb	1	; () banked
 25041  015F80  658C               	cpfsgt	Send_Config1@i& (0+255),b
 25042  015F82  D7B6               	goto	l12020
 25043                           
 25044                           ; BSR set to: 1
 25045                           ;RF.c: 71: }
 25046                           ;RF.c: 72: }
 25047                           ;RF.c: 74: LATD |= pin;
 25048                           
 25049                           ; BSR set to: 1
 25050  015F84  0101               	movlb	1	; () banked
 25051  015F86  518D               	movf	Send_Config1@pin& (0+255),w,b
 25052  015F88  128C               	iorwf	3980,f,c	;volatile
 25053                           
 25054                           ; BSR set to: 1
 25055                           ;RF.c: 75: delayUS(222);
 25056  015F8A  0EDE               	movlw	222
 25057  015F8C  0101               	movlb	1	; () banked
 25058  015F8E  6F7C               	movwf	delayUS@US& (0+255),b
 25059  015F90  0E00               	movlw	0
 25060  015F92  0101               	movlb	1	; () banked
 25061  015F94  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25062  015F96  0E00               	movlw	0
 25063  015F98  0101               	movlb	1	; () banked
 25064  015F9A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25065  015F9C  0E00               	movlw	0
 25066  015F9E  0101               	movlb	1	; () banked
 25067  015FA0  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25068  015FA2  ECA4  F0BA         	call	_delayUS	;wreg free
 25069                           
 25070                           ;RF.c: 76: LATD &= ~pin;
 25071  015FA6  0101               	movlb	1	; () banked
 25072  015FA8  518D               	movf	Send_Config1@pin& (0+255),w,b
 25073  015FAA  0AFF               	xorlw	255
 25074  015FAC  168C               	andwf	3980,f,c	;volatile
 25075                           
 25076                           ;RF.c: 77: delayUS(7330);
 25077  015FAE  0EA2               	movlw	162
 25078  015FB0  0101               	movlb	1	; () banked
 25079  015FB2  6F7C               	movwf	delayUS@US& (0+255),b
 25080  015FB4  0E1C               	movlw	28
 25081  015FB6  0101               	movlb	1	; () banked
 25082  015FB8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25083  015FBA  0E00               	movlw	0
 25084  015FBC  0101               	movlb	1	; () banked
 25085  015FBE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25086  015FC0  0E00               	movlw	0
 25087  015FC2  0101               	movlb	1	; () banked
 25088  015FC4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25089  015FC6  ECA4  F0BA         	call	_delayUS	;wreg free
 25090  015FCA  0012               	return	
 25091  015FCC                     __end_of_Send_Config1:
 25092                           	opt stack 0
 25093                           tblptru	equ	0xFF8
 25094                           tblptrh	equ	0xFF7
 25095                           tblptrl	equ	0xFF6
 25096                           tablat	equ	0xFF5
 25097                           prodh	equ	0xFF4
 25098                           prodl	equ	0xFF3
 25099                           intcon	equ	0xFF2
 25100                           postinc0	equ	0xFEE
 25101                           wreg	equ	0xFE8
 25102                           indf1	equ	0xFE7
 25103                           postinc1	equ	0xFE6
 25104                           postdec1	equ	0xFE5
 25105                           fsr1h	equ	0xFE2
 25106                           fsr1l	equ	0xFE1
 25107                           indf2	equ	0xFDF
 25108                           postinc2	equ	0xFDE
 25109                           postdec2	equ	0xFDD
 25110                           fsr2h	equ	0xFDA
 25111                           fsr2l	equ	0xFD9
 25112                           status	equ	0xFD8
 25113                           
 25114 ;; *************** function _f_Config1 *****************
 25115 ;; Defined at:
 25116 ;;		line 120 in file "RF.c"
 25117 ;; Parameters:    Size  Location     Type
 25118 ;;  pin             1    wreg     unsigned char 
 25119 ;; Auto vars:     Size  Location     Type
 25120 ;;  pin             1   24[BANK1 ] unsigned char 
 25121 ;; Return value:  Size  Location     Type
 25122 ;;		None               void
 25123 ;; Registers used:
 25124 ;;		wreg, status,2, status,0, cstack
 25125 ;; Tracked objects:
 25126 ;;		On entry : 0/0
 25127 ;;		On exit  : 0/0
 25128 ;;		Unchanged: 0/0
 25129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25131 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25133 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25134 ;;Total ram usage:        1 bytes
 25135 ;; Hardware stack levels used:    1
 25136 ;; Hardware stack levels required when called:    7
 25137 ;; This function calls:
 25138 ;;		_delayUS
 25139 ;; This function is called by:
 25140 ;;		_Send_Config1
 25141 ;; This function uses a non-reentrant model
 25142 ;;
 25143                           
 25144                           	psect	text53
 25145  016D5E                     __ptext53:
 25146                           	opt stack 0
 25147  016D5E                     _f_Config1:
 25148                           	opt stack 20
 25149                           
 25150                           ;incstack = 0
 25151                           ;f_Config1@pin stored from wreg
 25152  016D5E  0101               	movlb	1	; () banked
 25153  016D60  6F86               	movwf	f_Config1@pin& (0+255),b
 25154                           
 25155                           ; BSR set to: 1
 25156                           ;RF.c: 122: LATD |= pin;
 25157  016D62  0101               	movlb	1	; () banked
 25158  016D64  5186               	movf	f_Config1@pin& (0+255),w,b
 25159  016D66  128C               	iorwf	3980,f,c	;volatile
 25160                           
 25161                           ; BSR set to: 1
 25162                           ;RF.c: 123: delayUS(216);
 25163  016D68  0ED8               	movlw	216
 25164  016D6A  0101               	movlb	1	; () banked
 25165  016D6C  6F7C               	movwf	delayUS@US& (0+255),b
 25166  016D6E  0E00               	movlw	0
 25167  016D70  0101               	movlb	1	; () banked
 25168  016D72  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25169  016D74  0E00               	movlw	0
 25170  016D76  0101               	movlb	1	; () banked
 25171  016D78  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25172  016D7A  0E00               	movlw	0
 25173  016D7C  0101               	movlb	1	; () banked
 25174  016D7E  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25175  016D80  ECA4  F0BA         	call	_delayUS	;wreg free
 25176                           
 25177                           ;RF.c: 124: LATD &= ~pin;
 25178  016D84  0101               	movlb	1	; () banked
 25179  016D86  5186               	movf	f_Config1@pin& (0+255),w,b
 25180  016D88  0AFF               	xorlw	255
 25181  016D8A  168C               	andwf	3980,f,c	;volatile
 25182                           
 25183                           ;RF.c: 125: delayUS(614);
 25184  016D8C  0E66               	movlw	102
 25185  016D8E  0101               	movlb	1	; () banked
 25186  016D90  6F7C               	movwf	delayUS@US& (0+255),b
 25187  016D92  0E02               	movlw	2
 25188  016D94  0101               	movlb	1	; () banked
 25189  016D96  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25190  016D98  0E00               	movlw	0
 25191  016D9A  0101               	movlb	1	; () banked
 25192  016D9C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25193  016D9E  0E00               	movlw	0
 25194  016DA0  0101               	movlb	1	; () banked
 25195  016DA2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25196  016DA4  ECA4  F0BA         	call	_delayUS	;wreg free
 25197                           
 25198                           ;RF.c: 126: LATD |= pin;
 25199  016DA8  0101               	movlb	1	; () banked
 25200  016DAA  5186               	movf	f_Config1@pin& (0+255),w,b
 25201  016DAC  128C               	iorwf	3980,f,c	;volatile
 25202                           
 25203                           ; BSR set to: 1
 25204                           ;RF.c: 127: delayUS(614);
 25205  016DAE  0E66               	movlw	102
 25206  016DB0  0101               	movlb	1	; () banked
 25207  016DB2  6F7C               	movwf	delayUS@US& (0+255),b
 25208  016DB4  0E02               	movlw	2
 25209  016DB6  0101               	movlb	1	; () banked
 25210  016DB8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25211  016DBA  0E00               	movlw	0
 25212  016DBC  0101               	movlb	1	; () banked
 25213  016DBE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25214  016DC0  0E00               	movlw	0
 25215  016DC2  0101               	movlb	1	; () banked
 25216  016DC4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25217  016DC6  ECA4  F0BA         	call	_delayUS	;wreg free
 25218                           
 25219                           ;RF.c: 128: LATD &= ~pin;
 25220  016DCA  0101               	movlb	1	; () banked
 25221  016DCC  5186               	movf	f_Config1@pin& (0+255),w,b
 25222  016DCE  0AFF               	xorlw	255
 25223  016DD0  168C               	andwf	3980,f,c	;volatile
 25224                           
 25225                           ; BSR set to: 1
 25226                           ;RF.c: 129: delayUS(216);
 25227  016DD2  0ED8               	movlw	216
 25228  016DD4  0101               	movlb	1	; () banked
 25229  016DD6  6F7C               	movwf	delayUS@US& (0+255),b
 25230  016DD8  0E00               	movlw	0
 25231  016DDA  0101               	movlb	1	; () banked
 25232  016DDC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25233  016DDE  0E00               	movlw	0
 25234  016DE0  0101               	movlb	1	; () banked
 25235  016DE2  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25236  016DE4  0E00               	movlw	0
 25237  016DE6  0101               	movlb	1	; () banked
 25238  016DE8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25239  016DEA  ECA4  F0BA         	call	_delayUS	;wreg free
 25240  016DEE  0012               	return	
 25241  016DF0                     __end_of_f_Config1:
 25242                           	opt stack 0
 25243                           tblptru	equ	0xFF8
 25244                           tblptrh	equ	0xFF7
 25245                           tblptrl	equ	0xFF6
 25246                           tablat	equ	0xFF5
 25247                           prodh	equ	0xFF4
 25248                           prodl	equ	0xFF3
 25249                           intcon	equ	0xFF2
 25250                           postinc0	equ	0xFEE
 25251                           wreg	equ	0xFE8
 25252                           indf1	equ	0xFE7
 25253                           postinc1	equ	0xFE6
 25254                           postdec1	equ	0xFE5
 25255                           fsr1h	equ	0xFE2
 25256                           fsr1l	equ	0xFE1
 25257                           indf2	equ	0xFDF
 25258                           postinc2	equ	0xFDE
 25259                           postdec2	equ	0xFDD
 25260                           fsr2h	equ	0xFDA
 25261                           fsr2l	equ	0xFD9
 25262                           status	equ	0xFD8
 25263                           
 25264 ;; *************** function _Zero_Config1 *****************
 25265 ;; Defined at:
 25266 ;;		line 86 in file "RF.c"
 25267 ;; Parameters:    Size  Location     Type
 25268 ;;  pin             1    wreg     unsigned char 
 25269 ;; Auto vars:     Size  Location     Type
 25270 ;;  pin             1   24[BANK1 ] unsigned char 
 25271 ;; Return value:  Size  Location     Type
 25272 ;;		None               void
 25273 ;; Registers used:
 25274 ;;		wreg, status,2, status,0, cstack
 25275 ;; Tracked objects:
 25276 ;;		On entry : 0/0
 25277 ;;		On exit  : 0/0
 25278 ;;		Unchanged: 0/0
 25279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25281 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25283 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25284 ;;Total ram usage:        1 bytes
 25285 ;; Hardware stack levels used:    1
 25286 ;; Hardware stack levels required when called:    7
 25287 ;; This function calls:
 25288 ;;		_delayUS
 25289 ;; This function is called by:
 25290 ;;		_Send_Config1
 25291 ;; This function uses a non-reentrant model
 25292 ;;
 25293                           
 25294                           	psect	text54
 25295  016DF0                     __ptext54:
 25296                           	opt stack 0
 25297  016DF0                     _Zero_Config1:
 25298                           	opt stack 20
 25299                           
 25300                           ;incstack = 0
 25301                           ;Zero_Config1@pin stored from wreg
 25302  016DF0  0101               	movlb	1	; () banked
 25303  016DF2  6F86               	movwf	Zero_Config1@pin& (0+255),b
 25304                           
 25305                           ; BSR set to: 1
 25306                           ;RF.c: 88: LATD |= pin;
 25307  016DF4  0101               	movlb	1	; () banked
 25308  016DF6  5186               	movf	Zero_Config1@pin& (0+255),w,b
 25309  016DF8  128C               	iorwf	3980,f,c	;volatile
 25310                           
 25311                           ; BSR set to: 1
 25312                           ;RF.c: 89: delayUS(216 );
 25313  016DFA  0ED8               	movlw	216
 25314  016DFC  0101               	movlb	1	; () banked
 25315  016DFE  6F7C               	movwf	delayUS@US& (0+255),b
 25316  016E00  0E00               	movlw	0
 25317  016E02  0101               	movlb	1	; () banked
 25318  016E04  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25319  016E06  0E00               	movlw	0
 25320  016E08  0101               	movlb	1	; () banked
 25321  016E0A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25322  016E0C  0E00               	movlw	0
 25323  016E0E  0101               	movlb	1	; () banked
 25324  016E10  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25325  016E12  ECA4  F0BA         	call	_delayUS	;wreg free
 25326                           
 25327                           ;RF.c: 90: LATD &= ~pin;
 25328  016E16  0101               	movlb	1	; () banked
 25329  016E18  5186               	movf	Zero_Config1@pin& (0+255),w,b
 25330  016E1A  0AFF               	xorlw	255
 25331  016E1C  168C               	andwf	3980,f,c	;volatile
 25332                           
 25333                           ;RF.c: 91: delayUS(614 );
 25334  016E1E  0E66               	movlw	102
 25335  016E20  0101               	movlb	1	; () banked
 25336  016E22  6F7C               	movwf	delayUS@US& (0+255),b
 25337  016E24  0E02               	movlw	2
 25338  016E26  0101               	movlb	1	; () banked
 25339  016E28  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25340  016E2A  0E00               	movlw	0
 25341  016E2C  0101               	movlb	1	; () banked
 25342  016E2E  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25343  016E30  0E00               	movlw	0
 25344  016E32  0101               	movlb	1	; () banked
 25345  016E34  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25346  016E36  ECA4  F0BA         	call	_delayUS	;wreg free
 25347                           
 25348                           ;RF.c: 92: LATD |= pin;
 25349  016E3A  0101               	movlb	1	; () banked
 25350  016E3C  5186               	movf	Zero_Config1@pin& (0+255),w,b
 25351  016E3E  128C               	iorwf	3980,f,c	;volatile
 25352                           
 25353                           ; BSR set to: 1
 25354                           ;RF.c: 93: delayUS(216 );
 25355  016E40  0ED8               	movlw	216
 25356  016E42  0101               	movlb	1	; () banked
 25357  016E44  6F7C               	movwf	delayUS@US& (0+255),b
 25358  016E46  0E00               	movlw	0
 25359  016E48  0101               	movlb	1	; () banked
 25360  016E4A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25361  016E4C  0E00               	movlw	0
 25362  016E4E  0101               	movlb	1	; () banked
 25363  016E50  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25364  016E52  0E00               	movlw	0
 25365  016E54  0101               	movlb	1	; () banked
 25366  016E56  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25367  016E58  ECA4  F0BA         	call	_delayUS	;wreg free
 25368                           
 25369                           ;RF.c: 94: LATD &= ~pin;
 25370  016E5C  0101               	movlb	1	; () banked
 25371  016E5E  5186               	movf	Zero_Config1@pin& (0+255),w,b
 25372  016E60  0AFF               	xorlw	255
 25373  016E62  168C               	andwf	3980,f,c	;volatile
 25374                           
 25375                           ; BSR set to: 1
 25376                           ;RF.c: 95: delayUS(614 );
 25377  016E64  0E66               	movlw	102
 25378  016E66  0101               	movlb	1	; () banked
 25379  016E68  6F7C               	movwf	delayUS@US& (0+255),b
 25380  016E6A  0E02               	movlw	2
 25381  016E6C  0101               	movlb	1	; () banked
 25382  016E6E  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25383  016E70  0E00               	movlw	0
 25384  016E72  0101               	movlb	1	; () banked
 25385  016E74  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25386  016E76  0E00               	movlw	0
 25387  016E78  0101               	movlb	1	; () banked
 25388  016E7A  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25389  016E7C  ECA4  F0BA         	call	_delayUS	;wreg free
 25390  016E80  0012               	return	
 25391  016E82                     __end_of_Zero_Config1:
 25392                           	opt stack 0
 25393                           tblptru	equ	0xFF8
 25394                           tblptrh	equ	0xFF7
 25395                           tblptrl	equ	0xFF6
 25396                           tablat	equ	0xFF5
 25397                           prodh	equ	0xFF4
 25398                           prodl	equ	0xFF3
 25399                           intcon	equ	0xFF2
 25400                           postinc0	equ	0xFEE
 25401                           wreg	equ	0xFE8
 25402                           indf1	equ	0xFE7
 25403                           postinc1	equ	0xFE6
 25404                           postdec1	equ	0xFE5
 25405                           fsr1h	equ	0xFE2
 25406                           fsr1l	equ	0xFE1
 25407                           indf2	equ	0xFDF
 25408                           postinc2	equ	0xFDE
 25409                           postdec2	equ	0xFDD
 25410                           fsr2h	equ	0xFDA
 25411                           fsr2l	equ	0xFD9
 25412                           status	equ	0xFD8
 25413                           
 25414 ;; *************** function _One_Config1 *****************
 25415 ;; Defined at:
 25416 ;;		line 103 in file "RF.c"
 25417 ;; Parameters:    Size  Location     Type
 25418 ;;  pin             1    wreg     unsigned char 
 25419 ;; Auto vars:     Size  Location     Type
 25420 ;;  pin             1   24[BANK1 ] unsigned char 
 25421 ;; Return value:  Size  Location     Type
 25422 ;;		None               void
 25423 ;; Registers used:
 25424 ;;		wreg, status,2, status,0, cstack
 25425 ;; Tracked objects:
 25426 ;;		On entry : 0/0
 25427 ;;		On exit  : 0/0
 25428 ;;		Unchanged: 0/0
 25429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25431 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 25433 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 25434 ;;Total ram usage:        1 bytes
 25435 ;; Hardware stack levels used:    1
 25436 ;; Hardware stack levels required when called:    7
 25437 ;; This function calls:
 25438 ;;		_delayUS
 25439 ;; This function is called by:
 25440 ;;		_Send_Config1
 25441 ;; This function uses a non-reentrant model
 25442 ;;
 25443                           
 25444                           	psect	text55
 25445  016E82                     __ptext55:
 25446                           	opt stack 0
 25447  016E82                     _One_Config1:
 25448                           	opt stack 20
 25449                           
 25450                           ;incstack = 0
 25451                           ;One_Config1@pin stored from wreg
 25452  016E82  0101               	movlb	1	; () banked
 25453  016E84  6F86               	movwf	One_Config1@pin& (0+255),b
 25454                           
 25455                           ; BSR set to: 1
 25456                           ;RF.c: 105: LATD |= pin;
 25457  016E86  0101               	movlb	1	; () banked
 25458  016E88  5186               	movf	One_Config1@pin& (0+255),w,b
 25459  016E8A  128C               	iorwf	3980,f,c	;volatile
 25460                           
 25461                           ; BSR set to: 1
 25462                           ;RF.c: 106: delayUS(614);
 25463  016E8C  0E66               	movlw	102
 25464  016E8E  0101               	movlb	1	; () banked
 25465  016E90  6F7C               	movwf	delayUS@US& (0+255),b
 25466  016E92  0E02               	movlw	2
 25467  016E94  0101               	movlb	1	; () banked
 25468  016E96  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25469  016E98  0E00               	movlw	0
 25470  016E9A  0101               	movlb	1	; () banked
 25471  016E9C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25472  016E9E  0E00               	movlw	0
 25473  016EA0  0101               	movlb	1	; () banked
 25474  016EA2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25475  016EA4  ECA4  F0BA         	call	_delayUS	;wreg free
 25476                           
 25477                           ;RF.c: 107: LATD &= ~pin;
 25478  016EA8  0101               	movlb	1	; () banked
 25479  016EAA  5186               	movf	One_Config1@pin& (0+255),w,b
 25480  016EAC  0AFF               	xorlw	255
 25481  016EAE  168C               	andwf	3980,f,c	;volatile
 25482                           
 25483                           ;RF.c: 108: delayUS(216);
 25484  016EB0  0ED8               	movlw	216
 25485  016EB2  0101               	movlb	1	; () banked
 25486  016EB4  6F7C               	movwf	delayUS@US& (0+255),b
 25487  016EB6  0E00               	movlw	0
 25488  016EB8  0101               	movlb	1	; () banked
 25489  016EBA  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25490  016EBC  0E00               	movlw	0
 25491  016EBE  0101               	movlb	1	; () banked
 25492  016EC0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25493  016EC2  0E00               	movlw	0
 25494  016EC4  0101               	movlb	1	; () banked
 25495  016EC6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25496  016EC8  ECA4  F0BA         	call	_delayUS	;wreg free
 25497                           
 25498                           ;RF.c: 109: LATD |= pin;
 25499  016ECC  0101               	movlb	1	; () banked
 25500  016ECE  5186               	movf	One_Config1@pin& (0+255),w,b
 25501  016ED0  128C               	iorwf	3980,f,c	;volatile
 25502                           
 25503                           ; BSR set to: 1
 25504                           ;RF.c: 110: delayUS(614);
 25505  016ED2  0E66               	movlw	102
 25506  016ED4  0101               	movlb	1	; () banked
 25507  016ED6  6F7C               	movwf	delayUS@US& (0+255),b
 25508  016ED8  0E02               	movlw	2
 25509  016EDA  0101               	movlb	1	; () banked
 25510  016EDC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25511  016EDE  0E00               	movlw	0
 25512  016EE0  0101               	movlb	1	; () banked
 25513  016EE2  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25514  016EE4  0E00               	movlw	0
 25515  016EE6  0101               	movlb	1	; () banked
 25516  016EE8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25517  016EEA  ECA4  F0BA         	call	_delayUS	;wreg free
 25518                           
 25519                           ;RF.c: 111: LATD &= ~pin;
 25520  016EEE  0101               	movlb	1	; () banked
 25521  016EF0  5186               	movf	One_Config1@pin& (0+255),w,b
 25522  016EF2  0AFF               	xorlw	255
 25523  016EF4  168C               	andwf	3980,f,c	;volatile
 25524                           
 25525                           ; BSR set to: 1
 25526                           ;RF.c: 112: delayUS(216);
 25527  016EF6  0ED8               	movlw	216
 25528  016EF8  0101               	movlb	1	; () banked
 25529  016EFA  6F7C               	movwf	delayUS@US& (0+255),b
 25530  016EFC  0E00               	movlw	0
 25531  016EFE  0101               	movlb	1	; () banked
 25532  016F00  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 25533  016F02  0E00               	movlw	0
 25534  016F04  0101               	movlb	1	; () banked
 25535  016F06  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 25536  016F08  0E00               	movlw	0
 25537  016F0A  0101               	movlb	1	; () banked
 25538  016F0C  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 25539  016F0E  ECA4  F0BA         	call	_delayUS	;wreg free
 25540  016F12  0012               	return	
 25541  016F14                     __end_of_One_Config1:
 25542                           	opt stack 0
 25543                           tblptru	equ	0xFF8
 25544                           tblptrh	equ	0xFF7
 25545                           tblptrl	equ	0xFF6
 25546                           tablat	equ	0xFF5
 25547                           prodh	equ	0xFF4
 25548                           prodl	equ	0xFF3
 25549                           intcon	equ	0xFF2
 25550                           postinc0	equ	0xFEE
 25551                           wreg	equ	0xFE8
 25552                           indf1	equ	0xFE7
 25553                           postinc1	equ	0xFE6
 25554                           postdec1	equ	0xFE5
 25555                           fsr1h	equ	0xFE2
 25556                           fsr1l	equ	0xFE1
 25557                           indf2	equ	0xFDF
 25558                           postinc2	equ	0xFDE
 25559                           postdec2	equ	0xFDD
 25560                           fsr2h	equ	0xFDA
 25561                           fsr2l	equ	0xFD9
 25562                           status	equ	0xFD8
 25563                           
 25564 ;; *************** function _SET_RTC_TIME *****************
 25565 ;; Defined at:
 25566 ;;		line 170 in file "RTC.c"
 25567 ;; Parameters:    Size  Location     Type
 25568 ;;  SetTime         9   22[BANK1 ] struct TIME
 25569 ;; Auto vars:     Size  Location     Type
 25570 ;;  temp            7   35[BANK1 ] unsigned char [7]
 25571 ;;  Error           1   42[BANK1 ] char 
 25572 ;; Return value:  Size  Location     Type
 25573 ;;                  1    wreg      unsigned char 
 25574 ;; Registers used:
 25575 ;;		wreg, status,2, status,0, prodl, cstack
 25576 ;; Tracked objects:
 25577 ;;		On entry : 0/0
 25578 ;;		On exit  : 0/0
 25579 ;;		Unchanged: 0/0
 25580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 25581 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 25582 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 25583 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 25584 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
 25585 ;;Total ram usage:       21 bytes
 25586 ;; Hardware stack levels used:    1
 25587 ;; Hardware stack levels required when called:    9
 25588 ;; This function calls:
 25589 ;;		_I2C_Write_At_Address
 25590 ;;		___awdiv
 25591 ;;		___awmod
 25592 ;; This function is called by:
 25593 ;;		_Command
 25594 ;; This function uses a non-reentrant model
 25595 ;;
 25596                           
 25597                           	psect	text56
 25598  014606                     __ptext56:
 25599                           	opt stack 0
 25600  014606                     _SET_RTC_TIME:
 25601                           	opt stack 19
 25602                           
 25603                           ;RTC.c: 172: signed char Error =0;
 25604                           
 25605                           ;incstack = 0
 25606  014606  0E00               	movlw	0
 25607  014608  0101               	movlb	1	; () banked
 25608  01460A  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 25609                           
 25610                           ; BSR set to: 1
 25611                           ;RTC.c: 173: unsigned char temp[7];
 25612                           ;RTC.c: 175: temp[0] = ((SetTime.Seconds /10) << 4) + (SetTime.Seconds % 10);
 25613  01460C  0101               	movlb	1	; () banked
 25614  01460E  C184  F17C         	movff	SET_RTC_TIME@SetTime,___awmod@dividend
 25615  014612  0101               	movlb	1	; () banked
 25616  014614  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 25617  014616  0E00               	movlw	0
 25618  014618  0101               	movlb	1	; () banked
 25619  01461A  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 25620  01461C  0E0A               	movlw	10
 25621  01461E  0101               	movlb	1	; () banked
 25622  014620  6F7E               	movwf	___awmod@divisor& (0+255),b
 25623  014622  EC60  F0B3         	call	___awmod	;wreg free
 25624  014626  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 25625  01462A  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 25626  01462E  0101               	movlb	1	; () banked
 25627  014630  C184  F17C         	movff	SET_RTC_TIME@SetTime,___awdiv@dividend
 25628  014634  0101               	movlb	1	; () banked
 25629  014636  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 25630  014638  0E00               	movlw	0
 25631  01463A  0101               	movlb	1	; () banked
 25632  01463C  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 25633  01463E  0E0A               	movlw	10
 25634  014640  0101               	movlb	1	; () banked
 25635  014642  6F7E               	movwf	___awdiv@divisor& (0+255),b
 25636  014644  EC40  F0B1         	call	___awdiv	;wreg free
 25637  014648  0101               	movlb	1	; () banked
 25638  01464A  397C               	swapf	?___awdiv& (0+255),w,b
 25639  01464C  0BF0               	andlw	240
 25640  01464E  0101               	movlb	1	; () banked
 25641  014650  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 25642  014652  0101               	movlb	1	; () banked
 25643  014654  6F91               	movwf	SET_RTC_TIME@temp& (0+255),b
 25644                           
 25645                           ; BSR set to: 1
 25646                           ;RTC.c: 176: Error = I2C_Write_At_Address( 0b1101000, 0x00, temp[0] );
 25647  014656  0E00               	movlw	0
 25648  014658  0101               	movlb	1	; () banked
 25649  01465A  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 25650  01465C  C191  F180         	movff	SET_RTC_TIME@temp,I2C_Write_At_Address@data
 25651  014660  0E68               	movlw	104
 25652  014662  EC78  F0B4         	call	_I2C_Write_At_Address
 25653  014666  0101               	movlb	1	; () banked
 25654  014668  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 25655                           
 25656                           ; BSR set to: 1
 25657                           ;RTC.c: 177: if(Error)
 25658  01466A  0101               	movlb	1	; () banked
 25659  01466C  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 25660  01466E  B4D8               	btfsc	status,2,c
 25661  014670  D002               	goto	l12398
 25662                           
 25663                           ; BSR set to: 1
 25664                           ;RTC.c: 178: {
 25665                           ;RTC.c: 179: return 1;
 25666  014672  0E01               	movlw	1
 25667  014674  0012               	return	
 25668  014676                     l12398:
 25669                           
 25670                           ; BSR set to: 1
 25671                           ;RTC.c: 180: }
 25672                           ;RTC.c: 182: temp[1] = ((SetTime.Minutes /10) << 4) + (SetTime.Minutes % 10);
 25673  014676  0101               	movlb	1	; () banked
 25674  014678  C185  F17C         	movff	SET_RTC_TIME@SetTime+1,___awmod@dividend
 25675  01467C  0101               	movlb	1	; () banked
 25676  01467E  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 25677  014680  0E00               	movlw	0
 25678  014682  0101               	movlb	1	; () banked
 25679  014684  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 25680  014686  0E0A               	movlw	10
 25681  014688  0101               	movlb	1	; () banked
 25682  01468A  6F7E               	movwf	___awmod@divisor& (0+255),b
 25683  01468C  EC60  F0B3         	call	___awmod	;wreg free
 25684  014690  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 25685  014694  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 25686  014698  0101               	movlb	1	; () banked
 25687  01469A  C185  F17C         	movff	SET_RTC_TIME@SetTime+1,___awdiv@dividend
 25688  01469E  0101               	movlb	1	; () banked
 25689  0146A0  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 25690  0146A2  0E00               	movlw	0
 25691  0146A4  0101               	movlb	1	; () banked
 25692  0146A6  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 25693  0146A8  0E0A               	movlw	10
 25694  0146AA  0101               	movlb	1	; () banked
 25695  0146AC  6F7E               	movwf	___awdiv@divisor& (0+255),b
 25696  0146AE  EC40  F0B1         	call	___awdiv	;wreg free
 25697  0146B2  0101               	movlb	1	; () banked
 25698  0146B4  397C               	swapf	?___awdiv& (0+255),w,b
 25699  0146B6  0BF0               	andlw	240
 25700  0146B8  0101               	movlb	1	; () banked
 25701  0146BA  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 25702  0146BC  0101               	movlb	1	; () banked
 25703  0146BE  6F92               	movwf	(SET_RTC_TIME@temp+1)& (0+255),b
 25704                           
 25705                           ; BSR set to: 1
 25706                           ;RTC.c: 183: Error = I2C_Write_At_Address( 0b1101000, 0x01, temp[1] );
 25707  0146C0  0E01               	movlw	1
 25708  0146C2  0101               	movlb	1	; () banked
 25709  0146C4  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 25710  0146C6  C192  F180         	movff	SET_RTC_TIME@temp+1,I2C_Write_At_Address@data
 25711  0146CA  0E68               	movlw	104
 25712  0146CC  EC78  F0B4         	call	_I2C_Write_At_Address
 25713  0146D0  0101               	movlb	1	; () banked
 25714  0146D2  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 25715                           
 25716                           ; BSR set to: 1
 25717                           ;RTC.c: 184: if(Error)
 25718  0146D4  0101               	movlb	1	; () banked
 25719  0146D6  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 25720  0146D8  B4D8               	btfsc	status,2,c
 25721  0146DA  D002               	goto	l12408
 25722                           
 25723                           ; BSR set to: 1
 25724                           ;RTC.c: 185: {
 25725                           ;RTC.c: 186: return 2;
 25726  0146DC  0E02               	movlw	2
 25727  0146DE  0012               	return	
 25728  0146E0                     l12408:
 25729                           
 25730                           ; BSR set to: 1
 25731                           ;RTC.c: 187: }
 25732                           ;RTC.c: 189: temp[2] = ((SetTime.Hours /10) << 4) + (SetTime.Hours % 10) + (SetTime.Hour
      +                          sAM_PM << 5);
 25733  0146E0  C188  F18D         	movff	SET_RTC_TIME@SetTime+4,??_SET_RTC_TIME
 25734  0146E4  0E05               	movlw	5
 25735  0146E6  0101               	movlb	1	; () banked
 25736  0146E8  6F8E               	movwf	(??_SET_RTC_TIME+1)& (0+255),b
 25737  0146EA                     u16055:
 25738  0146EA  0101               	movlb	1	; () banked
 25739  0146EC  90D8               	bcf	status,0,c
 25740  0146EE  378D               	rlcf	??_SET_RTC_TIME& (0+255),f,b
 25741  0146F0  0101               	movlb	1	; () banked
 25742  0146F2  2F8E               	decfsz	(??_SET_RTC_TIME+1)& (0+255),f,b
 25743  0146F4  D7FA               	goto	u16055
 25744  0146F6  0101               	movlb	1	; () banked
 25745  0146F8  C186  F17C         	movff	SET_RTC_TIME@SetTime+2,___awmod@dividend
 25746  0146FC  0101               	movlb	1	; () banked
 25747  0146FE  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 25748  014700  0E00               	movlw	0
 25749  014702  0101               	movlb	1	; () banked
 25750  014704  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 25751  014706  0E0A               	movlw	10
 25752  014708  0101               	movlb	1	; () banked
 25753  01470A  6F7E               	movwf	___awmod@divisor& (0+255),b
 25754  01470C  EC60  F0B3         	call	___awmod	;wreg free
 25755  014710  C17C  F18F         	movff	?___awmod,??_SET_RTC_TIME+2
 25756  014714  C17D  F190         	movff	?___awmod+1,??_SET_RTC_TIME+3
 25757  014718  0101               	movlb	1	; () banked
 25758  01471A  C186  F17C         	movff	SET_RTC_TIME@SetTime+2,___awdiv@dividend
 25759  01471E  0101               	movlb	1	; () banked
 25760  014720  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 25761  014722  0E00               	movlw	0
 25762  014724  0101               	movlb	1	; () banked
 25763  014726  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 25764  014728  0E0A               	movlw	10
 25765  01472A  0101               	movlb	1	; () banked
 25766  01472C  6F7E               	movwf	___awdiv@divisor& (0+255),b
 25767  01472E  EC40  F0B1         	call	___awdiv	;wreg free
 25768  014732  0101               	movlb	1	; () banked
 25769  014734  397C               	swapf	?___awdiv& (0+255),w,b
 25770  014736  0BF0               	andlw	240
 25771  014738  0101               	movlb	1	; () banked
 25772  01473A  258F               	addwf	(??_SET_RTC_TIME+2)& (0+255),w,b
 25773  01473C  0101               	movlb	1	; () banked
 25774  01473E  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 25775  014740  0101               	movlb	1	; () banked
 25776  014742  6F93               	movwf	(SET_RTC_TIME@temp+2)& (0+255),b
 25777                           
 25778                           ; BSR set to: 1
 25779                           ;RTC.c: 190: Error = I2C_Write_At_Address( 0b1101000, 0x02, temp[2] );
 25780  014744  0E02               	movlw	2
 25781  014746  0101               	movlb	1	; () banked
 25782  014748  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 25783  01474A  C193  F180         	movff	SET_RTC_TIME@temp+2,I2C_Write_At_Address@data
 25784  01474E  0E68               	movlw	104
 25785  014750  EC78  F0B4         	call	_I2C_Write_At_Address
 25786  014754  0101               	movlb	1	; () banked
 25787  014756  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 25788                           
 25789                           ; BSR set to: 1
 25790                           ;RTC.c: 191: if(Error)
 25791  014758  0101               	movlb	1	; () banked
 25792  01475A  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 25793  01475C  B4D8               	btfsc	status,2,c
 25794  01475E  D002               	goto	l1146
 25795                           
 25796                           ; BSR set to: 1
 25797                           ;RTC.c: 192: {
 25798                           ;RTC.c: 193: return 3;
 25799  014760  0E03               	movlw	3
 25800  014762  0012               	return	
 25801  014764                     l1146:
 25802                           
 25803                           ; BSR set to: 1
 25804                           ;RTC.c: 194: }
 25805                           ;RTC.c: 196: temp[3] = (SetTime.Day);
 25806  014764  C189  F194         	movff	SET_RTC_TIME@SetTime+5,SET_RTC_TIME@temp+3
 25807                           
 25808                           ; BSR set to: 1
 25809                           ;RTC.c: 197: Error = I2C_Write_At_Address( 0b1101000, 0x03, temp[3] );
 25810  014768  0E03               	movlw	3
 25811  01476A  0101               	movlb	1	; () banked
 25812  01476C  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 25813  01476E  C194  F180         	movff	SET_RTC_TIME@temp+3,I2C_Write_At_Address@data
 25814  014772  0E68               	movlw	104
 25815  014774  EC78  F0B4         	call	_I2C_Write_At_Address
 25816  014778  0101               	movlb	1	; () banked
 25817  01477A  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 25818                           
 25819                           ; BSR set to: 1
 25820                           ;RTC.c: 198: if(Error)
 25821  01477C  0101               	movlb	1	; () banked
 25822  01477E  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 25823  014780  B4D8               	btfsc	status,2,c
 25824  014782  D002               	goto	l12426
 25825                           
 25826                           ; BSR set to: 1
 25827                           ;RTC.c: 199: {
 25828                           ;RTC.c: 200: return 4;
 25829  014784  0E04               	movlw	4
 25830  014786  0012               	return	
 25831  014788                     l12426:
 25832                           
 25833                           ; BSR set to: 1
 25834                           ;RTC.c: 201: }
 25835                           ;RTC.c: 203: temp[4] = ((SetTime.Date /10) << 4) + (SetTime.Date % 10);
 25836  014788  0101               	movlb	1	; () banked
 25837  01478A  C18A  F17C         	movff	SET_RTC_TIME@SetTime+6,___awmod@dividend
 25838  01478E  0101               	movlb	1	; () banked
 25839  014790  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 25840  014792  0E00               	movlw	0
 25841  014794  0101               	movlb	1	; () banked
 25842  014796  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 25843  014798  0E0A               	movlw	10
 25844  01479A  0101               	movlb	1	; () banked
 25845  01479C  6F7E               	movwf	___awmod@divisor& (0+255),b
 25846  01479E  EC60  F0B3         	call	___awmod	;wreg free
 25847  0147A2  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 25848  0147A6  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 25849  0147AA  0101               	movlb	1	; () banked
 25850  0147AC  C18A  F17C         	movff	SET_RTC_TIME@SetTime+6,___awdiv@dividend
 25851  0147B0  0101               	movlb	1	; () banked
 25852  0147B2  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 25853  0147B4  0E00               	movlw	0
 25854  0147B6  0101               	movlb	1	; () banked
 25855  0147B8  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 25856  0147BA  0E0A               	movlw	10
 25857  0147BC  0101               	movlb	1	; () banked
 25858  0147BE  6F7E               	movwf	___awdiv@divisor& (0+255),b
 25859  0147C0  EC40  F0B1         	call	___awdiv	;wreg free
 25860  0147C4  0101               	movlb	1	; () banked
 25861  0147C6  397C               	swapf	?___awdiv& (0+255),w,b
 25862  0147C8  0BF0               	andlw	240
 25863  0147CA  0101               	movlb	1	; () banked
 25864  0147CC  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 25865  0147CE  0101               	movlb	1	; () banked
 25866  0147D0  6F95               	movwf	(SET_RTC_TIME@temp+4)& (0+255),b
 25867                           
 25868                           ; BSR set to: 1
 25869                           ;RTC.c: 204: Error = I2C_Write_At_Address( 0b1101000, 0x04, temp[4] );
 25870  0147D2  0E04               	movlw	4
 25871  0147D4  0101               	movlb	1	; () banked
 25872  0147D6  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 25873  0147D8  C195  F180         	movff	SET_RTC_TIME@temp+4,I2C_Write_At_Address@data
 25874  0147DC  0E68               	movlw	104
 25875  0147DE  EC78  F0B4         	call	_I2C_Write_At_Address
 25876  0147E2  0101               	movlb	1	; () banked
 25877  0147E4  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 25878                           
 25879                           ; BSR set to: 1
 25880                           ;RTC.c: 205: if(Error)
 25881  0147E6  0101               	movlb	1	; () banked
 25882  0147E8  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 25883  0147EA  B4D8               	btfsc	status,2,c
 25884  0147EC  D002               	goto	l12436
 25885                           
 25886                           ; BSR set to: 1
 25887                           ;RTC.c: 206: {
 25888                           ;RTC.c: 207: return 5;
 25889  0147EE  0E05               	movlw	5
 25890  0147F0  0012               	return	
 25891  0147F2                     l12436:
 25892                           
 25893                           ; BSR set to: 1
 25894                           ;RTC.c: 208: }
 25895                           ;RTC.c: 210: temp[5] = ((SetTime.Month /10) << 4) + (SetTime.Month % 10);
 25896  0147F2  0101               	movlb	1	; () banked
 25897  0147F4  C18B  F17C         	movff	SET_RTC_TIME@SetTime+7,___awmod@dividend
 25898  0147F8  0101               	movlb	1	; () banked
 25899  0147FA  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 25900  0147FC  0E00               	movlw	0
 25901  0147FE  0101               	movlb	1	; () banked
 25902  014800  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 25903  014802  0E0A               	movlw	10
 25904  014804  0101               	movlb	1	; () banked
 25905  014806  6F7E               	movwf	___awmod@divisor& (0+255),b
 25906  014808  EC60  F0B3         	call	___awmod	;wreg free
 25907  01480C  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 25908  014810  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 25909  014814  0101               	movlb	1	; () banked
 25910  014816  C18B  F17C         	movff	SET_RTC_TIME@SetTime+7,___awdiv@dividend
 25911  01481A  0101               	movlb	1	; () banked
 25912  01481C  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 25913  01481E  0E00               	movlw	0
 25914  014820  0101               	movlb	1	; () banked
 25915  014822  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 25916  014824  0E0A               	movlw	10
 25917  014826  0101               	movlb	1	; () banked
 25918  014828  6F7E               	movwf	___awdiv@divisor& (0+255),b
 25919  01482A  EC40  F0B1         	call	___awdiv	;wreg free
 25920  01482E  0101               	movlb	1	; () banked
 25921  014830  397C               	swapf	?___awdiv& (0+255),w,b
 25922  014832  0BF0               	andlw	240
 25923  014834  0101               	movlb	1	; () banked
 25924  014836  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 25925  014838  0101               	movlb	1	; () banked
 25926  01483A  6F96               	movwf	(SET_RTC_TIME@temp+5)& (0+255),b
 25927                           
 25928                           ; BSR set to: 1
 25929                           ;RTC.c: 211: Error = I2C_Write_At_Address( 0b1101000, 0x05, temp[5] );
 25930  01483C  0E05               	movlw	5
 25931  01483E  0101               	movlb	1	; () banked
 25932  014840  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 25933  014842  C196  F180         	movff	SET_RTC_TIME@temp+5,I2C_Write_At_Address@data
 25934  014846  0E68               	movlw	104
 25935  014848  EC78  F0B4         	call	_I2C_Write_At_Address
 25936  01484C  0101               	movlb	1	; () banked
 25937  01484E  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 25938                           
 25939                           ; BSR set to: 1
 25940                           ;RTC.c: 212: if(Error)
 25941  014850  0101               	movlb	1	; () banked
 25942  014852  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 25943  014854  B4D8               	btfsc	status,2,c
 25944  014856  D002               	goto	l12446
 25945                           
 25946                           ; BSR set to: 1
 25947                           ;RTC.c: 213: {
 25948                           ;RTC.c: 214: return 6;
 25949  014858  0E06               	movlw	6
 25950  01485A  0012               	return	
 25951  01485C                     l12446:
 25952                           
 25953                           ; BSR set to: 1
 25954                           ;RTC.c: 215: }
 25955                           ;RTC.c: 217: temp[6] = ((SetTime.Year /10) << 4) + (SetTime.Year % 10);
 25956  01485C  0101               	movlb	1	; () banked
 25957  01485E  C18C  F17C         	movff	SET_RTC_TIME@SetTime+8,___awmod@dividend
 25958  014862  0101               	movlb	1	; () banked
 25959  014864  6B7D               	clrf	(___awmod@dividend+1)& (0+255),b
 25960  014866  0E00               	movlw	0
 25961  014868  0101               	movlb	1	; () banked
 25962  01486A  6F7F               	movwf	(___awmod@divisor+1)& (0+255),b
 25963  01486C  0E0A               	movlw	10
 25964  01486E  0101               	movlb	1	; () banked
 25965  014870  6F7E               	movwf	___awmod@divisor& (0+255),b
 25966  014872  EC60  F0B3         	call	___awmod	;wreg free
 25967  014876  C17C  F18D         	movff	?___awmod,??_SET_RTC_TIME
 25968  01487A  C17D  F18E         	movff	?___awmod+1,??_SET_RTC_TIME+1
 25969  01487E  0101               	movlb	1	; () banked
 25970  014880  C18C  F17C         	movff	SET_RTC_TIME@SetTime+8,___awdiv@dividend
 25971  014884  0101               	movlb	1	; () banked
 25972  014886  6B7D               	clrf	(___awdiv@dividend+1)& (0+255),b
 25973  014888  0E00               	movlw	0
 25974  01488A  0101               	movlb	1	; () banked
 25975  01488C  6F7F               	movwf	(___awdiv@divisor+1)& (0+255),b
 25976  01488E  0E0A               	movlw	10
 25977  014890  0101               	movlb	1	; () banked
 25978  014892  6F7E               	movwf	___awdiv@divisor& (0+255),b
 25979  014894  EC40  F0B1         	call	___awdiv	;wreg free
 25980  014898  0101               	movlb	1	; () banked
 25981  01489A  397C               	swapf	?___awdiv& (0+255),w,b
 25982  01489C  0BF0               	andlw	240
 25983  01489E  0101               	movlb	1	; () banked
 25984  0148A0  258D               	addwf	??_SET_RTC_TIME& (0+255),w,b
 25985  0148A2  0101               	movlb	1	; () banked
 25986  0148A4  6F97               	movwf	(SET_RTC_TIME@temp+6)& (0+255),b
 25987                           
 25988                           ; BSR set to: 1
 25989                           ;RTC.c: 218: Error = I2C_Write_At_Address( 0b1101000, 0x06, temp[6] );
 25990  0148A6  0E06               	movlw	6
 25991  0148A8  0101               	movlb	1	; () banked
 25992  0148AA  6F7F               	movwf	I2C_Write_At_Address@Register& (0+255),b
 25993  0148AC  C197  F180         	movff	SET_RTC_TIME@temp+6,I2C_Write_At_Address@data
 25994  0148B0  0E68               	movlw	104
 25995  0148B2  EC78  F0B4         	call	_I2C_Write_At_Address
 25996  0148B6  0101               	movlb	1	; () banked
 25997  0148B8  6F98               	movwf	SET_RTC_TIME@Error& (0+255),b
 25998                           
 25999                           ; BSR set to: 1
 26000                           ;RTC.c: 219: if(Error)
 26001  0148BA  0101               	movlb	1	; () banked
 26002  0148BC  5198               	movf	SET_RTC_TIME@Error& (0+255),w,b
 26003  0148BE  B4D8               	btfsc	status,2,c
 26004  0148C0  D002               	goto	l12456
 26005                           
 26006                           ; BSR set to: 1
 26007                           ;RTC.c: 220: {
 26008                           ;RTC.c: 221: return 7;
 26009  0148C2  0E07               	movlw	7
 26010  0148C4  0012               	return	
 26011  0148C6                     l12456:
 26012                           
 26013                           ; BSR set to: 1
 26014                           ;RTC.c: 222: }
 26015                           ;RTC.c: 224: return 0;
 26016  0148C6  0E00               	movlw	0
 26017  0148C8  0012               	return	
 26018  0148CA                     __end_of_SET_RTC_TIME:
 26019                           	opt stack 0
 26020                           tblptru	equ	0xFF8
 26021                           tblptrh	equ	0xFF7
 26022                           tblptrl	equ	0xFF6
 26023                           tablat	equ	0xFF5
 26024                           prodh	equ	0xFF4
 26025                           prodl	equ	0xFF3
 26026                           intcon	equ	0xFF2
 26027                           postinc0	equ	0xFEE
 26028                           wreg	equ	0xFE8
 26029                           indf1	equ	0xFE7
 26030                           postinc1	equ	0xFE6
 26031                           postdec1	equ	0xFE5
 26032                           fsr1h	equ	0xFE2
 26033                           fsr1l	equ	0xFE1
 26034                           indf2	equ	0xFDF
 26035                           postinc2	equ	0xFDE
 26036                           postdec2	equ	0xFDD
 26037                           fsr2h	equ	0xFDA
 26038                           fsr2l	equ	0xFD9
 26039                           status	equ	0xFD8
 26040                           
 26041 ;; *************** function ___awmod *****************
 26042 ;; Defined at:
 26043 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
 26044 ;; Parameters:    Size  Location     Type
 26045 ;;  dividend        2   14[BANK1 ] int 
 26046 ;;  divisor         2   16[BANK1 ] int 
 26047 ;; Auto vars:     Size  Location     Type
 26048 ;;  sign            1   19[BANK1 ] unsigned char 
 26049 ;;  counter         1   18[BANK1 ] unsigned char 
 26050 ;; Return value:  Size  Location     Type
 26051 ;;                  2   14[BANK1 ] int 
 26052 ;; Registers used:
 26053 ;;		wreg, status,2, status,0, prodl
 26054 ;; Tracked objects:
 26055 ;;		On entry : 0/0
 26056 ;;		On exit  : 0/0
 26057 ;;		Unchanged: 0/0
 26058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26059 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26060 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26062 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 26063 ;;Total ram usage:        6 bytes
 26064 ;; Hardware stack levels used:    1
 26065 ;; Hardware stack levels required when called:    6
 26066 ;; This function calls:
 26067 ;;		Nothing
 26068 ;; This function is called by:
 26069 ;;		_SET_RTC_TIME
 26070 ;; This function uses a non-reentrant model
 26071 ;;
 26072                           
 26073                           	psect	text57
 26074  0166C0                     __ptext57:
 26075                           	opt stack 0
 26076  0166C0                     ___awmod:
 26077                           	opt stack 21
 26078                           
 26079                           ; BSR set to: 1
 26080                           ;incstack = 0
 26081  0166C0  0E00               	movlw	0
 26082  0166C2  0101               	movlb	1	; () banked
 26083  0166C4  6F81               	movwf	___awmod@sign& (0+255),b
 26084                           
 26085                           ; BSR set to: 1
 26086  0166C6  0101               	movlb	1	; () banked
 26087  0166C8  517D               	movf	(___awmod@dividend+1)& (0+255),w,b
 26088  0166CA  0A80               	xorlw	128
 26089  0166CC  6EF3               	movwf	prodl,c
 26090  0166CE  0E80               	movlw	128
 26091  0166D0  5CF3               	subwf	prodl,w,c
 26092  0166D2  0E00               	movlw	0
 26093  0166D4  B4D8               	btfsc	status,2,c
 26094  0166D6  5D7C               	subwf	___awmod@dividend& (0+255),w,b
 26095  0166D8  B0D8               	btfsc	status,0,c
 26096  0166DA  D009               	goto	l11490
 26097                           
 26098                           ; BSR set to: 1
 26099  0166DC  0101               	movlb	1	; () banked
 26100  0166DE  6D7C               	negf	___awmod@dividend& (0+255),b
 26101  0166E0  0101               	movlb	1	; () banked
 26102  0166E2  1F7D               	comf	(___awmod@dividend+1)& (0+255),f,b
 26103  0166E4  B0D8               	btfsc	status,0,c
 26104  0166E6  2B7D               	incf	(___awmod@dividend+1)& (0+255),f,b
 26105                           
 26106                           ; BSR set to: 1
 26107  0166E8  0E01               	movlw	1
 26108  0166EA  0101               	movlb	1	; () banked
 26109  0166EC  6F81               	movwf	___awmod@sign& (0+255),b
 26110  0166EE                     l11490:
 26111                           
 26112                           ; BSR set to: 1
 26113  0166EE  0101               	movlb	1	; () banked
 26114  0166F0  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 26115  0166F2  0A80               	xorlw	128
 26116  0166F4  6EF3               	movwf	prodl,c
 26117  0166F6  0E80               	movlw	128
 26118  0166F8  5CF3               	subwf	prodl,w,c
 26119  0166FA  0E00               	movlw	0
 26120  0166FC  B4D8               	btfsc	status,2,c
 26121  0166FE  5D7E               	subwf	___awmod@divisor& (0+255),w,b
 26122  016700  B0D8               	btfsc	status,0,c
 26123  016702  D006               	goto	l11494
 26124                           
 26125                           ; BSR set to: 1
 26126  016704  0101               	movlb	1	; () banked
 26127  016706  6D7E               	negf	___awmod@divisor& (0+255),b
 26128  016708  0101               	movlb	1	; () banked
 26129  01670A  1F7F               	comf	(___awmod@divisor+1)& (0+255),f,b
 26130  01670C  B0D8               	btfsc	status,0,c
 26131  01670E  2B7F               	incf	(___awmod@divisor+1)& (0+255),f,b
 26132  016710                     l11494:
 26133                           
 26134                           ; BSR set to: 1
 26135  016710  0101               	movlb	1	; () banked
 26136  016712  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 26137  016714  117E               	iorwf	___awmod@divisor& (0+255),w,b
 26138  016716  B4D8               	btfsc	status,2,c
 26139  016718  D026               	goto	l11510
 26140                           
 26141                           ; BSR set to: 1
 26142  01671A  0E01               	movlw	1
 26143  01671C  0101               	movlb	1	; () banked
 26144  01671E  6F80               	movwf	___awmod@counter& (0+255),b
 26145  016720  D006               	goto	l11500
 26146  016722                     l11498:
 26147                           
 26148                           ; BSR set to: 1
 26149  016722  0101               	movlb	1	; () banked
 26150  016724  90D8               	bcf	status,0,c
 26151  016726  377E               	rlcf	___awmod@divisor& (0+255),f,b
 26152  016728  377F               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 26153  01672A  0101               	movlb	1	; () banked
 26154  01672C  2B80               	incf	___awmod@counter& (0+255),f,b
 26155  01672E                     l11500:
 26156                           
 26157                           ; BSR set to: 1
 26158  01672E  0101               	movlb	1	; () banked
 26159  016730  AF7F               	btfss	(___awmod@divisor+1)& (0+255),7,b
 26160  016732  D7F7               	goto	l11498
 26161  016734                     l11502:
 26162                           
 26163                           ; BSR set to: 1
 26164  016734  0101               	movlb	1	; () banked
 26165  016736  517E               	movf	___awmod@divisor& (0+255),w,b
 26166  016738  0101               	movlb	1	; () banked
 26167  01673A  5D7C               	subwf	___awmod@dividend& (0+255),w,b
 26168  01673C  0101               	movlb	1	; () banked
 26169  01673E  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 26170  016740  0101               	movlb	1	; () banked
 26171  016742  597D               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 26172  016744  A0D8               	btfss	status,0,c
 26173  016746  D008               	goto	l11506
 26174                           
 26175                           ; BSR set to: 1
 26176  016748  0101               	movlb	1	; () banked
 26177  01674A  517E               	movf	___awmod@divisor& (0+255),w,b
 26178  01674C  0101               	movlb	1	; () banked
 26179  01674E  5F7C               	subwf	___awmod@dividend& (0+255),f,b
 26180  016750  0101               	movlb	1	; () banked
 26181  016752  517F               	movf	(___awmod@divisor+1)& (0+255),w,b
 26182  016754  0101               	movlb	1	; () banked
 26183  016756  5B7D               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 26184  016758                     l11506:
 26185                           
 26186                           ; BSR set to: 1
 26187  016758  0101               	movlb	1	; () banked
 26188  01675A  90D8               	bcf	status,0,c
 26189  01675C  337F               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 26190  01675E  337E               	rrcf	___awmod@divisor& (0+255),f,b
 26191                           
 26192                           ; BSR set to: 1
 26193  016760  0101               	movlb	1	; () banked
 26194  016762  2F80               	decfsz	___awmod@counter& (0+255),f,b
 26195  016764  D7E7               	goto	l11502
 26196  016766                     l11510:
 26197                           
 26198                           ; BSR set to: 1
 26199  016766  0101               	movlb	1	; () banked
 26200  016768  5181               	movf	___awmod@sign& (0+255),w,b
 26201  01676A  B4D8               	btfsc	status,2,c
 26202  01676C  D006               	goto	l11514
 26203                           
 26204                           ; BSR set to: 1
 26205  01676E  0101               	movlb	1	; () banked
 26206  016770  6D7C               	negf	___awmod@dividend& (0+255),b
 26207  016772  0101               	movlb	1	; () banked
 26208  016774  1F7D               	comf	(___awmod@dividend+1)& (0+255),f,b
 26209  016776  B0D8               	btfsc	status,0,c
 26210  016778  2B7D               	incf	(___awmod@dividend+1)& (0+255),f,b
 26211  01677A                     l11514:
 26212                           
 26213                           ; BSR set to: 1
 26214  01677A  C17C  F17C         	movff	___awmod@dividend,?___awmod
 26215  01677E  C17D  F17D         	movff	___awmod@dividend+1,?___awmod+1
 26216  016782  0012               	return	
 26217  016784                     __end_of___awmod:
 26218                           	opt stack 0
 26219                           tblptru	equ	0xFF8
 26220                           tblptrh	equ	0xFF7
 26221                           tblptrl	equ	0xFF6
 26222                           tablat	equ	0xFF5
 26223                           prodh	equ	0xFF4
 26224                           prodl	equ	0xFF3
 26225                           intcon	equ	0xFF2
 26226                           postinc0	equ	0xFEE
 26227                           wreg	equ	0xFE8
 26228                           indf1	equ	0xFE7
 26229                           postinc1	equ	0xFE6
 26230                           postdec1	equ	0xFE5
 26231                           fsr1h	equ	0xFE2
 26232                           fsr1l	equ	0xFE1
 26233                           indf2	equ	0xFDF
 26234                           postinc2	equ	0xFDE
 26235                           postdec2	equ	0xFDD
 26236                           fsr2h	equ	0xFDA
 26237                           fsr2l	equ	0xFD9
 26238                           status	equ	0xFD8
 26239                           
 26240 ;; *************** function ___awdiv *****************
 26241 ;; Defined at:
 26242 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
 26243 ;; Parameters:    Size  Location     Type
 26244 ;;  dividend        2   14[BANK1 ] int 
 26245 ;;  divisor         2   16[BANK1 ] int 
 26246 ;; Auto vars:     Size  Location     Type
 26247 ;;  quotient        2   20[BANK1 ] int 
 26248 ;;  sign            1   19[BANK1 ] unsigned char 
 26249 ;;  counter         1   18[BANK1 ] unsigned char 
 26250 ;; Return value:  Size  Location     Type
 26251 ;;                  2   14[BANK1 ] int 
 26252 ;; Registers used:
 26253 ;;		wreg, status,2, status,0, prodl
 26254 ;; Tracked objects:
 26255 ;;		On entry : 0/0
 26256 ;;		On exit  : 0/0
 26257 ;;		Unchanged: 0/0
 26258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26259 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26260 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 26261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26262 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 26263 ;;Total ram usage:        8 bytes
 26264 ;; Hardware stack levels used:    1
 26265 ;; Hardware stack levels required when called:    6
 26266 ;; This function calls:
 26267 ;;		Nothing
 26268 ;; This function is called by:
 26269 ;;		_SET_RTC_TIME
 26270 ;; This function uses a non-reentrant model
 26271 ;;
 26272                           
 26273                           	psect	text58
 26274  016280                     __ptext58:
 26275                           	opt stack 0
 26276  016280                     ___awdiv:
 26277                           	opt stack 21
 26278                           
 26279                           ; BSR set to: 1
 26280                           ;incstack = 0
 26281  016280  0E00               	movlw	0
 26282  016282  0101               	movlb	1	; () banked
 26283  016284  6F81               	movwf	___awdiv@sign& (0+255),b
 26284                           
 26285                           ; BSR set to: 1
 26286  016286  0101               	movlb	1	; () banked
 26287  016288  517F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26288  01628A  0A80               	xorlw	128
 26289  01628C  6EF3               	movwf	prodl,c
 26290  01628E  0E80               	movlw	128
 26291  016290  5CF3               	subwf	prodl,w,c
 26292  016292  0E00               	movlw	0
 26293  016294  B4D8               	btfsc	status,2,c
 26294  016296  5D7E               	subwf	___awdiv@divisor& (0+255),w,b
 26295  016298  B0D8               	btfsc	status,0,c
 26296  01629A  D009               	goto	l11446
 26297                           
 26298                           ; BSR set to: 1
 26299  01629C  0101               	movlb	1	; () banked
 26300  01629E  6D7E               	negf	___awdiv@divisor& (0+255),b
 26301  0162A0  0101               	movlb	1	; () banked
 26302  0162A2  1F7F               	comf	(___awdiv@divisor+1)& (0+255),f,b
 26303  0162A4  B0D8               	btfsc	status,0,c
 26304  0162A6  2B7F               	incf	(___awdiv@divisor+1)& (0+255),f,b
 26305                           
 26306                           ; BSR set to: 1
 26307  0162A8  0E01               	movlw	1
 26308  0162AA  0101               	movlb	1	; () banked
 26309  0162AC  6F81               	movwf	___awdiv@sign& (0+255),b
 26310  0162AE                     l11446:
 26311                           
 26312                           ; BSR set to: 1
 26313  0162AE  0101               	movlb	1	; () banked
 26314  0162B0  517D               	movf	(___awdiv@dividend+1)& (0+255),w,b
 26315  0162B2  0A80               	xorlw	128
 26316  0162B4  6EF3               	movwf	prodl,c
 26317  0162B6  0E80               	movlw	128
 26318  0162B8  5CF3               	subwf	prodl,w,c
 26319  0162BA  0E00               	movlw	0
 26320  0162BC  B4D8               	btfsc	status,2,c
 26321  0162BE  5D7C               	subwf	___awdiv@dividend& (0+255),w,b
 26322  0162C0  B0D8               	btfsc	status,0,c
 26323  0162C2  D009               	goto	l11452
 26324                           
 26325                           ; BSR set to: 1
 26326  0162C4  0101               	movlb	1	; () banked
 26327  0162C6  6D7C               	negf	___awdiv@dividend& (0+255),b
 26328  0162C8  0101               	movlb	1	; () banked
 26329  0162CA  1F7D               	comf	(___awdiv@dividend+1)& (0+255),f,b
 26330  0162CC  B0D8               	btfsc	status,0,c
 26331  0162CE  2B7D               	incf	(___awdiv@dividend+1)& (0+255),f,b
 26332                           
 26333                           ; BSR set to: 1
 26334  0162D0  0E01               	movlw	1
 26335  0162D2  0101               	movlb	1	; () banked
 26336  0162D4  1B81               	xorwf	___awdiv@sign& (0+255),f,b
 26337  0162D6                     l11452:
 26338                           
 26339                           ; BSR set to: 1
 26340  0162D6  0E00               	movlw	0
 26341  0162D8  0101               	movlb	1	; () banked
 26342  0162DA  6F83               	movwf	(___awdiv@quotient+1)& (0+255),b
 26343  0162DC  0E00               	movlw	0
 26344  0162DE  0101               	movlb	1	; () banked
 26345  0162E0  6F82               	movwf	___awdiv@quotient& (0+255),b
 26346                           
 26347                           ; BSR set to: 1
 26348  0162E2  0101               	movlb	1	; () banked
 26349  0162E4  517F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26350  0162E6  117E               	iorwf	___awdiv@divisor& (0+255),w,b
 26351  0162E8  B4D8               	btfsc	status,2,c
 26352  0162EA  D02C               	goto	l11474
 26353                           
 26354                           ; BSR set to: 1
 26355  0162EC  0E01               	movlw	1
 26356  0162EE  0101               	movlb	1	; () banked
 26357  0162F0  6F80               	movwf	___awdiv@counter& (0+255),b
 26358  0162F2  D006               	goto	l11460
 26359  0162F4                     l11458:
 26360                           
 26361                           ; BSR set to: 1
 26362  0162F4  0101               	movlb	1	; () banked
 26363  0162F6  90D8               	bcf	status,0,c
 26364  0162F8  377E               	rlcf	___awdiv@divisor& (0+255),f,b
 26365  0162FA  377F               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 26366  0162FC  0101               	movlb	1	; () banked
 26367  0162FE  2B80               	incf	___awdiv@counter& (0+255),f,b
 26368  016300                     l11460:
 26369                           
 26370                           ; BSR set to: 1
 26371  016300  0101               	movlb	1	; () banked
 26372  016302  AF7F               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 26373  016304  D7F7               	goto	l11458
 26374  016306                     l11462:
 26375                           
 26376                           ; BSR set to: 1
 26377  016306  0101               	movlb	1	; () banked
 26378  016308  90D8               	bcf	status,0,c
 26379  01630A  3782               	rlcf	___awdiv@quotient& (0+255),f,b
 26380  01630C  3783               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 26381                           
 26382                           ; BSR set to: 1
 26383  01630E  0101               	movlb	1	; () banked
 26384  016310  517E               	movf	___awdiv@divisor& (0+255),w,b
 26385  016312  0101               	movlb	1	; () banked
 26386  016314  5D7C               	subwf	___awdiv@dividend& (0+255),w,b
 26387  016316  0101               	movlb	1	; () banked
 26388  016318  517F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26389  01631A  0101               	movlb	1	; () banked
 26390  01631C  597D               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 26391  01631E  A0D8               	btfss	status,0,c
 26392  016320  D00A               	goto	l11470
 26393                           
 26394                           ; BSR set to: 1
 26395  016322  0101               	movlb	1	; () banked
 26396  016324  517E               	movf	___awdiv@divisor& (0+255),w,b
 26397  016326  0101               	movlb	1	; () banked
 26398  016328  5F7C               	subwf	___awdiv@dividend& (0+255),f,b
 26399  01632A  0101               	movlb	1	; () banked
 26400  01632C  517F               	movf	(___awdiv@divisor+1)& (0+255),w,b
 26401  01632E  0101               	movlb	1	; () banked
 26402  016330  5B7D               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 26403                           
 26404                           ; BSR set to: 1
 26405  016332  0101               	movlb	1	; () banked
 26406  016334  8182               	bsf	___awdiv@quotient& (0+255),0,b
 26407  016336                     l11470:
 26408                           
 26409                           ; BSR set to: 1
 26410  016336  0101               	movlb	1	; () banked
 26411  016338  90D8               	bcf	status,0,c
 26412  01633A  337F               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 26413  01633C  337E               	rrcf	___awdiv@divisor& (0+255),f,b
 26414                           
 26415                           ; BSR set to: 1
 26416  01633E  0101               	movlb	1	; () banked
 26417  016340  2F80               	decfsz	___awdiv@counter& (0+255),f,b
 26418  016342  D7E1               	goto	l11462
 26419  016344                     l11474:
 26420                           
 26421                           ; BSR set to: 1
 26422  016344  0101               	movlb	1	; () banked
 26423  016346  5181               	movf	___awdiv@sign& (0+255),w,b
 26424  016348  B4D8               	btfsc	status,2,c
 26425  01634A  D006               	goto	l11478
 26426                           
 26427                           ; BSR set to: 1
 26428  01634C  0101               	movlb	1	; () banked
 26429  01634E  6D82               	negf	___awdiv@quotient& (0+255),b
 26430  016350  0101               	movlb	1	; () banked
 26431  016352  1F83               	comf	(___awdiv@quotient+1)& (0+255),f,b
 26432  016354  B0D8               	btfsc	status,0,c
 26433  016356  2B83               	incf	(___awdiv@quotient+1)& (0+255),f,b
 26434  016358                     l11478:
 26435                           
 26436                           ; BSR set to: 1
 26437  016358  C182  F17C         	movff	___awdiv@quotient,?___awdiv
 26438  01635C  C183  F17D         	movff	___awdiv@quotient+1,?___awdiv+1
 26439  016360  0012               	return	
 26440  016362                     __end_of___awdiv:
 26441                           	opt stack 0
 26442                           tblptru	equ	0xFF8
 26443                           tblptrh	equ	0xFF7
 26444                           tblptrl	equ	0xFF6
 26445                           tablat	equ	0xFF5
 26446                           prodh	equ	0xFF4
 26447                           prodl	equ	0xFF3
 26448                           intcon	equ	0xFF2
 26449                           postinc0	equ	0xFEE
 26450                           wreg	equ	0xFE8
 26451                           indf1	equ	0xFE7
 26452                           postinc1	equ	0xFE6
 26453                           postdec1	equ	0xFE5
 26454                           fsr1h	equ	0xFE2
 26455                           fsr1l	equ	0xFE1
 26456                           indf2	equ	0xFDF
 26457                           postinc2	equ	0xFDE
 26458                           postdec2	equ	0xFDD
 26459                           fsr2h	equ	0xFDA
 26460                           fsr2l	equ	0xFD9
 26461                           status	equ	0xFD8
 26462                           
 26463 ;; *************** function _I2C_Write_At_Address *****************
 26464 ;; Defined at:
 26465 ;;		line 161 in file "I2C.c"
 26466 ;; Parameters:    Size  Location     Type
 26467 ;;  I2Caddress      1    wreg     unsigned char 
 26468 ;;  Register        1   17[BANK1 ] unsigned char 
 26469 ;;  data            1   18[BANK1 ] unsigned char 
 26470 ;; Auto vars:     Size  Location     Type
 26471 ;;  I2Caddress      1   21[BANK1 ] unsigned char 
 26472 ;; Return value:  Size  Location     Type
 26473 ;;                  1    wreg      unsigned char 
 26474 ;; Registers used:
 26475 ;;		wreg, status,2, status,0, cstack
 26476 ;; Tracked objects:
 26477 ;;		On entry : 0/0
 26478 ;;		On exit  : 0/0
 26479 ;;		Unchanged: 0/0
 26480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26481 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26482 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 26483 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26484 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 26485 ;;Total ram usage:        5 bytes
 26486 ;; Hardware stack levels used:    1
 26487 ;; Hardware stack levels required when called:    8
 26488 ;; This function calls:
 26489 ;;		_IdleI2C
 26490 ;;		_WriteI2C
 26491 ;; This function is called by:
 26492 ;;		_RTC_Clock_Enable
 26493 ;;		_RTC_TIME_NONMilitary
 26494 ;;		_SET_RTC_TIME
 26495 ;;		_RTC_Clock_Disable
 26496 ;; This function uses a non-reentrant model
 26497 ;;
 26498                           
 26499                           	psect	text59
 26500  0168F0                     __ptext59:
 26501                           	opt stack 0
 26502  0168F0                     _I2C_Write_At_Address:
 26503                           	opt stack 19
 26504                           
 26505                           ; BSR set to: 1
 26506                           ;incstack = 0
 26507                           ;I2C_Write_At_Address@I2Caddress stored from wreg
 26508  0168F0  0101               	movlb	1	; () banked
 26509  0168F2  6F83               	movwf	I2C_Write_At_Address@I2Caddress& (0+255),b
 26510                           
 26511                           ; BSR set to: 1
 26512                           ;I2C.c: 163: IdleI2C();
 26513  0168F4  EC73  F003         	call	_IdleI2C	;wreg free
 26514                           
 26515                           ;I2C.c: 164: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 26516  0168F8  80C5               	bsf	4037,0,c	;volatile
 26517  0168FA                     l1294:
 26518  0168FA  B0C5               	btfsc	4037,0,c	;volatile
 26519  0168FC  D7FE               	goto	l1294
 26520  0168FE                     l1297:
 26521  0168FE  B0C5               	btfsc	4037,0,c	;volatile
 26522  016900  D7FE               	goto	l1297
 26523                           
 26524                           ;I2C.c: 166: if ( PIR2bits.BCLIF )
 26525  016902  A6A1               	btfss	4001,3,c	;volatile
 26526  016904  D002               	goto	l11222
 26527                           
 26528                           ;I2C.c: 167: {
 26529                           ;I2C.c: 168: return ( -1 );
 26530  016906  0EFF               	movlw	255
 26531  016908  0012               	return	
 26532  01690A                     l11222:
 26533                           
 26534                           ;I2C.c: 170: else
 26535                           ;I2C.c: 171: {
 26536                           ;I2C.c: 172: if ( WriteI2C( I2Caddress << 1) & 0xFE )
 26537  01690A  0101               	movlb	1	; () banked
 26538  01690C  5183               	movf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 26539  01690E  0101               	movlb	1	; () banked
 26540  016910  2583               	addwf	I2C_Write_At_Address@I2Caddress& (0+255),w,b
 26541  016912  EC19  F0B8         	call	_WriteI2C
 26542  016916  0101               	movlb	1	; () banked
 26543  016918  6F81               	movwf	??_I2C_Write_At_Address& (0+255),b
 26544  01691A  6B82               	clrf	(??_I2C_Write_At_Address+1)& (0+255),b
 26545  01691C  BF81               	btfsc	??_I2C_Write_At_Address& (0+255),7,b
 26546  01691E  0782               	decf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 26547  016920  0EFE               	movlw	254
 26548  016922  0101               	movlb	1	; () banked
 26549  016924  1781               	andwf	??_I2C_Write_At_Address& (0+255),f,b
 26550  016926  0E00               	movlw	0
 26551  016928  1782               	andwf	(??_I2C_Write_At_Address+1)& (0+255),f,b
 26552  01692A  0101               	movlb	1	; () banked
 26553  01692C  5182               	movf	(??_I2C_Write_At_Address+1)& (0+255),w,b
 26554  01692E  1181               	iorwf	??_I2C_Write_At_Address& (0+255),w,b
 26555  016930  B4D8               	btfsc	status,2,c
 26556  016932  D005               	goto	l1303
 26557                           
 26558                           ; BSR set to: 1
 26559                           ;I2C.c: 173: {
 26560                           ;I2C.c: 174: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26561  016934  84C5               	bsf	4037,2,c	;volatile
 26562  016936                     l1304:
 26563                           
 26564                           ; BSR set to: 1
 26565  016936  B4C5               	btfsc	4037,2,c	;volatile
 26566  016938  D7FE               	goto	l1304
 26567                           
 26568                           ; BSR set to: 1
 26569                           ;I2C.c: 175: return ( -3 );
 26570                           
 26571                           ; BSR set to: 1
 26572  01693A  0EFD               	movlw	253
 26573  01693C  0012               	return	
 26574  01693E                     l1303:
 26575                           
 26576                           ; BSR set to: 1
 26577                           ;I2C.c: 176: }
 26578                           ;I2C.c: 179: if ( !SSPCON2bits.ACKSTAT )
 26579  01693E  BCC5               	btfsc	4037,6,c	;volatile
 26580  016940  D01F               	goto	l1307
 26581                           
 26582                           ; BSR set to: 1
 26583                           ;I2C.c: 180: {
 26584                           ;I2C.c: 181: if ( WriteI2C( Register ) )
 26585  016942  0101               	movlb	1	; () banked
 26586  016944  517F               	movf	I2C_Write_At_Address@Register& (0+255),w,b
 26587  016946  EC19  F0B8         	call	_WriteI2C
 26588  01694A  0900               	iorlw	0
 26589  01694C  B4D8               	btfsc	status,2,c
 26590  01694E  D005               	goto	l1308
 26591                           
 26592                           ;I2C.c: 182: {
 26593                           ;I2C.c: 183: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26594  016950  84C5               	bsf	4037,2,c	;volatile
 26595  016952                     l1309:
 26596  016952  B4C5               	btfsc	4037,2,c	;volatile
 26597  016954  D7FE               	goto	l1309
 26598                           
 26599                           ;I2C.c: 184: return ( -3 );
 26600  016956  0EFD               	movlw	253
 26601  016958  0012               	return	
 26602  01695A                     l1308:
 26603                           
 26604                           ;I2C.c: 185: }
 26605                           ;I2C.c: 188: if ( !SSPCON2bits.ACKSTAT )
 26606  01695A  BCC5               	btfsc	4037,6,c	;volatile
 26607  01695C  D00C               	goto	l1312
 26608                           
 26609                           ;I2C.c: 189: {
 26610                           ;I2C.c: 190: if ( WriteI2C ( data ) )
 26611  01695E  0101               	movlb	1	; () banked
 26612  016960  5180               	movf	I2C_Write_At_Address@data& (0+255),w,b
 26613  016962  EC19  F0B8         	call	_WriteI2C
 26614  016966  0900               	iorlw	0
 26615  016968  B4D8               	btfsc	status,2,c
 26616  01696A  D00F               	goto	l1302
 26617                           
 26618                           ;I2C.c: 191: {
 26619                           ;I2C.c: 192: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26620  01696C  84C5               	bsf	4037,2,c	;volatile
 26621  01696E                     l1314:
 26622  01696E  B4C5               	btfsc	4037,2,c	;volatile
 26623  016970  D7FE               	goto	l1314
 26624                           
 26625                           ;I2C.c: 193: return( -4 );
 26626  016972  0EFC               	movlw	252
 26627  016974  0012               	return	
 26628  016976                     l1312:
 26629                           
 26630                           ;I2C.c: 196: else
 26631                           ;I2C.c: 197: {
 26632                           ;I2C.c: 198: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26633  016976  84C5               	bsf	4037,2,c	;volatile
 26634  016978                     l1318:
 26635  016978  B4C5               	btfsc	4037,2,c	;volatile
 26636  01697A  D7FE               	goto	l1318
 26637                           
 26638                           ;I2C.c: 199: return ( -2 );
 26639  01697C  0EFE               	movlw	254
 26640  01697E  0012               	return	
 26641  016980                     l1307:
 26642                           
 26643                           ; BSR set to: 1
 26644                           ;I2C.c: 202: else
 26645                           ;I2C.c: 203: {
 26646                           ;I2C.c: 204: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26647  016980  84C5               	bsf	4037,2,c	;volatile
 26648  016982                     l1322:
 26649                           
 26650                           ; BSR set to: 1
 26651  016982  B4C5               	btfsc	4037,2,c	;volatile
 26652  016984  D7FE               	goto	l1322
 26653                           
 26654                           ; BSR set to: 1
 26655                           ;I2C.c: 205: return ( -2 );
 26656                           
 26657                           ; BSR set to: 1
 26658  016986  0EFE               	movlw	254
 26659  016988  0012               	return	
 26660  01698A                     l1302:
 26661                           
 26662                           ;I2C.c: 206: }
 26663                           ;I2C.c: 207: }
 26664                           ;I2C.c: 210: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 26665  01698A  84C5               	bsf	4037,2,c	;volatile
 26666  01698C                     l1325:
 26667  01698C  B4C5               	btfsc	4037,2,c	;volatile
 26668  01698E  D7FE               	goto	l1325
 26669  016990                     l1328:
 26670  016990  B4C5               	btfsc	4037,2,c	;volatile
 26671  016992  D7FE               	goto	l1328
 26672                           
 26673                           ;I2C.c: 212: if ( PIR2bits.BCLIF )
 26674  016994  A6A1               	btfss	4001,3,c	;volatile
 26675  016996  D002               	goto	l11258
 26676                           
 26677                           ;I2C.c: 213: {
 26678                           ;I2C.c: 214: return ( -1 );
 26679  016998  0EFF               	movlw	255
 26680  01699A  0012               	return	
 26681  01699C                     l11258:
 26682                           
 26683                           ;I2C.c: 215: }
 26684                           ;I2C.c: 216: return ( 0 );
 26685  01699C  0E00               	movlw	0
 26686  01699E  0012               	return	
 26687  0169A0                     __end_of_I2C_Write_At_Address:
 26688                           	opt stack 0
 26689                           tblptru	equ	0xFF8
 26690                           tblptrh	equ	0xFF7
 26691                           tblptrl	equ	0xFF6
 26692                           tablat	equ	0xFF5
 26693                           prodh	equ	0xFF4
 26694                           prodl	equ	0xFF3
 26695                           intcon	equ	0xFF2
 26696                           postinc0	equ	0xFEE
 26697                           wreg	equ	0xFE8
 26698                           indf1	equ	0xFE7
 26699                           postinc1	equ	0xFE6
 26700                           postdec1	equ	0xFE5
 26701                           fsr1h	equ	0xFE2
 26702                           fsr1l	equ	0xFE1
 26703                           indf2	equ	0xFDF
 26704                           postinc2	equ	0xFDE
 26705                           postdec2	equ	0xFDD
 26706                           fsr2h	equ	0xFDA
 26707                           fsr2l	equ	0xFD9
 26708                           status	equ	0xFD8
 26709                           
 26710 ;; *************** function _RemoveSpaces *****************
 26711 ;; Defined at:
 26712 ;;		line 257 in file "MISC.c"
 26713 ;; Parameters:    Size  Location     Type
 26714 ;;  This            2   29[BANK1 ] PTR unsigned char 
 26715 ;;		 -> Rxdata(100), 
 26716 ;; Auto vars:     Size  Location     Type
 26717 ;;  That          100    0[BANK2 ] unsigned char [100]
 26718 ;;  address         2  100[BANK2 ] PTR unsigned char 
 26719 ;;		 -> Rxdata(100), 
 26720 ;;  i               1  102[BANK2 ] unsigned char 
 26721 ;; Return value:  Size  Location     Type
 26722 ;;		None               void
 26723 ;; Registers used:
 26724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26725 ;; Tracked objects:
 26726 ;;		On entry : 0/0
 26727 ;;		On exit  : 0/0
 26728 ;;		Unchanged: 0/0
 26729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26730 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 26731 ;;      Locals:         0       0       0     103       0       0       0       0       0       0       0       0       
      +0       0
 26732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26733 ;;      Totals:         0       0       2     103       0       0       0       0       0       0       0       0       
      +0       0
 26734 ;;Total ram usage:      105 bytes
 26735 ;; Hardware stack levels used:    1
 26736 ;; Hardware stack levels required when called:    8
 26737 ;; This function calls:
 26738 ;;		_BufferCopy
 26739 ;;		_cleanBuffer
 26740 ;; This function is called by:
 26741 ;;		_Command
 26742 ;; This function uses a non-reentrant model
 26743 ;;
 26744                           
 26745                           	psect	text60
 26746  01683C                     __ptext60:
 26747                           	opt stack 0
 26748  01683C                     _RemoveSpaces:
 26749                           	opt stack 20
 26750                           
 26751                           ;MISC.c: 260: unsigned char i =0;
 26752                           
 26753                           ;incstack = 0
 26754  01683C  0E00               	movlw	0
 26755  01683E  0102               	movlb	2	; () banked
 26756  016840  6F66               	movwf	RemoveSpaces@i& (0+255),b
 26757                           
 26758                           ; BSR set to: 2
 26759                           ;MISC.c: 261: unsigned char* address = This;
 26760  016842  0101               	movlb	1	; () banked
 26761  016844  0102               	movlb	2	; () banked
 26762  016846  C18C  F265         	movff	RemoveSpaces@This+1,RemoveSpaces@address+1
 26763  01684A  0101               	movlb	1	; () banked
 26764  01684C  0102               	movlb	2	; () banked
 26765  01684E  C18B  F264         	movff	RemoveSpaces@This,RemoveSpaces@address
 26766                           
 26767                           ; BSR set to: 2
 26768                           ;MISC.c: 262: unsigned char That[100];
 26769                           ;MISC.c: 263: cleanBuffer(That,100);
 26770  016852  0102               	movlb	2	; () banked
 26771  016854  0E02               	movlw	high RemoveSpaces@That
 26772  016856  0101               	movlb	1	; () banked
 26773  016858  6F7D               	movwf	(cleanBuffer@data+1)& (0+255),b
 26774  01685A  0102               	movlb	2	; () banked
 26775  01685C  0E00               	movlw	low RemoveSpaces@That
 26776  01685E  0101               	movlb	1	; () banked
 26777  016860  6F7C               	movwf	cleanBuffer@data& (0+255),b
 26778  016862  0E00               	movlw	0
 26779  016864  0101               	movlb	1	; () banked
 26780  016866  6F7F               	movwf	(cleanBuffer@count+1)& (0+255),b
 26781  016868  0E64               	movlw	100
 26782  01686A  0101               	movlb	1	; () banked
 26783  01686C  6F7E               	movwf	cleanBuffer@count& (0+255),b
 26784  01686E  ECE4  F0BC         	call	_cleanBuffer	;wreg free
 26785                           
 26786                           ;MISC.c: 264: while(*This != 0)
 26787  016872  D01E               	goto	l11820
 26788  016874                     l11812:
 26789                           
 26790                           ;MISC.c: 265: {
 26791                           ;MISC.c: 266: if(*This != ' ')
 26792  016874  C18B  FFD9         	movff	RemoveSpaces@This,fsr2l
 26793  016878  C18C  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 26794  01687C  50DF               	movf	indf2,w,c
 26795  01687E  0A20               	xorlw	32
 26796  016880  B4D8               	btfsc	status,2,c
 26797  016882  D013               	goto	l11818
 26798                           
 26799                           ;MISC.c: 267: {
 26800                           ;MISC.c: 268: That[i] = *This;
 26801  016884  C18B  FFD9         	movff	RemoveSpaces@This,fsr2l
 26802  016888  C18C  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 26803  01688C  0102               	movlb	2	; () banked
 26804  01688E  5166               	movf	RemoveSpaces@i& (0+255),w,b
 26805  016890  0D01               	mullw	1
 26806  016892  0102               	movlb	2	; () banked
 26807  016894  0E00               	movlw	low RemoveSpaces@That
 26808  016896  24F3               	addwf	prodl,w,c
 26809  016898  6EE1               	movwf	fsr1l,c
 26810  01689A  0102               	movlb	2	; () banked
 26811  01689C  0E02               	movlw	high RemoveSpaces@That
 26812  01689E  20F4               	addwfc	prodh,w,c
 26813  0168A0  6EE2               	movwf	fsr1h,c
 26814  0168A2  CFDF FFE7          	movff	indf2,indf1
 26815                           
 26816                           ; BSR set to: 2
 26817                           ;MISC.c: 269: i++;
 26818  0168A6  0102               	movlb	2	; () banked
 26819  0168A8  2B66               	incf	RemoveSpaces@i& (0+255),f,b
 26820  0168AA                     l11818:
 26821                           
 26822                           ;MISC.c: 270: }
 26823                           ;MISC.c: 271: This++;
 26824  0168AA  0101               	movlb	1	; () banked
 26825  0168AC  4B8B               	infsnz	RemoveSpaces@This& (0+255),f,b
 26826  0168AE  2B8C               	incf	(RemoveSpaces@This+1)& (0+255),f,b
 26827  0168B0                     l11820:
 26828  0168B0  C18B  FFD9         	movff	RemoveSpaces@This,fsr2l
 26829  0168B4  C18C  FFDA         	movff	RemoveSpaces@This+1,fsr2h
 26830  0168B8  50DF               	movf	indf2,w,c
 26831  0168BA  A4D8               	btfss	status,2,c
 26832  0168BC  D7DB               	goto	l11812
 26833                           
 26834                           ;MISC.c: 272: }
 26835                           ;MISC.c: 273: BufferCopy(That,address, 100, 0);
 26836  0168BE  0102               	movlb	2	; () banked
 26837  0168C0  0E02               	movlw	high RemoveSpaces@That
 26838  0168C2  0101               	movlb	1	; () banked
 26839  0168C4  6F85               	movwf	(BufferCopy@from+1)& (0+255),b
 26840  0168C6  0102               	movlb	2	; () banked
 26841  0168C8  0E00               	movlw	low RemoveSpaces@That
 26842  0168CA  0101               	movlb	1	; () banked
 26843  0168CC  6F84               	movwf	BufferCopy@from& (0+255),b
 26844  0168CE  0102               	movlb	2	; () banked
 26845  0168D0  0101               	movlb	1	; () banked
 26846  0168D2  C265  F187         	movff	RemoveSpaces@address+1,BufferCopy@to+1
 26847  0168D6  0102               	movlb	2	; () banked
 26848  0168D8  0101               	movlb	1	; () banked
 26849  0168DA  C264  F186         	movff	RemoveSpaces@address,BufferCopy@to
 26850  0168DE  0E64               	movlw	100
 26851  0168E0  0101               	movlb	1	; () banked
 26852  0168E2  6F88               	movwf	BufferCopy@count& (0+255),b
 26853  0168E4  0E00               	movlw	0
 26854  0168E6  0101               	movlb	1	; () banked
 26855  0168E8  6F89               	movwf	BufferCopy@shift& (0+255),b
 26856  0168EA  ECC2  F0B3         	call	_BufferCopy	;wreg free
 26857  0168EE  0012               	return	
 26858  0168F0                     __end_of_RemoveSpaces:
 26859                           	opt stack 0
 26860                           tblptru	equ	0xFF8
 26861                           tblptrh	equ	0xFF7
 26862                           tblptrl	equ	0xFF6
 26863                           tablat	equ	0xFF5
 26864                           prodh	equ	0xFF4
 26865                           prodl	equ	0xFF3
 26866                           intcon	equ	0xFF2
 26867                           postinc0	equ	0xFEE
 26868                           wreg	equ	0xFE8
 26869                           indf1	equ	0xFE7
 26870                           postinc1	equ	0xFE6
 26871                           postdec1	equ	0xFE5
 26872                           fsr1h	equ	0xFE2
 26873                           fsr1l	equ	0xFE1
 26874                           indf2	equ	0xFDF
 26875                           postinc2	equ	0xFDE
 26876                           postdec2	equ	0xFDD
 26877                           fsr2h	equ	0xFDA
 26878                           fsr2l	equ	0xFD9
 26879                           status	equ	0xFD8
 26880                           
 26881 ;; *************** function _READ_RTC_TIME *****************
 26882 ;; Defined at:
 26883 ;;		line 139 in file "RTC.c"
 26884 ;; Parameters:    Size  Location     Type
 26885 ;;		None
 26886 ;; Auto vars:     Size  Location     Type
 26887 ;;  temp            7   24[BANK1 ] unsigned char [7]
 26888 ;;  Error           1   31[BANK1 ] char 
 26889 ;; Return value:  Size  Location     Type
 26890 ;;                  1    wreg      unsigned char 
 26891 ;; Registers used:
 26892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26893 ;; Tracked objects:
 26894 ;;		On entry : 0/0
 26895 ;;		On exit  : 0/0
 26896 ;;		Unchanged: 0/0
 26897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 26898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26899 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 26900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 26901 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 26902 ;;Total ram usage:        8 bytes
 26903 ;; Hardware stack levels used:    1
 26904 ;; Hardware stack levels required when called:    9
 26905 ;; This function calls:
 26906 ;;		_I2C_Read_Sequential
 26907 ;;		_ResetI2C
 26908 ;; This function is called by:
 26909 ;;		_Command
 26910 ;; This function uses a non-reentrant model
 26911 ;;
 26912                           
 26913                           	psect	text61
 26914  01619A                     __ptext61:
 26915                           	opt stack 0
 26916  01619A                     _READ_RTC_TIME:
 26917                           	opt stack 19
 26918                           
 26919                           ;RTC.c: 141: signed char Error =0;
 26920                           
 26921                           ;incstack = 0
 26922  01619A  0E00               	movlw	0
 26923  01619C  0101               	movlb	1	; () banked
 26924  01619E  6F8D               	movwf	READ_RTC_TIME@Error& (0+255),b
 26925                           
 26926                           ; BSR set to: 1
 26927                           ;RTC.c: 142: unsigned char temp[7];
 26928                           ;RTC.c: 144: Error = I2C_Read_Sequential( 0b1101000, 0x00, temp, 7 );
 26929  0161A0  0E00               	movlw	0
 26930  0161A2  0101               	movlb	1	; () banked
 26931  0161A4  6F81               	movwf	I2C_Read_Sequential@Register& (0+255),b
 26932  0161A6  0101               	movlb	1	; () banked
 26933  0161A8  0E01               	movlw	high READ_RTC_TIME@temp
 26934  0161AA  0101               	movlb	1	; () banked
 26935  0161AC  6F83               	movwf	(I2C_Read_Sequential@rdptr+1)& (0+255),b
 26936  0161AE  0101               	movlb	1	; () banked
 26937  0161B0  0E86               	movlw	low READ_RTC_TIME@temp
 26938  0161B2  0101               	movlb	1	; () banked
 26939  0161B4  6F82               	movwf	I2C_Read_Sequential@rdptr& (0+255),b
 26940  0161B6  0E07               	movlw	7
 26941  0161B8  0101               	movlb	1	; () banked
 26942  0161BA  6F84               	movwf	I2C_Read_Sequential@length& (0+255),b
 26943  0161BC  0E68               	movlw	104
 26944  0161BE  ECB1  F0B1         	call	_I2C_Read_Sequential
 26945  0161C2  0101               	movlb	1	; () banked
 26946  0161C4  6F8D               	movwf	READ_RTC_TIME@Error& (0+255),b
 26947                           
 26948                           ; BSR set to: 1
 26949                           ;RTC.c: 146: if(Error == 0 )
 26950  0161C6  0101               	movlb	1	; () banked
 26951  0161C8  678D               	tstfsz	READ_RTC_TIME@Error& (0+255),b
 26952  0161CA  D055               	goto	l12100
 26953                           
 26954                           ; BSR set to: 1
 26955                           ;RTC.c: 147: {
 26956                           ;RTC.c: 148: NowTime.Seconds = (temp[0] & 0x0F) + (((temp[0] & 0x70)>> 4) * 10);
 26957  0161CC  0101               	movlb	1	; () banked
 26958  0161CE  3986               	swapf	READ_RTC_TIME@temp& (0+255),w,b
 26959  0161D0  0B0F               	andlw	15
 26960  0161D2  0B07               	andlw	7
 26961  0161D4  0D0A               	mullw	10
 26962  0161D6  0101               	movlb	1	; () banked
 26963  0161D8  5186               	movf	READ_RTC_TIME@temp& (0+255),w,b
 26964  0161DA  0B0F               	andlw	15
 26965  0161DC  24F3               	addwf	prodl,w,c
 26966  0161DE  0101               	movlb	1	; () banked
 26967  0161E0  6F00               	movwf	_NowTime& (0+255),b
 26968                           
 26969                           ;RTC.c: 149: NowTime.Minutes = (temp[1] & 0x0F) + (((temp[1] & 0x70) >> 4) * 10);
 26970  0161E2  0101               	movlb	1	; () banked
 26971  0161E4  3987               	swapf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 26972  0161E6  0B0F               	andlw	15
 26973  0161E8  0B07               	andlw	7
 26974  0161EA  0D0A               	mullw	10
 26975  0161EC  0101               	movlb	1	; () banked
 26976  0161EE  5187               	movf	(READ_RTC_TIME@temp+1)& (0+255),w,b
 26977  0161F0  0B0F               	andlw	15
 26978  0161F2  24F3               	addwf	prodl,w,c
 26979  0161F4  0101               	movlb	1	; () banked
 26980  0161F6  6F01               	movwf	(_NowTime+1)& (0+255),b
 26981                           
 26982                           ;RTC.c: 150: NowTime.Hours = (temp[2] & 0x0F) + (((temp[2] & 0x10) >> 4) * 10);
 26983  0161F8  0101               	movlb	1	; () banked
 26984  0161FA  3988               	swapf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 26985  0161FC  0B0F               	andlw	15
 26986  0161FE  0B01               	andlw	1
 26987  016200  0D0A               	mullw	10
 26988  016202  0101               	movlb	1	; () banked
 26989  016204  5188               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 26990  016206  0B0F               	andlw	15
 26991  016208  24F3               	addwf	prodl,w,c
 26992  01620A  0101               	movlb	1	; () banked
 26993  01620C  6F02               	movwf	(_NowTime+2)& (0+255),b
 26994                           
 26995                           ; BSR set to: 1
 26996                           ;RTC.c: 151: NowTime.HoursAM_PM = temp[2] & 0x20;
 26997  01620E  0101               	movlb	1	; () banked
 26998  016210  5188               	movf	(READ_RTC_TIME@temp+2)& (0+255),w,b
 26999  016212  0B20               	andlw	32
 27000  016214  0101               	movlb	1	; () banked
 27001  016216  6F04               	movwf	(_NowTime+4)& (0+255),b
 27002                           
 27003                           ; BSR set to: 1
 27004                           ;RTC.c: 152: NowTime.HoursMilitary = NowTime.Hours + 12 * NowTime.HoursAM_PM;
 27005  016218  0101               	movlb	1	; () banked
 27006  01621A  5104               	movf	(_NowTime+4)& (0+255),w,b
 27007  01621C  0D0C               	mullw	12
 27008  01621E  50F3               	movf	prodl,w,c
 27009  016220  0101               	movlb	1	; () banked
 27010  016222  2502               	addwf	(_NowTime+2)& (0+255),w,b
 27011  016224  0101               	movlb	1	; () banked
 27012  016226  6F03               	movwf	(_NowTime+3)& (0+255),b
 27013                           
 27014                           ;RTC.c: 153: NowTime.Day = temp[3] & 0x07;
 27015  016228  0101               	movlb	1	; () banked
 27016  01622A  5189               	movf	(READ_RTC_TIME@temp+3)& (0+255),w,b
 27017  01622C  0B07               	andlw	7
 27018  01622E  0101               	movlb	1	; () banked
 27019  016230  6F05               	movwf	(_NowTime+5)& (0+255),b
 27020                           
 27021                           ; BSR set to: 1
 27022                           ;RTC.c: 154: NowTime.Date = (temp[4] & 0x0F) + (((temp[4] & 0x30)>> 4) * 10);
 27023  016232  0101               	movlb	1	; () banked
 27024  016234  398A               	swapf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 27025  016236  0B0F               	andlw	15
 27026  016238  0B03               	andlw	3
 27027  01623A  0D0A               	mullw	10
 27028  01623C  0101               	movlb	1	; () banked
 27029  01623E  518A               	movf	(READ_RTC_TIME@temp+4)& (0+255),w,b
 27030  016240  0B0F               	andlw	15
 27031  016242  24F3               	addwf	prodl,w,c
 27032  016244  0101               	movlb	1	; () banked
 27033  016246  6F06               	movwf	(_NowTime+6)& (0+255),b
 27034                           
 27035                           ; BSR set to: 1
 27036                           ;RTC.c: 155: NowTime.Month = (temp[5] & 0x0F) + (((temp[5] & 0x10) >> 4) * 10);
 27037  016248  0101               	movlb	1	; () banked
 27038  01624A  398B               	swapf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 27039  01624C  0B0F               	andlw	15
 27040  01624E  0B01               	andlw	1
 27041  016250  0D0A               	mullw	10
 27042  016252  0101               	movlb	1	; () banked
 27043  016254  518B               	movf	(READ_RTC_TIME@temp+5)& (0+255),w,b
 27044  016256  0B0F               	andlw	15
 27045  016258  24F3               	addwf	prodl,w,c
 27046  01625A  0101               	movlb	1	; () banked
 27047  01625C  6F07               	movwf	(_NowTime+7)& (0+255),b
 27048                           
 27049                           ; BSR set to: 1
 27050                           ;RTC.c: 156: NowTime.Year = (temp[6] & 0x0F) + (((temp[6] & 0xF0) >> 4) * 10);
 27051  01625E  0101               	movlb	1	; () banked
 27052  016260  398C               	swapf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 27053  016262  0B0F               	andlw	15
 27054  016264  0B0F               	andlw	15
 27055  016266  0D0A               	mullw	10
 27056  016268  0101               	movlb	1	; () banked
 27057  01626A  518C               	movf	(READ_RTC_TIME@temp+6)& (0+255),w,b
 27058  01626C  0B0F               	andlw	15
 27059  01626E  24F3               	addwf	prodl,w,c
 27060  016270  0101               	movlb	1	; () banked
 27061  016272  6F08               	movwf	(_NowTime+8)& (0+255),b
 27062                           
 27063                           ;RTC.c: 157: }
 27064  016274  D002               	goto	l12102
 27065  016276                     l12100:
 27066                           
 27067                           ; BSR set to: 1
 27068                           ;RTC.c: 158: else
 27069                           ;RTC.c: 159: {
 27070                           ;RTC.c: 160: ResetI2C();
 27071  016276  ECC5  F002         	call	_ResetI2C	;wreg free
 27072  01627A                     l12102:
 27073                           
 27074                           ;RTC.c: 161: }
 27075                           ;RTC.c: 162: return Error;
 27076  01627A  0101               	movlb	1	; () banked
 27077  01627C  518D               	movf	READ_RTC_TIME@Error& (0+255),w,b
 27078  01627E  0012               	return	
 27079  016280                     __end_of_READ_RTC_TIME:
 27080                           	opt stack 0
 27081                           tblptru	equ	0xFF8
 27082                           tblptrh	equ	0xFF7
 27083                           tblptrl	equ	0xFF6
 27084                           tablat	equ	0xFF5
 27085                           prodh	equ	0xFF4
 27086                           prodl	equ	0xFF3
 27087                           intcon	equ	0xFF2
 27088                           postinc0	equ	0xFEE
 27089                           wreg	equ	0xFE8
 27090                           indf1	equ	0xFE7
 27091                           postinc1	equ	0xFE6
 27092                           postdec1	equ	0xFE5
 27093                           fsr1h	equ	0xFE2
 27094                           fsr1l	equ	0xFE1
 27095                           indf2	equ	0xFDF
 27096                           postinc2	equ	0xFDE
 27097                           postdec2	equ	0xFDD
 27098                           fsr2h	equ	0xFDA
 27099                           fsr2l	equ	0xFD9
 27100                           status	equ	0xFD8
 27101                           
 27102 ;; *************** function _ResetI2C *****************
 27103 ;; Defined at:
 27104 ;;		line 93 in file "I2C.c"
 27105 ;; Parameters:    Size  Location     Type
 27106 ;;		None
 27107 ;; Auto vars:     Size  Location     Type
 27108 ;;		None
 27109 ;; Return value:  Size  Location     Type
 27110 ;;		None               void
 27111 ;; Registers used:
 27112 ;;		wreg, status,2, status,0, cstack
 27113 ;; Tracked objects:
 27114 ;;		On entry : 0/0
 27115 ;;		On exit  : 0/0
 27116 ;;		Unchanged: 0/0
 27117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27122 ;;Total ram usage:        0 bytes
 27123 ;; Hardware stack levels used:    1
 27124 ;; Hardware stack levels required when called:    8
 27125 ;; This function calls:
 27126 ;;		_Init_I2C_Master
 27127 ;;		_delayUS
 27128 ;; This function is called by:
 27129 ;;		_RTC_Clock_Enable
 27130 ;;		_RTC_TIME_NONMilitary
 27131 ;;		_READ_RTC_TIME
 27132 ;;		_RTC_Clock_Disable
 27133 ;;		_READ_RTC_SECONDS
 27134 ;; This function uses a non-reentrant model
 27135 ;;
 27136                           
 27137                           	psect	text62
 27138  00058A                     __ptext62:
 27139                           	opt stack 0
 27140  00058A                     _ResetI2C:
 27141                           	opt stack 19
 27142                           
 27143                           ;I2C.c: 95: SSPCON1 &= 0xDF;
 27144                           
 27145                           ; BSR set to: 1
 27146                           ;incstack = 0
 27147  00058A  9AC6               	bcf	4038,5,c	;volatile
 27148                           
 27149                           ;I2C.c: 96: TRISCbits.TRISC3 = 0;
 27150  00058C  9694               	bcf	3988,3,c	;volatile
 27151                           
 27152                           ;I2C.c: 97: LATC &= ~0b00001000;
 27153  00058E  968B               	bcf	3979,3,c	;volatile
 27154                           
 27155                           ;I2C.c: 98: delayUS(200);
 27156  000590  0EC8               	movlw	200
 27157  000592  0101               	movlb	1	; () banked
 27158  000594  6F7C               	movwf	delayUS@US& (0+255),b
 27159  000596  0E00               	movlw	0
 27160  000598  0101               	movlb	1	; () banked
 27161  00059A  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 27162  00059C  0E00               	movlw	0
 27163  00059E  0101               	movlb	1	; () banked
 27164  0005A0  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 27165  0005A2  0E00               	movlw	0
 27166  0005A4  0101               	movlb	1	; () banked
 27167  0005A6  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 27168  0005A8  ECA4  F0BA         	call	_delayUS	;wreg free
 27169                           
 27170                           ;I2C.c: 99: TRISCbits.TRISC3 = 1;
 27171  0005AC  8694               	bsf	3988,3,c	;volatile
 27172                           
 27173                           ;I2C.c: 100: Init_I2C_Master();
 27174  0005AE  EC38  F0BD         	call	_Init_I2C_Master	;wreg free
 27175  0005B2  0012               	return	
 27176  0005B4                     __end_of_ResetI2C:
 27177                           	opt stack 0
 27178                           tblptru	equ	0xFF8
 27179                           tblptrh	equ	0xFF7
 27180                           tblptrl	equ	0xFF6
 27181                           tablat	equ	0xFF5
 27182                           prodh	equ	0xFF4
 27183                           prodl	equ	0xFF3
 27184                           intcon	equ	0xFF2
 27185                           postinc0	equ	0xFEE
 27186                           wreg	equ	0xFE8
 27187                           indf1	equ	0xFE7
 27188                           postinc1	equ	0xFE6
 27189                           postdec1	equ	0xFE5
 27190                           fsr1h	equ	0xFE2
 27191                           fsr1l	equ	0xFE1
 27192                           indf2	equ	0xFDF
 27193                           postinc2	equ	0xFDE
 27194                           postdec2	equ	0xFDD
 27195                           fsr2h	equ	0xFDA
 27196                           fsr2l	equ	0xFD9
 27197                           status	equ	0xFD8
 27198                           
 27199 ;; *************** function _Init_I2C_Master *****************
 27200 ;; Defined at:
 27201 ;;		line 55 in file "I2C.c"
 27202 ;; Parameters:    Size  Location     Type
 27203 ;;		None
 27204 ;; Auto vars:     Size  Location     Type
 27205 ;;  baud            2   16[BANK1 ] unsigned int 
 27206 ;; Return value:  Size  Location     Type
 27207 ;;		None               void
 27208 ;; Registers used:
 27209 ;;		wreg, status,2, status,0, cstack
 27210 ;; Tracked objects:
 27211 ;;		On entry : 0/0
 27212 ;;		On exit  : 0/0
 27213 ;;		Unchanged: 0/0
 27214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27216 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27218 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27219 ;;Total ram usage:        2 bytes
 27220 ;; Hardware stack levels used:    1
 27221 ;; Hardware stack levels required when called:    7
 27222 ;; This function calls:
 27223 ;;		_OpenI2C
 27224 ;; This function is called by:
 27225 ;;		_main
 27226 ;;		_ResetI2C
 27227 ;; This function uses a non-reentrant model
 27228 ;;
 27229                           
 27230                           	psect	text63
 27231  017A70                     __ptext63:
 27232                           	opt stack 0
 27233  017A70                     _Init_I2C_Master:
 27234                           	opt stack 19
 27235                           
 27236                           ;I2C.c: 57: unsigned int baud = 0;
 27237                           
 27238                           ;incstack = 0
 27239  017A70  0E00               	movlw	0
 27240  017A72  0101               	movlb	1	; () banked
 27241  017A74  6F7F               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 27242  017A76  0E00               	movlw	0
 27243  017A78  0101               	movlb	1	; () banked
 27244  017A7A  6F7E               	movwf	Init_I2C_Master@baud& (0+255),b
 27245                           
 27246                           ;I2C.c: 60: baud = (unsigned char)(40960000L/4 /((4* (long)5 * 1000L) - 1));
 27247  017A7C  0E00               	movlw	0
 27248  017A7E  0101               	movlb	1	; () banked
 27249  017A80  6F7F               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 27250  017A82  0E00               	movlw	0
 27251  017A84  0101               	movlb	1	; () banked
 27252  017A86  6F7E               	movwf	Init_I2C_Master@baud& (0+255),b
 27253                           
 27254                           ; BSR set to: 1
 27255                           ;I2C.c: 61: if(baud > 127 || baud == 0)
 27256  017A88  0E80               	movlw	128
 27257  017A8A  0101               	movlb	1	; () banked
 27258  017A8C  5D7E               	subwf	Init_I2C_Master@baud& (0+255),w,b
 27259  017A8E  0E00               	movlw	0
 27260  017A90  0101               	movlb	1	; () banked
 27261  017A92  597F               	subwfb	(Init_I2C_Master@baud+1)& (0+255),w,b
 27262  017A94  B0D8               	btfsc	status,0,c
 27263  017A96  D005               	goto	l10254
 27264                           
 27265                           ; BSR set to: 1
 27266  017A98  0101               	movlb	1	; () banked
 27267  017A9A  517F               	movf	(Init_I2C_Master@baud+1)& (0+255),w,b
 27268  017A9C  117E               	iorwf	Init_I2C_Master@baud& (0+255),w,b
 27269  017A9E  A4D8               	btfss	status,2,c
 27270  017AA0  D006               	goto	l10256
 27271  017AA2                     l10254:
 27272                           
 27273                           ; BSR set to: 1
 27274                           ;I2C.c: 62: {
 27275                           ;I2C.c: 63: baud = 127;
 27276  017AA2  0E00               	movlw	0
 27277  017AA4  0101               	movlb	1	; () banked
 27278  017AA6  6F7F               	movwf	(Init_I2C_Master@baud+1)& (0+255),b
 27279  017AA8  0E7F               	movlw	127
 27280  017AAA  0101               	movlb	1	; () banked
 27281  017AAC  6F7E               	movwf	Init_I2C_Master@baud& (0+255),b
 27282  017AAE                     l10256:
 27283                           
 27284                           ; BSR set to: 1
 27285                           ;I2C.c: 64: }
 27286                           ;I2C.c: 65: SSPADD = baud;
 27287  017AAE  C17E  FFC8         	movff	Init_I2C_Master@baud,4040	;volatile
 27288                           
 27289                           ; BSR set to: 1
 27290                           ;I2C.c: 66: OpenI2C(0b00001000, 0b10000000);
 27291  017AB2  0E80               	movlw	128
 27292  017AB4  0101               	movlb	1	; () banked
 27293  017AB6  6F7C               	movwf	OpenI2C@slew& (0+255),b
 27294  017AB8  0E08               	movlw	8
 27295  017ABA  EC01  F003         	call	_OpenI2C
 27296  017ABE  0012               	return	
 27297  017AC0                     __end_of_Init_I2C_Master:
 27298                           	opt stack 0
 27299                           tblptru	equ	0xFF8
 27300                           tblptrh	equ	0xFF7
 27301                           tblptrl	equ	0xFF6
 27302                           tablat	equ	0xFF5
 27303                           prodh	equ	0xFF4
 27304                           prodl	equ	0xFF3
 27305                           intcon	equ	0xFF2
 27306                           postinc0	equ	0xFEE
 27307                           wreg	equ	0xFE8
 27308                           indf1	equ	0xFE7
 27309                           postinc1	equ	0xFE6
 27310                           postdec1	equ	0xFE5
 27311                           fsr1h	equ	0xFE2
 27312                           fsr1l	equ	0xFE1
 27313                           indf2	equ	0xFDF
 27314                           postinc2	equ	0xFDE
 27315                           postdec2	equ	0xFDD
 27316                           fsr2h	equ	0xFDA
 27317                           fsr2l	equ	0xFD9
 27318                           status	equ	0xFD8
 27319                           
 27320 ;; *************** function _OpenI2C *****************
 27321 ;; Defined at:
 27322 ;;		line 74 in file "I2C.c"
 27323 ;; Parameters:    Size  Location     Type
 27324 ;;  sync_mode       1    wreg     unsigned char 
 27325 ;;  slew            1   14[BANK1 ] unsigned char 
 27326 ;; Auto vars:     Size  Location     Type
 27327 ;;  sync_mode       1   15[BANK1 ] unsigned char 
 27328 ;; Return value:  Size  Location     Type
 27329 ;;		None               void
 27330 ;; Registers used:
 27331 ;;		wreg, status,2, status,0
 27332 ;; Tracked objects:
 27333 ;;		On entry : 0/0
 27334 ;;		On exit  : 0/0
 27335 ;;		Unchanged: 0/0
 27336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27337 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27338 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27340 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27341 ;;Total ram usage:        2 bytes
 27342 ;; Hardware stack levels used:    1
 27343 ;; Hardware stack levels required when called:    6
 27344 ;; This function calls:
 27345 ;;		Nothing
 27346 ;; This function is called by:
 27347 ;;		_Init_I2C_Master
 27348 ;; This function uses a non-reentrant model
 27349 ;;
 27350                           
 27351                           	psect	text64
 27352  000602                     __ptext64:
 27353                           	opt stack 0
 27354  000602                     _OpenI2C:
 27355                           	opt stack 19
 27356                           
 27357                           ;incstack = 0
 27358                           ;OpenI2C@sync_mode stored from wreg
 27359  000602  0101               	movlb	1	; () banked
 27360  000604  6F7D               	movwf	OpenI2C@sync_mode& (0+255),b
 27361                           
 27362                           ; BSR set to: 1
 27363                           ;I2C.c: 76: SSPSTAT &= 0x3F;
 27364  000606  0E3F               	movlw	63
 27365  000608  16C7               	andwf	4039,f,c	;volatile
 27366                           
 27367                           ; BSR set to: 1
 27368                           ;I2C.c: 77: SSPCON1 = 0x00;
 27369  00060A  0E00               	movlw	0
 27370  00060C  6EC6               	movwf	4038,c	;volatile
 27371                           
 27372                           ; BSR set to: 1
 27373                           ;I2C.c: 78: SSPCON2 = 0x00;
 27374  00060E  0E00               	movlw	0
 27375  000610  6EC5               	movwf	4037,c	;volatile
 27376                           
 27377                           ;I2C.c: 79: SSPCON1 |= sync_mode;
 27378  000612  0101               	movlb	1	; () banked
 27379  000614  517D               	movf	OpenI2C@sync_mode& (0+255),w,b
 27380  000616  12C6               	iorwf	4038,f,c	;volatile
 27381                           
 27382                           ;I2C.c: 80: SSPSTAT |= slew;
 27383  000618  0101               	movlb	1	; () banked
 27384  00061A  517C               	movf	OpenI2C@slew& (0+255),w,b
 27385  00061C  12C7               	iorwf	4039,f,c	;volatile
 27386                           
 27387                           ; BSR set to: 1
 27388                           ;I2C.c: 82: TRISCbits.TRISC3 = 1;
 27389  00061E  8694               	bsf	3988,3,c	;volatile
 27390                           
 27391                           ; BSR set to: 1
 27392                           ;I2C.c: 83: TRISCbits.TRISC4 = 1;
 27393  000620  8894               	bsf	3988,4,c	;volatile
 27394                           
 27395                           ; BSR set to: 1
 27396                           ;I2C.c: 84: SSPCON1 |= 0b00100000;
 27397  000622  8AC6               	bsf	4038,5,c	;volatile
 27398                           
 27399                           ; BSR set to: 1
 27400  000624  0012               	return	
 27401  000626                     __end_of_OpenI2C:
 27402                           	opt stack 0
 27403                           tblptru	equ	0xFF8
 27404                           tblptrh	equ	0xFF7
 27405                           tblptrl	equ	0xFF6
 27406                           tablat	equ	0xFF5
 27407                           prodh	equ	0xFF4
 27408                           prodl	equ	0xFF3
 27409                           intcon	equ	0xFF2
 27410                           postinc0	equ	0xFEE
 27411                           wreg	equ	0xFE8
 27412                           indf1	equ	0xFE7
 27413                           postinc1	equ	0xFE6
 27414                           postdec1	equ	0xFE5
 27415                           fsr1h	equ	0xFE2
 27416                           fsr1l	equ	0xFE1
 27417                           indf2	equ	0xFDF
 27418                           postinc2	equ	0xFDE
 27419                           postdec2	equ	0xFDD
 27420                           fsr2h	equ	0xFDA
 27421                           fsr2l	equ	0xFD9
 27422                           status	equ	0xFD8
 27423                           
 27424 ;; *************** function _I2C_Read_Sequential *****************
 27425 ;; Defined at:
 27426 ;;		line 307 in file "I2C.c"
 27427 ;; Parameters:    Size  Location     Type
 27428 ;;  I2Caddress      1    wreg     unsigned char 
 27429 ;;  Register        1   19[BANK1 ] unsigned char 
 27430 ;;  rdptr           2   20[BANK1 ] PTR unsigned char 
 27431 ;;		 -> READ_RTC_TIME@temp(7), 
 27432 ;;  length          1   22[BANK1 ] unsigned char 
 27433 ;; Auto vars:     Size  Location     Type
 27434 ;;  I2Caddress      1   23[BANK1 ] unsigned char 
 27435 ;; Return value:  Size  Location     Type
 27436 ;;                  1    wreg      unsigned char 
 27437 ;; Registers used:
 27438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27439 ;; Tracked objects:
 27440 ;;		On entry : 0/0
 27441 ;;		On exit  : 0/0
 27442 ;;		Unchanged: 0/0
 27443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27444 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27445 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27447 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 27448 ;;Total ram usage:        5 bytes
 27449 ;; Hardware stack levels used:    1
 27450 ;; Hardware stack levels required when called:    8
 27451 ;; This function calls:
 27452 ;;		_IdleI2C
 27453 ;;		_Multiple_I2C_Read
 27454 ;;		_WriteI2C
 27455 ;; This function is called by:
 27456 ;;		_READ_RTC_TIME
 27457 ;; This function uses a non-reentrant model
 27458 ;;
 27459                           
 27460                           	psect	text65
 27461  016362                     __ptext65:
 27462                           	opt stack 0
 27463  016362                     _I2C_Read_Sequential:
 27464                           	opt stack 19
 27465                           
 27466                           ; BSR set to: 1
 27467                           ;incstack = 0
 27468                           ;I2C_Read_Sequential@I2Caddress stored from wreg
 27469  016362  0101               	movlb	1	; () banked
 27470  016364  6F85               	movwf	I2C_Read_Sequential@I2Caddress& (0+255),b
 27471                           
 27472                           ; BSR set to: 1
 27473                           ;I2C.c: 309: IdleI2C();
 27474  016366  EC73  F003         	call	_IdleI2C	;wreg free
 27475                           
 27476                           ;I2C.c: 310: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
 27477  01636A  80C5               	bsf	4037,0,c	;volatile
 27478  01636C                     l1395:
 27479  01636C  B0C5               	btfsc	4037,0,c	;volatile
 27480  01636E  D7FE               	goto	l1395
 27481  016370                     l1398:
 27482  016370  B0C5               	btfsc	4037,0,c	;volatile
 27483  016372  D7FE               	goto	l1398
 27484                           
 27485                           ;I2C.c: 312: if ( PIR2bits.BCLIF )
 27486  016374  A6A1               	btfss	4001,3,c	;volatile
 27487  016376  D002               	goto	l11282
 27488                           
 27489                           ;I2C.c: 313: {
 27490                           ;I2C.c: 314: return ( -1 );
 27491  016378  0EFF               	movlw	255
 27492  01637A  0012               	return	
 27493  01637C                     l11282:
 27494                           
 27495                           ;I2C.c: 316: else
 27496                           ;I2C.c: 317: {
 27497                           ;I2C.c: 318: if ( WriteI2C( (I2Caddress << 1) & 0xFE ) )
 27498  01637C  0101               	movlb	1	; () banked
 27499  01637E  5185               	movf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 27500  016380  0101               	movlb	1	; () banked
 27501  016382  2585               	addwf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 27502  016384  0BFE               	andlw	254
 27503  016386  EC19  F0B8         	call	_WriteI2C
 27504  01638A  0900               	iorlw	0
 27505  01638C  B4D8               	btfsc	status,2,c
 27506  01638E  D005               	goto	l1404
 27507                           
 27508                           ;I2C.c: 319: {
 27509                           ;I2C.c: 320: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27510  016390  84C5               	bsf	4037,2,c	;volatile
 27511  016392                     l1405:
 27512  016392  B4C5               	btfsc	4037,2,c	;volatile
 27513  016394  D7FE               	goto	l1405
 27514                           
 27515                           ;I2C.c: 321: return ( -3 );
 27516  016396  0EFD               	movlw	253
 27517  016398  0012               	return	
 27518  01639A                     l1404:
 27519                           
 27520                           ;I2C.c: 322: }
 27521                           ;I2C.c: 325: if ( !SSPCON2bits.ACKSTAT )
 27522  01639A  BCC5               	btfsc	4037,6,c	;volatile
 27523  01639C  D04A               	goto	l1408
 27524                           
 27525                           ;I2C.c: 326: {
 27526                           ;I2C.c: 327: if ( WriteI2C( Register ) )
 27527  01639E  0101               	movlb	1	; () banked
 27528  0163A0  5181               	movf	I2C_Read_Sequential@Register& (0+255),w,b
 27529  0163A2  EC19  F0B8         	call	_WriteI2C
 27530  0163A6  0900               	iorlw	0
 27531  0163A8  B4D8               	btfsc	status,2,c
 27532  0163AA  D005               	goto	l1409
 27533                           
 27534                           ;I2C.c: 328: {
 27535                           ;I2C.c: 329: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27536  0163AC  84C5               	bsf	4037,2,c	;volatile
 27537  0163AE                     l1410:
 27538  0163AE  B4C5               	btfsc	4037,2,c	;volatile
 27539  0163B0  D7FE               	goto	l1410
 27540                           
 27541                           ;I2C.c: 330: return ( -3 );
 27542  0163B2  0EFD               	movlw	253
 27543  0163B4  0012               	return	
 27544  0163B6                     l1409:
 27545                           
 27546                           ;I2C.c: 331: }
 27547                           ;I2C.c: 334: if ( !SSPCON2bits.ACKSTAT )
 27548  0163B6  BCC5               	btfsc	4037,6,c	;volatile
 27549  0163B8  D037               	goto	l1413
 27550                           
 27551                           ;I2C.c: 335: {
 27552                           ;I2C.c: 336: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
 27553  0163BA  82C5               	bsf	4037,1,c	;volatile
 27554  0163BC                     l1414:
 27555  0163BC  B2C5               	btfsc	4037,1,c	;volatile
 27556  0163BE  D7FE               	goto	l1414
 27557  0163C0                     l1417:
 27558  0163C0  B2C5               	btfsc	4037,1,c	;volatile
 27559  0163C2  D7FE               	goto	l1417
 27560                           
 27561                           ;I2C.c: 338: if ( WriteI2C( (I2Caddress << 1) +1 ) )
 27562  0163C4  80D8               	bsf	status,0,c
 27563  0163C6  0101               	movlb	1	; () banked
 27564  0163C8  3585               	rlcf	I2C_Read_Sequential@I2Caddress& (0+255),w,b
 27565  0163CA  EC19  F0B8         	call	_WriteI2C
 27566  0163CE  0900               	iorlw	0
 27567  0163D0  B4D8               	btfsc	status,2,c
 27568  0163D2  D005               	goto	l1420
 27569                           
 27570                           ;I2C.c: 339: {
 27571                           ;I2C.c: 340: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27572  0163D4  84C5               	bsf	4037,2,c	;volatile
 27573  0163D6                     l1421:
 27574  0163D6  B4C5               	btfsc	4037,2,c	;volatile
 27575  0163D8  D7FE               	goto	l1421
 27576                           
 27577                           ;I2C.c: 341: return ( -3 );
 27578  0163DA  0EFD               	movlw	253
 27579  0163DC  0012               	return	
 27580  0163DE                     l1420:
 27581                           
 27582                           ;I2C.c: 342: }
 27583                           ;I2C.c: 345: if ( !SSPCON2bits.ACKSTAT )
 27584  0163DE  BCC5               	btfsc	4037,6,c	;volatile
 27585  0163E0  D01E               	goto	l1424
 27586                           
 27587                           ;I2C.c: 346: {
 27588                           ;I2C.c: 347: if ( Multiple_I2C_Read( rdptr, length ) )
 27589  0163E2  0101               	movlb	1	; () banked
 27590  0163E4  C183  F17E         	movff	I2C_Read_Sequential@rdptr+1,Multiple_I2C_Read@rdptr+1
 27591  0163E8  0101               	movlb	1	; () banked
 27592  0163EA  C182  F17D         	movff	I2C_Read_Sequential@rdptr,Multiple_I2C_Read@rdptr
 27593  0163EE  C184  F17F         	movff	I2C_Read_Sequential@length,Multiple_I2C_Read@length
 27594  0163F2  EC4F  F0BB         	call	_Multiple_I2C_Read	;wreg free
 27595  0163F6  0900               	iorlw	0
 27596  0163F8  B4D8               	btfsc	status,2,c
 27597  0163FA  D002               	goto	l1425
 27598                           
 27599                           ;I2C.c: 348: {
 27600                           ;I2C.c: 349: return ( -1 );
 27601  0163FC  0EFF               	movlw	255
 27602  0163FE  0012               	return	
 27603  016400                     l1425:
 27604                           
 27605                           ;I2C.c: 350: }
 27606                           ;I2C.c: 352: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
 27607  016400  8AC5               	bsf	4037,5,c	;volatile
 27608  016402  88C5               	bsf	4037,4,c	;volatile
 27609  016404                     l1426:
 27610  016404  B8C5               	btfsc	4037,4,c	;volatile
 27611  016406  D7FE               	goto	l1426
 27612  016408                     l1429:
 27613  016408  B8C5               	btfsc	4037,4,c	;volatile
 27614  01640A  D7FE               	goto	l1429
 27615                           
 27616                           ;I2C.c: 354: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27617  01640C  84C5               	bsf	4037,2,c	;volatile
 27618  01640E                     l1432:
 27619  01640E  B4C5               	btfsc	4037,2,c	;volatile
 27620  016410  D7FE               	goto	l1432
 27621  016412                     l1435:
 27622  016412  B4C5               	btfsc	4037,2,c	;volatile
 27623  016414  D7FE               	goto	l1435
 27624                           
 27625                           ;I2C.c: 356: if ( PIR2bits.BCLIF )
 27626  016416  A6A1               	btfss	4001,3,c	;volatile
 27627  016418  D011               	goto	l11330
 27628                           
 27629                           ;I2C.c: 357: {
 27630                           ;I2C.c: 358: return ( -1 );
 27631  01641A  0EFF               	movlw	255
 27632  01641C  0012               	return	
 27633  01641E                     l1424:
 27634                           
 27635                           ;I2C.c: 361: else
 27636                           ;I2C.c: 362: {
 27637                           ;I2C.c: 363: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27638  01641E  84C5               	bsf	4037,2,c	;volatile
 27639  016420                     l1440:
 27640  016420  B4C5               	btfsc	4037,2,c	;volatile
 27641  016422  D7FE               	goto	l1440
 27642                           
 27643                           ;I2C.c: 364: return ( -2 );
 27644  016424  0EFE               	movlw	254
 27645  016426  0012               	return	
 27646  016428                     l1413:
 27647                           
 27648                           ;I2C.c: 367: else
 27649                           ;I2C.c: 368: {
 27650                           ;I2C.c: 369: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27651  016428  84C5               	bsf	4037,2,c	;volatile
 27652  01642A                     l1444:
 27653  01642A  B4C5               	btfsc	4037,2,c	;volatile
 27654  01642C  D7FE               	goto	l1444
 27655                           
 27656                           ;I2C.c: 370: return ( -2 );
 27657  01642E  0EFE               	movlw	254
 27658  016430  0012               	return	
 27659  016432                     l1408:
 27660                           
 27661                           ;I2C.c: 373: else
 27662                           ;I2C.c: 374: {
 27663                           ;I2C.c: 375: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
 27664  016432  84C5               	bsf	4037,2,c	;volatile
 27665  016434                     l1448:
 27666  016434  B4C5               	btfsc	4037,2,c	;volatile
 27667  016436  D7FE               	goto	l1448
 27668                           
 27669                           ;I2C.c: 376: return ( -2 );
 27670  016438  0EFE               	movlw	254
 27671  01643A  0012               	return	
 27672  01643C                     l11330:
 27673                           
 27674                           ;I2C.c: 377: }
 27675                           ;I2C.c: 378: }
 27676                           ;I2C.c: 379: return ( 0 );
 27677  01643C  0E00               	movlw	0
 27678  01643E  0012               	return	
 27679  016440                     __end_of_I2C_Read_Sequential:
 27680                           	opt stack 0
 27681                           tblptru	equ	0xFF8
 27682                           tblptrh	equ	0xFF7
 27683                           tblptrl	equ	0xFF6
 27684                           tablat	equ	0xFF5
 27685                           prodh	equ	0xFF4
 27686                           prodl	equ	0xFF3
 27687                           intcon	equ	0xFF2
 27688                           postinc0	equ	0xFEE
 27689                           wreg	equ	0xFE8
 27690                           indf1	equ	0xFE7
 27691                           postinc1	equ	0xFE6
 27692                           postdec1	equ	0xFE5
 27693                           fsr1h	equ	0xFE2
 27694                           fsr1l	equ	0xFE1
 27695                           indf2	equ	0xFDF
 27696                           postinc2	equ	0xFDE
 27697                           postdec2	equ	0xFDD
 27698                           fsr2h	equ	0xFDA
 27699                           fsr2l	equ	0xFD9
 27700                           status	equ	0xFD8
 27701                           
 27702 ;; *************** function _WriteI2C *****************
 27703 ;; Defined at:
 27704 ;;		line 119 in file "I2C.c"
 27705 ;; Parameters:    Size  Location     Type
 27706 ;;  data_out        1    wreg     unsigned char 
 27707 ;; Auto vars:     Size  Location     Type
 27708 ;;  data_out        1   16[BANK1 ] unsigned char 
 27709 ;; Return value:  Size  Location     Type
 27710 ;;                  1    wreg      char 
 27711 ;; Registers used:
 27712 ;;		wreg, status,2, status,0, cstack
 27713 ;; Tracked objects:
 27714 ;;		On entry : 0/0
 27715 ;;		On exit  : 0/0
 27716 ;;		Unchanged: 0/0
 27717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27719 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27720 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27721 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 27722 ;;Total ram usage:        2 bytes
 27723 ;; Hardware stack levels used:    1
 27724 ;; Hardware stack levels required when called:    7
 27725 ;; This function calls:
 27726 ;;		_IdleI2C
 27727 ;; This function is called by:
 27728 ;;		_I2C_Write_At_Address
 27729 ;;		_I2C_Read_At_Address
 27730 ;;		_I2C_Read_Sequential
 27731 ;; This function uses a non-reentrant model
 27732 ;;
 27733                           
 27734                           	psect	text66
 27735  017032                     __ptext66:
 27736                           	opt stack 0
 27737  017032                     _WriteI2C:
 27738                           	opt stack 19
 27739                           
 27740                           ;incstack = 0
 27741                           ;WriteI2C@data_out stored from wreg
 27742  017032  0101               	movlb	1	; () banked
 27743  017034  6F7E               	movwf	WriteI2C@data_out& (0+255),b
 27744                           
 27745                           ; BSR set to: 1
 27746                           ;I2C.c: 121: SSPBUF = data_out;
 27747  017036  C17E  FFC9         	movff	WriteI2C@data_out,4041	;volatile
 27748                           
 27749                           ; BSR set to: 1
 27750                           ;I2C.c: 122: if ( SSPCON1bits.WCOL )
 27751  01703A  AEC6               	btfss	4038,7,c	;volatile
 27752  01703C  D002               	goto	l10404
 27753                           
 27754                           ; BSR set to: 1
 27755                           ;I2C.c: 123: return ( -1 );
 27756  01703E  0EFF               	movlw	255
 27757  017040  0012               	return	
 27758  017042                     l10404:
 27759                           
 27760                           ; BSR set to: 1
 27761                           ;I2C.c: 124: else
 27762                           ;I2C.c: 125: {
 27763                           ;I2C.c: 126: if( ((SSPCON1&0x0F)!=0x08) && ((SSPCON1&0x0F)!=0x0B) )
 27764  017042  CFC6 F17D          	movff	4038,??_WriteI2C	;volatile
 27765  017046  0E0F               	movlw	15
 27766  017048  0101               	movlb	1	; () banked
 27767  01704A  177D               	andwf	??_WriteI2C& (0+255),f,b
 27768  01704C  0101               	movlb	1	; () banked
 27769  01704E  517D               	movf	??_WriteI2C& (0+255),w,b
 27770  017050  0A08               	xorlw	8
 27771  017052  B4D8               	btfsc	status,2,c
 27772  017054  D014               	goto	l10422
 27773                           
 27774                           ; BSR set to: 1
 27775  017056  CFC6 F17D          	movff	4038,??_WriteI2C	;volatile
 27776  01705A  0E0F               	movlw	15
 27777  01705C  0101               	movlb	1	; () banked
 27778  01705E  177D               	andwf	??_WriteI2C& (0+255),f,b
 27779  017060  0101               	movlb	1	; () banked
 27780  017062  517D               	movf	??_WriteI2C& (0+255),w,b
 27781  017064  0A0B               	xorlw	11
 27782  017066  B4D8               	btfsc	status,2,c
 27783  017068  D00A               	goto	l10422
 27784                           
 27785                           ; BSR set to: 1
 27786                           ;I2C.c: 127: {
 27787                           ;I2C.c: 128: SSPCON1bits.CKP = 1;
 27788  01706A  88C6               	bsf	4038,4,c	;volatile
 27789  01706C                     l1277:
 27790                           
 27791                           ; BSR set to: 1
 27792  01706C  A69E               	btfss	3998,3,c	;volatile
 27793  01706E  D7FE               	goto	l1277
 27794                           
 27795                           ; BSR set to: 1
 27796                           ;I2C.c: 131: if ( ( !SSPSTATbits.R_W ) && ( !SSPSTATbits.BF ) )
 27797  017070  A4C7               	btfss	4039,2,c	;volatile
 27798                           
 27799                           ; BSR set to: 1
 27800  017072  B0C7               	btfsc	4039,0,c	;volatile
 27801  017074  D002               	goto	l10418
 27802                           
 27803                           ; BSR set to: 1
 27804                           ;I2C.c: 132: {
 27805                           ;I2C.c: 133: return ( -2 );
 27806  017076  0EFE               	movlw	254
 27807  017078  0012               	return	
 27808  01707A                     l10418:
 27809                           
 27810                           ; BSR set to: 1
 27811                           ;I2C.c: 135: else
 27812                           ;I2C.c: 136: {
 27813                           ;I2C.c: 137: return ( 0 );
 27814  01707A  0E00               	movlw	0
 27815  01707C  0012               	return	
 27816  01707E                     l10422:
 27817                           
 27818                           ; BSR set to: 1
 27819                           ;I2C.c: 140: else if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 27820  01707E  CFC6 F17D          	movff	4038,??_WriteI2C	;volatile
 27821  017082  0E0F               	movlw	15
 27822  017084  0101               	movlb	1	; () banked
 27823  017086  177D               	andwf	??_WriteI2C& (0+255),f,b
 27824  017088  0101               	movlb	1	; () banked
 27825  01708A  517D               	movf	??_WriteI2C& (0+255),w,b
 27826  01708C  0A08               	xorlw	8
 27827  01708E  B4D8               	btfsc	status,2,c
 27828  017090  D00A               	goto	l1286
 27829                           
 27830                           ; BSR set to: 1
 27831  017092  CFC6 F17D          	movff	4038,??_WriteI2C	;volatile
 27832  017096  0E0F               	movlw	15
 27833  017098  0101               	movlb	1	; () banked
 27834  01709A  177D               	andwf	??_WriteI2C& (0+255),f,b
 27835  01709C  0101               	movlb	1	; () banked
 27836  01709E  517D               	movf	??_WriteI2C& (0+255),w,b
 27837  0170A0  0A0B               	xorlw	11
 27838  0170A2  A4D8               	btfss	status,2,c
 27839  0170A4  D00A               	goto	l10440
 27840  0170A6                     l1286:
 27841                           
 27842                           ; BSR set to: 1
 27843  0170A6  B0C7               	btfsc	4039,0,c	;volatile
 27844  0170A8  D7FE               	goto	l1286
 27845                           
 27846                           ; BSR set to: 1
 27847                           ;I2C.c: 143: IdleI2C();
 27848                           
 27849                           ; BSR set to: 1
 27850  0170AA  EC73  F003         	call	_IdleI2C	;wreg free
 27851                           
 27852                           ;I2C.c: 144: if ( SSPCON2bits.ACKSTAT )
 27853  0170AE  ACC5               	btfss	4037,6,c	;volatile
 27854  0170B0  D002               	goto	l10436
 27855                           
 27856                           ;I2C.c: 145: return ( -2 );
 27857  0170B2  0EFE               	movlw	254
 27858  0170B4  0012               	return	
 27859  0170B6                     l10436:
 27860                           
 27861                           ;I2C.c: 146: else return ( 0 );
 27862  0170B6  0E00               	movlw	0
 27863  0170B8  0012               	return	
 27864  0170BA                     l10440:
 27865                           
 27866                           ;I2C.c: 148: else
 27867                           ;I2C.c: 149: {
 27868                           ;I2C.c: 150: return (-4);
 27869  0170BA  0EFC               	movlw	252
 27870  0170BC  0012               	return	
 27871  0170BE                     __end_of_WriteI2C:
 27872                           	opt stack 0
 27873                           tblptru	equ	0xFF8
 27874                           tblptrh	equ	0xFF7
 27875                           tblptrl	equ	0xFF6
 27876                           tablat	equ	0xFF5
 27877                           prodh	equ	0xFF4
 27878                           prodl	equ	0xFF3
 27879                           intcon	equ	0xFF2
 27880                           postinc0	equ	0xFEE
 27881                           wreg	equ	0xFE8
 27882                           indf1	equ	0xFE7
 27883                           postinc1	equ	0xFE6
 27884                           postdec1	equ	0xFE5
 27885                           fsr1h	equ	0xFE2
 27886                           fsr1l	equ	0xFE1
 27887                           indf2	equ	0xFDF
 27888                           postinc2	equ	0xFDE
 27889                           postdec2	equ	0xFDD
 27890                           fsr2h	equ	0xFDA
 27891                           fsr2l	equ	0xFD9
 27892                           status	equ	0xFD8
 27893                           
 27894 ;; *************** function _IdleI2C *****************
 27895 ;; Defined at:
 27896 ;;		line 108 in file "I2C.c"
 27897 ;; Parameters:    Size  Location     Type
 27898 ;;		None
 27899 ;; Auto vars:     Size  Location     Type
 27900 ;;		None
 27901 ;; Return value:  Size  Location     Type
 27902 ;;		None               void
 27903 ;; Registers used:
 27904 ;;		wreg, status,2, status,0
 27905 ;; Tracked objects:
 27906 ;;		On entry : 0/0
 27907 ;;		On exit  : 0/0
 27908 ;;		Unchanged: 0/0
 27909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27912 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27913 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27914 ;;Total ram usage:        1 bytes
 27915 ;; Hardware stack levels used:    1
 27916 ;; Hardware stack levels required when called:    6
 27917 ;; This function calls:
 27918 ;;		Nothing
 27919 ;; This function is called by:
 27920 ;;		_WriteI2C
 27921 ;;		_I2C_Write_At_Address
 27922 ;;		_I2C_Read_At_Address
 27923 ;;		_I2C_Read_Sequential
 27924 ;; This function uses a non-reentrant model
 27925 ;;
 27926                           
 27927                           	psect	text67
 27928  0006E6                     __ptext67:
 27929                           	opt stack 0
 27930  0006E6                     _IdleI2C:
 27931                           	opt stack 19
 27932  0006E6                     l10170:
 27933  0006E6  CFC5 F17C          	movff	4037,??_IdleI2C	;volatile
 27934  0006EA  0E1F               	movlw	31
 27935  0006EC  0101               	movlb	1	; () banked
 27936  0006EE  177C               	andwf	??_IdleI2C& (0+255),f,b
 27937  0006F0  B4D8               	btfsc	status,2,c
 27938                           
 27939                           ; BSR set to: 1
 27940  0006F2  B4C7               	btfsc	4039,2,c	;volatile
 27941  0006F4  D7F8               	goto	l10170
 27942                           
 27943                           ; BSR set to: 1
 27944                           
 27945                           ; BSR set to: 1
 27946  0006F6  0012               	return	
 27947  0006F8                     __end_of_IdleI2C:
 27948                           	opt stack 0
 27949                           tblptru	equ	0xFF8
 27950                           tblptrh	equ	0xFF7
 27951                           tblptrl	equ	0xFF6
 27952                           tablat	equ	0xFF5
 27953                           prodh	equ	0xFF4
 27954                           prodl	equ	0xFF3
 27955                           intcon	equ	0xFF2
 27956                           postinc0	equ	0xFEE
 27957                           wreg	equ	0xFE8
 27958                           indf1	equ	0xFE7
 27959                           postinc1	equ	0xFE6
 27960                           postdec1	equ	0xFE5
 27961                           fsr1h	equ	0xFE2
 27962                           fsr1l	equ	0xFE1
 27963                           indf2	equ	0xFDF
 27964                           postinc2	equ	0xFDE
 27965                           postdec2	equ	0xFDD
 27966                           fsr2h	equ	0xFDA
 27967                           fsr2l	equ	0xFD9
 27968                           status	equ	0xFD8
 27969                           
 27970 ;; *************** function _Multiple_I2C_Read *****************
 27971 ;; Defined at:
 27972 ;;		line 387 in file "I2C.c"
 27973 ;; Parameters:    Size  Location     Type
 27974 ;;  rdptr           2   15[BANK1 ] PTR unsigned char 
 27975 ;;		 -> READ_RTC_TIME@temp(7), 
 27976 ;;  length          1   17[BANK1 ] unsigned char 
 27977 ;; Auto vars:     Size  Location     Type
 27978 ;;		None
 27979 ;; Return value:  Size  Location     Type
 27980 ;;                  1    wreg      unsigned char 
 27981 ;; Registers used:
 27982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27983 ;; Tracked objects:
 27984 ;;		On entry : 0/0
 27985 ;;		On exit  : 0/0
 27986 ;;		Unchanged: 0/0
 27987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 27988 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 27989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 27990 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 27991 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 27992 ;;Total ram usage:        4 bytes
 27993 ;; Hardware stack levels used:    1
 27994 ;; Hardware stack levels required when called:    7
 27995 ;; This function calls:
 27996 ;;		_readI2C
 27997 ;; This function is called by:
 27998 ;;		_I2C_Read_Sequential
 27999 ;; This function uses a non-reentrant model
 28000 ;;
 28001                           
 28002                           	psect	text68
 28003  01769E                     __ptext68:
 28004                           	opt stack 0
 28005  01769E                     _Multiple_I2C_Read:
 28006                           	opt stack 19
 28007                           
 28008                           ;I2C.c: 389: while ( length-- )
 28009                           
 28010                           ; BSR set to: 1
 28011                           ;incstack = 0
 28012  01769E  D02C               	goto	l10462
 28013  0176A0                     l10446:
 28014                           
 28015                           ;I2C.c: 390: {
 28016                           ;I2C.c: 391: *rdptr++ = readI2C();
 28017  0176A0  EC52  F002         	call	_readI2C	;wreg free
 28018  0176A4  C17D  FFD9         	movff	Multiple_I2C_Read@rdptr,fsr2l
 28019  0176A8  C17E  FFDA         	movff	Multiple_I2C_Read@rdptr+1,fsr2h
 28020  0176AC  6EDF               	movwf	indf2,c
 28021  0176AE  0101               	movlb	1	; () banked
 28022  0176B0  4B7D               	infsnz	Multiple_I2C_Read@rdptr& (0+255),f,b
 28023  0176B2  2B7E               	incf	(Multiple_I2C_Read@rdptr+1)& (0+255),f,b
 28024  0176B4                     l1455:
 28025  0176B4  B6C5               	btfsc	4037,3,c	;volatile
 28026  0176B6  D7FE               	goto	l1455
 28027                           
 28028                           ;I2C.c: 394: if ( PIR2bits.BCLIF )
 28029  0176B8  A6A1               	btfss	4001,3,c	;volatile
 28030  0176BA  D002               	goto	l10454
 28031                           
 28032                           ;I2C.c: 395: {
 28033                           ;I2C.c: 396: return ( -1 );
 28034  0176BC  0EFF               	movlw	255
 28035  0176BE  0012               	return	
 28036  0176C0                     l10454:
 28037                           
 28038                           ;I2C.c: 397: }
 28039                           ;I2C.c: 399: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 28040  0176C0  CFC6 F180          	movff	4038,??_Multiple_I2C_Read	;volatile
 28041  0176C4  0E0F               	movlw	15
 28042  0176C6  0101               	movlb	1	; () banked
 28043  0176C8  1780               	andwf	??_Multiple_I2C_Read& (0+255),f,b
 28044  0176CA  0101               	movlb	1	; () banked
 28045  0176CC  5180               	movf	??_Multiple_I2C_Read& (0+255),w,b
 28046  0176CE  0A08               	xorlw	8
 28047  0176D0  B4D8               	btfsc	status,2,c
 28048  0176D2  D00A               	goto	l10458
 28049                           
 28050                           ; BSR set to: 1
 28051  0176D4  CFC6 F180          	movff	4038,??_Multiple_I2C_Read	;volatile
 28052  0176D8  0E0F               	movlw	15
 28053  0176DA  0101               	movlb	1	; () banked
 28054  0176DC  1780               	andwf	??_Multiple_I2C_Read& (0+255),f,b
 28055  0176DE  0101               	movlb	1	; () banked
 28056  0176E0  5180               	movf	??_Multiple_I2C_Read& (0+255),w,b
 28057  0176E2  0A0B               	xorlw	11
 28058  0176E4  A4D8               	btfss	status,2,c
 28059  0176E6  D008               	goto	l10462
 28060  0176E8                     l10458:
 28061                           
 28062                           ; BSR set to: 1
 28063                           ;I2C.c: 400: {
 28064                           ;I2C.c: 401: if ( length )
 28065  0176E8  0101               	movlb	1	; () banked
 28066  0176EA  517F               	movf	Multiple_I2C_Read@length& (0+255),w,b
 28067  0176EC  B4D8               	btfsc	status,2,c
 28068  0176EE  D004               	goto	l10462
 28069                           
 28070                           ; BSR set to: 1
 28071                           ;I2C.c: 402: {
 28072                           ;I2C.c: 403: SSPCON2bits.ACKDT = 0;
 28073  0176F0  9AC5               	bcf	4037,5,c	;volatile
 28074                           
 28075                           ;I2C.c: 404: SSPCON2bits.ACKEN = 1;
 28076  0176F2  88C5               	bsf	4037,4,c	;volatile
 28077  0176F4                     l1464:
 28078  0176F4  B8C5               	btfsc	4037,4,c	;volatile
 28079  0176F6  D7FE               	goto	l1464
 28080  0176F8                     l10462:
 28081  0176F8  0101               	movlb	1	; () banked
 28082  0176FA  077F               	decf	Multiple_I2C_Read@length& (0+255),f,b
 28083  0176FC  0101               	movlb	1	; () banked
 28084  0176FE  297F               	incf	Multiple_I2C_Read@length& (0+255),w,b
 28085  017700  A4D8               	btfss	status,2,c
 28086  017702  D7CE               	goto	l10446
 28087                           
 28088                           ; BSR set to: 1
 28089                           ;I2C.c: 406: }
 28090                           ;I2C.c: 407: }
 28091                           ;I2C.c: 409: }
 28092                           ;I2C.c: 410: return ( 0 );
 28093                           
 28094                           ; BSR set to: 1
 28095  017704  0E00               	movlw	0
 28096  017706  0012               	return	
 28097  017708                     __end_of_Multiple_I2C_Read:
 28098                           	opt stack 0
 28099                           tblptru	equ	0xFF8
 28100                           tblptrh	equ	0xFF7
 28101                           tblptrl	equ	0xFF6
 28102                           tablat	equ	0xFF5
 28103                           prodh	equ	0xFF4
 28104                           prodl	equ	0xFF3
 28105                           intcon	equ	0xFF2
 28106                           postinc0	equ	0xFEE
 28107                           wreg	equ	0xFE8
 28108                           indf1	equ	0xFE7
 28109                           postinc1	equ	0xFE6
 28110                           postdec1	equ	0xFE5
 28111                           fsr1h	equ	0xFE2
 28112                           fsr1l	equ	0xFE1
 28113                           indf2	equ	0xFDF
 28114                           postinc2	equ	0xFDE
 28115                           postdec2	equ	0xFDD
 28116                           fsr2h	equ	0xFDA
 28117                           fsr2l	equ	0xFD9
 28118                           status	equ	0xFD8
 28119                           
 28120 ;; *************** function _readI2C *****************
 28121 ;; Defined at:
 28122 ;;		line 418 in file "I2C.c"
 28123 ;; Parameters:    Size  Location     Type
 28124 ;;		None
 28125 ;; Auto vars:     Size  Location     Type
 28126 ;;		None
 28127 ;; Return value:  Size  Location     Type
 28128 ;;                  1    wreg      unsigned char 
 28129 ;; Registers used:
 28130 ;;		wreg, status,2, status,0
 28131 ;; Tracked objects:
 28132 ;;		On entry : 0/0
 28133 ;;		On exit  : 0/0
 28134 ;;		Unchanged: 0/0
 28135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 28138 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28139 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28140 ;;Total ram usage:        1 bytes
 28141 ;; Hardware stack levels used:    1
 28142 ;; Hardware stack levels required when called:    6
 28143 ;; This function calls:
 28144 ;;		Nothing
 28145 ;; This function is called by:
 28146 ;;		_Multiple_I2C_Read
 28147 ;; This function uses a non-reentrant model
 28148 ;;
 28149                           
 28150                           	psect	text69
 28151  0004A4                     __ptext69:
 28152                           	opt stack 0
 28153  0004A4                     _readI2C:
 28154                           	opt stack 19
 28155                           
 28156                           ;I2C.c: 420: if( ((SSPCON1&0x0F)==0x08) || ((SSPCON1&0x0F)==0x0B) )
 28157                           
 28158                           ;incstack = 0
 28159  0004A4  CFC6 F17C          	movff	4038,??_readI2C	;volatile
 28160  0004A8  0E0F               	movlw	15
 28161  0004AA  0101               	movlb	1	; () banked
 28162  0004AC  177C               	andwf	??_readI2C& (0+255),f,b
 28163  0004AE  0101               	movlb	1	; () banked
 28164  0004B0  517C               	movf	??_readI2C& (0+255),w,b
 28165  0004B2  0A08               	xorlw	8
 28166  0004B4  B4D8               	btfsc	status,2,c
 28167  0004B6  D009               	goto	l1472
 28168                           
 28169                           ; BSR set to: 1
 28170  0004B8  CFC6 F17C          	movff	4038,??_readI2C	;volatile
 28171  0004BC  0E0F               	movlw	15
 28172  0004BE  0101               	movlb	1	; () banked
 28173  0004C0  177C               	andwf	??_readI2C& (0+255),f,b
 28174  0004C2  0101               	movlb	1	; () banked
 28175  0004C4  517C               	movf	??_readI2C& (0+255),w,b
 28176  0004C6  0A0B               	xorlw	11
 28177  0004C8  B4D8               	btfsc	status,2,c
 28178  0004CA                     l1472:
 28179                           
 28180                           ; BSR set to: 1
 28181                           ;I2C.c: 421: SSPCON2bits.RCEN = 1;
 28182  0004CA  86C5               	bsf	4037,3,c	;volatile
 28183  0004CC                     l1473:
 28184  0004CC  A0C7               	btfss	4039,0,c	;volatile
 28185  0004CE  D7FE               	goto	l1473
 28186                           
 28187                           ;I2C.c: 423: return ( SSPBUF );
 28188  0004D0  50C9               	movf	4041,w,c	;volatile
 28189  0004D2  0012               	return	
 28190  0004D4                     __end_of_readI2C:
 28191                           	opt stack 0
 28192                           tblptru	equ	0xFF8
 28193                           tblptrh	equ	0xFF7
 28194                           tblptrl	equ	0xFF6
 28195                           tablat	equ	0xFF5
 28196                           prodh	equ	0xFF4
 28197                           prodl	equ	0xFF3
 28198                           intcon	equ	0xFF2
 28199                           postinc0	equ	0xFEE
 28200                           wreg	equ	0xFE8
 28201                           indf1	equ	0xFE7
 28202                           postinc1	equ	0xFE6
 28203                           postdec1	equ	0xFE5
 28204                           fsr1h	equ	0xFE2
 28205                           fsr1l	equ	0xFE1
 28206                           indf2	equ	0xFDF
 28207                           postinc2	equ	0xFDE
 28208                           postdec2	equ	0xFDD
 28209                           fsr2h	equ	0xFDA
 28210                           fsr2l	equ	0xFD9
 28211                           status	equ	0xFD8
 28212                           
 28213 ;; *************** function _Parse_Time *****************
 28214 ;; Defined at:
 28215 ;;		line 279 in file "RTC.c"
 28216 ;; Parameters:    Size  Location     Type
 28217 ;;  This            2   14[BANK1 ] PTR unsigned char 
 28218 ;;		 -> Rxdata(100), 
 28219 ;; Auto vars:     Size  Location     Type
 28220 ;;  TempTime        9   18[BANK1 ] struct TIME
 28221 ;;  temp            1   17[BANK1 ] unsigned char 
 28222 ;; Return value:  Size  Location     Type
 28223 ;;                  1    wreg      unsigned char 
 28224 ;; Registers used:
 28225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28226 ;; Tracked objects:
 28227 ;;		On entry : 0/0
 28228 ;;		On exit  : 0/0
 28229 ;;		Unchanged: 0/0
 28230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 28231 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 28232 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 28233 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 28234 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 28235 ;;Total ram usage:       13 bytes
 28236 ;; Hardware stack levels used:    1
 28237 ;; Hardware stack levels required when called:    6
 28238 ;; This function calls:
 28239 ;;		Nothing
 28240 ;; This function is called by:
 28241 ;;		_Command
 28242 ;; This function uses a non-reentrant model
 28243 ;;
 28244                           
 28245                           	psect	text70
 28246  013BCE                     __ptext70:
 28247                           	opt stack 0
 28248  013BCE                     _Parse_Time:
 28249                           	opt stack 22
 28250                           
 28251                           ;RTC.c: 281: TIME TempTime;
 28252                           ;RTC.c: 282: unsigned char temp = 0;
 28253                           
 28254                           ;incstack = 0
 28255  013BCE  0E00               	movlw	0
 28256  013BD0  0101               	movlb	1	; () banked
 28257  013BD2  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28258                           
 28259                           ; BSR set to: 1
 28260                           ;RTC.c: 284: if(*This != 0 && *This == ' ')
 28261  013BD4  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28262  013BD8  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28263  013BDC  50DF               	movf	indf2,w,c
 28264  013BDE  B4D8               	btfsc	status,2,c
 28265  013BE0  D00A               	goto	l12124
 28266                           
 28267                           ; BSR set to: 1
 28268  013BE2  0E20               	movlw	32
 28269  013BE4  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28270  013BE8  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28271  013BEC  62DF               	cpfseq	indf2,c
 28272  013BEE  D003               	goto	l12124
 28273                           
 28274                           ; BSR set to: 1
 28275                           ;RTC.c: 285: {
 28276                           ;RTC.c: 286: This++;
 28277  013BF0  0101               	movlb	1	; () banked
 28278  013BF2  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28279  013BF4  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28280  013BF6                     l12124:
 28281                           
 28282                           ; BSR set to: 1
 28283                           ;RTC.c: 287: }
 28284                           ;RTC.c: 290: if (*This >= 48 && *This <= 57)
 28285  013BF6  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28286  013BFA  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28287  013BFE  0E2F               	movlw	47
 28288  013C00  64DF               	cpfsgt	indf2,c
 28289  013C02  D018               	goto	l12132
 28290                           
 28291                           ; BSR set to: 1
 28292  013C04  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28293  013C08  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28294  013C0C  50DF               	movf	indf2,w,c
 28295  013C0E  0101               	movlb	1	; () banked
 28296  013C10  6F7E               	movwf	??_Parse_Time& (0+255),b
 28297  013C12  0E3A               	movlw	58
 28298  013C14  0101               	movlb	1	; () banked
 28299  013C16  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 28300  013C18  B0D8               	btfsc	status,0,c
 28301  013C1A  D00C               	goto	l12132
 28302                           
 28303                           ; BSR set to: 1
 28304                           ;RTC.c: 291: {
 28305                           ;RTC.c: 292: temp = *This - 48;
 28306  013C1C  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28307  013C20  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28308  013C24  50DF               	movf	indf2,w,c
 28309  013C26  0FD0               	addlw	208
 28310  013C28  0101               	movlb	1	; () banked
 28311  013C2A  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28312                           
 28313                           ; BSR set to: 1
 28314                           ;RTC.c: 293: This++;
 28315  013C2C  0101               	movlb	1	; () banked
 28316  013C2E  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28317  013C30  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28318                           
 28319                           ;RTC.c: 294: }
 28320  013C32  D002               	goto	l12136
 28321  013C34                     l12132:
 28322                           
 28323                           ; BSR set to: 1
 28324                           ;RTC.c: 295: else
 28325                           ;RTC.c: 296: {
 28326                           ;RTC.c: 297: return 0;
 28327  013C34  0E00               	movlw	0
 28328  013C36  0012               	return	
 28329  013C38                     l12136:
 28330                           
 28331                           ; BSR set to: 1
 28332                           ;RTC.c: 298: }
 28333                           ;RTC.c: 300: if(*This >= 48 && *This <= 57)
 28334  013C38  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28335  013C3C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28336  013C40  0E2F               	movlw	47
 28337  013C42  64DF               	cpfsgt	indf2,c
 28338  013C44  D01E               	goto	l12146
 28339                           
 28340                           ; BSR set to: 1
 28341  013C46  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28342  013C4A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28343  013C4E  50DF               	movf	indf2,w,c
 28344  013C50  0101               	movlb	1	; () banked
 28345  013C52  6F7E               	movwf	??_Parse_Time& (0+255),b
 28346  013C54  0E3A               	movlw	58
 28347  013C56  0101               	movlb	1	; () banked
 28348  013C58  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 28349  013C5A  B0D8               	btfsc	status,0,c
 28350  013C5C  D012               	goto	l12146
 28351                           
 28352                           ; BSR set to: 1
 28353                           ;RTC.c: 301: {
 28354                           ;RTC.c: 302: temp *= 10;
 28355  013C5E  0E0A               	movlw	10
 28356  013C60  0101               	movlb	1	; () banked
 28357  013C62  037F               	mulwf	Parse_Time@temp& (0+255),b
 28358  013C64  50F3               	movf	prodl,w,c
 28359  013C66  0101               	movlb	1	; () banked
 28360  013C68  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28361                           
 28362                           ; BSR set to: 1
 28363                           ;RTC.c: 303: temp += *This - 48;
 28364  013C6A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28365  013C6E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28366  013C72  50DF               	movf	indf2,w,c
 28367  013C74  0FD0               	addlw	208
 28368  013C76  0101               	movlb	1	; () banked
 28369  013C78  277F               	addwf	Parse_Time@temp& (0+255),f,b
 28370                           
 28371                           ; BSR set to: 1
 28372                           ;RTC.c: 304: This++;
 28373  013C7A  0101               	movlb	1	; () banked
 28374  013C7C  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28375  013C7E  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28376                           
 28377                           ;RTC.c: 305: }
 28378  013C80  D00A               	goto	l1170
 28379  013C82                     l12146:
 28380                           
 28381                           ; BSR set to: 1
 28382                           ;RTC.c: 306: else if(*This == '/')
 28383  013C82  0E2F               	movlw	47
 28384  013C84  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28385  013C88  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28386  013C8C  62DF               	cpfseq	indf2,c
 28387  013C8E  D001               	goto	l12150
 28388  013C90  D002               	goto	l1170
 28389  013C92                     l12150:
 28390                           
 28391                           ; BSR set to: 1
 28392                           ;RTC.c: 310: else
 28393                           ;RTC.c: 311: {
 28394                           ;RTC.c: 312: return 0;
 28395  013C92  0E00               	movlw	0
 28396  013C94  0012               	return	
 28397  013C96                     l1170:
 28398                           
 28399                           ; BSR set to: 1
 28400                           ;RTC.c: 313: }
 28401                           ;RTC.c: 314: TempTime.Month = temp;
 28402  013C96  C17F  F187         	movff	Parse_Time@temp,Parse_Time@TempTime+7
 28403                           
 28404                           ; BSR set to: 1
 28405                           ;RTC.c: 316: if(*This == '/')
 28406  013C9A  0E2F               	movlw	47
 28407  013C9C  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28408  013CA0  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28409  013CA4  62DF               	cpfseq	indf2,c
 28410  013CA6  D004               	goto	l12158
 28411                           
 28412                           ; BSR set to: 1
 28413                           ;RTC.c: 317: {
 28414                           ;RTC.c: 318: This++;
 28415  013CA8  0101               	movlb	1	; () banked
 28416  013CAA  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28417  013CAC  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28418                           
 28419                           ;RTC.c: 319: }
 28420  013CAE  D002               	goto	l12162
 28421  013CB0                     l12158:
 28422                           
 28423                           ; BSR set to: 1
 28424                           ;RTC.c: 320: else
 28425                           ;RTC.c: 321: {
 28426                           ;RTC.c: 322: return 0;
 28427  013CB0  0E00               	movlw	0
 28428  013CB2  0012               	return	
 28429  013CB4                     l12162:
 28430                           
 28431                           ; BSR set to: 1
 28432                           ;RTC.c: 323: }
 28433                           ;RTC.c: 326: if (*This >= 48 && *This <= 57)
 28434  013CB4  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28435  013CB8  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28436  013CBC  0E2F               	movlw	47
 28437  013CBE  64DF               	cpfsgt	indf2,c
 28438  013CC0  D018               	goto	l12170
 28439                           
 28440                           ; BSR set to: 1
 28441  013CC2  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28442  013CC6  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28443  013CCA  50DF               	movf	indf2,w,c
 28444  013CCC  0101               	movlb	1	; () banked
 28445  013CCE  6F7E               	movwf	??_Parse_Time& (0+255),b
 28446  013CD0  0E3A               	movlw	58
 28447  013CD2  0101               	movlb	1	; () banked
 28448  013CD4  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 28449  013CD6  B0D8               	btfsc	status,0,c
 28450  013CD8  D00C               	goto	l12170
 28451                           
 28452                           ; BSR set to: 1
 28453                           ;RTC.c: 327: {
 28454                           ;RTC.c: 328: temp = *This - 48;
 28455  013CDA  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28456  013CDE  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28457  013CE2  50DF               	movf	indf2,w,c
 28458  013CE4  0FD0               	addlw	208
 28459  013CE6  0101               	movlb	1	; () banked
 28460  013CE8  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28461                           
 28462                           ; BSR set to: 1
 28463                           ;RTC.c: 329: This++;
 28464  013CEA  0101               	movlb	1	; () banked
 28465  013CEC  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28466  013CEE  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28467                           
 28468                           ;RTC.c: 330: }
 28469  013CF0  D002               	goto	l12174
 28470  013CF2                     l12170:
 28471                           
 28472                           ; BSR set to: 1
 28473                           ;RTC.c: 331: else
 28474                           ;RTC.c: 332: {
 28475                           ;RTC.c: 333: return 0;
 28476  013CF2  0E00               	movlw	0
 28477  013CF4  0012               	return	
 28478  013CF6                     l12174:
 28479                           
 28480                           ; BSR set to: 1
 28481                           ;RTC.c: 334: }
 28482                           ;RTC.c: 336: if(*This >= 48 && *This <= 57)
 28483  013CF6  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28484  013CFA  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28485  013CFE  0E2F               	movlw	47
 28486  013D00  64DF               	cpfsgt	indf2,c
 28487  013D02  D01E               	goto	l12184
 28488                           
 28489                           ; BSR set to: 1
 28490  013D04  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28491  013D08  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28492  013D0C  50DF               	movf	indf2,w,c
 28493  013D0E  0101               	movlb	1	; () banked
 28494  013D10  6F7E               	movwf	??_Parse_Time& (0+255),b
 28495  013D12  0E3A               	movlw	58
 28496  013D14  0101               	movlb	1	; () banked
 28497  013D16  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 28498  013D18  B0D8               	btfsc	status,0,c
 28499  013D1A  D012               	goto	l12184
 28500                           
 28501                           ; BSR set to: 1
 28502                           ;RTC.c: 337: {
 28503                           ;RTC.c: 338: temp *= 10;
 28504  013D1C  0E0A               	movlw	10
 28505  013D1E  0101               	movlb	1	; () banked
 28506  013D20  037F               	mulwf	Parse_Time@temp& (0+255),b
 28507  013D22  50F3               	movf	prodl,w,c
 28508  013D24  0101               	movlb	1	; () banked
 28509  013D26  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28510                           
 28511                           ; BSR set to: 1
 28512                           ;RTC.c: 339: temp += *This - 48;
 28513  013D28  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28514  013D2C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28515  013D30  50DF               	movf	indf2,w,c
 28516  013D32  0FD0               	addlw	208
 28517  013D34  0101               	movlb	1	; () banked
 28518  013D36  277F               	addwf	Parse_Time@temp& (0+255),f,b
 28519                           
 28520                           ; BSR set to: 1
 28521                           ;RTC.c: 340: This++;
 28522  013D38  0101               	movlb	1	; () banked
 28523  013D3A  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28524  013D3C  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28525                           
 28526                           ;RTC.c: 341: }
 28527  013D3E  D00A               	goto	l1178
 28528  013D40                     l12184:
 28529                           
 28530                           ; BSR set to: 1
 28531                           ;RTC.c: 342: else if(*This == '/')
 28532  013D40  0E2F               	movlw	47
 28533  013D42  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28534  013D46  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28535  013D4A  62DF               	cpfseq	indf2,c
 28536  013D4C  D001               	goto	l12188
 28537  013D4E  D002               	goto	l1178
 28538  013D50                     l12188:
 28539                           
 28540                           ; BSR set to: 1
 28541                           ;RTC.c: 346: else
 28542                           ;RTC.c: 347: {
 28543                           ;RTC.c: 348: return 0;
 28544  013D50  0E00               	movlw	0
 28545  013D52  0012               	return	
 28546  013D54                     l1178:
 28547                           
 28548                           ; BSR set to: 1
 28549                           ;RTC.c: 349: }
 28550                           ;RTC.c: 350: TempTime.Date = temp;
 28551  013D54  C17F  F186         	movff	Parse_Time@temp,Parse_Time@TempTime+6
 28552                           
 28553                           ; BSR set to: 1
 28554                           ;RTC.c: 352: if(*This == '/')
 28555  013D58  0E2F               	movlw	47
 28556  013D5A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28557  013D5E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28558  013D62  62DF               	cpfseq	indf2,c
 28559  013D64  D004               	goto	l12196
 28560                           
 28561                           ; BSR set to: 1
 28562                           ;RTC.c: 353: {
 28563                           ;RTC.c: 354: This++;
 28564  013D66  0101               	movlb	1	; () banked
 28565  013D68  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28566  013D6A  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28567                           
 28568                           ;RTC.c: 355: }
 28569  013D6C  D002               	goto	l12200
 28570  013D6E                     l12196:
 28571                           
 28572                           ; BSR set to: 1
 28573                           ;RTC.c: 356: else
 28574                           ;RTC.c: 357: {
 28575                           ;RTC.c: 358: return 0;
 28576  013D6E  0E00               	movlw	0
 28577  013D70  0012               	return	
 28578  013D72                     l12200:
 28579                           
 28580                           ; BSR set to: 1
 28581                           ;RTC.c: 359: }
 28582                           ;RTC.c: 362: if (*This >= 48 && *This <= 57)
 28583  013D72  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28584  013D76  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28585  013D7A  0E2F               	movlw	47
 28586  013D7C  64DF               	cpfsgt	indf2,c
 28587  013D7E  D018               	goto	l12208
 28588                           
 28589                           ; BSR set to: 1
 28590  013D80  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28591  013D84  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28592  013D88  50DF               	movf	indf2,w,c
 28593  013D8A  0101               	movlb	1	; () banked
 28594  013D8C  6F7E               	movwf	??_Parse_Time& (0+255),b
 28595  013D8E  0E3A               	movlw	58
 28596  013D90  0101               	movlb	1	; () banked
 28597  013D92  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 28598  013D94  B0D8               	btfsc	status,0,c
 28599  013D96  D00C               	goto	l12208
 28600                           
 28601                           ; BSR set to: 1
 28602                           ;RTC.c: 363: {
 28603                           ;RTC.c: 364: temp = *This - 48;
 28604  013D98  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28605  013D9C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28606  013DA0  50DF               	movf	indf2,w,c
 28607  013DA2  0FD0               	addlw	208
 28608  013DA4  0101               	movlb	1	; () banked
 28609  013DA6  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28610                           
 28611                           ; BSR set to: 1
 28612                           ;RTC.c: 365: This++;
 28613  013DA8  0101               	movlb	1	; () banked
 28614  013DAA  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28615  013DAC  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28616                           
 28617                           ;RTC.c: 366: }
 28618  013DAE  D002               	goto	l12212
 28619  013DB0                     l12208:
 28620                           
 28621                           ; BSR set to: 1
 28622                           ;RTC.c: 367: else
 28623                           ;RTC.c: 368: {
 28624                           ;RTC.c: 369: return 0;
 28625  013DB0  0E00               	movlw	0
 28626  013DB2  0012               	return	
 28627  013DB4                     l12212:
 28628                           
 28629                           ; BSR set to: 1
 28630                           ;RTC.c: 370: }
 28631                           ;RTC.c: 371: if (*This >= 48 && *This <= 57)
 28632  013DB4  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28633  013DB8  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28634  013DBC  0E2F               	movlw	47
 28635  013DBE  64DF               	cpfsgt	indf2,c
 28636  013DC0  D01E               	goto	l12222
 28637                           
 28638                           ; BSR set to: 1
 28639  013DC2  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28640  013DC6  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28641  013DCA  50DF               	movf	indf2,w,c
 28642  013DCC  0101               	movlb	1	; () banked
 28643  013DCE  6F7E               	movwf	??_Parse_Time& (0+255),b
 28644  013DD0  0E3A               	movlw	58
 28645  013DD2  0101               	movlb	1	; () banked
 28646  013DD4  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 28647  013DD6  B0D8               	btfsc	status,0,c
 28648  013DD8  D012               	goto	l12222
 28649                           
 28650                           ; BSR set to: 1
 28651                           ;RTC.c: 372: {
 28652                           ;RTC.c: 373: temp *= 10;
 28653  013DDA  0E0A               	movlw	10
 28654  013DDC  0101               	movlb	1	; () banked
 28655  013DDE  037F               	mulwf	Parse_Time@temp& (0+255),b
 28656  013DE0  50F3               	movf	prodl,w,c
 28657  013DE2  0101               	movlb	1	; () banked
 28658  013DE4  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28659                           
 28660                           ; BSR set to: 1
 28661                           ;RTC.c: 374: temp += *This - 48;
 28662  013DE6  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28663  013DEA  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28664  013DEE  50DF               	movf	indf2,w,c
 28665  013DF0  0FD0               	addlw	208
 28666  013DF2  0101               	movlb	1	; () banked
 28667  013DF4  277F               	addwf	Parse_Time@temp& (0+255),f,b
 28668                           
 28669                           ; BSR set to: 1
 28670                           ;RTC.c: 375: This++;
 28671  013DF6  0101               	movlb	1	; () banked
 28672  013DF8  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28673  013DFA  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28674                           
 28675                           ;RTC.c: 376: }
 28676  013DFC  D002               	goto	l1186
 28677  013DFE                     l12222:
 28678                           
 28679                           ; BSR set to: 1
 28680                           ;RTC.c: 377: else
 28681                           ;RTC.c: 378: {
 28682                           ;RTC.c: 379: return 0;
 28683  013DFE  0E00               	movlw	0
 28684  013E00  0012               	return	
 28685  013E02                     l1186:
 28686                           
 28687                           ; BSR set to: 1
 28688                           ;RTC.c: 380: }
 28689                           ;RTC.c: 381: TempTime.Year = temp;
 28690  013E02  C17F  F188         	movff	Parse_Time@temp,Parse_Time@TempTime+8
 28691                           
 28692                           ; BSR set to: 1
 28693                           ;RTC.c: 383: if(*This == ' ')
 28694  013E06  0E20               	movlw	32
 28695  013E08  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28696  013E0C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28697  013E10  62DF               	cpfseq	indf2,c
 28698  013E12  D003               	goto	l12230
 28699                           
 28700                           ; BSR set to: 1
 28701                           ;RTC.c: 384: {
 28702                           ;RTC.c: 385: This++;
 28703  013E14  0101               	movlb	1	; () banked
 28704  013E16  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28705  013E18  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28706  013E1A                     l12230:
 28707                           
 28708                           ; BSR set to: 1
 28709                           ;RTC.c: 386: }
 28710                           ;RTC.c: 389: if (*This >= 48 && *This <= 57)
 28711  013E1A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28712  013E1E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28713  013E22  0E2F               	movlw	47
 28714  013E24  64DF               	cpfsgt	indf2,c
 28715  013E26  D018               	goto	l12238
 28716                           
 28717                           ; BSR set to: 1
 28718  013E28  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28719  013E2C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28720  013E30  50DF               	movf	indf2,w,c
 28721  013E32  0101               	movlb	1	; () banked
 28722  013E34  6F7E               	movwf	??_Parse_Time& (0+255),b
 28723  013E36  0E3A               	movlw	58
 28724  013E38  0101               	movlb	1	; () banked
 28725  013E3A  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 28726  013E3C  B0D8               	btfsc	status,0,c
 28727  013E3E  D00C               	goto	l12238
 28728                           
 28729                           ; BSR set to: 1
 28730                           ;RTC.c: 390: {
 28731                           ;RTC.c: 391: temp = *This - 48;
 28732  013E40  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28733  013E44  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28734  013E48  50DF               	movf	indf2,w,c
 28735  013E4A  0FD0               	addlw	208
 28736  013E4C  0101               	movlb	1	; () banked
 28737  013E4E  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28738                           
 28739                           ; BSR set to: 1
 28740                           ;RTC.c: 392: This++;
 28741  013E50  0101               	movlb	1	; () banked
 28742  013E52  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28743  013E54  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28744                           
 28745                           ;RTC.c: 393: }
 28746  013E56  D002               	goto	l12242
 28747  013E58                     l12238:
 28748                           
 28749                           ; BSR set to: 1
 28750                           ;RTC.c: 394: else
 28751                           ;RTC.c: 395: {
 28752                           ;RTC.c: 396: return 0;
 28753  013E58  0E00               	movlw	0
 28754  013E5A  0012               	return	
 28755  013E5C                     l12242:
 28756                           
 28757                           ; BSR set to: 1
 28758                           ;RTC.c: 397: }
 28759                           ;RTC.c: 399: if(*This >= 48 && *This <= 57)
 28760  013E5C  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28761  013E60  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28762  013E64  0E2F               	movlw	47
 28763  013E66  64DF               	cpfsgt	indf2,c
 28764  013E68  D01E               	goto	l12252
 28765                           
 28766                           ; BSR set to: 1
 28767  013E6A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28768  013E6E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28769  013E72  50DF               	movf	indf2,w,c
 28770  013E74  0101               	movlb	1	; () banked
 28771  013E76  6F7E               	movwf	??_Parse_Time& (0+255),b
 28772  013E78  0E3A               	movlw	58
 28773  013E7A  0101               	movlb	1	; () banked
 28774  013E7C  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 28775  013E7E  B0D8               	btfsc	status,0,c
 28776  013E80  D012               	goto	l12252
 28777                           
 28778                           ; BSR set to: 1
 28779                           ;RTC.c: 400: {
 28780                           ;RTC.c: 401: temp *= 10;
 28781  013E82  0E0A               	movlw	10
 28782  013E84  0101               	movlb	1	; () banked
 28783  013E86  037F               	mulwf	Parse_Time@temp& (0+255),b
 28784  013E88  50F3               	movf	prodl,w,c
 28785  013E8A  0101               	movlb	1	; () banked
 28786  013E8C  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28787                           
 28788                           ; BSR set to: 1
 28789                           ;RTC.c: 402: temp += *This - 48;
 28790  013E8E  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28791  013E92  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28792  013E96  50DF               	movf	indf2,w,c
 28793  013E98  0FD0               	addlw	208
 28794  013E9A  0101               	movlb	1	; () banked
 28795  013E9C  277F               	addwf	Parse_Time@temp& (0+255),f,b
 28796                           
 28797                           ; BSR set to: 1
 28798                           ;RTC.c: 403: This++;
 28799  013E9E  0101               	movlb	1	; () banked
 28800  013EA0  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28801  013EA2  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28802                           
 28803                           ;RTC.c: 404: }
 28804  013EA4  D00A               	goto	l1191
 28805  013EA6                     l12252:
 28806                           
 28807                           ; BSR set to: 1
 28808                           ;RTC.c: 405: else if(*This == ':')
 28809  013EA6  0E3A               	movlw	58
 28810  013EA8  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28811  013EAC  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28812  013EB0  62DF               	cpfseq	indf2,c
 28813  013EB2  D001               	goto	l12256
 28814  013EB4  D002               	goto	l1191
 28815  013EB6                     l12256:
 28816                           
 28817                           ; BSR set to: 1
 28818                           ;RTC.c: 409: else
 28819                           ;RTC.c: 410: {
 28820                           ;RTC.c: 411: return 0;
 28821  013EB6  0E00               	movlw	0
 28822  013EB8  0012               	return	
 28823  013EBA                     l1191:
 28824                           
 28825                           ; BSR set to: 1
 28826                           ;RTC.c: 412: }
 28827                           ;RTC.c: 413: TempTime.Hours = temp;
 28828  013EBA  C17F  F182         	movff	Parse_Time@temp,Parse_Time@TempTime+2
 28829                           
 28830                           ; BSR set to: 1
 28831                           ;RTC.c: 415: if(*This == ':')
 28832  013EBE  0E3A               	movlw	58
 28833  013EC0  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28834  013EC4  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28835  013EC8  62DF               	cpfseq	indf2,c
 28836  013ECA  D004               	goto	l12264
 28837                           
 28838                           ; BSR set to: 1
 28839                           ;RTC.c: 416: {
 28840                           ;RTC.c: 417: This++;
 28841  013ECC  0101               	movlb	1	; () banked
 28842  013ECE  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28843  013ED0  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28844                           
 28845                           ;RTC.c: 418: }
 28846  013ED2  D002               	goto	l12268
 28847  013ED4                     l12264:
 28848                           
 28849                           ; BSR set to: 1
 28850                           ;RTC.c: 419: else
 28851                           ;RTC.c: 420: {
 28852                           ;RTC.c: 421: return 0;
 28853  013ED4  0E00               	movlw	0
 28854  013ED6  0012               	return	
 28855  013ED8                     l12268:
 28856                           
 28857                           ; BSR set to: 1
 28858                           ;RTC.c: 422: }
 28859                           ;RTC.c: 425: if (*This >= 48 && *This <= 57)
 28860  013ED8  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28861  013EDC  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28862  013EE0  0E2F               	movlw	47
 28863  013EE2  64DF               	cpfsgt	indf2,c
 28864  013EE4  D018               	goto	l12276
 28865                           
 28866                           ; BSR set to: 1
 28867  013EE6  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28868  013EEA  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28869  013EEE  50DF               	movf	indf2,w,c
 28870  013EF0  0101               	movlb	1	; () banked
 28871  013EF2  6F7E               	movwf	??_Parse_Time& (0+255),b
 28872  013EF4  0E3A               	movlw	58
 28873  013EF6  0101               	movlb	1	; () banked
 28874  013EF8  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 28875  013EFA  B0D8               	btfsc	status,0,c
 28876  013EFC  D00C               	goto	l12276
 28877                           
 28878                           ; BSR set to: 1
 28879                           ;RTC.c: 426: {
 28880                           ;RTC.c: 427: temp = *This - 48;
 28881  013EFE  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28882  013F02  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28883  013F06  50DF               	movf	indf2,w,c
 28884  013F08  0FD0               	addlw	208
 28885  013F0A  0101               	movlb	1	; () banked
 28886  013F0C  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28887                           
 28888                           ; BSR set to: 1
 28889                           ;RTC.c: 428: This++;
 28890  013F0E  0101               	movlb	1	; () banked
 28891  013F10  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28892  013F12  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28893                           
 28894                           ;RTC.c: 429: }
 28895  013F14  D002               	goto	l12280
 28896  013F16                     l12276:
 28897                           
 28898                           ; BSR set to: 1
 28899                           ;RTC.c: 430: else
 28900                           ;RTC.c: 431: {
 28901                           ;RTC.c: 432: return 0;
 28902  013F16  0E00               	movlw	0
 28903  013F18  0012               	return	
 28904  013F1A                     l12280:
 28905                           
 28906                           ; BSR set to: 1
 28907                           ;RTC.c: 433: }
 28908                           ;RTC.c: 435: if(*This >= 48 && *This <= 57)
 28909  013F1A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28910  013F1E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28911  013F22  0E2F               	movlw	47
 28912  013F24  64DF               	cpfsgt	indf2,c
 28913  013F26  D01E               	goto	l12290
 28914                           
 28915                           ; BSR set to: 1
 28916  013F28  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28917  013F2C  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28918  013F30  50DF               	movf	indf2,w,c
 28919  013F32  0101               	movlb	1	; () banked
 28920  013F34  6F7E               	movwf	??_Parse_Time& (0+255),b
 28921  013F36  0E3A               	movlw	58
 28922  013F38  0101               	movlb	1	; () banked
 28923  013F3A  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 28924  013F3C  B0D8               	btfsc	status,0,c
 28925  013F3E  D012               	goto	l12290
 28926                           
 28927                           ; BSR set to: 1
 28928                           ;RTC.c: 436: {
 28929                           ;RTC.c: 437: temp *= 10;
 28930  013F40  0E0A               	movlw	10
 28931  013F42  0101               	movlb	1	; () banked
 28932  013F44  037F               	mulwf	Parse_Time@temp& (0+255),b
 28933  013F46  50F3               	movf	prodl,w,c
 28934  013F48  0101               	movlb	1	; () banked
 28935  013F4A  6F7F               	movwf	Parse_Time@temp& (0+255),b
 28936                           
 28937                           ; BSR set to: 1
 28938                           ;RTC.c: 438: temp += *This - 48;
 28939  013F4C  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28940  013F50  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28941  013F54  50DF               	movf	indf2,w,c
 28942  013F56  0FD0               	addlw	208
 28943  013F58  0101               	movlb	1	; () banked
 28944  013F5A  277F               	addwf	Parse_Time@temp& (0+255),f,b
 28945                           
 28946                           ; BSR set to: 1
 28947                           ;RTC.c: 439: This++;
 28948  013F5C  0101               	movlb	1	; () banked
 28949  013F5E  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28950  013F60  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28951                           
 28952                           ;RTC.c: 440: }
 28953  013F62  D00A               	goto	l1199
 28954  013F64                     l12290:
 28955                           
 28956                           ; BSR set to: 1
 28957                           ;RTC.c: 441: else if(*This == ':')
 28958  013F64  0E3A               	movlw	58
 28959  013F66  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28960  013F6A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28961  013F6E  62DF               	cpfseq	indf2,c
 28962  013F70  D001               	goto	l12294
 28963  013F72  D002               	goto	l1199
 28964  013F74                     l12294:
 28965                           
 28966                           ; BSR set to: 1
 28967                           ;RTC.c: 445: else
 28968                           ;RTC.c: 446: {
 28969                           ;RTC.c: 447: return 0;
 28970  013F74  0E00               	movlw	0
 28971  013F76  0012               	return	
 28972  013F78                     l1199:
 28973                           
 28974                           ; BSR set to: 1
 28975                           ;RTC.c: 448: }
 28976                           ;RTC.c: 449: TempTime.Minutes = temp;
 28977  013F78  C17F  F181         	movff	Parse_Time@temp,Parse_Time@TempTime+1
 28978                           
 28979                           ; BSR set to: 1
 28980                           ;RTC.c: 451: if(*This == ':')
 28981  013F7C  0E3A               	movlw	58
 28982  013F7E  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 28983  013F82  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 28984  013F86  62DF               	cpfseq	indf2,c
 28985  013F88  D004               	goto	l12302
 28986                           
 28987                           ; BSR set to: 1
 28988                           ;RTC.c: 452: {
 28989                           ;RTC.c: 453: This++;
 28990  013F8A  0101               	movlb	1	; () banked
 28991  013F8C  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 28992  013F8E  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 28993                           
 28994                           ;RTC.c: 454: }
 28995  013F90  D002               	goto	l12306
 28996  013F92                     l12302:
 28997                           
 28998                           ; BSR set to: 1
 28999                           ;RTC.c: 455: else
 29000                           ;RTC.c: 456: {
 29001                           ;RTC.c: 457: return 0;
 29002  013F92  0E00               	movlw	0
 29003  013F94  0012               	return	
 29004  013F96                     l12306:
 29005                           
 29006                           ; BSR set to: 1
 29007                           ;RTC.c: 458: }
 29008                           ;RTC.c: 461: if (*This >= 48 && *This <= 57)
 29009  013F96  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29010  013F9A  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29011  013F9E  0E2F               	movlw	47
 29012  013FA0  64DF               	cpfsgt	indf2,c
 29013  013FA2  D018               	goto	l12314
 29014                           
 29015                           ; BSR set to: 1
 29016  013FA4  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29017  013FA8  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29018  013FAC  50DF               	movf	indf2,w,c
 29019  013FAE  0101               	movlb	1	; () banked
 29020  013FB0  6F7E               	movwf	??_Parse_Time& (0+255),b
 29021  013FB2  0E3A               	movlw	58
 29022  013FB4  0101               	movlb	1	; () banked
 29023  013FB6  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 29024  013FB8  B0D8               	btfsc	status,0,c
 29025  013FBA  D00C               	goto	l12314
 29026                           
 29027                           ; BSR set to: 1
 29028                           ;RTC.c: 462: {
 29029                           ;RTC.c: 463: temp = *This - 48;
 29030  013FBC  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29031  013FC0  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29032  013FC4  50DF               	movf	indf2,w,c
 29033  013FC6  0FD0               	addlw	208
 29034  013FC8  0101               	movlb	1	; () banked
 29035  013FCA  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29036                           
 29037                           ; BSR set to: 1
 29038                           ;RTC.c: 464: This++;
 29039  013FCC  0101               	movlb	1	; () banked
 29040  013FCE  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29041  013FD0  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29042                           
 29043                           ;RTC.c: 465: }
 29044  013FD2  D002               	goto	l12318
 29045  013FD4                     l12314:
 29046                           
 29047                           ; BSR set to: 1
 29048                           ;RTC.c: 466: else
 29049                           ;RTC.c: 467: {
 29050                           ;RTC.c: 468: return 0;
 29051  013FD4  0E00               	movlw	0
 29052  013FD6  0012               	return	
 29053  013FD8                     l12318:
 29054                           
 29055                           ; BSR set to: 1
 29056                           ;RTC.c: 469: }
 29057                           ;RTC.c: 470: if (*This >= 48 && *This <= 57)
 29058  013FD8  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29059  013FDC  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29060  013FE0  0E2F               	movlw	47
 29061  013FE2  64DF               	cpfsgt	indf2,c
 29062  013FE4  D01E               	goto	l12328
 29063                           
 29064                           ; BSR set to: 1
 29065  013FE6  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29066  013FEA  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29067  013FEE  50DF               	movf	indf2,w,c
 29068  013FF0  0101               	movlb	1	; () banked
 29069  013FF2  6F7E               	movwf	??_Parse_Time& (0+255),b
 29070  013FF4  0E3A               	movlw	58
 29071  013FF6  0101               	movlb	1	; () banked
 29072  013FF8  5D7E               	subwf	??_Parse_Time& (0+255),w,b
 29073  013FFA  B0D8               	btfsc	status,0,c
 29074  013FFC  D012               	goto	l12328
 29075                           
 29076                           ; BSR set to: 1
 29077                           ;RTC.c: 471: {
 29078                           ;RTC.c: 472: temp *= 10;
 29079  013FFE  0E0A               	movlw	10
 29080  014000  0101               	movlb	1	; () banked
 29081  014002  037F               	mulwf	Parse_Time@temp& (0+255),b
 29082  014004  50F3               	movf	prodl,w,c
 29083  014006  0101               	movlb	1	; () banked
 29084  014008  6F7F               	movwf	Parse_Time@temp& (0+255),b
 29085                           
 29086                           ; BSR set to: 1
 29087                           ;RTC.c: 473: temp += *This - 48;
 29088  01400A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29089  01400E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29090  014012  50DF               	movf	indf2,w,c
 29091  014014  0FD0               	addlw	208
 29092  014016  0101               	movlb	1	; () banked
 29093  014018  277F               	addwf	Parse_Time@temp& (0+255),f,b
 29094                           
 29095                           ; BSR set to: 1
 29096                           ;RTC.c: 474: This++;
 29097  01401A  0101               	movlb	1	; () banked
 29098  01401C  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29099  01401E  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29100                           
 29101                           ;RTC.c: 475: }
 29102  014020  D002               	goto	l1207
 29103  014022                     l12328:
 29104                           
 29105                           ; BSR set to: 1
 29106                           ;RTC.c: 476: else
 29107                           ;RTC.c: 477: {
 29108                           ;RTC.c: 478: return 0;
 29109  014022  0E00               	movlw	0
 29110  014024  0012               	return	
 29111  014026                     l1207:
 29112                           
 29113                           ; BSR set to: 1
 29114                           ;RTC.c: 479: }
 29115                           ;RTC.c: 480: TempTime.Seconds = temp;
 29116  014026  C17F  F180         	movff	Parse_Time@temp,Parse_Time@TempTime
 29117                           
 29118                           ; BSR set to: 1
 29119                           ;RTC.c: 482: if(*This == ' ')
 29120  01402A  0E20               	movlw	32
 29121  01402C  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29122  014030  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29123  014034  62DF               	cpfseq	indf2,c
 29124  014036  D003               	goto	l12336
 29125                           
 29126                           ; BSR set to: 1
 29127                           ;RTC.c: 483: {
 29128                           ;RTC.c: 484: This++;
 29129  014038  0101               	movlb	1	; () banked
 29130  01403A  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29131  01403C  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29132  01403E                     l12336:
 29133                           
 29134                           ; BSR set to: 1
 29135                           ;RTC.c: 485: }
 29136                           ;RTC.c: 486: if(*This == 'a')
 29137  01403E  0E61               	movlw	97
 29138  014040  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29139  014044  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29140  014048  62DF               	cpfseq	indf2,c
 29141  01404A  D00E               	goto	l12348
 29142                           
 29143                           ; BSR set to: 1
 29144                           ;RTC.c: 487: {
 29145                           ;RTC.c: 488: This++;
 29146  01404C  0101               	movlb	1	; () banked
 29147  01404E  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29148  014050  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29149                           
 29150                           ; BSR set to: 1
 29151                           ;RTC.c: 489: if(*This == 'm')
 29152  014052  0E6D               	movlw	109
 29153  014054  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29154  014058  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29155  01405C  62DF               	cpfseq	indf2,c
 29156  01405E  D002               	goto	l12344
 29157                           
 29158                           ; BSR set to: 1
 29159                           ;RTC.c: 490: {
 29160                           ;RTC.c: 491: TempTime.HoursAM_PM = 0;
 29161  014060  0E00               	movlw	0
 29162  014062  D014               	goto	L38
 29163  014064                     l12344:
 29164                           
 29165                           ; BSR set to: 1
 29166                           ;RTC.c: 493: else
 29167                           ;RTC.c: 494: {
 29168                           ;RTC.c: 495: return 0;
 29169  014064  0E00               	movlw	0
 29170  014066  0012               	return	
 29171  014068                     l12348:
 29172                           
 29173                           ; BSR set to: 1
 29174                           ;RTC.c: 498: else if(*This == 'p')
 29175  014068  0E70               	movlw	112
 29176  01406A  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29177  01406E  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29178  014072  62DF               	cpfseq	indf2,c
 29179  014074  D010               	goto	l12360
 29180                           
 29181                           ; BSR set to: 1
 29182                           ;RTC.c: 499: {
 29183                           ;RTC.c: 500: This++;
 29184  014076  0101               	movlb	1	; () banked
 29185  014078  4B7C               	infsnz	Parse_Time@This& (0+255),f,b
 29186  01407A  2B7D               	incf	(Parse_Time@This+1)& (0+255),f,b
 29187                           
 29188                           ; BSR set to: 1
 29189                           ;RTC.c: 501: if(*This == 'm')
 29190  01407C  0E6D               	movlw	109
 29191  01407E  C17C  FFD9         	movff	Parse_Time@This,fsr2l
 29192  014082  C17D  FFDA         	movff	Parse_Time@This+1,fsr2h
 29193  014086  62DF               	cpfseq	indf2,c
 29194  014088  D004               	goto	l12356
 29195                           
 29196                           ; BSR set to: 1
 29197                           ;RTC.c: 502: {
 29198                           ;RTC.c: 503: TempTime.HoursAM_PM = 1;
 29199  01408A  0E01               	movlw	1
 29200  01408C                     L38:
 29201  01408C  0101               	movlb	1	; () banked
 29202  01408E  6F84               	movwf	(Parse_Time@TempTime+4)& (0+255),b
 29203                           
 29204                           ;RTC.c: 504: }
 29205  014090  D004               	goto	l12364
 29206  014092                     l12356:
 29207                           
 29208                           ; BSR set to: 1
 29209                           ;RTC.c: 505: else
 29210                           ;RTC.c: 506: {
 29211                           ;RTC.c: 507: return 0;
 29212  014092  0E00               	movlw	0
 29213  014094  0012               	return	
 29214  014096                     l12360:
 29215                           
 29216                           ; BSR set to: 1
 29217                           ;RTC.c: 510: else
 29218                           ;RTC.c: 511: {
 29219                           ;RTC.c: 512: return 0;
 29220  014096  0E00               	movlw	0
 29221  014098  0012               	return	
 29222  01409A                     l12364:
 29223                           
 29224                           ; BSR set to: 1
 29225                           ;RTC.c: 513: }
 29226                           ;RTC.c: 514: if(TempTime.Month > 12 || TempTime.Date > 31 || TempTime.Year > 99 || TempT
      +                          ime.Hours > 12 || TempTime.Minutes > 59 || TempTime.Seconds > 59)
 29227  01409A  0E0D               	movlw	13
 29228  01409C  0101               	movlb	1	; () banked
 29229  01409E  5D87               	subwf	(Parse_Time@TempTime+7)& (0+255),w,b
 29230  0140A0  B0D8               	btfsc	status,0,c
 29231  0140A2  D018               	goto	l12376
 29232                           
 29233                           ; BSR set to: 1
 29234  0140A4  0E20               	movlw	32
 29235  0140A6  0101               	movlb	1	; () banked
 29236  0140A8  5D86               	subwf	(Parse_Time@TempTime+6)& (0+255),w,b
 29237  0140AA  B0D8               	btfsc	status,0,c
 29238  0140AC  D013               	goto	l12376
 29239                           
 29240                           ; BSR set to: 1
 29241  0140AE  0E64               	movlw	100
 29242  0140B0  0101               	movlb	1	; () banked
 29243  0140B2  5D88               	subwf	(Parse_Time@TempTime+8)& (0+255),w,b
 29244  0140B4  B0D8               	btfsc	status,0,c
 29245  0140B6  D00E               	goto	l12376
 29246                           
 29247                           ; BSR set to: 1
 29248  0140B8  0E0D               	movlw	13
 29249  0140BA  0101               	movlb	1	; () banked
 29250  0140BC  5D82               	subwf	(Parse_Time@TempTime+2)& (0+255),w,b
 29251  0140BE  B0D8               	btfsc	status,0,c
 29252  0140C0  D009               	goto	l12376
 29253                           
 29254                           ; BSR set to: 1
 29255  0140C2  0E3C               	movlw	60
 29256  0140C4  0101               	movlb	1	; () banked
 29257  0140C6  5D81               	subwf	(Parse_Time@TempTime+1)& (0+255),w,b
 29258  0140C8  B0D8               	btfsc	status,0,c
 29259  0140CA  D004               	goto	l12376
 29260                           
 29261                           ; BSR set to: 1
 29262  0140CC  0E3B               	movlw	59
 29263  0140CE  0101               	movlb	1	; () banked
 29264  0140D0  6580               	cpfsgt	Parse_Time@TempTime& (0+255),b
 29265  0140D2  D002               	goto	l1217
 29266  0140D4                     l12376:
 29267                           
 29268                           ; BSR set to: 1
 29269                           ;RTC.c: 515: {
 29270                           ;RTC.c: 516: return 0;
 29271  0140D4  0E00               	movlw	0
 29272  0140D6  0012               	return	
 29273  0140D8                     l1217:
 29274                           
 29275                           ; BSR set to: 1
 29276                           ;RTC.c: 518: else
 29277                           ;RTC.c: 519: {
 29278                           ;RTC.c: 520: NowTime.Month = TempTime.Month;
 29279  0140D8  C187  F107         	movff	Parse_Time@TempTime+7,_NowTime+7
 29280                           
 29281                           ;RTC.c: 521: NowTime.Date = TempTime.Date;
 29282  0140DC  C186  F106         	movff	Parse_Time@TempTime+6,_NowTime+6
 29283                           
 29284                           ;RTC.c: 522: NowTime.Year= TempTime.Year;
 29285  0140E0  C188  F108         	movff	Parse_Time@TempTime+8,_NowTime+8
 29286                           
 29287                           ;RTC.c: 523: NowTime.Hours = TempTime.Hours;
 29288  0140E4  C182  F102         	movff	Parse_Time@TempTime+2,_NowTime+2
 29289                           
 29290                           ;RTC.c: 524: NowTime.Minutes = TempTime.Minutes;
 29291  0140E8  C181  F101         	movff	Parse_Time@TempTime+1,_NowTime+1
 29292                           
 29293                           ;RTC.c: 525: NowTime.Seconds= TempTime.Seconds;
 29294  0140EC  C180  F100         	movff	Parse_Time@TempTime,_NowTime
 29295                           
 29296                           ;RTC.c: 526: NowTime.HoursAM_PM = TempTime.HoursAM_PM;
 29297  0140F0  C184  F104         	movff	Parse_Time@TempTime+4,_NowTime+4
 29298                           
 29299                           ; BSR set to: 1
 29300                           ;RTC.c: 527: return 1;
 29301  0140F4  0E01               	movlw	1
 29302  0140F6  0012               	return	
 29303  0140F8                     __end_of_Parse_Time:
 29304                           	opt stack 0
 29305                           tblptru	equ	0xFF8
 29306                           tblptrh	equ	0xFF7
 29307                           tblptrl	equ	0xFF6
 29308                           tablat	equ	0xFF5
 29309                           prodh	equ	0xFF4
 29310                           prodl	equ	0xFF3
 29311                           intcon	equ	0xFF2
 29312                           postinc0	equ	0xFEE
 29313                           wreg	equ	0xFE8
 29314                           indf1	equ	0xFE7
 29315                           postinc1	equ	0xFE6
 29316                           postdec1	equ	0xFE5
 29317                           fsr1h	equ	0xFE2
 29318                           fsr1l	equ	0xFE1
 29319                           indf2	equ	0xFDF
 29320                           postinc2	equ	0xFDE
 29321                           postdec2	equ	0xFDD
 29322                           fsr2h	equ	0xFDA
 29323                           fsr2l	equ	0xFD9
 29324                           status	equ	0xFD8
 29325                           
 29326 ;; *************** function _LCDdisplayFeedback *****************
 29327 ;; Defined at:
 29328 ;;		line 252 in file "LCD.c"
 29329 ;; Parameters:    Size  Location     Type
 29330 ;;  Text            2   32[BANK1 ] PTR unsigned char 
 29331 ;;		 -> STR_318(16), STR_316(16), STR_262(16), STR_260(16), 
 29332 ;;		 -> STR_257(15), STR_205(16), STR_203(16), STR_201(13), 
 29333 ;;		 -> STR_188(14), STR_186(16), STR_184(15), STR_173(16), 
 29334 ;;		 -> Command@buf(200), STR_169(14), STR_167(16), STR_165(15), 
 29335 ;;		 -> STR_147(13), STR_145(15), STR_141(14), STR_137(16), 
 29336 ;;		 -> STR_124(16), STR_116(16), STR_114(16), STR_111(15), 
 29337 ;;		 -> STR_108(15), STR_105(14), STR_102(16), STR_90(16), 
 29338 ;;		 -> STR_83(16), STR_81(15), STR_78(14), STR_75(16), 
 29339 ;;		 -> STR_59(12), STR_57(9), STR_54(8), STR_51(13), 
 29340 ;;		 -> STR_48(9), STR_45(8), STR_42(13), 
 29341 ;; Auto vars:     Size  Location     Type
 29342 ;;		None
 29343 ;; Return value:  Size  Location     Type
 29344 ;;		None               void
 29345 ;; Registers used:
 29346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29347 ;; Tracked objects:
 29348 ;;		On entry : 0/0
 29349 ;;		On exit  : 0/0
 29350 ;;		Unchanged: 0/0
 29351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29352 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29355 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29356 ;;Total ram usage:        2 bytes
 29357 ;; Hardware stack levels used:    1
 29358 ;; Hardware stack levels required when called:   10
 29359 ;; This function calls:
 29360 ;;		_ClearLCD
 29361 ;;		_LCDPrintString
 29362 ;;		_SetLCDcursor
 29363 ;; This function is called by:
 29364 ;;		_Command
 29365 ;; This function uses a non-reentrant model
 29366 ;;
 29367                           
 29368                           	psect	text71
 29369  017C7C                     __ptext71:
 29370                           	opt stack 0
 29371  017C7C                     _LCDdisplayFeedback:
 29372                           	opt stack 18
 29373                           
 29374                           ;LCD.c: 254: ClearLCD();
 29375                           
 29376                           ; BSR set to: 1
 29377                           ;incstack = 0
 29378  017C7C  EC31  F003         	call	_ClearLCD	;wreg free
 29379                           
 29380                           ;LCD.c: 255: SetLCDcursor(1, 0);
 29381  017C80  0E00               	movlw	0
 29382  017C82  0101               	movlb	1	; () banked
 29383  017C84  6F8A               	movwf	SetLCDcursor@Col& (0+255),b
 29384  017C86  0E01               	movlw	1
 29385  017C88  ECEE  F001         	call	_SetLCDcursor
 29386                           
 29387                           ;LCD.c: 256: LCDPrintString(Text);
 29388  017C8C  0101               	movlb	1	; () banked
 29389  017C8E  C18F  F18B         	movff	LCDdisplayFeedback@Text+1,LCDPrintString@Text+1
 29390  017C92  0101               	movlb	1	; () banked
 29391  017C94  C18E  F18A         	movff	LCDdisplayFeedback@Text,LCDPrintString@Text
 29392  017C98  EC66  F0BA         	call	_LCDPrintString	;wreg free
 29393                           
 29394                           ;LCD.c: 257: LCDwait = 1;
 29395  017C9C  0E01               	movlw	1
 29396  017C9E  0101               	movlb	1	; () banked
 29397  017CA0  6F09               	movwf	_LCDwait& (0+255),b
 29398                           
 29399                           ; BSR set to: 1
 29400                           ;LCD.c: 258: LCDclearCount =0;
 29401  017CA2  0E00               	movlw	0
 29402  017CA4  0101               	movlb	1	; () banked
 29403  017CA6  6FD9               	movwf	_LCDclearCount& (0+255),b
 29404  017CA8  0E00               	movlw	0
 29405  017CAA  0101               	movlb	1	; () banked
 29406  017CAC  6FDA               	movwf	(_LCDclearCount+1)& (0+255),b
 29407  017CAE  0E00               	movlw	0
 29408  017CB0  0101               	movlb	1	; () banked
 29409  017CB2  6FDB               	movwf	(_LCDclearCount+2)& (0+255),b
 29410  017CB4  0E00               	movlw	0
 29411  017CB6  0101               	movlb	1	; () banked
 29412  017CB8  6FDC               	movwf	(_LCDclearCount+3)& (0+255),b
 29413                           
 29414                           ; BSR set to: 1
 29415  017CBA  0012               	return	
 29416  017CBC                     __end_of_LCDdisplayFeedback:
 29417                           	opt stack 0
 29418                           tblptru	equ	0xFF8
 29419                           tblptrh	equ	0xFF7
 29420                           tblptrl	equ	0xFF6
 29421                           tablat	equ	0xFF5
 29422                           prodh	equ	0xFF4
 29423                           prodl	equ	0xFF3
 29424                           intcon	equ	0xFF2
 29425                           postinc0	equ	0xFEE
 29426                           wreg	equ	0xFE8
 29427                           indf1	equ	0xFE7
 29428                           postinc1	equ	0xFE6
 29429                           postdec1	equ	0xFE5
 29430                           fsr1h	equ	0xFE2
 29431                           fsr1l	equ	0xFE1
 29432                           indf2	equ	0xFDF
 29433                           postinc2	equ	0xFDE
 29434                           postdec2	equ	0xFDD
 29435                           fsr2h	equ	0xFDA
 29436                           fsr2l	equ	0xFD9
 29437                           status	equ	0xFD8
 29438                           
 29439 ;; *************** function _SetLCDcursor *****************
 29440 ;; Defined at:
 29441 ;;		line 192 in file "LCD.c"
 29442 ;; Parameters:    Size  Location     Type
 29443 ;;  Row             1    wreg     unsigned char 
 29444 ;;  Col             1   28[BANK1 ] unsigned char 
 29445 ;; Auto vars:     Size  Location     Type
 29446 ;;  Row             1   29[BANK1 ] unsigned char 
 29447 ;;  address         1   30[BANK1 ] unsigned char 
 29448 ;; Return value:  Size  Location     Type
 29449 ;;		None               void
 29450 ;; Registers used:
 29451 ;;		wreg, status,2, status,0, cstack
 29452 ;; Tracked objects:
 29453 ;;		On entry : 0/0
 29454 ;;		On exit  : 0/0
 29455 ;;		Unchanged: 0/0
 29456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29457 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29458 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29460 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 29461 ;;Total ram usage:        3 bytes
 29462 ;; Hardware stack levels used:    1
 29463 ;; Hardware stack levels required when called:    9
 29464 ;; This function calls:
 29465 ;;		_SendLCDbyte
 29466 ;; This function is called by:
 29467 ;;		_main
 29468 ;;		_Command
 29469 ;;		_LCDdisplayFeedback
 29470 ;;		_LCDScreenUpdate
 29471 ;; This function uses a non-reentrant model
 29472 ;;
 29473                           
 29474                           	psect	text72
 29475  0003DC                     __ptext72:
 29476                           	opt stack 0
 29477  0003DC                     _SetLCDcursor:
 29478                           	opt stack 20
 29479                           
 29480                           ; BSR set to: 1
 29481                           ;incstack = 0
 29482                           ;SetLCDcursor@Row stored from wreg
 29483  0003DC  0101               	movlb	1	; () banked
 29484  0003DE  6F8B               	movwf	SetLCDcursor@Row& (0+255),b
 29485                           
 29486                           ; BSR set to: 1
 29487                           ;LCD.c: 194: char address;
 29488                           ;LCD.c: 197: if (Row == 0)
 29489  0003E0  0101               	movlb	1	; () banked
 29490  0003E2  678B               	tstfsz	SetLCDcursor@Row& (0+255),b
 29491  0003E4  D002               	goto	l10608
 29492                           
 29493                           ; BSR set to: 1
 29494                           ;LCD.c: 198: {
 29495                           ;LCD.c: 199: address = 0;
 29496  0003E6  0E00               	movlw	0
 29497  0003E8  D001               	goto	L39
 29498  0003EA                     l10608:
 29499                           
 29500                           ; BSR set to: 1
 29501                           ;LCD.c: 201: else
 29502                           ;LCD.c: 202: {
 29503                           ;LCD.c: 203: address = 0x40;
 29504  0003EA  0E40               	movlw	64
 29505  0003EC                     L39:
 29506  0003EC  0101               	movlb	1	; () banked
 29507  0003EE  6F8C               	movwf	SetLCDcursor@address& (0+255),b
 29508                           
 29509                           ; BSR set to: 1
 29510                           ;LCD.c: 204: }
 29511                           ;LCD.c: 206: address |= Col;
 29512                           
 29513                           ; BSR set to: 1
 29514  0003F0  0101               	movlb	1	; () banked
 29515  0003F2  518A               	movf	SetLCDcursor@Col& (0+255),w,b
 29516  0003F4  0101               	movlb	1	; () banked
 29517  0003F6  138C               	iorwf	SetLCDcursor@address& (0+255),f,b
 29518                           
 29519                           ; BSR set to: 1
 29520                           ;LCD.c: 207: if(!LCDwait)
 29521  0003F8  0101               	movlb	1	; () banked
 29522  0003FA  6709               	tstfsz	_LCDwait& (0+255),b
 29523  0003FC  0012               	return	
 29524                           
 29525                           ; BSR set to: 1
 29526                           ;LCD.c: 208: {
 29527                           ;LCD.c: 209: SendLCDbyte(0x80 | address, 0);
 29528  0003FE  0E00               	movlw	0
 29529  000400  0101               	movlb	1	; () banked
 29530  000402  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 29531  000404  0101               	movlb	1	; () banked
 29532  000406  518C               	movf	SetLCDcursor@address& (0+255),w,b
 29533  000408  0980               	iorlw	128
 29534  00040A  EC20  F0B2         	call	_SendLCDbyte
 29535  00040E  0012               	return	
 29536  000410                     __end_of_SetLCDcursor:
 29537                           	opt stack 0
 29538                           tblptru	equ	0xFF8
 29539                           tblptrh	equ	0xFF7
 29540                           tblptrl	equ	0xFF6
 29541                           tablat	equ	0xFF5
 29542                           prodh	equ	0xFF4
 29543                           prodl	equ	0xFF3
 29544                           intcon	equ	0xFF2
 29545                           postinc0	equ	0xFEE
 29546                           wreg	equ	0xFE8
 29547                           indf1	equ	0xFE7
 29548                           postinc1	equ	0xFE6
 29549                           postdec1	equ	0xFE5
 29550                           fsr1h	equ	0xFE2
 29551                           fsr1l	equ	0xFE1
 29552                           indf2	equ	0xFDF
 29553                           postinc2	equ	0xFDE
 29554                           postdec2	equ	0xFDD
 29555                           fsr2h	equ	0xFDA
 29556                           fsr2l	equ	0xFD9
 29557                           status	equ	0xFD8
 29558                           
 29559 ;; *************** function _LCDPrintString *****************
 29560 ;; Defined at:
 29561 ;;		line 233 in file "LCD.c"
 29562 ;; Parameters:    Size  Location     Type
 29563 ;;  Text            2   28[BANK1 ] PTR unsigned char 
 29564 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 29565 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 29566 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 29567 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 29568 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 29569 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 29570 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 29571 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 29572 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 29573 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 29574 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 29575 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 29576 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 29577 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 29578 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 29579 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 29580 ;;		 -> low_isr@LCD_TEMP(16), 
 29581 ;; Auto vars:     Size  Location     Type
 29582 ;;  c               2   30[BANK1 ] PTR unsigned char 
 29583 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 29584 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 29585 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 29586 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 29587 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 29588 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 29589 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 29590 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 29591 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 29592 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 29593 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 29594 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 29595 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 29596 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 29597 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 29598 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 29599 ;;		 -> low_isr@LCD_TEMP(16), 
 29600 ;; Return value:  Size  Location     Type
 29601 ;;		None               void
 29602 ;; Registers used:
 29603 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29604 ;; Tracked objects:
 29605 ;;		On entry : 0/0
 29606 ;;		On exit  : 0/0
 29607 ;;		Unchanged: 0/0
 29608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29609 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29610 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 29611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29612 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 29613 ;;Total ram usage:        4 bytes
 29614 ;; Hardware stack levels used:    1
 29615 ;; Hardware stack levels required when called:    9
 29616 ;; This function calls:
 29617 ;;		_SendLCDbyte
 29618 ;; This function is called by:
 29619 ;;		_main
 29620 ;;		_Command
 29621 ;;		_LCDdisplayFeedback
 29622 ;;		_LCDScreenUpdate
 29623 ;; This function uses a non-reentrant model
 29624 ;;
 29625                           
 29626                           	psect	text73
 29627  0174CC                     __ptext73:
 29628                           	opt stack 0
 29629  0174CC                     _LCDPrintString:
 29630                           	opt stack 19
 29631                           
 29632                           ;LCD.c: 235: unsigned char *c;
 29633                           ;LCD.c: 237: c = Text;
 29634                           
 29635                           ;incstack = 0
 29636  0174CC  0101               	movlb	1	; () banked
 29637  0174CE  C18B  F18D         	movff	LCDPrintString@Text+1,LCDPrintString@c+1
 29638  0174D2  0101               	movlb	1	; () banked
 29639  0174D4  C18A  F18C         	movff	LCDPrintString@Text,LCDPrintString@c
 29640                           
 29641                           ;LCD.c: 239: while ((c != 0) && (*c != 0))
 29642  0174D8  D01B               	goto	l10622
 29643  0174DA                     l10618:
 29644                           
 29645                           ;LCD.c: 240: {
 29646                           ;LCD.c: 241: SendLCDbyte(*c, 1);
 29647  0174DA  0E01               	movlw	1
 29648  0174DC  0101               	movlb	1	; () banked
 29649  0174DE  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 29650  0174E0  0101               	movlb	1	; () banked
 29651  0174E2  C18C  FFF6         	movff	LCDPrintString@c,tblptrl
 29652  0174E6  0101               	movlb	1	; () banked
 29653  0174E8  C18D  FFF7         	movff	LCDPrintString@c+1,tblptrh
 29654  0174EC  0E00               	movlw	low (__mediumconst shr (0+16))
 29655  0174EE  6EF8               	movwf	tblptru,c
 29656  0174F0  0E0C               	movlw	(high __ramtop+-1)
 29657  0174F2  64F7               	cpfsgt	tblptrh,c
 29658  0174F4  D003               	bra	u13067
 29659  0174F6  0008               	tblrd		*
 29660  0174F8  50F5               	movf	tablat,w,c
 29661  0174FA  D005               	bra	u13060
 29662  0174FC                     u13067:
 29663  0174FC  CFF6 FFE1          	movff	tblptrl,fsr1l
 29664  017500  CFF7 FFE2          	movff	tblptrh,fsr1h
 29665  017504  50E7               	movf	indf1,w,c
 29666  017506                     u13060:
 29667  017506  EC20  F0B2         	call	_SendLCDbyte
 29668                           
 29669                           ;LCD.c: 242: c++;
 29670  01750A  0101               	movlb	1	; () banked
 29671  01750C  4B8C               	infsnz	LCDPrintString@c& (0+255),f,b
 29672  01750E  2B8D               	incf	(LCDPrintString@c+1)& (0+255),f,b
 29673  017510                     l10622:
 29674                           
 29675                           ; BSR set to: 1
 29676  017510  0101               	movlb	1	; () banked
 29677  017512  518D               	movf	(LCDPrintString@c+1)& (0+255),w,b
 29678  017514  118C               	iorwf	LCDPrintString@c& (0+255),w,b
 29679  017516  B4D8               	btfsc	status,2,c
 29680  017518  0012               	return	
 29681                           
 29682                           ; BSR set to: 1
 29683  01751A  0101               	movlb	1	; () banked
 29684  01751C  C18C  FFF6         	movff	LCDPrintString@c,tblptrl
 29685  017520  0101               	movlb	1	; () banked
 29686  017522  C18D  FFF7         	movff	LCDPrintString@c+1,tblptrh
 29687  017526  0E00               	movlw	low (__mediumconst shr (0+16))
 29688  017528  6EF8               	movwf	tblptru,c
 29689  01752A  0E0C               	movlw	(high __ramtop+-1)
 29690  01752C  64F7               	cpfsgt	tblptrh,c
 29691  01752E  D003               	bra	u13087
 29692  017530  0008               	tblrd		*
 29693  017532  50F5               	movf	tablat,w,c
 29694  017534  D005               	bra	u13080
 29695  017536                     u13087:
 29696  017536  CFF6 FFE1          	movff	tblptrl,fsr1l
 29697  01753A  CFF7 FFE2          	movff	tblptrh,fsr1h
 29698  01753E  50E7               	movf	indf1,w,c
 29699  017540                     u13080:
 29700  017540  0900               	iorlw	0
 29701  017542  B4D8               	btfsc	status,2,c
 29702  017544  0012               	return	
 29703  017546  D7C9               	goto	l10618
 29704  017548                     __end_of_LCDPrintString:
 29705                           	opt stack 0
 29706                           tblptru	equ	0xFF8
 29707                           tblptrh	equ	0xFF7
 29708                           tblptrl	equ	0xFF6
 29709                           tablat	equ	0xFF5
 29710                           prodh	equ	0xFF4
 29711                           prodl	equ	0xFF3
 29712                           intcon	equ	0xFF2
 29713                           postinc0	equ	0xFEE
 29714                           wreg	equ	0xFE8
 29715                           indf1	equ	0xFE7
 29716                           postinc1	equ	0xFE6
 29717                           postdec1	equ	0xFE5
 29718                           fsr1h	equ	0xFE2
 29719                           fsr1l	equ	0xFE1
 29720                           indf2	equ	0xFDF
 29721                           postinc2	equ	0xFDE
 29722                           postdec2	equ	0xFDD
 29723                           fsr2h	equ	0xFDA
 29724                           fsr2l	equ	0xFD9
 29725                           status	equ	0xFD8
 29726                           
 29727 ;; *************** function _ClearLCD *****************
 29728 ;; Defined at:
 29729 ;;		line 219 in file "LCD.c"
 29730 ;; Parameters:    Size  Location     Type
 29731 ;;		None
 29732 ;; Auto vars:     Size  Location     Type
 29733 ;;		None
 29734 ;; Return value:  Size  Location     Type
 29735 ;;		None               void
 29736 ;; Registers used:
 29737 ;;		wreg, status,2, status,0, cstack
 29738 ;; Tracked objects:
 29739 ;;		On entry : 0/0
 29740 ;;		On exit  : 0/0
 29741 ;;		Unchanged: 0/0
 29742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29747 ;;Total ram usage:        0 bytes
 29748 ;; Hardware stack levels used:    1
 29749 ;; Hardware stack levels required when called:    9
 29750 ;; This function calls:
 29751 ;;		_SendLCDbyte
 29752 ;; This function is called by:
 29753 ;;		_main
 29754 ;;		_init_LCD
 29755 ;;		_LCDdisplayFeedback
 29756 ;;		_LCDScreenUpdate
 29757 ;; This function uses a non-reentrant model
 29758 ;;
 29759                           
 29760                           	psect	text74
 29761  000662                     __ptext74:
 29762                           	opt stack 0
 29763  000662                     _ClearLCD:
 29764                           	opt stack 19
 29765                           
 29766                           ;LCD.c: 224: SendLCDbyte(0x01, 0);
 29767                           
 29768                           ;incstack = 0
 29769  000662  0E00               	movlw	0
 29770  000664  0101               	movlb	1	; () banked
 29771  000666  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 29772  000668  0E01               	movlw	1
 29773  00066A  EC20  F0B2         	call	_SendLCDbyte
 29774                           
 29775                           ;LCD.c: 225: SendLCDbyte(0x02, 0);
 29776  00066E  0E00               	movlw	0
 29777  000670  0101               	movlb	1	; () banked
 29778  000672  6F86               	movwf	SendLCDbyte@isCommand& (0+255),b
 29779  000674  0E02               	movlw	2
 29780  000676  EC20  F0B2         	call	_SendLCDbyte
 29781  00067A  0012               	return	
 29782  00067C                     __end_of_ClearLCD:
 29783                           	opt stack 0
 29784                           tblptru	equ	0xFF8
 29785                           tblptrh	equ	0xFF7
 29786                           tblptrl	equ	0xFF6
 29787                           tablat	equ	0xFF5
 29788                           prodh	equ	0xFF4
 29789                           prodl	equ	0xFF3
 29790                           intcon	equ	0xFF2
 29791                           postinc0	equ	0xFEE
 29792                           wreg	equ	0xFE8
 29793                           indf1	equ	0xFE7
 29794                           postinc1	equ	0xFE6
 29795                           postdec1	equ	0xFE5
 29796                           fsr1h	equ	0xFE2
 29797                           fsr1l	equ	0xFE1
 29798                           indf2	equ	0xFDF
 29799                           postinc2	equ	0xFDE
 29800                           postdec2	equ	0xFDD
 29801                           fsr2h	equ	0xFDA
 29802                           fsr2l	equ	0xFD9
 29803                           status	equ	0xFD8
 29804                           
 29805 ;; *************** function _SendLCDbyte *****************
 29806 ;; Defined at:
 29807 ;;		line 106 in file "LCD.c"
 29808 ;; Parameters:    Size  Location     Type
 29809 ;;  data            1    wreg     unsigned char 
 29810 ;;  isCommand       1   24[BANK1 ] unsigned char 
 29811 ;; Auto vars:     Size  Location     Type
 29812 ;;  data            1   25[BANK1 ] unsigned char 
 29813 ;;  LSB_nibble      1   27[BANK1 ] unsigned char 
 29814 ;;  MSB_nibble      1   26[BANK1 ] unsigned char 
 29815 ;; Return value:  Size  Location     Type
 29816 ;;		None               void
 29817 ;; Registers used:
 29818 ;;		wreg, status,2, status,0, cstack
 29819 ;; Tracked objects:
 29820 ;;		On entry : 0/0
 29821 ;;		On exit  : 0/0
 29822 ;;		Unchanged: 0/0
 29823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 29824 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 29825 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 29826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 29827 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 29828 ;;Total ram usage:        4 bytes
 29829 ;; Hardware stack levels used:    1
 29830 ;; Hardware stack levels required when called:    8
 29831 ;; This function calls:
 29832 ;;		_PulseEnablePin
 29833 ;;		_delayUS
 29834 ;; This function is called by:
 29835 ;;		_init_LCD
 29836 ;;		_SetLCDcursor
 29837 ;;		_ClearLCD
 29838 ;;		_LCDPrintString
 29839 ;;		_LCDPrintChar
 29840 ;; This function uses a non-reentrant model
 29841 ;;
 29842                           
 29843                           	psect	text75
 29844  016440                     __ptext75:
 29845                           	opt stack 0
 29846  016440                     _SendLCDbyte:
 29847                           	opt stack 20
 29848                           
 29849                           ;incstack = 0
 29850                           ;SendLCDbyte@data stored from wreg
 29851  016440  0101               	movlb	1	; () banked
 29852  016442  6F87               	movwf	SendLCDbyte@data& (0+255),b
 29853                           
 29854                           ; BSR set to: 1
 29855                           ;LCD.c: 108: unsigned char MSB_nibble=0;
 29856  016444  0E00               	movlw	0
 29857  016446  0101               	movlb	1	; () banked
 29858  016448  6F88               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 29859                           
 29860                           ;LCD.c: 109: unsigned char LSB_nibble=0;
 29861  01644A  0E00               	movlw	0
 29862  01644C  0101               	movlb	1	; () banked
 29863  01644E  6F89               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 29864                           
 29865                           ; BSR set to: 1
 29866                           ;LCD.c: 111: LATA &= ~(0b00001000+0b00010000+0b00100000);
 29867  016450  0EC7               	movlw	199
 29868  016452  1689               	andwf	3977,f,c	;volatile
 29869                           
 29870                           ; BSR set to: 1
 29871                           ;LCD.c: 112: LATE &= ~0b00000001;
 29872  016454  908D               	bcf	3981,0,c	;volatile
 29873                           
 29874                           ; BSR set to: 1
 29875                           ;LCD.c: 113: LATD &= ~(0b10000000 + 0b00100000);
 29876  016456  0E5F               	movlw	95
 29877  016458  168C               	andwf	3980,f,c	;volatile
 29878                           
 29879                           ; BSR set to: 1
 29880                           ;LCD.c: 114: delayUS(10);
 29881  01645A  0E0A               	movlw	10
 29882  01645C  0101               	movlb	1	; () banked
 29883  01645E  6F7C               	movwf	delayUS@US& (0+255),b
 29884  016460  0E00               	movlw	0
 29885  016462  0101               	movlb	1	; () banked
 29886  016464  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 29887  016466  0E00               	movlw	0
 29888  016468  0101               	movlb	1	; () banked
 29889  01646A  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 29890  01646C  0E00               	movlw	0
 29891  01646E  0101               	movlb	1	; () banked
 29892  016470  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 29893  016472  ECA4  F0BA         	call	_delayUS	;wreg free
 29894                           
 29895                           ;LCD.c: 115: MSB_nibble = (data & 0xF0)>>4;
 29896  016476  0101               	movlb	1	; () banked
 29897  016478  3987               	swapf	SendLCDbyte@data& (0+255),w,b
 29898  01647A  0B0F               	andlw	15
 29899  01647C  0B0F               	andlw	15
 29900  01647E  0101               	movlb	1	; () banked
 29901  016480  6F88               	movwf	SendLCDbyte@MSB_nibble& (0+255),b
 29902                           
 29903                           ; BSR set to: 1
 29904                           ;LCD.c: 116: LSB_nibble = (data & 0x0F);
 29905  016482  0101               	movlb	1	; () banked
 29906  016484  5187               	movf	SendLCDbyte@data& (0+255),w,b
 29907  016486  0B0F               	andlw	15
 29908  016488  0101               	movlb	1	; () banked
 29909  01648A  6F89               	movwf	SendLCDbyte@LSB_nibble& (0+255),b
 29910                           
 29911                           ; BSR set to: 1
 29912                           ;LCD.c: 117: if(!LCDwait)
 29913  01648C  0101               	movlb	1	; () banked
 29914  01648E  6709               	tstfsz	_LCDwait& (0+255),b
 29915  016490  D035               	goto	l10392
 29916                           
 29917                           ; BSR set to: 1
 29918                           ;LCD.c: 118: {
 29919                           ;LCD.c: 119: if(isCommand)
 29920  016492  0101               	movlb	1	; () banked
 29921  016494  5186               	movf	SendLCDbyte@isCommand& (0+255),w,b
 29922  016496  B4D8               	btfsc	status,2,c
 29923  016498  D002               	goto	l10348
 29924                           
 29925                           ; BSR set to: 1
 29926                           ;LCD.c: 120: {
 29927                           ;LCD.c: 121: LATD |= (0b00100000);
 29928  01649A  8A8C               	bsf	3980,5,c	;volatile
 29929                           
 29930                           ;LCD.c: 122: }
 29931  01649C  D001               	goto	l10350
 29932  01649E                     l10348:
 29933                           
 29934                           ; BSR set to: 1
 29935                           ;LCD.c: 123: else
 29936                           ;LCD.c: 124: {
 29937                           ;LCD.c: 125: LATD &= ~(0b00100000);
 29938  01649E  9A8C               	bcf	3980,5,c	;volatile
 29939  0164A0                     l10350:
 29940                           
 29941                           ; BSR set to: 1
 29942                           ;LCD.c: 126: }
 29943                           ;LCD.c: 127: if(MSB_nibble&0b1000)
 29944  0164A0  0101               	movlb	1	; () banked
 29945  0164A2  B788               	btfsc	SendLCDbyte@MSB_nibble& (0+255),3,b
 29946                           
 29947                           ; BSR set to: 1
 29948                           ;LCD.c: 128: {
 29949                           ;LCD.c: 129: LATA |= 0b00001000;
 29950  0164A4  8689               	bsf	3977,3,c	;volatile
 29951                           
 29952                           ; BSR set to: 1
 29953                           ;LCD.c: 130: }
 29954                           ;LCD.c: 131: if(MSB_nibble&0b0100)
 29955                           
 29956                           ; BSR set to: 1
 29957  0164A6  0101               	movlb	1	; () banked
 29958  0164A8  B588               	btfsc	SendLCDbyte@MSB_nibble& (0+255),2,b
 29959                           
 29960                           ; BSR set to: 1
 29961                           ;LCD.c: 132: {
 29962                           ;LCD.c: 133: LATA |= 0b00010000;
 29963  0164AA  8889               	bsf	3977,4,c	;volatile
 29964                           
 29965                           ; BSR set to: 1
 29966                           ;LCD.c: 134: }
 29967                           ;LCD.c: 135: if(MSB_nibble&0b0010)
 29968                           
 29969                           ; BSR set to: 1
 29970  0164AC  0101               	movlb	1	; () banked
 29971  0164AE  B388               	btfsc	SendLCDbyte@MSB_nibble& (0+255),1,b
 29972                           
 29973                           ; BSR set to: 1
 29974                           ;LCD.c: 136: {
 29975                           ;LCD.c: 137: LATA |= 0b00100000;
 29976  0164B0  8A89               	bsf	3977,5,c	;volatile
 29977                           
 29978                           ; BSR set to: 1
 29979                           ;LCD.c: 138: }
 29980                           ;LCD.c: 139: if(MSB_nibble&0b0001)
 29981                           
 29982                           ; BSR set to: 1
 29983  0164B2  0101               	movlb	1	; () banked
 29984  0164B4  B188               	btfsc	SendLCDbyte@MSB_nibble& (0+255),0,b
 29985                           
 29986                           ; BSR set to: 1
 29987                           ;LCD.c: 140: {
 29988                           ;LCD.c: 141: LATE |= 0b00000001;
 29989  0164B6  808D               	bsf	3981,0,c	;volatile
 29990                           
 29991                           ; BSR set to: 1
 29992                           ;LCD.c: 142: }
 29993                           ;LCD.c: 143: PulseEnablePin();
 29994                           
 29995                           ; BSR set to: 1
 29996  0164B8  EC5E  F0BE         	call	_PulseEnablePin	;wreg free
 29997                           
 29998                           ;LCD.c: 144: LATA &= ~(0b00001000+0b00010000+0b00100000);
 29999  0164BC  0EC7               	movlw	199
 30000  0164BE  1689               	andwf	3977,f,c	;volatile
 30001                           
 30002                           ;LCD.c: 145: LATE &= ~0b00000001;
 30003  0164C0  908D               	bcf	3981,0,c	;volatile
 30004                           
 30005                           ;LCD.c: 146: delayUS(10);
 30006  0164C2  0E0A               	movlw	10
 30007  0164C4  0101               	movlb	1	; () banked
 30008  0164C6  6F7C               	movwf	delayUS@US& (0+255),b
 30009  0164C8  0E00               	movlw	0
 30010  0164CA  0101               	movlb	1	; () banked
 30011  0164CC  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 30012  0164CE  0E00               	movlw	0
 30013  0164D0  0101               	movlb	1	; () banked
 30014  0164D2  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 30015  0164D4  0E00               	movlw	0
 30016  0164D6  0101               	movlb	1	; () banked
 30017  0164D8  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 30018  0164DA  ECA4  F0BA         	call	_delayUS	;wreg free
 30019                           
 30020                           ;LCD.c: 147: if(LSB_nibble&0b1000)
 30021  0164DE  0101               	movlb	1	; () banked
 30022  0164E0  B789               	btfsc	SendLCDbyte@LSB_nibble& (0+255),3,b
 30023                           
 30024                           ; BSR set to: 1
 30025                           ;LCD.c: 148: {
 30026                           ;LCD.c: 149: LATA |= 0b00001000;
 30027  0164E2  8689               	bsf	3977,3,c	;volatile
 30028                           
 30029                           ; BSR set to: 1
 30030                           ;LCD.c: 150: }
 30031                           ;LCD.c: 151: if(LSB_nibble&0b0100)
 30032                           
 30033                           ; BSR set to: 1
 30034  0164E4  0101               	movlb	1	; () banked
 30035  0164E6  B589               	btfsc	SendLCDbyte@LSB_nibble& (0+255),2,b
 30036                           
 30037                           ; BSR set to: 1
 30038                           ;LCD.c: 152: {
 30039                           ;LCD.c: 153: LATA |= 0b00010000;
 30040  0164E8  8889               	bsf	3977,4,c	;volatile
 30041                           
 30042                           ; BSR set to: 1
 30043                           ;LCD.c: 154: }
 30044                           ;LCD.c: 155: if(LSB_nibble&0b0010)
 30045                           
 30046                           ; BSR set to: 1
 30047  0164EA  0101               	movlb	1	; () banked
 30048  0164EC  B389               	btfsc	SendLCDbyte@LSB_nibble& (0+255),1,b
 30049                           
 30050                           ; BSR set to: 1
 30051                           ;LCD.c: 156: {
 30052                           ;LCD.c: 157: LATA |= 0b00100000;
 30053  0164EE  8A89               	bsf	3977,5,c	;volatile
 30054                           
 30055                           ; BSR set to: 1
 30056                           ;LCD.c: 158: }
 30057                           ;LCD.c: 159: if(LSB_nibble&0b0001)
 30058                           
 30059                           ; BSR set to: 1
 30060  0164F0  0101               	movlb	1	; () banked
 30061  0164F2  B189               	btfsc	SendLCDbyte@LSB_nibble& (0+255),0,b
 30062                           
 30063                           ; BSR set to: 1
 30064                           ;LCD.c: 160: {
 30065                           ;LCD.c: 161: LATE |= 0b00000001;
 30066  0164F4  808D               	bsf	3981,0,c	;volatile
 30067                           
 30068                           ; BSR set to: 1
 30069                           ;LCD.c: 162: }
 30070                           ;LCD.c: 163: PulseEnablePin();
 30071                           
 30072                           ; BSR set to: 1
 30073  0164F6  EC5E  F0BE         	call	_PulseEnablePin	;wreg free
 30074                           
 30075                           ;LCD.c: 164: }
 30076  0164FA  0012               	return	
 30077  0164FC                     l10392:
 30078                           
 30079                           ;LCD.c: 165: else
 30080                           ;LCD.c: 166: {
 30081                           ;LCD.c: 167: delayUS(20);
 30082  0164FC  0E14               	movlw	20
 30083  0164FE  0101               	movlb	1	; () banked
 30084  016500  6F7C               	movwf	delayUS@US& (0+255),b
 30085  016502  0E00               	movlw	0
 30086  016504  0101               	movlb	1	; () banked
 30087  016506  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 30088  016508  0E00               	movlw	0
 30089  01650A  0101               	movlb	1	; () banked
 30090  01650C  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 30091  01650E  0E00               	movlw	0
 30092  016510  0101               	movlb	1	; () banked
 30093  016512  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 30094  016514  ECA4  F0BA         	call	_delayUS	;wreg free
 30095  016518  0012               	return	
 30096  01651A                     __end_of_SendLCDbyte:
 30097                           	opt stack 0
 30098                           tblptru	equ	0xFF8
 30099                           tblptrh	equ	0xFF7
 30100                           tblptrl	equ	0xFF6
 30101                           tablat	equ	0xFF5
 30102                           prodh	equ	0xFF4
 30103                           prodl	equ	0xFF3
 30104                           intcon	equ	0xFF2
 30105                           postinc0	equ	0xFEE
 30106                           wreg	equ	0xFE8
 30107                           indf1	equ	0xFE7
 30108                           postinc1	equ	0xFE6
 30109                           postdec1	equ	0xFE5
 30110                           fsr1h	equ	0xFE2
 30111                           fsr1l	equ	0xFE1
 30112                           indf2	equ	0xFDF
 30113                           postinc2	equ	0xFDE
 30114                           postdec2	equ	0xFDD
 30115                           fsr2h	equ	0xFDA
 30116                           fsr2l	equ	0xFD9
 30117                           status	equ	0xFD8
 30118                           
 30119 ;; *************** function _PulseEnablePin *****************
 30120 ;; Defined at:
 30121 ;;		line 177 in file "LCD.c"
 30122 ;; Parameters:    Size  Location     Type
 30123 ;;		None
 30124 ;; Auto vars:     Size  Location     Type
 30125 ;;		None
 30126 ;; Return value:  Size  Location     Type
 30127 ;;		None               void
 30128 ;; Registers used:
 30129 ;;		wreg, status,2, status,0, cstack
 30130 ;; Tracked objects:
 30131 ;;		On entry : 0/0
 30132 ;;		On exit  : 0/0
 30133 ;;		Unchanged: 0/0
 30134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30139 ;;Total ram usage:        0 bytes
 30140 ;; Hardware stack levels used:    1
 30141 ;; Hardware stack levels required when called:    7
 30142 ;; This function calls:
 30143 ;;		_delayUS
 30144 ;; This function is called by:
 30145 ;;		_init_LCD
 30146 ;;		_SendLCDbyte
 30147 ;; This function uses a non-reentrant model
 30148 ;;
 30149                           
 30150                           	psect	text76
 30151  017CBC                     __ptext76:
 30152                           	opt stack 0
 30153  017CBC                     _PulseEnablePin:
 30154                           	opt stack 20
 30155                           
 30156                           ;LCD.c: 180: LATD |= (0b10000000);
 30157                           
 30158                           ;incstack = 0
 30159  017CBC  8E8C               	bsf	3980,7,c	;volatile
 30160                           
 30161                           ;LCD.c: 181: delayUS(2500);
 30162  017CBE  0EC4               	movlw	196
 30163  017CC0  0101               	movlb	1	; () banked
 30164  017CC2  6F7C               	movwf	delayUS@US& (0+255),b
 30165  017CC4  0E09               	movlw	9
 30166  017CC6  0101               	movlb	1	; () banked
 30167  017CC8  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 30168  017CCA  0E00               	movlw	0
 30169  017CCC  0101               	movlb	1	; () banked
 30170  017CCE  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 30171  017CD0  0E00               	movlw	0
 30172  017CD2  0101               	movlb	1	; () banked
 30173  017CD4  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 30174  017CD6  ECA4  F0BA         	call	_delayUS	;wreg free
 30175                           
 30176                           ;LCD.c: 183: LATD &= ~(0b10000000);
 30177  017CDA  9E8C               	bcf	3980,7,c	;volatile
 30178                           
 30179                           ;LCD.c: 184: delayUS(2500);
 30180  017CDC  0EC4               	movlw	196
 30181  017CDE  0101               	movlb	1	; () banked
 30182  017CE0  6F7C               	movwf	delayUS@US& (0+255),b
 30183  017CE2  0E09               	movlw	9
 30184  017CE4  0101               	movlb	1	; () banked
 30185  017CE6  6F7D               	movwf	(delayUS@US+1)& (0+255),b
 30186  017CE8  0E00               	movlw	0
 30187  017CEA  0101               	movlb	1	; () banked
 30188  017CEC  6F7E               	movwf	(delayUS@US+2)& (0+255),b
 30189  017CEE  0E00               	movlw	0
 30190  017CF0  0101               	movlb	1	; () banked
 30191  017CF2  6F7F               	movwf	(delayUS@US+3)& (0+255),b
 30192  017CF4  ECA4  F0BA         	call	_delayUS	;wreg free
 30193  017CF8  0012               	return	
 30194  017CFA                     __end_of_PulseEnablePin:
 30195                           	opt stack 0
 30196                           tblptru	equ	0xFF8
 30197                           tblptrh	equ	0xFF7
 30198                           tblptrl	equ	0xFF6
 30199                           tablat	equ	0xFF5
 30200                           prodh	equ	0xFF4
 30201                           prodl	equ	0xFF3
 30202                           intcon	equ	0xFF2
 30203                           postinc0	equ	0xFEE
 30204                           wreg	equ	0xFE8
 30205                           indf1	equ	0xFE7
 30206                           postinc1	equ	0xFE6
 30207                           postdec1	equ	0xFE5
 30208                           fsr1h	equ	0xFE2
 30209                           fsr1l	equ	0xFE1
 30210                           indf2	equ	0xFDF
 30211                           postinc2	equ	0xFDE
 30212                           postdec2	equ	0xFDD
 30213                           fsr2h	equ	0xFDA
 30214                           fsr2l	equ	0xFD9
 30215                           status	equ	0xFD8
 30216                           
 30217 ;; *************** function _delayUS *****************
 30218 ;; Defined at:
 30219 ;;		line 55 in file "MISC.c"
 30220 ;; Parameters:    Size  Location     Type
 30221 ;;  US              4   14[BANK1 ] long 
 30222 ;; Auto vars:     Size  Location     Type
 30223 ;;  i               4   19[BANK1 ] long 
 30224 ;;  j               1   23[BANK1 ] unsigned char 
 30225 ;; Return value:  Size  Location     Type
 30226 ;;		None               void
 30227 ;; Registers used:
 30228 ;;		wreg, status,2, status,0
 30229 ;; Tracked objects:
 30230 ;;		On entry : 0/0
 30231 ;;		On exit  : 0/0
 30232 ;;		Unchanged: 0/0
 30233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30234 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 30235 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 30236 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30237 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
 30238 ;;Total ram usage:       10 bytes
 30239 ;; Hardware stack levels used:    1
 30240 ;; Hardware stack levels required when called:    6
 30241 ;; This function calls:
 30242 ;;		Nothing
 30243 ;; This function is called by:
 30244 ;;		_main
 30245 ;;		_InitApp
 30246 ;;		_UARTstringWAIT
 30247 ;;		_SetBaud
 30248 ;;		_Command
 30249 ;;		_Send_Config1
 30250 ;;		_Zero_Config1
 30251 ;;		_One_Config1
 30252 ;;		_f_Config1
 30253 ;;		_Send_Config2
 30254 ;;		_Zero_Config2
 30255 ;;		_One_Config2
 30256 ;;		_init_LCD
 30257 ;;		_SendLCDbyte
 30258 ;;		_PulseEnablePin
 30259 ;;		_LCDScreenUpdate
 30260 ;;		_ResetI2C
 30261 ;; This function uses a non-reentrant model
 30262 ;;
 30263                           
 30264                           	psect	text77
 30265  017548                     __ptext77:
 30266                           	opt stack 0
 30267  017548                     _delayUS:
 30268                           	opt stack 22
 30269                           
 30270                           ;MISC.c: 57: long i;
 30271                           ;MISC.c: 58: unsigned char j;
 30272                           ;MISC.c: 59: for(i=0;i<US;i+=31)
 30273                           
 30274                           ;incstack = 0
 30275  017548  0E00               	movlw	0
 30276  01754A  0101               	movlb	1	; () banked
 30277  01754C  6F81               	movwf	delayUS@i& (0+255),b
 30278  01754E  0E00               	movlw	0
 30279  017550  0101               	movlb	1	; () banked
 30280  017552  6F82               	movwf	(delayUS@i+1)& (0+255),b
 30281  017554  0E00               	movlw	0
 30282  017556  0101               	movlb	1	; () banked
 30283  017558  6F83               	movwf	(delayUS@i+2)& (0+255),b
 30284  01755A  0E00               	movlw	0
 30285  01755C  0101               	movlb	1	; () banked
 30286  01755E  6F84               	movwf	(delayUS@i+3)& (0+255),b
 30287  017560  D015               	goto	l234
 30288  017562                     l10104:
 30289                           
 30290                           ; BSR set to: 1
 30291                           ;MISC.c: 60: {
 30292                           ;MISC.c: 61: for(j=0;j<41;j++)
 30293  017562  0E00               	movlw	0
 30294  017564  0101               	movlb	1	; () banked
 30295  017566  6F85               	movwf	delayUS@j& (0+255),b
 30296  017568  D003               	goto	L40
 30297  01756A                     l236:
 30298                           
 30299                           ; BSR set to: 1
 30300                           ;MISC.c: 62: {
 30301                           ;MISC.c: 63: __nop();
 30302  01756A  F000               	nop	
 30303  01756C  0101               	movlb	1	; () banked
 30304  01756E  2B85               	incf	delayUS@j& (0+255),f,b
 30305  017570                     L40:
 30306                           
 30307                           ; BSR set to: 1
 30308  017570  0E28               	movlw	40
 30309  017572  0101               	movlb	1	; () banked
 30310  017574  6585               	cpfsgt	delayUS@j& (0+255),b
 30311  017576  D7F9               	goto	l236
 30312                           
 30313                           ; BSR set to: 1
 30314                           
 30315                           ; BSR set to: 1
 30316  017578  0E1F               	movlw	31
 30317  01757A  0101               	movlb	1	; () banked
 30318  01757C  2781               	addwf	delayUS@i& (0+255),f,b
 30319  01757E  0E00               	movlw	0
 30320  017580  0101               	movlb	1	; () banked
 30321  017582  2382               	addwfc	(delayUS@i+1)& (0+255),f,b
 30322  017584  0101               	movlb	1	; () banked
 30323  017586  2383               	addwfc	(delayUS@i+2)& (0+255),f,b
 30324  017588  0101               	movlb	1	; () banked
 30325  01758A  2384               	addwfc	(delayUS@i+3)& (0+255),f,b
 30326  01758C                     l234:
 30327                           
 30328                           ; BSR set to: 1
 30329  01758C  0101               	movlb	1	; () banked
 30330  01758E  5184               	movf	(delayUS@i+3)& (0+255),w,b
 30331  017590  0A80               	xorlw	128
 30332  017592  0101               	movlb	1	; () banked
 30333  017594  6F80               	movwf	??_delayUS& (0+255),b
 30334  017596  0101               	movlb	1	; () banked
 30335  017598  517C               	movf	delayUS@US& (0+255),w,b
 30336  01759A  0101               	movlb	1	; () banked
 30337  01759C  5D81               	subwf	delayUS@i& (0+255),w,b
 30338  01759E  0101               	movlb	1	; () banked
 30339  0175A0  517D               	movf	(delayUS@US+1)& (0+255),w,b
 30340  0175A2  0101               	movlb	1	; () banked
 30341  0175A4  5982               	subwfb	(delayUS@i+1)& (0+255),w,b
 30342  0175A6  0101               	movlb	1	; () banked
 30343  0175A8  517E               	movf	(delayUS@US+2)& (0+255),w,b
 30344  0175AA  0101               	movlb	1	; () banked
 30345  0175AC  5983               	subwfb	(delayUS@i+2)& (0+255),w,b
 30346  0175AE  0101               	movlb	1	; () banked
 30347  0175B0  517F               	movf	(delayUS@US+3)& (0+255),w,b
 30348  0175B2  0A80               	xorlw	128
 30349  0175B4  0101               	movlb	1	; () banked
 30350  0175B6  5980               	subwfb	??_delayUS& (0+255),w,b
 30351  0175B8  B0D8               	btfsc	status,0,c
 30352                           
 30353                           ; BSR set to: 1
 30354                           
 30355                           ; BSR set to: 1
 30356  0175BA  0012               	return	
 30357  0175BC  D7D2               	goto	l10104
 30358  0175BE                     __end_of_delayUS:
 30359                           	opt stack 0
 30360                           tblptru	equ	0xFF8
 30361                           tblptrh	equ	0xFF7
 30362                           tblptrl	equ	0xFF6
 30363                           tablat	equ	0xFF5
 30364                           prodh	equ	0xFF4
 30365                           prodl	equ	0xFF3
 30366                           intcon	equ	0xFF2
 30367                           postinc0	equ	0xFEE
 30368                           wreg	equ	0xFE8
 30369                           indf1	equ	0xFE7
 30370                           postinc1	equ	0xFE6
 30371                           postdec1	equ	0xFE5
 30372                           fsr1h	equ	0xFE2
 30373                           fsr1l	equ	0xFE1
 30374                           indf2	equ	0xFDF
 30375                           postinc2	equ	0xFDE
 30376                           postdec2	equ	0xFDD
 30377                           fsr2h	equ	0xFDA
 30378                           fsr2l	equ	0xFD9
 30379                           status	equ	0xFD8
 30380                           
 30381 ;; *************** function _LCD_Scroll *****************
 30382 ;; Defined at:
 30383 ;;		line 409 in file "LCD.c"
 30384 ;; Parameters:    Size  Location     Type
 30385 ;;  This            2   29[BANK1 ] PTR unsigned char 
 30386 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 30387 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 30388 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 30389 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 30390 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 30391 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 30392 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 30393 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 30394 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 30395 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 30396 ;;		 -> STR_68(5), STR_67(9), STR_66(9), 
 30397 ;; Auto vars:     Size  Location     Type
 30398 ;;		None
 30399 ;; Return value:  Size  Location     Type
 30400 ;;		None               void
 30401 ;; Registers used:
 30402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30403 ;; Tracked objects:
 30404 ;;		On entry : 0/0
 30405 ;;		On exit  : 0/0
 30406 ;;		Unchanged: 0/0
 30407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30408 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30411 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 30412 ;;Total ram usage:        2 bytes
 30413 ;; Hardware stack levels used:    1
 30414 ;; Hardware stack levels required when called:    8
 30415 ;; This function calls:
 30416 ;;		_BufferCopy
 30417 ;; This function is called by:
 30418 ;;		_Command
 30419 ;; This function uses a non-reentrant model
 30420 ;;
 30421                           
 30422                           	psect	text78
 30423  014B68                     __ptext78:
 30424                           	opt stack 0
 30425  014B68                     _LCD_Scroll:
 30426                           	opt stack 20
 30427                           
 30428                           ;LCD.c: 411: if(!LCDwait)
 30429                           
 30430                           ; BSR set to: 1
 30431                           ;incstack = 0
 30432  014B68  0101               	movlb	1	; () banked
 30433  014B6A  6709               	tstfsz	_LCDwait& (0+255),b
 30434  014B6C  0012               	return	
 30435                           
 30436                           ; BSR set to: 1
 30437                           ;LCD.c: 412: {
 30438                           ;LCD.c: 413: LCDclearCount = 15000;
 30439  014B6E  0E98               	movlw	152
 30440  014B70  0101               	movlb	1	; () banked
 30441  014B72  6FD9               	movwf	_LCDclearCount& (0+255),b
 30442  014B74  0E3A               	movlw	58
 30443  014B76  0101               	movlb	1	; () banked
 30444  014B78  6FDA               	movwf	(_LCDclearCount+1)& (0+255),b
 30445  014B7A  0E00               	movlw	0
 30446  014B7C  0101               	movlb	1	; () banked
 30447  014B7E  6FDB               	movwf	(_LCDclearCount+2)& (0+255),b
 30448  014B80  0E00               	movlw	0
 30449  014B82  0101               	movlb	1	; () banked
 30450  014B84  6FDC               	movwf	(_LCDclearCount+3)& (0+255),b
 30451                           
 30452                           ; BSR set to: 1
 30453                           ;LCD.c: 414: ScrollFIFOCount++;
 30454  014B86  0101               	movlb	1	; () banked
 30455  014B88  2B0C               	incf	_ScrollFIFOCount& (0+255),f,b
 30456                           
 30457                           ; BSR set to: 1
 30458                           ;LCD.c: 415: if(ScrollFIFOCount == 1)
 30459  014B8A  0101               	movlb	1	; () banked
 30460  014B8C  050C               	decf	_ScrollFIFOCount& (0+255),w,b
 30461  014B8E  A4D8               	btfss	status,2,c
 30462  014B90  D017               	goto	l11978
 30463                           
 30464                           ; BSR set to: 1
 30465                           ;LCD.c: 416: {
 30466                           ;LCD.c: 417: BufferCopy(This,Scroll_1, 16, 0);
 30467  014B92  0101               	movlb	1	; () banked
 30468  014B94  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 30469  014B98  0101               	movlb	1	; () banked
 30470  014B9A  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 30471  014B9E  0101               	movlb	1	; () banked
 30472  014BA0  0E01               	movlw	high _Scroll_1
 30473  014BA2  0101               	movlb	1	; () banked
 30474  014BA4  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 30475  014BA6  0101               	movlb	1	; () banked
 30476  014BA8  0E0E               	movlw	low _Scroll_1
 30477  014BAA  0101               	movlb	1	; () banked
 30478  014BAC  6F86               	movwf	BufferCopy@to& (0+255),b
 30479  014BAE  0E10               	movlw	16
 30480  014BB0  0101               	movlb	1	; () banked
 30481  014BB2  6F88               	movwf	BufferCopy@count& (0+255),b
 30482  014BB4  0E00               	movlw	0
 30483  014BB6  0101               	movlb	1	; () banked
 30484  014BB8  6F89               	movwf	BufferCopy@shift& (0+255),b
 30485  014BBA  ECC2  F0B3         	call	_BufferCopy	;wreg free
 30486                           
 30487                           ;LCD.c: 418: }
 30488  014BBE  0012               	return	
 30489  014BC0                     l11978:
 30490                           
 30491                           ;LCD.c: 419: else if(ScrollFIFOCount == 2)
 30492  014BC0  0101               	movlb	1	; () banked
 30493  014BC2  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 30494  014BC4  0A02               	xorlw	2
 30495  014BC6  A4D8               	btfss	status,2,c
 30496  014BC8  D017               	goto	l11982
 30497                           
 30498                           ; BSR set to: 1
 30499                           ;LCD.c: 420: {
 30500                           ;LCD.c: 421: BufferCopy(This,Scroll_2, 16, 0);
 30501  014BCA  0101               	movlb	1	; () banked
 30502  014BCC  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 30503  014BD0  0101               	movlb	1	; () banked
 30504  014BD2  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 30505  014BD6  0101               	movlb	1	; () banked
 30506  014BD8  0E01               	movlw	high _Scroll_2
 30507  014BDA  0101               	movlb	1	; () banked
 30508  014BDC  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 30509  014BDE  0101               	movlb	1	; () banked
 30510  014BE0  0E1E               	movlw	low _Scroll_2
 30511  014BE2  0101               	movlb	1	; () banked
 30512  014BE4  6F86               	movwf	BufferCopy@to& (0+255),b
 30513  014BE6  0E10               	movlw	16
 30514  014BE8  0101               	movlb	1	; () banked
 30515  014BEA  6F88               	movwf	BufferCopy@count& (0+255),b
 30516  014BEC  0E00               	movlw	0
 30517  014BEE  0101               	movlb	1	; () banked
 30518  014BF0  6F89               	movwf	BufferCopy@shift& (0+255),b
 30519  014BF2  ECC2  F0B3         	call	_BufferCopy	;wreg free
 30520                           
 30521                           ;LCD.c: 422: }
 30522  014BF6  0012               	return	
 30523  014BF8                     l11982:
 30524                           
 30525                           ;LCD.c: 423: else if(ScrollFIFOCount == 3)
 30526  014BF8  0101               	movlb	1	; () banked
 30527  014BFA  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 30528  014BFC  0A03               	xorlw	3
 30529  014BFE  A4D8               	btfss	status,2,c
 30530  014C00  D017               	goto	l11986
 30531                           
 30532                           ; BSR set to: 1
 30533                           ;LCD.c: 424: {
 30534                           ;LCD.c: 425: BufferCopy(This,Scroll_3, 16, 0);
 30535  014C02  0101               	movlb	1	; () banked
 30536  014C04  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 30537  014C08  0101               	movlb	1	; () banked
 30538  014C0A  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 30539  014C0E  0101               	movlb	1	; () banked
 30540  014C10  0E01               	movlw	high _Scroll_3
 30541  014C12  0101               	movlb	1	; () banked
 30542  014C14  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 30543  014C16  0101               	movlb	1	; () banked
 30544  014C18  0E2E               	movlw	low _Scroll_3
 30545  014C1A  0101               	movlb	1	; () banked
 30546  014C1C  6F86               	movwf	BufferCopy@to& (0+255),b
 30547  014C1E  0E10               	movlw	16
 30548  014C20  0101               	movlb	1	; () banked
 30549  014C22  6F88               	movwf	BufferCopy@count& (0+255),b
 30550  014C24  0E00               	movlw	0
 30551  014C26  0101               	movlb	1	; () banked
 30552  014C28  6F89               	movwf	BufferCopy@shift& (0+255),b
 30553  014C2A  ECC2  F0B3         	call	_BufferCopy	;wreg free
 30554                           
 30555                           ;LCD.c: 426: }
 30556  014C2E  0012               	return	
 30557  014C30                     l11986:
 30558                           
 30559                           ;LCD.c: 427: else if(ScrollFIFOCount == 4)
 30560  014C30  0101               	movlb	1	; () banked
 30561  014C32  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 30562  014C34  0A04               	xorlw	4
 30563  014C36  A4D8               	btfss	status,2,c
 30564  014C38  D017               	goto	l11990
 30565                           
 30566                           ; BSR set to: 1
 30567                           ;LCD.c: 428: {
 30568                           ;LCD.c: 429: BufferCopy(This,Scroll_4, 16, 0);
 30569  014C3A  0101               	movlb	1	; () banked
 30570  014C3C  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 30571  014C40  0101               	movlb	1	; () banked
 30572  014C42  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 30573  014C46  0101               	movlb	1	; () banked
 30574  014C48  0E01               	movlw	high _Scroll_4
 30575  014C4A  0101               	movlb	1	; () banked
 30576  014C4C  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 30577  014C4E  0101               	movlb	1	; () banked
 30578  014C50  0E3E               	movlw	low _Scroll_4
 30579  014C52  0101               	movlb	1	; () banked
 30580  014C54  6F86               	movwf	BufferCopy@to& (0+255),b
 30581  014C56  0E10               	movlw	16
 30582  014C58  0101               	movlb	1	; () banked
 30583  014C5A  6F88               	movwf	BufferCopy@count& (0+255),b
 30584  014C5C  0E00               	movlw	0
 30585  014C5E  0101               	movlb	1	; () banked
 30586  014C60  6F89               	movwf	BufferCopy@shift& (0+255),b
 30587  014C62  ECC2  F0B3         	call	_BufferCopy	;wreg free
 30588                           
 30589                           ;LCD.c: 430: }
 30590  014C66  0012               	return	
 30591  014C68                     l11990:
 30592                           
 30593                           ;LCD.c: 431: else if(ScrollFIFOCount == 5)
 30594  014C68  0101               	movlb	1	; () banked
 30595  014C6A  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 30596  014C6C  0A05               	xorlw	5
 30597  014C6E  A4D8               	btfss	status,2,c
 30598  014C70  D017               	goto	l11994
 30599                           
 30600                           ; BSR set to: 1
 30601                           ;LCD.c: 432: {
 30602                           ;LCD.c: 433: BufferCopy(This,Scroll_5, 16, 0);
 30603  014C72  0101               	movlb	1	; () banked
 30604  014C74  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 30605  014C78  0101               	movlb	1	; () banked
 30606  014C7A  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 30607  014C7E  0101               	movlb	1	; () banked
 30608  014C80  0E01               	movlw	high _Scroll_5
 30609  014C82  0101               	movlb	1	; () banked
 30610  014C84  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 30611  014C86  0101               	movlb	1	; () banked
 30612  014C88  0E4E               	movlw	low _Scroll_5
 30613  014C8A  0101               	movlb	1	; () banked
 30614  014C8C  6F86               	movwf	BufferCopy@to& (0+255),b
 30615  014C8E  0E10               	movlw	16
 30616  014C90  0101               	movlb	1	; () banked
 30617  014C92  6F88               	movwf	BufferCopy@count& (0+255),b
 30618  014C94  0E00               	movlw	0
 30619  014C96  0101               	movlb	1	; () banked
 30620  014C98  6F89               	movwf	BufferCopy@shift& (0+255),b
 30621  014C9A  ECC2  F0B3         	call	_BufferCopy	;wreg free
 30622                           
 30623                           ;LCD.c: 434: }
 30624  014C9E  0012               	return	
 30625  014CA0                     l11994:
 30626                           
 30627                           ;LCD.c: 435: else if(ScrollFIFOCount == 6)
 30628  014CA0  0101               	movlb	1	; () banked
 30629  014CA2  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 30630  014CA4  0A06               	xorlw	6
 30631  014CA6  A4D8               	btfss	status,2,c
 30632  014CA8  D017               	goto	l11998
 30633                           
 30634                           ; BSR set to: 1
 30635                           ;LCD.c: 436: {
 30636                           ;LCD.c: 437: BufferCopy(This,Scroll_6, 16, 0);
 30637  014CAA  0101               	movlb	1	; () banked
 30638  014CAC  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 30639  014CB0  0101               	movlb	1	; () banked
 30640  014CB2  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 30641  014CB6  0101               	movlb	1	; () banked
 30642  014CB8  0E01               	movlw	high _Scroll_6
 30643  014CBA  0101               	movlb	1	; () banked
 30644  014CBC  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 30645  014CBE  0101               	movlb	1	; () banked
 30646  014CC0  0E5E               	movlw	low _Scroll_6
 30647  014CC2  0101               	movlb	1	; () banked
 30648  014CC4  6F86               	movwf	BufferCopy@to& (0+255),b
 30649  014CC6  0E10               	movlw	16
 30650  014CC8  0101               	movlb	1	; () banked
 30651  014CCA  6F88               	movwf	BufferCopy@count& (0+255),b
 30652  014CCC  0E00               	movlw	0
 30653  014CCE  0101               	movlb	1	; () banked
 30654  014CD0  6F89               	movwf	BufferCopy@shift& (0+255),b
 30655  014CD2  ECC2  F0B3         	call	_BufferCopy	;wreg free
 30656                           
 30657                           ;LCD.c: 438: }
 30658  014CD6  0012               	return	
 30659  014CD8                     l11998:
 30660                           
 30661                           ;LCD.c: 439: else if(ScrollFIFOCount == 7)
 30662  014CD8  0101               	movlb	1	; () banked
 30663  014CDA  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 30664  014CDC  0A07               	xorlw	7
 30665  014CDE  A4D8               	btfss	status,2,c
 30666  014CE0  D015               	goto	l12002
 30667                           
 30668                           ; BSR set to: 1
 30669                           ;LCD.c: 440: {
 30670                           ;LCD.c: 441: BufferCopy(This,Scroll_7, 16, 0);
 30671  014CE2  0101               	movlb	1	; () banked
 30672  014CE4  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 30673  014CE8  0101               	movlb	1	; () banked
 30674  014CEA  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 30675  014CEE  0E00               	movlw	high _Scroll_7
 30676  014CF0  0101               	movlb	1	; () banked
 30677  014CF2  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 30678  014CF4  0E27               	movlw	low _Scroll_7
 30679  014CF6  0101               	movlb	1	; () banked
 30680  014CF8  6F86               	movwf	BufferCopy@to& (0+255),b
 30681  014CFA  0E10               	movlw	16
 30682  014CFC  0101               	movlb	1	; () banked
 30683  014CFE  6F88               	movwf	BufferCopy@count& (0+255),b
 30684  014D00  0E00               	movlw	0
 30685  014D02  0101               	movlb	1	; () banked
 30686  014D04  6F89               	movwf	BufferCopy@shift& (0+255),b
 30687  014D06  ECC2  F0B3         	call	_BufferCopy	;wreg free
 30688                           
 30689                           ;LCD.c: 442: }
 30690  014D0A  0012               	return	
 30691  014D0C                     l12002:
 30692                           
 30693                           ;LCD.c: 443: else if(ScrollFIFOCount == 8)
 30694  014D0C  0101               	movlb	1	; () banked
 30695  014D0E  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 30696  014D10  0A08               	xorlw	8
 30697  014D12  A4D8               	btfss	status,2,c
 30698  014D14  D015               	goto	l12006
 30699                           
 30700                           ; BSR set to: 1
 30701                           ;LCD.c: 444: {
 30702                           ;LCD.c: 445: BufferCopy(This,Scroll_8, 16, 0);
 30703  014D16  0101               	movlb	1	; () banked
 30704  014D18  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 30705  014D1C  0101               	movlb	1	; () banked
 30706  014D1E  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 30707  014D22  0E00               	movlw	high _Scroll_8
 30708  014D24  0101               	movlb	1	; () banked
 30709  014D26  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 30710  014D28  0E37               	movlw	low _Scroll_8
 30711  014D2A  0101               	movlb	1	; () banked
 30712  014D2C  6F86               	movwf	BufferCopy@to& (0+255),b
 30713  014D2E  0E10               	movlw	16
 30714  014D30  0101               	movlb	1	; () banked
 30715  014D32  6F88               	movwf	BufferCopy@count& (0+255),b
 30716  014D34  0E00               	movlw	0
 30717  014D36  0101               	movlb	1	; () banked
 30718  014D38  6F89               	movwf	BufferCopy@shift& (0+255),b
 30719  014D3A  ECC2  F0B3         	call	_BufferCopy	;wreg free
 30720                           
 30721                           ;LCD.c: 446: }
 30722  014D3E  0012               	return	
 30723  014D40                     l12006:
 30724                           
 30725                           ;LCD.c: 447: else if(ScrollFIFOCount == 9)
 30726  014D40  0101               	movlb	1	; () banked
 30727  014D42  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 30728  014D44  0A09               	xorlw	9
 30729  014D46  A4D8               	btfss	status,2,c
 30730  014D48  D017               	goto	l12010
 30731                           
 30732                           ; BSR set to: 1
 30733                           ;LCD.c: 448: {
 30734                           ;LCD.c: 449: BufferCopy(This,Scroll_9, 16, 0);
 30735  014D4A  0101               	movlb	1	; () banked
 30736  014D4C  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 30737  014D50  0101               	movlb	1	; () banked
 30738  014D52  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 30739  014D56  0100               	movlb	0	; () banked
 30740  014D58  0E00               	movlw	high _Scroll_9
 30741  014D5A  0101               	movlb	1	; () banked
 30742  014D5C  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 30743  014D5E  0100               	movlb	0	; () banked
 30744  014D60  0EEA               	movlw	low _Scroll_9
 30745  014D62  0101               	movlb	1	; () banked
 30746  014D64  6F86               	movwf	BufferCopy@to& (0+255),b
 30747  014D66  0E10               	movlw	16
 30748  014D68  0101               	movlb	1	; () banked
 30749  014D6A  6F88               	movwf	BufferCopy@count& (0+255),b
 30750  014D6C  0E00               	movlw	0
 30751  014D6E  0101               	movlb	1	; () banked
 30752  014D70  6F89               	movwf	BufferCopy@shift& (0+255),b
 30753  014D72  ECC2  F0B3         	call	_BufferCopy	;wreg free
 30754                           
 30755                           ;LCD.c: 450: }
 30756  014D76  0012               	return	
 30757  014D78                     l12010:
 30758                           
 30759                           ;LCD.c: 451: else if(ScrollFIFOCount == 10)
 30760  014D78  0101               	movlb	1	; () banked
 30761  014D7A  510C               	movf	_ScrollFIFOCount& (0+255),w,b
 30762  014D7C  0A0A               	xorlw	10
 30763  014D7E  A4D8               	btfss	status,2,c
 30764  014D80  0012               	return	
 30765                           
 30766                           ; BSR set to: 1
 30767                           ;LCD.c: 452: {
 30768                           ;LCD.c: 453: BufferCopy(This,Scroll_10, 16, 0);
 30769  014D82  0101               	movlb	1	; () banked
 30770  014D84  C18C  F185         	movff	LCD_Scroll@This+1,BufferCopy@from+1
 30771  014D88  0101               	movlb	1	; () banked
 30772  014D8A  C18B  F184         	movff	LCD_Scroll@This,BufferCopy@from
 30773  014D8E  0100               	movlb	0	; () banked
 30774  014D90  0E00               	movlw	high _Scroll_10
 30775  014D92  0101               	movlb	1	; () banked
 30776  014D94  6F87               	movwf	(BufferCopy@to+1)& (0+255),b
 30777  014D96  0100               	movlb	0	; () banked
 30778  014D98  0EDA               	movlw	low _Scroll_10
 30779  014D9A  0101               	movlb	1	; () banked
 30780  014D9C  6F86               	movwf	BufferCopy@to& (0+255),b
 30781  014D9E  0E10               	movlw	16
 30782  014DA0  0101               	movlb	1	; () banked
 30783  014DA2  6F88               	movwf	BufferCopy@count& (0+255),b
 30784  014DA4  0E00               	movlw	0
 30785  014DA6  0101               	movlb	1	; () banked
 30786  014DA8  6F89               	movwf	BufferCopy@shift& (0+255),b
 30787  014DAA  ECC2  F0B3         	call	_BufferCopy	;wreg free
 30788  014DAE  0012               	return	
 30789  014DB0                     __end_of_LCD_Scroll:
 30790                           	opt stack 0
 30791                           tblptru	equ	0xFF8
 30792                           tblptrh	equ	0xFF7
 30793                           tblptrl	equ	0xFF6
 30794                           tablat	equ	0xFF5
 30795                           prodh	equ	0xFF4
 30796                           prodl	equ	0xFF3
 30797                           intcon	equ	0xFF2
 30798                           postinc0	equ	0xFEE
 30799                           wreg	equ	0xFE8
 30800                           indf1	equ	0xFE7
 30801                           postinc1	equ	0xFE6
 30802                           postdec1	equ	0xFE5
 30803                           fsr1h	equ	0xFE2
 30804                           fsr1l	equ	0xFE1
 30805                           indf2	equ	0xFDF
 30806                           postinc2	equ	0xFDE
 30807                           postdec2	equ	0xFDD
 30808                           fsr2h	equ	0xFDA
 30809                           fsr2l	equ	0xFD9
 30810                           status	equ	0xFD8
 30811                           
 30812 ;; *************** function _BufferCopy *****************
 30813 ;; Defined at:
 30814 ;;		line 87 in file "MISC.c"
 30815 ;; Parameters:    Size  Location     Type
 30816 ;;  from            2   22[BANK1 ] PTR unsigned char 
 30817 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 30818 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 30819 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 30820 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 30821 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 30822 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 30823 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 30824 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 30825 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 30826 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 30827 ;;		 -> STR_68(5), STR_67(9), STR_66(9), StringAddEqual@temp(100), 
 30828 ;;		 -> RemoveSpaces@That(100), low_isr@TEMP_Rxdata(100), 
 30829 ;;  to              2   24[BANK1 ] PTR unsigned char 
 30830 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 30831 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 30832 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 30833 ;;  count           1   26[BANK1 ] unsigned char 
 30834 ;;  shift           1   27[BANK1 ] unsigned char 
 30835 ;; Auto vars:     Size  Location     Type
 30836 ;;  i               1   28[BANK1 ] unsigned char 
 30837 ;; Return value:  Size  Location     Type
 30838 ;;		None               void
 30839 ;; Registers used:
 30840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30841 ;; Tracked objects:
 30842 ;;		On entry : 0/0
 30843 ;;		On exit  : 0/0
 30844 ;;		Unchanged: 0/0
 30845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 30846 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 30847 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 30848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 30849 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 30850 ;;Total ram usage:        7 bytes
 30851 ;; Hardware stack levels used:    1
 30852 ;; Hardware stack levels required when called:    7
 30853 ;; This function calls:
 30854 ;;		_cleanBuffer
 30855 ;; This function is called by:
 30856 ;;		_RemoveSpaces
 30857 ;;		_StringAddEqual
 30858 ;;		_LCD_Scroll
 30859 ;; This function uses a non-reentrant model
 30860 ;;
 30861                           
 30862                           	psect	text79
 30863  016784                     __ptext79:
 30864                           	opt stack 0
 30865  016784                     _BufferCopy:
 30866                           	opt stack 20
 30867                           
 30868                           ;MISC.c: 89: unsigned char i=0;
 30869                           
 30870                           ;incstack = 0
 30871  016784  0E00               	movlw	0
 30872  016786  0101               	movlb	1	; () banked
 30873  016788  6F8A               	movwf	BufferCopy@i& (0+255),b
 30874                           
 30875                           ; BSR set to: 1
 30876                           ;MISC.c: 90: cleanBuffer(to,count);
 30877  01678A  0101               	movlb	1	; () banked
 30878  01678C  C187  F17D         	movff	BufferCopy@to+1,cleanBuffer@data+1
 30879  016790  0101               	movlb	1	; () banked
 30880  016792  C186  F17C         	movff	BufferCopy@to,cleanBuffer@data
 30881  016796  0101               	movlb	1	; () banked
 30882  016798  C188  F17E         	movff	BufferCopy@count,cleanBuffer@count
 30883  01679C  0101               	movlb	1	; () banked
 30884  01679E  6B7F               	clrf	(cleanBuffer@count+1)& (0+255),b
 30885  0167A0  ECE4  F0BC         	call	_cleanBuffer	;wreg free
 30886                           
 30887                           ;MISC.c: 91: for(i = shift; i>0;i--)
 30888  0167A4  C189  F18A         	movff	BufferCopy@shift,BufferCopy@i
 30889  0167A8  D00B               	goto	L42
 30890  0167AA                     l10636:
 30891                           
 30892                           ; BSR set to: 1
 30893                           ;MISC.c: 92: {
 30894                           ;MISC.c: 93: *to = ' ';
 30895  0167AA  C186  FFD9         	movff	BufferCopy@to,fsr2l
 30896  0167AE  C187  FFDA         	movff	BufferCopy@to+1,fsr2h
 30897  0167B2  0E20               	movlw	32
 30898  0167B4  6EDF               	movwf	indf2,c
 30899                           
 30900                           ; BSR set to: 1
 30901                           ;MISC.c: 94: to++;
 30902  0167B6  0101               	movlb	1	; () banked
 30903  0167B8  4B86               	infsnz	BufferCopy@to& (0+255),f,b
 30904  0167BA  2B87               	incf	(BufferCopy@to+1)& (0+255),f,b
 30905                           
 30906                           ; BSR set to: 1
 30907  0167BC  0101               	movlb	1	; () banked
 30908  0167BE  078A               	decf	BufferCopy@i& (0+255),f,b
 30909  0167C0                     L42:
 30910                           
 30911                           ; BSR set to: 1
 30912  0167C0  0101               	movlb	1	; () banked
 30913  0167C2  678A               	tstfsz	BufferCopy@i& (0+255),b
 30914  0167C4  D7F2               	goto	l10636
 30915  0167C6  D020               	goto	L41
 30916  0167C8                     l10644:
 30917                           
 30918                           ; BSR set to: 1
 30919                           ;MISC.c: 97: {
 30920                           ;MISC.c: 98: *to = *from;
 30921  0167C8  0101               	movlb	1	; () banked
 30922  0167CA  C184  FFF6         	movff	BufferCopy@from,tblptrl
 30923  0167CE  0101               	movlb	1	; () banked
 30924  0167D0  C185  FFF7         	movff	BufferCopy@from+1,tblptrh
 30925  0167D4  0E00               	movlw	low (__mediumconst shr (0+16))
 30926  0167D6  6EF8               	movwf	tblptru,c
 30927  0167D8  C186  FFD9         	movff	BufferCopy@to,fsr2l
 30928  0167DC  C187  FFDA         	movff	BufferCopy@to+1,fsr2h
 30929  0167E0  0E0C               	movlw	(high __ramtop+-1)
 30930  0167E2  64F7               	cpfsgt	tblptrh,c
 30931  0167E4  D003               	bra	u13127
 30932  0167E6  0008               	tblrd		*
 30933  0167E8  50F5               	movf	tablat,w,c
 30934  0167EA  D005               	bra	u13120
 30935  0167EC                     u13127:
 30936  0167EC  CFF6 FFE1          	movff	tblptrl,fsr1l
 30937  0167F0  CFF7 FFE2          	movff	tblptrh,fsr1h
 30938  0167F4  50E7               	movf	indf1,w,c
 30939  0167F6                     u13120:
 30940  0167F6  6EDF               	movwf	indf2,c
 30941                           
 30942                           ;MISC.c: 99: from++;
 30943  0167F8  0101               	movlb	1	; () banked
 30944  0167FA  4B84               	infsnz	BufferCopy@from& (0+255),f,b
 30945  0167FC  2B85               	incf	(BufferCopy@from+1)& (0+255),f,b
 30946                           
 30947                           ; BSR set to: 1
 30948                           ;MISC.c: 100: to++;
 30949  0167FE  0101               	movlb	1	; () banked
 30950  016800  4B86               	infsnz	BufferCopy@to& (0+255),f,b
 30951  016802  2B87               	incf	(BufferCopy@to+1)& (0+255),f,b
 30952                           
 30953                           ; BSR set to: 1
 30954                           ;MISC.c: 101: count--;
 30955  016804  0101               	movlb	1	; () banked
 30956  016806  0788               	decf	BufferCopy@count& (0+255),f,b
 30957  016808                     L41:
 30958                           
 30959                           ; BSR set to: 1
 30960                           
 30961                           ; BSR set to: 1
 30962  016808  0101               	movlb	1	; () banked
 30963  01680A  C184  FFF6         	movff	BufferCopy@from,tblptrl
 30964  01680E  0101               	movlb	1	; () banked
 30965  016810  C185  FFF7         	movff	BufferCopy@from+1,tblptrh
 30966  016814  0E00               	movlw	low (__mediumconst shr (0+16))
 30967  016816  6EF8               	movwf	tblptru,c
 30968  016818  0E0C               	movlw	(high __ramtop+-1)
 30969  01681A  64F7               	cpfsgt	tblptrh,c
 30970  01681C  D003               	bra	u13137
 30971  01681E  0008               	tblrd		*
 30972  016820  50F5               	movf	tablat,w,c
 30973  016822  D005               	bra	u13130
 30974  016824                     u13137:
 30975  016824  CFF6 FFE1          	movff	tblptrl,fsr1l
 30976  016828  CFF7 FFE2          	movff	tblptrh,fsr1h
 30977  01682C  50E7               	movf	indf1,w,c
 30978  01682E                     u13130:
 30979  01682E  0900               	iorlw	0
 30980  016830  B4D8               	btfsc	status,2,c
 30981  016832  0012               	return	
 30982  016834  0101               	movlb	1	; () banked
 30983  016836  6788               	tstfsz	BufferCopy@count& (0+255),b
 30984  016838  D7C7               	goto	l10644
 30985  01683A  0012               	return	
 30986  01683C                     __end_of_BufferCopy:
 30987                           	opt stack 0
 30988                           tblptru	equ	0xFF8
 30989                           tblptrh	equ	0xFF7
 30990                           tblptrl	equ	0xFF6
 30991                           tablat	equ	0xFF5
 30992                           prodh	equ	0xFF4
 30993                           prodl	equ	0xFF3
 30994                           intcon	equ	0xFF2
 30995                           postinc0	equ	0xFEE
 30996                           wreg	equ	0xFE8
 30997                           indf1	equ	0xFE7
 30998                           postinc1	equ	0xFE6
 30999                           postdec1	equ	0xFE5
 31000                           fsr1h	equ	0xFE2
 31001                           fsr1l	equ	0xFE1
 31002                           indf2	equ	0xFDF
 31003                           postinc2	equ	0xFDE
 31004                           postdec2	equ	0xFDD
 31005                           fsr2h	equ	0xFDA
 31006                           fsr2l	equ	0xFD9
 31007                           status	equ	0xFD8
 31008                           
 31009 ;; *************** function _cleanBuffer *****************
 31010 ;; Defined at:
 31011 ;;		line 73 in file "MISC.c"
 31012 ;; Parameters:    Size  Location     Type
 31013 ;;  data            2   14[BANK1 ] PTR unsigned char 
 31014 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 31015 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 31016 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 31017 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 31018 ;;  count           2   16[BANK1 ] int 
 31019 ;; Auto vars:     Size  Location     Type
 31020 ;;  i               1   21[BANK1 ] unsigned char 
 31021 ;; Return value:  Size  Location     Type
 31022 ;;		None               void
 31023 ;; Registers used:
 31024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31025 ;; Tracked objects:
 31026 ;;		On entry : 0/0
 31027 ;;		On exit  : 0/0
 31028 ;;		Unchanged: 0/0
 31029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31030 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31031 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31032 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 31033 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 31034 ;;Total ram usage:        8 bytes
 31035 ;; Hardware stack levels used:    1
 31036 ;; Hardware stack levels required when called:    6
 31037 ;; This function calls:
 31038 ;;		Nothing
 31039 ;; This function is called by:
 31040 ;;		_main
 31041 ;;		_BufferCopy
 31042 ;;		_RemoveSpaces
 31043 ;;		_StringAddEqual
 31044 ;;		_Command
 31045 ;;		_LCDScreenUpdate
 31046 ;; This function uses a non-reentrant model
 31047 ;;
 31048                           
 31049                           	psect	text80
 31050  0179C8                     __ptext80:
 31051                           	opt stack 0
 31052  0179C8                     _cleanBuffer:
 31053                           	opt stack 23
 31054                           
 31055                           ;MISC.c: 75: unsigned char i=0;
 31056                           
 31057                           ;incstack = 0
 31058  0179C8  0E00               	movlw	0
 31059  0179CA  0101               	movlb	1	; () banked
 31060  0179CC  6F83               	movwf	cleanBuffer@i& (0+255),b
 31061                           
 31062                           ;MISC.c: 76: for(i=0; i<count;i++)
 31063  0179CE  0E00               	movlw	0
 31064  0179D0  0101               	movlb	1	; () banked
 31065  0179D2  6F83               	movwf	cleanBuffer@i& (0+255),b
 31066  0179D4  D00F               	goto	l10246
 31067  0179D6                     l10242:
 31068                           
 31069                           ; BSR set to: 1
 31070                           ;MISC.c: 77: {
 31071                           ;MISC.c: 78: data[i]= 0;
 31072  0179D6  0101               	movlb	1	; () banked
 31073  0179D8  5183               	movf	cleanBuffer@i& (0+255),w,b
 31074  0179DA  0D01               	mullw	1
 31075  0179DC  50F3               	movf	prodl,w,c
 31076  0179DE  0101               	movlb	1	; () banked
 31077  0179E0  257C               	addwf	cleanBuffer@data& (0+255),w,b
 31078  0179E2  6ED9               	movwf	fsr2l,c
 31079  0179E4  50F4               	movf	prodh,w,c
 31080  0179E6  0101               	movlb	1	; () banked
 31081  0179E8  217D               	addwfc	(cleanBuffer@data+1)& (0+255),w,b
 31082  0179EA  6EDA               	movwf	fsr2h,c
 31083  0179EC  0E00               	movlw	0
 31084  0179EE  6EDF               	movwf	indf2,c
 31085                           
 31086                           ; BSR set to: 1
 31087  0179F0  0101               	movlb	1	; () banked
 31088  0179F2  2B83               	incf	cleanBuffer@i& (0+255),f,b
 31089  0179F4                     l10246:
 31090                           
 31091                           ; BSR set to: 1
 31092  0179F4  0101               	movlb	1	; () banked
 31093  0179F6  5183               	movf	cleanBuffer@i& (0+255),w,b
 31094  0179F8  0101               	movlb	1	; () banked
 31095  0179FA  6F80               	movwf	??_cleanBuffer& (0+255),b
 31096  0179FC  6B81               	clrf	(??_cleanBuffer+1)& (0+255),b
 31097  0179FE  0101               	movlb	1	; () banked
 31098  017A00  5181               	movf	(??_cleanBuffer+1)& (0+255),w,b
 31099  017A02  0A80               	xorlw	128
 31100  017A04  0101               	movlb	1	; () banked
 31101  017A06  6F82               	movwf	(??_cleanBuffer+2)& (0+255),b
 31102  017A08  0101               	movlb	1	; () banked
 31103  017A0A  517E               	movf	cleanBuffer@count& (0+255),w,b
 31104  017A0C  0101               	movlb	1	; () banked
 31105  017A0E  5D80               	subwf	??_cleanBuffer& (0+255),w,b
 31106  017A10  0101               	movlb	1	; () banked
 31107  017A12  517F               	movf	(cleanBuffer@count+1)& (0+255),w,b
 31108  017A14  0A80               	xorlw	128
 31109  017A16  0101               	movlb	1	; () banked
 31110  017A18  5982               	subwfb	(??_cleanBuffer+2)& (0+255),w,b
 31111  017A1A  B0D8               	btfsc	status,0,c
 31112                           
 31113                           ; BSR set to: 1
 31114                           
 31115                           ; BSR set to: 1
 31116  017A1C  0012               	return	
 31117  017A1E  D7DB               	goto	l10242
 31118  017A20                     __end_of_cleanBuffer:
 31119                           	opt stack 0
 31120                           tblptru	equ	0xFF8
 31121                           tblptrh	equ	0xFF7
 31122                           tblptrl	equ	0xFF6
 31123                           tablat	equ	0xFF5
 31124                           prodh	equ	0xFF4
 31125                           prodl	equ	0xFF3
 31126                           intcon	equ	0xFF2
 31127                           postinc0	equ	0xFEE
 31128                           wreg	equ	0xFE8
 31129                           indf1	equ	0xFE7
 31130                           postinc1	equ	0xFE6
 31131                           postdec1	equ	0xFE5
 31132                           fsr1h	equ	0xFE2
 31133                           fsr1l	equ	0xFE1
 31134                           indf2	equ	0xFDF
 31135                           postinc2	equ	0xFDE
 31136                           postdec2	equ	0xFDD
 31137                           fsr2h	equ	0xFDA
 31138                           fsr2l	equ	0xFD9
 31139                           status	equ	0xFD8
 31140                           
 31141 ;; *************** function _InternalADC_Read *****************
 31142 ;; Defined at:
 31143 ;;		line 110 in file "ADC.c"
 31144 ;; Parameters:    Size  Location     Type
 31145 ;;  channel         1    wreg     unsigned char 
 31146 ;; Auto vars:     Size  Location     Type
 31147 ;;  channel         1   33[BANK1 ] unsigned char 
 31148 ;; Return value:  Size  Location     Type
 31149 ;;                  2   29[BANK1 ] int 
 31150 ;; Registers used:
 31151 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31152 ;; Tracked objects:
 31153 ;;		On entry : 0/0
 31154 ;;		On exit  : 0/0
 31155 ;;		Unchanged: 0/0
 31156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31157 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31158 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31159 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31160 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 31161 ;;Total ram usage:        5 bytes
 31162 ;; Hardware stack levels used:    1
 31163 ;; Hardware stack levels required when called:    9
 31164 ;; This function calls:
 31165 ;;		_UARTstring
 31166 ;; This function is called by:
 31167 ;;		_Command
 31168 ;;		_RTC_INIT
 31169 ;; This function uses a non-reentrant model
 31170 ;;
 31171                           
 31172                           	psect	text81
 31173  0177DC                     __ptext81:
 31174                           	opt stack 0
 31175  0177DC                     _InternalADC_Read:
 31176                           	opt stack 19
 31177                           
 31178                           ; BSR set to: 1
 31179                           ;incstack = 0
 31180                           ;InternalADC_Read@channel stored from wreg
 31181  0177DC  0101               	movlb	1	; () banked
 31182  0177DE  6F8F               	movwf	InternalADC_Read@channel& (0+255),b
 31183                           
 31184                           ; BSR set to: 1
 31185                           ;ADC.c: 112: ADCON0 =0;
 31186  0177E0  0E00               	movlw	0
 31187  0177E2  6EC2               	movwf	4034,c	;volatile
 31188                           
 31189                           ; BSR set to: 1
 31190                           ;ADC.c: 113: if(channel > 10)
 31191  0177E4  0E0A               	movlw	10
 31192  0177E6  0101               	movlb	1	; () banked
 31193  0177E8  658F               	cpfsgt	InternalADC_Read@channel& (0+255),b
 31194  0177EA  D00F               	goto	l12070
 31195                           
 31196                           ; BSR set to: 1
 31197                           ;ADC.c: 114: {
 31198                           ;ADC.c: 115: UARTstring("ADC Channel Out of Bounds");
 31199  0177EC  0EF5               	movlw	high STR_320
 31200  0177EE  0101               	movlb	1	; () banked
 31201  0177F0  6F88               	movwf	(UARTstring@data+1)& (0+255),b
 31202  0177F2  0E95               	movlw	low STR_320
 31203  0177F4  0101               	movlb	1	; () banked
 31204  0177F6  6F87               	movwf	UARTstring@data& (0+255),b
 31205  0177F8  ECD0  F0B4         	call	_UARTstring	;wreg free
 31206                           
 31207                           ;ADC.c: 116: return 0;
 31208  0177FC  0E00               	movlw	0
 31209  0177FE  0101               	movlb	1	; () banked
 31210  017800  6F8C               	movwf	(?_InternalADC_Read+1)& (0+255),b
 31211  017802  0E00               	movlw	0
 31212  017804  0101               	movlb	1	; () banked
 31213  017806  6F8B               	movwf	?_InternalADC_Read& (0+255),b
 31214  017808  0012               	return	
 31215  01780A                     l12070:
 31216                           
 31217                           ; BSR set to: 1
 31218                           ;ADC.c: 117: }
 31219                           ;ADC.c: 118: ADCON0 |= (channel << 2);
 31220  01780A  0101               	movlb	1	; () banked
 31221  01780C  458F               	rlncf	InternalADC_Read@channel& (0+255),w,b
 31222  01780E  46E8               	rlncf	wreg,f,c
 31223  017810  0BFC               	andlw	252
 31224  017812  12C2               	iorwf	4034,f,c	;volatile
 31225                           
 31226                           ;ADC.c: 119: ADCON2 |= 0b10100000;
 31227  017814  0EA0               	movlw	160
 31228  017816  12C0               	iorwf	4032,f,c	;volatile
 31229                           
 31230                           ;ADC.c: 120: ADCON2 |= 0b00000110;
 31231  017818  0E06               	movlw	6
 31232  01781A  12C0               	iorwf	4032,f,c	;volatile
 31233                           
 31234                           ; BSR set to: 1
 31235                           ;ADC.c: 121: ADCON0 |= 0b00000001;
 31236  01781C  80C2               	bsf	4034,0,c	;volatile
 31237                           
 31238                           ; BSR set to: 1
 31239                           ;ADC.c: 122: (PIE1bits.ADIE=0);
 31240  01781E  9C9D               	bcf	3997,6,c	;volatile
 31241                           
 31242                           ; BSR set to: 1
 31243                           ;ADC.c: 123: ADCON0 |= 0b00000010;
 31244  017820  82C2               	bsf	4034,1,c	;volatile
 31245  017822                     l914:
 31246                           
 31247                           ; BSR set to: 1
 31248  017822  B2C2               	btfsc	4034,1,c	;volatile
 31249  017824  D7FE               	goto	l914
 31250                           
 31251                           ; BSR set to: 1
 31252                           ;ADC.c: 125: return ((ADRESH << 8) + ADRESL);
 31253                           
 31254                           ; BSR set to: 1
 31255  017826  50C4               	movf	4036,w,c	;volatile
 31256  017828  0101               	movlb	1	; () banked
 31257  01782A  6F8E               	movwf	(??_InternalADC_Read+1)& (0+255),b
 31258  01782C  6B8D               	clrf	??_InternalADC_Read& (0+255),b
 31259  01782E  50C3               	movf	4035,w,c	;volatile
 31260  017830  0101               	movlb	1	; () banked
 31261  017832  258D               	addwf	??_InternalADC_Read& (0+255),w,b
 31262  017834  0101               	movlb	1	; () banked
 31263  017836  6F8B               	movwf	?_InternalADC_Read& (0+255),b
 31264  017838  0E00               	movlw	0
 31265  01783A  0101               	movlb	1	; () banked
 31266  01783C  218E               	addwfc	(??_InternalADC_Read+1)& (0+255),w,b
 31267  01783E  0101               	movlb	1	; () banked
 31268  017840  6F8C               	movwf	(?_InternalADC_Read+1)& (0+255),b
 31269  017842  0012               	return	
 31270  017844                     __end_of_InternalADC_Read:
 31271                           	opt stack 0
 31272                           tblptru	equ	0xFF8
 31273                           tblptrh	equ	0xFF7
 31274                           tblptrl	equ	0xFF6
 31275                           tablat	equ	0xFF5
 31276                           prodh	equ	0xFF4
 31277                           prodl	equ	0xFF3
 31278                           intcon	equ	0xFF2
 31279                           postinc0	equ	0xFEE
 31280                           wreg	equ	0xFE8
 31281                           indf1	equ	0xFE7
 31282                           postinc1	equ	0xFE6
 31283                           postdec1	equ	0xFE5
 31284                           fsr1h	equ	0xFE2
 31285                           fsr1l	equ	0xFE1
 31286                           indf2	equ	0xFDF
 31287                           postinc2	equ	0xFDE
 31288                           postdec2	equ	0xFDD
 31289                           fsr2h	equ	0xFDA
 31290                           fsr2l	equ	0xFD9
 31291                           status	equ	0xFD8
 31292                           
 31293 ;; *************** function _UARTstring *****************
 31294 ;; Defined at:
 31295 ;;		line 236 in file "UART.c"
 31296 ;; Parameters:    Size  Location     Type
 31297 ;;  data            2   25[BANK1 ] PTR unsigned char 
 31298 ;;		 -> STR_320(26), STR_319(3), STR_317(18), STR_315(18), 
 31299 ;;		 -> STR_311(20), STR_288(24), STR_285(3), STR_283(15), 
 31300 ;;		 -> STR_282(22), STR_281(50), STR_280(8), STR_279(6), 
 31301 ;;		 -> STR_278(6), STR_277(11), STR_276(17), STR_275(12), 
 31302 ;;		 -> STR_274(13), STR_273(10), STR_272(12), STR_267(28), 
 31303 ;;		 -> STR_266(68), STR_265(9), STR_264(11), STR_263(23), 
 31304 ;;		 -> STR_261(19), STR_259(20), STR_256(20), STR_247(21), 
 31305 ;;		 -> STR_246(61), STR_245(69), STR_244(7), STR_243(7), 
 31306 ;;		 -> STR_242(10), STR_241(11), STR_240(29), STR_239(13), 
 31307 ;;		 -> STR_238(33), STR_237(25), STR_236(28), STR_235(3), 
 31308 ;;		 -> STR_234(26), STR_233(2), STR_232(34), STR_231(37), 
 31309 ;;		 -> STR_228(24), STR_224(3), STR_214(13), STR_213(73), 
 31310 ;;		 -> STR_212(5), STR_211(12), STR_210(17), STR_204(28), 
 31311 ;;		 -> STR_202(30), STR_200(33), STR_193(42), STR_192(62), 
 31312 ;;		 -> STR_191(26), STR_187(43), STR_185(48), STR_183(27), 
 31313 ;;		 -> STR_176(42), STR_175(66), STR_174(25), STR_172(49), 
 31314 ;;		 -> Command@buf(200), STR_168(33), STR_166(38), STR_164(27), 
 31315 ;;		 -> STR_163(28), STR_153(37), STR_152(68), STR_151(18), 
 31316 ;;		 -> STR_150(15), STR_149(11), STR_148(28), STR_146(18), 
 31317 ;;		 -> STR_144(32), STR_140(31), STR_136(38), STR_123(24), 
 31318 ;;		 -> STR_122(68), STR_121(10), STR_120(6), STR_119(8), 
 31319 ;;		 -> STR_118(11), STR_117(21), STR_115(16), STR_113(19), 
 31320 ;;		 -> STR_110(18), STR_107(16), STR_104(15), STR_101(22), 
 31321 ;;		 -> STR_89(27), STR_88(68), STR_87(7), STR_86(8), 
 31322 ;;		 -> STR_85(11), STR_84(24), STR_82(19), STR_80(19), 
 31323 ;;		 -> STR_77(18), STR_74(25), STR_65(17), STR_64(68), 
 31324 ;;		 -> STR_63(8), STR_62(7), STR_61(11), STR_60(17), 
 31325 ;;		 -> STR_58(12), STR_56(9), STR_53(8), STR_50(13), 
 31326 ;;		 -> STR_47(9), STR_44(8), STR_41(13), STR_36(4), 
 31327 ;;		 -> STR_35(22), STR_29(22), STR_28(3), SetBaud@buf(50), 
 31328 ;;		 -> STR_22(4), STR_21(29), STR_11(12), STR_8(54), 
 31329 ;;		 -> STR_7(3), Version(20), STR_6(19), STR_5(38), 
 31330 ;;		 -> low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), STR_2(2), 
 31331 ;;		 -> STR_1(2), 
 31332 ;; Auto vars:     Size  Location     Type
 31333 ;;		None
 31334 ;; Return value:  Size  Location     Type
 31335 ;;		None               void
 31336 ;; Registers used:
 31337 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31338 ;; Tracked objects:
 31339 ;;		On entry : 0/0
 31340 ;;		On exit  : 0/0
 31341 ;;		Unchanged: 0/0
 31342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31343 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31345 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31346 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31347 ;;Total ram usage:        4 bytes
 31348 ;; Hardware stack levels used:    1
 31349 ;; Hardware stack levels required when called:    8
 31350 ;; This function calls:
 31351 ;;		_UARTchar
 31352 ;; This function is called by:
 31353 ;;		_main
 31354 ;;		_SetBaud
 31355 ;;		_Command
 31356 ;;		_InternalADC_Read
 31357 ;; This function uses a non-reentrant model
 31358 ;;
 31359                           
 31360                           	psect	text82
 31361  0169A0                     __ptext82:
 31362                           	opt stack 0
 31363  0169A0                     _UARTstring:
 31364                           	opt stack 21
 31365  0169A0                     l455:
 31366                           
 31367                           ;UART.c: 239: {
 31368                           ;UART.c: 240: if(*data != 0)
 31369  0169A0  0101               	movlb	1	; () banked
 31370  0169A2  C187  FFF6         	movff	UARTstring@data,tblptrl
 31371  0169A6  0101               	movlb	1	; () banked
 31372  0169A8  C188  FFF7         	movff	UARTstring@data+1,tblptrh
 31373  0169AC  0E00               	movlw	low (__mediumconst shr (0+16))
 31374  0169AE  6EF8               	movwf	tblptru,c
 31375  0169B0  0E0C               	movlw	(high __ramtop+-1)
 31376  0169B2  64F7               	cpfsgt	tblptrh,c
 31377  0169B4  D003               	bra	u12987
 31378  0169B6  0008               	tblrd		*
 31379  0169B8  50F5               	movf	tablat,w,c
 31380  0169BA  D005               	bra	u12980
 31381  0169BC                     u12987:
 31382  0169BC  CFF6 FFE1          	movff	tblptrl,fsr1l
 31383  0169C0  CFF7 FFE2          	movff	tblptrh,fsr1h
 31384  0169C4  50E7               	movf	indf1,w,c
 31385  0169C6                     u12980:
 31386  0169C6  0900               	iorlw	0
 31387  0169C8  B4D8               	btfsc	status,2,c
 31388  0169CA  D01D               	goto	l10600
 31389                           
 31390                           ;UART.c: 241: {
 31391                           ;UART.c: 242: UARTchar(*data, 0, 0);
 31392  0169CC  0E00               	movlw	0
 31393  0169CE  0101               	movlb	1	; () banked
 31394  0169D0  6F83               	movwf	UARTchar@NinethBit_override& (0+255),b
 31395  0169D2  0E00               	movlw	0
 31396  0169D4  0101               	movlb	1	; () banked
 31397  0169D6  6F84               	movwf	UARTchar@NinethBit_override_data& (0+255),b
 31398  0169D8  0101               	movlb	1	; () banked
 31399  0169DA  C187  FFF6         	movff	UARTstring@data,tblptrl
 31400  0169DE  0101               	movlb	1	; () banked
 31401  0169E0  C188  FFF7         	movff	UARTstring@data+1,tblptrh
 31402  0169E4  0E00               	movlw	low (__mediumconst shr (0+16))
 31403  0169E6  6EF8               	movwf	tblptru,c
 31404  0169E8  0E0C               	movlw	(high __ramtop+-1)
 31405  0169EA  64F7               	cpfsgt	tblptrh,c
 31406  0169EC  D003               	bra	u13007
 31407  0169EE  0008               	tblrd		*
 31408  0169F0  50F5               	movf	tablat,w,c
 31409  0169F2  D005               	bra	u13000
 31410  0169F4                     u13007:
 31411  0169F4  CFF6 FFE1          	movff	tblptrl,fsr1l
 31412  0169F8  CFF7 FFE2          	movff	tblptrh,fsr1h
 31413  0169FC  50E7               	movf	indf1,w,c
 31414  0169FE                     u13000:
 31415  0169FE  ECA9  F0B9         	call	_UARTchar
 31416  016A02                     l457:
 31417  016A02  A2AC               	btfss	4012,1,c	;volatile
 31418  016A04  D7FE               	goto	l457
 31419  016A06                     l10600:
 31420                           
 31421                           ;UART.c: 244: }
 31422                           ;UART.c: 245: } while( *data++);
 31423  016A06  0101               	movlb	1	; () banked
 31424  016A08  5187               	movf	UARTstring@data& (0+255),w,b
 31425  016A0A  0101               	movlb	1	; () banked
 31426  016A0C  6F89               	movwf	??_UARTstring& (0+255),b
 31427  016A0E  0101               	movlb	1	; () banked
 31428  016A10  5188               	movf	(UARTstring@data+1)& (0+255),w,b
 31429  016A12  0101               	movlb	1	; () banked
 31430  016A14  6F8A               	movwf	(??_UARTstring+1)& (0+255),b
 31431  016A16  0101               	movlb	1	; () banked
 31432  016A18  4B87               	infsnz	UARTstring@data& (0+255),f,b
 31433  016A1A  2B88               	incf	(UARTstring@data+1)& (0+255),f,b
 31434  016A1C  C189  FFF6         	movff	??_UARTstring,tblptrl
 31435  016A20  C18A  FFF7         	movff	??_UARTstring+1,tblptrh
 31436  016A24  0E00               	movlw	low (__mediumconst shr (0+16))
 31437  016A26  6EF8               	movwf	tblptru,c
 31438  016A28  0E0C               	movlw	(high __ramtop+-1)
 31439  016A2A  64F7               	cpfsgt	tblptrh,c
 31440  016A2C  D003               	bra	u13027
 31441  016A2E  0008               	tblrd		*
 31442  016A30  50F5               	movf	tablat,w,c
 31443  016A32  D005               	bra	u13020
 31444  016A34                     u13027:
 31445  016A34  CFF6 FFE1          	movff	tblptrl,fsr1l
 31446  016A38  CFF7 FFE2          	movff	tblptrh,fsr1h
 31447  016A3C  50E7               	movf	indf1,w,c
 31448  016A3E                     u13020:
 31449  016A3E  0900               	iorlw	0
 31450  016A40  B4D8               	btfsc	status,2,c
 31451  016A42  0012               	return	
 31452  016A44  D7AD               	goto	l455
 31453  016A46                     __end_of_UARTstring:
 31454                           	opt stack 0
 31455                           tblptru	equ	0xFF8
 31456                           tblptrh	equ	0xFF7
 31457                           tblptrl	equ	0xFF6
 31458                           tablat	equ	0xFF5
 31459                           prodh	equ	0xFF4
 31460                           prodl	equ	0xFF3
 31461                           intcon	equ	0xFF2
 31462                           postinc0	equ	0xFEE
 31463                           wreg	equ	0xFE8
 31464                           indf1	equ	0xFE7
 31465                           postinc1	equ	0xFE6
 31466                           postdec1	equ	0xFE5
 31467                           fsr1h	equ	0xFE2
 31468                           fsr1l	equ	0xFE1
 31469                           indf2	equ	0xFDF
 31470                           postinc2	equ	0xFDE
 31471                           postdec2	equ	0xFDD
 31472                           fsr2h	equ	0xFDA
 31473                           fsr2l	equ	0xFD9
 31474                           status	equ	0xFD8
 31475                           
 31476 ;; *************** function _UARTchar *****************
 31477 ;; Defined at:
 31478 ;;		line 198 in file "UART.c"
 31479 ;; Parameters:    Size  Location     Type
 31480 ;;  data            1    wreg     unsigned char 
 31481 ;;  NinethBit_ov    1   21[BANK1 ] unsigned char 
 31482 ;;  NinethBit_ov    1   22[BANK1 ] unsigned char 
 31483 ;; Auto vars:     Size  Location     Type
 31484 ;;  data            1   24[BANK1 ] unsigned char 
 31485 ;; Return value:  Size  Location     Type
 31486 ;;		None               void
 31487 ;; Registers used:
 31488 ;;		wreg, status,2, status,0, cstack
 31489 ;; Tracked objects:
 31490 ;;		On entry : 0/0
 31491 ;;		On exit  : 0/0
 31492 ;;		Unchanged: 0/0
 31493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31494 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 31495 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31496 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31497 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31498 ;;Total ram usage:        4 bytes
 31499 ;; Hardware stack levels used:    1
 31500 ;; Hardware stack levels required when called:    7
 31501 ;; This function calls:
 31502 ;;		_CheckSum_byte
 31503 ;; This function is called by:
 31504 ;;		_UARTstring
 31505 ;;		_UARTstringWAIT
 31506 ;; This function uses a non-reentrant model
 31507 ;;
 31508                           
 31509                           	psect	text83
 31510  017352                     __ptext83:
 31511                           	opt stack 0
 31512  017352                     _UARTchar:
 31513                           	opt stack 21
 31514                           
 31515                           ;incstack = 0
 31516                           ;UARTchar@data stored from wreg
 31517  017352  0101               	movlb	1	; () banked
 31518  017354  6F86               	movwf	UARTchar@data& (0+255),b
 31519                           
 31520                           ; BSR set to: 1
 31521                           ;UART.c: 200: if(TXSTAbits.TX9)
 31522  017356  ACAC               	btfss	4012,6,c	;volatile
 31523  017358  D037               	goto	l10236
 31524                           
 31525                           ; BSR set to: 1
 31526                           ;UART.c: 201: {
 31527                           ;UART.c: 203: if(!NinethBit_override)
 31528  01735A  0101               	movlb	1	; () banked
 31529  01735C  6783               	tstfsz	UARTchar@NinethBit_override& (0+255),b
 31530  01735E  D029               	goto	l10234
 31531  017360  D01C               	goto	l10232
 31532  017362                     l10226:
 31533                           
 31534                           ; BSR set to: 1
 31535                           ;UART.c: 209: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 31536  017362  0101               	movlb	1	; () banked
 31537  017364  C186  F17C         	movff	UARTchar@data,CheckSum_byte@This
 31538  017368  0101               	movlb	1	; () banked
 31539  01736A  6B7D               	clrf	(CheckSum_byte@This+1)& (0+255),b
 31540  01736C  0E03               	movlw	3
 31541  01736E  0101               	movlb	1	; () banked
 31542  017370  6F7E               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 31543  017372  EC85  F0BC         	call	_CheckSum_byte	;wreg free
 31544  017376  D00A               	goto	L43
 31545  017378                     l10228:
 31546                           
 31547                           ; BSR set to: 1
 31548                           ;UART.c: 212: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 31549  017378  0101               	movlb	1	; () banked
 31550  01737A  C186  F17C         	movff	UARTchar@data,CheckSum_byte@This
 31551  01737E  0101               	movlb	1	; () banked
 31552  017380  6B7D               	clrf	(CheckSum_byte@This+1)& (0+255),b
 31553  017382  0E02               	movlw	2
 31554  017384  0101               	movlb	1	; () banked
 31555  017386  6F7E               	movwf	CheckSum_byte@Odd_Even& (0+255),b
 31556  017388  EC85  F0BC         	call	_CheckSum_byte	;wreg free
 31557  01738C                     L43:
 31558  01738C  0101               	movlb	1	; () banked
 31559  01738E  6F85               	movwf	??_UARTchar& (0+255),b
 31560  017390  D015               	goto	L44
 31561  017392                     l449:
 31562                           
 31563                           ; BSR set to: 1
 31564                           ;UART.c: 215: TXSTAbits.TX9D = 1;
 31565  017392  80AC               	bsf	4012,0,c	;volatile
 31566                           
 31567                           ;UART.c: 216: break;
 31568  017394  D019               	goto	l10236
 31569  017396                     l450:
 31570                           
 31571                           ; BSR set to: 1
 31572                           ;UART.c: 218: TXSTAbits.TX9D = 0;
 31573  017396  90AC               	bcf	4012,0,c	;volatile
 31574                           
 31575                           ;UART.c: 219: break;
 31576  017398  D017               	goto	l10236
 31577  01739A                     l10232:
 31578                           
 31579                           ; BSR set to: 1
 31580  01739A  0101               	movlb	1	; () banked
 31581  01739C  510A               	movf	_PARITY& (0+255),w,b
 31582                           
 31583                           ; Switch size 1, requested type "space"
 31584                           ; Number of cases is 3, Range of values is 1 to 3
 31585                           ; switch strategies available:
 31586                           ; Name         Instructions Cycles
 31587                           ; simple_byte           10     6 (average)
 31588                           ;	Chosen strategy is simple_byte
 31589  01739E  0A01               	xorlw	1	; case 1
 31590  0173A0  B4D8               	btfsc	status,2,c
 31591  0173A2  D7DF               	goto	l10226
 31592  0173A4  0A03               	xorlw	3	; case 2
 31593  0173A6  B4D8               	btfsc	status,2,c
 31594  0173A8  D7E7               	goto	l10228
 31595  0173AA  0A01               	xorlw	1	; case 3
 31596  0173AC  B4D8               	btfsc	status,2,c
 31597  0173AE  D7F1               	goto	l449
 31598  0173B0  D7F2               	goto	l450
 31599  0173B2                     l10234:
 31600                           
 31601                           ; BSR set to: 1
 31602                           ;UART.c: 222: else
 31603                           ;UART.c: 223: {
 31604                           ;UART.c: 224: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 31605  0173B2  C184  F185         	movff	UARTchar@NinethBit_override_data,??_UARTchar
 31606  0173B6  0E01               	movlw	1
 31607  0173B8  0101               	movlb	1	; () banked
 31608  0173BA  1785               	andwf	??_UARTchar& (0+255),f,b
 31609  0173BC                     L44:
 31610  0173BC  50AC               	movf	4012,w,c	;volatile
 31611  0173BE  0101               	movlb	1	; () banked
 31612  0173C0  1985               	xorwf	??_UARTchar& (0+255),w,b
 31613  0173C2  0BFE               	andlw	-2
 31614  0173C4  1985               	xorwf	??_UARTchar& (0+255),w,b
 31615  0173C6  6EAC               	movwf	4012,c	;volatile
 31616  0173C8                     l10236:
 31617                           
 31618                           ; BSR set to: 1
 31619                           ;UART.c: 225: }
 31620                           ;UART.c: 226: }
 31621                           ;UART.c: 227: TX_OLD = data;
 31622  0173C8  C186  F0D8         	movff	UARTchar@data,_TX_OLD
 31623                           
 31624                           ; BSR set to: 1
 31625                           ;UART.c: 228: TXREG = data;
 31626  0173CC  C186  FFAD         	movff	UARTchar@data,4013	;volatile
 31627                           
 31628                           ; BSR set to: 1
 31629  0173D0  0012               	return	
 31630  0173D2                     __end_of_UARTchar:
 31631                           	opt stack 0
 31632                           tblptru	equ	0xFF8
 31633                           tblptrh	equ	0xFF7
 31634                           tblptrl	equ	0xFF6
 31635                           tablat	equ	0xFF5
 31636                           prodh	equ	0xFF4
 31637                           prodl	equ	0xFF3
 31638                           intcon	equ	0xFF2
 31639                           postinc0	equ	0xFEE
 31640                           wreg	equ	0xFE8
 31641                           indf1	equ	0xFE7
 31642                           postinc1	equ	0xFE6
 31643                           postdec1	equ	0xFE5
 31644                           fsr1h	equ	0xFE2
 31645                           fsr1l	equ	0xFE1
 31646                           indf2	equ	0xFDF
 31647                           postinc2	equ	0xFDE
 31648                           postdec2	equ	0xFDD
 31649                           fsr2h	equ	0xFDA
 31650                           fsr2l	equ	0xFD9
 31651                           status	equ	0xFD8
 31652                           
 31653 ;; *************** function _CheckSum_byte *****************
 31654 ;; Defined at:
 31655 ;;		line 343 in file "MISC.c"
 31656 ;; Parameters:    Size  Location     Type
 31657 ;;  This            2   14[BANK1 ] unsigned int 
 31658 ;;  Odd_Even        1   16[BANK1 ] unsigned char 
 31659 ;; Auto vars:     Size  Location     Type
 31660 ;;  ThisTemp        2   17[BANK1 ] unsigned int 
 31661 ;;  i               1   20[BANK1 ] unsigned char 
 31662 ;;  Parity          1   19[BANK1 ] unsigned char 
 31663 ;; Return value:  Size  Location     Type
 31664 ;;                  1    wreg      unsigned char 
 31665 ;; Registers used:
 31666 ;;		wreg, status,2, status,0
 31667 ;; Tracked objects:
 31668 ;;		On entry : 0/0
 31669 ;;		On exit  : 0/0
 31670 ;;		Unchanged: 0/0
 31671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31672 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 31673 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31675 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 31676 ;;Total ram usage:        7 bytes
 31677 ;; Hardware stack levels used:    1
 31678 ;; Hardware stack levels required when called:    6
 31679 ;; This function calls:
 31680 ;;		Nothing
 31681 ;; This function is called by:
 31682 ;;		_UARTchar
 31683 ;; This function uses a non-reentrant model
 31684 ;;
 31685                           
 31686                           	psect	text84
 31687  01790A                     __ptext84:
 31688                           	opt stack 0
 31689  01790A                     _CheckSum_byte:
 31690                           	opt stack 21
 31691                           
 31692                           ;MISC.c: 345: char i = 0;
 31693                           
 31694                           ; BSR set to: 1
 31695                           ;incstack = 0
 31696  01790A  0E00               	movlw	0
 31697  01790C  0101               	movlb	1	; () banked
 31698  01790E  6F82               	movwf	CheckSum_byte@i& (0+255),b
 31699                           
 31700                           ;MISC.c: 346: unsigned char Parity = 0;
 31701  017910  0E00               	movlw	0
 31702  017912  0101               	movlb	1	; () banked
 31703  017914  6F81               	movwf	CheckSum_byte@Parity& (0+255),b
 31704                           
 31705                           ; BSR set to: 1
 31706                           ;MISC.c: 347: unsigned int ThisTemp = This;
 31707  017916  C17C  F17F         	movff	CheckSum_byte@This,CheckSum_byte@ThisTemp
 31708  01791A  C17D  F180         	movff	CheckSum_byte@This+1,CheckSum_byte@ThisTemp+1
 31709                           
 31710                           ;MISC.c: 349: for (i =0; i<8; i++)
 31711  01791E  0E00               	movlw	0
 31712  017920  0101               	movlb	1	; () banked
 31713  017922  6F82               	movwf	CheckSum_byte@i& (0+255),b
 31714  017924  D00B               	goto	L45
 31715  017926                     l348:
 31716                           
 31717                           ; BSR set to: 1
 31718                           ;MISC.c: 350: {
 31719                           ;MISC.c: 351: if((ThisTemp & 0x01) == 1)
 31720  017926  0101               	movlb	1	; () banked
 31721  017928  A17F               	btfss	CheckSum_byte@ThisTemp& (0+255),0,b
 31722  01792A  D002               	goto	l350
 31723                           
 31724                           ; BSR set to: 1
 31725                           ;MISC.c: 352: {
 31726                           ;MISC.c: 353: Parity++;
 31727  01792C  0101               	movlb	1	; () banked
 31728  01792E  2B81               	incf	CheckSum_byte@Parity& (0+255),f,b
 31729  017930                     l350:
 31730                           
 31731                           ; BSR set to: 1
 31732                           ;MISC.c: 354: }
 31733                           ;MISC.c: 355: ThisTemp >>= 1;
 31734  017930  0101               	movlb	1	; () banked
 31735  017932  90D8               	bcf	status,0,c
 31736  017934  3380               	rrcf	(CheckSum_byte@ThisTemp+1)& (0+255),f,b
 31737  017936  337F               	rrcf	CheckSum_byte@ThisTemp& (0+255),f,b
 31738  017938  0101               	movlb	1	; () banked
 31739  01793A  2B82               	incf	CheckSum_byte@i& (0+255),f,b
 31740  01793C                     L45:
 31741                           
 31742                           ; BSR set to: 1
 31743  01793C  0E07               	movlw	7
 31744  01793E  0101               	movlb	1	; () banked
 31745  017940  6582               	cpfsgt	CheckSum_byte@i& (0+255),b
 31746  017942  D7F1               	goto	l348
 31747                           
 31748                           ; BSR set to: 1
 31749                           ;MISC.c: 356: }
 31750                           ;MISC.c: 357: if(Odd_Even == 3)
 31751                           
 31752                           ; BSR set to: 1
 31753  017944  0101               	movlb	1	; () banked
 31754  017946  517E               	movf	CheckSum_byte@Odd_Even& (0+255),w,b
 31755  017948  0A03               	xorlw	3
 31756  01794A  A4D8               	btfss	status,2,c
 31757  01794C  D007               	goto	l351
 31758                           
 31759                           ; BSR set to: 1
 31760                           ;MISC.c: 358: {
 31761                           ;MISC.c: 359: if(Parity % 2 == 0)
 31762  01794E  0101               	movlb	1	; () banked
 31763  017950  B181               	btfsc	CheckSum_byte@Parity& (0+255),0,b
 31764  017952  D002               	goto	l10136
 31765                           
 31766                           ; BSR set to: 1
 31767                           ;MISC.c: 360: {
 31768                           ;MISC.c: 361: return 1;
 31769  017954  0E01               	movlw	1
 31770  017956  0012               	return	
 31771  017958                     l10136:
 31772                           
 31773                           ; BSR set to: 1
 31774                           ;MISC.c: 362: }
 31775                           ;MISC.c: 363: return 0;
 31776  017958  0E00               	movlw	0
 31777  01795A  0012               	return	
 31778  01795C                     l351:
 31779                           
 31780                           ; BSR set to: 1
 31781                           ;MISC.c: 365: else
 31782                           ;MISC.c: 366: {
 31783                           ;MISC.c: 367: if(Parity % 2 == 1)
 31784  01795C  0101               	movlb	1	; () banked
 31785  01795E  A181               	btfss	CheckSum_byte@Parity& (0+255),0,b
 31786  017960  D002               	goto	l10146
 31787                           
 31788                           ; BSR set to: 1
 31789                           ;MISC.c: 368: {
 31790                           ;MISC.c: 369: return 1;
 31791  017962  0E01               	movlw	1
 31792  017964  0012               	return	
 31793  017966                     l10146:
 31794                           
 31795                           ; BSR set to: 1
 31796                           ;MISC.c: 370: }
 31797                           ;MISC.c: 371: return 0;
 31798  017966  0E00               	movlw	0
 31799  017968  0012               	return	
 31800  01796A                     __end_of_CheckSum_byte:
 31801                           	opt stack 0
 31802                           tblptru	equ	0xFF8
 31803                           tblptrh	equ	0xFF7
 31804                           tblptrl	equ	0xFF6
 31805                           tablat	equ	0xFF5
 31806                           prodh	equ	0xFF4
 31807                           prodl	equ	0xFF3
 31808                           intcon	equ	0xFF2
 31809                           postinc0	equ	0xFEE
 31810                           wreg	equ	0xFE8
 31811                           indf1	equ	0xFE7
 31812                           postinc1	equ	0xFE6
 31813                           postdec1	equ	0xFE5
 31814                           fsr1h	equ	0xFE2
 31815                           fsr1l	equ	0xFE1
 31816                           indf2	equ	0xFDF
 31817                           postinc2	equ	0xFDE
 31818                           postdec2	equ	0xFDD
 31819                           fsr2h	equ	0xFDA
 31820                           fsr2l	equ	0xFD9
 31821                           status	equ	0xFD8
 31822                           
 31823 ;; *************** function _ISNUMBER *****************
 31824 ;; Defined at:
 31825 ;;		line 380 in file "MISC.c"
 31826 ;; Parameters:    Size  Location     Type
 31827 ;;  ascii           1    wreg     unsigned char 
 31828 ;; Auto vars:     Size  Location     Type
 31829 ;;  ascii           1   14[BANK1 ] unsigned char 
 31830 ;; Return value:  Size  Location     Type
 31831 ;;                  1    wreg      unsigned char 
 31832 ;; Registers used:
 31833 ;;		wreg, status,2, status,0
 31834 ;; Tracked objects:
 31835 ;;		On entry : 0/0
 31836 ;;		On exit  : 0/0
 31837 ;;		Unchanged: 0/0
 31838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31840 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 31842 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 31843 ;;Total ram usage:        1 bytes
 31844 ;; Hardware stack levels used:    1
 31845 ;; Hardware stack levels required when called:    6
 31846 ;; This function calls:
 31847 ;;		Nothing
 31848 ;; This function is called by:
 31849 ;;		_Command
 31850 ;; This function uses a non-reentrant model
 31851 ;;
 31852                           
 31853                           	psect	text85
 31854  000644                     __ptext85:
 31855                           	opt stack 0
 31856  000644                     _ISNUMBER:
 31857                           	opt stack 22
 31858                           
 31859                           ; BSR set to: 1
 31860                           ;incstack = 0
 31861                           ;ISNUMBER@ascii stored from wreg
 31862  000644  0101               	movlb	1	; () banked
 31863  000646  6F7C               	movwf	ISNUMBER@ascii& (0+255),b
 31864                           
 31865                           ; BSR set to: 1
 31866                           ;MISC.c: 382: if(ascii >= '0' && ascii <='9')
 31867  000648  0E2F               	movlw	47
 31868  00064A  0101               	movlb	1	; () banked
 31869  00064C  657C               	cpfsgt	ISNUMBER@ascii& (0+255),b
 31870  00064E  D007               	goto	l11896
 31871                           
 31872                           ; BSR set to: 1
 31873  000650  0E3A               	movlw	58
 31874  000652  0101               	movlb	1	; () banked
 31875  000654  5D7C               	subwf	ISNUMBER@ascii& (0+255),w,b
 31876  000656  B0D8               	btfsc	status,0,c
 31877  000658  D002               	goto	l11896
 31878                           
 31879                           ; BSR set to: 1
 31880                           ;MISC.c: 383: {
 31881                           ;MISC.c: 384: return 1;
 31882  00065A  0E01               	movlw	1
 31883  00065C  0012               	return	
 31884  00065E                     l11896:
 31885                           
 31886                           ; BSR set to: 1
 31887                           ;MISC.c: 386: else
 31888                           ;MISC.c: 387: {
 31889                           ;MISC.c: 388: return 0;
 31890  00065E  0E00               	movlw	0
 31891  000660  0012               	return	
 31892  000662                     __end_of_ISNUMBER:
 31893                           	opt stack 0
 31894                           tblptru	equ	0xFF8
 31895                           tblptrh	equ	0xFF7
 31896                           tblptrl	equ	0xFF6
 31897                           tablat	equ	0xFF5
 31898                           prodh	equ	0xFF4
 31899                           prodl	equ	0xFF3
 31900                           intcon	equ	0xFF2
 31901                           postinc0	equ	0xFEE
 31902                           wreg	equ	0xFE8
 31903                           indf1	equ	0xFE7
 31904                           postinc1	equ	0xFE6
 31905                           postdec1	equ	0xFE5
 31906                           fsr1h	equ	0xFE2
 31907                           fsr1l	equ	0xFE1
 31908                           indf2	equ	0xFDF
 31909                           postinc2	equ	0xFDE
 31910                           postdec2	equ	0xFDD
 31911                           fsr2h	equ	0xFDA
 31912                           fsr2l	equ	0xFD9
 31913                           status	equ	0xFD8
 31914                           
 31915 ;; *************** function _GetEnteredNumber *****************
 31916 ;; Defined at:
 31917 ;;		line 200 in file "MISC.c"
 31918 ;; Parameters:    Size  Location     Type
 31919 ;;  This            2   26[BANK1 ] PTR unsigned char 
 31920 ;;		 -> Rxdata(100), 
 31921 ;; Auto vars:     Size  Location     Type
 31922 ;;  temp            4   37[BANK1 ] long 
 31923 ;;  negative        1   36[BANK1 ] unsigned char 
 31924 ;;  i               1   35[BANK1 ] unsigned char 
 31925 ;; Return value:  Size  Location     Type
 31926 ;;                  4   26[BANK1 ] long 
 31927 ;; Registers used:
 31928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31929 ;; Tracked objects:
 31930 ;;		On entry : 0/0
 31931 ;;		On exit  : 0/0
 31932 ;;		Unchanged: 0/0
 31933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 31934 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 31935 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 31936 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 31937 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
 31938 ;;Total ram usage:       15 bytes
 31939 ;; Hardware stack levels used:    1
 31940 ;; Hardware stack levels required when called:    7
 31941 ;; This function calls:
 31942 ;;		___lmul
 31943 ;; This function is called by:
 31944 ;;		_Command
 31945 ;; This function uses a non-reentrant model
 31946 ;;
 31947                           
 31948                           	psect	text86
 31949  014DB0                     __ptext86:
 31950                           	opt stack 0
 31951  014DB0                     _GetEnteredNumber:
 31952                           	opt stack 21
 31953                           
 31954                           ;MISC.c: 202: unsigned char i =0;
 31955                           
 31956                           ; BSR set to: 1
 31957                           ;incstack = 0
 31958  014DB0  0E00               	movlw	0
 31959  014DB2  0101               	movlb	1	; () banked
 31960  014DB4  6F91               	movwf	GetEnteredNumber@i& (0+255),b
 31961                           
 31962                           ;MISC.c: 203: long temp =0;
 31963  014DB6  0E00               	movlw	0
 31964  014DB8  0101               	movlb	1	; () banked
 31965  014DBA  6F93               	movwf	GetEnteredNumber@temp& (0+255),b
 31966  014DBC  0E00               	movlw	0
 31967  014DBE  0101               	movlb	1	; () banked
 31968  014DC0  6F94               	movwf	(GetEnteredNumber@temp+1)& (0+255),b
 31969  014DC2  0E00               	movlw	0
 31970  014DC4  0101               	movlb	1	; () banked
 31971  014DC6  6F95               	movwf	(GetEnteredNumber@temp+2)& (0+255),b
 31972  014DC8  0E00               	movlw	0
 31973  014DCA  0101               	movlb	1	; () banked
 31974  014DCC  6F96               	movwf	(GetEnteredNumber@temp+3)& (0+255),b
 31975                           
 31976                           ;MISC.c: 204: unsigned char negative =0;
 31977  014DCE  0E00               	movlw	0
 31978  014DD0  0101               	movlb	1	; () banked
 31979  014DD2  6F92               	movwf	GetEnteredNumber@negative& (0+255),b
 31980                           
 31981                           ;MISC.c: 205: while(*This != '=' && *This != 0)
 31982  014DD4  D003               	goto	l11744
 31983  014DD6                     l11742:
 31984                           
 31985                           ; BSR set to: 1
 31986                           ;MISC.c: 206: {
 31987                           ;MISC.c: 207: This++;
 31988  014DD6  0101               	movlb	1	; () banked
 31989  014DD8  4B88               	infsnz	GetEnteredNumber@This& (0+255),f,b
 31990  014DDA  2B89               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 31991  014DDC                     l11744:
 31992                           
 31993                           ; BSR set to: 1
 31994  014DDC  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 31995  014DE0  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 31996  014DE4  50DF               	movf	indf2,w,c
 31997  014DE6  0A3D               	xorlw	61
 31998  014DE8  B4D8               	btfsc	status,2,c
 31999  014DEA  D007               	goto	l11748
 32000                           
 32001                           ; BSR set to: 1
 32002  014DEC  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32003  014DF0  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32004  014DF4  50DF               	movf	indf2,w,c
 32005  014DF6  A4D8               	btfss	status,2,c
 32006  014DF8  D7EE               	goto	l11742
 32007  014DFA                     l11748:
 32008                           
 32009                           ; BSR set to: 1
 32010                           ;MISC.c: 209: }
 32011                           ;MISC.c: 210: if(*This == 0)
 32012  014DFA  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32013  014DFE  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32014  014E02  50DF               	movf	indf2,w,c
 32015  014E04  A4D8               	btfss	status,2,c
 32016  014E06  D00D               	goto	l11754
 32017                           
 32018                           ; BSR set to: 1
 32019                           ;MISC.c: 211: {
 32020                           ;MISC.c: 212: return 2147483647L;
 32021  014E08  0EFF               	movlw	255
 32022  014E0A  0101               	movlb	1	; () banked
 32023  014E0C  6F88               	movwf	?_GetEnteredNumber& (0+255),b
 32024  014E0E  0EFF               	movlw	255
 32025  014E10  0101               	movlb	1	; () banked
 32026  014E12  6F89               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 32027  014E14  0EFF               	movlw	255
 32028  014E16  0101               	movlb	1	; () banked
 32029  014E18  6F8A               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 32030  014E1A  0E7F               	movlw	127
 32031  014E1C  0101               	movlb	1	; () banked
 32032  014E1E  6F8B               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 32033  014E20  0012               	return	
 32034  014E22                     l11754:
 32035                           
 32036                           ; BSR set to: 1
 32037                           ;MISC.c: 213: }
 32038                           ;MISC.c: 214: This++;
 32039  014E22  0101               	movlb	1	; () banked
 32040  014E24  4B88               	infsnz	GetEnteredNumber@This& (0+255),f,b
 32041  014E26  2B89               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 32042                           
 32043                           ; BSR set to: 1
 32044                           ;MISC.c: 215: if(*This == ' ')
 32045  014E28  0E20               	movlw	32
 32046  014E2A  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32047  014E2E  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32048  014E32  62DF               	cpfseq	indf2,c
 32049  014E34  D001               	goto	l11760
 32050  014E36  D08D               	goto	l11792
 32051  014E38                     l11760:
 32052                           
 32053                           ; BSR set to: 1
 32054                           ;MISC.c: 220: else if (*This == '=')
 32055  014E38  0E3D               	movlw	61
 32056  014E3A  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32057  014E3E  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32058  014E42  62DF               	cpfseq	indf2,c
 32059  014E44  D00D               	goto	l11768
 32060                           
 32061                           ; BSR set to: 1
 32062                           ;MISC.c: 221: {
 32063                           ;MISC.c: 222: return 2147483646L;
 32064  014E46  0EFE               	movlw	254
 32065  014E48  0101               	movlb	1	; () banked
 32066  014E4A  6F88               	movwf	?_GetEnteredNumber& (0+255),b
 32067  014E4C  0EFF               	movlw	255
 32068  014E4E  0101               	movlb	1	; () banked
 32069  014E50  6F89               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 32070  014E52  0EFF               	movlw	255
 32071  014E54  0101               	movlb	1	; () banked
 32072  014E56  6F8A               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 32073  014E58  0E7F               	movlw	127
 32074  014E5A  0101               	movlb	1	; () banked
 32075  014E5C  6F8B               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 32076  014E5E  0012               	return	
 32077  014E60                     l11768:
 32078                           
 32079                           ; BSR set to: 1
 32080                           ;MISC.c: 224: else if(*This == '-')
 32081  014E60  0E2D               	movlw	45
 32082  014E62  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32083  014E66  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32084  014E6A  62DF               	cpfseq	indf2,c
 32085  014E6C  D004               	goto	l11774
 32086                           
 32087                           ; BSR set to: 1
 32088                           ;MISC.c: 225: {
 32089                           ;MISC.c: 226: negative = 1;
 32090  014E6E  0E01               	movlw	1
 32091  014E70  0101               	movlb	1	; () banked
 32092  014E72  6F92               	movwf	GetEnteredNumber@negative& (0+255),b
 32093  014E74  D06E               	goto	l11792
 32094  014E76                     l11774:
 32095                           
 32096                           ; BSR set to: 1
 32097                           ;MISC.c: 230: else if(*This == 0)
 32098  014E76  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32099  014E7A  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32100  014E7E  50DF               	movf	indf2,w,c
 32101  014E80  A4D8               	btfss	status,2,c
 32102  014E82  D06A               	goto	l11794
 32103                           
 32104                           ; BSR set to: 1
 32105                           ;MISC.c: 231: {
 32106                           ;MISC.c: 232: return 2147483645L;
 32107  014E84  0EFD               	movlw	253
 32108  014E86  0101               	movlb	1	; () banked
 32109  014E88  6F88               	movwf	?_GetEnteredNumber& (0+255),b
 32110  014E8A  0EFF               	movlw	255
 32111  014E8C  0101               	movlb	1	; () banked
 32112  014E8E  6F89               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 32113  014E90  0EFF               	movlw	255
 32114  014E92  0101               	movlb	1	; () banked
 32115  014E94  6F8A               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 32116  014E96  0E7F               	movlw	127
 32117  014E98  0101               	movlb	1	; () banked
 32118  014E9A  6F8B               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 32119  014E9C  0012               	return	
 32120  014E9E                     l11780:
 32121                           
 32122                           ; BSR set to: 1
 32123                           ;MISC.c: 235: {
 32124                           ;MISC.c: 236: temp = temp * 10;
 32125  014E9E  C193  F17C         	movff	GetEnteredNumber@temp,___lmul@multiplier
 32126  014EA2  C194  F17D         	movff	GetEnteredNumber@temp+1,___lmul@multiplier+1
 32127  014EA6  C195  F17E         	movff	GetEnteredNumber@temp+2,___lmul@multiplier+2
 32128  014EAA  C196  F17F         	movff	GetEnteredNumber@temp+3,___lmul@multiplier+3
 32129  014EAE  0E0A               	movlw	10
 32130  014EB0  0101               	movlb	1	; () banked
 32131  014EB2  6F80               	movwf	___lmul@multiplicand& (0+255),b
 32132  014EB4  0E00               	movlw	0
 32133  014EB6  0101               	movlb	1	; () banked
 32134  014EB8  6F81               	movwf	(___lmul@multiplicand+1)& (0+255),b
 32135  014EBA  0E00               	movlw	0
 32136  014EBC  0101               	movlb	1	; () banked
 32137  014EBE  6F82               	movwf	(___lmul@multiplicand+2)& (0+255),b
 32138  014EC0  0E00               	movlw	0
 32139  014EC2  0101               	movlb	1	; () banked
 32140  014EC4  6F83               	movwf	(___lmul@multiplicand+3)& (0+255),b
 32141  014EC6  ECA4  F0B8         	call	___lmul	;wreg free
 32142  014ECA  C17C  F193         	movff	?___lmul,GetEnteredNumber@temp
 32143  014ECE  C17D  F194         	movff	?___lmul+1,GetEnteredNumber@temp+1
 32144  014ED2  C17E  F195         	movff	?___lmul+2,GetEnteredNumber@temp+2
 32145  014ED6  C17F  F196         	movff	?___lmul+3,GetEnteredNumber@temp+3
 32146                           
 32147                           ;MISC.c: 237: temp += *This - 48;
 32148  014EDA  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32149  014EDE  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32150  014EE2  50DF               	movf	indf2,w,c
 32151  014EE4  0101               	movlb	1	; () banked
 32152  014EE6  6F8C               	movwf	??_GetEnteredNumber& (0+255),b
 32153  014EE8  0ED0               	movlw	208
 32154  014EEA  0101               	movlb	1	; () banked
 32155  014EEC  258C               	addwf	??_GetEnteredNumber& (0+255),w,b
 32156  014EEE  0101               	movlb	1	; () banked
 32157  014EF0  6F8D               	movwf	(??_GetEnteredNumber+1)& (0+255),b
 32158  014EF2  0101               	movlb	1	; () banked
 32159  014EF4  6B8E               	clrf	(??_GetEnteredNumber+2)& (0+255),b
 32160  014EF6  0EFF               	movlw	255
 32161  014EF8  238E               	addwfc	(??_GetEnteredNumber+2)& (0+255),f,b
 32162  014EFA  0101               	movlb	1	; () banked
 32163  014EFC  6B8F               	clrf	(??_GetEnteredNumber+3)& (0+255),b
 32164  014EFE  0101               	movlb	1	; () banked
 32165  014F00  BF8E               	btfsc	(??_GetEnteredNumber+2)& (0+255),7,b
 32166  014F02  078F               	decf	(??_GetEnteredNumber+3)& (0+255),f,b
 32167  014F04  0101               	movlb	1	; () banked
 32168  014F06  518F               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 32169  014F08  0101               	movlb	1	; () banked
 32170  014F0A  6F90               	movwf	(??_GetEnteredNumber+4)& (0+255),b
 32171  014F0C  0101               	movlb	1	; () banked
 32172  014F0E  518D               	movf	(??_GetEnteredNumber+1)& (0+255),w,b
 32173  014F10  0101               	movlb	1	; () banked
 32174  014F12  2793               	addwf	GetEnteredNumber@temp& (0+255),f,b
 32175  014F14  0101               	movlb	1	; () banked
 32176  014F16  518E               	movf	(??_GetEnteredNumber+2)& (0+255),w,b
 32177  014F18  0101               	movlb	1	; () banked
 32178  014F1A  2394               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 32179  014F1C  0101               	movlb	1	; () banked
 32180  014F1E  518F               	movf	(??_GetEnteredNumber+3)& (0+255),w,b
 32181  014F20  0101               	movlb	1	; () banked
 32182  014F22  2395               	addwfc	(GetEnteredNumber@temp+2)& (0+255),f,b
 32183  014F24  0101               	movlb	1	; () banked
 32184  014F26  5190               	movf	(??_GetEnteredNumber+4)& (0+255),w,b
 32185  014F28  0101               	movlb	1	; () banked
 32186  014F2A  2396               	addwfc	(GetEnteredNumber@temp+3)& (0+255),f,b
 32187                           
 32188                           ; BSR set to: 1
 32189                           ;MISC.c: 238: i++;
 32190  014F2C  0101               	movlb	1	; () banked
 32191  014F2E  2B91               	incf	GetEnteredNumber@i& (0+255),f,b
 32192                           
 32193                           ; BSR set to: 1
 32194                           ;MISC.c: 239: if(i>32)
 32195  014F30  0E20               	movlw	32
 32196  014F32  0101               	movlb	1	; () banked
 32197  014F34  6591               	cpfsgt	GetEnteredNumber@i& (0+255),b
 32198  014F36  D00D               	goto	l11792
 32199                           
 32200                           ; BSR set to: 1
 32201                           ;MISC.c: 240: {
 32202                           ;MISC.c: 241: return 2147483644L;
 32203  014F38  0EFC               	movlw	252
 32204  014F3A  0101               	movlb	1	; () banked
 32205  014F3C  6F88               	movwf	?_GetEnteredNumber& (0+255),b
 32206  014F3E  0EFF               	movlw	255
 32207  014F40  0101               	movlb	1	; () banked
 32208  014F42  6F89               	movwf	(?_GetEnteredNumber+1)& (0+255),b
 32209  014F44  0EFF               	movlw	255
 32210  014F46  0101               	movlb	1	; () banked
 32211  014F48  6F8A               	movwf	(?_GetEnteredNumber+2)& (0+255),b
 32212  014F4A  0E7F               	movlw	127
 32213  014F4C  0101               	movlb	1	; () banked
 32214  014F4E  6F8B               	movwf	(?_GetEnteredNumber+3)& (0+255),b
 32215  014F50  0012               	return	
 32216  014F52                     l11792:
 32217                           
 32218                           ; BSR set to: 1
 32219                           ;MISC.c: 242: }
 32220                           ;MISC.c: 243: This++;
 32221  014F52  0101               	movlb	1	; () banked
 32222  014F54  4B88               	infsnz	GetEnteredNumber@This& (0+255),f,b
 32223  014F56  2B89               	incf	(GetEnteredNumber@This+1)& (0+255),f,b
 32224  014F58                     l11794:
 32225                           
 32226                           ; BSR set to: 1
 32227  014F58  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32228  014F5C  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32229  014F60  0E2F               	movlw	47
 32230  014F62  64DF               	cpfsgt	indf2,c
 32231  014F64  D007               	goto	l11798
 32232                           
 32233                           ; BSR set to: 1
 32234  014F66  C188  FFD9         	movff	GetEnteredNumber@This,fsr2l
 32235  014F6A  C189  FFDA         	movff	GetEnteredNumber@This+1,fsr2h
 32236  014F6E  0E39               	movlw	57
 32237  014F70  64DF               	cpfsgt	indf2,c
 32238  014F72  D795               	goto	l11780
 32239  014F74                     l11798:
 32240                           
 32241                           ; BSR set to: 1
 32242                           ;MISC.c: 244: }
 32243                           ;MISC.c: 245: if(negative)
 32244  014F74  0101               	movlb	1	; () banked
 32245  014F76  5192               	movf	GetEnteredNumber@negative& (0+255),w,b
 32246  014F78  B4D8               	btfsc	status,2,c
 32247  014F7A  D00F               	goto	l11802
 32248                           
 32249                           ; BSR set to: 1
 32250                           ;MISC.c: 246: {
 32251                           ;MISC.c: 247: temp = (temp * -1);
 32252  014F7C  0101               	movlb	1	; () banked
 32253  014F7E  1F96               	comf	(GetEnteredNumber@temp+3)& (0+255),f,b
 32254  014F80  0101               	movlb	1	; () banked
 32255  014F82  1F95               	comf	(GetEnteredNumber@temp+2)& (0+255),f,b
 32256  014F84  0101               	movlb	1	; () banked
 32257  014F86  1F94               	comf	(GetEnteredNumber@temp+1)& (0+255),f,b
 32258  014F88  0101               	movlb	1	; () banked
 32259  014F8A  6D93               	negf	GetEnteredNumber@temp& (0+255),b
 32260  014F8C  0E00               	movlw	0
 32261  014F8E  0101               	movlb	1	; () banked
 32262  014F90  2394               	addwfc	(GetEnteredNumber@temp+1)& (0+255),f,b
 32263  014F92  0101               	movlb	1	; () banked
 32264  014F94  2395               	addwfc	(GetEnteredNumber@temp+2)& (0+255),f,b
 32265  014F96  0101               	movlb	1	; () banked
 32266  014F98  2396               	addwfc	(GetEnteredNumber@temp+3)& (0+255),f,b
 32267  014F9A                     l11802:
 32268                           
 32269                           ; BSR set to: 1
 32270                           ;MISC.c: 248: }
 32271                           ;MISC.c: 249: return temp;
 32272  014F9A  C193  F188         	movff	GetEnteredNumber@temp,?_GetEnteredNumber
 32273  014F9E  C194  F189         	movff	GetEnteredNumber@temp+1,?_GetEnteredNumber+1
 32274  014FA2  C195  F18A         	movff	GetEnteredNumber@temp+2,?_GetEnteredNumber+2
 32275  014FA6  C196  F18B         	movff	GetEnteredNumber@temp+3,?_GetEnteredNumber+3
 32276  014FAA  0012               	return	
 32277  014FAC                     __end_of_GetEnteredNumber:
 32278                           	opt stack 0
 32279                           tblptru	equ	0xFF8
 32280                           tblptrh	equ	0xFF7
 32281                           tblptrl	equ	0xFF6
 32282                           tablat	equ	0xFF5
 32283                           prodh	equ	0xFF4
 32284                           prodl	equ	0xFF3
 32285                           intcon	equ	0xFF2
 32286                           postinc0	equ	0xFEE
 32287                           wreg	equ	0xFE8
 32288                           indf1	equ	0xFE7
 32289                           postinc1	equ	0xFE6
 32290                           postdec1	equ	0xFE5
 32291                           fsr1h	equ	0xFE2
 32292                           fsr1l	equ	0xFE1
 32293                           indf2	equ	0xFDF
 32294                           postinc2	equ	0xFDE
 32295                           postdec2	equ	0xFDD
 32296                           fsr2h	equ	0xFDA
 32297                           fsr2l	equ	0xFD9
 32298                           status	equ	0xFD8
 32299                           
 32300 ;; *************** function ___lmul *****************
 32301 ;; Defined at:
 32302 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
 32303 ;; Parameters:    Size  Location     Type
 32304 ;;  multiplier      4   14[BANK1 ] unsigned long 
 32305 ;;  multiplicand    4   18[BANK1 ] unsigned long 
 32306 ;; Auto vars:     Size  Location     Type
 32307 ;;  product         4   22[BANK1 ] unsigned long 
 32308 ;; Return value:  Size  Location     Type
 32309 ;;                  4   14[BANK1 ] unsigned long 
 32310 ;; Registers used:
 32311 ;;		wreg, status,2, status,0
 32312 ;; Tracked objects:
 32313 ;;		On entry : 0/0
 32314 ;;		On exit  : 0/0
 32315 ;;		Unchanged: 0/0
 32316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32317 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 32318 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32320 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
 32321 ;;Total ram usage:       12 bytes
 32322 ;; Hardware stack levels used:    1
 32323 ;; Hardware stack levels required when called:    6
 32324 ;; This function calls:
 32325 ;;		Nothing
 32326 ;; This function is called by:
 32327 ;;		_GetEnteredNumber
 32328 ;; This function uses a non-reentrant model
 32329 ;;
 32330                           
 32331                           	psect	text87
 32332  017148                     __ptext87:
 32333                           	opt stack 0
 32334  017148                     ___lmul:
 32335                           	opt stack 21
 32336                           
 32337                           ; BSR set to: 1
 32338                           ;incstack = 0
 32339  017148  0E00               	movlw	0
 32340  01714A  0101               	movlb	1	; () banked
 32341  01714C  6F84               	movwf	___lmul@product& (0+255),b
 32342  01714E  0E00               	movlw	0
 32343  017150  0101               	movlb	1	; () banked
 32344  017152  6F85               	movwf	(___lmul@product+1)& (0+255),b
 32345  017154  0E00               	movlw	0
 32346  017156  0101               	movlb	1	; () banked
 32347  017158  6F86               	movwf	(___lmul@product+2)& (0+255),b
 32348  01715A  0E00               	movlw	0
 32349  01715C  0101               	movlb	1	; () banked
 32350  01715E  6F87               	movwf	(___lmul@product+3)& (0+255),b
 32351  017160                     l11336:
 32352                           
 32353                           ; BSR set to: 1
 32354  017160  0101               	movlb	1	; () banked
 32355  017162  A17C               	btfss	___lmul@multiplier& (0+255),0,b
 32356  017164  D010               	goto	l11340
 32357                           
 32358                           ; BSR set to: 1
 32359  017166  0101               	movlb	1	; () banked
 32360  017168  5180               	movf	___lmul@multiplicand& (0+255),w,b
 32361  01716A  0101               	movlb	1	; () banked
 32362  01716C  2784               	addwf	___lmul@product& (0+255),f,b
 32363  01716E  0101               	movlb	1	; () banked
 32364  017170  5181               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 32365  017172  0101               	movlb	1	; () banked
 32366  017174  2385               	addwfc	(___lmul@product+1)& (0+255),f,b
 32367  017176  0101               	movlb	1	; () banked
 32368  017178  5182               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 32369  01717A  0101               	movlb	1	; () banked
 32370  01717C  2386               	addwfc	(___lmul@product+2)& (0+255),f,b
 32371  01717E  0101               	movlb	1	; () banked
 32372  017180  5183               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 32373  017182  0101               	movlb	1	; () banked
 32374  017184  2387               	addwfc	(___lmul@product+3)& (0+255),f,b
 32375  017186                     l11340:
 32376                           
 32377                           ; BSR set to: 1
 32378  017186  0101               	movlb	1	; () banked
 32379  017188  90D8               	bcf	status,0,c
 32380  01718A  0101               	movlb	1	; () banked
 32381  01718C  3780               	rlcf	___lmul@multiplicand& (0+255),f,b
 32382  01718E  0101               	movlb	1	; () banked
 32383  017190  3781               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 32384  017192  0101               	movlb	1	; () banked
 32385  017194  3782               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 32386  017196  0101               	movlb	1	; () banked
 32387  017198  3783               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 32388                           
 32389                           ; BSR set to: 1
 32390  01719A  0101               	movlb	1	; () banked
 32391  01719C  90D8               	bcf	status,0,c
 32392  01719E  0101               	movlb	1	; () banked
 32393  0171A0  337F               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 32394  0171A2  0101               	movlb	1	; () banked
 32395  0171A4  337E               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 32396  0171A6  0101               	movlb	1	; () banked
 32397  0171A8  337D               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 32398  0171AA  0101               	movlb	1	; () banked
 32399  0171AC  337C               	rrcf	___lmul@multiplier& (0+255),f,b
 32400  0171AE  0101               	movlb	1	; () banked
 32401  0171B0  517F               	movf	(___lmul@multiplier+3)& (0+255),w,b
 32402  0171B2  117C               	iorwf	___lmul@multiplier& (0+255),w,b
 32403  0171B4  117D               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 32404  0171B6  117E               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 32405  0171B8  A4D8               	btfss	status,2,c
 32406  0171BA  D7D2               	goto	l11336
 32407                           
 32408                           ; BSR set to: 1
 32409  0171BC  C184  F17C         	movff	___lmul@product,?___lmul
 32410  0171C0  C185  F17D         	movff	___lmul@product+1,?___lmul+1
 32411  0171C4  C186  F17E         	movff	___lmul@product+2,?___lmul+2
 32412  0171C8  C187  F17F         	movff	___lmul@product+3,?___lmul+3
 32413                           
 32414                           ; BSR set to: 1
 32415  0171CC  0012               	return	
 32416  0171CE                     __end_of___lmul:
 32417                           	opt stack 0
 32418                           tblptru	equ	0xFF8
 32419                           tblptrh	equ	0xFF7
 32420                           tblptrl	equ	0xFF6
 32421                           tablat	equ	0xFF5
 32422                           prodh	equ	0xFF4
 32423                           prodl	equ	0xFF3
 32424                           intcon	equ	0xFF2
 32425                           postinc0	equ	0xFEE
 32426                           wreg	equ	0xFE8
 32427                           indf1	equ	0xFE7
 32428                           postinc1	equ	0xFE6
 32429                           postdec1	equ	0xFE5
 32430                           fsr1h	equ	0xFE2
 32431                           fsr1l	equ	0xFE1
 32432                           indf2	equ	0xFDF
 32433                           postinc2	equ	0xFDE
 32434                           postdec2	equ	0xFDD
 32435                           fsr2h	equ	0xFDA
 32436                           fsr2l	equ	0xFD9
 32437                           status	equ	0xFD8
 32438                           
 32439 ;; *************** function _GetBaud *****************
 32440 ;; Defined at:
 32441 ;;		line 390 in file "UART.c"
 32442 ;; Parameters:    Size  Location     Type
 32443 ;;		None
 32444 ;; Auto vars:     Size  Location     Type
 32445 ;;		None
 32446 ;; Return value:  Size  Location     Type
 32447 ;;                  4   14[BANK1 ] unsigned long 
 32448 ;; Registers used:
 32449 ;;		None
 32450 ;; Tracked objects:
 32451 ;;		On entry : 0/0
 32452 ;;		On exit  : 0/0
 32453 ;;		Unchanged: 0/0
 32454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32455 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32458 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 32459 ;;Total ram usage:        4 bytes
 32460 ;; Hardware stack levels used:    1
 32461 ;; Hardware stack levels required when called:    6
 32462 ;; This function calls:
 32463 ;;		Nothing
 32464 ;; This function is called by:
 32465 ;;		_Command
 32466 ;; This function uses a non-reentrant model
 32467 ;;
 32468                           
 32469                           	psect	text88
 32470  0006F8                     __ptext88:
 32471                           	opt stack 0
 32472  0006F8                     _GetBaud:
 32473                           	opt stack 22
 32474                           
 32475                           ;UART.c: 392: return BAUD;
 32476                           
 32477                           ; BSR set to: 1
 32478                           ;incstack = 0
 32479  0006F8  C1D5  F17C         	movff	_BAUD,?_GetBaud
 32480  0006FC  C1D6  F17D         	movff	_BAUD+1,?_GetBaud+1
 32481  000700  C1D7  F17E         	movff	_BAUD+2,?_GetBaud+2
 32482  000704  C1D8  F17F         	movff	_BAUD+3,?_GetBaud+3
 32483  000708  0012               	return	
 32484  00070A                     __end_of_GetBaud:
 32485                           	opt stack 0
 32486                           tblptru	equ	0xFF8
 32487                           tblptrh	equ	0xFF7
 32488                           tblptrl	equ	0xFF6
 32489                           tablat	equ	0xFF5
 32490                           prodh	equ	0xFF4
 32491                           prodl	equ	0xFF3
 32492                           intcon	equ	0xFF2
 32493                           postinc0	equ	0xFEE
 32494                           wreg	equ	0xFE8
 32495                           indf1	equ	0xFE7
 32496                           postinc1	equ	0xFE6
 32497                           postdec1	equ	0xFE5
 32498                           fsr1h	equ	0xFE2
 32499                           fsr1l	equ	0xFE1
 32500                           indf2	equ	0xFDF
 32501                           postinc2	equ	0xFDE
 32502                           postdec2	equ	0xFDD
 32503                           fsr2h	equ	0xFDA
 32504                           fsr2l	equ	0xFD9
 32505                           status	equ	0xFD8
 32506                           
 32507 ;; *************** function _low_isr *****************
 32508 ;; Defined at:
 32509 ;;		line 101 in file "interrupts.c"
 32510 ;; Parameters:    Size  Location     Type
 32511 ;;		None
 32512 ;; Auto vars:     Size  Location     Type
 32513 ;;  TEMP_Rxdata   100    0[BANK0 ] unsigned char [100]
 32514 ;;  LCD_TEMP       16  100[BANK0 ] unsigned char [16]
 32515 ;;  i               2  116[BANK0 ] int 
 32516 ;;  rx              1  119[BANK0 ] unsigned char 
 32517 ;;  j               1  118[BANK0 ] unsigned char 
 32518 ;; Return value:  Size  Location     Type
 32519 ;;		None               void
 32520 ;; Registers used:
 32521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32522 ;; Tracked objects:
 32523 ;;		On entry : 0/0
 32524 ;;		On exit  : 0/0
 32525 ;;		Unchanged: 0/0
 32526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 32527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32528 ;;      Locals:         0     120       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32529 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32530 ;;      Totals:        20     120       0       0       0       0       0       0       0       0       0       0       
      +0       0
 32531 ;;Total ram usage:      140 bytes
 32532 ;; Hardware stack levels used:    1
 32533 ;; Hardware stack levels required when called:    5
 32534 ;; This function calls:
 32535 ;;		_IsPrintableASCII
 32536 ;;		i1_BufferCopy
 32537 ;;		i1_ClearLCD
 32538 ;;		i1_LCDPrintChar
 32539 ;;		i1_LCDPrintString
 32540 ;;		i1_ReadUSART
 32541 ;;		i1_SetLCDcursor
 32542 ;;		i1_UARTchar
 32543 ;;		i1_UARTstring
 32544 ;;		i1_cleanBuffer
 32545 ;; This function is called by:
 32546 ;;		Interrupt level 1
 32547 ;; This function uses a non-reentrant model
 32548 ;;
 32549                           
 32550                           	psect	intcodelo
 32551  000018                     __pintcodelo:
 32552                           	opt stack 0
 32553  000018                     _low_isr:
 32554                           	opt stack 18
 32555                           
 32556                           ;incstack = 0
 32557  000018  CFD8 F016          	movff	status,??_low_isr+3
 32558  00001C  CFE8 F017          	movff	wreg,??_low_isr+4
 32559  000020  CFE0 F018          	movff	bsr,??_low_isr+5
 32560  000024  CFFA F019          	movff	pclath,??_low_isr+6
 32561  000028  CFFB F01A          	movff	pclatu,??_low_isr+7
 32562  00002C  CFE9 F01B          	movff	fsr0l,??_low_isr+8
 32563  000030  CFEA F01C          	movff	fsr0h,??_low_isr+9
 32564  000034  CFE1 F01D          	movff	fsr1l,??_low_isr+10
 32565  000038  CFE2 F01E          	movff	fsr1h,??_low_isr+11
 32566  00003C  CFD9 F01F          	movff	fsr2l,??_low_isr+12
 32567  000040  CFDA F020          	movff	fsr2h,??_low_isr+13
 32568  000044  CFF3 F021          	movff	prodl,??_low_isr+14
 32569  000048  CFF4 F022          	movff	prodh,??_low_isr+15
 32570  00004C  CFF6 F023          	movff	tblptrl,??_low_isr+16
 32571  000050  CFF7 F024          	movff	tblptrh,??_low_isr+17
 32572  000054  CFF8 F025          	movff	tblptru,??_low_isr+18
 32573  000058  CFF5 F026          	movff	tablat,??_low_isr+19
 32574                           
 32575                           ;interrupts.c: 110: unsigned char rx;
 32576                           ;interrupts.c: 111: unsigned char TEMP_Rxdata[100];
 32577                           ;interrupts.c: 112: unsigned char LCD_TEMP [16];
 32578                           ;interrupts.c: 113: int i=0;
 32579  00005C  0E00               	movlw	0
 32580  00005E  0100               	movlb	0	; () banked
 32581  000060  6FD5               	movwf	(low_isr@i+1)& (0+255),b
 32582  000062  0E00               	movlw	0
 32583  000064  0100               	movlb	0	; () banked
 32584  000066  6FD4               	movwf	low_isr@i& (0+255),b
 32585                           
 32586                           ;interrupts.c: 114: unsigned char j=0;
 32587  000068  0E00               	movlw	0
 32588  00006A  0100               	movlb	0	; () banked
 32589  00006C  6FD6               	movwf	low_isr@j& (0+255),b
 32590                           
 32591                           ; BSR set to: 0
 32592                           ;interrupts.c: 116: INTCONbits.PEIE = 0;
 32593  00006E  9CF2               	bcf	intcon,6,c	;volatile
 32594                           
 32595                           ; BSR set to: 0
 32596                           ;interrupts.c: 119: if(PIR1bits.RCIF == 1)
 32597  000070  AA9E               	btfss	3998,5,c	;volatile
 32598  000072  D153               	goto	i1l13720
 32599                           
 32600                           ; BSR set to: 0
 32601                           ;interrupts.c: 120: {
 32602                           ;interrupts.c: 122: PIE1bits.RCIE = 0;
 32603  000074  9A9D               	bcf	3997,5,c	;volatile
 32604                           
 32605                           ;interrupts.c: 123: RCSTAbits.CREN = 0;
 32606  000076  98AB               	bcf	4011,4,c	;volatile
 32607                           
 32608                           ; BSR set to: 0
 32609                           ;interrupts.c: 124: rx = ReadUSART();
 32610  000078  EC81  F002         	call	i1_ReadUSART	;wreg free
 32611  00007C  0100               	movlb	0	; () banked
 32612  00007E  6FD7               	movwf	low_isr@rx& (0+255),b
 32613                           
 32614                           ; BSR set to: 0
 32615                           ;interrupts.c: 126: if(TX_OLD == '>' && rx == '>' && bufferCount == 0)
 32616  000080  0100               	movlb	0	; () banked
 32617  000082  51D8               	movf	_TX_OLD& (0+255),w,b
 32618  000084  0A3E               	xorlw	62
 32619  000086  A4D8               	btfss	status,2,c
 32620  000088  D00A               	goto	i1l13632
 32621                           
 32622                           ; BSR set to: 0
 32623  00008A  0100               	movlb	0	; () banked
 32624  00008C  51D7               	movf	low_isr@rx& (0+255),w,b
 32625  00008E  0A3E               	xorlw	62
 32626  000090  A4D8               	btfss	status,2,c
 32627  000092  D005               	goto	i1l13632
 32628                           
 32629                           ; BSR set to: 0
 32630  000094  0100               	movlb	0	; () banked
 32631  000096  67D9               	tstfsz	_bufferCount& (0+255),b
 32632  000098  D002               	goto	i1l13632
 32633                           
 32634                           ; BSR set to: 0
 32635                           ;interrupts.c: 127: {
 32636                           ;interrupts.c: 129: __nop();
 32637  00009A  F000               	nop	
 32638                           
 32639                           ;interrupts.c: 130: }
 32640  00009C  D13E               	goto	i1l13720
 32641  00009E                     i1l13632:
 32642                           
 32643                           ;interrupts.c: 131: else
 32644                           ;interrupts.c: 132: {
 32645                           ;interrupts.c: 134: if(rx != '\n' && rx != '\r')
 32646  00009E  0100               	movlb	0	; () banked
 32647  0000A0  51D7               	movf	low_isr@rx& (0+255),w,b
 32648  0000A2  0A0A               	xorlw	10
 32649  0000A4  B4D8               	btfsc	status,2,c
 32650  0000A6  D0DA               	goto	i1l13698
 32651                           
 32652                           ; BSR set to: 0
 32653  0000A8  0100               	movlb	0	; () banked
 32654  0000AA  51D7               	movf	low_isr@rx& (0+255),w,b
 32655  0000AC  0A0D               	xorlw	13
 32656  0000AE  B4D8               	btfsc	status,2,c
 32657  0000B0  D0D5               	goto	i1l13698
 32658                           
 32659                           ; BSR set to: 0
 32660                           ;interrupts.c: 135: {
 32661                           ;interrupts.c: 137: if(rx == 0x7f || rx == 0x08)
 32662  0000B2  0100               	movlb	0	; () banked
 32663  0000B4  51D7               	movf	low_isr@rx& (0+255),w,b
 32664  0000B6  0A7F               	xorlw	127
 32665  0000B8  B4D8               	btfsc	status,2,c
 32666  0000BA  D005               	goto	i1l13640
 32667                           
 32668                           ; BSR set to: 0
 32669  0000BC  0100               	movlb	0	; () banked
 32670  0000BE  51D7               	movf	low_isr@rx& (0+255),w,b
 32671  0000C0  0A08               	xorlw	8
 32672  0000C2  A4D8               	btfss	status,2,c
 32673  0000C4  D08C               	goto	i1l13678
 32674  0000C6                     i1l13640:
 32675                           
 32676                           ; BSR set to: 0
 32677                           ;interrupts.c: 138: {
 32678                           ;interrupts.c: 140: if(bufferCount !=0)
 32679  0000C6  0100               	movlb	0	; () banked
 32680  0000C8  51D9               	movf	_bufferCount& (0+255),w,b
 32681  0000CA  B4D8               	btfsc	status,2,c
 32682  0000CC  D126               	goto	i1l13720
 32683                           
 32684                           ; BSR set to: 0
 32685                           ;interrupts.c: 141: {
 32686                           ;interrupts.c: 143: UARTstring("\r");
 32687  0000CE  0EFF               	movlw	high STR_1
 32688  0000D0  6E0D               	movwf	i1UARTstring@data+1,c
 32689  0000D2  0EFC               	movlw	low STR_1
 32690  0000D4  6E0C               	movwf	i1UARTstring@data,c
 32691  0000D6  EC8A  F0B7         	call	i1_UARTstring	;wreg free
 32692                           
 32693                           ;interrupts.c: 145: for(i=0;i<=bufferCount;i++)
 32694  0000DA  0E00               	movlw	0
 32695  0000DC  0100               	movlb	0	; () banked
 32696  0000DE  6FD5               	movwf	(low_isr@i+1)& (0+255),b
 32697  0000E0  0E00               	movlw	0
 32698  0000E2  0100               	movlb	0	; () banked
 32699  0000E4  6FD4               	movwf	low_isr@i& (0+255),b
 32700  0000E6  D009               	goto	i1l13650
 32701  0000E8                     i1l13646:
 32702                           
 32703                           ; BSR set to: 0
 32704                           ;interrupts.c: 146: {
 32705                           ;interrupts.c: 148: UARTstring(" ");
 32706  0000E8  0EF9               	movlw	high (STR_225+15)
 32707  0000EA  6E0D               	movwf	i1UARTstring@data+1,c
 32708  0000EC  0E4E               	movlw	low (STR_225+15)
 32709  0000EE  6E0C               	movwf	i1UARTstring@data,c
 32710  0000F0  EC8A  F0B7         	call	i1_UARTstring	;wreg free
 32711  0000F4  0100               	movlb	0	; () banked
 32712  0000F6  4BD4               	infsnz	low_isr@i& (0+255),f,b
 32713  0000F8  2BD5               	incf	(low_isr@i+1)& (0+255),f,b
 32714  0000FA                     i1l13650:
 32715                           
 32716                           ; BSR set to: 0
 32717  0000FA  0100               	movlb	0	; () banked
 32718  0000FC  51D9               	movf	_bufferCount& (0+255),w,b
 32719  0000FE  6E13               	movwf	??_low_isr& (0+255),c
 32720  000100  6A14               	clrf	(??_low_isr+1)& (0+255),c
 32721  000102  5014               	movf	??_low_isr+1,w,c
 32722  000104  0A80               	xorlw	128
 32723  000106  6E15               	movwf	(??_low_isr+2)& (0+255),c
 32724  000108  0100               	movlb	0	; () banked
 32725  00010A  51D4               	movf	low_isr@i& (0+255),w,b
 32726  00010C  5C13               	subwf	??_low_isr,w,c
 32727  00010E  0100               	movlb	0	; () banked
 32728  000110  51D5               	movf	(low_isr@i+1)& (0+255),w,b
 32729  000112  0A80               	xorlw	128
 32730  000114  5815               	subwfb	(??_low_isr+2)& (0+255),w,c
 32731  000116  B0D8               	btfsc	status,0,c
 32732  000118  D7E7               	goto	i1l13646
 32733                           
 32734                           ; BSR set to: 0
 32735                           ;interrupts.c: 149: }
 32736                           ;interrupts.c: 151: UARTstring("\r");
 32737                           
 32738                           ; BSR set to: 0
 32739  00011A  0EFF               	movlw	high STR_1
 32740  00011C  6E0D               	movwf	i1UARTstring@data+1,c
 32741  00011E  0EFC               	movlw	low STR_1
 32742  000120  6E0C               	movwf	i1UARTstring@data,c
 32743  000122  EC8A  F0B7         	call	i1_UARTstring	;wreg free
 32744                           
 32745                           ;interrupts.c: 152: UARTstring(">");
 32746  000126  0EF4               	movlw	high (STR_21+27)
 32747  000128  6E0D               	movwf	i1UARTstring@data+1,c
 32748  00012A  0ED1               	movlw	low (STR_21+27)
 32749  00012C  6E0C               	movwf	i1UARTstring@data,c
 32750  00012E  EC8A  F0B7         	call	i1_UARTstring	;wreg free
 32751                           
 32752                           ;interrupts.c: 153: bufferCount--;
 32753  000132  0100               	movlb	0	; () banked
 32754  000134  07D9               	decf	_bufferCount& (0+255),f,b
 32755                           
 32756                           ; BSR set to: 0
 32757                           ;interrupts.c: 154: TEMP_Rxdata[bufferCount] = 0;
 32758  000136  0100               	movlb	0	; () banked
 32759  000138  51D9               	movf	_bufferCount& (0+255),w,b
 32760  00013A  0D01               	mullw	1
 32761  00013C  0100               	movlb	0	; () banked
 32762  00013E  0E60               	movlw	low low_isr@TEMP_Rxdata
 32763  000140  24F3               	addwf	prodl,w,c
 32764  000142  6ED9               	movwf	fsr2l,c
 32765  000144  0100               	movlb	0	; () banked
 32766  000146  0E00               	movlw	high low_isr@TEMP_Rxdata
 32767  000148  20F4               	addwfc	prodh,w,c
 32768  00014A  6EDA               	movwf	fsr2h,c
 32769  00014C  0E00               	movlw	0
 32770  00014E  6EDF               	movwf	indf2,c
 32771                           
 32772                           ; BSR set to: 0
 32773                           ;interrupts.c: 155: UARTstring(TEMP_Rxdata);
 32774  000150  0100               	movlb	0	; () banked
 32775  000152  0E00               	movlw	high low_isr@TEMP_Rxdata
 32776  000154  6E0D               	movwf	i1UARTstring@data+1,c
 32777  000156  0100               	movlb	0	; () banked
 32778  000158  0E60               	movlw	low low_isr@TEMP_Rxdata
 32779  00015A  6E0C               	movwf	i1UARTstring@data,c
 32780  00015C  EC8A  F0B7         	call	i1_UARTstring	;wreg free
 32781                           
 32782                           ;interrupts.c: 156: if(bufferCount < 15)
 32783  000160  0E0F               	movlw	15
 32784  000162  0100               	movlb	0	; () banked
 32785  000164  5DD9               	subwf	_bufferCount& (0+255),w,b
 32786  000166  B0D8               	btfsc	status,0,c
 32787  000168  D0D8               	goto	i1l13720
 32788                           
 32789                           ; BSR set to: 0
 32790                           ;interrupts.c: 157: {
 32791                           ;interrupts.c: 159: for(j=0; j<15;j++)
 32792  00016A  0E00               	movlw	0
 32793  00016C  0100               	movlb	0	; () banked
 32794  00016E  6FD6               	movwf	low_isr@j& (0+255),b
 32795  000170  D01A               	goto	L48
 32796  000172                     i1l13668:
 32797                           
 32798                           ; BSR set to: 0
 32799                           ;interrupts.c: 160: {
 32800                           ;interrupts.c: 161: LCD_TEMP[j] = TEMP_Rxdata[j];
 32801  000172  0100               	movlb	0	; () banked
 32802  000174  51D6               	movf	low_isr@j& (0+255),w,b
 32803  000176  0D01               	mullw	1
 32804  000178  0100               	movlb	0	; () banked
 32805  00017A  0E60               	movlw	low low_isr@TEMP_Rxdata
 32806  00017C  24F3               	addwf	prodl,w,c
 32807  00017E  6ED9               	movwf	fsr2l,c
 32808  000180  0100               	movlb	0	; () banked
 32809  000182  0E00               	movlw	high low_isr@TEMP_Rxdata
 32810  000184  20F4               	addwfc	prodh,w,c
 32811  000186  6EDA               	movwf	fsr2h,c
 32812  000188  0100               	movlb	0	; () banked
 32813  00018A  51D6               	movf	low_isr@j& (0+255),w,b
 32814  00018C  0D01               	mullw	1
 32815  00018E  0100               	movlb	0	; () banked
 32816  000190  0EC4               	movlw	low low_isr@LCD_TEMP
 32817  000192  24F3               	addwf	prodl,w,c
 32818  000194  6EE1               	movwf	fsr1l,c
 32819  000196  0100               	movlb	0	; () banked
 32820  000198  0E00               	movlw	high low_isr@LCD_TEMP
 32821  00019A  20F4               	addwfc	prodh,w,c
 32822  00019C  6EE2               	movwf	fsr1h,c
 32823  00019E  CFDF FFE7          	movff	indf2,indf1
 32824                           
 32825                           ; BSR set to: 0
 32826  0001A2  0100               	movlb	0	; () banked
 32827  0001A4  2BD6               	incf	low_isr@j& (0+255),f,b
 32828  0001A6                     L48:
 32829                           
 32830                           ; BSR set to: 0
 32831  0001A6  0E0E               	movlw	14
 32832  0001A8  0100               	movlb	0	; () banked
 32833  0001AA  65D6               	cpfsgt	low_isr@j& (0+255),b
 32834  0001AC  D7E2               	goto	i1l13668
 32835                           
 32836                           ; BSR set to: 0
 32837                           ;interrupts.c: 162: }
 32838                           ;interrupts.c: 163: ClearLCD();
 32839                           
 32840                           ; BSR set to: 0
 32841  0001AE  EC4A  F003         	call	i1_ClearLCD	;wreg free
 32842                           
 32843                           ;interrupts.c: 164: SetLCDcursor(0, 0);
 32844  0001B2  0E00               	movlw	0
 32845  0001B4  6E0F               	movwf	i1SetLCDcursor@Col,c
 32846  0001B6  0E00               	movlw	0
 32847  0001B8  ECEE  F002         	call	i1_SetLCDcursor
 32848                           
 32849                           ;interrupts.c: 165: LCDPrintChar('>');
 32850  0001BC  0E3E               	movlw	62
 32851  0001BE  EC94  F003         	call	i1_LCDPrintChar
 32852                           
 32853                           ;interrupts.c: 166: SetLCDcursor(0, 1);
 32854  0001C2  0E01               	movlw	1
 32855  0001C4  6E0F               	movwf	i1SetLCDcursor@Col,c
 32856  0001C6  0E00               	movlw	0
 32857  0001C8  ECEE  F002         	call	i1_SetLCDcursor
 32858                           
 32859                           ;interrupts.c: 167: LCDPrintString(LCD_TEMP);
 32860  0001CC  0100               	movlb	0	; () banked
 32861  0001CE  0E00               	movlw	high low_isr@LCD_TEMP
 32862  0001D0  6E10               	movwf	i1LCDPrintString@Text+1,c
 32863  0001D2  0100               	movlb	0	; () banked
 32864  0001D4  0EC4               	movlw	low low_isr@LCD_TEMP
 32865  0001D6  6E0F               	movwf	i1LCDPrintString@Text,c
 32866  0001D8  ECB9  F0BB         	call	i1_LCDPrintString	;wreg free
 32867  0001DC  D09E               	goto	i1l13720
 32868  0001DE                     i1l13678:
 32869                           
 32870                           ;interrupts.c: 171: else
 32871                           ;interrupts.c: 172: {
 32872                           ;interrupts.c: 175: if(IsPrintableASCII(rx))
 32873  0001DE  0100               	movlb	0	; () banked
 32874  0001E0  51D7               	movf	low_isr@rx& (0+255),w,b
 32875  0001E2  EC3E  F003         	call	_IsPrintableASCII
 32876  0001E6  0900               	iorlw	0
 32877  0001E8  B4D8               	btfsc	status,2,c
 32878  0001EA  D097               	goto	i1l13720
 32879                           
 32880                           ;interrupts.c: 176: {
 32881                           ;interrupts.c: 178: UARTchar(rx, 0, 0);
 32882  0001EC  0E00               	movlw	0
 32883  0001EE  6E08               	movwf	i1UARTchar@NinethBit_override,c
 32884  0001F0  0E00               	movlw	0
 32885  0001F2  6E09               	movwf	i1UARTchar@NinethBit_override_data,c
 32886  0001F4  0100               	movlb	0	; () banked
 32887  0001F6  51D7               	movf	low_isr@rx& (0+255),w,b
 32888  0001F8  EC84  F0BB         	call	i1_UARTchar
 32889                           
 32890                           ;interrupts.c: 179: if(bufferCount < 15)
 32891  0001FC  0E0F               	movlw	15
 32892  0001FE  0100               	movlb	0	; () banked
 32893  000200  5DD9               	subwf	_bufferCount& (0+255),w,b
 32894  000202  B0D8               	btfsc	status,0,c
 32895  000204  D004               	goto	i1l13686
 32896                           
 32897                           ; BSR set to: 0
 32898                           ;interrupts.c: 180: {
 32899                           ;interrupts.c: 182: LCDPrintChar(rx);
 32900  000206  0100               	movlb	0	; () banked
 32901  000208  51D7               	movf	low_isr@rx& (0+255),w,b
 32902  00020A  EC94  F003         	call	i1_LCDPrintChar
 32903  00020E                     i1l13686:
 32904                           
 32905                           ;interrupts.c: 183: }
 32906                           ;interrupts.c: 184: TEMP_Rxdata[bufferCount] = rx;
 32907  00020E  0100               	movlb	0	; () banked
 32908  000210  51D9               	movf	_bufferCount& (0+255),w,b
 32909  000212  0D01               	mullw	1
 32910  000214  0100               	movlb	0	; () banked
 32911  000216  0E60               	movlw	low low_isr@TEMP_Rxdata
 32912  000218  24F3               	addwf	prodl,w,c
 32913  00021A  6ED9               	movwf	fsr2l,c
 32914  00021C  0100               	movlb	0	; () banked
 32915  00021E  0E00               	movlw	high low_isr@TEMP_Rxdata
 32916  000220  20F4               	addwfc	prodh,w,c
 32917  000222  6EDA               	movwf	fsr2h,c
 32918  000224  0100               	movlb	0	; () banked
 32919  000226  C0D7  FFDF         	movff	low_isr@rx,indf2
 32920                           
 32921                           ; BSR set to: 0
 32922                           ;interrupts.c: 185: bufferCount++;
 32923  00022A  0100               	movlb	0	; () banked
 32924  00022C  2BD9               	incf	_bufferCount& (0+255),f,b
 32925                           
 32926                           ; BSR set to: 0
 32927                           ;interrupts.c: 186: if(bufferCount>=99)
 32928  00022E  0E62               	movlw	98
 32929  000230  0100               	movlb	0	; () banked
 32930  000232  65D9               	cpfsgt	_bufferCount& (0+255),b
 32931  000234  D072               	goto	i1l13720
 32932                           
 32933                           ; BSR set to: 0
 32934                           ;interrupts.c: 187: {
 32935                           ;interrupts.c: 188: UARTstring("\r\nBuffer overflow! Deleting Buffer \r\n");
 32936  000236  0EF2               	movlw	high STR_5
 32937  000238  6E0D               	movwf	i1UARTstring@data+1,c
 32938  00023A  0E80               	movlw	low STR_5
 32939  00023C  6E0C               	movwf	i1UARTstring@data,c
 32940  00023E  EC8A  F0B7         	call	i1_UARTstring	;wreg free
 32941                           
 32942                           ;interrupts.c: 189: cleanBuffer(TEMP_Rxdata, 100);
 32943  000242  0100               	movlb	0	; () banked
 32944  000244  0E00               	movlw	high low_isr@TEMP_Rxdata
 32945  000246  6E02               	movwf	i1cleanBuffer@data+1,c
 32946  000248  0100               	movlb	0	; () banked
 32947  00024A  0E60               	movlw	low low_isr@TEMP_Rxdata
 32948  00024C  6E01               	movwf	i1cleanBuffer@data,c
 32949  00024E  0E00               	movlw	0
 32950  000250  6E04               	movwf	i1cleanBuffer@count+1,c
 32951  000252  0E64               	movlw	100
 32952  000254  6E03               	movwf	i1cleanBuffer@count,c
 32953  000256  ECB5  F001         	call	i1_cleanBuffer	;wreg free
 32954  00025A  D05C               	goto	L47
 32955  00025C                     i1l13698:
 32956                           
 32957                           ; BSR set to: 0
 32958                           ;interrupts.c: 199: else if((rx == '\n' || rx == '\r') && bufferCount == 0)
 32959  00025C  0100               	movlb	0	; () banked
 32960  00025E  51D7               	movf	low_isr@rx& (0+255),w,b
 32961  000260  0A0A               	xorlw	10
 32962  000262  B4D8               	btfsc	status,2,c
 32963  000264  D005               	goto	i1l68
 32964                           
 32965                           ; BSR set to: 0
 32966  000266  0100               	movlb	0	; () banked
 32967  000268  51D7               	movf	low_isr@rx& (0+255),w,b
 32968  00026A  0A0D               	xorlw	13
 32969  00026C  A4D8               	btfss	status,2,c
 32970  00026E  D010               	goto	i1l66
 32971  000270                     i1l68:
 32972                           
 32973                           ; BSR set to: 0
 32974  000270  0100               	movlb	0	; () banked
 32975  000272  67D9               	tstfsz	_bufferCount& (0+255),b
 32976  000274  D00D               	goto	i1l66
 32977                           
 32978                           ; BSR set to: 0
 32979                           ;interrupts.c: 200: {
 32980                           ;interrupts.c: 202: cleanBuffer(TEMP_Rxdata, 100);
 32981  000276  0100               	movlb	0	; () banked
 32982  000278  0E00               	movlw	high low_isr@TEMP_Rxdata
 32983  00027A  6E02               	movwf	i1cleanBuffer@data+1,c
 32984  00027C  0100               	movlb	0	; () banked
 32985  00027E  0E60               	movlw	low low_isr@TEMP_Rxdata
 32986  000280  6E01               	movwf	i1cleanBuffer@data,c
 32987  000282  0E00               	movlw	0
 32988  000284  6E04               	movwf	i1cleanBuffer@count+1,c
 32989  000286  0E64               	movlw	100
 32990  000288  6E03               	movwf	i1cleanBuffer@count,c
 32991  00028A  ECB5  F001         	call	i1_cleanBuffer	;wreg free
 32992                           
 32993                           ;interrupts.c: 203: }
 32994  00028E  D045               	goto	i1l13720
 32995  000290                     i1l66:
 32996                           
 32997                           ; BSR set to: 0
 32998                           ;interrupts.c: 204: else
 32999                           ;interrupts.c: 205: {
 33000                           ;interrupts.c: 207: if(TEMP_Rxdata[0] == 0 && TEMP_Rxdata[1] != 0)
 33001  000290  0100               	movlb	0	; () banked
 33002  000292  6760               	tstfsz	low_isr@TEMP_Rxdata& (0+255),b
 33003  000294  D017               	goto	i1l13708
 33004                           
 33005                           ; BSR set to: 0
 33006  000296  0100               	movlb	0	; () banked
 33007  000298  5161               	movf	(low_isr@TEMP_Rxdata+1)& (0+255),w,b
 33008  00029A  B4D8               	btfsc	status,2,c
 33009  00029C  D013               	goto	i1l13708
 33010                           
 33011                           ; BSR set to: 0
 33012                           ;interrupts.c: 208: {
 33013                           ;interrupts.c: 209: BufferCopy(TEMP_Rxdata, Rxdata, 100,1);
 33014  00029E  0100               	movlb	0	; () banked
 33015  0002A0  0E00               	movlw	high low_isr@TEMP_Rxdata
 33016  0002A2  6E0A               	movwf	i1BufferCopy@from+1,c
 33017  0002A4  0100               	movlb	0	; () banked
 33018  0002A6  0E60               	movlw	low low_isr@TEMP_Rxdata
 33019  0002A8  6E09               	movwf	i1BufferCopy@from,c
 33020  0002AA  0103               	movlb	3	; () banked
 33021  0002AC  0E03               	movlw	high _Rxdata
 33022  0002AE  6E0C               	movwf	i1BufferCopy@to+1,c
 33023  0002B0  0103               	movlb	3	; () banked
 33024  0002B2  0E64               	movlw	low _Rxdata
 33025  0002B4  6E0B               	movwf	i1BufferCopy@to,c
 33026  0002B6  0E64               	movlw	100
 33027  0002B8  6E0D               	movwf	i1BufferCopy@count,c
 33028  0002BA  0E01               	movlw	1
 33029  0002BC  6E0E               	movwf	i1BufferCopy@shift,c
 33030  0002BE  EC18  F0B6         	call	i1_BufferCopy	;wreg free
 33031                           
 33032                           ;interrupts.c: 210: }
 33033  0002C2  D012               	goto	i1l13710
 33034  0002C4                     i1l13708:
 33035                           
 33036                           ;interrupts.c: 211: else
 33037                           ;interrupts.c: 212: {
 33038                           ;interrupts.c: 213: BufferCopy(TEMP_Rxdata, Rxdata, 100,0);
 33039  0002C4  0100               	movlb	0	; () banked
 33040  0002C6  0E00               	movlw	high low_isr@TEMP_Rxdata
 33041  0002C8  6E0A               	movwf	i1BufferCopy@from+1,c
 33042  0002CA  0100               	movlb	0	; () banked
 33043  0002CC  0E60               	movlw	low low_isr@TEMP_Rxdata
 33044  0002CE  6E09               	movwf	i1BufferCopy@from,c
 33045  0002D0  0103               	movlb	3	; () banked
 33046  0002D2  0E03               	movlw	high _Rxdata
 33047  0002D4  6E0C               	movwf	i1BufferCopy@to+1,c
 33048  0002D6  0103               	movlb	3	; () banked
 33049  0002D8  0E64               	movlw	low _Rxdata
 33050  0002DA  6E0B               	movwf	i1BufferCopy@to,c
 33051  0002DC  0E64               	movlw	100
 33052  0002DE  6E0D               	movwf	i1BufferCopy@count,c
 33053  0002E0  0E00               	movlw	0
 33054  0002E2  6E0E               	movwf	i1BufferCopy@shift,c
 33055  0002E4  EC18  F0B6         	call	i1_BufferCopy	;wreg free
 33056  0002E8                     i1l13710:
 33057                           
 33058                           ;interrupts.c: 214: }
 33059                           ;interrupts.c: 215: ClearLCD();
 33060  0002E8  EC4A  F003         	call	i1_ClearLCD	;wreg free
 33061                           
 33062                           ;interrupts.c: 216: SetLCDcursor(0, 0);
 33063  0002EC  0E00               	movlw	0
 33064  0002EE  6E0F               	movwf	i1SetLCDcursor@Col,c
 33065  0002F0  0E00               	movlw	0
 33066  0002F2  ECEE  F002         	call	i1_SetLCDcursor
 33067                           
 33068                           ;interrupts.c: 217: LCDPrintChar('>');
 33069  0002F6  0E3E               	movlw	62
 33070  0002F8  EC94  F003         	call	i1_LCDPrintChar
 33071                           
 33072                           ;interrupts.c: 218: cleanBuffer(TEMP_Rxdata, 100);
 33073  0002FC  0100               	movlb	0	; () banked
 33074  0002FE  0E00               	movlw	high low_isr@TEMP_Rxdata
 33075  000300  6E02               	movwf	i1cleanBuffer@data+1,c
 33076  000302  0100               	movlb	0	; () banked
 33077  000304  0E60               	movlw	low low_isr@TEMP_Rxdata
 33078  000306  6E01               	movwf	i1cleanBuffer@data,c
 33079  000308  0E00               	movlw	0
 33080  00030A  6E04               	movwf	i1cleanBuffer@count+1,c
 33081  00030C  0E64               	movlw	100
 33082  00030E  6E03               	movwf	i1cleanBuffer@count,c
 33083  000310  ECB5  F001         	call	i1_cleanBuffer	;wreg free
 33084  000314                     L47:
 33085                           
 33086                           ;interrupts.c: 219: bufferCount=0;
 33087  000314  0E00               	movlw	0
 33088  000316  0100               	movlb	0	; () banked
 33089  000318  6FD9               	movwf	_bufferCount& (0+255),b
 33090  00031A                     i1l13720:
 33091                           
 33092                           ;interrupts.c: 220: }
 33093                           ;interrupts.c: 221: }
 33094                           ;interrupts.c: 222: }
 33095                           ;interrupts.c: 223: PIE1bits.RCIE = 1;
 33096  00031A  8A9D               	bsf	3997,5,c	;volatile
 33097                           
 33098                           ;interrupts.c: 224: RCSTAbits.CREN = 1;
 33099  00031C  88AB               	bsf	4011,4,c	;volatile
 33100                           
 33101                           ;interrupts.c: 225: INTCONbits.PEIE = 1;
 33102  00031E  8CF2               	bsf	intcon,6,c	;volatile
 33103  000320  C026  FFF5         	movff	??_low_isr+19,tablat
 33104  000324  C025  FFF8         	movff	??_low_isr+18,tblptru
 33105  000328  C024  FFF7         	movff	??_low_isr+17,tblptrh
 33106  00032C  C023  FFF6         	movff	??_low_isr+16,tblptrl
 33107  000330  C022  FFF4         	movff	??_low_isr+15,prodh
 33108  000334  C021  FFF3         	movff	??_low_isr+14,prodl
 33109  000338  C020  FFDA         	movff	??_low_isr+13,fsr2h
 33110  00033C  C01F  FFD9         	movff	??_low_isr+12,fsr2l
 33111  000340  C01E  FFE2         	movff	??_low_isr+11,fsr1h
 33112  000344  C01D  FFE1         	movff	??_low_isr+10,fsr1l
 33113  000348  C01C  FFEA         	movff	??_low_isr+9,fsr0h
 33114  00034C  C01B  FFE9         	movff	??_low_isr+8,fsr0l
 33115  000350  C01A  FFFB         	movff	??_low_isr+7,pclatu
 33116  000354  C019  FFFA         	movff	??_low_isr+6,pclath
 33117  000358  C018  FFE0         	movff	??_low_isr+5,bsr
 33118  00035C  C017  FFE8         	movff	??_low_isr+4,wreg
 33119  000360  C016  FFD8         	movff	??_low_isr+3,status
 33120  000364  0010               	retfie	
 33121  000366                     __end_of_low_isr:
 33122                           	opt stack 0
 33123                           pclatu	equ	0xFFB
 33124                           pclath	equ	0xFFA
 33125                           tblptru	equ	0xFF8
 33126                           tblptrh	equ	0xFF7
 33127                           tblptrl	equ	0xFF6
 33128                           tablat	equ	0xFF5
 33129                           prodh	equ	0xFF4
 33130                           prodl	equ	0xFF3
 33131                           intcon	equ	0xFF2
 33132                           postinc0	equ	0xFEE
 33133                           fsr0h	equ	0xFEA
 33134                           fsr0l	equ	0xFE9
 33135                           wreg	equ	0xFE8
 33136                           indf1	equ	0xFE7
 33137                           postinc1	equ	0xFE6
 33138                           postdec1	equ	0xFE5
 33139                           fsr1h	equ	0xFE2
 33140                           fsr1l	equ	0xFE1
 33141                           bsr	equ	0xFE0
 33142                           indf2	equ	0xFDF
 33143                           postinc2	equ	0xFDE
 33144                           postdec2	equ	0xFDD
 33145                           fsr2h	equ	0xFDA
 33146                           fsr2l	equ	0xFD9
 33147                           status	equ	0xFD8
 33148                           
 33149 ;; *************** function i1_UARTstring *****************
 33150 ;; Defined at:
 33151 ;;		line 236 in file "UART.c"
 33152 ;; Parameters:    Size  Location     Type
 33153 ;;  data            2   11[COMRAM] PTR unsigned char 
 33154 ;;		 -> STR_320(26), STR_319(3), STR_317(18), STR_315(18), 
 33155 ;;		 -> STR_311(20), STR_288(24), STR_285(3), STR_283(15), 
 33156 ;;		 -> STR_282(22), STR_281(50), STR_280(8), STR_279(6), 
 33157 ;;		 -> STR_278(6), STR_277(11), STR_276(17), STR_275(12), 
 33158 ;;		 -> STR_274(13), STR_273(10), STR_272(12), STR_267(28), 
 33159 ;;		 -> STR_266(68), STR_265(9), STR_264(11), STR_263(23), 
 33160 ;;		 -> STR_261(19), STR_259(20), STR_256(20), STR_247(21), 
 33161 ;;		 -> STR_246(61), STR_245(69), STR_244(7), STR_243(7), 
 33162 ;;		 -> STR_242(10), STR_241(11), STR_240(29), STR_239(13), 
 33163 ;;		 -> STR_238(33), STR_237(25), STR_236(28), STR_235(3), 
 33164 ;;		 -> STR_234(26), STR_233(2), STR_232(34), STR_231(37), 
 33165 ;;		 -> STR_228(24), STR_224(3), STR_214(13), STR_213(73), 
 33166 ;;		 -> STR_212(5), STR_211(12), STR_210(17), STR_204(28), 
 33167 ;;		 -> STR_202(30), STR_200(33), STR_193(42), STR_192(62), 
 33168 ;;		 -> STR_191(26), STR_187(43), STR_185(48), STR_183(27), 
 33169 ;;		 -> STR_176(42), STR_175(66), STR_174(25), STR_172(49), 
 33170 ;;		 -> Command@buf(200), STR_168(33), STR_166(38), STR_164(27), 
 33171 ;;		 -> STR_163(28), STR_153(37), STR_152(68), STR_151(18), 
 33172 ;;		 -> STR_150(15), STR_149(11), STR_148(28), STR_146(18), 
 33173 ;;		 -> STR_144(32), STR_140(31), STR_136(38), STR_123(24), 
 33174 ;;		 -> STR_122(68), STR_121(10), STR_120(6), STR_119(8), 
 33175 ;;		 -> STR_118(11), STR_117(21), STR_115(16), STR_113(19), 
 33176 ;;		 -> STR_110(18), STR_107(16), STR_104(15), STR_101(22), 
 33177 ;;		 -> STR_89(27), STR_88(68), STR_87(7), STR_86(8), 
 33178 ;;		 -> STR_85(11), STR_84(24), STR_82(19), STR_80(19), 
 33179 ;;		 -> STR_77(18), STR_74(25), STR_65(17), STR_64(68), 
 33180 ;;		 -> STR_63(8), STR_62(7), STR_61(11), STR_60(17), 
 33181 ;;		 -> STR_58(12), STR_56(9), STR_53(8), STR_50(13), 
 33182 ;;		 -> STR_47(9), STR_44(8), STR_41(13), STR_36(4), 
 33183 ;;		 -> STR_35(22), STR_29(22), STR_28(3), SetBaud@buf(50), 
 33184 ;;		 -> STR_22(4), STR_21(29), STR_11(12), STR_8(54), 
 33185 ;;		 -> STR_7(3), Version(20), STR_6(19), STR_5(38), 
 33186 ;;		 -> low_isr@TEMP_Rxdata(100), STR_4(2), STR_3(2), STR_2(2), 
 33187 ;;		 -> STR_1(2), 
 33188 ;; Auto vars:     Size  Location     Type
 33189 ;;		None
 33190 ;; Return value:  Size  Location     Type
 33191 ;;		None               void
 33192 ;; Registers used:
 33193 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33194 ;; Tracked objects:
 33195 ;;		On entry : 0/0
 33196 ;;		On exit  : 0/0
 33197 ;;		Unchanged: 0/0
 33198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33203 ;;Total ram usage:        4 bytes
 33204 ;; Hardware stack levels used:    1
 33205 ;; Hardware stack levels required when called:    3
 33206 ;; This function calls:
 33207 ;;		i1_UARTchar
 33208 ;; This function is called by:
 33209 ;;		_low_isr
 33210 ;; This function uses a non-reentrant model
 33211 ;;
 33212                           
 33213                           	psect	text90
 33214  016F14                     __ptext90:
 33215                           	opt stack 0
 33216  016F14                     i1_UARTstring:
 33217                           	opt stack 19
 33218  016F14                     i1l455:
 33219                           
 33220                           ;UART.c: 239: {
 33221                           ;UART.c: 240: if(*data != 0)
 33222  016F14  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 33223  016F18  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 33224  016F1C  0E00               	movlw	low (__mediumconst shr (0+16))
 33225  016F1E  6EF8               	movwf	tblptru,c
 33226  016F20  0E0C               	movlw	(high __ramtop+-1)
 33227  016F22  64F7               	cpfsgt	tblptrh,c
 33228  016F24  D003               	bra	i1u1755_27
 33229  016F26  0008               	tblrd		*
 33230  016F28  50F5               	movf	tablat,w,c
 33231  016F2A  D005               	bra	i1u1755_20
 33232  016F2C                     i1u1755_27:
 33233  016F2C  CFF6 FFE1          	movff	tblptrl,fsr1l
 33234  016F30  CFF7 FFE2          	movff	tblptrh,fsr1h
 33235  016F34  50E7               	movf	indf1,w,c
 33236  016F36                     i1u1755_20:
 33237  016F36  0900               	iorlw	0
 33238  016F38  B4D8               	btfsc	status,2,c
 33239  016F3A  D019               	goto	i1l13586
 33240                           
 33241                           ;UART.c: 241: {
 33242                           ;UART.c: 242: UARTchar(*data, 0, 0);
 33243  016F3C  0E00               	movlw	0
 33244  016F3E  6E08               	movwf	i1UARTchar@NinethBit_override,c
 33245  016F40  0E00               	movlw	0
 33246  016F42  6E09               	movwf	i1UARTchar@NinethBit_override_data,c
 33247  016F44  C00C  FFF6         	movff	i1UARTstring@data,tblptrl
 33248  016F48  C00D  FFF7         	movff	i1UARTstring@data+1,tblptrh
 33249  016F4C  0E00               	movlw	low (__mediumconst shr (0+16))
 33250  016F4E  6EF8               	movwf	tblptru,c
 33251  016F50  0E0C               	movlw	(high __ramtop+-1)
 33252  016F52  64F7               	cpfsgt	tblptrh,c
 33253  016F54  D003               	bra	i1u1757_27
 33254  016F56  0008               	tblrd		*
 33255  016F58  50F5               	movf	tablat,w,c
 33256  016F5A  D005               	bra	i1u1757_20
 33257  016F5C                     i1u1757_27:
 33258  016F5C  CFF6 FFE1          	movff	tblptrl,fsr1l
 33259  016F60  CFF7 FFE2          	movff	tblptrh,fsr1h
 33260  016F64  50E7               	movf	indf1,w,c
 33261  016F66                     i1u1757_20:
 33262  016F66  EC84  F0BB         	call	i1_UARTchar
 33263  016F6A                     i1l457:
 33264  016F6A  A2AC               	btfss	4012,1,c	;volatile
 33265  016F6C  D7FE               	goto	i1l457
 33266  016F6E                     i1l13586:
 33267                           
 33268                           ;UART.c: 244: }
 33269                           ;UART.c: 245: } while( *data++);
 33270  016F6E  500C               	movf	i1UARTstring@data,w,c
 33271  016F70  6E0E               	movwf	??i1_UARTstring& (0+255),c
 33272  016F72  500D               	movf	i1UARTstring@data+1,w,c
 33273  016F74  6E0F               	movwf	(??i1_UARTstring+1)& (0+255),c
 33274  016F76  4A0C               	infsnz	i1UARTstring@data,f,c
 33275  016F78  2A0D               	incf	i1UARTstring@data+1,f,c
 33276  016F7A  C00E  FFF6         	movff	??i1_UARTstring,tblptrl
 33277  016F7E  C00F  FFF7         	movff	??i1_UARTstring+1,tblptrh
 33278  016F82  0E00               	movlw	low (__mediumconst shr (0+16))
 33279  016F84  6EF8               	movwf	tblptru,c
 33280  016F86  0E0C               	movlw	(high __ramtop+-1)
 33281  016F88  64F7               	cpfsgt	tblptrh,c
 33282  016F8A  D003               	bra	i1u1759_27
 33283  016F8C  0008               	tblrd		*
 33284  016F8E  50F5               	movf	tablat,w,c
 33285  016F90  D005               	bra	i1u1759_20
 33286  016F92                     i1u1759_27:
 33287  016F92  CFF6 FFE1          	movff	tblptrl,fsr1l
 33288  016F96  CFF7 FFE2          	movff	tblptrh,fsr1h
 33289  016F9A  50E7               	movf	indf1,w,c
 33290  016F9C                     i1u1759_20:
 33291  016F9C  0900               	iorlw	0
 33292  016F9E  B4D8               	btfsc	status,2,c
 33293  016FA0  0012               	return	
 33294  016FA2  D7B8               	goto	i1l455
 33295  016FA4                     __end_ofi1_UARTstring:
 33296                           	opt stack 0
 33297                           pclatu	equ	0xFFB
 33298                           pclath	equ	0xFFA
 33299                           tblptru	equ	0xFF8
 33300                           tblptrh	equ	0xFF7
 33301                           tblptrl	equ	0xFF6
 33302                           tablat	equ	0xFF5
 33303                           prodh	equ	0xFF4
 33304                           prodl	equ	0xFF3
 33305                           intcon	equ	0xFF2
 33306                           postinc0	equ	0xFEE
 33307                           fsr0h	equ	0xFEA
 33308                           fsr0l	equ	0xFE9
 33309                           wreg	equ	0xFE8
 33310                           indf1	equ	0xFE7
 33311                           postinc1	equ	0xFE6
 33312                           postdec1	equ	0xFE5
 33313                           fsr1h	equ	0xFE2
 33314                           fsr1l	equ	0xFE1
 33315                           bsr	equ	0xFE0
 33316                           indf2	equ	0xFDF
 33317                           postinc2	equ	0xFDE
 33318                           postdec2	equ	0xFDD
 33319                           fsr2h	equ	0xFDA
 33320                           fsr2l	equ	0xFD9
 33321                           status	equ	0xFD8
 33322                           
 33323 ;; *************** function i1_UARTchar *****************
 33324 ;; Defined at:
 33325 ;;		line 198 in file "UART.c"
 33326 ;; Parameters:    Size  Location     Type
 33327 ;;  data            1    wreg     unsigned char 
 33328 ;;  NinethBit_ov    1    7[COMRAM] unsigned char 
 33329 ;;  NinethBit_ov    1    8[COMRAM] unsigned char 
 33330 ;; Auto vars:     Size  Location     Type
 33331 ;;  data            1   10[COMRAM] unsigned char 
 33332 ;; Return value:  Size  Location     Type
 33333 ;;		None               void
 33334 ;; Registers used:
 33335 ;;		wreg, status,2, status,0, cstack
 33336 ;; Tracked objects:
 33337 ;;		On entry : 0/0
 33338 ;;		On exit  : 0/0
 33339 ;;		Unchanged: 0/0
 33340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33345 ;;Total ram usage:        4 bytes
 33346 ;; Hardware stack levels used:    1
 33347 ;; Hardware stack levels required when called:    2
 33348 ;; This function calls:
 33349 ;;		i1_CheckSum_byte
 33350 ;; This function is called by:
 33351 ;;		_low_isr
 33352 ;;		i1_UARTstring
 33353 ;; This function uses a non-reentrant model
 33354 ;;
 33355                           
 33356                           	psect	text91
 33357  017708                     __ptext91:
 33358                           	opt stack 0
 33359  017708                     i1_UARTchar:
 33360                           	opt stack 19
 33361                           
 33362                           ;incstack = 0
 33363                           ;i1UARTchar@data stored from wreg
 33364  017708  6E0B               	movwf	i1UARTchar@data,c
 33365                           
 33366                           ;UART.c: 200: if(TXSTAbits.TX9)
 33367  01770A  ACAC               	btfss	4012,6,c	;volatile
 33368  01770C  D02D               	goto	i1l12538
 33369                           
 33370                           ;UART.c: 201: {
 33371                           ;UART.c: 203: if(!NinethBit_override)
 33372  01770E  6608               	tstfsz	i1UARTchar@NinethBit_override,c
 33373  017710  D022               	goto	i1l12536
 33374  017712  D015               	goto	i1l12534
 33375  017714                     i1l12528:
 33376                           
 33377                           ;UART.c: 209: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 3);
 33378  017714  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 33379  017718  6A02               	clrf	i1CheckSum_byte@This+1,c
 33380  01771A  0E03               	movlw	3
 33381  01771C  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 33382  01771E  EC1A  F0BE         	call	i1_CheckSum_byte	;wreg free
 33383  017722  D007               	goto	L49
 33384  017724                     i1l12530:
 33385                           
 33386                           ;UART.c: 212: TXSTAbits.TX9D = CheckSum_byte((unsigned int) data, 2);
 33387  017724  C00B  F001         	movff	i1UARTchar@data,i1CheckSum_byte@This
 33388  017728  6A02               	clrf	i1CheckSum_byte@This+1,c
 33389  01772A  0E02               	movlw	2
 33390  01772C  6E03               	movwf	i1CheckSum_byte@Odd_Even,c
 33391  01772E  EC1A  F0BE         	call	i1_CheckSum_byte	;wreg free
 33392  017732                     L49:
 33393  017732  6E0A               	movwf	??i1_UARTchar& (0+255),c
 33394  017734  D014               	goto	L50
 33395  017736                     i1l449:
 33396                           
 33397                           ; BSR set to: 1
 33398                           ;UART.c: 215: TXSTAbits.TX9D = 1;
 33399  017736  80AC               	bsf	4012,0,c	;volatile
 33400                           
 33401                           ;UART.c: 216: break;
 33402  017738  D017               	goto	i1l12538
 33403  01773A                     i1l450:
 33404                           
 33405                           ; BSR set to: 1
 33406                           ;UART.c: 218: TXSTAbits.TX9D = 0;
 33407  01773A  90AC               	bcf	4012,0,c	;volatile
 33408                           
 33409                           ;UART.c: 219: break;
 33410  01773C  D015               	goto	i1l12538
 33411  01773E                     i1l12534:
 33412  01773E  0101               	movlb	1	; () banked
 33413  017740  510A               	movf	_PARITY& (0+255),w,b
 33414                           
 33415                           ; Switch size 1, requested type "space"
 33416                           ; Number of cases is 3, Range of values is 1 to 3
 33417                           ; switch strategies available:
 33418                           ; Name         Instructions Cycles
 33419                           ; simple_byte           10     6 (average)
 33420                           ;	Chosen strategy is simple_byte
 33421  017742  0A01               	xorlw	1	; case 1
 33422  017744  B4D8               	btfsc	status,2,c
 33423  017746  D7E6               	goto	i1l12528
 33424  017748  0A03               	xorlw	3	; case 2
 33425  01774A  B4D8               	btfsc	status,2,c
 33426  01774C  D7EB               	goto	i1l12530
 33427  01774E  0A01               	xorlw	1	; case 3
 33428  017750  B4D8               	btfsc	status,2,c
 33429  017752  D7F1               	goto	i1l449
 33430  017754  D7F2               	goto	i1l450
 33431  017756                     i1l12536:
 33432                           
 33433                           ;UART.c: 222: else
 33434                           ;UART.c: 223: {
 33435                           ;UART.c: 224: TXSTAbits.TX9D = (NinethBit_override_data & 0x01);
 33436  017756  C009  F00A         	movff	i1UARTchar@NinethBit_override_data,??i1_UARTchar
 33437  01775A  0E01               	movlw	1
 33438  01775C  160A               	andwf	??i1_UARTchar,f,c
 33439  01775E                     L50:
 33440  01775E  50AC               	movf	4012,w,c	;volatile
 33441  017760  180A               	xorwf	??i1_UARTchar,w,c
 33442  017762  0BFE               	andlw	-2
 33443  017764  180A               	xorwf	??i1_UARTchar,w,c
 33444  017766  6EAC               	movwf	4012,c	;volatile
 33445  017768                     i1l12538:
 33446                           
 33447                           ;UART.c: 225: }
 33448                           ;UART.c: 226: }
 33449                           ;UART.c: 227: TX_OLD = data;
 33450  017768  C00B  F0D8         	movff	i1UARTchar@data,_TX_OLD
 33451                           
 33452                           ;UART.c: 228: TXREG = data;
 33453  01776C  C00B  FFAD         	movff	i1UARTchar@data,4013	;volatile
 33454  017770  0012               	return	
 33455  017772                     __end_ofi1_UARTchar:
 33456                           	opt stack 0
 33457                           pclatu	equ	0xFFB
 33458                           pclath	equ	0xFFA
 33459                           tblptru	equ	0xFF8
 33460                           tblptrh	equ	0xFF7
 33461                           tblptrl	equ	0xFF6
 33462                           tablat	equ	0xFF5
 33463                           prodh	equ	0xFF4
 33464                           prodl	equ	0xFF3
 33465                           intcon	equ	0xFF2
 33466                           postinc0	equ	0xFEE
 33467                           fsr0h	equ	0xFEA
 33468                           fsr0l	equ	0xFE9
 33469                           wreg	equ	0xFE8
 33470                           indf1	equ	0xFE7
 33471                           postinc1	equ	0xFE6
 33472                           postdec1	equ	0xFE5
 33473                           fsr1h	equ	0xFE2
 33474                           fsr1l	equ	0xFE1
 33475                           bsr	equ	0xFE0
 33476                           indf2	equ	0xFDF
 33477                           postinc2	equ	0xFDE
 33478                           postdec2	equ	0xFDD
 33479                           fsr2h	equ	0xFDA
 33480                           fsr2l	equ	0xFD9
 33481                           status	equ	0xFD8
 33482                           
 33483 ;; *************** function i1_CheckSum_byte *****************
 33484 ;; Defined at:
 33485 ;;		line 343 in file "MISC.c"
 33486 ;; Parameters:    Size  Location     Type
 33487 ;;  This            2    0[COMRAM] unsigned int 
 33488 ;;  Odd_Even        1    2[COMRAM] unsigned char 
 33489 ;; Auto vars:     Size  Location     Type
 33490 ;;  CheckSum_byt    2    3[COMRAM] unsigned int 
 33491 ;;  CheckSum_byt    1    6[COMRAM] unsigned char 
 33492 ;;  CheckSum_byt    1    5[COMRAM] unsigned char 
 33493 ;; Return value:  Size  Location     Type
 33494 ;;                  1    wreg      unsigned char 
 33495 ;; Registers used:
 33496 ;;		wreg, status,2, status,0
 33497 ;; Tracked objects:
 33498 ;;		On entry : 0/0
 33499 ;;		On exit  : 0/0
 33500 ;;		Unchanged: 0/0
 33501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33502 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33503 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33505 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33506 ;;Total ram usage:        7 bytes
 33507 ;; Hardware stack levels used:    1
 33508 ;; Hardware stack levels required when called:    1
 33509 ;; This function calls:
 33510 ;;		Nothing
 33511 ;; This function is called by:
 33512 ;;		i1_UARTchar
 33513 ;; This function uses a non-reentrant model
 33514 ;;
 33515                           
 33516                           	psect	text92
 33517  017C34                     __ptext92:
 33518                           	opt stack 0
 33519  017C34                     i1_CheckSum_byte:
 33520                           	opt stack 19
 33521                           
 33522                           ;MISC.c: 345: char i = 0;
 33523                           
 33524                           ;incstack = 0
 33525  017C34  0E00               	movlw	0
 33526  017C36  6E07               	movwf	i1CheckSum_byte@i,c
 33527                           
 33528                           ;MISC.c: 346: unsigned char Parity = 0;
 33529  017C38  0E00               	movlw	0
 33530  017C3A  6E06               	movwf	i1CheckSum_byte@Parity,c
 33531                           
 33532                           ;MISC.c: 347: unsigned int ThisTemp = This;
 33533  017C3C  C001  F004         	movff	i1CheckSum_byte@This,i1CheckSum_byte@ThisTemp
 33534  017C40  C002  F005         	movff	i1CheckSum_byte@This+1,i1CheckSum_byte@ThisTemp+1
 33535                           
 33536                           ;MISC.c: 349: for (i =0; i<8; i++)
 33537  017C44  0E00               	movlw	0
 33538  017C46  6E07               	movwf	i1CheckSum_byte@i,c
 33539  017C48  D006               	goto	L51
 33540  017C4A                     i1l348:
 33541                           
 33542                           ;MISC.c: 350: {
 33543                           ;MISC.c: 351: if((ThisTemp & 0x01) == 1)
 33544  017C4A  B004               	btfsc	i1CheckSum_byte@ThisTemp,0,c
 33545                           
 33546                           ;MISC.c: 352: {
 33547                           ;MISC.c: 353: Parity++;
 33548  017C4C  2A06               	incf	i1CheckSum_byte@Parity,f,c
 33549                           
 33550                           ;MISC.c: 354: }
 33551                           ;MISC.c: 355: ThisTemp >>= 1;
 33552  017C4E  90D8               	bcf	status,0,c
 33553  017C50  3205               	rrcf	i1CheckSum_byte@ThisTemp+1,f,c
 33554  017C52  3204               	rrcf	i1CheckSum_byte@ThisTemp,f,c
 33555  017C54  2A07               	incf	i1CheckSum_byte@i,f,c
 33556  017C56                     L51:
 33557  017C56  0E07               	movlw	7
 33558  017C58  6407               	cpfsgt	i1CheckSum_byte@i,c
 33559  017C5A  D7F7               	goto	i1l348
 33560                           
 33561                           ;MISC.c: 356: }
 33562                           ;MISC.c: 357: if(Odd_Even == 3)
 33563  017C5C  5003               	movf	i1CheckSum_byte@Odd_Even,w,c
 33564  017C5E  0A03               	xorlw	3
 33565  017C60  A4D8               	btfss	status,2,c
 33566  017C62  D006               	goto	i1l351
 33567                           
 33568                           ;MISC.c: 358: {
 33569                           ;MISC.c: 359: if(Parity % 2 == 0)
 33570  017C64  B006               	btfsc	i1CheckSum_byte@Parity,0,c
 33571  017C66  D002               	goto	i1l11588
 33572                           
 33573                           ;MISC.c: 360: {
 33574                           ;MISC.c: 361: return 1;
 33575  017C68  0E01               	movlw	1
 33576  017C6A  0012               	return	
 33577  017C6C                     i1l11588:
 33578                           
 33579                           ;MISC.c: 362: }
 33580                           ;MISC.c: 363: return 0;
 33581  017C6C  0E00               	movlw	0
 33582  017C6E  0012               	return	
 33583  017C70                     i1l351:
 33584                           
 33585                           ;MISC.c: 365: else
 33586                           ;MISC.c: 366: {
 33587                           ;MISC.c: 367: if(Parity % 2 == 1)
 33588  017C70  A006               	btfss	i1CheckSum_byte@Parity,0,c
 33589  017C72  D002               	goto	i1l11598
 33590                           
 33591                           ;MISC.c: 368: {
 33592                           ;MISC.c: 369: return 1;
 33593  017C74  0E01               	movlw	1
 33594  017C76  0012               	return	
 33595  017C78                     i1l11598:
 33596                           
 33597                           ;MISC.c: 370: }
 33598                           ;MISC.c: 371: return 0;
 33599  017C78  0E00               	movlw	0
 33600  017C7A  0012               	return	
 33601  017C7C                     __end_ofi1_CheckSum_byte:
 33602                           	opt stack 0
 33603                           pclatu	equ	0xFFB
 33604                           pclath	equ	0xFFA
 33605                           tblptru	equ	0xFF8
 33606                           tblptrh	equ	0xFF7
 33607                           tblptrl	equ	0xFF6
 33608                           tablat	equ	0xFF5
 33609                           prodh	equ	0xFF4
 33610                           prodl	equ	0xFF3
 33611                           intcon	equ	0xFF2
 33612                           postinc0	equ	0xFEE
 33613                           fsr0h	equ	0xFEA
 33614                           fsr0l	equ	0xFE9
 33615                           wreg	equ	0xFE8
 33616                           indf1	equ	0xFE7
 33617                           postinc1	equ	0xFE6
 33618                           postdec1	equ	0xFE5
 33619                           fsr1h	equ	0xFE2
 33620                           fsr1l	equ	0xFE1
 33621                           bsr	equ	0xFE0
 33622                           indf2	equ	0xFDF
 33623                           postinc2	equ	0xFDE
 33624                           postdec2	equ	0xFDD
 33625                           fsr2h	equ	0xFDA
 33626                           fsr2l	equ	0xFD9
 33627                           status	equ	0xFD8
 33628                           
 33629 ;; *************** function i1_SetLCDcursor *****************
 33630 ;; Defined at:
 33631 ;;		line 192 in file "LCD.c"
 33632 ;; Parameters:    Size  Location     Type
 33633 ;;  Row             1    wreg     unsigned char 
 33634 ;;  Col             1   14[COMRAM] unsigned char 
 33635 ;; Auto vars:     Size  Location     Type
 33636 ;;  Row             1   15[COMRAM] unsigned char 
 33637 ;;  SetLCDcursor    1   16[COMRAM] unsigned char 
 33638 ;; Return value:  Size  Location     Type
 33639 ;;		None               void
 33640 ;; Registers used:
 33641 ;;		wreg, status,2, status,0, cstack
 33642 ;; Tracked objects:
 33643 ;;		On entry : 0/0
 33644 ;;		On exit  : 0/0
 33645 ;;		Unchanged: 0/0
 33646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33647 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33650 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33651 ;;Total ram usage:        3 bytes
 33652 ;; Hardware stack levels used:    1
 33653 ;; Hardware stack levels required when called:    4
 33654 ;; This function calls:
 33655 ;;		i1_SendLCDbyte
 33656 ;; This function is called by:
 33657 ;;		_low_isr
 33658 ;; This function uses a non-reentrant model
 33659 ;;
 33660                           
 33661                           	psect	text93
 33662  0005DC                     __ptext93:
 33663                           	opt stack 0
 33664  0005DC                     i1_SetLCDcursor:
 33665                           	opt stack 18
 33666                           
 33667                           ;incstack = 0
 33668                           ;i1SetLCDcursor@Row stored from wreg
 33669  0005DC  6E10               	movwf	i1SetLCDcursor@Row,c
 33670                           
 33671                           ;LCD.c: 194: char address;
 33672                           ;LCD.c: 197: if (Row == 0)
 33673  0005DE  6610               	tstfsz	i1SetLCDcursor@Row,c
 33674  0005E0  D002               	goto	i1l13592
 33675                           
 33676                           ;LCD.c: 198: {
 33677                           ;LCD.c: 199: address = 0;
 33678  0005E2  0E00               	movlw	0
 33679  0005E4  D001               	goto	L52
 33680  0005E6                     i1l13592:
 33681                           
 33682                           ;LCD.c: 201: else
 33683                           ;LCD.c: 202: {
 33684                           ;LCD.c: 203: address = 0x40;
 33685  0005E6  0E40               	movlw	64
 33686  0005E8                     L52:
 33687  0005E8  6E11               	movwf	i1SetLCDcursor@address,c
 33688                           
 33689                           ;LCD.c: 204: }
 33690                           ;LCD.c: 206: address |= Col;
 33691  0005EA  500F               	movf	i1SetLCDcursor@Col,w,c
 33692  0005EC  1211               	iorwf	i1SetLCDcursor@address,f,c
 33693                           
 33694                           ;LCD.c: 207: if(!LCDwait)
 33695  0005EE  0101               	movlb	1	; () banked
 33696  0005F0  6709               	tstfsz	_LCDwait& (0+255),b
 33697  0005F2  0012               	return	
 33698                           
 33699                           ; BSR set to: 1
 33700                           ;LCD.c: 208: {
 33701                           ;LCD.c: 209: SendLCDbyte(0x80 | address, 0);
 33702  0005F4  0E00               	movlw	0
 33703  0005F6  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 33704  0005F8  5011               	movf	i1SetLCDcursor@address,w,c
 33705  0005FA  0980               	iorlw	128
 33706  0005FC  ECC7  F0B5         	call	i1_SendLCDbyte
 33707  000600  0012               	return	
 33708  000602                     __end_ofi1_SetLCDcursor:
 33709                           	opt stack 0
 33710                           pclatu	equ	0xFFB
 33711                           pclath	equ	0xFFA
 33712                           tblptru	equ	0xFF8
 33713                           tblptrh	equ	0xFF7
 33714                           tblptrl	equ	0xFF6
 33715                           tablat	equ	0xFF5
 33716                           prodh	equ	0xFF4
 33717                           prodl	equ	0xFF3
 33718                           intcon	equ	0xFF2
 33719                           postinc0	equ	0xFEE
 33720                           fsr0h	equ	0xFEA
 33721                           fsr0l	equ	0xFE9
 33722                           wreg	equ	0xFE8
 33723                           indf1	equ	0xFE7
 33724                           postinc1	equ	0xFE6
 33725                           postdec1	equ	0xFE5
 33726                           fsr1h	equ	0xFE2
 33727                           fsr1l	equ	0xFE1
 33728                           bsr	equ	0xFE0
 33729                           indf2	equ	0xFDF
 33730                           postinc2	equ	0xFDE
 33731                           postdec2	equ	0xFDD
 33732                           fsr2h	equ	0xFDA
 33733                           fsr2l	equ	0xFD9
 33734                           status	equ	0xFD8
 33735                           
 33736 ;; *************** function i1_ReadUSART *****************
 33737 ;; Defined at:
 33738 ;;		line 253 in file "UART.c"
 33739 ;; Parameters:    Size  Location     Type
 33740 ;;		None
 33741 ;; Auto vars:     Size  Location     Type
 33742 ;;  ReadUSART       1    0[COMRAM] unsigned char 
 33743 ;; Return value:  Size  Location     Type
 33744 ;;                  1    wreg      unsigned char 
 33745 ;; Registers used:
 33746 ;;		wreg, status,2, status,0
 33747 ;; Tracked objects:
 33748 ;;		On entry : 0/0
 33749 ;;		On exit  : 0/0
 33750 ;;		Unchanged: 0/0
 33751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33756 ;;Total ram usage:        1 bytes
 33757 ;; Hardware stack levels used:    1
 33758 ;; Hardware stack levels required when called:    1
 33759 ;; This function calls:
 33760 ;;		Nothing
 33761 ;; This function is called by:
 33762 ;;		_low_isr
 33763 ;; This function uses a non-reentrant model
 33764 ;;
 33765                           
 33766                           	psect	text94
 33767  000502                     __ptext94:
 33768                           	opt stack 0
 33769  000502                     i1_ReadUSART:
 33770                           	opt stack 21
 33771                           
 33772                           ;UART.c: 255: char data;
 33773                           ;UART.c: 257: USART_Status.val &= 0xf2;
 33774                           
 33775                           ;incstack = 0
 33776  000502  0EF2               	movlw	242
 33777  000504  0101               	movlb	1	; () banked
 33778  000506  170D               	andwf	_USART_Status& (0+255),f,b
 33779                           
 33780                           ; BSR set to: 1
 33781                           ;UART.c: 259: if(RCSTAbits.RX9)
 33782  000508  ACAB               	btfss	4011,6,c	;volatile
 33783  00050A  D006               	goto	i1l464
 33784                           
 33785                           ; BSR set to: 1
 33786                           ;UART.c: 260: {
 33787                           ;UART.c: 261: USART_Status.RX_NINE = 0;
 33788  00050C  0101               	movlb	1	; () banked
 33789  00050E  910D               	bcf	_USART_Status& (0+255),0,b
 33790                           
 33791                           ;UART.c: 262: if(RCSTAbits.RX9D)
 33792  000510  A0AB               	btfss	4011,0,c	;volatile
 33793  000512  D002               	goto	i1l464
 33794                           
 33795                           ; BSR set to: 1
 33796                           ;UART.c: 263: USART_Status.RX_NINE = 1;
 33797  000514  0101               	movlb	1	; () banked
 33798  000516  810D               	bsf	_USART_Status& (0+255),0,b
 33799  000518                     i1l464:
 33800                           
 33801                           ; BSR set to: 1
 33802                           ;UART.c: 264: }
 33803                           ;UART.c: 266: if(RCSTAbits.FERR)
 33804  000518  A4AB               	btfss	4011,2,c	;volatile
 33805  00051A  D002               	goto	i1l466
 33806                           
 33807                           ; BSR set to: 1
 33808                           ;UART.c: 267: USART_Status.FRAME_ERROR = 1;
 33809  00051C  0101               	movlb	1	; () banked
 33810  00051E  850D               	bsf	_USART_Status& (0+255),2,b
 33811  000520                     i1l466:
 33812                           
 33813                           ; BSR set to: 1
 33814                           ;UART.c: 269: if(RCSTAbits.OERR)
 33815  000520  A2AB               	btfss	4011,1,c	;volatile
 33816  000522  D002               	goto	i1l467
 33817                           
 33818                           ; BSR set to: 1
 33819                           ;UART.c: 270: USART_Status.OVERRUN_ERROR = 1;
 33820  000524  0101               	movlb	1	; () banked
 33821  000526  870D               	bsf	_USART_Status& (0+255),3,b
 33822  000528                     i1l467:
 33823                           
 33824                           ; BSR set to: 1
 33825                           ;UART.c: 272: data = RCREG;
 33826  000528  CFAE F001          	movff	4014,i1ReadUSART@data	;volatile
 33827                           
 33828                           ; BSR set to: 1
 33829                           ;UART.c: 274: return (data);
 33830  00052C  5001               	movf	i1ReadUSART@data,w,c
 33831  00052E  0012               	return	
 33832  000530                     __end_ofi1_ReadUSART:
 33833                           	opt stack 0
 33834                           pclatu	equ	0xFFB
 33835                           pclath	equ	0xFFA
 33836                           tblptru	equ	0xFF8
 33837                           tblptrh	equ	0xFF7
 33838                           tblptrl	equ	0xFF6
 33839                           tablat	equ	0xFF5
 33840                           prodh	equ	0xFF4
 33841                           prodl	equ	0xFF3
 33842                           intcon	equ	0xFF2
 33843                           postinc0	equ	0xFEE
 33844                           fsr0h	equ	0xFEA
 33845                           fsr0l	equ	0xFE9
 33846                           wreg	equ	0xFE8
 33847                           indf1	equ	0xFE7
 33848                           postinc1	equ	0xFE6
 33849                           postdec1	equ	0xFE5
 33850                           fsr1h	equ	0xFE2
 33851                           fsr1l	equ	0xFE1
 33852                           bsr	equ	0xFE0
 33853                           indf2	equ	0xFDF
 33854                           postinc2	equ	0xFDE
 33855                           postdec2	equ	0xFDD
 33856                           fsr2h	equ	0xFDA
 33857                           fsr2l	equ	0xFD9
 33858                           status	equ	0xFD8
 33859                           
 33860 ;; *************** function i1_LCDPrintString *****************
 33861 ;; Defined at:
 33862 ;;		line 233 in file "LCD.c"
 33863 ;; Parameters:    Size  Location     Type
 33864 ;;  Text            2   14[COMRAM] PTR unsigned char 
 33865 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 33866 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 33867 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 33868 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 33869 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 33870 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 33871 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 33872 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 33873 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 33874 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 33875 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 33876 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 33877 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 33878 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 33879 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 33880 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 33881 ;;		 -> low_isr@LCD_TEMP(16), 
 33882 ;; Auto vars:     Size  Location     Type
 33883 ;;  LCDPrintStri    2   16[COMRAM] PTR unsigned char 
 33884 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 33885 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 33886 ;;		 -> Scroll_2(16), Scroll_1(16), STR_318(16), STR_316(16), 
 33887 ;;		 -> STR_289(17), STR_284(10), STR_262(16), STR_260(16), 
 33888 ;;		 -> STR_257(15), STR_229(17), STR_225(17), STR_205(16), 
 33889 ;;		 -> STR_203(16), STR_201(13), STR_188(14), STR_186(16), 
 33890 ;;		 -> STR_184(15), STR_173(16), Command@buf(200), STR_169(14), 
 33891 ;;		 -> STR_167(16), STR_165(15), STR_147(13), STR_145(15), 
 33892 ;;		 -> STR_141(14), STR_137(16), STR_124(16), STR_116(16), 
 33893 ;;		 -> STR_114(16), STR_111(15), STR_108(15), STR_105(14), 
 33894 ;;		 -> STR_102(16), STR_90(16), STR_83(16), STR_81(15), 
 33895 ;;		 -> STR_78(14), STR_75(16), STR_59(12), STR_57(9), 
 33896 ;;		 -> STR_54(8), STR_51(13), STR_48(9), STR_45(8), 
 33897 ;;		 -> STR_42(13), STR_20(10), STR_19(17), STR_18(16), 
 33898 ;;		 -> STR_17(15), STR_16(14), STR_15(13), STR_14(12), 
 33899 ;;		 -> STR_13(11), STR_12(10), STR_10(9), STR_9(14), 
 33900 ;;		 -> low_isr@LCD_TEMP(16), 
 33901 ;; Return value:  Size  Location     Type
 33902 ;;		None               void
 33903 ;; Registers used:
 33904 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33905 ;; Tracked objects:
 33906 ;;		On entry : 0/0
 33907 ;;		On exit  : 0/0
 33908 ;;		Unchanged: 0/0
 33909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 33910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33913 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 33914 ;;Total ram usage:        4 bytes
 33915 ;; Hardware stack levels used:    1
 33916 ;; Hardware stack levels required when called:    4
 33917 ;; This function calls:
 33918 ;;		i1_SendLCDbyte
 33919 ;; This function is called by:
 33920 ;;		_low_isr
 33921 ;; This function uses a non-reentrant model
 33922 ;;
 33923                           
 33924                           	psect	text95
 33925  017772                     __ptext95:
 33926                           	opt stack 0
 33927  017772                     i1_LCDPrintString:
 33928                           	opt stack 18
 33929                           
 33930                           ;LCD.c: 235: unsigned char *c;
 33931                           ;LCD.c: 237: c = Text;
 33932                           
 33933                           ; BSR set to: 1
 33934                           ;incstack = 0
 33935  017772  C010  F012         	movff	i1LCDPrintString@Text+1,i1LCDPrintString@c+1
 33936  017776  C00F  F011         	movff	i1LCDPrintString@Text,i1LCDPrintString@c
 33937                           
 33938                           ;LCD.c: 239: while ((c != 0) && (*c != 0))
 33939  01777A  D017               	goto	i1l13608
 33940  01777C                     i1l13604:
 33941                           
 33942                           ;LCD.c: 240: {
 33943                           ;LCD.c: 241: SendLCDbyte(*c, 1);
 33944  01777C  0E01               	movlw	1
 33945  01777E  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 33946  017780  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 33947  017784  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 33948  017788  0E00               	movlw	low (__mediumconst shr (0+16))
 33949  01778A  6EF8               	movwf	tblptru,c
 33950  01778C  0E0C               	movlw	(high __ramtop+-1)
 33951  01778E  64F7               	cpfsgt	tblptrh,c
 33952  017790  D003               	bra	i1u1763_27
 33953  017792  0008               	tblrd		*
 33954  017794  50F5               	movf	tablat,w,c
 33955  017796  D005               	bra	i1u1763_20
 33956  017798                     i1u1763_27:
 33957  017798  CFF6 FFE1          	movff	tblptrl,fsr1l
 33958  01779C  CFF7 FFE2          	movff	tblptrh,fsr1h
 33959  0177A0  50E7               	movf	indf1,w,c
 33960  0177A2                     i1u1763_20:
 33961  0177A2  ECC7  F0B5         	call	i1_SendLCDbyte
 33962                           
 33963                           ;LCD.c: 242: c++;
 33964  0177A6  4A11               	infsnz	i1LCDPrintString@c,f,c
 33965  0177A8  2A12               	incf	i1LCDPrintString@c+1,f,c
 33966  0177AA                     i1l13608:
 33967  0177AA  5012               	movf	i1LCDPrintString@c+1,w,c
 33968  0177AC  1011               	iorwf	i1LCDPrintString@c,w,c
 33969  0177AE  B4D8               	btfsc	status,2,c
 33970  0177B0  0012               	return	
 33971  0177B2  C011  FFF6         	movff	i1LCDPrintString@c,tblptrl
 33972  0177B6  C012  FFF7         	movff	i1LCDPrintString@c+1,tblptrh
 33973  0177BA  0E00               	movlw	low (__mediumconst shr (0+16))
 33974  0177BC  6EF8               	movwf	tblptru,c
 33975  0177BE  0E0C               	movlw	(high __ramtop+-1)
 33976  0177C0  64F7               	cpfsgt	tblptrh,c
 33977  0177C2  D003               	bra	i1u1765_27
 33978  0177C4  0008               	tblrd		*
 33979  0177C6  50F5               	movf	tablat,w,c
 33980  0177C8  D005               	bra	i1u1765_20
 33981  0177CA                     i1u1765_27:
 33982  0177CA  CFF6 FFE1          	movff	tblptrl,fsr1l
 33983  0177CE  CFF7 FFE2          	movff	tblptrh,fsr1h
 33984  0177D2  50E7               	movf	indf1,w,c
 33985  0177D4                     i1u1765_20:
 33986  0177D4  0900               	iorlw	0
 33987  0177D6  B4D8               	btfsc	status,2,c
 33988  0177D8  0012               	return	
 33989  0177DA  D7D0               	goto	i1l13604
 33990  0177DC                     __end_ofi1_LCDPrintString:
 33991                           	opt stack 0
 33992                           pclatu	equ	0xFFB
 33993                           pclath	equ	0xFFA
 33994                           tblptru	equ	0xFF8
 33995                           tblptrh	equ	0xFF7
 33996                           tblptrl	equ	0xFF6
 33997                           tablat	equ	0xFF5
 33998                           prodh	equ	0xFF4
 33999                           prodl	equ	0xFF3
 34000                           intcon	equ	0xFF2
 34001                           postinc0	equ	0xFEE
 34002                           fsr0h	equ	0xFEA
 34003                           fsr0l	equ	0xFE9
 34004                           wreg	equ	0xFE8
 34005                           indf1	equ	0xFE7
 34006                           postinc1	equ	0xFE6
 34007                           postdec1	equ	0xFE5
 34008                           fsr1h	equ	0xFE2
 34009                           fsr1l	equ	0xFE1
 34010                           bsr	equ	0xFE0
 34011                           indf2	equ	0xFDF
 34012                           postinc2	equ	0xFDE
 34013                           postdec2	equ	0xFDD
 34014                           fsr2h	equ	0xFDA
 34015                           fsr2l	equ	0xFD9
 34016                           status	equ	0xFD8
 34017                           
 34018 ;; *************** function i1_LCDPrintChar *****************
 34019 ;; Defined at:
 34020 ;;		line 266 in file "LCD.c"
 34021 ;; Parameters:    Size  Location     Type
 34022 ;;  character       1    wreg     unsigned char 
 34023 ;; Auto vars:     Size  Location     Type
 34024 ;;  character       1   14[COMRAM] unsigned char 
 34025 ;; Return value:  Size  Location     Type
 34026 ;;		None               void
 34027 ;; Registers used:
 34028 ;;		wreg, status,2, status,0, cstack
 34029 ;; Tracked objects:
 34030 ;;		On entry : 0/0
 34031 ;;		On exit  : 0/0
 34032 ;;		Unchanged: 0/0
 34033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34037 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34038 ;;Total ram usage:        1 bytes
 34039 ;; Hardware stack levels used:    1
 34040 ;; Hardware stack levels required when called:    4
 34041 ;; This function calls:
 34042 ;;		i1_SendLCDbyte
 34043 ;; This function is called by:
 34044 ;;		_low_isr
 34045 ;; This function uses a non-reentrant model
 34046 ;;
 34047                           
 34048                           	psect	text96
 34049  000728                     __ptext96:
 34050                           	opt stack 0
 34051  000728                     i1_LCDPrintChar:
 34052                           	opt stack 18
 34053                           
 34054                           ;incstack = 0
 34055                           ;i1LCDPrintChar@character stored from wreg
 34056  000728  6E0F               	movwf	i1LCDPrintChar@character,c
 34057                           
 34058                           ;LCD.c: 268: SendLCDbyte(character, 1);
 34059  00072A  0E01               	movlw	1
 34060  00072C  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 34061  00072E  500F               	movf	i1LCDPrintChar@character,w,c
 34062  000730  ECC7  F0B5         	call	i1_SendLCDbyte
 34063  000734  0012               	return	
 34064  000736                     __end_ofi1_LCDPrintChar:
 34065                           	opt stack 0
 34066                           pclatu	equ	0xFFB
 34067                           pclath	equ	0xFFA
 34068                           tblptru	equ	0xFF8
 34069                           tblptrh	equ	0xFF7
 34070                           tblptrl	equ	0xFF6
 34071                           tablat	equ	0xFF5
 34072                           prodh	equ	0xFF4
 34073                           prodl	equ	0xFF3
 34074                           intcon	equ	0xFF2
 34075                           postinc0	equ	0xFEE
 34076                           fsr0h	equ	0xFEA
 34077                           fsr0l	equ	0xFE9
 34078                           wreg	equ	0xFE8
 34079                           indf1	equ	0xFE7
 34080                           postinc1	equ	0xFE6
 34081                           postdec1	equ	0xFE5
 34082                           fsr1h	equ	0xFE2
 34083                           fsr1l	equ	0xFE1
 34084                           bsr	equ	0xFE0
 34085                           indf2	equ	0xFDF
 34086                           postinc2	equ	0xFDE
 34087                           postdec2	equ	0xFDD
 34088                           fsr2h	equ	0xFDA
 34089                           fsr2l	equ	0xFD9
 34090                           status	equ	0xFD8
 34091                           
 34092 ;; *************** function i1_ClearLCD *****************
 34093 ;; Defined at:
 34094 ;;		line 219 in file "LCD.c"
 34095 ;; Parameters:    Size  Location     Type
 34096 ;;		None
 34097 ;; Auto vars:     Size  Location     Type
 34098 ;;		None
 34099 ;; Return value:  Size  Location     Type
 34100 ;;		None               void
 34101 ;; Registers used:
 34102 ;;		wreg, status,2, status,0, cstack
 34103 ;; Tracked objects:
 34104 ;;		On entry : 0/0
 34105 ;;		On exit  : 0/0
 34106 ;;		Unchanged: 0/0
 34107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34112 ;;Total ram usage:        0 bytes
 34113 ;; Hardware stack levels used:    1
 34114 ;; Hardware stack levels required when called:    4
 34115 ;; This function calls:
 34116 ;;		i1_SendLCDbyte
 34117 ;; This function is called by:
 34118 ;;		_low_isr
 34119 ;; This function uses a non-reentrant model
 34120 ;;
 34121                           
 34122                           	psect	text97
 34123  000694                     __ptext97:
 34124                           	opt stack 0
 34125  000694                     i1_ClearLCD:
 34126                           	opt stack 18
 34127                           
 34128                           ;LCD.c: 224: SendLCDbyte(0x01, 0);
 34129                           
 34130                           ;incstack = 0
 34131  000694  0E00               	movlw	0
 34132  000696  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 34133  000698  0E01               	movlw	1
 34134  00069A  ECC7  F0B5         	call	i1_SendLCDbyte
 34135                           
 34136                           ;LCD.c: 225: SendLCDbyte(0x02, 0);
 34137  00069E  0E00               	movlw	0
 34138  0006A0  6E0B               	movwf	i1SendLCDbyte@isCommand,c
 34139  0006A2  0E02               	movlw	2
 34140  0006A4  ECC7  F0B5         	call	i1_SendLCDbyte
 34141  0006A8  0012               	return	
 34142  0006AA                     __end_ofi1_ClearLCD:
 34143                           	opt stack 0
 34144                           pclatu	equ	0xFFB
 34145                           pclath	equ	0xFFA
 34146                           tblptru	equ	0xFF8
 34147                           tblptrh	equ	0xFF7
 34148                           tblptrl	equ	0xFF6
 34149                           tablat	equ	0xFF5
 34150                           prodh	equ	0xFF4
 34151                           prodl	equ	0xFF3
 34152                           intcon	equ	0xFF2
 34153                           postinc0	equ	0xFEE
 34154                           fsr0h	equ	0xFEA
 34155                           fsr0l	equ	0xFE9
 34156                           wreg	equ	0xFE8
 34157                           indf1	equ	0xFE7
 34158                           postinc1	equ	0xFE6
 34159                           postdec1	equ	0xFE5
 34160                           fsr1h	equ	0xFE2
 34161                           fsr1l	equ	0xFE1
 34162                           bsr	equ	0xFE0
 34163                           indf2	equ	0xFDF
 34164                           postinc2	equ	0xFDE
 34165                           postdec2	equ	0xFDD
 34166                           fsr2h	equ	0xFDA
 34167                           fsr2l	equ	0xFD9
 34168                           status	equ	0xFD8
 34169                           
 34170 ;; *************** function i1_SendLCDbyte *****************
 34171 ;; Defined at:
 34172 ;;		line 106 in file "LCD.c"
 34173 ;; Parameters:    Size  Location     Type
 34174 ;;  data            1    wreg     unsigned char 
 34175 ;;  isCommand       1   10[COMRAM] unsigned char 
 34176 ;; Auto vars:     Size  Location     Type
 34177 ;;  data            1   11[COMRAM] unsigned char 
 34178 ;;  SendLCDbyte     1   13[COMRAM] unsigned char 
 34179 ;;  SendLCDbyte     1   12[COMRAM] unsigned char 
 34180 ;; Return value:  Size  Location     Type
 34181 ;;		None               void
 34182 ;; Registers used:
 34183 ;;		wreg, status,2, status,0, cstack
 34184 ;; Tracked objects:
 34185 ;;		On entry : 0/0
 34186 ;;		On exit  : 0/0
 34187 ;;		Unchanged: 0/0
 34188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34189 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34190 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34193 ;;Total ram usage:        4 bytes
 34194 ;; Hardware stack levels used:    1
 34195 ;; Hardware stack levels required when called:    3
 34196 ;; This function calls:
 34197 ;;		i1_PulseEnablePin
 34198 ;;		i1_delayUS
 34199 ;; This function is called by:
 34200 ;;		i1_SetLCDcursor
 34201 ;;		i1_ClearLCD
 34202 ;;		i1_LCDPrintString
 34203 ;;		i1_LCDPrintChar
 34204 ;; This function uses a non-reentrant model
 34205 ;;
 34206                           
 34207                           	psect	text98
 34208  016B8E                     __ptext98:
 34209                           	opt stack 0
 34210  016B8E                     i1_SendLCDbyte:
 34211                           	opt stack 18
 34212                           
 34213                           ;incstack = 0
 34214                           ;i1SendLCDbyte@data stored from wreg
 34215  016B8E  6E0C               	movwf	i1SendLCDbyte@data,c
 34216                           
 34217                           ;LCD.c: 108: unsigned char MSB_nibble=0;
 34218  016B90  0E00               	movlw	0
 34219  016B92  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 34220                           
 34221                           ;LCD.c: 109: unsigned char LSB_nibble=0;
 34222  016B94  0E00               	movlw	0
 34223  016B96  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 34224                           
 34225                           ;LCD.c: 111: LATA &= ~(0b00001000+0b00010000+0b00100000);
 34226  016B98  0EC7               	movlw	199
 34227  016B9A  1689               	andwf	3977,f,c	;volatile
 34228                           
 34229                           ;LCD.c: 112: LATE &= ~0b00000001;
 34230  016B9C  908D               	bcf	3981,0,c	;volatile
 34231                           
 34232                           ;LCD.c: 113: LATD &= ~(0b10000000 + 0b00100000);
 34233  016B9E  0E5F               	movlw	95
 34234  016BA0  168C               	andwf	3980,f,c	;volatile
 34235                           
 34236                           ;LCD.c: 114: delayUS(10);
 34237  016BA2  0E0A               	movlw	10
 34238  016BA4  6E01               	movwf	i1delayUS@US,c
 34239  016BA6  0E00               	movlw	0
 34240  016BA8  6E02               	movwf	i1delayUS@US+1,c
 34241  016BAA  0E00               	movlw	0
 34242  016BAC  6E03               	movwf	i1delayUS@US+2,c
 34243  016BAE  0E00               	movlw	0
 34244  016BB0  6E04               	movwf	i1delayUS@US+3,c
 34245  016BB2  ECAC  F0BD         	call	i1_delayUS	;wreg free
 34246                           
 34247                           ;LCD.c: 115: MSB_nibble = (data & 0xF0)>>4;
 34248  016BB6  380C               	swapf	i1SendLCDbyte@data,w,c
 34249  016BB8  0B0F               	andlw	15
 34250  016BBA  0B0F               	andlw	15
 34251  016BBC  6E0D               	movwf	i1SendLCDbyte@MSB_nibble,c
 34252                           
 34253                           ;LCD.c: 116: LSB_nibble = (data & 0x0F);
 34254  016BBE  500C               	movf	i1SendLCDbyte@data,w,c
 34255  016BC0  0B0F               	andlw	15
 34256  016BC2  6E0E               	movwf	i1SendLCDbyte@LSB_nibble,c
 34257                           
 34258                           ;LCD.c: 117: if(!LCDwait)
 34259  016BC4  0101               	movlb	1	; () banked
 34260  016BC6  6709               	tstfsz	_LCDwait& (0+255),b
 34261  016BC8  D028               	goto	i1l12606
 34262                           
 34263                           ; BSR set to: 1
 34264                           ;LCD.c: 118: {
 34265                           ;LCD.c: 119: if(isCommand)
 34266  016BCA  500B               	movf	i1SendLCDbyte@isCommand,w,c
 34267  016BCC  B4D8               	btfsc	status,2,c
 34268  016BCE  D002               	goto	i1l12562
 34269                           
 34270                           ; BSR set to: 1
 34271                           ;LCD.c: 120: {
 34272                           ;LCD.c: 121: LATD |= (0b00100000);
 34273  016BD0  8A8C               	bsf	3980,5,c	;volatile
 34274                           
 34275                           ;LCD.c: 122: }
 34276  016BD2  D001               	goto	i1l12564
 34277  016BD4                     i1l12562:
 34278                           
 34279                           ; BSR set to: 1
 34280                           ;LCD.c: 123: else
 34281                           ;LCD.c: 124: {
 34282                           ;LCD.c: 125: LATD &= ~(0b00100000);
 34283  016BD4  9A8C               	bcf	3980,5,c	;volatile
 34284  016BD6                     i1l12564:
 34285                           
 34286                           ; BSR set to: 1
 34287                           ;LCD.c: 126: }
 34288                           ;LCD.c: 127: if(MSB_nibble&0b1000)
 34289  016BD6  B60D               	btfsc	i1SendLCDbyte@MSB_nibble,3,c
 34290                           
 34291                           ; BSR set to: 1
 34292                           ;LCD.c: 128: {
 34293                           ;LCD.c: 129: LATA |= 0b00001000;
 34294  016BD8  8689               	bsf	3977,3,c	;volatile
 34295                           
 34296                           ; BSR set to: 1
 34297                           ;LCD.c: 130: }
 34298                           ;LCD.c: 131: if(MSB_nibble&0b0100)
 34299                           
 34300                           ; BSR set to: 1
 34301  016BDA  B40D               	btfsc	i1SendLCDbyte@MSB_nibble,2,c
 34302                           
 34303                           ; BSR set to: 1
 34304                           ;LCD.c: 132: {
 34305                           ;LCD.c: 133: LATA |= 0b00010000;
 34306  016BDC  8889               	bsf	3977,4,c	;volatile
 34307                           
 34308                           ; BSR set to: 1
 34309                           ;LCD.c: 134: }
 34310                           ;LCD.c: 135: if(MSB_nibble&0b0010)
 34311                           
 34312                           ; BSR set to: 1
 34313  016BDE  B20D               	btfsc	i1SendLCDbyte@MSB_nibble,1,c
 34314                           
 34315                           ; BSR set to: 1
 34316                           ;LCD.c: 136: {
 34317                           ;LCD.c: 137: LATA |= 0b00100000;
 34318  016BE0  8A89               	bsf	3977,5,c	;volatile
 34319                           
 34320                           ; BSR set to: 1
 34321                           ;LCD.c: 138: }
 34322                           ;LCD.c: 139: if(MSB_nibble&0b0001)
 34323                           
 34324                           ; BSR set to: 1
 34325  016BE2  B00D               	btfsc	i1SendLCDbyte@MSB_nibble,0,c
 34326                           
 34327                           ; BSR set to: 1
 34328                           ;LCD.c: 140: {
 34329                           ;LCD.c: 141: LATE |= 0b00000001;
 34330  016BE4  808D               	bsf	3981,0,c	;volatile
 34331                           
 34332                           ; BSR set to: 1
 34333                           ;LCD.c: 142: }
 34334                           ;LCD.c: 143: PulseEnablePin();
 34335                           
 34336                           ; BSR set to: 1
 34337  016BE6  EC98  F002         	call	i1_PulseEnablePin	;wreg free
 34338                           
 34339                           ;LCD.c: 144: LATA &= ~(0b00001000+0b00010000+0b00100000);
 34340  016BEA  0EC7               	movlw	199
 34341  016BEC  1689               	andwf	3977,f,c	;volatile
 34342                           
 34343                           ;LCD.c: 145: LATE &= ~0b00000001;
 34344  016BEE  908D               	bcf	3981,0,c	;volatile
 34345                           
 34346                           ;LCD.c: 146: delayUS(10);
 34347  016BF0  0E0A               	movlw	10
 34348  016BF2  6E01               	movwf	i1delayUS@US,c
 34349  016BF4  0E00               	movlw	0
 34350  016BF6  6E02               	movwf	i1delayUS@US+1,c
 34351  016BF8  0E00               	movlw	0
 34352  016BFA  6E03               	movwf	i1delayUS@US+2,c
 34353  016BFC  0E00               	movlw	0
 34354  016BFE  6E04               	movwf	i1delayUS@US+3,c
 34355  016C00  ECAC  F0BD         	call	i1_delayUS	;wreg free
 34356                           
 34357                           ;LCD.c: 147: if(LSB_nibble&0b1000)
 34358  016C04  B60E               	btfsc	i1SendLCDbyte@LSB_nibble,3,c
 34359                           
 34360                           ;LCD.c: 148: {
 34361                           ;LCD.c: 149: LATA |= 0b00001000;
 34362  016C06  8689               	bsf	3977,3,c	;volatile
 34363                           
 34364                           ;LCD.c: 150: }
 34365                           ;LCD.c: 151: if(LSB_nibble&0b0100)
 34366  016C08  B40E               	btfsc	i1SendLCDbyte@LSB_nibble,2,c
 34367                           
 34368                           ;LCD.c: 152: {
 34369                           ;LCD.c: 153: LATA |= 0b00010000;
 34370  016C0A  8889               	bsf	3977,4,c	;volatile
 34371                           
 34372                           ;LCD.c: 154: }
 34373                           ;LCD.c: 155: if(LSB_nibble&0b0010)
 34374  016C0C  B20E               	btfsc	i1SendLCDbyte@LSB_nibble,1,c
 34375                           
 34376                           ;LCD.c: 156: {
 34377                           ;LCD.c: 157: LATA |= 0b00100000;
 34378  016C0E  8A89               	bsf	3977,5,c	;volatile
 34379                           
 34380                           ;LCD.c: 158: }
 34381                           ;LCD.c: 159: if(LSB_nibble&0b0001)
 34382  016C10  B00E               	btfsc	i1SendLCDbyte@LSB_nibble,0,c
 34383                           
 34384                           ;LCD.c: 160: {
 34385                           ;LCD.c: 161: LATE |= 0b00000001;
 34386  016C12  808D               	bsf	3981,0,c	;volatile
 34387                           
 34388                           ;LCD.c: 162: }
 34389                           ;LCD.c: 163: PulseEnablePin();
 34390  016C14  EC98  F002         	call	i1_PulseEnablePin	;wreg free
 34391                           
 34392                           ;LCD.c: 164: }
 34393  016C18  0012               	return	
 34394  016C1A                     i1l12606:
 34395                           
 34396                           ;LCD.c: 165: else
 34397                           ;LCD.c: 166: {
 34398                           ;LCD.c: 167: delayUS(20);
 34399  016C1A  0E14               	movlw	20
 34400  016C1C  6E01               	movwf	i1delayUS@US,c
 34401  016C1E  0E00               	movlw	0
 34402  016C20  6E02               	movwf	i1delayUS@US+1,c
 34403  016C22  0E00               	movlw	0
 34404  016C24  6E03               	movwf	i1delayUS@US+2,c
 34405  016C26  0E00               	movlw	0
 34406  016C28  6E04               	movwf	i1delayUS@US+3,c
 34407  016C2A  ECAC  F0BD         	call	i1_delayUS	;wreg free
 34408  016C2E  0012               	return	
 34409  016C30                     __end_ofi1_SendLCDbyte:
 34410                           	opt stack 0
 34411                           pclatu	equ	0xFFB
 34412                           pclath	equ	0xFFA
 34413                           tblptru	equ	0xFF8
 34414                           tblptrh	equ	0xFF7
 34415                           tblptrl	equ	0xFF6
 34416                           tablat	equ	0xFF5
 34417                           prodh	equ	0xFF4
 34418                           prodl	equ	0xFF3
 34419                           intcon	equ	0xFF2
 34420                           postinc0	equ	0xFEE
 34421                           fsr0h	equ	0xFEA
 34422                           fsr0l	equ	0xFE9
 34423                           wreg	equ	0xFE8
 34424                           indf1	equ	0xFE7
 34425                           postinc1	equ	0xFE6
 34426                           postdec1	equ	0xFE5
 34427                           fsr1h	equ	0xFE2
 34428                           fsr1l	equ	0xFE1
 34429                           bsr	equ	0xFE0
 34430                           indf2	equ	0xFDF
 34431                           postinc2	equ	0xFDE
 34432                           postdec2	equ	0xFDD
 34433                           fsr2h	equ	0xFDA
 34434                           fsr2l	equ	0xFD9
 34435                           status	equ	0xFD8
 34436                           
 34437 ;; *************** function i1_PulseEnablePin *****************
 34438 ;; Defined at:
 34439 ;;		line 177 in file "LCD.c"
 34440 ;; Parameters:    Size  Location     Type
 34441 ;;		None
 34442 ;; Auto vars:     Size  Location     Type
 34443 ;;		None
 34444 ;; Return value:  Size  Location     Type
 34445 ;;		None               void
 34446 ;; Registers used:
 34447 ;;		wreg, status,2, status,0, cstack
 34448 ;; Tracked objects:
 34449 ;;		On entry : 0/0
 34450 ;;		On exit  : 0/0
 34451 ;;		Unchanged: 0/0
 34452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34457 ;;Total ram usage:        0 bytes
 34458 ;; Hardware stack levels used:    1
 34459 ;; Hardware stack levels required when called:    2
 34460 ;; This function calls:
 34461 ;;		i1_delayUS
 34462 ;; This function is called by:
 34463 ;;		i1_SendLCDbyte
 34464 ;; This function uses a non-reentrant model
 34465 ;;
 34466                           
 34467                           	psect	text99
 34468  000530                     __ptext99:
 34469                           	opt stack 0
 34470  000530                     i1_PulseEnablePin:
 34471                           	opt stack 18
 34472                           
 34473                           ;LCD.c: 180: LATD |= (0b10000000);
 34474                           
 34475                           ;incstack = 0
 34476  000530  8E8C               	bsf	3980,7,c	;volatile
 34477                           
 34478                           ;LCD.c: 181: delayUS(2500);
 34479  000532  0EC4               	movlw	196
 34480  000534  6E01               	movwf	i1delayUS@US,c
 34481  000536  0E09               	movlw	9
 34482  000538  6E02               	movwf	i1delayUS@US+1,c
 34483  00053A  0E00               	movlw	0
 34484  00053C  6E03               	movwf	i1delayUS@US+2,c
 34485  00053E  0E00               	movlw	0
 34486  000540  6E04               	movwf	i1delayUS@US+3,c
 34487  000542  ECAC  F0BD         	call	i1_delayUS	;wreg free
 34488                           
 34489                           ;LCD.c: 183: LATD &= ~(0b10000000);
 34490  000546  9E8C               	bcf	3980,7,c	;volatile
 34491                           
 34492                           ;LCD.c: 184: delayUS(2500);
 34493  000548  0EC4               	movlw	196
 34494  00054A  6E01               	movwf	i1delayUS@US,c
 34495  00054C  0E09               	movlw	9
 34496  00054E  6E02               	movwf	i1delayUS@US+1,c
 34497  000550  0E00               	movlw	0
 34498  000552  6E03               	movwf	i1delayUS@US+2,c
 34499  000554  0E00               	movlw	0
 34500  000556  6E04               	movwf	i1delayUS@US+3,c
 34501  000558  ECAC  F0BD         	call	i1_delayUS	;wreg free
 34502  00055C  0012               	return	
 34503  00055E                     __end_ofi1_PulseEnablePin:
 34504                           	opt stack 0
 34505                           pclatu	equ	0xFFB
 34506                           pclath	equ	0xFFA
 34507                           tblptru	equ	0xFF8
 34508                           tblptrh	equ	0xFF7
 34509                           tblptrl	equ	0xFF6
 34510                           tablat	equ	0xFF5
 34511                           prodh	equ	0xFF4
 34512                           prodl	equ	0xFF3
 34513                           intcon	equ	0xFF2
 34514                           postinc0	equ	0xFEE
 34515                           fsr0h	equ	0xFEA
 34516                           fsr0l	equ	0xFE9
 34517                           wreg	equ	0xFE8
 34518                           indf1	equ	0xFE7
 34519                           postinc1	equ	0xFE6
 34520                           postdec1	equ	0xFE5
 34521                           fsr1h	equ	0xFE2
 34522                           fsr1l	equ	0xFE1
 34523                           bsr	equ	0xFE0
 34524                           indf2	equ	0xFDF
 34525                           postinc2	equ	0xFDE
 34526                           postdec2	equ	0xFDD
 34527                           fsr2h	equ	0xFDA
 34528                           fsr2l	equ	0xFD9
 34529                           status	equ	0xFD8
 34530                           
 34531 ;; *************** function i1_delayUS *****************
 34532 ;; Defined at:
 34533 ;;		line 55 in file "MISC.c"
 34534 ;; Parameters:    Size  Location     Type
 34535 ;;  US              4    0[COMRAM] long 
 34536 ;; Auto vars:     Size  Location     Type
 34537 ;;  delayUS         4    5[COMRAM] long 
 34538 ;;  delayUS         1    9[COMRAM] unsigned char 
 34539 ;; Return value:  Size  Location     Type
 34540 ;;		None               void
 34541 ;; Registers used:
 34542 ;;		wreg, status,2, status,0
 34543 ;; Tracked objects:
 34544 ;;		On entry : 0/0
 34545 ;;		On exit  : 0/0
 34546 ;;		Unchanged: 0/0
 34547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34548 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34549 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34550 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34551 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34552 ;;Total ram usage:       10 bytes
 34553 ;; Hardware stack levels used:    1
 34554 ;; Hardware stack levels required when called:    1
 34555 ;; This function calls:
 34556 ;;		Nothing
 34557 ;; This function is called by:
 34558 ;;		i1_SendLCDbyte
 34559 ;;		i1_PulseEnablePin
 34560 ;; This function uses a non-reentrant model
 34561 ;;
 34562                           
 34563                           	psect	text100
 34564  017B58                     __ptext100:
 34565                           	opt stack 0
 34566  017B58                     i1_delayUS:
 34567                           	opt stack 19
 34568                           
 34569                           ;MISC.c: 57: long i;
 34570                           ;MISC.c: 58: unsigned char j;
 34571                           ;MISC.c: 59: for(i=0;i<US;i+=31)
 34572                           
 34573                           ;incstack = 0
 34574  017B58  0E00               	movlw	0
 34575  017B5A  6E06               	movwf	i1delayUS@i,c
 34576  017B5C  0E00               	movlw	0
 34577  017B5E  6E07               	movwf	i1delayUS@i+1,c
 34578  017B60  0E00               	movlw	0
 34579  017B62  6E08               	movwf	i1delayUS@i+2,c
 34580  017B64  0E00               	movlw	0
 34581  017B66  6E09               	movwf	i1delayUS@i+3,c
 34582  017B68  D00E               	goto	i1l234
 34583  017B6A                     i1l10584:
 34584                           
 34585                           ;MISC.c: 60: {
 34586                           ;MISC.c: 61: for(j=0;j<41;j++)
 34587  017B6A  0E00               	movlw	0
 34588  017B6C  6E0A               	movwf	i1delayUS@j,c
 34589  017B6E  D002               	goto	L53
 34590  017B70                     i1l236:
 34591                           
 34592                           ;MISC.c: 62: {
 34593                           ;MISC.c: 63: __nop();
 34594  017B70  F000               	nop	
 34595  017B72  2A0A               	incf	i1delayUS@j,f,c
 34596  017B74                     L53:
 34597  017B74  0E28               	movlw	40
 34598  017B76  640A               	cpfsgt	i1delayUS@j,c
 34599  017B78  D7FB               	goto	i1l236
 34600  017B7A  0E1F               	movlw	31
 34601  017B7C  2606               	addwf	i1delayUS@i,f,c
 34602  017B7E  0E00               	movlw	0
 34603  017B80  2207               	addwfc	i1delayUS@i+1,f,c
 34604  017B82  2208               	addwfc	i1delayUS@i+2,f,c
 34605  017B84  2209               	addwfc	i1delayUS@i+3,f,c
 34606  017B86                     i1l234:
 34607  017B86  5009               	movf	i1delayUS@i+3,w,c
 34608  017B88  0A80               	xorlw	128
 34609  017B8A  6E05               	movwf	??i1_delayUS& (0+255),c
 34610  017B8C  5001               	movf	i1delayUS@US,w,c
 34611  017B8E  5C06               	subwf	i1delayUS@i,w,c
 34612  017B90  5002               	movf	i1delayUS@US+1,w,c
 34613  017B92  5807               	subwfb	i1delayUS@i+1,w,c
 34614  017B94  5003               	movf	i1delayUS@US+2,w,c
 34615  017B96  5808               	subwfb	i1delayUS@i+2,w,c
 34616  017B98  5004               	movf	i1delayUS@US+3,w,c
 34617  017B9A  0A80               	xorlw	128
 34618  017B9C  5805               	subwfb	??i1_delayUS& (0+255),w,c
 34619  017B9E  B0D8               	btfsc	status,0,c
 34620  017BA0  0012               	return	
 34621  017BA2  D7E3               	goto	i1l10584
 34622  017BA4                     __end_ofi1_delayUS:
 34623                           	opt stack 0
 34624                           pclatu	equ	0xFFB
 34625                           pclath	equ	0xFFA
 34626                           tblptru	equ	0xFF8
 34627                           tblptrh	equ	0xFF7
 34628                           tblptrl	equ	0xFF6
 34629                           tablat	equ	0xFF5
 34630                           prodh	equ	0xFF4
 34631                           prodl	equ	0xFF3
 34632                           intcon	equ	0xFF2
 34633                           postinc0	equ	0xFEE
 34634                           fsr0h	equ	0xFEA
 34635                           fsr0l	equ	0xFE9
 34636                           wreg	equ	0xFE8
 34637                           indf1	equ	0xFE7
 34638                           postinc1	equ	0xFE6
 34639                           postdec1	equ	0xFE5
 34640                           fsr1h	equ	0xFE2
 34641                           fsr1l	equ	0xFE1
 34642                           bsr	equ	0xFE0
 34643                           indf2	equ	0xFDF
 34644                           postinc2	equ	0xFDE
 34645                           postdec2	equ	0xFDD
 34646                           fsr2h	equ	0xFDA
 34647                           fsr2l	equ	0xFD9
 34648                           status	equ	0xFD8
 34649                           
 34650 ;; *************** function i1_BufferCopy *****************
 34651 ;; Defined at:
 34652 ;;		line 87 in file "MISC.c"
 34653 ;; Parameters:    Size  Location     Type
 34654 ;;  from            2    8[COMRAM] PTR unsigned char 
 34655 ;;		 -> STR_298(6), STR_297(5), STR_296(5), STR_295(10), 
 34656 ;;		 -> STR_294(16), STR_293(11), STR_292(12), STR_291(9), 
 34657 ;;		 -> STR_290(14), STR_270(6), STR_269(9), STR_268(14), 
 34658 ;;		 -> STR_252(4), STR_251(5), STR_250(8), STR_249(10), 
 34659 ;;		 -> STR_248(9), STR_217(2), STR_216(10), STR_215(9), 
 34660 ;;		 -> STR_196(10), STR_195(10), STR_194(13), STR_179(10), 
 34661 ;;		 -> STR_178(10), STR_177(17), STR_157(6), STR_156(6), 
 34662 ;;		 -> STR_155(9), STR_154(10), STR_129(7), STR_128(4), 
 34663 ;;		 -> STR_127(6), STR_126(9), STR_125(13), STR_94(4), 
 34664 ;;		 -> STR_93(6), STR_92(9), STR_91(14), STR_69(5), 
 34665 ;;		 -> STR_68(5), STR_67(9), STR_66(9), StringAddEqual@temp(100), 
 34666 ;;		 -> RemoveSpaces@That(100), low_isr@TEMP_Rxdata(100), 
 34667 ;;  to              2   10[COMRAM] PTR unsigned char 
 34668 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 34669 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 34670 ;;		 -> Scroll_2(16), Scroll_1(16), Rxdata(100), 
 34671 ;;  count           1   12[COMRAM] unsigned char 
 34672 ;;  shift           1   13[COMRAM] unsigned char 
 34673 ;; Auto vars:     Size  Location     Type
 34674 ;;  BufferCopy      1   14[COMRAM] unsigned char 
 34675 ;; Return value:  Size  Location     Type
 34676 ;;		None               void
 34677 ;; Registers used:
 34678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34679 ;; Tracked objects:
 34680 ;;		On entry : 0/0
 34681 ;;		On exit  : 0/0
 34682 ;;		Unchanged: 0/0
 34683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34684 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34687 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34688 ;;Total ram usage:        7 bytes
 34689 ;; Hardware stack levels used:    1
 34690 ;; Hardware stack levels required when called:    2
 34691 ;; This function calls:
 34692 ;;		i1_cleanBuffer
 34693 ;; This function is called by:
 34694 ;;		_low_isr
 34695 ;; This function uses a non-reentrant model
 34696 ;;
 34697                           
 34698                           	psect	text101
 34699  016C30                     __ptext101:
 34700                           	opt stack 0
 34701  016C30                     i1_BufferCopy:
 34702                           	opt stack 20
 34703                           
 34704                           ;MISC.c: 89: unsigned char i=0;
 34705                           
 34706                           ;incstack = 0
 34707  016C30  0E00               	movlw	0
 34708  016C32  6E0F               	movwf	i1BufferCopy@i,c
 34709                           
 34710                           ;MISC.c: 90: cleanBuffer(to,count);
 34711  016C34  C00C  F002         	movff	i1BufferCopy@to+1,i1cleanBuffer@data+1
 34712  016C38  C00B  F001         	movff	i1BufferCopy@to,i1cleanBuffer@data
 34713  016C3C  C00D  F003         	movff	i1BufferCopy@count,i1cleanBuffer@count
 34714  016C40  6A04               	clrf	i1cleanBuffer@count+1,c
 34715  016C42  ECB5  F001         	call	i1_cleanBuffer	;wreg free
 34716                           
 34717                           ;MISC.c: 91: for(i = shift; i>0;i--)
 34718  016C46  C00E  F00F         	movff	i1BufferCopy@shift,i1BufferCopy@i
 34719  016C4A  D009               	goto	L55
 34720  016C4C                     i1l13562:
 34721                           
 34722                           ;MISC.c: 92: {
 34723                           ;MISC.c: 93: *to = ' ';
 34724  016C4C  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 34725  016C50  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 34726  016C54  0E20               	movlw	32
 34727  016C56  6EDF               	movwf	indf2,c
 34728                           
 34729                           ;MISC.c: 94: to++;
 34730  016C58  4A0B               	infsnz	i1BufferCopy@to,f,c
 34731  016C5A  2A0C               	incf	i1BufferCopy@to+1,f,c
 34732  016C5C  060F               	decf	i1BufferCopy@i,f,c
 34733  016C5E                     L55:
 34734  016C5E  660F               	tstfsz	i1BufferCopy@i,c
 34735  016C60  D7F5               	goto	i1l13562
 34736  016C62  D01B               	goto	L54
 34737  016C64                     i1l13570:
 34738                           
 34739                           ;MISC.c: 97: {
 34740                           ;MISC.c: 98: *to = *from;
 34741  016C64  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 34742  016C68  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 34743  016C6C  0E00               	movlw	low (__mediumconst shr (0+16))
 34744  016C6E  6EF8               	movwf	tblptru,c
 34745  016C70  C00B  FFD9         	movff	i1BufferCopy@to,fsr2l
 34746  016C74  C00C  FFDA         	movff	i1BufferCopy@to+1,fsr2h
 34747  016C78  0E0C               	movlw	(high __ramtop+-1)
 34748  016C7A  64F7               	cpfsgt	tblptrh,c
 34749  016C7C  D003               	bra	i1u1751_27
 34750  016C7E  0008               	tblrd		*
 34751  016C80  50F5               	movf	tablat,w,c
 34752  016C82  D005               	bra	i1u1751_20
 34753  016C84                     i1u1751_27:
 34754  016C84  CFF6 FFE1          	movff	tblptrl,fsr1l
 34755  016C88  CFF7 FFE2          	movff	tblptrh,fsr1h
 34756  016C8C  50E7               	movf	indf1,w,c
 34757  016C8E                     i1u1751_20:
 34758  016C8E  6EDF               	movwf	indf2,c
 34759                           
 34760                           ;MISC.c: 99: from++;
 34761  016C90  4A09               	infsnz	i1BufferCopy@from,f,c
 34762  016C92  2A0A               	incf	i1BufferCopy@from+1,f,c
 34763                           
 34764                           ;MISC.c: 100: to++;
 34765  016C94  4A0B               	infsnz	i1BufferCopy@to,f,c
 34766  016C96  2A0C               	incf	i1BufferCopy@to+1,f,c
 34767                           
 34768                           ;MISC.c: 101: count--;
 34769  016C98  060D               	decf	i1BufferCopy@count,f,c
 34770  016C9A                     L54:
 34771  016C9A  C009  FFF6         	movff	i1BufferCopy@from,tblptrl
 34772  016C9E  C00A  FFF7         	movff	i1BufferCopy@from+1,tblptrh
 34773  016CA2  0E00               	movlw	low (__mediumconst shr (0+16))
 34774  016CA4  6EF8               	movwf	tblptru,c
 34775  016CA6  0E0C               	movlw	(high __ramtop+-1)
 34776  016CA8  64F7               	cpfsgt	tblptrh,c
 34777  016CAA  D003               	bra	i1u1752_27
 34778  016CAC  0008               	tblrd		*
 34779  016CAE  50F5               	movf	tablat,w,c
 34780  016CB0  D005               	bra	i1u1752_20
 34781  016CB2                     i1u1752_27:
 34782  016CB2  CFF6 FFE1          	movff	tblptrl,fsr1l
 34783  016CB6  CFF7 FFE2          	movff	tblptrh,fsr1h
 34784  016CBA  50E7               	movf	indf1,w,c
 34785  016CBC                     i1u1752_20:
 34786  016CBC  0900               	iorlw	0
 34787  016CBE  B4D8               	btfsc	status,2,c
 34788  016CC0  0012               	return	
 34789  016CC2  660D               	tstfsz	i1BufferCopy@count,c
 34790  016CC4  D7CF               	goto	i1l13570
 34791  016CC6  0012               	return	
 34792  016CC8                     __end_ofi1_BufferCopy:
 34793                           	opt stack 0
 34794                           pclatu	equ	0xFFB
 34795                           pclath	equ	0xFFA
 34796                           tblptru	equ	0xFF8
 34797                           tblptrh	equ	0xFF7
 34798                           tblptrl	equ	0xFF6
 34799                           tablat	equ	0xFF5
 34800                           prodh	equ	0xFF4
 34801                           prodl	equ	0xFF3
 34802                           intcon	equ	0xFF2
 34803                           postinc0	equ	0xFEE
 34804                           fsr0h	equ	0xFEA
 34805                           fsr0l	equ	0xFE9
 34806                           wreg	equ	0xFE8
 34807                           indf1	equ	0xFE7
 34808                           postinc1	equ	0xFE6
 34809                           postdec1	equ	0xFE5
 34810                           fsr1h	equ	0xFE2
 34811                           fsr1l	equ	0xFE1
 34812                           bsr	equ	0xFE0
 34813                           indf2	equ	0xFDF
 34814                           postinc2	equ	0xFDE
 34815                           postdec2	equ	0xFDD
 34816                           fsr2h	equ	0xFDA
 34817                           fsr2l	equ	0xFD9
 34818                           status	equ	0xFD8
 34819                           
 34820 ;; *************** function i1_cleanBuffer *****************
 34821 ;; Defined at:
 34822 ;;		line 73 in file "MISC.c"
 34823 ;; Parameters:    Size  Location     Type
 34824 ;;  data            2    0[COMRAM] PTR unsigned char 
 34825 ;;		 -> Scroll_10(16), Scroll_9(16), Scroll_8(16), Scroll_7(16), 
 34826 ;;		 -> Scroll_6(16), Scroll_5(16), Scroll_4(16), Scroll_3(16), 
 34827 ;;		 -> Scroll_2(16), Scroll_1(16), StringAddEqual@temp(100), RemoveSpaces@That(100), 
 34828 ;;		 -> Rxdata(100), low_isr@TEMP_Rxdata(100), 
 34829 ;;  count           2    2[COMRAM] int 
 34830 ;; Auto vars:     Size  Location     Type
 34831 ;;  cleanBuffer     1    7[COMRAM] unsigned char 
 34832 ;; Return value:  Size  Location     Type
 34833 ;;		None               void
 34834 ;; Registers used:
 34835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34836 ;; Tracked objects:
 34837 ;;		On entry : 0/0
 34838 ;;		On exit  : 0/0
 34839 ;;		Unchanged: 0/0
 34840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34843 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34844 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34845 ;;Total ram usage:        8 bytes
 34846 ;; Hardware stack levels used:    1
 34847 ;; Hardware stack levels required when called:    1
 34848 ;; This function calls:
 34849 ;;		Nothing
 34850 ;; This function is called by:
 34851 ;;		_low_isr
 34852 ;;		i1_BufferCopy
 34853 ;; This function uses a non-reentrant model
 34854 ;;
 34855                           
 34856                           	psect	text102
 34857  00036A                     __ptext102:
 34858                           	opt stack 0
 34859  00036A                     i1_cleanBuffer:
 34860                           	opt stack 21
 34861                           
 34862                           ;MISC.c: 75: unsigned char i=0;
 34863                           
 34864                           ;incstack = 0
 34865  00036A  0E00               	movlw	0
 34866  00036C  6E08               	movwf	i1cleanBuffer@i,c
 34867                           
 34868                           ;MISC.c: 76: for(i=0; i<count;i++)
 34869  00036E  0E00               	movlw	0
 34870  000370  6E08               	movwf	i1cleanBuffer@i,c
 34871  000372  D00B               	goto	i1l12520
 34872  000374                     i1l12516:
 34873                           
 34874                           ;MISC.c: 77: {
 34875                           ;MISC.c: 78: data[i]= 0;
 34876  000374  5008               	movf	i1cleanBuffer@i,w,c
 34877  000376  0D01               	mullw	1
 34878  000378  50F3               	movf	prodl,w,c
 34879  00037A  2401               	addwf	i1cleanBuffer@data,w,c
 34880  00037C  6ED9               	movwf	fsr2l,c
 34881  00037E  50F4               	movf	prodh,w,c
 34882  000380  2002               	addwfc	i1cleanBuffer@data+1,w,c
 34883  000382  6EDA               	movwf	fsr2h,c
 34884  000384  0E00               	movlw	0
 34885  000386  6EDF               	movwf	indf2,c
 34886  000388  2A08               	incf	i1cleanBuffer@i,f,c
 34887  00038A                     i1l12520:
 34888  00038A  5008               	movf	i1cleanBuffer@i,w,c
 34889  00038C  6E05               	movwf	??i1_cleanBuffer& (0+255),c
 34890  00038E  6A06               	clrf	(??i1_cleanBuffer+1)& (0+255),c
 34891  000390  5006               	movf	??i1_cleanBuffer+1,w,c
 34892  000392  0A80               	xorlw	128
 34893  000394  6E07               	movwf	(??i1_cleanBuffer+2)& (0+255),c
 34894  000396  5003               	movf	i1cleanBuffer@count,w,c
 34895  000398  5C05               	subwf	??i1_cleanBuffer,w,c
 34896  00039A  5004               	movf	i1cleanBuffer@count+1,w,c
 34897  00039C  0A80               	xorlw	128
 34898  00039E  5807               	subwfb	(??i1_cleanBuffer+2)& (0+255),w,c
 34899  0003A0  B0D8               	btfsc	status,0,c
 34900  0003A2  0012               	return	
 34901  0003A4  D7E7               	goto	i1l12516
 34902  0003A6                     __end_ofi1_cleanBuffer:
 34903                           	opt stack 0
 34904                           pclatu	equ	0xFFB
 34905                           pclath	equ	0xFFA
 34906                           tblptru	equ	0xFF8
 34907                           tblptrh	equ	0xFF7
 34908                           tblptrl	equ	0xFF6
 34909                           tablat	equ	0xFF5
 34910                           prodh	equ	0xFF4
 34911                           prodl	equ	0xFF3
 34912                           intcon	equ	0xFF2
 34913                           postinc0	equ	0xFEE
 34914                           fsr0h	equ	0xFEA
 34915                           fsr0l	equ	0xFE9
 34916                           wreg	equ	0xFE8
 34917                           indf1	equ	0xFE7
 34918                           postinc1	equ	0xFE6
 34919                           postdec1	equ	0xFE5
 34920                           fsr1h	equ	0xFE2
 34921                           fsr1l	equ	0xFE1
 34922                           bsr	equ	0xFE0
 34923                           indf2	equ	0xFDF
 34924                           postinc2	equ	0xFDE
 34925                           postdec2	equ	0xFDD
 34926                           fsr2h	equ	0xFDA
 34927                           fsr2l	equ	0xFD9
 34928                           status	equ	0xFD8
 34929                           
 34930 ;; *************** function _IsPrintableASCII *****************
 34931 ;; Defined at:
 34932 ;;		line 397 in file "MISC.c"
 34933 ;; Parameters:    Size  Location     Type
 34934 ;;  data            1    wreg     unsigned char 
 34935 ;; Auto vars:     Size  Location     Type
 34936 ;;  data            1    0[COMRAM] unsigned char 
 34937 ;; Return value:  Size  Location     Type
 34938 ;;                  1    wreg      unsigned char 
 34939 ;; Registers used:
 34940 ;;		wreg, status,2, status,0
 34941 ;; Tracked objects:
 34942 ;;		On entry : 0/0
 34943 ;;		On exit  : 0/0
 34944 ;;		Unchanged: 0/0
 34945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 34946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 34950 ;;Total ram usage:        1 bytes
 34951 ;; Hardware stack levels used:    1
 34952 ;; Hardware stack levels required when called:    1
 34953 ;; This function calls:
 34954 ;;		Nothing
 34955 ;; This function is called by:
 34956 ;;		_low_isr
 34957 ;; This function uses a non-reentrant model
 34958 ;;
 34959                           
 34960                           	psect	text103
 34961  00067C                     __ptext103:
 34962                           	opt stack 0
 34963  00067C                     _IsPrintableASCII:
 34964                           	opt stack 21
 34965                           
 34966                           ;incstack = 0
 34967                           ;IsPrintableASCII@data stored from wreg
 34968  00067C  6E01               	movwf	IsPrintableASCII@data,c
 34969                           
 34970                           ;MISC.c: 399: if(data >= 0x20 && data < 0x7F)
 34971  00067E  0E1F               	movlw	31
 34972  000680  6401               	cpfsgt	IsPrintableASCII@data,c
 34973  000682  D006               	goto	i1l8750
 34974  000684  0E7F               	movlw	127
 34975  000686  5C01               	subwf	IsPrintableASCII@data,w,c
 34976  000688  B0D8               	btfsc	status,0,c
 34977  00068A  D002               	goto	i1l8750
 34978                           
 34979                           ;MISC.c: 400: {
 34980                           ;MISC.c: 401: return 1;
 34981  00068C  0E01               	movlw	1
 34982  00068E  0012               	return	
 34983  000690                     i1l8750:
 34984                           
 34985                           ;MISC.c: 402: }
 34986                           ;MISC.c: 403: return 0;
 34987  000690  0E00               	movlw	0
 34988  000692  0012               	return	
 34989  000694                     __end_of_IsPrintableASCII:
 34990                           	opt stack 0
 34991                           pclatu	equ	0xFFB
 34992                           pclath	equ	0xFFA
 34993                           tblptru	equ	0xFF8
 34994                           tblptrh	equ	0xFF7
 34995                           tblptrl	equ	0xFF6
 34996                           tablat	equ	0xFF5
 34997                           prodh	equ	0xFF4
 34998                           prodl	equ	0xFF3
 34999                           intcon	equ	0xFF2
 35000                           postinc0	equ	0xFEE
 35001                           fsr0h	equ	0xFEA
 35002                           fsr0l	equ	0xFE9
 35003                           wreg	equ	0xFE8
 35004                           indf1	equ	0xFE7
 35005                           postinc1	equ	0xFE6
 35006                           postdec1	equ	0xFE5
 35007                           fsr1h	equ	0xFE2
 35008                           fsr1l	equ	0xFE1
 35009                           bsr	equ	0xFE0
 35010                           indf2	equ	0xFDF
 35011                           postinc2	equ	0xFDE
 35012                           postdec2	equ	0xFDD
 35013                           fsr2h	equ	0xFDA
 35014                           fsr2l	equ	0xFD9
 35015                           status	equ	0xFD8
 35016                           
 35017 ;; *************** function _high_isr *****************
 35018 ;; Defined at:
 35019 ;;		line 59 in file "interrupts.c"
 35020 ;; Parameters:    Size  Location     Type
 35021 ;;		None
 35022 ;; Auto vars:     Size  Location     Type
 35023 ;;		None
 35024 ;; Return value:  Size  Location     Type
 35025 ;;		None               void
 35026 ;; Registers used:
 35027 ;;		None
 35028 ;; Tracked objects:
 35029 ;;		On entry : 0/0
 35030 ;;		On exit  : 0/0
 35031 ;;		Unchanged: 0/0
 35032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 35033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 35035 ;;      Temps:          0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 35036 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
 35037 ;;Total ram usage:       14 bytes
 35038 ;; Hardware stack levels used:    1
 35039 ;; This function calls:
 35040 ;;		Nothing
 35041 ;; This function is called by:
 35042 ;;		Interrupt level 2
 35043 ;; This function uses a non-reentrant model
 35044 ;;
 35045                           
 35046                           	psect	intcode
 35047  000008                     __pintcode:
 35048                           	opt stack 0
 35049  000008                     _high_isr:
 35050                           	opt stack 18
 35051                           
 35052                           ;incstack = 0
 35053  000008  CFFA F16E          	movff	pclath,??_high_isr
 35054  00000C  CFFB F16F          	movff	pclatu,??_high_isr+1
 35055  000010  CFE9 F170          	movff	fsr0l,??_high_isr+2
 35056  000014  EF22  F0BC         	goto	int_func
 35057                           pclatu	equ	0xFFB
 35058                           pclath	equ	0xFFA
 35059                           tblptru	equ	0xFF8
 35060                           tblptrh	equ	0xFF7
 35061                           tblptrl	equ	0xFF6
 35062                           tablat	equ	0xFF5
 35063                           prodh	equ	0xFF4
 35064                           prodl	equ	0xFF3
 35065                           intcon	equ	0xFF2
 35066                           postinc0	equ	0xFEE
 35067                           fsr0h	equ	0xFEA
 35068                           fsr0l	equ	0xFE9
 35069                           wreg	equ	0xFE8
 35070                           indf1	equ	0xFE7
 35071                           postinc1	equ	0xFE6
 35072                           postdec1	equ	0xFE5
 35073                           fsr1h	equ	0xFE2
 35074                           fsr1l	equ	0xFE1
 35075                           bsr	equ	0xFE0
 35076                           indf2	equ	0xFDF
 35077                           postinc2	equ	0xFDE
 35078                           postdec2	equ	0xFDD
 35079                           fsr2h	equ	0xFDA
 35080                           fsr2l	equ	0xFD9
 35081                           status	equ	0xFD8
 35082                           
 35083                           	psect	intcode_body
 35084  017844                     __pintcode_body:
 35085                           	opt stack 18
 35086  017844                     int_func:
 35087                           	opt stack 18
 35088  017844  CFEA F171          	movff	fsr0h,??_high_isr+3
 35089  017848  CFE1 F172          	movff	fsr1l,??_high_isr+4
 35090  01784C  CFE2 F173          	movff	fsr1h,??_high_isr+5
 35091  017850  CFD9 F174          	movff	fsr2l,??_high_isr+6
 35092  017854  CFDA F175          	movff	fsr2h,??_high_isr+7
 35093  017858  CFF3 F176          	movff	prodl,??_high_isr+8
 35094  01785C  CFF4 F177          	movff	prodh,??_high_isr+9
 35095  017860  CFF6 F178          	movff	tblptrl,??_high_isr+10
 35096  017864  CFF7 F179          	movff	tblptrh,??_high_isr+11
 35097  017868  CFF8 F17A          	movff	tblptru,??_high_isr+12
 35098  01786C  CFF5 F17B          	movff	tablat,??_high_isr+13
 35099  017870  C17B  FFF5         	movff	??_high_isr+13,tablat
 35100  017874  C17A  FFF8         	movff	??_high_isr+12,tblptru
 35101  017878  C179  FFF7         	movff	??_high_isr+11,tblptrh
 35102  01787C  C178  FFF6         	movff	??_high_isr+10,tblptrl
 35103  017880  C177  FFF4         	movff	??_high_isr+9,prodh
 35104  017884  C176  FFF3         	movff	??_high_isr+8,prodl
 35105  017888  C175  FFDA         	movff	??_high_isr+7,fsr2h
 35106  01788C  C174  FFD9         	movff	??_high_isr+6,fsr2l
 35107  017890  C173  FFE2         	movff	??_high_isr+5,fsr1h
 35108  017894  C172  FFE1         	movff	??_high_isr+4,fsr1l
 35109  017898  C171  FFEA         	movff	??_high_isr+3,fsr0h
 35110  01789C  C170  FFE9         	movff	??_high_isr+2,fsr0l
 35111  0178A0  C16F  FFFB         	movff	??_high_isr+1,pclatu
 35112  0178A4  C16E  FFFA         	movff	??_high_isr,pclath
 35113  0178A8  0011               	retfie		f
 35114  0178AA                     __end_of_high_isr:
 35115                           	opt stack 0
 35116                           pclatu	equ	0xFFB
 35117                           pclath	equ	0xFFA
 35118                           tblptru	equ	0xFF8
 35119                           tblptrh	equ	0xFF7
 35120                           tblptrl	equ	0xFF6
 35121                           tablat	equ	0xFF5
 35122                           prodh	equ	0xFF4
 35123                           prodl	equ	0xFF3
 35124                           intcon	equ	0xFF2
 35125                           postinc0	equ	0xFEE
 35126                           fsr0h	equ	0xFEA
 35127                           fsr0l	equ	0xFE9
 35128                           wreg	equ	0xFE8
 35129                           indf1	equ	0xFE7
 35130                           postinc1	equ	0xFE6
 35131                           postdec1	equ	0xFE5
 35132                           fsr1h	equ	0xFE2
 35133                           fsr1l	equ	0xFE1
 35134                           bsr	equ	0xFE0
 35135                           indf2	equ	0xFDF
 35136                           postinc2	equ	0xFDE
 35137                           postdec2	equ	0xFDD
 35138                           fsr2h	equ	0xFDA
 35139                           fsr2l	equ	0xFD9
 35140                           status	equ	0xFD8
 35141                           pclatu	equ	0xFFB
 35142                           pclath	equ	0xFFA
 35143                           tblptru	equ	0xFF8
 35144                           tblptrh	equ	0xFF7
 35145                           tblptrl	equ	0xFF6
 35146                           tablat	equ	0xFF5
 35147                           prodh	equ	0xFF4
 35148                           prodl	equ	0xFF3
 35149                           intcon	equ	0xFF2
 35150                           postinc0	equ	0xFEE
 35151                           fsr0h	equ	0xFEA
 35152                           fsr0l	equ	0xFE9
 35153                           wreg	equ	0xFE8
 35154                           indf1	equ	0xFE7
 35155                           postinc1	equ	0xFE6
 35156                           postdec1	equ	0xFE5
 35157                           fsr1h	equ	0xFE2
 35158                           fsr1l	equ	0xFE1
 35159                           bsr	equ	0xFE0
 35160                           indf2	equ	0xFDF
 35161                           postinc2	equ	0xFDE
 35162                           postdec2	equ	0xFDD
 35163                           fsr2h	equ	0xFDA
 35164                           fsr2l	equ	0xFD9
 35165                           status	equ	0xFD8
 35166                           
 35167                           	psect	param1
 35168  0000                     pclatu	equ	0xFFB
 35169                           pclath	equ	0xFFA
 35170                           tblptru	equ	0xFF8
 35171                           tblptrh	equ	0xFF7
 35172                           tblptrl	equ	0xFF6
 35173                           tablat	equ	0xFF5
 35174                           prodh	equ	0xFF4
 35175                           prodl	equ	0xFF3
 35176                           intcon	equ	0xFF2
 35177                           postinc0	equ	0xFEE
 35178                           fsr0h	equ	0xFEA
 35179                           fsr0l	equ	0xFE9
 35180                           wreg	equ	0xFE8
 35181                           indf1	equ	0xFE7
 35182                           postinc1	equ	0xFE6
 35183                           postdec1	equ	0xFE5
 35184                           fsr1h	equ	0xFE2
 35185                           fsr1l	equ	0xFE1
 35186                           bsr	equ	0xFE0
 35187                           indf2	equ	0xFDF
 35188                           postinc2	equ	0xFDE
 35189                           postdec2	equ	0xFDD
 35190                           fsr2h	equ	0xFDA
 35191                           fsr2l	equ	0xFD9
 35192                           status	equ	0xFD8


Data Sizes:
    Strings     4469
    Constant    412
    Data        28
    BSS         476
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      70
    BANK0           160    120     154
    BANK1           256    103     221
    BANK2           256    103     123
    BANK3           256      0     200
    BANK4           256      0     100
    BANK5           256    226     226
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          239      0       0

Pointer List with Targets:

    sprintf$2451	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_325(CODE[17]), STR_324(CODE[17]), 

    sprintf@_val._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_323(CODE[32]), STR_322(CODE[35]), STR_321(CODE[35]), STR_300(CODE[10]), 
		 -> STR_287(CODE[23]), STR_286(CODE[23]), STR_227(CODE[23]), STR_226(CODE[23]), 
		 -> STR_222(CODE[16]), STR_221(CODE[36]), STR_209(CODE[13]), STR_208(CODE[20]), 
		 -> STR_207(CODE[17]), STR_206(CODE[29]), STR_190(CODE[15]), STR_189(CODE[32]), 
		 -> STR_171(CODE[15]), STR_170(CODE[22]), STR_30(CODE[19]), STR_27(CODE[52]), 
		 -> STR_26(CODE[48]), STR_25(CODE[47]), STR_24(CODE[54]), STR_23(CODE[53]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK5[200]), SetBaud@buf(BANK2[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2431$_cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK1[1]), 

    Multiple_I2C_Read@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    I2C_Read_Sequential@rdptr	PTR unsigned char  size(2) Largest target is 7
		 -> READ_RTC_TIME@temp(BANK1[7]), 

    Parse_Time@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    SprintDate@ReturnBuf	PTR unsigned char  size(2) Largest target is 200
		 -> Command@buf(BANK5[200]), 

    LCD_Scroll@This	PTR unsigned char  size(2) Largest target is 17
		 -> STR_298(CODE[6]), STR_297(CODE[5]), STR_296(CODE[5]), STR_295(CODE[10]), 
		 -> STR_294(CODE[16]), STR_293(CODE[11]), STR_292(CODE[12]), STR_291(CODE[9]), 
		 -> STR_290(CODE[14]), STR_270(CODE[6]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_252(CODE[4]), STR_251(CODE[5]), STR_250(CODE[8]), STR_249(CODE[10]), 
		 -> STR_248(CODE[9]), STR_217(CODE[2]), STR_216(CODE[10]), STR_215(CODE[9]), 
		 -> STR_196(CODE[10]), STR_195(CODE[10]), STR_194(CODE[13]), STR_179(CODE[10]), 
		 -> STR_178(CODE[10]), STR_177(CODE[17]), STR_157(CODE[6]), STR_156(CODE[6]), 
		 -> STR_155(CODE[9]), STR_154(CODE[10]), STR_129(CODE[7]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[9]), STR_125(CODE[13]), STR_94(CODE[4]), 
		 -> STR_93(CODE[6]), STR_92(CODE[9]), STR_91(CODE[14]), STR_69(CODE[5]), 
		 -> STR_68(CODE[5]), STR_67(CODE[9]), STR_66(CODE[9]), 

    LCDdisplayFeedback@Text	PTR unsigned char  size(2) Largest target is 200
		 -> STR_318(CODE[16]), STR_316(CODE[16]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_205(CODE[16]), STR_203(CODE[16]), STR_201(CODE[13]), 
		 -> STR_188(CODE[14]), STR_186(CODE[16]), STR_184(CODE[15]), STR_173(CODE[16]), 
		 -> Command@buf(BANK5[200]), STR_169(CODE[14]), STR_167(CODE[16]), STR_165(CODE[15]), 
		 -> STR_147(CODE[13]), STR_145(CODE[15]), STR_141(CODE[14]), STR_137(CODE[16]), 
		 -> STR_124(CODE[16]), STR_116(CODE[16]), STR_114(CODE[16]), STR_111(CODE[15]), 
		 -> STR_108(CODE[15]), STR_105(CODE[14]), STR_102(CODE[16]), STR_90(CODE[16]), 
		 -> STR_83(CODE[16]), STR_81(CODE[15]), STR_78(CODE[14]), STR_75(CODE[16]), 
		 -> STR_59(CODE[12]), STR_57(CODE[9]), STR_54(CODE[8]), STR_51(CODE[13]), 
		 -> STR_48(CODE[9]), STR_45(CODE[8]), STR_42(CODE[13]), 

    LCDPrintString@Text	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_318(CODE[16]), STR_316(CODE[16]), 
		 -> STR_289(CODE[17]), STR_284(CODE[10]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_229(CODE[17]), STR_225(CODE[17]), STR_205(CODE[16]), 
		 -> STR_203(CODE[16]), STR_201(CODE[13]), STR_188(CODE[14]), STR_186(CODE[16]), 
		 -> STR_184(CODE[15]), STR_173(CODE[16]), Command@buf(BANK5[200]), STR_169(CODE[14]), 
		 -> STR_167(CODE[16]), STR_165(CODE[15]), STR_147(CODE[13]), STR_145(CODE[15]), 
		 -> STR_141(CODE[14]), STR_137(CODE[16]), STR_124(CODE[16]), STR_116(CODE[16]), 
		 -> STR_114(CODE[16]), STR_111(CODE[15]), STR_108(CODE[15]), STR_105(CODE[14]), 
		 -> STR_102(CODE[16]), STR_90(CODE[16]), STR_83(CODE[16]), STR_81(CODE[15]), 
		 -> STR_78(CODE[14]), STR_75(CODE[16]), STR_59(CODE[12]), STR_57(CODE[9]), 
		 -> STR_54(CODE[8]), STR_51(CODE[13]), STR_48(CODE[9]), STR_45(CODE[8]), 
		 -> STR_42(CODE[13]), STR_20(CODE[10]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[12]), 
		 -> STR_13(CODE[11]), STR_12(CODE[10]), STR_10(CODE[9]), STR_9(CODE[14]), 
		 -> low_isr@LCD_TEMP(BANK0[16]), 

    LCDPrintString@c	PTR unsigned char  size(2) Largest target is 200
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), STR_318(CODE[16]), STR_316(CODE[16]), 
		 -> STR_289(CODE[17]), STR_284(CODE[10]), STR_262(CODE[16]), STR_260(CODE[16]), 
		 -> STR_257(CODE[15]), STR_229(CODE[17]), STR_225(CODE[17]), STR_205(CODE[16]), 
		 -> STR_203(CODE[16]), STR_201(CODE[13]), STR_188(CODE[14]), STR_186(CODE[16]), 
		 -> STR_184(CODE[15]), STR_173(CODE[16]), Command@buf(BANK5[200]), STR_169(CODE[14]), 
		 -> STR_167(CODE[16]), STR_165(CODE[15]), STR_147(CODE[13]), STR_145(CODE[15]), 
		 -> STR_141(CODE[14]), STR_137(CODE[16]), STR_124(CODE[16]), STR_116(CODE[16]), 
		 -> STR_114(CODE[16]), STR_111(CODE[15]), STR_108(CODE[15]), STR_105(CODE[14]), 
		 -> STR_102(CODE[16]), STR_90(CODE[16]), STR_83(CODE[16]), STR_81(CODE[15]), 
		 -> STR_78(CODE[14]), STR_75(CODE[16]), STR_59(CODE[12]), STR_57(CODE[9]), 
		 -> STR_54(CODE[8]), STR_51(CODE[13]), STR_48(CODE[9]), STR_45(CODE[8]), 
		 -> STR_42(CODE[13]), STR_20(CODE[10]), STR_19(CODE[17]), STR_18(CODE[16]), 
		 -> STR_17(CODE[15]), STR_16(CODE[14]), STR_15(CODE[13]), STR_14(CODE[12]), 
		 -> STR_13(CODE[11]), STR_12(CODE[10]), STR_10(CODE[9]), STR_9(CODE[14]), 
		 -> low_isr@LCD_TEMP(BANK0[16]), 

    Send_Config2@data	PTR const unsigned char  size(2) Largest target is 16
		 -> SubLightOFF(CODE[16]), SubLightON(CODE[16]), Aux2OFF(CODE[16]), Aux2ON(CODE[16]), 
		 -> BedOFF(CODE[16]), BedON(CODE[16]), AuxOFF(CODE[16]), AuxON(CODE[16]), 
		 -> fanOFF(CODE[16]), fanON(CODE[16]), 

    Send_Config1@data	PTR const unsigned char  size(2) Largest target is 12
		 -> TXdataF(CODE[12]), TXdataE(CODE[12]), TXdataD(CODE[12]), 

    Command@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    UARTstringWAIT@data	PTR unsigned char  size(2) Largest target is 24
		 -> STR_34(CODE[18]), STR_33(CODE[17]), STR_32(CODE[24]), STR_31(CODE[23]), 

    UARTstring@data	PTR unsigned char  size(2) Largest target is 200
		 -> STR_320(CODE[26]), STR_319(CODE[3]), STR_317(CODE[18]), STR_315(CODE[18]), 
		 -> STR_311(CODE[20]), STR_288(CODE[24]), STR_285(CODE[3]), STR_283(CODE[15]), 
		 -> STR_282(CODE[22]), STR_281(CODE[50]), STR_280(CODE[8]), STR_279(CODE[6]), 
		 -> STR_278(CODE[6]), STR_277(CODE[11]), STR_276(CODE[17]), STR_275(CODE[12]), 
		 -> STR_274(CODE[13]), STR_273(CODE[10]), STR_272(CODE[12]), STR_267(CODE[28]), 
		 -> STR_266(CODE[68]), STR_265(CODE[9]), STR_264(CODE[11]), STR_263(CODE[23]), 
		 -> STR_261(CODE[19]), STR_259(CODE[20]), STR_256(CODE[20]), STR_247(CODE[21]), 
		 -> STR_246(CODE[61]), STR_245(CODE[69]), STR_244(CODE[7]), STR_243(CODE[7]), 
		 -> STR_242(CODE[10]), STR_241(CODE[11]), STR_240(CODE[29]), STR_239(CODE[13]), 
		 -> STR_238(CODE[33]), STR_237(CODE[25]), STR_236(CODE[28]), STR_235(CODE[3]), 
		 -> STR_234(CODE[26]), STR_233(CODE[2]), STR_232(CODE[34]), STR_231(CODE[37]), 
		 -> STR_228(CODE[24]), STR_224(CODE[3]), STR_214(CODE[13]), STR_213(CODE[73]), 
		 -> STR_212(CODE[5]), STR_211(CODE[12]), STR_210(CODE[17]), STR_204(CODE[28]), 
		 -> STR_202(CODE[30]), STR_200(CODE[33]), STR_193(CODE[42]), STR_192(CODE[62]), 
		 -> STR_191(CODE[26]), STR_187(CODE[43]), STR_185(CODE[48]), STR_183(CODE[27]), 
		 -> STR_176(CODE[42]), STR_175(CODE[66]), STR_174(CODE[25]), STR_172(CODE[49]), 
		 -> Command@buf(BANK5[200]), STR_168(CODE[33]), STR_166(CODE[38]), STR_164(CODE[27]), 
		 -> STR_163(CODE[28]), STR_153(CODE[37]), STR_152(CODE[68]), STR_151(CODE[18]), 
		 -> STR_150(CODE[15]), STR_149(CODE[11]), STR_148(CODE[28]), STR_146(CODE[18]), 
		 -> STR_144(CODE[32]), STR_140(CODE[31]), STR_136(CODE[38]), STR_123(CODE[24]), 
		 -> STR_122(CODE[68]), STR_121(CODE[10]), STR_120(CODE[6]), STR_119(CODE[8]), 
		 -> STR_118(CODE[11]), STR_117(CODE[21]), STR_115(CODE[16]), STR_113(CODE[19]), 
		 -> STR_110(CODE[18]), STR_107(CODE[16]), STR_104(CODE[15]), STR_101(CODE[22]), 
		 -> STR_89(CODE[27]), STR_88(CODE[68]), STR_87(CODE[7]), STR_86(CODE[8]), 
		 -> STR_85(CODE[11]), STR_84(CODE[24]), STR_82(CODE[19]), STR_80(CODE[19]), 
		 -> STR_77(CODE[18]), STR_74(CODE[25]), STR_65(CODE[17]), STR_64(CODE[68]), 
		 -> STR_63(CODE[8]), STR_62(CODE[7]), STR_61(CODE[11]), STR_60(CODE[17]), 
		 -> STR_58(CODE[12]), STR_56(CODE[9]), STR_53(CODE[8]), STR_50(CODE[13]), 
		 -> STR_47(CODE[9]), STR_44(CODE[8]), STR_41(CODE[13]), STR_36(CODE[4]), 
		 -> STR_35(CODE[22]), STR_29(CODE[22]), STR_28(CODE[3]), SetBaud@buf(BANK2[50]), 
		 -> STR_22(CODE[4]), STR_21(CODE[29]), STR_11(CODE[12]), STR_8(CODE[54]), 
		 -> STR_7(CODE[3]), Version(BANK2[20]), STR_6(CODE[19]), STR_5(CODE[38]), 
		 -> low_isr@TEMP_Rxdata(BANK0[100]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    StringAddEqual@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    lowercase@Input	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    RemoveSpaces@address	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    GetEnteredNumber@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StartsWith@That	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_253(CODE[4]), STR_218(CODE[4]), STR_197(CODE[4]), STR_180(CODE[9]), 
		 -> STR_161(CODE[17]), STR_160(CODE[7]), STR_158(CODE[4]), STR_95(CODE[8]), 
		 -> STR_70(CODE[11]), STR_38(CODE[4]), 

    StartsWith@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    StringContains@That	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_314(CODE[2]), STR_313(CODE[14]), STR_312(CODE[7]), STR_310(CODE[13]), 
		 -> STR_309(CODE[12]), STR_308(CODE[18]), STR_307(CODE[17]), STR_306(CODE[16]), 
		 -> STR_305(CODE[2]), STR_304(CODE[11]), STR_303(CODE[8]), STR_302(CODE[8]), 
		 -> STR_301(CODE[16]), STR_254(CODE[2]), STR_230(CODE[4]), STR_223(CODE[5]), 
		 -> STR_220(CODE[8]), STR_219(CODE[2]), STR_199(CODE[2]), STR_198(CODE[2]), 
		 -> STR_182(CODE[2]), STR_181(CODE[2]), STR_162(CODE[2]), STR_159(CODE[2]), 
		 -> STR_143(CODE[5]), STR_142(CODE[6]), STR_139(CODE[4]), STR_138(CODE[6]), 
		 -> STR_135(CODE[2]), STR_134(CODE[6]), STR_133(CODE[2]), STR_132(CODE[10]), 
		 -> STR_131(CODE[6]), STR_130(CODE[6]), STR_98(CODE[4]), STR_97(CODE[6]), 
		 -> STR_96(CODE[2]), STR_71(CODE[2]), STR_39(CODE[2]), 

    StringMatch@That	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_299(CODE[6]), STR_271(CODE[2]), STR_258(CODE[18]), STR_255(CODE[17]), 
		 -> STR_112(CODE[18]), STR_109(CODE[17]), STR_106(CODE[15]), STR_103(CODE[14]), 
		 -> STR_100(CODE[17]), STR_99(CODE[16]), STR_79(CODE[18]), STR_76(CODE[17]), 
		 -> STR_73(CODE[20]), STR_72(CODE[19]), STR_55(CODE[9]), STR_52(CODE[8]), 
		 -> STR_49(CODE[5]), STR_46(CODE[9]), STR_43(CODE[8]), STR_40(CODE[5]), 
		 -> STR_37(CODE[2]), 

    StringMatch@This	PTR unsigned char  size(2) Largest target is 100
		 -> Rxdata(BANK3[100]), 

    BufferCopy@from	PTR unsigned char  size(2) Largest target is 100
		 -> STR_298(CODE[6]), STR_297(CODE[5]), STR_296(CODE[5]), STR_295(CODE[10]), 
		 -> STR_294(CODE[16]), STR_293(CODE[11]), STR_292(CODE[12]), STR_291(CODE[9]), 
		 -> STR_290(CODE[14]), STR_270(CODE[6]), STR_269(CODE[9]), STR_268(CODE[14]), 
		 -> STR_252(CODE[4]), STR_251(CODE[5]), STR_250(CODE[8]), STR_249(CODE[10]), 
		 -> STR_248(CODE[9]), STR_217(CODE[2]), STR_216(CODE[10]), STR_215(CODE[9]), 
		 -> STR_196(CODE[10]), STR_195(CODE[10]), STR_194(CODE[13]), STR_179(CODE[10]), 
		 -> STR_178(CODE[10]), STR_177(CODE[17]), STR_157(CODE[6]), STR_156(CODE[6]), 
		 -> STR_155(CODE[9]), STR_154(CODE[10]), STR_129(CODE[7]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[9]), STR_125(CODE[13]), STR_94(CODE[4]), 
		 -> STR_93(CODE[6]), STR_92(CODE[9]), STR_91(CODE[14]), STR_69(CODE[5]), 
		 -> STR_68(CODE[5]), STR_67(CODE[9]), STR_66(CODE[9]), StringAddEqual@temp(BANK2[100]), 
		 -> RemoveSpaces@That(BANK2[100]), low_isr@TEMP_Rxdata(BANK0[100]), 

    BufferCopy@to	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), Rxdata(BANK3[100]), 

    cleanBuffer@data	PTR unsigned char  size(2) Largest target is 100
		 -> Scroll_10(BANK0[16]), Scroll_9(BANK0[16]), Scroll_8(COMRAM[16]), Scroll_7(COMRAM[16]), 
		 -> Scroll_6(BANK1[16]), Scroll_5(BANK1[16]), Scroll_4(BANK1[16]), Scroll_3(BANK1[16]), 
		 -> Scroll_2(BANK1[16]), Scroll_1(BANK1[16]), StringAddEqual@temp(BANK2[100]), RemoveSpaces@That(BANK2[100]), 
		 -> Rxdata(BANK3[100]), low_isr@TEMP_Rxdata(BANK0[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->i1_LCDPrintString
    i1_UARTstring->i1_UARTchar
    i1_UARTchar->i1_CheckSum_byte
    i1_SetLCDcursor->i1_SendLCDbyte
    i1_LCDPrintString->i1_SendLCDbyte
    i1_LCDPrintChar->i1_SendLCDbyte
    i1_ClearLCD->i1_SendLCDbyte
    i1_SendLCDbyte->i1_delayUS
    i1_PulseEnablePin->i1_delayUS
    i1_BufferCopy->i1_cleanBuffer

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Command
    _init_LCD->_SendLCDbyte
    _RTC_INIT->_InternalADC_Read
    _I2C_Read_At_Address->_WriteI2C
    _PWM_init->_SetDuty
    _SetFreq->___aldiv
    ___aldiv->___wmul
    _LCDScreenUpdate->_LCDPrintString
    _LCDPrintChar->_SendLCDbyte
    _InitApp->_delayUS
    _ContrastPWM_init->_SetDuty
    _Command->_SprintDate
    ___lwtoft->___ftpack
    _StringAddEqual->_BufferCopy
    _SprintDate->_sprintf
    _SetDuty->___fttol
    _SetContrast->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lbtoft
    _SetBaud->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _UARTstringWAIT->_UARTchar
    _SetMemoryParity->_GetMemoryParity
    _SetMemoryParity->_WriteEEPROM_1Byte
    _GetMemoryParity->_ReadEEPROM_1Byte
    _SetMemoryBaud->_GetMemoryBaud
    _GetMemoryBaud->_ReadEEPROM_1Byte
    _InitUART->___lldiv
    _Send_Config2->_One_Config2
    _Send_Config2->_Zero_Config2
    _Zero_Config2->_delayUS
    _One_Config2->_delayUS
    _Send_Config1->_One_Config1
    _Send_Config1->_Zero_Config1
    _Send_Config1->_f_Config1
    _f_Config1->_delayUS
    _Zero_Config1->_delayUS
    _One_Config1->_delayUS
    _SET_RTC_TIME->_I2C_Write_At_Address
    _SET_RTC_TIME->___awdiv
    _I2C_Write_At_Address->_WriteI2C
    _RemoveSpaces->_BufferCopy
    _READ_RTC_TIME->_I2C_Read_Sequential
    _ResetI2C->_delayUS
    _Init_I2C_Master->_OpenI2C
    _I2C_Read_Sequential->_Multiple_I2C_Read
    _WriteI2C->_IdleI2C
    _Multiple_I2C_Read->_readI2C
    _LCDdisplayFeedback->_LCDPrintString
    _SetLCDcursor->_SendLCDbyte
    _LCDPrintString->_SendLCDbyte
    _ClearLCD->_SendLCDbyte
    _SendLCDbyte->_delayUS
    _PulseEnablePin->_delayUS
    _LCD_Scroll->_BufferCopy
    _BufferCopy->_cleanBuffer
    _InternalADC_Read->_UARTstring
    _UARTstring->_UARTchar
    _UARTchar->_CheckSum_byte
    _GetEnteredNumber->___lmul

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _Command->_RemoveSpaces
    _Command->_StringAddEqual

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_Command

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  520565
                                             96 BANK1      7     7      0
                           _ClearLCD
                            _Command
                _ConfigureOscillator
                   _ContrastPWM_init
                  _EnableInternalADC
                      _GetMemoryBaud
                    _GetMemoryParity
                            _InitApp
                           _InitUART
                    _Init_I2C_Master
                       _LCDPrintChar
                     _LCDPrintString
                    _LCDScreenUpdate
                           _PWM_init
                           _RTC_INIT
                          _ReadUSART
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                      _SetMemoryBaud
                    _SetMemoryParity
                         _UARTstring
                        _cleanBuffer
                            _delayUS
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             0     0      0   28472
                           _ClearLCD
                     _PulseEnablePin
                        _SendLCDbyte
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _RTC_INIT                                             0     0      0   25558
                   _InternalADC_Read
                   _RTC_Clock_Enable
               _RTC_TIME_NONMilitary
 ---------------------------------------------------------------------------------
 (2) _RTC_TIME_NONMilitary                                 5     5      0    6850
                                             24 BANK1      5     5      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (2) _RTC_Clock_Enable                                     3     3      0    6782
                                             24 BANK1      3     3      0
                _I2C_Read_At_Address
               _I2C_Write_At_Address
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_At_Address                                  3     1      2     432
                                             17 BANK1      3     1      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0   11848
                            _SetDuty
                            _SetFreq
 ---------------------------------------------------------------------------------
 (2) _SetFreq                                              7     5      2    1267
                                             34 BANK1      7     5      2
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     428
                                             20 BANK1     14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCDScreenUpdate                                      4     4      0   53040
                                             32 BANK1      4     4      0
                           _ClearLCD
                       _LCDPrintChar
                     _LCDPrintString
                       _SetLCDcursor
                        _cleanBuffer
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _LCDPrintChar                                         1     1      0    9896
                                             28 BANK1      1     1      0
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0    4371
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _EnableInternalADC                                    2     2      0     254
                                             14 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ContrastPWM_init                                     0     0      0   10581
                            _SetDuty
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Command                                            232   230      2  293069
                                             90 BANK1      6     4      2
                                              0 BANK5    226   226      0
                            _GetBaud
                   _GetEnteredNumber
                           _ISNUMBER
                   _InternalADC_Read
                     _LCDPrintString
                         _LCD_Scroll
                 _LCDdisplayFeedback
                         _Parse_Time
                      _READ_RTC_TIME
                       _RemoveSpaces
                       _SET_RTC_TIME
                       _Send_Config1
                       _Send_Config2
                            _SetBaud
                        _SetContrast
                            _SetDuty
                       _SetLCDcursor
                         _SprintDate
                         _StartsWith
                     _StringAddEqual
                     _StringContains
                        _StringMatch
                         _UARTstring
                            ___ftdiv
                            ___ftmul
                            ___fttol
                            ___lwmod
                           ___lwtoft
                        _cleanBuffer
                            _delayUS
                          _lowercase
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lowercase                                            4     2      2     439
                                             14 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2618
                                             22 BANK1      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringMatch                                          4     0      4    3395
                                             14 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (2) _StringContains                                       5     1      4    6170
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _StringAddEqual                                     107   105      2   11060
                                             29 BANK1      4     2      2
                                              0 BANK2    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _StartsWith                                           5     1      4    1732
                                             14 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (2) _SprintDate                                          12     0     12   11469
                                             78 BANK1     12     0     12
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SetDuty                                             12    12      0   10581
                                             71 BANK1     12    12      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) _SetContrast                                         12    12      0   10649
                                             71 BANK1     12    12      0
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2464
                                             22 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     679
                                             56 BANK1     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3651
                                             41 BANK1     15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    3583
                                             26 BANK1     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2433
                                             14 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (2) _SetBaud                                             56    51      5   38630
                                             78 BANK1      5     0      5
                                              0 BANK2     51    51      0
                           _InitUART
                      _SetMemoryBaud
                    _SetMemoryParity
                         _UARTstring
                     _UARTstringWAIT
                            _delayUS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    26     16   10015
                                             36 BANK1     42    26     16
                            _GetBaud (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             14 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     694
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     386
                                             27 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _UARTstringWAIT                                       2     0      2    5896
                                             25 BANK1      2     0      2
                           _UARTchar
                            _delayUS
 ---------------------------------------------------------------------------------
 (1) _SetMemoryParity                                      2     2      0    1508
                                             21 BANK1      2     2      0
                    _GetMemoryParity
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (2) _GetMemoryParity                                      1     1      0     515
                                             20 BANK1      1     1      0
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (1) _SetMemoryBaud                                       16    12      4    2030
                                             52 BANK1     16    12      4
                      _GetMemoryBaud
                  _WriteEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (2) _WriteEEPROM_1Byte                                    7     4      3     897
                                             14 BANK1      7     4      3
                      _EEPROM_UNLOCK
 ---------------------------------------------------------------------------------
 (3) _EEPROM_UNLOCK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _GetMemoryBaud                                       32    28      4     654
                                             20 BANK1     32    28      4
                   _ReadEEPROM_1Byte
 ---------------------------------------------------------------------------------
 (3) _ReadEEPROM_1Byte                                     6     4      2     481
                                             14 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _InitUART                                            17    12      5    1944
                                             27 BANK1     17    12      5
                    _GetMemoryParity (ARG)
                          _OpenUSART
                          _ReadUSART
                            ___lldiv
                          _baudUSART
 ---------------------------------------------------------------------------------
 (2) _baudUSART                                            1     1      0      31
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     857
                                             14 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (1) _ReadUSART                                            1     1      0      34
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     387
                                             14 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Send_Config2                                         6     4      2   19777
                                             25 BANK1      6     4      2
                        _One_Config2
                       _Zero_Config2
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config2                                         1     1      0    4433
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config2                                          1     1      0    4433
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _Send_Config1                                         7     5      2   19823
                                             25 BANK1      7     5      2
                        _One_Config1
                       _Zero_Config1
                            _delayUS
                          _f_Config1
 ---------------------------------------------------------------------------------
 (3) _f_Config1                                            1     1      0    4495
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _Zero_Config1                                         1     1      0    4495
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _One_Config1                                          1     1      0    4495
                                             24 BANK1      1     1      0
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _SET_RTC_TIME                                        21    12      9    5638
                                             22 BANK1     21    12      9
               _I2C_Write_At_Address
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1357
                                             14 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1369
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_At_Address                                 5     3      2    1664
                                             17 BANK1      5     3      2
                            _IdleI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _RemoveSpaces                                       105   103      2   10151
                                             29 BANK1      2     0      2
                                              0 BANK2    103   103      0
                         _BufferCopy
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (2) _READ_RTC_TIME                                        8     8      0    5854
                                             24 BANK1      8     8      0
                _I2C_Read_Sequential
                           _ResetI2C
 ---------------------------------------------------------------------------------
 (3) _ResetI2C                                             0     0      0    4612
                    _Init_I2C_Master
                            _delayUS
 ---------------------------------------------------------------------------------
 (4) _Init_I2C_Master                                      2     2      0     241
                                             16 BANK1      2     2      0
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (5) _OpenI2C                                              2     1      1     139
                                             14 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_Sequential                                  5     1      4     667
                                             19 BANK1      5     1      4
                            _IdleI2C
                  _Multiple_I2C_Read
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             2     2      0      31
                                             15 BANK1      2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Multiple_I2C_Read                                    4     1      3     250
                                             15 BANK1      4     1      3
                            _readI2C
 ---------------------------------------------------------------------------------
 (5) _readI2C                                              1     1      0       0
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Parse_Time                                          13    11      2    2693
                                             14 BANK1     13    11      2
 ---------------------------------------------------------------------------------
 (2) _LCDdisplayFeedback                                   2     0      2   39497
                                             32 BANK1      2     0      2
                           _ClearLCD
                     _LCDPrintString
                       _SetLCDcursor
 ---------------------------------------------------------------------------------
 (1) _SetLCDcursor                                         3     2      1   13250
                                             28 BANK1      3     2      1
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _LCDPrintString                                       4     2      2   12963
                                             28 BANK1      4     2      2
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _ClearLCD                                             0     0      0    9865
                        _SendLCDbyte
 ---------------------------------------------------------------------------------
 (2) _SendLCDbyte                                          4     3      1    9865
                                             24 BANK1      4     3      1
                     _PulseEnablePin
                            _delayUS
 ---------------------------------------------------------------------------------
 (3) _PulseEnablePin                                       0     0      0    4371
                            _delayUS
 ---------------------------------------------------------------------------------
 (2) _delayUS                                             10     6      4    4371
                                             14 BANK1     10     6      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Scroll                                           2     0      2   10679
                                             29 BANK1      2     0      2
                         _BufferCopy
 ---------------------------------------------------------------------------------
 (3) _BufferCopy                                           7     1      6    7058
                                             22 BANK1      7     1      6
                        _cleanBuffer
 ---------------------------------------------------------------------------------
 (1) _cleanBuffer                                          8     4      4    2695
                                             14 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _InternalADC_Read                                     5     3      2   11926
                                             29 BANK1      5     3      2
                         _UARTstring
 ---------------------------------------------------------------------------------
 (1) _UARTstring                                           4     2      2   11864
                                             25 BANK1      4     2      2
                           _UARTchar
 ---------------------------------------------------------------------------------
 (2) _UARTchar                                             4     2      2    1124
                                             21 BANK1      4     2      2
                      _CheckSum_byte
 ---------------------------------------------------------------------------------
 (3) _CheckSum_byte                                        7     4      3     546
                                             14 BANK1      7     4      3
 ---------------------------------------------------------------------------------
 (2) _ISNUMBER                                             1     1      0      62
                                             14 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetEnteredNumber                                    15    11      4    1293
                                             26 BANK1     15    11      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     404
                                             14 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (2) _GetBaud                                              4     0      4       0
                                             14 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                            140   140      0    9216
                                             18 COMRAM    20    20      0
                                              0 BANK0    120   120      0
                   _IsPrintableASCII
                       i1_BufferCopy
                         i1_ClearLCD
                     i1_LCDPrintChar
                   i1_LCDPrintString
                        i1_ReadUSART
                     i1_SetLCDcursor
                         i1_UARTchar
                       i1_UARTstring
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_UARTstring                                         4     2      2    1007
                                             11 COMRAM     4     2      2
                         i1_UARTchar
 ---------------------------------------------------------------------------------
 (9) i1_UARTchar                                           4     2      2     704
                                              7 COMRAM     4     2      2
                    i1_CheckSum_byte
 ---------------------------------------------------------------------------------
 (10) i1_CheckSum_byte                                     7     4      3     378
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (8) i1_SetLCDcursor                                       3     2      1    1357
                                             14 COMRAM     3     2      1
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ReadUSART                                          1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintString                                     4     2      2    1315
                                             14 COMRAM     4     2      2
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_LCDPrintChar                                       1     1      0    1181
                                             14 COMRAM     1     1      0
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (8) i1_ClearLCD                                           0     0      0    1150
                      i1_SendLCDbyte
 ---------------------------------------------------------------------------------
 (9) i1_SendLCDbyte                                        4     3      1    1150
                                             10 COMRAM     4     3      1
                   i1_PulseEnablePin
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_PulseEnablePin                                    0     0      0     311
                          i1_delayUS
 ---------------------------------------------------------------------------------
 (10) i1_delayUS                                          10     6      4     311
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) i1_BufferCopy                                         7     1      6    1024
                                              8 COMRAM     7     1      6
                      i1_cleanBuffer
 ---------------------------------------------------------------------------------
 (8) i1_cleanBuffer                                        8     4      4     413
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (8) _IsPrintableASCII                                     1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _high_isr                                           14    14      0       0
                                              0 BANK1     14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLCD
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _Command
     _GetBaud
     _GetEnteredNumber
       ___lmul
     _ISNUMBER
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCD_Scroll
       _BufferCopy
         _cleanBuffer
     _LCDdisplayFeedback
       _ClearLCD
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _LCDPrintString
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
       _SetLCDcursor
         _SendLCDbyte
           _PulseEnablePin
             _delayUS
           _delayUS
     _Parse_Time
     _READ_RTC_TIME
       _I2C_Read_Sequential
         _IdleI2C
         _Multiple_I2C_Read
           _readI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RemoveSpaces
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _SET_RTC_TIME
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       ___awdiv
       ___awmod
     _Send_Config1
       _One_Config1
         _delayUS
       _Zero_Config1
         _delayUS
       _delayUS
       _f_Config1
         _delayUS
     _Send_Config2
       _One_Config2
         _delayUS
       _Zero_Config2
         _delayUS
       _delayUS
     _SetBaud
       _InitUART
         _GetMemoryParity (ARG)
           _ReadEEPROM_1Byte
         _OpenUSART (ARG)
         _ReadUSART (ARG)
         ___lldiv (ARG)
         _baudUSART (ARG)
       _SetMemoryBaud
         _GetMemoryBaud
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _SetMemoryParity
         _GetMemoryParity
           _ReadEEPROM_1Byte
         _WriteEEPROM_1Byte
           _EEPROM_UNLOCK
       _UARTstring
         _UARTchar
           _CheckSum_byte
       _UARTstringWAIT
         _UARTchar
           _CheckSum_byte
         _delayUS
       _delayUS
       _sprintf
         _GetBaud (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _SetContrast
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SprintDate
       _sprintf
         _GetBaud (ARG)
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _StartsWith
     _StringAddEqual
       _BufferCopy
         _cleanBuffer
       _cleanBuffer
     _StringContains
     _StringMatch
     _UARTstring
       _UARTchar
         _CheckSum_byte
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwmod
     ___lwtoft
       ___ftpack
     _cleanBuffer
     _delayUS
     _lowercase
     _sprintf
       _GetBaud (ARG)
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
   _ConfigureOscillator
   _ContrastPWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
   _EnableInternalADC
   _GetMemoryBaud
     _ReadEEPROM_1Byte
   _GetMemoryParity
     _ReadEEPROM_1Byte
   _InitApp
     _delayUS
   _InitUART
     _GetMemoryParity (ARG)
       _ReadEEPROM_1Byte
     _OpenUSART (ARG)
     _ReadUSART (ARG)
     ___lldiv (ARG)
     _baudUSART (ARG)
   _Init_I2C_Master
     _OpenI2C
   _LCDPrintChar
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDPrintString
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _LCDScreenUpdate
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintChar
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _LCDPrintString
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _SetLCDcursor
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _cleanBuffer
     _delayUS
   _PWM_init
     _SetDuty
       ___ftdiv
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _SetFreq
       ___aldiv
         ___wmul (ARG)
       ___wmul
   _RTC_INIT
     _InternalADC_Read
       _UARTstring
         _UARTchar
           _CheckSum_byte
     _RTC_Clock_Enable
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
     _RTC_TIME_NONMilitary
       _I2C_Read_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _I2C_Write_At_Address
         _IdleI2C
         _WriteI2C
           _IdleI2C
       _ResetI2C
         _Init_I2C_Master
           _OpenI2C
         _delayUS
   _ReadUSART
   _SetContrast
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetDuty
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _SetLCDcursor
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
   _SetMemoryBaud
     _GetMemoryBaud
       _ReadEEPROM_1Byte
     _WriteEEPROM_1Byte
       _EEPROM_UNLOCK
   _SetMemoryParity
     _GetMemoryParity
       _ReadEEPROM_1Byte
     _WriteEEPROM_1Byte
       _EEPROM_UNLOCK
   _UARTstring
     _UARTchar
       _CheckSum_byte
   _cleanBuffer
   _delayUS
   _init_LCD
     _ClearLCD
       _SendLCDbyte
         _PulseEnablePin
           _delayUS
         _delayUS
     _PulseEnablePin
       _delayUS
     _SendLCDbyte
       _PulseEnablePin
         _delayUS
       _delayUS
     _delayUS

 _low_isr (ROOT)
   _IsPrintableASCII
   i1_BufferCopy
     i1_cleanBuffer
   i1_ClearLCD
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintChar
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_LCDPrintString
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_ReadUSART
   i1_SetLCDcursor
     i1_SendLCDbyte
       i1_PulseEnablePin
         i1_delayUS
       i1_delayUS
   i1_UARTchar
     i1_CheckSum_byte
   i1_UARTstring
     i1_UARTchar
       i1_CheckSum_byte
   i1_cleanBuffer

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CEE      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100     E2      E2      16       88.3%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      64      14       39.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      C8      12       78.1%
BITBANK2           100      0       0       9        0.0%
BANK2              100     67      7B      10       48.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100     67      DD       8       86.3%
BITBANK12           EF      0       0      29        0.0%
BANK12              EF      0       0      30        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0     78      9A       6       96.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      46       1       73.7%
BITSFR_8             0      0       0      40        0.0%
SFR_8                0      0       0      40        0.0%
BITSFR_7             0      0       0      40        0.0%
SFR_7                0      0       0      40        0.0%
BITSFR_6             0      0       0      40        0.0%
SFR_6                0      0       0      40        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     446       3        0.0%
DATA                 0      0     446       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Feb 05 19:56:24 2015

                      BufferCopy@shift 0189               __size_of_GetMemoryParity 001E  
                    i1LCDPrintString@c 0011                           main@Baudtemp 01D0  
              __size_of_StringContains 007E                           _Zero_Config1 6DF0  
                         _Zero_Config2 7AC0                            _SSPSTATbits 000FC7  
                          ?_LCD_Scroll 018B                           ___awdiv@sign 0181  
                                   bsr 000FE0                    ___wmul@multiplicand 017E  
                          __CFG_BORV$3 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                           __CFG_CP4$OFF 000000  
                         __CFG_CP5$OFF 000000                                    l201 7CFA  
                                  l234 758C                                    l236 756A  
                                  l350 7930                                    l422 51B0  
                                  l334 5034                                    l351 795C  
                                  l432 75EA                                    l184 41B8  
                                  l450 7396                                    l187 42F8  
                                  l348 7926                                    l436 7604  
                                  l437 7606                                    l438 7612  
                                  l455 69A0                                    l439 7614  
                                  l464 048A                                    l640 0422  
                                  l449 7392                                    l457 6A02  
                                  l466 0492                                    l474 72D2  
                                  l467 049A                                    l491 4A16  
                                  l619 2974                                    l476 732C  
                                  l655 0832                                    l914 7822  
                                  l755 24C8                           __CFG_CPB$OFF 000000  
                                  _PR2 000FCB                           __CFG_CPD$OFF 000000  
                   _TXToiletMyBathroom ED71                   i1LCDPrintString@Text 000F  
                                  _buf 0300                           ___awmod@sign 0181  
                                  prod 000FF3                                    wreg 000FE8  
                      _LCDScreenUpdate 3684                       ??i1_SetLCDcursor 0010  
                       SetContrast@LSB 01BD                         SetContrast@MSB 01BC  
                        Send_Config1@i 018C                          Send_Config2@i 018C  
                         __CFG_LVP$OFF 000000                           ___ftdiv@cntr 0191  
                      ??i1_SendLCDbyte 000C                           ___ftdiv@sign 0196  
                         __CFG_WDT$OFF 000000                                   l1302 698A  
                                 l1207 4026                                   l1303 693E  
                                 l1127 72AE                                   l1312 6976  
                                 l1304 6936                                   l1217 40D8  
                                 l1170 3C96                                   l1410 63AE  
                                 l1322 6982                                   l1314 696E  
                                 l1146 4764                                   l1307 6980  
                                 l1075 3BB4                                   l1420 63DE  
                                 l1404 639A                                   l1308 695A  
                                 l1500 06DC                                   l1421 63D6  
                                 l1413 6428                                   l1405 6392  
                                 l1325 698C                                   l1309 6952  
                                 l1414 63BC                                   l1318 6978  
                                 l2134 65DC                                   l1342 5CAE  
                                 l1334 5BA0                                   l1191 3EBA  
                                 l2207 7900                                   l1343 5BDE  
                                 l1440 6420                                   l1432 640E  
                                 l1424 641E                                   l1408 6432  
                                 l1328 6990                                   l2144 6B7C  
                                 l1360 5C44                                   l1352 5C86  
                                 l1344 5BCC                                   l1425 6400  
                                 l1417 63C0                                   l1409 63B6  
                                 l1361 5C32                                   l1353 5C0A  
                                 l1337 5BA4                  RTC_Clock_Enable@Error 0188  
                                 l1186 3E02                                   l1178 3D54  
                                 l1426 6404                                   l1506 7BDA  
                                 l2058 5A24                                   l1435 6412  
                                 l1371 5C56                                   l1347 5C9A  
                                 l1444 642A                                   l1364 5C72  
                                 l1356 5C0E                                   l1348 5C04  
                                 l1277 706C                                   l1429 6408  
                                 l1365 5C4A                                   l1349 5BF2  
                                 l1286 70A6                                   l1294 68FA  
                                 l1390 5C9C                                   l1382 5C74  
                                 l1374 5C5C                                   l1199 3F78  
                                 l1455 76B4                                   l1472 04CA  
                                 l1464 76F4                                   l1448 6434  
                                 l1632 31F6                                   l1368 5C52  
                                 l1473 04CC                                   l1297 68FE  
                                 l1377 5C60                                   l1386 5C88  
                                 l1395 636C                                   l1493 7C18  
                                 l1398 6370                                   l1574 2C1E  
                                 l1648 3308                                   l1593 2E76  
                                 l7442 536A                                   l7454 53E0  
                                 l7470 5474                                   l7456 53F8  
                                 l7448 53B2                                   l7474 549A  
                                 l7466 545A                                   l7458 53FE  
                                 _BAUD 01D5                                   l8820 6A94  
                                 l8812 6A78                                   l8804 6A5C  
                                 l8840 6AE0                                   l8832 6AC0  
                                 l8824 6AA2                                   l8816 6A86  
                                 l8808 6A6A                                   l8842 6AE4  
                                 l8836 6ACE                                   l8828 6AB2  
                                 STR_1 FFFC                                   STR_2 F94E  
                                 STR_3 FFFC                                   STR_4 F4D1  
                                 STR_5 F280                                   STR_6 F813  
                                 STR_7 F6CE                                   STR_8 F04E  
                                 STR_9 FCC5                EnableInternalADC@config 017C  
                ??_I2C_Read_At_Address 0181                                   _LATA 000F89  
                                 _LATC 000F8B                                   _LATD 000F8C  
                                 _LATE 000F8D                                   _PIE1 000F9D  
                                 i1l66 0290                                   i1l68 0270  
                                 u8445 5342                                   u8455 538A  
                         __CFG_PWRT$ON 000000                             i1delayUS@i 0006  
                           i1delayUS@j 000A                          ?_LCDPrintChar 0001  
           WriteEEPROM_1Byte@GIEstatus 0182                                   _main 40F8  
                   UARTstringWAIT@data 0187                           ___ftpack@arg 017C  
                         ___ftpack@exp 017F                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr0l 000FE9  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                       ??_PulseEnablePin 0186  
                  baudUSART@baudconfig 017C                                   pclat 000FFA  
              __end_of_Init_I2C_Master 7AC0                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0366  
                      __end_of_Aux2OFF EDD5                          __CFG_IESO$OFF 000000  
                      Command@BAUDtemp 05CE                        __end_of_IdleI2C 06F8  
                      __end_of_GetBaud 070A                      ?_GetEnteredNumber 0188  
                         _sprintf$2451 01AD                           _sprintf$2444 01A9  
                         _sprintf$2445 01AB             __size_of_Multiple_I2C_Read 006A  
                        __CFG_MCLRE$ON 000000                           ___ftmul@cntr 01A4  
                      __end_of_Command 2988                         UARTstring@data 0187  
                          ?i1_UARTchar 0008                           ___ftmul@sign 01A5  
                      __end_of_TXdataD EE71                        __end_of_TXdataE EE7D  
                      __end_of_TXdataF EE89                        __end_of_InitApp 79C8  
                   ??_GetEnteredNumber 018C                        SetContrast@Duty 01C0  
                      __end_of_OpenI2C 0626               I2C_Write_At_Address@data 0180  
                      __end_of_SetBaud 4B68                           ___fttol@exp1 01B4  
               __size_of_READ_RTC_TIME 00E6                           ___fttol@lval 01B0  
                      __end_of_SetFreq 769E                        __end_of_SetDuty 66C0  
                      SetContrast@temp 01BE                           f_Config1@pin 0186  
    i1UARTchar@NinethBit_override_data 0009        UARTchar@NinethBit_override_data 0184  
                       _LCDPrintString 74CC                                  l10104 7562  
                                l11100 362C                                  l10302 75EC  
                                l10136 7958                                  l10232 739A  
                                l11008 320A                                  l11024 3282  
                                l11032 32AA                                  l10146 7966  
                                l10226 7362                                  l10234 73B2  
                                l10242 79D6                                  l12010 4D78  
                                l12002 4D0C                                  l10170 06E6  
                                l11042 32DE                                  l11018 3262  
                                l11106 3650                                  l10228 7378  
                                l10236 73C8                                  l10404 7042  
                                l12100 6276                                  l12020 5EF0  
                                l10500 0580                                  l11052 3320  
                                l11036 32BA                                  l11108 3676  
                                l10246 79F4                                  l12006 4D40  
                                l10350 64A0                                  l10422 707E  
                                l10254 7AA2                                  l12102 627A  
                                l11222 690A                                  l12030 5F78  
                                l10600 6A06                                  l12200 3D72  
                                l10440 70BA                                  l10256 7AAE  
                                l12024 5F2E                                  l10520 5E14  
                                l12112 5D20                                  l13000 08D8  
                                l10418 707A                                  l11330 643C  
                                l12050 710E                                  l11082 350C  
                                l11074 33D8                                  l11090 35CE  
                                l11058 3364                                  l10530 5EA6  
                                l10522 5E40                                  l10514 5DEC  
                                l11402 569C                                  l12114 5D7A  
                                l11340 7186                                  l10348 649E  
                                l12212 3DB4                                  l12132 3C34  
                                l12124 3BF6                                  l10436 70B6  
                                l11500 672E                                  l12028 5F70  
                                l12052 7116                                  l11076 347E  
                                l11092 35EC                                  l11068 33BC  
                                l10540 5ED0                                  l11420 5708  
                                l13012 09B2                                  l12070 780A  
                                l10622 7510                                  l12302 3F92  
                                l12230 3E1A                                  l12222 3DFE  
                                l12150 3C92                                  l10454 76C0  
                                l10446 76A0                                  l10462 76F8  
                                l11502 6734                                  l11510 6766  
                                l12046 70D0                                  l10294 75DA  
                                l10550 6548                                  l11086 354C  
                                l10534 5EB6                                  l10526 5E66  
                                l10518 5E00                                  l11350 5942  
                                l11430 5752                                  l11336 7160  
                                l10392 64FC                                  l10608 03EA  
                                l12208 3DB0                                  l12136 3C38  
                                l10552 6560                                  l10720 51AC  
                                l11096 3600                                  l10528 5E92  
                                l11416 56EA                                  l13200 1558  
                                l13112 1092                                  l13024 0A9E  
                                l11168 5BB6                                  l10618 74DA  
                                l12314 3FD4                                  l12306 3F96  
                                l12242 3E5C                                  l12170 3CF2  
                                l12162 3CB4                                  l12146 3C82  
                                l10458 76E8                                  l11282 637C  
                                l11258 699C                                  l11514 677A  
                                l11506 6758                                  l10562 65C2  
                                l10554 6566                                  l10570 6B00  
                                l10810 2B92                                  l11426 5734  
                                l13114 10B6                                  l13050 0C78  
                                l10644 67C8                                  l10636 67AA  
                                l12252 3EA6                                  l11460 6300  
                                l11452 62D6                                  l10572 6B18  
                                l10820 2C14                                  l11356 597C  
                                l11524 54EC                                  l11700 743E  
                                l12500 78C8                                  l13204 1592  
                                l13132 11E2                                  l13124 115A  
                                l13036 0B78                                  l11188 5C20  
                                l12318 3FD8                                  l12238 3E58  
                                l12174 3CF6                                  l12158 3CB0  
                                l11470 6336                                  l11462 6306  
                                l11446 62AE                                  l10750 7330  
                                l10574 6B1E                                  l10902 2ED0  
                                l10830 2C4A                                  l10822 2C1A  
                                l10814 2BE2                                  l11542 5594  
                                l12502 78CE                                  l13230 16F0  
                                l13214 1616                                  l13222 167A  
                                l13062 0D4C                                  l12360 4096  
                                l12344 4064                                  l12336 403E  
                                l12328 4022                                  l12280 3F1A  
                                l12264 3ED4                                  l12256 3EB6  
                                l12184 3D40                                  l12408 46E0  
                                l10680 6196                                  l10840 2C86  
                                l10824 2C24                                  l10808 2B84  
                                l10816 2C00                                  l10760 29BE  
                                l11376 59DC                                  l11560 5616  
                                l11552 55D2                                  l13304 1BD8  
                                l13152 12D8                                  l13144 1266  
                                l13136 1214                                  l13048 0C54  
                                l11802 4F9A                                  l12290 3F64  
                                l11458 62F4                                  l11474 6344  
                                l11490 66EE                                  l12426 4788  
                                l10578 6B62                                  l10922 2F42  
                                l10834 2C72                                  l10818 2C0E  
                                l10762 29D8                                  l10754 299C  
                                l11554 55EA                                  l11546 55B0  
                                l11722 6D14                                  l12506 78F2  
                                l13322 1CCC                                  l13250 17EE  
                                l13242 177E                                  l12356 4092  
                                l12364 409A                                  l12348 4068  
                                l12276 3F16                                  l12268 3ED8  
                                l12196 3D6E                                  l12188 3D50  
                                l11812 6874                                  l11820 68B0  
                                l12436 47F2                                  l10692 0470  
                                l10908 2EF0                                  l10860 2CFE  
                                l10844 2C98                                  l10852 2CCE  
                                l10836 2C7E                                  l10780 2A52  
                                l10764 29DE                                  l10772 29F4  
                                l11396 5662                                  l11556 55F0  
                                l11708 6CCA                                  l11724 6D20  
                                l11660 748C                                  l13324 1D1E  
                                l13156 1312                                  l13148 12A2  
                                l13084 0EBE                                  l13068 0DB2  
                                l11742 4DD6                                  l12294 3F74  
                                l11478 6358                                  l11494 6710  
                                l12446 485C                                  l10870 2D4E  
                                l10862 2D16                                  l10846 2CAE  
                                l10766 29E4                                  l11910 4970  
                                l11718 6D10                                  l13510 27C2  
                                l13502 2776                                  l13406 21D0  
                                l13246 17B8                                  l13238 1742  
                                l13166 1396                                  l11760 4E38  
                                l11744 4DDC                                  l12376 40D4  
                                l12456 48C6                                  l10936 2F94  
                                l10952 2FE6                                  l10856 2CEC  
                                l10776 2A2A                                  l10768 29EA  
                                l11904 48DA                                  l11736 6D5A  
                                l11664 7490                                  l11656 7452  
                                l11832 7008                                  l13520 282A  
                                l13408 21F2                                  l13416 2274  
                                l13360 1E96                                  l13344 1DDE  
                                l13328 1D42                                  l13336 1D70  
                                l13192 14E6                                  l13184 1494  
                                l13168 13BA                                  l13176 141E  
                                l11754 4E22                                  l11818 68AA  
                                l11498 6722                                  l10962 3060  
                                l10954 3004                                  l10866 2D30  
                                l10874 2D56                                  l11906 490C  
                                l11914 49A2                                  l11842 4FE0  
                                l11850 503E                                  l11690 73FE  
                                l11682 73D4                                  l11666 749C  
                                l11826 6FAC                                  l11834 700C  
                                l13514 27E8                                  l13506 279C  
                                l13522 283C                                  l13442 249C  
                                l13362 1EAA                                  l13258 1874  
                                l13274 1934                                  l13282 19B8  
                                l13098 0FA8                                  l12722 36F2  
                                l12490 72B6                                  l11780 4E9E  
                                l11748 4DFA                                  l10884 2DFA  
                                l10876 2DB2                                  l10796 2B1E  
                                l10788 2ADE                                  l11908 493E  
                                l11916 49BA                                  l11852 505A  
                                l11676 74C8                                  l13436 2428  
                                l13364 1ECE                                  l13196 1522  
                                l12900 0242                                  l12660 05D2  
                                l11774 4E76                                  l12398 4676  
                                l10990 3182                                  l10982 311E  
                                l10974 30C8                                  l10958 302C  
                                l11942 4ADA                                  l11934 4A8C  
                                l11918 49EA                                  l11862 50A0  
                                l11846 5018                                  l13438 247A  
                                l13366 1EE2                                  l12806 3A12  
                                l11792 4F52                                  l11768 4E60  
                                l10976 30D4                                  l10968 3090  
                                l11944 4AEC                                  l11952 4B22  
                                l11872 50CC                                  l11848 503A  
                                l11696 7410                                  l13544 2932  
                                l13536 28C6                                  l12816 3A76  
                                l11794 4F58                                  l10994 31BA  
                                l10898 2EA0                                  l11946 4AFE  
                                l11954 4B3A                                  l11882 5136  
                                l11858 506C                                  l12498 78BC  
                                l13546 2954                                  l13394 20E6  
                                l13378 1FB6                                  l12826 3ADE  
                                l12746 3776                                  l12738 3744  
                                l10996 31C6                                  l10988 3176  
                                l11948 4B10                                  l11956 4B4A  
                                l13484 2686                                  l13476 25FE  
                                l13468 257E                                  l12916 02D2  
                                l12908 028A                                  l12836 3B4E  
                                l12756 37E6                                  l12844 3B9C  
                                l11798 4F74                                  l11990 4C68  
                                l11982 4BF8                                  l12918 02F6  
                                l12766 3856                                  l13750 4190  
                                l11896 065E                                  l13488 26B8  
                                l12944 04C8                                  l12928 039A  
                                l12864 00DA                                  l12776 38C6  
                                l11994 4CA0                                  l11986 4C30  
                                l11978 4BC0                                  l13498 2750  
                                l12970 06B2                                  l12786 3936  
                                l13770 422E                                  l12956 05A2  
                                l12980 0766                                  l12892 01F8  
                                l12884 01B0                                  l12876 0168  
                                l12796 39A6                                  l13756 41D6  
                                l11998 4CD8                                  l13870 45E4  
                                l13838 4544                                  l12968 068E  
                                l13858 459A                                  l12988 07EE  
                      __end_of___aldiv 54AC                                  ?_main 0001  
             __size_ofi1_CheckSum_byte 0048                 __size_ofi1_cleanBuffer 003C  
                      __end_of___awdiv 6362                                  _EEADR 000FA9  
                          ?i1_ClearLCD 0001                                  STR_10 FEE9  
                                STR_11 FDAB                                  STR_12 FE7C  
                                STR_20 FE72                                  STR_13 FDF9  
                                STR_21 F4B6                                  STR_14 FDAB  
                                STR_22 F4CF                                  STR_30 F800  
                                STR_31 F0A2                                  STR_15 FD62  
                                STR_23 F084                                  STR_32 F036  
                                STR_40 FFBD                                  STR_16 FCB7  
                                STR_24 F018                                  STR_33 F1CE  
                                STR_41 FD21                                  STR_17 FC1C  
                                STR_25 F1B0                                  STR_34 F19E  
                                STR_42 FD21                                  STR_50 FD2E  
                                STR_18 FB49                                  STR_26 F180  
                                STR_35 F0D7                                  STR_51 FD2E  
                                STR_43 FF2A                                  STR_19 F9D8  
                                STR_27 F0B9                                  STR_36 EF13  
                                STR_28 F6CE                                  STR_52 FF32  
                                STR_44 FF1A                                  STR_60 F8FB  
                      __end_of___awmod 6784                                  STR_37 F4D1  
                                STR_45 FF1A                                  STR_53 FF22  
                                STR_61 FDB7                                  STR_29 F6FD  
                                STR_38 FF71                                  STR_54 FF22  
                                STR_62 FF60                                  STR_46 FEB3  
                                STR_70 FDEE                                  STR_71 FA17  
                                STR_39 FA17                                  STR_63 FEF2  
                                STR_55 FEBC                                  STR_47 FEA1  
                                STR_48 FEA1                                  STR_56 FEAA  
                                STR_72 F7ED                                  STR_80 F7C7  
                                STR_64 EF17                                  STR_57 FEAA  
                                STR_49 FFC7                                  STR_81 FBA4  
                                STR_65 F92E                                  STR_73 F779  
                                STR_58 FA3D                                  STR_66 FEE0  
                                STR_90 FB29                                  STR_82 F7A1  
                                STR_74 F615                                  STR_59 FA3D  
                                STR_67 FE8F                                  STR_91 FCA9  
                                STR_75 FA79                                  STR_83 FA09  
                                STR_92 FE8F                                  STR_68 FFB8  
                                STR_76 F972                                  STR_84 F62E  
                                STR_85 FDB7                                  STR_69 FFC2  
                                STR_93 FFA7                                  STR_77 F892  
                                STR_94 FFEC                                  STR_86 FF02  
                                STR_78 FC71                                  STR_87 FF52  
                                STR_95 FF12                                  STR_79 F85C  
                                STR_88 EF17                                  STR_96 FA17  
                                STR_97 FFAD                                  STR_89 F57A  
                                STR_98 FFF0                                  STR_99 FB09  
                      __end_of___ftdiv 5A60                       __end_of_ISNUMBER 0662  
                      __end_of___lldiv 65EE                        __end_of___ftmul 579E  
                                u13000 69FE                                  u13020 6A3E  
                      ___awdiv@divisor 017E                                  u13007 69F4  
                                u13120 67F6                                  u13200 5240  
                      __end_of___llmod 6B8E                                  u13130 682E  
                                u13027 6A34                                  u13060 7506  
                                u13205 5234                        __end_of___fttol 5628  
                                u13127 67EC                                  u13080 7540  
                                u13160 60EC                                  _T2CON 000FCA  
                                u13137 6824                                  u13067 74FC  
                                u13165 60E0                ReadEEPROM_1Byte@address 017C  
                                u13087 7536                                  u13175 618E  
                                u13425 2E4C                                  u14521 5920  
                                u14541 595A                                  u16055 46EA  
                                u17201 1E5C                                  u17025 1730  
                                u14571 5640                                  u17131 1C1E  
                                u12980 69C6                                  u14591 567A  
                                u14751 54C4                                  u14770 5518  
                                u12987 69BC                                  u17181 1E1C  
                                u14775 550E                                  u17271 2396  
                                u17480 292E                                  u17475 2906  
                                u17485 292A                                  u16945 14D4  
                                u16865 1254                                  i1l234 7B86  
                                i1l236 7B70                                  i1l351 7C70  
                      __end_of___lwmod 790A                                  i1l450 773A  
                                i1l348 7C4A                                  i1l455 6F14  
                                i1l464 0518                                  i1l449 7736  
                                i1l457 6F6A                                  i1l466 0520  
                                i1l467 0528                        ___awdiv@counter 0180  
                                _RCREG 000FAE                                  _RCSTA 000FAB  
                                _SPBRG 000FAF                             _BufferCopy 6784  
                                _BedON EE15                           InitUART@Baud 0189  
                                _TXREG 000FAD                                  _TXSTA 000FAC  
                        ??_One_Config1 0186                          ??_One_Config2 0186  
                  _ConfigureOscillator 7CFA                        __end_of_delayUS 75BE  
                     _InternalADC_Read 77DC                                  _AuxON EDF5  
                        __CFG_WRT0$OFF 000000                            i1delayUS@US 0001  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                  ___lmul@multiplicand 0180                          __CFG_WRT3$OFF 000000  
                        __CFG_WRT4$OFF 000000                          __CFG_WRT5$OFF 000000  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                       __CFG_EBTR3$OFF 000000                         __CFG_EBTR4$OFF 000000  
                       __CFG_EBTR5$OFF 000000                           InitUART@temp 0196  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                                  _fanON EE55  
                     __end_of_UARTchar 73D2                        __end_of_readI2C 04D4  
                           SetBaud@buf 0200                         __CFG_EBTRB$OFF 000000  
                      __end_of_dpowers ED45                       __end_of_RTC_INIT 071A  
                      __end_of_isdigit 058A                          ___ftpack@sign 0180  
                     Command@ADC_Value 05C8                         ??_LCDPrintChar 018A  
                        ??_SendLCDbyte 0187                        __end_of_low_isr 0366  
          I2C_Read_At_Address@Register 017F                                  tablat 000FF5  
                        ?_SetLCDcursor 018A                    __size_of_LCD_Scroll 0248  
                     __end_of_PWM_init 05DC                            ?_UARTstring 0187  
              InternalADC_Read@channel 018F                                  status 000FD8  
                      __end_of_sprintf 3684                       __end_of_ClearLCD 067C  
                 __size_of_cleanBuffer 0058                  __end_of_GetMemoryBaud 5908  
                       __CFG_PBADEN$ON 000000                   ?_ConfigureOscillator 0001  
                   StringContains@That 017E                     StringContains@This 017C  
                   __size_ofi1_delayUS 004C                             SetDuty@LSB 01BE  
                           SetDuty@MSB 01BD                        __initialization 71CE  
                   StringAddEqual@temp 0200                    _I2C_Read_Sequential 6362  
                __end_of_EEPROM_UNLOCK 06E6                           __end_of_main 4606  
                     __end_of_InitUART 531C                       ??_UARTstringWAIT 0189  
                        ??_SetContrast 01B5                 __end_of_LCDPrintString 7548  
                       __CFG_OSC$HSPLL 000000                __end_of_LCDScreenUpdate 3BCE  
            __size_of_ContrastPWM_init 000C                          _LCDclearCount 01D9  
                               ??_main 01CE                      ??_GetMemoryParity 0182  
                        ___fttol@sign1 01AF                         SetDuty@tempPR2 01BA  
                      Send_Config1@pin 018D                        Send_Config2@pin 018B  
                     __end_of_ResetI2C 05B4                        SendLCDbyte@data 0187  
                        __activetblptr 000003                 Multiple_I2C_Read@rdptr 017D  
                           _Parse_Time 3BCE                        low_isr@LCD_TEMP 00C4  
                 ?_I2C_Read_Sequential 0181                       i1CheckSum_byte@i 0007  
                       _StringAddEqual 4FAC                                 _ADCON0 000FC2  
                               _ADCON1 000FC1                                 _ADCON2 000FC0  
                  __size_ofi1_UARTchar 006A                       ___llmod@dividend 0189  
                               STR_100 F950                                 STR_101 F6E7  
                               STR_102 FA89                                 STR_110 F8A4  
                               STR_103 FC8D                                 STR_111 FBD1  
                               STR_120 FF89                                 STR_104 FBE0  
                               STR_112 F86E                                 STR_200 F3BE  
                               STR_121 FE04                                 STR_201 FCFA  
                               STR_105 FC7F                                 STR_113 F7DA  
                               STR_122 EF17                                 STR_130 FFA1  
                               STR_106 FBC2                                 STR_114 FAC9  
                               STR_210 F8EA                                 STR_202 F45E  
                               _ADRESH 000FC4                                 STR_131 FF9B  
                               STR_211 FD7B                                 STR_203 FAF9  
                               STR_107 FAD9                                 STR_115 FA19  
                               STR_123 F65E                                 STR_116 FA19  
                               STR_212 FFB3                                 STR_220 FF4A  
                               STR_132 FE54                                 STR_300 FE4A  
                               STR_108 FBB3                                 STR_124 FA29  
                               STR_204 F4EF                                 STR_140 F43F  
                               _EEADRH 000FAA                                 STR_133 FA17  
                               STR_125 FD55                                 STR_141 FC63  
                               STR_301 FB19                                 STR_205 FAB9  
                               STR_109 F983                                 STR_117 F713  
                               STR_221 F2F0                                 STR_213 EE89  
                               STR_118 FDB7                                 STR_126 FE8F  
                               STR_142 FF9B                                 STR_134 FFA1  
                               STR_230 FFF8                                 STR_302 FF3A  
                               STR_310 FD3B                                 STR_214 FCD3  
                               STR_150 FB68                                 STR_222 FA99  
                               STR_206 F499                                 _ADRESL 000FC3  
                               STR_119 FF02                                 STR_135 FD05  
                               STR_143 FEB7                                 STR_127 FFA7  
                               STR_223 FFDB                                 STR_303 FF0A  
                               STR_215 FECE                                 STR_207 F90C  
                               STR_151 F826                                 STR_311 F73D  
                               STR_231 F2CB                     _LCDdisplayFeedback 7C7C  
                               STR_224 F6CE                                 STR_152 EF17  
                               STR_216 FE36                                 STR_128 FFEC  
                               STR_312 FF7C                                 STR_160 FF6E  
                               STR_304 FDE3                                 STR_208 F751  
                               STR_320 F595                                 STR_240 F47C  
                               STR_144 F41F                                 STR_232 F35A  
                               STR_136 F25A                                 STR_217 FC37  
                               STR_305 FD05                                 STR_233 F4D1  
                               STR_129 FF75                                 STR_241 FDC2  
                               STR_209 FD14                                 STR_313 FC55  
                               STR_145 FB95                                 STR_137 FA69  
                               STR_161 F9A5                                 STR_225 F93F  
                               STR_321 F314                                 STR_153 F2A6  
                               STR_314 FD05                                 STR_162 FD05  
                               STR_138 FF9B                                 STR_218 FFE4  
                               STR_250 FF42                                 STR_154 FE5E  
                               STR_242 FE18                                 STR_306 FB39  
                               STR_146 F84A                                 STR_170 F6D1  
                               STR_226 F6A4                                 STR_234 F5C9  
                               STR_322 F337                                 STR_235 F6CE  
                               STR_155 FE8F                                 STR_219 FA17  
                               STR_139 FF2E                                 STR_251 FFD6  
                               STR_243 FF67                                 STR_147 FD07  
                               STR_171 FB86                                 STR_307 F9B6  
                               STR_315 F838                                 STR_227 F68D  
                               STR_163 F50B                                 STR_323 F3DF  
                               STR_156 FF9B                                 STR_252 FFF4  
                               STR_244 FF59                                 STR_180 FEC5  
                               STR_260 FAE9                                 STR_316 FAA9  
                               STR_324 F8C8                                 STR_308 F8B6  
                               STR_228 F646                                 STR_164 F55F  
                               STR_236 F543                                 STR_148 F4D3  
                               STR_172 F11F                                 STR_149 FDB7  
                               STR_317 F838                                 STR_181 FA17  
                               STR_157 FFA1                                 STR_253 FFE8  
                               STR_309 FD9F                                 STR_165 FC0D  
                               STR_173 FA39                                 STR_229 F961  
                               STR_325 F8D9                                 STR_261 F7B4  
                               STR_237 F5FC                                 STR_245 EED2  
                               _EEDATA 000FA8                                 STR_182 FD05  
                               STR_254 FA17                                 STR_158 F4B2  
                               STR_318 FAA9                                 STR_270 FFA7  
                               STR_190 FB77                                 STR_262 FA49  
                               STR_174 F5E3                                 STR_238 F39D  
                               STR_166 F234                                 STR_246 EFDB  
                               STR_319 F6CE                                 STR_183 F55F  
                               STR_271 FA17                                 STR_159 FA17  
                               STR_239 FCED                                 STR_167 F9F9  
                               STR_255 F994                                 STR_247 F728  
                               STR_263 F676                                 STR_191 F5AF  
                               STR_175 EF5B                                 STR_264 FDB7  
                               STR_280 FEFA                                 STR_248 FED7  
                               STR_272 FD6F                                 STR_184 FBFE  
                               STR_256 F78D                                 STR_168 F37C  
                               STR_176 F20A                                 STR_192 EF9D  
                               STR_193 F20A                                 STR_249 FE36  
                               STR_265 FE86                                 STR_273 FE0E  
                               STR_169 FC39                                 STR_257 FBEF  
                               STR_177 F9C7                                 STR_185 F150  
                               STR_281 F0ED                                 STR_266 EF17  
                               STR_178 FE36                                 STR_194 FD48  
                               STR_274 FCE0                                 STR_290 FC47  
                               STR_186 F9E9                                 STR_258 F880  
                               STR_282 F6BB                                 STR_195 FE36  
                               STR_291 FE98                                 STR_179 FE22  
                               STR_275 FD87                                 STR_283 FB59  
                               STR_259 F765                                 STR_267 F527  
                               STR_187 F1DF                                 STR_284 FE68  
                               STR_196 FE2C                                 STR_292 FD93  
                               STR_268 FC9B                                 STR_188 FC2B  
                               STR_276 F91D                                 STR_285 F6CE  
                               STR_269 FE8F                                 STR_197 FFE0  
                               STR_293 FDD8                                 STR_277 FDCD  
                               STR_189 F3FF                                 STR_198 FA17  
                               STR_286 F6A4                                 STR_278 FF83  
                               STR_294 FA59                                 _CCPR1L 000FBE  
                               STR_279 F658                                 STR_199 FD05  
                               STR_287 F68D                                 STR_295 FE40  
                               STR_288 F646                                 STR_296 FFCC  
                               STR_289 F961                                 STR_297 FFD1  
                               STR_298 FF8F                                 STR_299 FF95  
                               _EECON2 000FA7                       ___awdiv@dividend 017C  
                        _READ_RTC_TIME 619A                       __end_of_WriteI2C 70BE  
                      __CFG_BBSIZ$1024 000000                       __end_of___ftpack 5EDE  
                     __end_of___lbtoft 0442                         ??_SetLCDcursor 018B  
                      _ScrollFIFOCount 010C              __size_ofi1_LCDPrintString 006A  
                          OpenI2C@slew 017C                    __end_of_One_Config1 6F14  
                  __end_of_One_Config2 7B58                                 i1l8750 0690  
                               _PARITY 010A                       __end_of___lwtoft 0502  
                            ??_IdleI2C 017C                              ??_GetBaud 0180  
                   __size_of_ReadUSART 0030                                 _OSCCON 000FD3  
            __size_of_IsPrintableASCII 0018                                 _SPBRGH 000FB0  
                        i1_cleanBuffer 036A                                 _BedOFF EE05  
                               _SSPADD 000FC8                                 _SSPBUF 000FC9  
                            ??_Command 01CA                    ?_LCDdisplayFeedback 018E  
                               _Aux2ON EDD5                              ??_InitApp 0186  
                ??_ConfigureOscillator 017C                                 _TX_OLD 00D8  
                  __size_ofi1_ClearLCD 0016                                 _AuxOFF EDE5  
                     ?_Init_I2C_Master 0001   Command@RTC_Battery_Value_LOW_decimal 05D2  
                            ??_OpenI2C 017D                              ??_SetBaud 01C1  
                            ??_SetFreq 0192                              ??_SetDuty 01B5  
                  __end_of_SendLCDbyte 651A                         __CFG_XINST$OFF 000000  
                        InitUART@spbrg 0192                            SetBaud@Baud 01BC  
                     __end_of_high_isr 78AA                                 _Rxdata 0364  
                   __size_of_OpenUSART 0074                         _StringContains 73D2  
                           _SubLightON EE35                                 _Txdata 0400  
                               ___lmul 7148                                 _fanOFF EE45  
                            ??___aldiv 018A                        Command@contrast 05D8  
                               ___wmul 03A6                              ??___awdiv 0180  
             __end_ofi1_PulseEnablePin 055E                         __CFG_STVREN$ON 000000  
                            ??___awmod 0180                              ??___ftdiv 018E  
                            ??___lldiv 0184                              ??___ftmul 019D  
                            ??___llmod 0191                              ??___fttol 01AA  
                      ?_LCDPrintString 018A                       __end_of_init_LCD 5B96  
                            ??___lwmod 0180                           ?i1_ReadUSART 0001  
                               clear_0 71D4                                 clear_1 71E0  
                               clear_2 71EC                                 clear_3 71F8  
                               clear_4 7204                       ___awdiv@quotient 0182  
                            ??_delayUS 0180                        ___awmod@divisor 017E  
                      ___awmod@counter 0180          __size_of_I2C_Write_At_Address 00B0  
                               main@ii 01CF                        Command@tempLONG 05DE  
                  SprintDate@ReturnBuf 01BC                   ??_LCDdisplayFeedback 0190  
                ___ftmul@f3_as_product 01A1                              ??_readI2C 017C  
                  __size_of_UARTstring 00A6                          ?_Send_Config1 0187  
                        ?_Send_Config2 0187                        __CFG_BOREN$BOHW 000000  
                          ?_BufferCopy 0184                    __end_of_SetContrast 60B4  
                            ??_isdigit 017C                  ??_I2C_Read_Sequential 0185  
               __end_of_StringAddEqual 5164                           __mediumconst ECEC  
                    __end_ofi1_delayUS 7BA4                              ??_low_isr 0013  
                      Zero_Config1@pin 0186                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                      Zero_Config2@pin 0186                 __size_of_CheckSum_byte 0060  
                    ??i1_CheckSum_byte 0004                         ?_READ_RTC_TIME 0001  
                            ??_sprintf 01A2                     __size_of_f_Config1 0092  
                           _StartsWith 6CC8                         ?i1_cleanBuffer 0001  
                           _SprintDate 5CBA                            SetFreq@freq 0190  
                           __accesstop 0060                __end_of__initialization 724A  
                          SetFreq@temp 0196               __size_of_SetMemoryParity 0032  
                  StringAddEqual@Input 018B                             ___ftdiv@f1 0188  
                           ___ftdiv@f2 018B                             ___ftdiv@f3 0192  
                            ?_ISNUMBER 0001                 __end_of_StringContains 7450  
                   __size_of_baudUSART 000E                          __end_of_BedON EE25  
                           ___lbtoft@c 0187              __size_of_ReadEEPROM_1Byte 0048  
                          SetDuty@Duty 01B9                             ___ftmul@f1 0197  
                           ___ftmul@f2 019A                          __end_of_AuxON EE05  
                           ___fttol@f1 01A6              __size_of_RTC_Clock_Enable 0050  
                       __pcstackCOMRAM 0001                            SetDuty@temp 01BF  
                         __pidataBANK1 0742                           __pidataBANK2 06AA  
                        __end_of_fanON EE65                              ?_UARTchar 0183  
                         ??_LCD_Scroll 018D                     InitUART@baudconfig 0194  
                            ?_RTC_INIT 0001                   __end_of_LCDPrintChar 06D2  
                     ?_LCDScreenUpdate 0001                      __end_of_ReadUSART 04A4  
                        ?i1_UARTstring 000C                             ___lwtoft@c 0184  
                       ??_Send_Config1 0189                         ??_Send_Config2 0189  
                  __end_of_SubLightOFF EE35                              ?_PWM_init 0001  
                   LCDPrintString@Text 018A                            ?_Parse_Time 017C  
                            ?_ClearLCD 0001                        ?_StringAddEqual 018B  
                          _One_Config1 6E82                            _One_Config2 7B0C  
                        ?_RemoveSpaces 018B                          ReadUSART@data 017C  
                       One_Config1@pin 0186                         One_Config2@pin 0186  
                    __end_of_OpenUSART 7632                       Send_Config1@data 0187  
                     Send_Config2@data 0187                           sprintf@width 01B3  
               __size_of_SetMemoryBaud 00E6                             __pbssBANK0 00D8  
                           __pbssBANK1 0100                             __pbssBANK3 0300  
                           __pbssBANK4 0400                              ?_InitUART 0189  
                          _SendLCDbyte 6440                    SET_RTC_TIME@SetTime 0184  
          RTC_Clock_Enable@tempSeconds 0186                Multiple_I2C_Read@length 017F  
                   __end_of_LCD_Scroll 4DB0                          ??_StringMatch 0180  
                  SetLCDcursor@address 018C                             ??_ISNUMBER 017C  
                            ?_ResetI2C 0001                  WriteEEPROM_1Byte@data 017E  
                      ?_StringContains 017C            __end_of_TXdataBedroomCLOSED ED89  
             __end_of_InternalADC_Read 7844                    __size_of_BufferCopy 00B8  
        __size_of_RTC_TIME_NONMilitary 0082                          _CheckSum_byte 790A  
                         ??i1_UARTchar 000A            __end_of_TXdataBedroomOPENED ED95  
                        RemoveSpaces@i 0266                                ?___lmul 017C  
                  i1CheckSum_byte@This 0001                                ?___wmul 017C  
                    __end_of_f_Config1 6DF0                      Command@PARITYtemp 05D4  
                           ??_UARTchar 0185                            _SetContrast 5FCC  
       I2C_Write_At_Address@I2Caddress 0183                             ??_RTC_INIT 0190  
                              _CCP1CON 000FBD                                _BAUDCON 000FB8  
                 __end_of_SetLCDcursor 0410                         ___lmul@product 0184  
                     _ContrastPWM_init 0736                                _ECCPR1L 000FBB  
                       ??i1_UARTstring 000E                              ?_WriteI2C 0001  
                            ?___ftpack 017C                              ?___lbtoft 0184  
                   __size_of_lowercase 008E                           ??i1_ClearLCD 000F  
                i1CheckSum_byte@Parity 0006                              ?___lwtoft 0184  
                           ??_PWM_init 01C1                                i1l12520 038A  
                              i1l10584 7B6A                                i1l12530 7724  
                              i1l12516 0374                                i1l12606 6C1A  
                              i1l12534 773E                                i1l12528 7714  
                              i1l12536 7756                                i1l12562 6BD4  
                              i1l12538 7768                                i1l12564 6BD6  
                              i1l13604 777C                                i1l11588 7C6C  
                              i1l11598 7C78                                i1l13710 02E8  
                              i1l13608 77AA                                i1l13640 00C6  
                              i1l13632 009E                                i1l13720 031A  
                              i1l13570 6C64                                i1l13562 6C4C  
                              i1l13650 00FA                                i1l13708 02C4  
                              i1l13646 00E8                                i1l13592 05E6  
                              i1l13586 6F6E                                i1l13668 0172  
                              i1l13686 020E                                i1l13678 01DE  
                              i1l13698 025C              __size_of_GetEnteredNumber 01FC  
                       ??_RemoveSpaces 018D                             ??_ClearLCD 018A  
             Command@RTC_Battery_Value 05CA                         StartsWith@That 017E  
                       StartsWith@This 017C                       i1UARTstring@data 000C  
          __end_of_I2C_Read_At_Address 5CBA                                _LCDwait 0109  
                      ??_READ_RTC_TIME 0186                      __end_of_baudUSART 0728  
                  Init_I2C_Master@baud 017E                 GetMemoryBaud@BaudTempH 019E  
               GetMemoryBaud@BaudTempL 01A1                         lowercase@Input 017C  
                              _SSPCON1 000FC6                                _SSPCON2 000FC5  
                      ??i1_cleanBuffer 0005                              ?_high_isr 0001  
                              _SSPSTAT 000FC7                     __end_ofi1_UARTchar 7772  
                          ?_StartsWith 017C                       i1_LCDPrintString 7772  
             GetEnteredNumber@negative 0192                             ??_InitUART 018E  
                              _Aux2OFF EDC5                            ?_SprintDate 01BC  
                __end_ofi1_SendLCDbyte 6C30                                _IdleI2C 06E6  
                              _GetBaud 06F8                              ?_init_LCD 0001  
                     _IsPrintableASCII 067C                           ??_UARTstring 0189  
                              _Command 0000                                _TXdataD EE65  
                              _TXdataE EE71                                _TXdataF EE7D  
               SetMemoryBaud@BaudTempH 01AE                 SetMemoryBaud@BaudTempL 01B1  
                              _InitApp 796A                          ?i1_BufferCopy 0009  
                      SetLCDcursor@Col 018A                __size_ofi1_LCDPrintChar 000E  
                           ??_ResetI2C 0186                                _OpenI2C 0602  
                      SetLCDcursor@Row 018B                                _SetBaud 48CA  
                   __end_ofi1_ClearLCD 06AA                         InitUART@config 0195  
                       ?_CheckSum_byte 017C                                __Hparam 0000  
                              _SetFreq 7632                        _GetMemoryParity 0626  
                              _SetDuty 65EE                                __Lparam 0000  
                              _NowTime 0100                          ?_SET_RTC_TIME 0184  
                  __size_of_Parse_Time 052A                         InitUART@parity 018D  
              i1CheckSum_byte@Odd_Even 0003                      ??_SetMemoryParity 0183  
                    i1cleanBuffer@data 0001                                _Version 0267  
                              ___aldiv 531C                            _SubLightOFF EE25  
                              ___awdiv 6280                        __size_of___lmul 0086  
                              ___awmod 66C0                                ___ftdiv 5908  
                              ___lldiv 651A                    __end_of_StringMatch 74CC  
                      __size_of___wmul 0036                                ___ftmul 5628  
                              ___llmod 6AEA                                ___fttol 54AC  
                        _SetMemoryBaud 60B4                                ___lwmod 78AA  
                      LCDPrintString@c 018C                                __pcinit 71CE  
                           ??_WriteI2C 017D                                _delayUS 7548  
                           ??___ftpack 0181                             ??___lbtoft 0187  
                              __ramtop 0D00                      SetMemoryBaud@Baud 01A2  
                              __ptext0 40F8                                __ptext1 5A60  
                              __ptext2 070A                                __ptext3 7250  
                              __ptext4 7A20                                __ptext5 5B96  
                              __ptext6 05B4                                __ptext7 7632  
                              __ptext8 531C                                __ptext9 3684  
                    SetMemoryBaud@Test 01AA                             ??___lwtoft 0187  
                    GetMemoryBaud@baud 019A                                _readI2C 04A4  
                 __size_ofi1_ReadUSART 002E                      __end_of_hexpowers ED65  
              i1SendLCDbyte@LSB_nibble 000E                                _dpowers ED1D  
                   __end_of_UARTstring 6A46                i1CheckSum_byte@ThisTemp 0004  
                              _isdigit 055E                       ___awmod@dividend 017C  
                     ___aldiv@dividend 0182                                _low_isr 0018  
              i1SendLCDbyte@MSB_nibble 000D                                _sprintf 2988  
                           ??_high_isr 016E                         __pintcode_body 7844  
                 end_of_initialization 724A                      __end_of_octpowers ED1D  
                        ??_cleanBuffer 0180                             ??_init_LCD 018A  
                      i1ReadUSART@data 0001                      __end_of_lowercase 7032  
                              int_func 7844                              i1u1751_20 6C8E  
                            i1u1751_27 6C84                              i1u1752_20 6CBC  
                            i1u1752_27 6CB2                         ??i1_BufferCopy 000F  
                            i1u1763_20 77A2                              i1u1755_20 6F36  
                            i1u1763_27 7798                              i1u1755_27 6F2C  
                            i1u1765_20 77D4                              i1u1757_20 6F66  
                            i1u1765_27 77CA                              i1u1757_27 6F5C  
                            i1u1759_20 6F9C                              i1u1759_27 6F92  
                 __end_of_Send_Config1 5FCC                   __end_of_Send_Config2 7148  
                 GetEnteredNumber@This 0188                __size_ofi1_SetLCDcursor 0026  
                     ??_LCDPrintString 018C                        ___lldiv@divisor 0180  
                       ??_SET_RTC_TIME 018D                   GetEnteredNumber@temp 0193  
        I2C_Read_Sequential@I2Caddress 0185                       _ReadEEPROM_1Byte 7BEC  
                      ___lldiv@counter 0188                       _RTC_Clock_Enable 7A20  
                __size_of_LCDPrintChar 0014                              _RCSTAbits 000FAB  
                     ___aldiv@quotient 018C                                postdec1 000FE5  
                              postdec2 000FDD                         ?_SetMemoryBaud 01A2  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                          i1BufferCopy@i 000F  
                    ?i1_PulseEnablePin 0001                     Parse_Time@TempTime 0180  
              __size_of_PulseEnablePin 003E                        i1_CheckSum_byte 7C34  
                  __size_of_StartsWith 0096                     ??i1_PulseEnablePin 000B  
              i1LCDPrintChar@character 000F                    __size_of_SprintDate 011A  
                         ??_BufferCopy 018A                 __size_of_GetMemoryBaud 016A  
                            _TRISAbits 000F92                              _TRISCbits 000F94  
                            _TRISDbits 000F95                              _TRISEbits 000F96  
                       BufferCopy@from 0184                     low_isr@TEMP_Rxdata 0060  
               __size_of_EEPROM_UNLOCK 0014            __end_of_ConfigureOscillator 7D00  
                            i1_delayUS 7B58                __end_of_GetMemoryParity 0644  
         __end_of_I2C_Write_At_Address 69A0                           _LCDPrintChar 06BE  
                 __end_ofi1_UARTstring 6FA4                            ___ftdiv@exp 0195  
                      ??_CheckSum_byte 017F                              _TXSTAbits 000FAC  
                       __end_of_BedOFF EE15                            _StringMatch 7450  
                  __end_of_cleanBuffer 7A20                         __end_of_Aux2ON EDE5  
                 __end_of_RemoveSpaces 68F0                         __end_of_AuxOFF EDF5  
                __size_of_SetLCDcursor 0034                     __end_of_BufferCopy 683C  
                          ___ftmul@exp 01A0                      __size_of_ISNUMBER 001E  
                  RemoveSpaces@address 0264                          ?_Zero_Config1 0001  
                        ?_Zero_Config2 0001                  CheckSum_byte@Odd_Even 017E  
                       __end_of___lmul 71CE                         __end_of_fanOFF EE55  
             __size_of_Init_I2C_Master 0050                         __end_of___wmul 03DC  
          __end_of_I2C_Read_Sequential 6440                       ??_StringAddEqual 018D  
                    _EnableInternalADC 6A46                      __size_of_UARTchar 0080  
                    __size_of_RTC_INIT 0010            __size_of_LCDdisplayFeedback 0040  
                    GetEnteredNumber@i 0191                     ?_EnableInternalADC 0001  
                     _GetEnteredNumber 4DB0                           ??_Parse_Time 017E  
                  start_initialization 71CE                           ?_One_Config1 0001  
                         ?_One_Config2 0001                              _ReadUSART 0474  
              __size_of_UARTstringWAIT 0080                  SendLCDbyte@LSB_nibble 0189  
                    __size_of_PWM_init 0028                  CheckSum_byte@ThisTemp 017F  
                    __size_of_ClearLCD 001A                       WriteI2C@data_out 017E  
                SendLCDbyte@MSB_nibble 0188                    ??_EnableInternalADC 017C  
                           ?i1_delayUS 0001           __end_of_TXToiletAlexBathroom ED71  
                         ?_SendLCDbyte 0186                       ??_StringContains 0180  
             __end_of_ContrastPWM_init 0742                           _SetLCDcursor 03DC  
                            _OpenUSART 75BE                        ___llmod@divisor 018D  
                    __size_of_InitUART 01B8                        ___llmod@counter 0191  
                    i1BufferCopy@count 000D                         i1_LCDPrintChar 0728  
                    i1BufferCopy@shift 000E                         Command@channel 05DA  
                        _GetMemoryBaud 579E                              _Scroll_10 00DA  
              __end_ofi1_CheckSum_byte 7C7C                     SprintDate@Military 01C7  
                      ??_SetMemoryBaud 01A6              StringAddEqual@firstnumber 0264  
                    ?_InternalADC_Read 018B                     __end_of_Parse_Time 40F8  
                    __size_of_ResetI2C 002A                         ??_Zero_Config1 0186  
                       ??_Zero_Config2 0186                               ??___lmul 0184  
                        _EEPROM_UNLOCK 06D2                               ??___wmul 0180  
                   ??_InternalADC_Read 018D              __end_of_EnableInternalADC 6AEA  
                         ?_SetContrast 0001                            __pdataBANK1 01D5  
                          __pdataBANK2 0267                       __CFG_LPT1OSC$OFF 000000  
             __end_ofi1_LCDPrintString 77DC               __end_of_IsPrintableASCII 0694  
             WriteEEPROM_1Byte@address 017C                              _f_Config1 6D5E  
                    __size_of_WriteI2C 008C                     SetContrast@tempPR2 01B9  
                    __size_of___ftpack 010A                      __size_of___lbtoft 0032  
                 __end_ofi1_BufferCopy 6CC8                  LCDPrintChar@character 018A  
                     cleanBuffer@count 017E           __end_of_RTC_TIME_NONMilitary 72D2  
                          __pbssCOMRAM 0027                             ?_ReadUSART 0001  
                    __size_of___lwtoft 002E                          __pcstackBANK0 0060  
                        __pcstackBANK1 016E                          __pcstackBANK2 0200  
                        __pcstackBANK5 0500                   __end_of_SET_RTC_TIME 48CA  
                  __end_of__stringdata FFFE               __size_of_LCDScreenUpdate 054A  
                         _isdigit$2730 017D                  __size_of_Send_Config1 00EE  
                __size_of_Send_Config2 008A                           ??_StartsWith 0180  
                            _baudUSART 071A                     __end_of_SubLightON EE45  
                         ??_SprintDate 01C8                        _SetMemoryParity 0442  
                          _cleanBuffer 79C8                               ?_IdleI2C 0001  
                     ?_GetMemoryParity 0001                               ?_GetBaud 017C  
               __end_ofi1_LCDPrintChar 0736                             ?_OpenUSART 017C  
                       LCD_Scroll@This 018B                      __size_of_high_isr 78A2  
                          sprintf@_val 01B5                            sprintf@flag 01BA  
                          sprintf@prec 01B1                               ?_Command 01C8  
                       i1_SetLCDcursor 05DC          I2C_Read_At_Address@I2Caddress 0181  
                             ?_InitApp 0001                      __size_of_init_LCD 0136  
                       ?_GetMemoryBaud 0182                               ?_OpenI2C 017C  
                             ?_SetBaud 01BC                               ?_SetFreq 0190  
                             ?_SetDuty 0001                  SprintDate@DisplayTime 01BE  
                       ?_EEPROM_UNLOCK 0001                              __pintcode 0008  
                        __pmediumconst ECEC                               ?___aldiv 0182  
                             ?___awdiv 017C                              __ptext100 7B58  
                            __ptext101 6C30                              __ptext102 036A  
                            __ptext103 067C                               ?___awmod 017C  
                      _TXdataLabCLOSED EDAD                               ?___ftdiv 0188  
                             ?___lldiv 017C                               ?___ftmul 0197  
                             ?___llmod 0189                               ?___fttol 01A6  
                             ?___lwmod 017C                         _PulseEnablePin 7CBC  
                      _TXdataLabOPENED EDB9                            __pintcodelo 0018  
                             ?_delayUS 017C                     __end_of_StartsWith 6D5E  
                 _I2C_Write_At_Address 68F0                             ?_f_Config1 0001  
                   __end_of_SprintDate 5DD4                               ?_readI2C 0001  
                     RemoveSpaces@That 0200               I2C_Read_Sequential@rdptr 0182  
                     RemoveSpaces@This 018B                               _ECCP1CON 000FBA  
                         _Send_Config1 5EDE                           _Send_Config2 70BE  
                    _WriteEEPROM_1Byte 7BA4                               ?_isdigit 0001  
                    ??_Init_I2C_Master 017E               __end_of_ReadEEPROM_1Byte 7C34  
                             ?_low_isr 0001                     ?_WriteEEPROM_1Byte 017C  
             __end_of_RTC_Clock_Enable 7A70                              _hexpowers ED45  
                __end_of_READ_RTC_TIME 6280                  __size_ofi1_UARTstring 0090  
                             ?_sprintf 0192             UARTchar@NinethBit_override 0183  
                           ?_baudUSART 0001                            ??i1_delayUS 0005  
                           lowercase@i 017F                              delayUS@US 017C  
                __end_ofi1_cleanBuffer 03A6                 __end_ofi1_SetLCDcursor 0602  
         __size_of_I2C_Read_At_Address 0124                        ___aldiv@divisor 0186  
                      ?i1_LCDPrintChar 0001                         Parse_Time@This 017C  
                __size_of_RemoveSpaces 00B4                    ??_WriteEEPROM_1Byte 017F  
                      ___aldiv@counter 018A                         ___wmul@product 0180  
                       Parse_Time@temp 017F                              _octpowers ECED  
                             _IPR1bits 000F9F                               _PIE1bits 000F9D  
                         cleanBuffer@i 0183                            _bufferCount 00D9  
                             _ISNUMBER 0644             __end_of_TXToiletMyBathroom ED7D  
                            _lowercase 6FA4                               _PIR1bits 000F9E  
                             _PIR2bits 000FA1                GetMemoryBaud@BaudTempMH 019F  
              GetMemoryBaud@BaudTempML 01A0                       ?i1_CheckSum_byte 0001  
               __end_of_PulseEnablePin 7CFA                               _RCONbits 000FD0  
                     __CFG_WDTPS$32768 000000             __size_of_EnableInternalADC 00A4  
                             _UARTchar 7352                               _RTC_INIT 070A  
                        ??i1_ReadUSART 0001                      i1SendLCDbyte@data 000C  
            ReadEEPROM_1Byte@GIEstatus 0181                  ?_I2C_Write_At_Address 017F  
                 _TXToiletAlexBathroom ED65              __end_of_WriteEEPROM_1Byte 7BEC  
                          __stringdata EE89                 __size_ofi1_SendLCDbyte 00A2  
                    ___wmul@multiplier 017C                           i1_UARTstring 6F14  
                             _PWM_init 05B4              EnableInternalADC@channels 017D  
                            main@count 01D4                               _ClearLCD 0662  
                       _UARTstringWAIT 72D2                            ??_ReadUSART 017C  
              __end_of_SetMemoryParity 0474                        StringAddEqual@i 0265  
                      StringAddEqual@j 0266                           _RemoveSpaces 683C  
                 __size_of_One_Config1 0092                   __size_of_One_Config2 004C  
            __size_ofi1_PulseEnablePin 002E                   __end_of_Zero_Config1 6E82  
                 __end_of_Zero_Config2 7B0C                      ___lmul@multiplier 017C  
                            copy_data0 721E                              copy_data1 723E  
                             _InitUART 5164                SetMemoryBaud@BaudTempMH 01AF  
              SetMemoryBaud@BaudTempML 01B0                       OpenI2C@sync_mode 017D  
                      ?i1_SetLCDcursor 000F                            ??_OpenUSART 017E  
                      ??_GetMemoryBaud 0186                      ??_LCDScreenUpdate 018E  
                     __size_of_IdleI2C 0012                       __size_of_GetBaud 0012  
                      OpenUSART@config 0181                  i1SetLCDcursor@address 0011  
                 __size_of_SendLCDbyte 00DA                             _EECON1bits 000FA6  
              __end_of_TXdataLabCLOSED EDB9                               __Hparam1 0000  
                         ?_StringMatch 017C                       __size_of_Command 2988  
             __end_of_GetEnteredNumber 4FAC                        ??_EEPROM_UNLOCK 017C  
                             _ResetI2C 058A                       i1BufferCopy@from 0009  
                     __size_of_InitApp 005E                               __Lparam1 0000  
              __end_of_TXdataLabOPENED EDC5                             ?_lowercase 017C  
                     __size_of_OpenI2C 0024                   _RTC_TIME_NONMilitary 7250  
                             _Scroll_1 010E                               _Scroll_2 011E  
                             _Scroll_3 012E                               _Scroll_4 013E  
                             _Scroll_5 014E                               _Scroll_6 015E  
                             _Scroll_7 0027                               _Scroll_8 0037  
                             _Scroll_9 00EA                       __size_of_SetBaud 029E  
                       i1cleanBuffer@i 0008                       __size_of_SetFreq 006C  
                     __size_of_SetDuty 00D2                        ?_PulseEnablePin 0001  
                     __size_of___aldiv 0190                     i1cleanBuffer@count 0003  
                     __size_of___awdiv 00E2                  __size_ofi1_BufferCopy 0098  
                     __size_of___awmod 00C4                       __size_of___ftdiv 0158  
                      cleanBuffer@data 017C                       __size_of___lldiv 00D4  
                     __size_of___ftmul 0176                       __size_of___llmod 00A4  
                     __size_of___fttol 017C                       __size_of___lwmod 0060  
          I2C_Read_Sequential@Register 0181                               _WriteI2C 7032  
                        SetBaud@Parity 01C0                               ___ftpack 5DD4  
                             ___lbtoft 0410                  __size_of_SET_RTC_TIME 02C4  
                 __size_of_SetContrast 00E8                       __size_of_delayUS 0076  
                          ??_f_Config1 0186                 __end_of_UARTstringWAIT 7352  
                             ___lwtoft 04D4                             sprintf@idx 01A8  
                     __size_of_readI2C 0030                      SET_RTC_TIME@Error 0198  
                  __end_ofi1_ReadUSART 0530                       __size_of_isdigit 002C  
                     __size_of_low_isr 034E                          ISNUMBER@ascii 017C  
                             __ptext10 06BE                               __ptext11 796A  
                             __ptext20 73D2                               __ptext12 6A46  
                             __ptext21 4FAC                               __ptext13 0736  
               LCDdisplayFeedback@Text 018E                               __ptext30 5DD4  
                             __ptext22 6CC8                               __ptext14 7CFA  
                             __ptext31 48CA                               __ptext23 5CBA  
                             __ptext15 0000                               __ptext40 7BA4  
                             __ptext32 2988                               __ptext24 65EE  
                             __ptext16 6FA4                               __ptext41 06D2  
                             __ptext33 055E                               __ptext25 5FCC  
                             __ptext17 04D4                               __ptext50 7AC0  
                             __ptext42 579E                               __ptext34 03A6  
                             __ptext26 0410                               __ptext18 78AA  
                             __ptext51 7B0C                               __ptext43 7BEC  
                             __ptext35 6AEA                               __ptext27 54AC  
                             __ptext19 7450                               __ptext60 683C  
                             __ptext52 5EDE                               __ptext44 5164  
                             __ptext36 72D2                               __ptext28 5628  
                             __ptext61 619A                               __ptext53 6D5E  
                             __ptext45 071A                               __ptext37 0442  
                             __ptext29 5908                               __ptext70 3BCE  
                             __ptext62 058A                               __ptext54 6DF0  
                             __ptext46 651A                               __ptext38 0626  
                             __ptext71 7C7C                               __ptext63 7A70  
                             __ptext55 6E82                               __ptext47 0474  
                             __ptext39 60B4                               __ptext80 79C8  
                             __ptext72 03DC                               __ptext64 0602  
                             __ptext56 4606                               __ptext48 75BE  
                             __ptext81 77DC                               __ptext73 74CC  
                             __ptext65 6362                               __ptext57 66C0  
                             __ptext49 70BE                     READ_RTC_TIME@Error 018D  
                             __ptext90 6F14                               __ptext82 69A0  
                             __ptext74 0662                               __ptext66 7032  
                             __ptext58 6280                               __ptext91 7708  
                             __ptext83 7352                               __ptext75 6440  
                             __ptext67 06E6                               __ptext59 68F0  
                             __ptext92 7C34                               __ptext84 790A  
                             __ptext76 7CBC                               __ptext68 769E  
                             __ptext93 05DC                               __ptext85 0644  
                             __ptext77 7548                               __ptext69 04A4  
                             __ptext94 0502                               __ptext86 4DB0  
                             __ptext78 4B68                               __ptext95 7772  
                             __ptext87 7148                               __ptext79 6784  
                             __ptext96 0728                               __ptext88 06F8  
                             __ptext97 0694                               __ptext98 6B8E  
                             __ptext99 0530                          SetBaud@status 0232  
                             _high_isr 0008                            ??_baudUSART 017C  
                     __size_of_sprintf 0CFC                   IsPrintableASCII@data 0001  
                            low_isr@rx 00D7                               _init_LCD 5A60  
                    ?_ContrastPWM_init 0001                          i1_SendLCDbyte 6B8E  
        RTC_TIME_NONMilitary@temphours 0189                          __size_of_main 050E  
                             delayUS@i 0181                               delayUS@j 0185  
                   ??_ContrastPWM_init 01C1                           i1_BufferCopy 6C30  
         __size_of_ConfigureOscillator 0006                  __end_of_CheckSum_byte 796A  
                ?_RTC_TIME_NONMilitary 0001                           _SET_RTC_TIME 4606  
                       CheckSum_byte@i 0182                      _Multiple_I2C_Read 769E  
                         BufferCopy@to 0186                 ??_I2C_Write_At_Address 0181  
                           _LCD_Scroll 4B68             __end_of_LCDdisplayFeedback 7CBC  
                   ?_Multiple_I2C_Read 017D                      ?i1_LCDPrintString 000F  
                   main@MemoryBurnflag 01CE             __size_of_WriteEEPROM_1Byte 0048  
              __size_of_LCDPrintString 007C           I2C_Write_At_Address@Register 017F  
                    ?_IsPrintableASCII 0001                        ?_UARTstringWAIT 0187  
                  CheckSum_byte@Parity 0181                     ??i1_LCDPrintString 0011  
                         Command@Input 01C8                             _INTCONbits 000FF2  
                   ??_IsPrintableASCII 0001              __size_of_InternalADC_Read 0068  
                  ??_Multiple_I2C_Read 0180                         OpenUSART@spbrg 017C  
                     ?_SetMemoryParity 0001           __size_of_I2C_Read_Sequential 00DE  
                         UARTchar@data 0186                        StringMatch@That 017E  
                      StringMatch@This 017C           i1UARTchar@NinethBit_override 0008  
                             isdigit@c 017E  Command@RTC_Battery_Value_HIGH_decimal 05CC  
                GetMemoryParity@Parity 0182                               intlevel1 0000  
                             intlevel2 0000                 i1SendLCDbyte@isCommand 000B  
                            sprintf@ap 01AF                              sprintf@sp 0192  
                         ?_cleanBuffer 017C                         ?i1_SendLCDbyte 000B  
                  _TXdataBedroomCLOSED ED7D                       ___lwmod@dividend 017C  
                     SET_RTC_TIME@temp 0191                       ___lldiv@dividend 017C  
                    _TXdataFrontCLOSED ED95                  SetMemoryParity@Parity 0184  
                  _TXdataBedroomOPENED ED89                      READ_RTC_TIME@temp 0186  
                             low_isr@i 00D4                               low_isr@j 00D6  
                    _TXdataFrontOPENED EDA1                            ??_lowercase 017E  
            __end_of_Multiple_I2C_Read 7708                             i1_UARTchar 7708  
                          BufferCopy@i 018A                  __end_of_SetMemoryBaud 619A  
                      _Init_I2C_Master 7A70                            i1_ReadUSART 0502  
                  _I2C_Read_At_Address 5B96                         i1BufferCopy@to 000B  
                          Command@duty 05DC                             i1_ClearLCD 0694  
                             sprintf@c 01B9                               sprintf@f 0194  
            RTC_TIME_NONMilitary@Error 0187                       ___lldiv@quotient 0184  
                __size_of_Zero_Config1 0092                  __size_of_Zero_Config2 004C  
                      ___lwmod@divisor 017E                        ___lwmod@counter 0180  
                         ___aldiv@sign 018B                      ?_ReadEEPROM_1Byte 017C  
            I2C_Read_Sequential@length 0184                            _SSPCON1bits 000FC6  
                     ??i1_LCDPrintChar 000F                            _SSPCON2bits 000FC5  
                _ScrollDisplayPosition 010B                      ?_RTC_Clock_Enable 0001  
                     i1_PulseEnablePin 0530                      CheckSum_byte@This 017C  
              __size_of_StringAddEqual 01B8                         i1UARTchar@data 000B  
                           Command@buf 0500                     ??_ReadEEPROM_1Byte 017E  
            __end_of_TXdataFrontCLOSED EDA1                     ??_RTC_Clock_Enable 0186  
                  SetMemoryParity@Test 0183                   ?_I2C_Read_At_Address 017F  
                 SendLCDbyte@isCommand 0186              __end_of_TXdataFrontOPENED EDAD  
                    i1SetLCDcursor@Col 000F                             _UARTstring 69A0  
                    i1SetLCDcursor@Row 0010                 ??_RTC_TIME_NONMilitary 0186  
                         _USART_Status 010D                        BufferCopy@count 0188  
                 __size_of_StringMatch 007C  
